openapi: 3.0.1
info:
  title: realCity Query Server API
  description: Specification for the realCity Query Server API.
  version: 1.0.1
servers:
  - description: BKK FUTÁR
    url: https://futar.bkk.hu/api/query/v1/ws
security:
- ApiKeyQuery: []
paths:
  /{dialect}/api/where/alert-search:
    get:
      operationId: searchAlerts
      parameters:
      - name: query
        in: query
        description: A keresési feltétel, amit a zavar fejlécével, leírásával, vagy azonosítójával
            illesztünk.
        schema:
          type: string
        example: BKK_bkkinfo-75694
      - name: start
        in: query
        description: A keresés időintervallumának eleje epoch másodpercben.
        schema:
          type: integer
          format: int64
        example: 1625695260
      - name: end
        in: query
        description: A keresési időintervallum vége epoch másodpercben.
        schema:
          type: integer
          format: int64
        example: 1625695260
      - name: minResult
        in: query
        description: A visszaadott elemek minimális száma.
        schema:
          type: integer
          format: int32
          default: 5
        example: 5
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszatér a `query` paraméterben megadott keresési feltételnek megfelelő
              zavarokkal, amik aktívak a megadott időintervallumnban.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSearchMethodResponse'
  /{dialect}/api/where/arrivals-and-departures-for-location:
    get:
      operationId: getArrivalsAndDeparturesForLocation
      parameters:
      - name: groupLimit
        in: query
        description: Menetrendi adatok maximális száma egy csoportban.
        schema:
          type: integer
          format: int32
          default: 4
        example: 2
      - name: clientLon
        in: query
        description: A kliens hosszúsági koordinátája.
        schema:
          type: number
          format: double
          default: 0
        example: 19.049086
      - name: clientLat
        in: query
        description: A kliens szélességi koordinátája.
        schema:
          type: number
          format: double
          default: 0
        example: 47.47375
      - name: minutesBefore
        in: query
        description: A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul.
        schema:
          type: integer
          format: int32
          default: 2
        example: 2
      - name: minutesAfter
        in: query
        description: A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget.
        schema:
          type: integer
          format: int32
          default: 30
        example: 30
      - name: stopId
        in: query
        description: A megállók azonosítóinak listája, amelyekhez a lekérést végezzük.
        schema:
          type: array
          items:
            type: string
        example: BKK_F01029,BKK_F01029
      - name: includeRouteId
        in: query
        description: A válasz szűrésére használt járatok azonosítóinak listája.
        schema:
          type: array
          items:
            type: string
        example: BKK_VP06,BKK_0090
      - name: time
        in: query
        description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az
            aktuális szerveridő.
        schema:
          type: integer
          format: int64
        example: 1625740980
      - name: onlyDepartures
        in: query
        description: Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek
            a válaszban.
        schema:
          type: boolean
          default: true
        example: false
      - name: limit
        in: query
        description: A visszaadott indulási és érkezési idők listájának maximális hossza.
        schema:
          type: integer
          format: int32
          default: 60
        example: 60
      - name: lat
        in: query
        description: A helyszín középpontjának szélessgéi koordinátája.
        schema:
          type: number
          format: float
        example: 47.4973131430789
      - name: lon
        in: query
        description: A helyszín középpontjának hosszúsági koordinátája.
        schema:
          type: number
          format: float
        example: 19.064639534671457
      - name: latSpan
        in: query
        description: 'A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`).'
        schema:
          type: number
          format: float
        example: 0.013365429598373169
      - name: lonSpan
        in: query
        description: 'A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`).'
        schema:
          type: number
          format: float
        example: 0.032126676908724505
      - name: radius
        in: query
        description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület
            a középpontól számított `radius` méter távolság mind a négy irányban.
        schema:
          type: integer
          format: int32
          default: 100
        example: 100
      - name: query
        in: query
        description: A válasz szűrésére használt keresési kifejezés.
        schema:
          type: string
      - name: minResult
        in: query
        description: A visszaadott elemek minimális száma.
        schema:
          type: integer
          format: int32
          default: 5
        example: 5
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja egy területhez tartozó érkezési és indulási időket járatazonosítók
              és célállomások szerint csoportosítva.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrivalsAndDeparturesForLocationOTPMethodResponse'
  /{dialect}/api/where/arrivals-and-departures-for-stop:
    get:
      operationId: getArrivalsAndDeparturesForStop
      parameters:
      - name: minutesBefore
        in: query
        description: A lekérdezési időablak a `time` paraméter előtt ennyi perccel indul.
        schema:
          type: integer
          format: int32
          default: 2
        example: 2
      - name: minutesAfter
        in: query
        description: A lekérdezési időablak a `time` paraméter után ennyi perccel ér véget.
        schema:
          type: integer
          format: int32
          default: 30
        example: 30
      - name: stopId
        in: query
        description: A megállók azonosítóinak listája, amelyekhez a lekérést végezzük.
        schema:
          type: array
          items:
            type: string
        example: BKK_F01029,BKK_F01029
      - name: includeRouteId
        in: query
        description: A válasz szűrésére használt járatok azonosítóinak listája.
        schema:
          type: array
          items:
            type: string
        example: BKK_VP06,BKK_0090
      - name: time
        in: query
        description: A lekérdezés kiértékeléséhez használt időpont. Alapértelmezetten az
            aktuális szerveridő.
        schema:
          type: integer
          format: int64
        example: 1625740980
      - name: onlyDepartures
        in: query
        description: Ha igaz akkor csak az érkezési (és előrejelzett érkezési) idők nem szerepelnek
            a válaszban.
        schema:
          type: boolean
          default: true
        example: false
      - name: limit
        in: query
        description: A visszaadott indulási és érkezési idők listájának maximális hossza.
        schema:
          type: integer
          format: int32
          default: 60
        example: 60
      - name: lat
        in: query
        description: A helyszín középpontjának szélessgéi koordinátája.
        schema:
          type: number
          format: float
        example: 47.4973131430789
      - name: lon
        in: query
        description: A helyszín középpontjának hosszúsági koordinátája.
        schema:
          type: number
          format: float
        example: 19.064639534671457
      - name: latSpan
        in: query
        description: 'A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`).'
        schema:
          type: number
          format: float
        example: 0.013365429598373169
      - name: lonSpan
        in: query
        description: 'A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`).'
        schema:
          type: number
          format: float
        example: 0.032126676908724505
      - name: radius
        in: query
        description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület
            a középpontól számított `radius` méter távolság mind a négy irányban.
        schema:
          type: integer
          format: int32
          default: 100
        example: 100
      - name: query
        in: query
        description: A válasz szűrésére használt keresési kifejezés.
        schema:
          type: string
      - name: minResult
        in: query
        description: A visszaadott elemek minimális száma.
        schema:
          type: integer
          format: int32
          default: 5
        example: 5
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Lekéri a megállóhoz tartozó érkezési és indulási időket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrivalsAndDeparturesForStopOTPMethodResponse'
  /{dialect}/api/where/bicycle-rental:
    get:
      operationId: getBicycleRentalStations
      parameters:
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszatér az összes kerékpárkölcsönző állomással.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BicycleRentalMethodResponse'
  /{dialect}/api/where/booking-redirect:
    get:
      operationId: bookingRedirect
      parameters:
      - name: routeId
        in: query
        description: A járat azonosítója.
        schema:
          type: string
        example: BKK_0650
      - name: directionId
        in: query
        description: A járat íránya.
        schema:
          type: string
        example: 1
      - name: tripId
        in: query
        description: A menet azonosítója.
        schema:
          type: string
        example: BKK_ADF5443
      - name: serviceDate
        in: query
        description: A menet üzem napja.
        schema:
          type: string
        example: 20220130
      - name: boardStopId
        in: query
        description: A felszállási megálló azonosítója.
        schema:
          type: string
        example: BKK_064215
      - name: alightStopId
        in: query
        description: A leszállási megálló azonosítója.
        schema:
          type: string
        example: BKK_064215
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      responses:
        "302":
          description: Átírányit a foglalási oldalra.
  /{dialect}/api/where/metadata:
    get:
      operationId: getMetadata
      parameters:
      - name: time
        in: query
        description: A lekérés kiértékelésének időpontja epoch másodpercben (az aktív zavarok
            lekéréséhez szükséges).A szerver ideje az alapértelmezett értéke.
        schema:
          type: integer
          format: int64
        example: 1625666578
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: A szerver metaadataival tér vissza.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataResponse'
  /{dialect}/api/where/multi-route-details:
    get:
      operationId: getMultiRouteDetails
      parameters:
      - name: routeId
        in: query
        description: A lekért járatok azonosítói.
        required: true
        schema:
          type: array
          items:
            type: string
        example: BKK_3040,BKK_3060
      - name: date
        in: query
        description: Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke
            az aktuális nap.
        schema:
          type: string
        example: 20210707
      - name: related
        in: query
        description: Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek
            a válaszban.
        schema:
          type: boolean
          default: false
        example: false
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Az összes járatot visszaadja a megadott azonosítókhoz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiRouteDetailsMethodResponse'
        "400":
          description: A `date` paramétert nem sikerült beolvasni.
        "404":
          description: Ismeretlen járat azonosító.
  /{dialect}/api/where/onboard-depart-search:
    post:
      operationId: searchForOnboardDepartVehicles
      parameters:
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OnboardDepartPosition'
      responses:
        "200":
          description: Visszatér az utas útvonalára illeszkedő járművekkel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardDepartSearchMethodResponse'
  /{dialect}/api/where/plan-trip:
    get:
      operationId: planTrip
      parameters:
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      - name: date
        in: query
        description: A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik).
        schema:
          type: string
        example: 2021-07-09
      - name: time
        in: query
        description: Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik).
        schema:
          type: string
        example: 11:35
      - name: fromPlace
        in: query
        description: Az indulási hely adatai `név::hely` formában. A `név` az adott hely
            tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`).
            A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által
            visszaadott `vertex` azonosítója.
        required: true
        schema:
          type: string
        example: BKK Központi Ügyfélszolgálat::47.4985022,19.0551266
      - name: toPlace
        in: query
        description: Az érkezési hely adatai `név::hely` formában. A `név` az adott hely
            tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`).
            A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által
            visszaadott `vertex` azonosítója.
        required: true
        schema:
          type: string
        example: Mechwart liget::BKK:CSF00195
      - name: mode
        in: query
        description: A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés
            a `BICYCLE,WALK` paraméterekkel kapcsolható be.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/TraverseMode'
        example: TRANSIT,WALK
      - name: shouldBuyTickets
        in: query
        description: Az első járműre szállás előtt történjen-e jegyvásárlás.
        schema:
          type: boolean
        example: true
      - name: showIntermediateStops
        in: query
        description: A válasz tartalmazza-e a járatok által érintett köztes megállókat is.
        schema:
          type: boolean
        example: true
      - name: arriveBy
        in: query
        description: Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel.
        schema:
          type: boolean
        example: true
      - name: wheelchair
        in: query
        description: Az összes járat alacsonypadlós legyen-e.
        schema:
          type: boolean
        example: false
      - name: triangleSafetyFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság.
            0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
        schema:
          type: number
          format: double
        example: 0.5
      - name: triangleSlopeFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal
            síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor
            összegével.
        schema:
          type: number
          format: double
        example: 0.0
      - name: triangleTimeFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság.
            0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
        schema:
          type: number
          format: double
        example: 0.5
      - name: optimize
        in: query
        description: A kereső mire optimalizálja az útvonalakat.
        schema:
          type: string
          default: BEST
          enum:
          - BEST
          - WALK
          - TRANSFERS
        example: BEST
      - name: walkProfile
        in: query
        description: A séta sebességét meghatározó profil.
        schema:
          $ref: '#/components/schemas/WalkProfile'
        example: MID
      - name: numItineraries
        in: query
        description: Legfeljebb hány útvonal szerepeljen a válaszban.
        schema:
          type: integer
          format: int32
        example: 5
      responses:
        "200":
          description: A megadott paraméterekkel tervez útvonalat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanTripResponse'
  /{dialect}/api/where/plan-access:
    get:
      operationId: planAccess
      parameters:
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      - name: date
        in: query
        description: A dátum, amikor a tervezés indul (`arriveBy` esetén érkezik).
        schema:
          type: string
        example: 2021-07-09
      - name: time
        in: query
        description: Az idő, amikor a tervezés indul (`arriveBy` esetén érkezik).
        schema:
          type: string
        example: 11:35
      - name: fromPlace
        in: query
        description: Az indulási hely adatai `név::hely` formában. A `név` az adott hely
            tetszőleges neve, amely az útiterv kiindulási pontjának lesz a neve (`leg.from.name`).
            A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által
            visszaadott `vertex` azonosítója.
        required: true
        schema:
          type: string
        example: BKK Központi Ügyfélszolgálat::47.4985022,19.0551266
      - name: toPlace
        in: query
        description: Az érkezési hely adatai `név::hely` formában. A `név` az adott hely
            tetszőleges neve, amely az útiterv érkezési pontjának lesz a neve (`leg.to.name`).
            A `hely` lehet koordináta `lat,lon` formában, vagy a geocoder API által
            visszaadott `vertex` azonosítója.
        required: true
        schema:
          type: string
        example: Mechwart liget::BKK:CSF00195
      - name: mode
        in: query
        description: A tervező milyen közlekedési módokat használjon. A kerékpár kölcsönzés
            a `BICYCLE,WALK` paraméterekkel kapcsolható be.
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/TraverseMode'
        example: TRANSIT,WALK
      - name: shouldBuyTickets
        in: query
        description: Az első járműre szállás előtt történjen-e jegyvásárlás.
        schema:
          type: boolean
        example: true
      - name: showIntermediateStops
        in: query
        description: A válasz tartalmazza-e a járatok által érintett köztes megállókat is.
        schema:
          type: boolean
        example: true
      - name: arriveBy
        in: query
        description: Érkezési időre tervezzünk-e a megadott `date` és `time` paraméterrel.
        schema:
          type: boolean
        example: true
      - name: wheelchair
        in: query
        description: Az összes járat alacsonypadlós legyen-e.
        schema:
          type: boolean
        example: false
      - name: triangleSafetyFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít a biztonság.
            0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
        schema:
          type: number
          format: double
        example: 0.5
      - name: triangleSlopeFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít az útvonal
            síksága. 0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor
            összegével.
        schema:
          type: number
          format: double
        example: 0.0
      - name: triangleTimeFactor
        in: query
        description: Kerékpáros háromszög módú tervezés esetén mennyire számít a gyorsaság.
            0 és 1 közötti szám, és 1-et kell kiadnia a másik két faktor összegével.
        schema:
          type: number
          format: double
        example: 0.5
      - name: optimize
        in: query
        description: A kereső mire optimalizálja az útvonalakat.
        schema:
          type: string
          default: BEST
          enum:
          - BEST
          - WALK
          - TRANSFERS
        example: BEST
      - name: walkProfile
        in: query
        description: A séta sebességét meghatározó profil.
        schema:
          $ref: '#/components/schemas/WalkProfile'
        example: MID
      - name: numItineraries
        in: query
        description: Legfeljebb hány útvonal szerepeljen a válaszban.
        schema:
          type: integer
          format: int32
        example: 5
      responses:
        "200":
          description: A megadott paraméterekkel tervez megállóba útvonalat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanTripResponse'
  /{dialect}/api/where/references:
    get:
      operationId: getReferences
      parameters:
      - name: agencyId
        in: query
        description: A szolgáltató ID-je.
        schema:
          type: array
          items:
            type: string
        example: BKK
      - name: alertId
        in: query
        description: A zavar ID-je.
        schema:
          type: array
          items:
            type: string
        example: BKK_bkkinfo-81404
      - name: routeId
        in: query
        description: A járat ID-ja.
        schema:
          type: array
          items:
            type: string
        example: BKK_3040
      - name: stopId
        in: query
        description: A megálló ID-ja.
        schema:
          type: array
          items:
            type: string
        example: BKK_F00001
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: ID alapú referencia lekérdezés.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferencesMethodResponse'
  /{dialect}/api/where/route-details-for-stop:
    get:
      operationId: getRouteDetailsForStop
      parameters:
      - name: stopId
        in: query
        description: A lekért megálló azonosítója.
        schema:
          type: string
        example: BKK_F01294
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: A megállóhoz és a testvérmegállóihoz tartozó összes járattal tér vissza.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteDetailsForStopMethodResponse'
        "404":
          description: Ismeretlen megálló azonosító.
  /{dialect}/api/where/route-details:
    get:
      operationId: getRouteDetails
      parameters:
      - name: routeId
        in: query
        description: A járat ID-ja.
        required: true
        schema:
          type: string
        example: BKK_3040
      - name: date
        in: query
        description: Az aktív zavarok lekéréséhez használt dátum. Alapértelmezett értéke
            az aktuális nap.
        schema:
          type: string
        example: 20210707
      - name: related
        in: query
        description: Ha igaz, akkor az útvonalhoz tartozó kapcsolódó útvonalak is szerepelnek
            a válaszban.
        schema:
          type: boolean
          default: false
        example: false
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja a megadott ID-val rendelkező járatot.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteDetailsMethodResponse'
        "400":
          description: Rossz formátumú a `date` paraméter.
        "404":
          description: Az ID-hoz nem található járat.
  /{dialect}/api/where/schedule-for-stop:
    get:
      operationId: getScheduleForStop
      parameters:
      - name: stopId
        in: query
        description: A releváns megállók azonosítói.
        schema:
          type: array
          items:
            type: string
        example: BKK_F01294,BKK_F01294
      - name: date
        in: query
        description: A kért dátum.
        schema:
          type: string
        example: 20210708
      - name: onlyDepartures
        in: query
        description: Igaz esetén az érkezési és előrejelzett érkezési idők ki lesznek hagyva
            a válaszból.
        schema:
          type: boolean
          default: true
        example: false
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja a menetrendet az adott megállóhoz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleForStopOTPMethodResponse'
        "400":
          description: Nem sikerült beolvasni a dátumot.
        "404":
          description: Ismeretlen stopId.
  /{dialect}/api/where/search:
    get:
      operationId: search
      parameters:
      - name: query
        in: query
        description: Szűrőfeltétel, amire illesztve vannak a zavarok, járatok és megállók.
        schema:
          type: string
        example: BKK_bkkinfo-75694
      - name: lat
        in: query
        description: A látható térkép középpontjának szélessgéi koordinátája.
        schema:
          type: number
          format: float
        example: 47.4973131430789
      - name: lon
        in: query
        description: A látható térkép középpontjának hosszúsági koordinátája.
        schema:
          type: number
          format: float
        example: 19.064639534671457
      - name: minResult
        in: query
        description: A visszaadott elemek minimális száma.
        schema:
          type: integer
          format: int32
          default: 5
        example: 5
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja az olyan zavarokat, megállókat és járatokat, amelyek tulajdonságai
              illeszkednek a megadott szűrőrfeltételre.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchMethodResponse'
  /{dialect}/api/where/statistics:
    get:
      operationId: getStatistics
      parameters:
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      responses:
        "200":
          description: Egyszerű végpont hibakereséshez, ami egy "OK" választ ad vissza.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
  /{dialect}/api/where/stops-for-location:
    get:
      operationId: getStopsForLocation
      parameters:
      - name: lat
        in: query
        description: A helyszín középpontjának szélessgéi koordinátája.
        schema:
          type: number
          format: float
        example: 47.4973131430789
      - name: lon
        in: query
        description: A helyszín középpontjának hosszúsági koordinátája.
        schema:
          type: number
          format: float
        example: 19.064639534671457
      - name: latSpan
        in: query
        description: 'A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`).'
        schema:
          type: number
          format: float
        example: 0.013365429598373169
      - name: lonSpan
        in: query
        description: 'A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`).'
        schema:
          type: number
          format: float
        example: 0.032126676908724505
      - name: radius
        in: query
        description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület
            a középpontól számított `radius` méter távolság mind a négy irányban.
        schema:
          type: integer
          format: int32
          default: 100
        example: 100
      - name: query
        in: query
        description: A válasz szűrésére használt keresési kifejezés.
        schema:
          type: string
      - name: minResult
        in: query
        description: A visszaadott elemek minimális száma.
        schema:
          type: integer
          format: int32
          default: 5
        example: 5
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Egy megállólistát ad vissza az adott helyhez. Ha a lat vagy a lon
              null, akkor az összes megálló bekerül a válaszba.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopsForLocationResponse'
  /{dialect}/api/where/ticketing-locations:
    get:
      operationId: getTicketingData
      parameters:
      - name: ifModifiedSince
        in: query
        description: Csak azokat az elemeket adjuk vissza, amik módosultak az itt megadott
            időbélyeg (UNIX időbélyeg másodpercben) után. Ha nincs változás üres listákkal
            tér vissza. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: full
        in: query
        description: Ha igaz, és az adat változott az `ifModifiedSince` query paraméterben
            megadott időpont óta, akkor az összes adat visszaadásra kerül. Ha nincs
            megadva csak a módosult elemek szerepelnek a válaszban. Csak az `ifModifiedSince`
            query paraméterrel együtt szerepelhet, mivel az `If-Modified-Since` fejléc
            minden esetben a teljes választ tartalmazza.
        schema:
          type: boolean
        example: true
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja a jegyértékesítő helyeket és jegytípusokat.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketingMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` query vagy header paraméterben
              megadott időpont óta.
  /{dialect}/api/where/trip-details:
    get:
      operationId: getTripDetails
      parameters:
      - name: vehicleId
        in: query
        description: Amennyiben meg van adva, azon menet érkezik a válaszban, amit az adott
            jármű teljesít.
        schema:
          type: string
        example: BKK_4510
      - name: tripId
        in: query
        description: Ha nincs kitöltve a járműazonosító, az itt megadott azonosítóval rendelkező
            menet lesz a válaszban.
        schema:
          type: string
        example: BKK_C23556161
      - name: date
        in: query
        description: Ha nincs kitöltve a járműazonosító, ezen a dátumon lesz keresve az adott
            azonosítójú menet.
        schema:
          type: string
        example: 20210708
      - name: ifModifiedSince
        in: query
        description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg
            (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz,
            ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja a részletes információit egy menetnek, ami az azonosítója
              és a dátum alapján, vagy az azt teljesítő jármű azonosítója alapján
              lett lekérve.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDetailsOTPMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont
              óta.
        "400":
          description: Nem sikerült beolvasni a dátumot.
        "404":
          description: 'A következő esetek egyike: -Ismeretlen járműazonosító. -Ismereten
              menetazonosító. -A kért menet nem közlekedik az adott napon.'
  /{dialect}/api/where/vehicle-for-trip:
    get:
      operationId: getVehicleForTrip
      parameters:
      - name: tripId
        in: query
        description: A lekért menetek azonosítói.
        required: true
        schema:
          type: array
          items:
            type: string
        example: BKK_C3135012112,BKK_C3135012044
      - name: date
        in: query
        description: A lekért menetrendi napok. Alapértelmezetten az aktuális nap.
        schema:
          type: array
          items:
            type: string
        example: BKK_F01081
      - name: ifModifiedSince
        in: query
        description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg
            (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz,
            ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszatér a megadott menetekhez és menetrendi napokhoz tartozó járművekkel.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleForTripMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont
              óta.
        "400":
          description: A menet azonosítókat és menetrendi napokat tartalmazó tömbök mérete
              nem egyezik.
        "404":
          description: Az egyik menet azonosítóhoz nem található menet.
  /{dialect}/api/where/vehicles-for-location:
    get:
      operationId: getVehiclesForLocation
      parameters:
      - name: query
        in: query
        description: A válasz listát szűrő feltétel, amit tartalmaznia kell a jármű azonosítójának,
            rendszámának vagy a típusának.
        schema:
          type: string
        example: BKK_4510
      - name: lat
        in: query
        description: A terület középpontjának szélességi koordinátája.
        schema:
          type: number
          format: float
        example: 47.4973131430789
      - name: lon
        in: query
        description: A terület középpontjának hosszúsági koordinátája.
        schema:
          type: number
          format: float
        example: 19.064639534671457
      - name: latSpan
        in: query
        description: 'A lekérési terület szélességi íve. (Terület szélessége: `lat +/- latspan`).'
        schema:
          type: number
          format: float
        example: 0.013365429598373169
      - name: lonSpan
        in: query
        description: 'A lekérési terület hosszúsági íve. (Terület hosszúsága: `lon +/- lonSpan`).'
        schema:
          type: number
          format: float
        example: 0.032126676908724505
      - name: radius
        in: query
        description: Ha a `latSpan` vagy a `longSpan` nincs kitöltve, a keresési terület
            a középpontól számított `radius` méter távolság mind a négy irányban.
        schema:
          type: integer
          format: int32
          default: 100
        example: 100
      - name: ifModifiedSince
        in: query
        description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg
            (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz,
            ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszatér az adott területen található összes járművel. Ha a `lat`
              vagy a `lon` null, az összes jármű benne lesz a válaszban.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehiclesForLocationMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont
              óta.
  /{dialect}/api/where/vehicles-for-route:
    get:
      operationId: getVehiclesForRoute
      parameters:
      - name: routeId
        in: query
        description: A lekért járatok azonosítói.
        required: true
        schema:
          type: array
          items:
            type: string
        example: BKK_3040,BKK_3060
      - name: related
        in: query
        description: Tartalmazza-e a válasz a kapcsolódó járatokat is a referenciákban.
        schema:
          type: boolean
          default: false
        example: false
      - name: ifModifiedSince
        in: query
        description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg
            (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz,
            ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: A megadott járat azonosítókhoz tartozó járművekkel tér vissza.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehiclesForRouteMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont
              óta.
        "404":
          description: A járat azonosítóhoz nem található járat.
  /{dialect}/api/where/vehicles-for-stop:
    get:
      operationId: getVehiclesForStop
      parameters:
      - name: stopId
        in: query
        description: A lekért megálló azonosítója.
        required: true
        schema:
          type: string
        example: BKK_F01081
      - name: ifModifiedSince
        in: query
        description: Akkor adunk vissza adatot, ha az módosult az itt megadott időbélyeg
            (UNIX időbélyeg másodpercben) után. Ellenkező esetben HTTP 304 a válasz,
            ha nincs változás. Elsőbbsége van a header paraméterrel szemben.
        schema:
          type: integer
          format: int64
          default: -1
        example: 1625685137
      - name: If-Modified-Since
        in: header
        description: Ha meg van adva, akkor csak abban az esetben érkezik vissza adat, ha
            az változott a megadott időpont óta. Különben HTTP 304 a válasz. A query
            paraméternek elsőbbsége van ezzel szemben.
        schema:
          type: string
          format: date-time
        example: Fri, 21 Jan 2022 09:48:43 GMT+01:00
      - name: appVersion
        in: query
        description: A kliensalkalmazás verziója.
        schema:
          type: string
        example: 1.1.abc
      - name: version
        in: query
        description: Az API verziója.
        schema:
          $ref: '#/components/schemas/ApiVersion'
        example: 2
      - name: dialect
        in: path
        description: Az API referenciáinak dialektusa.
        required: true
        schema:
          $ref: '#/components/schemas/Dialect'
        example: otp
      - name: includeReferences
        in: query
        description: A referenciák típusát határozza meg. `true` vagy `COMPACT` esetén minden
            referencia szerepel, `false` esetén üres. `COMPACT` módban a route referenciák
            `description` mezője kihagyásra kerül.
        style: form
        explode: false
        schema:
          type: array
          items:
            $ref: '#/components/schemas/ReferencesSchema'
          default: "true"
      responses:
        "200":
          description: Visszaadja az összes járművet, ami olyan menetet teljesít, ami tartalmazza
              a megadott megállót.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehiclesForStopMethodResponse'
        "304":
          description: Nem változott az adat az `ifModifiedSince` paraméterben megadott időpont
              óta.
        "404":
          description: A megálló azonosítóhoz nem található megálló.
components:
  schemas:
    ApiVersion:
      type: string
      default: "2"
      enum:
      - "2"
      - "3"
      - "4"
    Dialect:
      type: string
      enum:
      - otp
      - mobile
    ReferencesSchema:
      type: string
      default: "true"
      enum:
      - "true"
      - "false"
      - compact
      - agencies
      - routes
      - trips
      - stops
      - alerts
      - stations
    AlertSearchMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitSearch'
    EffectType:
      type: string
      description: A zavar hatásának típusa.
      enum:
      - NO_SERVICE
      - WARNING
    MobileTransitReferences:
      type: object
      properties:
        agencies:
          type: array
          description: Szolgáltatók referenciáinak listája.
          items:
            $ref: '#/components/schemas/TransitAgency'
        routes:
          type: array
          description: Járatok referenciáinak listája.
          items:
            $ref: '#/components/schemas/TransitRoute'
        stops:
          type: array
          description: Megállók referenciáinak listája.
          items:
            $ref: '#/components/schemas/TransitStop'
        trips:
          type: array
          description: Menetek referenciáinak listája.
          items:
            $ref: '#/components/schemas/TransitTrip'
        alerts:
          type: array
          description: Zavarok referenciáinak listája.
          items:
            $ref: '#/components/schemas/TransitAlert'
    OTPTransitReferences:
      type: object
      properties:
        agencies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitAgency'
          description: Szolgáltatók referenciáinak listája.
        routes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitRoute'
          description: Járatok referenciáinak listája.
        stops:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitStop'
          description: Megállók referenciáinak listája.
        trips:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitTrip'
          description: Menetek referenciáinak listája.
        alerts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitAlert'
          description: Zavarok referenciáinak listája.
    Status:
      type: string
      description: A válasz státusza.
      example: OK
      enum:
      - NOT_MODIFIED
      - OK
      - UNKNOWN_ERROR
      - NOT_FOUND
      - INVALID_VALUE
      - NOT_OPERATING
      - OUTSIDE_BOUNDS
      - PATH_NOT_FOUND
      - NO_TRANSIT_TIMES
      - REQUEST_TIMEOUT
      - BOGUS_PARAMETER
      - TOO_CLOSE
      - LOCATION_NOT_ACCESSIBLE
      - MISSING_MODE
      - ERROR_NO_GRAPH
      - PLANNER_SERVICE_UNAVAILABLE
      - ERROR_VEHICLE_LOCATION_SERVICE
      - ERROR_BIKE_RENTAL_SERVICE
      - ERROR_TICKETING_SERVICE
      - ERROR_TRANSIT_INDEX_SERVICE
      - MOVED_TEMPORARILY
    TransitAgency:
      type: object
      properties:
        id:
          type: string
          description: A szolgáltató azonosítója.
          example: BKK
        name:
          type: string
          description: A szolgáltató neve.
          example: BKK
        url:
          type: string
          description: A szolgáltató linkje.
          example: https://www.bkk.hu
        timezone:
          type: string
          description: A szolgáltató időzónája.
          example: Europe/Budapest
        lang:
          type: string
          description: A szolgáltató nyelve.
          example: hu
        phone:
          type: string
          description: A szolgáltató telefonszáma.
          example: +36 1 2 345 678
      description: Szolgáltatók referenciáinak listája.
    TransitAlert:
      type: object
      properties:
        id:
          type: string
          description: A zavar azonosítója.
          example: BKK_bkkinfo-79155
        start:
          type: integer
          description: A zavar kezdő időpontja másodpercben.
          format: int64
          example: 1623362400
        end:
          type: integer
          description: A zavar végének időpontja másodpercben.
          format: int64
          example: 1626040799
        timestamp:
          type: integer
          description: A zavar időbélyege másodpercben.
          format: int64
          example: 1625747229
        modifiedTime:
          type: integer
          description: A zavar utolsó módosításának időpontja másodpercben.
          format: int64
          example: 1623333927
        stopIds:
          type: array
          description: A zavar által érintett megállók azonosítóinak listája.
          example:
          - BKK_F01086
          - BKK_F01086
          items:
            type: string
            description: A zavar által érintett megállók azonosítóinak listája.
            example: '["BKK_F01086","BKK_F01086"]'
        routeIds:
          type: array
          description: A zavar által érintett járatok azonosítóinak listája.
          example:
          - BKK_5100
          - BKK_5100
          items:
            type: string
            description: A zavar által érintett járatok azonosítóinak listája.
            example: '["BKK_5100","BKK_5100"]'
        url:
          $ref: '#/components/schemas/TranslatedString'
        header:
          $ref: '#/components/schemas/TranslatedString'
        description:
          $ref: '#/components/schemas/TranslatedString'
        disableApp:
          type: boolean
          description: A zavar hatására használhatatlan lesz-e az alkalmazás.
          nullable: true
        startText:
          $ref: '#/components/schemas/TranslatedString'
        endText:
          $ref: '#/components/schemas/TranslatedString'
        routes:
          type: array
          description: A zavar által érintett járatok listája.
          items:
            $ref: '#/components/schemas/TransitAlertRoute'
      description: Zavarok referenciáinak listája.
    TransitAlertRoute:
      type: object
      properties:
        routeId:
          type: string
          description: A zavar által érintett járat azonosítója.
          example: BKK_5100
        stopIds:
          type: array
          description: A zavar által érintett megállók azonosítóinak listája a járaton.
          example:
          - BKK_F01086
          - BKK_F01086
          items:
            type: string
            description: A zavar által érintett megállók azonosítóinak listája a járaton.
            example: '["BKK_F01086","BKK_F01086"]'
        header:
          $ref: '#/components/schemas/TranslatedString'
        effectType:
          $ref: '#/components/schemas/EffectType'
      description: A zavar által érintett járatok listája.
    TransitEntryWithReferencesTransitSearch:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitSearch'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TransitReferences:
      type: object
      description: A válaszhoz tartozó referenciák.
      oneOf:
      - $ref: '#/components/schemas/OTPTransitReferences'
      - $ref: '#/components/schemas/MobileTransitReferences'
    TransitRoute:
      type: object
      properties:
        id:
          type: string
          description: A járat azonosítója.
          example: BKK_3040
        shortName:
          type: string
          description: A járat rövid neve.
          example: "4"
        longName:
          type: string
          description: A járat hosszú neve.
          nullable: true
        description:
          type: string
          description: A járat neve. Ha egy | szerepel a névben, akkor a végállomásokat választja
              el amelyek külön sorokban megjeleníthetőek. COMPACT referenciák kérése
              esetében nincs kitöltve.
          nullable: true
          example: Újbuda-központ M | Széll Kálmán tér M
        type:
          type: string
          description: A járat típusa.
          example: TRAM
          enum:
          - WALK
          - BICYCLE
          - CAR
          - TRAM
          - SUBWAY
          - SUBURBAN_RAILWAY
          - RAIL
          - COACH
          - BUS
          - TROLLEYBUS
          - FERRY
          - CABLE_CAR
          - GONDOLA
          - FUNICULAR
          - TRANSIT
          - TRAINISH
          - BUSISH
          - LEG_SWITCH
          - CUSTOM_MOTOR_VEHICLE
        url:
          type: string
          description: A járat linkje.
          nullable: true
        color:
          type: string
          description: 'A járat színe. Deprecated: használjuk a `style` attribútumot helyette.'
          example: FFD800
          deprecated: true
        textColor:
          type: string
          description: 'A járat szövegének színe. Deprecated: használjuk a `style` attribútumot
              helyette.'
          example: "000000"
          deprecated: true
        agencyId:
          type: string
          description: A járatot üzemeltető szolgáltató azonosítója.
          example: BKK
        iconDisplayType:
          type: string
          description: 'A járat ikonjának megjelenítési típusa. Deprecated: használjuk a
              `style` attribútumot helyette.'
          example: BOX
          deprecated: true
        iconDisplayText:
          type: string
          description: 'A járat ikonjának megjelenítési szövege. Deprecated: használjuk a
              `style` attribútumot helyette.'
          example: "4"
          deprecated: true
        bikesAllowed:
          type: boolean
          description: Kerékpár szállítása engedélyezett-e a járaton.
          example: false
        style:
          $ref: '#/components/schemas/TransitRouteStyle'
        sortOrder:
          type: integer
          description: A járat rendezési sorszáma a többi járathoz viszonyítva.
          format: int32
          example: 10
      description: Járatok referenciáinak listája.
    TransitRouteStyle:
      type: object
      properties:
        color:
          type: string
          description: A járat színe.
          example: 009FE3
        stop:
          $ref: '#/components/schemas/TransitStopStyle'
        icon:
          $ref: '#/components/schemas/TransitRouteStyleIcon'
        vehicleIcon:
          $ref: '#/components/schemas/TransitVehicleStyleIcon'
      description: A járat megjelenítési stílusa.
    TransitRouteStyleIcon:
      type: object
      properties:
        type:
          type: string
          description: Az ikon típusa.
          example: BOX
          enum:
          - BOX
          - CIRCLE
        text:
          type: string
          description: Az ikon felirata.
          example: "5"
        textColor:
          type: string
          description: Az ikon feliratának színe.
          example: FFFFFF
      description: A járathoz tartozó ikon stílusa.
      nullable: true
    TransitSearch:
      type: object
      properties:
        query:
          type: string
          description: A keresett kifejezés.
          example: BKK_bkkinfo-75694
        stopIds:
          type: array
          description: Az illeszkedő megállók azonosítói.
          nullable: true
          example:
          - BKK_CSF01024
          - BKK_CSF01024
          items:
            type: string
            description: Az illeszkedő megállók azonosítói.
            nullable: true
            example: '["BKK_CSF01024","BKK_CSF01024"]'
        routeIds:
          type: array
          description: Az illeszkedő járatok azonosítói.
          nullable: true
          example:
          - BKK_3040
          - BKK_3040
          items:
            type: string
            description: Az illeszkedő járatok azonosítói.
            nullable: true
            example: '["BKK_3040","BKK_3040"]'
        alertIds:
          type: array
          description: Az illeszkedő zavarok azonosítói.
          nullable: true
          example:
          - BKK_bkkinfo-75694
          - BKK_bkkinfo-75694
          items:
            type: string
            description: Az illeszkedő zavarok azonosítói.
            nullable: true
            example: '["BKK_bkkinfo-75694","BKK_bkkinfo-75694"]'
      description: A lekért adat.
    TransitStop:
      type: object
      properties:
        id:
          type: string
          description: A megálló azonosítója.
          example: BKK_110452
        vertex:
          type: string
          description: A megálló utazástervező azonosítója, amelyet a `fromPlace` és a `toPlace`
              megadásához lehet használni.
          example: BKK:CSF01076
        lat:
          type: number
          description: A megálló szélességi koordinátája.
          format: double
          example: 47.427631
        lon:
          type: number
          description: A megálló hosszúsági koordinátája.
          format: double
          example: 19.265759
        name:
          type: string
          description: A megálló neve.
          example: Nemzetközi Posta Kicserélő Központ
        code:
          type: string
          description: A megálló kódja.
          example: "110452"
        direction:
          type: string
          description: A megálló iránya.
          example: -47
        platformCode:
          type: string
          description: A megálló peron-kódja.
          nullable: true
          example: "0"
        description:
          type: string
          description: A megálló leírása.
          nullable: true
        locationType:
          type: integer
          description: A megálló hely-típusa.
          format: int32
          example: 0
        locationSubType:
          type: string
          description: A megálló hely-altípusa.
          nullable: true
          example: "0"
        parentStationId:
          type: string
          description: A szülő-megálló azonosítója.
          nullable: true
          example: BKK_CS110452
        type:
          type: string
          description: 'A megálló típusa. Deprecated: használjuk a `style` attribútumot.'
          nullable: true
          example: BUS
          deprecated: true
          enum:
          - WALK
          - BICYCLE
          - CAR
          - TRAM
          - SUBWAY
          - SUBURBAN_RAILWAY
          - RAIL
          - COACH
          - BUS
          - TROLLEYBUS
          - FERRY
          - CABLE_CAR
          - GONDOLA
          - FUNICULAR
          - TRANSIT
          - TRAINISH
          - BUSISH
          - LEG_SWITCH
          - CUSTOM_MOTOR_VEHICLE
        wheelchairBoarding:
          type: boolean
          description: Akadálymentesített-e a megálló.
          example: true
        routeIds:
          type: array
          description: A megállót érintő járatok azonosítói.
          example:
          - BKK_2005
          items:
            type: string
            description: A megállót érintő járatok azonosítói.
            example: '["BKK_2005"]'
        stopColorType:
          type: string
          description: 'A megálló színezésének típusa. Deprecated: használjuk a `style` attribútumot.'
          nullable: true
          example: BUS
          deprecated: true
        alertIds:
          type: array
          description: A megállóra vonatkozó aktív zavarok azonosítói.
          nullable: true
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A megállóra vonatkozó aktív zavarok azonosítói.
            nullable: true
            example: '["BKK_bkkinfo-75685"]'
        style:
          $ref: '#/components/schemas/TransitStopStyle'
      description: Megállók referenciáinak listája.
    TransitStopStyle:
      type: object
      properties:
        colors:
          type: array
          description: A megálló stílushoz tartozó színek tömbje.
          nullable: true
          example:
          - 4CA22F
          items:
            type: string
            description: A megálló stílushoz tartozó színek tömbje.
            nullable: true
            example: '["4CA22F"]'
        type:
          type: string
          description: A megálló stílus típusa.
          nullable: true
          example: PRIORITY
          enum:
          - PRIORITY
        image:
          type: string
          description: A megálló stílus képe.
          nullable: true
          example: route-icon-M4
      description: A megálló stílusa.
      nullable: true
    TransitTrip:
      type: object
      properties:
        id:
          type: string
          description: A menet azonosítója.
          example: BKK_C313504617
        routeId:
          type: string
          description: A menethez tartozó járat azonosítója.
          example: BKK_3040
        shapeId:
          type: string
          description: A menet útvonalvezetésének azonosítója.
          example: BKK_C313504617
        blockId:
          type: string
          description: A menethez tartozó GTFS block_id, amennyiben létezik.
          nullable: true
          example: C31350_3040_5_15
        tripHeadsign:
          type: string
          description: A menet célállomása.
          example: Széll Kálmán tér M
        tripShortName:
          type: string
          description: A menet rövid neve.
          nullable: true
          example: "4"
        serviceId:
          type: string
          description: A menet közlekedési naptárának azonosítója.
          example: BKK_C31350K2HCPER011
        directionId:
          type: string
          description: A menet irányának azonosítója.
          example: "1"
        bikesAllowed:
          type: boolean
          description: Szállítható-e kerékpár a meneten.
          example: false
        wheelchairAccessible:
          type: boolean
          description: Alacsonypadlós-e a menet.
          example: true
      description: Menetek referenciáinak listája.
    TransitVehicleStyleIcon:
      type: object
      properties:
        name:
          type: string
          description: Az ikon neve.
          nullable: true
          example: bus
      description: A járathoz tartozó jármű ikon stílus.
      nullable: true
    TranslatedString:
      type: object
      properties:
        translations:
          type: object
          additionalProperties:
            type: string
            description: Lokalizáció és a hozzá tartozó fordítások összerendelése.
            example: '{"en":"English translation","hu":"Magyar fordítás"}'
          description: Lokalizáció és a hozzá tartozó fordítások összerendelése.
          example:
            en: English translation
            hu: Magyar fordítás
        someTranslation:
          type: string
          description: A fordítás-összerendelések első eleme.
          example: English translation
      description: A zavar végének időpontjához tartozó szöveg.
      nullable: true
    ArrivalsAndDeparturesForLocationOTPMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitDepartureGroup'
    TransitDepartureGroup:
      type: object
      properties:
        routeId:
          type: string
          description: A csoporthoz tartozó járat azonosító.
          example: BKK_3040
        headsign:
          type: string
          description: A csoporthoz tartozó célállomás.
          example: Újbuda-központ M
        stopTimes:
          type: array
          description: A csoport menetrendi bejegyzései.
          items:
            $ref: '#/components/schemas/TransitScheduleStopTime'
      description: A lekért adatok listája.
    TransitListEntryWithReferencesTransitDepartureGroup:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitDepartureGroup'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    TransitScheduleStopTime:
      type: object
      properties:
        stopId:
          type: string
          description: A megálló azonosítója
          example: BKK_050185
        stopHeadsign:
          type: string
          description: A megállóban kijelzett célállomás.
          example: Havanna utcai lakótelep
        arrivalTime:
          type: integer
          description: A megállóba érkezés tervezett ideje epoch másodbercben. Az első megállónál
              hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        departureTime:
          type: integer
          description: A megállóból való indulás tervezett ideje epoch másodbercben. Az utolsó
              megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        predictedArrivalTime:
          type: integer
          description: A megállóba érkezés becsült ideje epoch másodbercben, ha a járathoz
              van valós idejű adat. Az első megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        predictedDepartureTime:
          type: integer
          description: A megállóból való becsült indulás ideje epoch másodbercben, ha a járathoz
              van valós idejű adat. Az utolsó megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        uncertain:
          type: boolean
          description: Igaz, ha a menethez tartozó valós idejű adatok bizonytalanok.
          nullable: true
          example: true
        tripId:
          type: string
          description: A bejegyzést tartalmazó menet azonosítója.
          example: BKK_C32269235
        serviceDate:
          type: string
          description: A bejegyzéshez tartozó menet menetrendi napja.
          example: "20210708"
        wheelchairAccessible:
          type: boolean
          description: A bejegyzéshez tartozó menet alacsonypadlóssága.
          example: true
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a menet legalább egy rákövetkező megállója foglalást igényel.
          example: true
        groupIds:
          type: array
          description: A megálló csoportjának azonosítója.
          example:
          - Havanna utcai lakótelep
          deprecated: true
          items:
            type: string
            description: A megálló csoportjának azonosítója.
            example: '["Havanna utcai lakótelep"]'
            deprecated: true
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok azonosítóinak listája.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A megállóhoz tartozó aktív zavarok azonosítóinak listája.
            example: '["BKK_bkkinfo-75685"]'
      description: Az irányhoz tartozó menetrendi bejegyzések.
    ArrivalsAndDeparturesForStopOTPMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitArrivalsAndDepartures'
    TransitArrivalsAndDepartures:
      type: object
      properties:
        stopId:
          type: string
          description: A megálló azonosítója.
          example: BKK_F01029
        routeIds:
          type: array
          description: A megállóhoz tartozó járatok azonosítói.
          example:
          - BKK_VP06
          - BKK_0090
          items:
            type: string
            description: A megállóhoz tartozó járatok azonosítói.
            example: '["BKK_VP06","BKK_0090"]'
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A megállóhoz tartozó aktív zavarok.
            example: '["BKK_bkkinfo-75685"]'
        nearbyStopIds:
          type: array
          description: A közeli megállók azonosítói.
          example:
          - BKK_F01029
          - BKK_F01029
          items:
            type: string
            description: A közeli megállók azonosítói.
            example: '["BKK_F01029","BKK_F01029"]'
        stopTimes:
          type: array
          description: A megállóhoz tartozó menetrendi bejegyzések.
          items:
            $ref: '#/components/schemas/TransitScheduleStopTime'
      description: A lekért adat.
    TransitEntryWithReferencesTransitArrivalsAndDepartures:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitArrivalsAndDepartures'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    BicycleRentalMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitBikeRentalStation'
    TransitBikeRentalStation:
      type: object
      properties:
        id:
          type: string
          description: Az állomás azonosítója.
          example: "42711896"
        lat:
          type: number
          description: Az állomás szélességi koordinátája.
          format: double
          example: 47.51032
        lon:
          type: number
          description: Az állomás hosszúsági koordinátája.
          format: double
          example: 19.028615
        name:
          type: string
          description: Az állomás neve.
          example: Millenáris
        code:
          type: string
          description: Az állomás kódja.
          example: "0213"
        type:
          type: string
          description: Az állomás típusa.
          example: stele
        bikes:
          type: integer
          description: Az állomáson elérhető kerékpárok száma.
          format: int32
          example: 5
        spaces:
          type: integer
          description: Az állomás összes helyének száma. Ez mindig fix 999.
          format: int32
          example: 999
      description: A lekért adatok listája.
    TransitListEntryWithReferencesTransitBikeRentalStation:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitBikeRentalStation'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    MetadataResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitMetadata'
    TransitEntryWithReferencesTransitMetadata:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitMetadata'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TransitMetadata:
      type: object
      properties:
        time:
          type: integer
          description: Aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625666633946
        timeZone:
          type: string
          description: A szerver tranzit adatainak időzónája.
          example: Europe/Budapest
        readableTime:
          type: string
          description: A szerver ideje ISO8601 formátumban.
          example: 2021-07-07T14:03:53Z
        validityStart:
          type: string
          description: A szerveren található adatok érvényességének kezdete.
          example: "20210703"
        validityEnd:
          type: string
          description: A szerveren található adatok érvényességének vége.
          example: "20210801"
        completeValidityStart:
          type: string
          description: Azon időszak kezdete, amelyre az összes szolgáltató biztosít adatot.
              Több szolgáltató esetén későbbi lehet, mint a `validityStart`.
          example: "20210704"
        completeValidityEnd:
          type: string
          description: Azon időszak vége, amelyre az összes szolgáltató biztosít adatot.
              Több szolgáltató esetén korábbi lehet, mint a `validityEnd`.
          example: "20210731"
        lowerLeftLatitude:
          type: number
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          format: double
          example: 47.14781490388629
        lowerLeftLongitude:
          type: number
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          format: double
          example: 47.14781490388629
        upperRightLatitude:
          type: number
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          format: double
          example: 47.14781490388629
        upperRightLongitude:
          type: number
          description: A betöltött adatok területének befoglaló téglalapjának két sarokpontja.
          format: double
          example: 47.14781490388629
        boundingPolyLine:
          type: string
          description: A betöltött adatokat határoló sokszög vonala (polyline).
          example: o{sxFl}vaMjDpCf@\
        alertIds:
          type: array
          description: Az egész alkalmazásra vonatkozó aktív zavarok azonosítói.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: Az egész alkalmazásra vonatkozó aktív zavarok azonosítói.
            example: '["BKK_bkkinfo-75685"]'
        feedIds:
          type: array
          description: Az aktív adatforrások azonosítói.
          example:
          - https://www.bkk.hu:L2847-20210704
          items:
            type: string
            description: Az aktív adatforrások azonosítói.
            example: '["https://www.bkk.hu:L2847-20210704"]'
        dayTypes:
          type: object
          additionalProperties:
            type: string
            description: A menetrendi napok, és a hozzá tartozó napok típusát tartalmazó
                összerendelés egy hétre (az aktuális nap, és a következő 6).
            example: '{"20210707":"WED"}'
          description: A menetrendi napok, és a hozzá tartozó napok típusát tartalmazó összerendelés
              egy hétre (az aktuális nap, és a következő 6).
          example:
            "20210707": WED
      description: A lekért adat.
    MultiRouteDetailsMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitRouteDetails'
    TransitListEntryWithReferencesTransitRouteDetails:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitRouteDetails'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    TransitPolyline:
      type: object
      properties:
        levels:
          type: string
          description: A minta magassági adatai (mindig üres).
        points:
          type: string
          description: A minta kódolt pontjai.
          example: o{sxFl}vaMjDpCf@\
        length:
          type: integer
          description: A minta pontjainak száma.
          format: int32
          example: 3
      description: A menethez tartozó kódolt minta (polyline).
    TransitRouteDetails:
      type: object
      properties:
        id:
          type: string
          description: A járat azonosítója.
          example: BKK_3040
        shortName:
          type: string
          description: A járat rövid neve.
          example: "4"
        longName:
          type: string
          description: A járat hosszú neve.
          nullable: true
        description:
          type: string
          description: A járat neve. Ha egy | szerepel a névben, akkor a végállomásokat választja
              el amelyek külön sorokban megjeleníthetőek. COMPACT referenciák kérése
              esetében nincs kitöltve.
          nullable: true
          example: Újbuda-központ M | Széll Kálmán tér M
        type:
          type: string
          description: A járat típusa.
          example: TRAM
          enum:
          - WALK
          - BICYCLE
          - CAR
          - TRAM
          - SUBWAY
          - SUBURBAN_RAILWAY
          - RAIL
          - COACH
          - BUS
          - TROLLEYBUS
          - FERRY
          - CABLE_CAR
          - GONDOLA
          - FUNICULAR
          - TRANSIT
          - TRAINISH
          - BUSISH
          - LEG_SWITCH
          - CUSTOM_MOTOR_VEHICLE
        url:
          type: string
          description: A járat linkje.
          nullable: true
        color:
          type: string
          description: 'A járat színe. Deprecated: használjuk a `style` attribútumot helyette.'
          example: FFD800
          deprecated: true
        textColor:
          type: string
          description: 'A járat szövegének színe. Deprecated: használjuk a `style` attribútumot
              helyette.'
          example: "000000"
          deprecated: true
        agencyId:
          type: string
          description: A járatot üzemeltető szolgáltató azonosítója.
          example: BKK
        iconDisplayType:
          type: string
          description: 'A járat ikonjának megjelenítési típusa. Deprecated: használjuk a
              `style` attribútumot helyette.'
          example: BOX
          deprecated: true
        iconDisplayText:
          type: string
          description: 'A járat ikonjának megjelenítési szövege. Deprecated: használjuk a
              `style` attribútumot helyette.'
          example: "4"
          deprecated: true
        bikesAllowed:
          type: boolean
          description: Kerékpár szállítása engedélyezett-e a járaton.
          example: false
        style:
          $ref: '#/components/schemas/TransitRouteStyle'
        sortOrder:
          type: integer
          description: A járat rendezési sorszáma a többi járathoz viszonyítva.
          format: int32
          example: 10
        variants:
          type: array
          description: A járathoz tartozó járat variánsok listája.
          items:
            $ref: '#/components/schemas/TransitRouteVariant'
        alertIds:
          type: array
          description: A járaton található aktív zavarok azonosítóinak listája.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A járaton található aktív zavarok azonosítóinak listája.
            example: '["BKK_bkkinfo-75685"]'
      description: A lekért adat.
    TransitRouteVariant:
      type: object
      properties:
        name:
          type: string
          description: A járat variáns neve.
          example: 4-es (439)
        stopIds:
          type: array
          description: A járat variáns megállóinak azonosítói.
          example:
          - BKK_F02477
          - BKK_F00308
          items:
            type: string
            description: A járat variáns megállóinak azonosítói.
            example: '["BKK_F02477","BKK_F00308"]'
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a járaton vannak olyan menetek, amelyeken szükséges lehet
              az előre foglalás.
          example: true
        bookableStopIds:
          type: array
          description: A járat variáns megálló azonosítói, amelyekre lehetséges lehet a foglalás.
          example:
          - BKK_F02477
          - BKK_F00308
          items:
            type: string
            description: A járat variáns megálló azonosítói, amelyekre lehetséges lehet a
                foglalás.
            example: '["BKK_F02477","BKK_F00308"]'
        direction:
          type: string
          description: A járat variáns iránya.
          example: "0"
        headsign:
          type: string
          description: A járat variáns célállomása.
          example: Újbuda-központ M
        polyline:
          $ref: '#/components/schemas/TransitPolyline'
        routeId:
          type: string
          description: A járat variánshoz tartozó járat azonosítója. Akkor van kitöltve,
              ha különbözik az eredetitől.
          example: BKK_3040
        type:
          type: string
          description: A járat variáns típusa.
          example: BKK_3040
      description: A járathoz tartozó járat variánsok listája.
    OnboardDepartSearchMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitVehicle'
    TransitCoordinatePoint:
      type: object
      properties:
        lat:
          type: number
          description: Szélességi koordináta.
          format: float
          example: 47.47375
        lon:
          type: number
          description: Hosszúsági koordináta.
          format: float
          example: 19.049086
      description: A jármű pozíciója.
    TransitListEntryWithReferencesTransitVehicle:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitVehicle'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    TransitVehicle:
      type: object
      properties:
        vehicleId:
          type: string
          description: A jármű azonosítója.
          example: BKK_2035
        stopId:
          type: string
          description: A járműhöz tartozó megálló azonosítója.
          example: BKK_F01992
        stopSequence:
          type: integer
          description: A jármű által érintett aktuális megálló sorszáma a meneten.
          format: int32
          nullable: true
          example: 1
        routeId:
          type: string
          description: A menethez tartozó járat azonosítója, amit a jármű teljesít.
          example: BKK_3040
        bearing:
          type: number
          description: A jármű irányszöge.
          format: float
          example: 97.0
        location:
          $ref: '#/components/schemas/TransitCoordinatePoint'
        serviceDate:
          type: string
          description: A jármű által teljesített menet menetrendi napja.
          example: "20210707"
        licensePlate:
          type: string
          description: A jármű rendszáma.
          example: V2035
        label:
          type: string
          description: A jármű kijelzőjén megjelenő célállomáskép.
          nullable: true
          example: Széll Kálmán tér M
        model:
          type: string
          description: A jármű típusa.
          nullable: true
          example: Siemens Combino
        deviated:
          type: boolean
          description: Igaz, ha a jármű letért az útvonaláról.
          example: false
        stale:
          type: boolean
          description: Igaz, ha a jármű pozíciója kiöregedett.
          nullable: true
          example: false
        lastUpdateTime:
          type: integer
          description: A járműhöz tartozó utolsó valós idejű adat időbélyege másodpercben.
          format: int64
          example: 1625683727
        status:
          type: string
          description: A jármű állapota.
          example: IN_TRANSIT_TO
          enum:
          - INCOMING_AT
          - STOPPED_AT
          - IN_TRANSIT_TO
        congestionLevel:
          type: string
          description: A járműhöz tartozó torlódási állapot.
          nullable: true
          example: CONGESTION
          enum:
          - UNKNOWN
          - CONGESTION
        vehicleRouteType:
          type: string
          description: 'A jármű fajtája. Deprecated: használjuk a `style` attribútumot.'
          example: TRAM
          deprecated: true
          enum:
          - WALK
          - BICYCLE
          - CAR
          - TRAM
          - SUBWAY
          - SUBURBAN_RAILWAY
          - RAIL
          - COACH
          - BUS
          - TROLLEYBUS
          - FERRY
          - CABLE_CAR
          - GONDOLA
          - FUNICULAR
          - TRANSIT
          - TRAINISH
          - BUSISH
          - LEG_SWITCH
          - CUSTOM_MOTOR_VEHICLE
        stopDistancePercent:
          type: integer
          description: Hol tart a jármű a két megálló közti szakaszon, százalékban.
          format: int32
          example: 28
        wheelchairAccessible:
          type: boolean
          description: Igaz, ha a jármű alacsonypadlós.
          example: true
        occupancy:
          $ref: '#/components/schemas/TransitVehicleOccupancy'
        capacity:
          $ref: '#/components/schemas/TransitVehicleOccupancy'
        tripId:
          type: string
          description: A járműhöz tartozó menet azonosítója.
          nullable: true
          example: BKK_C3135012112
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához
              lehet használni.
          example: 20210708:BKK:AS4356
        style:
          $ref: '#/components/schemas/TransitVehicleStyle'
      description: A lekért adatok listája.
    TransitVehicleOccupancy:
      type: object
      properties:
        adults:
          type: integer
          description: Hány felnőtt van a járművön.
          format: int32
          nullable: true
          example: 350
        children:
          type: integer
          description: Hány gyermek van a járművön.
          format: int32
          nullable: true
          example: 350
        strollers:
          type: integer
          description: Hány babakocsi van a járművön
          format: int32
          nullable: true
          example: 350
        wheelchairs:
          type: integer
          description: Hány kerekesszék van a járművön.
          format: int32
          nullable: true
          example: 350
        other:
          type: integer
          description: Hány be nem kategorizált entitás van a járművön.
          format: int32
          nullable: true
          example: 350
      description: A jármű kapacitása.
      nullable: true
    TransitVehicleStyle:
      type: object
      properties:
        icon:
          $ref: '#/components/schemas/TransitVehicleStyleIcon'
      description: A járműhöz tartozó stílus.
      nullable: true
    OnboardDepartPosition:
      required:
      - lat
      - lon
      - timestamp
      type: object
      properties:
        lat:
          type: number
          description: A szélességi koordinátája egy pozició pontnak.
          format: double
          example: 47.497313
        lon:
          type: number
          description: A hosszúsági koordinátája egy pozició pontnak.
          format: double
          example: 19.064683
        timestamp:
          type: integer
          description: Az időpontja egy pozició pontnak epoch másodpercben.
          format: int64
          example: 1644829176
        accuracy:
          type: number
          description: A pontossága egy pozició pontnak méterben.
          format: double
          nullable: true
          example: 100
        speed:
          type: number
          description: A sebesség egy pozició pontban m/s-ban.
          format: double
          nullable: true
          example: 8
    TraverseMode:
      type: string
      enum:
      - WALK
      - BICYCLE
      - CAR
      - TRAM
      - SUBWAY
      - RAIL
      - BUS
      - FERRY
      - CABLE_CAR
      - GONDOLA
      - FUNICULAR
      - TRANSIT
      - AIRPLANE
      - TROLLEYBUS
      - MONORAIL
      - SUBURBAN_RAILWAY
      - COACH
    WalkProfile:
      type: string
      default: MID
      enum:
      - SLOW
      - MID
      - FAST
    ApiTripSearchMetadata:
      type: object
      properties:
        searchWindowUsed:
          type: integer
          format: int32
        nextDateTime:
          type: integer
          format: int64
        prevDateTime:
          type: integer
          format: int64
      description: A tervezés metaadatai. Tartalmazza a következő és az előző tervezési időablakot
          a lapozás megvalósításához ezred másodpercben.
    BikeStreetCategory:
      type: string
      description: Kerékpáros útszakaszok kategórizálásai.
      nullable: true
      example: LOW_TRAFFIC
      enum:
      - CYCLEWAY
      - CYCLELANE
      - LOW_TRAFFIC
      - OTHER
      - PEDESTRIAN
    DisplayedLeg:
      type: object
      properties:
        first:
          type: boolean
          description: Jelzi, ha a láb az első az útitervben.
          example: true
        last:
          type: boolean
          description: Jelzi, ha a láb az utolsó az útitervben.
          example: true
        time:
          type: integer
          description: Az utolsó lábon az érkezési idő, az összes többin az indulási.
          format: int64
          example: 1625825460000
        walkTo:
          type: boolean
          description: Jelzi, hogy a láb nem tranzit típusú.
          example: true
        name:
          type: string
          description: Az indulási hely neve, kivéve az utolsón, ahol a érkezési helyé.
          example: realCity ITS Kft.
      description: Az útiterv kivonatos megjelenítéséhez használható  lábak és adatok.
    ElevationPoint:
      type: object
      properties:
        distance:
          type: number
          description: A magassági pont távolsága a láb kezdetéhez képest méterben.
          format: double
          example: 10.871
        elevation:
          type: number
          description: A pont magassága.
          format: double
          nullable: true
          example: 0
      description: A lábhoz tartozó magassági adatok.
      example: []
    EncodedPolylineBean:
      type: object
      properties:
        points:
          type: string
          description: A geometria (polyline) pontjai kódolva.
          example: o{sxFl}vaMjDpCf@\
        length:
          type: integer
          description: A geometria (polyline) pontjainak száma.
          format: int32
          example: 3
      description: A láb geometriája.
    Itinerary:
      type: object
      properties:
        duration:
          type: integer
          description: Az útvonal hossza másodpercben.
          format: int64
          example: 1732
        startTime:
          type: string
          description: Az indulási időpont ezredmásodpercben.
          format: date-time
        endTime:
          type: string
          description: Az érkezési időpont ezredmásodpercben.
          format: date-time
        walkTime:
          type: integer
          description: Sétálási idő az útvonalon másodpercben.
          format: int64
          example: 620
        bikeTime:
          type: integer
          description: Kerékpározási idő az útvonalon másodpercben.
          format: int64
          example: 620
        transitTime:
          type: integer
          description: Járművön töltött idő az útvonalon másodpercben.
          format: int64
          example: 620
        waitingTime:
          type: integer
          description: Várakozási idő járműre az útvonalon másodpercben.
          format: int64
          example: 620
        bikeDistance:
          type: number
          description: Kerékpározási távolság az útvonalon méterben.
          format: double
          example: 826.7
        walkDistance:
          type: number
          description: Sétálási távolság az útvonalon méterben.
          format: double
          example: 826.7
        walkLimitExceeded:
          type: boolean
          description: Jelzi, hogy a sétálási limit túl lett lépve az útitervben.
          example: false
        notAllTicketsAvailable:
          type: boolean
          description: 'Jelzi, hogy a visszaadott útvonalak tartalmazhatnak olyan járatokat
              (pl.: vonatok), amire a terv során érintett jegyértékesítési helyen
              nem lehet jegyet váltani.'
          example: false
        bikeCategoryDistances:
          type: object
          additionalProperties:
            type: number
            description: Az útiterv során hány méter kerékpározást tartalmaztak az egyes
                kategóriák. Az objektum kulcsai a kategóriák (`BikeStreetCategory`).
            format: double
          description: Az útiterv során hány méter kerékpározást tartalmaztak az egyes kategóriák.
              Az objektum kulcsai a kategóriák (`BikeStreetCategory`).
          example:
            LOW_TRAFFIC: 12.0
        elevationLost:
          type: number
          description: Az útiterv során hány métert süllyed az útvonal.
          format: double
          example: 0.0
        elevationGained:
          type: number
          description: Az útiterv során hány métert emelkedik az útvonal.
          format: double
          example: 0.0
        transfers:
          type: integer
          description: Átszállások száma az útitervben.
          format: int32
          example: 1
        generalizedCost:
          type: integer
          description: Az utazástervező algoritmus által használt súly.
          format: int32
          example: 998
        waitTimeAdjustedGeneralizedCost:
          type: integer
          description: A várakozási idővel igazított súly.
          format: int32
          example: 998
        legs:
          type: array
          description: Az útiterv lábai (részei).
          items:
            $ref: '#/components/schemas/Leg'
        displayedLegs:
          type: array
          description: Az útiterv kivonatos megjelenítéséhez használható  lábak és adatok.
          items:
            $ref: '#/components/schemas/DisplayedLeg'
        tooSloped:
          type: boolean
          description: Jelzi, ha az útvonal meredekebb, mint a paraméterekben kért.
          example: false
        patternItineraries:
          type: array
          description: Útitervminták engedélyezése esetén a mintába tartozó útitervek.
          items:
            $ref: '#/components/schemas/Itinerary'
        patternFrequency:
          $ref: '#/components/schemas/PatternStatistics'
        patternDuration:
          $ref: '#/components/schemas/PatternStatistics'
        displayProductRecommendation:
          type: boolean
          description: Jelzi, ha az útvonalhoz kell termékajánlást mutatni.
          example: true
      description: A talált útvonalak listája.
    Leg:
      type: object
      properties:
        startTime:
          type: string
          description: A láb kezdete ezredmásodpercben.
          format: date-time
        endTime:
          type: string
          description: A láb vége ezredmásodpercben.
          format: date-time
        departureDelay:
          type: integer
          description: Tranzit láb esetén a láb indulása és a tényleges felszállás közötti
              késleltetés.
          format: int32
          example: 0
        arrivalDelay:
          type: integer
          description: Tranzit láb esetén a láb vége és a tényleges leszállás közötti késleltetés.
          format: int32
          example: 0
        realTime:
          type: boolean
          description: Jelzi, hogy a láb adatai valós idejű forrásból származnak.
          example: true
        distance:
          type: number
          description: A láb bejárása alatt megtett táv méterben.
          format: double
          example: 209.215
        pathway:
          type: boolean
          description: Jelzi, hogy a láb egy pathway (pl. metró lejáró).
          example: false
        mode:
          type: string
          description: A lábon használt közlekedési mód.
          example: WALK
        agencyName:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató neve.
          nullable: true
          example: BKK
        agencyUrl:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató linkje.
          nullable: true
          example: https://www.bkk.hu
        agencyTimeZoneOffset:
          type: integer
          description: Tranzit láb esetén a járatot biztosító szolgáltató időzónájának eltolódása.
          format: int32
          nullable: true
          example: 0
        routeColor:
          type: string
          description: Tranzit láb esetén a járat hátterének színe a megjelenítéséhez.
          nullable: true
          example: 009FE3
        routeId:
          type: string
          description: Tranzit láb esetén a járat azonosítója.
          nullable: true
          example: BKK_MP53
        routeTextColor:
          type: string
          description: Tranzit láb esetén a járat szövegének színe a megjelenítéséhez.
          nullable: true
          example: FFFFFF
        interlineWithPreviousLeg:
          type: boolean
          description: Jelzi, hogy az utas maradjon a járművön a végállomásnál, mert másik
              menetként folytatódik (hurokjárat).
          nullable: true
          example: false
        tripBlockId:
          type: string
          description: Tranzit láb esetén a menethez tartozó GTFS block_id, amennyiben létezik.
          nullable: true
          example: C32859_MP53_39_13
        headsign:
          type: string
          description: Tranzit láb esetén a menet célállomása.
          nullable: true
          example: Nagyvárad tér M
        agencyId:
          type: string
          description: Tranzit láb esetén a járatot biztosító szolgáltató azonosítója.
          nullable: true
          example: BKK_BKK
        tripId:
          type: string
          description: Tranzit láb esetén a menet azonosítója.
          nullable: true
          example: BKK_C328598112
        serviceDate:
          type: string
          description: Tranzit láb esetén a menet menetrendi napja.
          nullable: true
          example: "20210709"
        from:
          $ref: '#/components/schemas/Place'
        to:
          $ref: '#/components/schemas/Place'
        legGeometry:
          $ref: '#/components/schemas/EncodedPolylineBean'
        legElevation:
          type: array
          description: A lábhoz tartozó magassági adatok.
          example: []
          items:
            $ref: '#/components/schemas/ElevationPoint'
        alertIds:
          type: array
          description: A lábhoz tartozó aktív zavarok azonosítói.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A lábhoz tartozó aktív zavarok azonosítói.
            example: '["BKK_bkkinfo-75685"]'
        routeShortName:
          type: string
          description: Tranzit láb esetén a járat rövid neve.
          nullable: true
          example: M3
        routeLongName:
          type: string
          description: Tranzit láb esetén a járat hosszú neve.
          nullable: true
          example: M3
        boardRule:
          type: string
          description: Igényvezérelt menet esetén a felszállási szabály.
          nullable: true
          example: mustPhone
        alightRule:
          type: string
          description: Igényvezérelt menet esetén a leszállási szabály.
          nullable: true
          example: coordinateWithDriver
        rentedBike:
          type: boolean
          description: Jelzi, hogy a lábat bérelt kerékpárral kell bejárni.
          nullable: true
          example: true
        wait:
          type: string
          description: A várakozási idő mennyiségi típusa a tranzit típusú lábon.
          nullable: true
          example: SHORT
          enum:
          - SHORT
          - LONG
        routeIds:
          type: array
          description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon
              használt járatok azonosítóinak listája.
          nullable: true
          example:
          - BKK_MP53
          items:
            type: string
            description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon
                használt járatok azonosítóinak listája.
            nullable: true
            example: '["BKK_MP53"]'
        tripIds:
          type: array
          description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon
              használt menetek azonosítóinak listája.
          nullable: true
          example:
          - BKK_C328598112
          - BKK_C328598112
          items:
            type: string
            description: Útiterv minták esetén, a lábnak a mintában megfelelő, más lábakon
                használt menetek azonosítóinak listája.
            nullable: true
            example: '["BKK_C328598112","BKK_C328598112"]'
        hasAlertInPattern:
          type: boolean
          description: Útiterv minták esetén jelzi, hogy a mintában a megfelelő lábak valamelyikén
              szerepel aktív riasztás. Nincs kitöltve, ha az útiterv minták ki vannak
              kapcsolva.
          nullable: true
          example: true
        generalizedCost:
          type: integer
          description: Az utazástervező algoritmus által használt súly.
          format: int32
          example: 998
        requiresBooking:
          type: boolean
          description: Igaz, ha szükséges foglalás.
          example: true
        onBoardAccess:
          type: boolean
          description: Igaz, ha járatról történt a tervezés.
          nullable: true
          example: true
          default: false
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához
              lehet használni.
          example: 20210708:BKK:AS4356
        duration:
          type: integer
          format: int64
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
          writeOnly: true
        transitLeg:
          type: boolean
        intermediateStops:
          type: array
          description: Tranzit láb esetén a köztes megállók a láb kezdete és végződése között.
          nullable: true
          items:
            $ref: '#/components/schemas/Place'
        steps:
          type: array
          description: Az útvonal lépései gyalogos, kerékpáros vagy autós láb lesetén.
          nullable: true
          items:
            $ref: '#/components/schemas/WalkStep'
      description: Az útiterv lábai (részei).
    PatternStatistics:
      type: object
      properties:
        min:
          type: integer
          description: Minimum érték. Akkor van kitöltve, ha az adatok különbözőek.
          format: int64
        max:
          type: integer
          description: Maximum érték. Akkor van kitöltve, ha az adatok különbözőek.
          format: int64
        avg:
          type: integer
          description: Átlag érték. Akkor van kitöltve, ha az adatok megegyeznek.
          format: int64
        text:
          type: string
          description: A klienseken megjelenített szöveg.
      description: Útitervminták engedélyezése esetén a minták időtartam-adatai.
    Place:
      type: object
      properties:
        name:
          type: string
          description: Megálló esetén a megálló neve, POI-nál a POI neve.
          example: realCity ITS Kft.
        ticketingLocation:
          $ref: '#/components/schemas/TicketingLocation'
        stopId:
          type: string
          description: A megálló azonosítója, ha a hely egy megálló.
          nullable: true
          example: BKK_110452
        stopCode:
          type: string
          description: A megálló kódja, ha a hely egy megálló.
          nullable: true
          example: "110452"
        platformCode:
          type: string
          description: A megálló peron-kódja, ha a hely egy megálló.
          nullable: true
          example: "1"
        lon:
          type: number
          description: A hely hosszúsági koordinátája.
          format: double
          nullable: true
          example: 19.071962345420864
        lat:
          type: number
          description: A hely szélességi koordinátája.
          format: double
          nullable: true
          example: 47.47430103584126
        arrival:
          type: string
          description: A helyre érkezés időpontja ezredmásodpercben.
          format: date-time
          nullable: true
        departure:
          type: string
          description: A helyről való indulás időpontja ezredmásodpercben.
          format: date-time
          nullable: true
        orig:
          type: string
          description: Az indulási és az érkezési hely címkéje. Az első és az utolsó útvonal
              lábon van kitöltve.
          nullable: true
          example: realCity ITS Kft.
        stopIndex:
          type: integer
          description: A megálló indexe, ha a hely egy megálló.
          format: int32
          nullable: true
          example: 10
        stopSequence:
          type: integer
          description: A megálló sorszáma a meneten, ha a hely egy megálló.
          format: int32
          nullable: true
          example: 10
      description: Tranzit láb esetén a köztes megállók a láb kezdete és végződése között.
      nullable: true
    PlanTripResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesResponse'
    PlannerError:
      type: object
      properties:
        id:
          type: integer
          description: A hibaüzenet azonosítója.
          format: int32
          example: 0
        message:
          type: string
          description: A hibaüzenet kódja.
          example: OUTSIDE_BOUNDS
          enum:
          - PLAN_OK
          - SYSTEM_ERROR
          - GRAPH_UNAVAILABLE
          - PLANNER_SERVICE_UNAVAILABLE
          - OUTSIDE_BOUNDS
          - PATH_NOT_FOUND
          - NO_TRANSIT_TIMES
          - REQUEST_TIMEOUT
          - BOGUS_PARAMETER
          - GEOCODE_FROM_NOT_FOUND
          - GEOCODE_TO_NOT_FOUND
          - GEOCODE_FROM_TO_NOT_FOUND
          - TOO_CLOSE
          - LOCATION_NOT_ACCESSIBLE
          - MISSING_MODE
          - GEOCODE_FROM_AMBIGUOUS
          - GEOCODE_TO_AMBIGUOUS
          - GEOCODE_FROM_TO_AMBIGUOUS
          - UNDERSPECIFIED_TRIANGLE
          - TRIANGLE_NOT_AFFINE
          - TRIANGLE_OPTIMIZE_TYPE_NOT_SET
          - TRIANGLE_VALUES_NOT_SET
        missing:
          type: array
          description: A rossz paraméterek listája.
          example:
          - from
          items:
            type: string
            description: A rossz paraméterek listája.
            example: '["from"]'
        noPath:
          type: boolean
          description: Igaz, ha nem sikerült útvonalat találni.
          example: true
        msgFromMessage:
          type: string
          writeOnly: true
          enum:
          - PLAN_OK
          - SYSTEM_ERROR
          - GRAPH_UNAVAILABLE
          - PLANNER_SERVICE_UNAVAILABLE
          - OUTSIDE_BOUNDS
          - PATH_NOT_FOUND
          - NO_TRANSIT_TIMES
          - REQUEST_TIMEOUT
          - BOGUS_PARAMETER
          - GEOCODE_FROM_NOT_FOUND
          - GEOCODE_TO_NOT_FOUND
          - GEOCODE_FROM_TO_NOT_FOUND
          - TOO_CLOSE
          - LOCATION_NOT_ACCESSIBLE
          - MISSING_MODE
          - GEOCODE_FROM_AMBIGUOUS
          - GEOCODE_TO_AMBIGUOUS
          - GEOCODE_FROM_TO_AMBIGUOUS
          - UNDERSPECIFIED_TRIANGLE
          - TRIANGLE_NOT_AFFINE
          - TRIANGLE_OPTIMIZE_TYPE_NOT_SET
          - TRIANGLE_VALUES_NOT_SET
      description: A hibát tartalmazza, ha nem sikerült a tervezés.
      nullable: true
    Response:
      type: object
      properties:
        requestParameters:
          type: object
          additionalProperties:
            type: string
            description: A tervezési paraméterek.
          description: A tervezési paraméterek.
        plan:
          $ref: '#/components/schemas/TripPlan'
        metadata:
          $ref: '#/components/schemas/ApiTripSearchMetadata'
        error:
          $ref: '#/components/schemas/PlannerError'
      description: A lekért adat.
    TicketingLocation:
      type: object
      properties:
        id:
          type: string
          description: A jegyértékesítési hely azonosítója.
          example: "2306"
        type:
          type: string
          description: A jegyértékesítési hely típusa.
          example: RESELLER
          enum:
          - CUSTOMER_CENTER
          - CASHIER
          - VENDING_MACHINE
          - RESELLER
        state:
          type: string
          description: A jegyértékesítési hely állapota.
          example: OPERATIONAL
          enum:
          - PLANNED
          - OPERATIONAL
          - INOPERATIVE
        visible:
          type: boolean
          description: Ha `false`, akkor hibás az adat, így a felületen elrejtésre kerül.
          example: true
        place:
          type: string
          description: A jegyértékesítési hely helye.
          example: Budapest, XIII. kerület
        address:
          type: string
          description: A jegyértékesítési hely címe.
          example: Viktor Hugo utcai alulj. Lehel tér
        description:
          type: string
          description: A jegyértékesítési hely leírása.
          example: Nemzeti Dohánybolt
        operator:
          type: string
          description: A jegyértékesítési hely üzemeltetője.
          example: Kisviszonteladó
        lat:
          type: number
          description: A jegyértékesítési hely szélességi koordinátája.
          format: double
          example: 47.517458
        lon:
          type: number
          description: A jegyértékesítési hely hosszúsági koordinátája.
          format: double
          example: 19.060594
        cashAccepted:
          type: boolean
          description: Jelzi, hogy a jegyértékesítési helyen elfogadnak készpénzt.
          example: true
        creditCardsAccepted:
          type: boolean
          description: Jelzi, hogy a jegyértékesítési helyen elfogadnak bankkártyát.
          example: true
        passIdCreation:
          type: boolean
          description: Lehet-e a helyszínen igazolványt csináltatni.
          example: true
        ticketPassExchange:
          type: boolean
          description: Be lehet-e váltani a helyszínen jegyet.
          example: true
        openingPeriods:
          type: array
          description: A jegyértékesítési hely nyitvatartása.
          items:
            $ref: '#/components/schemas/TicketingPeriod'
        products:
          type: array
          description: Az árusított termékek azonosítói.
          items:
            type: string
            description: Az árusított termékek azonosítói.
        lastModified:
          type: string
          description: A jegyértékesítési hely utolsó frissítésének időpontja ezredmásodpercben.
          format: date-time
      description: A jegyértékesítési pontok listája.
    TicketingPeriod:
      type: object
      properties:
        dayOfWeek:
          type: string
          description: A nyitvatartási idő napja. Lehet HOL (ünnepnap) és 0247 (éjjel-nappali).
          example: TUE
          enum:
          - MON
          - TUE
          - WED
          - THU
          - FRI
          - SAT
          - SUN
          - HOL
          - O247
        opens:
          type: string
          description: Nyitási idő HH:mm formátumban.
          example: 00:00
        closes:
          type: string
          description: Zárási idő HH:mm formátumban.
          example: 23:59
        opensSeconds:
          type: integer
          description: Nyitási idő másodpercben.
          format: int32
          example: 0
        closesSeconds:
          type: integer
          description: Zárási idő másodpercben.
          format: int32
          example: 86340
      description: A jegyértékesítési hely nyitvatartása.
    TransitEntryWithReferencesResponse:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/Response'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TripPlan:
      type: object
      properties:
        date:
          type: string
          description: Az útvonal kezdete ezredmásodpercben.
          format: date-time
        from:
          $ref: '#/components/schemas/Place'
        to:
          $ref: '#/components/schemas/Place'
        itineraries:
          type: array
          description: A talált útvonalak listája.
          items:
            $ref: '#/components/schemas/Itinerary'
      description: A tervezett útvonalak.
    WalkStep:
      type: object
      properties:
        distance:
          type: number
          description: A lépés hossza méterben.
          format: double
          example: 10.871
        relativeDirection:
          type: string
          description: A lépés iránya.
          example: LEFT
          enum:
          - DEPART
          - HARD_LEFT
          - LEFT
          - SLIGHTLY_LEFT
          - CONTINUE
          - SLIGHTLY_RIGHT
          - RIGHT
          - HARD_RIGHT
          - CIRCLE_CLOCKWISE
          - CIRCLE_COUNTERCLOCKWISE
          - ELEVATOR
          - UTURN_LEFT
          - UTURN_RIGHT
        streetName:
          type: string
          description: Az utca neve, amin a lépés halad.
          example: Lehel tér M
        absoluteDirection:
          type: string
          description: A lépés abszolút iránya.
          example: WEST
          enum:
          - NORTH
          - NORTHEAST
          - EAST
          - SOUTHEAST
          - SOUTH
          - SOUTHWEST
          - WEST
          - NORTHWEST
        stayOn:
          type: boolean
          description: Jelzi, hogy az utca irányt vált egy kereszteződésben.
          example: true
        area:
          type: boolean
          description: 'Jelzi, hogy a lépés egy nyílt terület, pl.: pláza, vagy vonat peron.'
          example: true
        bogusName:
          type: boolean
          description: Jelzi, hogy az utca nevét a rendszer generálta.
          example: false
        lon:
          type: number
          description: A lépés kezdetének hosszúsági koordinátája.
          format: double
          example: 19.060103047839256
        lat:
          type: number
          description: A lépés kezdetének szélességi koordinátája.
          format: double
          example: 47.51758398883122
        bicycleStreetDirection:
          type: string
          description: A szakasz egyirányúsága.
          example: ONEWAY_WITH_TRAFFIC
          enum:
          - BIDIRECTIONAL
          - ONEWAY_WITH_TRAFFIC
          - ONEWAY_AGAINST_TRAFFIC
        bicycleCategory:
          $ref: '#/components/schemas/BikeStreetCategory'
        walkingBike:
          type: boolean
          description: Jelzi, hogy a szakszon sétálni kell kerékpáros tervezés esetén.
          nullable: true
          example: true
        geometry:
          $ref: '#/components/schemas/EncodedPolylineBean'
      description: Az útvonal lépései gyalogos, kerékpáros vagy autós láb lesetén.
      nullable: true
    ReferencesMethodErrors:
      type: object
      properties:
        agencyIds:
          type: array
          description: A szolgáltató ID-k, amelyek feloldása sikertelen volt.
          example: BKK
          items:
            type: string
            description: A szolgáltató ID-k, amelyek feloldása sikertelen volt.
            example: BKK
        alertIds:
          type: array
          description: A zavar ID-k, amelyek feloldása sikertelen volt.
          example: BKK_bkkinfo-81404
          items:
            type: string
            description: A zavar ID-k, amelyek feloldása sikertelen volt.
            example: BKK_bkkinfo-81404
        routeIds:
          type: array
          description: A járat ID-k, amelyek feloldása sikertelen volt.
          example: BKK_3040
          items:
            type: string
            description: A járat ID-k, amelyek feloldása sikertelen volt.
            example: BKK_3040
        stopIds:
          type: array
          description: A megálló ID-k, amelyek feloldása sikertelen volt.
          example: BKK_F00001
          items:
            type: string
            description: A megálló ID-k, amelyek feloldása sikertelen volt.
            example: BKK_F00001
    ReferencesMethodResponse:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/ReferencesMethodResult'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
    ReferencesMethodResult:
      type: object
      properties:
        errors:
          $ref: '#/components/schemas/ReferencesMethodErrors'
      description: A lekért adat.
    RouteDetailsForStopMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitRoute'
    TransitListEntryWithReferencesTransitRoute:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitRoute'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    RouteDetailsMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitRouteDetails'
    TransitEntryWithReferencesTransitRouteDetails:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitRouteDetails'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    ScheduleForStopOTPMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitSchedule'
    TransitEntryWithReferencesTransitSchedule:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitSchedule'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TransitRouteSchedule:
      type: object
      properties:
        routeId:
          type: string
          description: A menetrendhez tarozó járat azonosítója.
          example: BKK_3060
        alertIds:
          type: array
          description: A járathoz tartozó aktív zavarok.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A járathoz tartozó aktív zavarok.
            example: '["BKK_bkkinfo-75685"]'
        directions:
          type: array
          description: A menetrendi adatok irány szerint csoportosítva.
          items:
            $ref: '#/components/schemas/TransitRouteScheduleForDirection'
      description: A megállóhoz tartozó menetrend.
    TransitRouteScheduleForDirection:
      type: object
      properties:
        directionId:
          type: string
          description: Az irány azonosítója.
          example: "0"
        groups:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TransitScheduleGroup'
          description: Célmegálló és a hozzá tartozó menetrendi adatok összerendelése.
        stopTimes:
          type: array
          description: Az irányhoz tartozó menetrendi bejegyzések.
          items:
            $ref: '#/components/schemas/TransitScheduleStopTime'
      description: A menetrendi adatok irány szerint csoportosítva.
    TransitSchedule:
      type: object
      properties:
        stopId:
          type: string
          description: A menetrend megállójának azonosítója.
          example: BKK_F01294
        serviceDate:
          type: string
          description: A menetrendhez tartozó dátum.
          example: "20210708"
          deprecated: true
        date:
          type: string
          description: A menetrendhez tartozó dátum.
          format: date
        routeIds:
          type: array
          description: A menetrendhez tartozó járatok azonosítói.
          example:
          - BKK_3040
          - BKK_3060
          items:
            type: string
            description: A menetrendhez tartozó járatok azonosítói.
            example: '["BKK_3040","BKK_3060"]'
        nearbyStopIds:
          type: array
          description: A közeli megállók azonosítói.
          example:
          - BKK_F01294
          - BKK_F01294
          items:
            type: string
            description: A közeli megállók azonosítói.
            example: '["BKK_F01294","BKK_F01294"]'
        alertIds:
          type: array
          description: A megállóhoz tartozó aktív zavarok azonosítói.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: A megállóhoz tartozó aktív zavarok azonosítói.
            example: '["BKK_bkkinfo-75685"]'
        schedules:
          type: array
          description: A megállóhoz tartozó menetrend.
          items:
            $ref: '#/components/schemas/TransitRouteSchedule'
      description: A lekért adat.
    TransitScheduleGroup:
      type: object
      properties:
        groupId:
          type: string
          description: A menetrendi csoport azonosítója.
          example: Mexikói út
        headsign:
          type: string
          description: A menetrendi csoport célállomása.
          example: Mexikói út
        description:
          type: string
          description: A menetrendi csoport leírása.
          example: M1-es Mexikói út felé
      description: Célmegálló és a hozzá tartozó menetrendi adatok összerendelése.
    SearchMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitSearch'
    StatisticsResponse:
      type: object
      properties:
        result:
          type: string
          description: Egyszerű válasz.
          example: OK
    StopsForLocationResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitStop'
    TransitListEntryWithReferencesTransitStop:
      type: object
      properties:
        list:
          type: array
          description: A lekért adatok listája.
          items:
            $ref: '#/components/schemas/TransitStop'
        outOfRange:
          type: boolean
          description: Az értéke mindig `false`.
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Lista esetén "listWithReferences".
          example: listWithReferences
      description: A válasz adat.
    TicketingMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitTicketing'
    TicketingProduct:
      type: object
      properties:
        id:
          type: string
          description: A termék azonosítója.
          example: "69"
        groupId:
          type: string
          description: A termék csoportjának azonosítója.
          example: "3"
        groupName:
          type: string
          description: A termék csoportjának neve.
          example: Havi bérletek
        name:
          type: string
          description: A termék neve.
          example: Hév bérlet 20 km
        url:
          type: string
          description: A termék linkje.
          example: https://bkk.hu/jegyek-es-berletek/arak/havi-berletek/hev-berlet-20-km.79/
        price:
          type: string
          description: A termék ára.
          example: 14200 Ft
        visible:
          type: boolean
          description: Ha `false`, akkor hibás az adat, így a felületen elrejtésre kerül.
          example: true
        lastModified:
          type: string
          description: A termék utolsó frissítésének időpontja ezred másodpercben.
          format: date-time
      description: A termékek listája.
    TransitEntryWithReferencesTransitTicketing:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitTicketing'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TransitTicketing:
      type: object
      properties:
        lastModifiedTime:
          type: integer
          description: A jegyértékesítési adatok legutóbbi módosulásának időpontja.
          format: int64
          example: 1625710328000
        oldestModifiedTime:
          type: integer
          description: A legrégebb óta módosított értékesítési hely vagy termék módosításának
              időpontja.
          format: int64
          example: 1562932460000
        locations:
          type: array
          description: A jegyértékesítési pontok listája.
          items:
            $ref: '#/components/schemas/TicketingLocation'
        products:
          type: array
          description: A termékek listája.
          items:
            $ref: '#/components/schemas/TicketingProduct'
      description: A lekért adat.
    TransitEntryWithReferencesTransitTripDetailsOTP:
      type: object
      properties:
        limitExceeded:
          type: boolean
          description: Igaz, ha a lista több elemet tartalmaz, mint a limit paraméter. Indulási
              és érkezési idő típusú lekéréseknél használjuk.
          example: false
        entry:
          $ref: '#/components/schemas/TransitTripDetailsOTP'
        references:
          $ref: '#/components/schemas/TransitReferences'
        class:
          type: string
          description: Az adat típusa. Egy entitás esetén "entryWithReferences".
          example: entryWithReferences
      description: A válasz adat.
    TransitTripDetailsOTP:
      type: object
      properties:
        tripId:
          type: string
          description: A menet azonosítója.
          example: BKK_C32344815
        serviceDate:
          type: string
          description: A menet menetrendi napja.
          example: "20210708"
        vertex:
          type: string
          description: A menet utazástervező azonosítója, amelyet a `fromPlace` megadásához
              lehet használni.
          example: 20210708:BKK:AS4356
        vehicle:
          $ref: '#/components/schemas/TransitVehicle'
        polyline:
          $ref: '#/components/schemas/TransitPolyline'
        alertIds:
          type: array
          description: Aktív zavarok a meneten.
          example:
          - BKK_bkkinfo-75685
          items:
            type: string
            description: Aktív zavarok a meneten.
            example: '["BKK_bkkinfo-75685"]'
        stopTimes:
          type: array
          description: Menet megállóinak listája.
          items:
            $ref: '#/components/schemas/TransitTripStopTime'
        nextBlockTripId:
          type: string
          description: A következő menet azonosítója a csoportban, ha a menet hurokjárat.
          nullable: true
          example: BKK_C3204650
        mayRequireBooking:
          type: boolean
          description: Igaz, ha a menet (legalább egy szakasza) foglalást igényel.
          example: true
      description: A lekért adat.
    TransitTripStopTime:
      type: object
      properties:
        stopId:
          type: string
          description: A megálló azonosítója
          example: BKK_050185
        stopHeadsign:
          type: string
          description: A megállóban kijelzett célállomás.
          example: Havanna utcai lakótelep
        arrivalTime:
          type: integer
          description: A megállóba érkezés tervezett ideje epoch másodbercben. Az első megállónál
              hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        departureTime:
          type: integer
          description: A megállóból való indulás tervezett ideje epoch másodbercben. Az utolsó
              megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        predictedArrivalTime:
          type: integer
          description: A megállóba érkezés becsült ideje epoch másodbercben, ha a járathoz
              van valós idejű adat. Az első megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        predictedDepartureTime:
          type: integer
          description: A megállóból való becsült indulás ideje epoch másodbercben, ha a járathoz
              van valós idejű adat. Az utolsó megállónál hiányzik.
          format: int64
          nullable: true
          example: 1625732820
        uncertain:
          type: boolean
          description: Igaz, ha a menethez tartozó valós idejű adatok bizonytalanok.
          nullable: true
          example: true
        requiresBooking:
          type: boolean
          description: Igaz, ha ez a megálló foglalást igényel.
          example: true
        stopSequence:
          type: integer
          description: A megálló sorrendje a járaton.
          format: int32
          example: 1
        shapeDistTraveled:
          type: number
          description: Milyen messze található a megálló az elsőtől a minta mentén méterben.
          format: double
          example: 935.0
      description: Menet megállóinak listája.
    TripDetailsOTPMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitEntryWithReferencesTransitTripDetailsOTP'
    VehicleForTripMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitVehicle'
    VehiclesForLocationMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitVehicle'
    VehiclesForRouteMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitVehicle'
    VehiclesForStopMethodResponse:
      type: object
      properties:
        currentTime:
          type: integer
          description: Az aktuális szerveridő ezredmásodpercben.
          format: int64
          example: 1625747515786
        version:
          type: integer
          description: A válasz API verziója.
          format: int32
          example: 3
        status:
          $ref: '#/components/schemas/Status'
        code:
          type: integer
          description: A válasz státusz kódja.
          format: int32
          example: 200
        text:
          type: string
          description: A válasz szövege.
          example: OK
        data:
          $ref: '#/components/schemas/TransitListEntryWithReferencesTransitVehicle'
  securitySchemes:
    ApiKeyQuery:
      type: apiKey
      description: A kliensalkalmazást azonosító API kulcs.
      name: key
      in: query
