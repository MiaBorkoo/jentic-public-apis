openapi: 3.0.0
info:
  title: Custom Vision Training Client
  version: '3.1'
servers:
  - url: >-
      https://southcentralus.api.cognitive.microsoft.com/customvision/v3.1/training
  - url: '{Endpoint}'
    variables:
      Endpoint:
        description: Supported Cognitive Services endpoints.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /domains:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - DomainsApi
      operationId: GetDomains
      summary: Get a list of the available domains.
      x-ms-examples:
        Successful GetDomains request:
          $ref: ./examples/GetDomains.json
  '/domains/{domainId}':
    get:
      parameters:
        - description: The id of the domain to get information about.
          in: path
          name: domainId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain'
            text/xml:
              schema:
                $ref: '#/components/schemas/Domain'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - DomainsApi
      operationId: GetDomain
      summary: Get information about a specific domain.
      x-ms-examples:
        Successful GetDomain request:
          $ref: ./examples/GetDomain.json
  /projects:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetProjects
      summary: Get your projects.
      x-ms-examples:
        Successful GetProjects request:
          $ref: ./examples/GetProjects.json
    post:
      parameters:
        - description: Name of the project.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: The description of the project.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: The id of the domain to use for this project. Defaults to General.
          in: query
          name: domainId
          required: false
          schema:
            format: uuid
            type: string
        - description: The type of classifier to create for this project.
          in: query
          name: classificationType
          required: false
          schema:
            enum:
              - Multiclass
              - Multilabel
            type: string
        - description: List of platforms the trained model is intending exporting to.
          in: query
          name: targetExportPlatforms
          required: false
          schema:
            items:
              enum:
                - CoreML
                - TensorFlow
                - DockerFile
                - ONNX
                - VAIDK
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: CreateProject
      summary: Create a project.
      x-ms-examples:
        Successful CreateProject request:
          $ref: ./examples/CreateProject.json
  '/projects/{projectId}':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: DeleteProject
      summary: Delete a specific project.
      x-ms-examples:
        Successful DeleteProject request:
          $ref: ./examples/DeleteProject.json
    get:
      parameters:
        - description: The id of the project to get.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetProject
      summary: Get a specific project.
      x-ms-examples:
        Successful GetProject request:
          $ref: ./examples/GetProject.json
    patch:
      parameters:
        - description: The id of the project to update.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: UpdateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          application/xml:
            schema:
              $ref: '#/components/schemas/Project'
          text/xml:
            schema:
              $ref: '#/components/schemas/Project'
        description: The updated project model.
        required: true
      summary: Update a specific project.
      x-ms-examples:
        Successful UpdateProject request:
          $ref: ./examples/UpdateProject.json
  '/projects/{projectId}/images':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Ids of the images to be deleted. Limited to 256 images per batch.
          in: query
          name: imageIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 256
            minItems: 0
            type: array
          style: form
        - description: >-
            Flag to specify delete all images, specify this flag or a list of
            images. Using this flag will return a 202 response to indicate the
            images are being deleted.
          in: query
          name: allImages
          required: false
          schema:
            type: boolean
        - description: >-
            Removes these images from all iterations, not just the current
            workspace. Using this flag will return a 202 response to indicate
            the images are being deleted.
          in: query
          name: allIterations
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      operationId: DeleteImages
      summary: Delete images from the set of training images.
      x-ms-examples:
        Successful DeleteImages request:
          $ref: ./examples/DeleteImages.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tags ids with which to tag each image. Limited to 20.
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API accepts body content as multipart/form-data and application/octet-stream. When using multipart\r\nmultiple image files can be sent at once, with a maximum of 64 files"
      operationId: CreateImagesFromData
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      summary: Add the provided images to the set of training images.
      x-ms-examples:
        Successful CreateImagesFromData request:
          $ref: ./examples/CreateImagesFromData.json
  '/projects/{projectId}/images/files':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: >-
        This API accepts a batch of files, and optionally tags, to create
        images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
        description: >-
          The batch of image files to add. Limited to 64 images and 20 tags per
          batch.
        required: true
      summary: Add the provided batch of images to the set of training images.
      x-ms-examples:
        Successful CreateImagesFromFiles request:
          $ref: ./examples/CreateImagesFromFiles.json
  '/projects/{projectId}/images/id':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The list of image ids to retrieve. Limited to 256.
          in: query
          name: imageIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 256
            minItems: 0
            type: array
          style: form
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API will return a set of Images for the specified tags and optionally iteration. If no iteration is specified the\r\ncurrent workspace is used."
      operationId: GetImagesByIds
      summary: Get images by id for a given project iteration.
      x-ms-examples:
        Successful GetImagesByIds request:
          $ref: ./examples/GetImagesByIds.json
  '/projects/{projectId}/images/predictions':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: >-
        This API creates a batch of images from predicted images specified.
        There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromPredictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
        description: Image and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      summary: Add the specified predicted images to the set of training images.
      x-ms-examples:
        Successful CreateImagesFromPredictions request:
          $ref: ./examples/CreateImagesFromPredictions.json
  '/projects/{projectId}/images/regions':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Regions to delete. Limited to 64.
          in: query
          name: regionIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      operationId: DeleteImageRegions
      summary: Delete a set of image regions.
      x-ms-examples:
        Successful DeleteImageRegions request:
          $ref: ./examples/DeleteImageRegions.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegionCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageRegionCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageRegionCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API accepts a batch of image regions, and optionally tags, to update existing images with region information.\r\nThere is a limit of 64 entries in the batch."
      operationId: CreateImageRegions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageRegionCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageRegionCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageRegionCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageRegionCreateBatch'
        description: >-
          Batch of image regions which include a tag and bounding box. Limited
          to 64.
        required: true
      summary: Create a set of image regions.
      x-ms-examples:
        Successful CreateImageRegions request:
          $ref: ./examples/CreateImageRegions.json
  '/projects/{projectId}/images/suggested':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: IterationId to use for the suggested tags and regions.
          in: query
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestedTagAndRegionQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/SuggestedTagAndRegionQuery'
            text/xml:
              schema:
                $ref: '#/components/schemas/SuggestedTagAndRegionQuery'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: >-
        This API will fetch untagged images filtered by suggested tags Ids. It
        returns an empty array if no images are found.
      operationId: QuerySuggestedImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestedTagAndRegionQueryToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SuggestedTagAndRegionQueryToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/SuggestedTagAndRegionQueryToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/SuggestedTagAndRegionQueryToken'
        description: Contains properties we need to query suggested images.
        required: true
      summary: >-
        Get untagged images whose suggested tags match given tags. Returns empty
        array if no images are found.
      x-ms-examples:
        Successful QuerySuggestedImages request:
          $ref: ./examples/QuerySuggestedImages.json
  '/projects/{projectId}/images/suggested/count':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: IterationId to use for the suggested tags and regions.
          in: query
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            application/xml:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
            text/xml:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: >-
        This API takes in tagIds to get count of untagged images per suggested
        tags for a given threshold.
      operationId: QuerySuggestedImageCount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagFilter'
          application/xml:
            schema:
              $ref: '#/components/schemas/TagFilter'
          text/xml:
            schema:
              $ref: '#/components/schemas/TagFilter'
        description: 'Model that contains tagIds, threshold and projectType to query by.'
        required: true
      summary: >-
        Get count of images whose suggested tags match given tags and their
        probabilities are greater than or equal to the given threshold. Returns
        count as 0 if none found.
      x-ms-examples:
        Successful QuerySuggestedImageCount request:
          $ref: ./examples/QuerySuggestedImageCount.json
  '/projects/{projectId}/images/tagged':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: 'Maximum number of images to return. Defaults to 50, limited to 256.'
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: >-
            Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r\nUse the {take} and {skip} parameters to control how many images to return in a given batch.\r\nThe filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r\n\"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetTaggedImages
      summary: Get tagged images for a given project iteration.
      x-ms-examples:
        Successful GetTaggedImages request:
          $ref: ./examples/GetTaggedImages.json
  '/projects/{projectId}/images/tagged/count':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r\n\"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetTaggedImageCount
      summary: 'Gets the number of images tagged with the provided {tagIds}.'
      x-ms-examples:
        Successful GetTaggedImageCount request:
          $ref: ./examples/GetTaggedImageCount.json
  '/projects/{projectId}/images/tags':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Image ids. Limited to 64 images.
          in: query
          name: imageIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - description: Tags to be deleted from the specified images. Limited to 20 tags.
          in: query
          name: tagIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      operationId: DeleteImageTags
      summary: Remove a set of tags from a set of images.
      x-ms-examples:
        Successful DeleteImageTags request:
          $ref: ./examples/DeleteImageTags.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      operationId: CreateImageTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
        description: Batch of image tags. Limited to 128 tags per batch.
        required: true
      summary: Associate a set of images with a set of tags.
      x-ms-examples:
        Successful CreateImageTags request:
          $ref: ./examples/CreateImageTags.json
  '/projects/{projectId}/images/untagged':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: 'Maximum number of images to return. Defaults to 50, limited to 256.'
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: >-
            Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r\nUse the {take} and {skip} parameters to control how many images to return in a given batch."
      operationId: GetUntaggedImages
      summary: Get untagged images for a given project iteration.
      x-ms-examples:
        Successful GetUntaggedImages request:
          $ref: ./examples/GetUntaggedImages.json
  '/projects/{projectId}/images/untagged/count':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: "This API returns the images which have no tags for a given project and optionally an iteration. If no iteration is specified the\r\ncurrent workspace is used."
      operationId: GetUntaggedImageCount
      summary: Gets the number of untagged images.
      x-ms-examples:
        Successful GetUntaggedImageCount request:
          $ref: ./examples/GetUntaggedImageCount.json
  '/projects/{projectId}/images/urls':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageApi
      description: >-
        This API accepts a batch of urls, and optionally tags, to create images.
        There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromUrls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
        description: Image urls and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      summary: Add the provided images urls to the set of training images.
      x-ms-examples:
        Successful CreateImagesFromUrls request:
          $ref: ./examples/CreateImagesFromUrls.json
  '/projects/{projectId}/images/{imageId}/regionproposals':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The image id.
          in: path
          name: imageId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageRegionProposal'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ImageRegionProposalApi
      description: >-
        This API will get region proposals for an image along with confidences
        for the region. It returns an empty array if no proposals are found.
      operationId: GetImageRegionProposals
      summary: >-
        Get region proposals for an image. Returns empty array if no proposals
        are found.
      x-ms-examples:
        Successful GetImageRegionProposals request:
          $ref: ./examples/GetImageRegionProposals.json
  '/projects/{projectId}/iterations':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetIterations
      summary: Get iterations for the project.
      x-ms-examples:
        Successful GetIterations request:
          $ref: ./examples/GetIterations.json
  '/projects/{projectId}/iterations/{iterationId}':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: DeleteIteration
      summary: Delete a specific iteration of a project.
      x-ms-examples:
        Successful DeleteIteration request:
          $ref: ./examples/DeleteIteration.json
    get:
      parameters:
        - description: The id of the project the iteration belongs to.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the iteration to get.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetIteration
      summary: Get a specific iteration.
      x-ms-examples:
        Successful GetIteration request:
          $ref: ./examples/GetIteration.json
    patch:
      parameters:
        - description: Project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: UpdateIteration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iteration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Iteration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Iteration'
          text/xml:
            schema:
              $ref: '#/components/schemas/Iteration'
        description: The updated iteration model.
        required: true
      summary: Update a specific iteration.
      x-ms-examples:
        Successful UpdateIteration request:
          $ref: ./examples/UpdateIteration.json
  '/projects/{projectId}/iterations/{iterationId}/export':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetExports
      summary: Get the list of exports for a specific iteration.
      x-ms-examples:
        Successful GetExports request:
          $ref: ./examples/GetExports.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The target platform.
          in: query
          name: platform
          required: true
          schema:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            type: string
        - description: The flavor of the target platform.
          in: query
          name: flavor
          required: false
          schema:
            enum:
              - Linux
              - Windows
              - ONNX10
              - ONNX12
              - ARM
              - TensorFlowNormal
              - TensorFlowLite
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
            application/xml:
              schema:
                $ref: '#/components/schemas/Export'
            text/xml:
              schema:
                $ref: '#/components/schemas/Export'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: ExportIteration
      summary: Export a trained iteration.
      x-ms-examples:
        Successful ExportIteration request:
          $ref: ./examples/ExportIteration.json
  '/projects/{projectId}/iterations/{iterationId}/performance':
    get:
      parameters:
        - description: The id of the project the iteration belongs to.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the iteration to get.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The threshold used to determine true predictions.
          in: query
          name: threshold
          required: false
          schema:
            format: float
            type: number
        - description: >-
            If applicable, the bounding box overlap threshold used to determine
            true predictions.
          in: query
          name: overlapThreshold
          required: false
          schema:
            format: float
            type: number
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
            application/xml:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
            text/xml:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: GetIterationPerformance
      summary: Get detailed performance information about an iteration.
      x-ms-examples:
        Successful GetIterationPerformance request:
          $ref: ./examples/GetIterationPerformance.json
  '/projects/{projectId}/iterations/{iterationId}/performance/images':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: >-
            A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 20
            minItems: 0
            type: array
          style: form
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
        - description: 'Maximum number of images to return. Defaults to 50, limited to 256.'
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            maximum: 256
            minimum: 0
            type: integer
        - description: >-
            Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ImagePerformance'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ImagePerformance'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/ImagePerformance'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r\nUse the {take} and {skip} parameters to control how many images to return in a given batch.\r\nThe filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r\n\"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetImagePerformances
      summary: Get image with its prediction for a given project iteration.
      x-ms-examples:
        Successful GetImagePerformances request:
          $ref: ./examples/GetImagePerformances.json
  '/projects/{projectId}/iterations/{iterationId}/performance/images/count':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: >-
            A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          name: tagIds
          required: false
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: int32
                type: integer
            application/xml:
              schema:
                format: int32
                type: integer
            text/xml:
              schema:
                format: int32
                type: integer
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      description: "The filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r\n\"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetImagePerformanceCount
      summary: "Gets the number of images tagged with the provided {tagIds} that have prediction results from\r\ntraining for the provided iteration {iterationId}."
      x-ms-examples:
        Successful GetImagePerformanceCount request:
          $ref: ./examples/GetImagePerformanceCount.json
  '/projects/{projectId}/iterations/{iterationId}/publish':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: UnpublishIteration
      summary: Unpublish a specific iteration.
      x-ms-examples:
        Successful UnpublishIteration request:
          $ref: ./examples/UnpublishIteration.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The name to give the published iteration.
          in: query
          name: publishName
          required: true
          schema:
            type: string
        - description: The id of the prediction resource to publish to.
          in: query
          name: predictionId
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: PublishIteration
      summary: Publish a specific iteration.
      x-ms-examples:
        Successful PublishIteration request:
          $ref: ./examples/PublishIteration.json
  '/projects/{projectId}/predictions':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The prediction ids. Limited to 64.
          in: query
          name: ids
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - PredictionsApi
      operationId: DeletePrediction
      summary: >-
        Delete a set of predicted images and their associated prediction
        results.
      x-ms-examples:
        Successful DeletePrediction request:
          $ref: ./examples/DeletePrediction.json
  '/projects/{projectId}/predictions/query':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionQueryResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/PredictionQueryResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/PredictionQueryResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - PredictionsApi
      operationId: QueryPredictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
        description: Parameters used to query the predictions. Limited to combining 2 tags.
        required: true
      summary: Get images that were sent to your prediction endpoint.
      x-ms-examples:
        Successful QueryPredictions request:
          $ref: ./examples/QueryPredictions.json
  '/projects/{projectId}/quicktest/image':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r\n            The default iteration for the project will be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          schema:
            default: true
            type: boolean
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - PredictionsApi
      operationId: QuickTestImage
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      summary: Quick test an image.
      x-ms-examples:
        Successful QuickTestImage request:
          $ref: ./examples/QuickTestImage.json
  '/projects/{projectId}/quicktest/url':
    post:
      parameters:
        - description: The project to evaluate against.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r\n            The default iteration for the project will be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          schema:
            default: true
            type: boolean
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImagePrediction'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - PredictionsApi
      operationId: QuickTestImageUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageUrl'
        description: An ImageUrl that contains the url of the image to be evaluated.
        required: true
      summary: Quick test an image url.
      x-ms-examples:
        Successful QuickTestImageUrl request:
          $ref: ./examples/QuickTestImageUrl.json
  '/projects/{projectId}/tags':
    get:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - TagsApi
      operationId: GetTags
      summary: Get the tags for a given project and iteration.
      x-ms-examples:
        Successful GetTags request:
          $ref: ./examples/GetTags.json
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag name.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: Optional description for the tag.
          in: query
          name: description
          required: false
          schema:
            type: string
        - description: Optional type for the tag.
          in: query
          name: type
          required: false
          schema:
            enum:
              - Regular
              - Negative
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - TagsApi
      operationId: CreateTag
      summary: Create a tag for the project.
      x-ms-examples:
        Successful CreateTag request:
          $ref: ./examples/CreateTag.json
  '/projects/{projectId}/tags/{tagId}':
    delete:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Id of the tag to be deleted.
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - TagsApi
      operationId: DeleteTag
      summary: Delete a tag from the project.
      x-ms-examples:
        Successful DeleteTag request:
          $ref: ./examples/DeleteTag.json
    get:
      parameters:
        - description: The project this tag belongs to.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag id.
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: >-
            The iteration to retrieve this tag from. Optional, defaults to
            current training set.
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - TagsApi
      operationId: GetTag
      summary: Get information about a specific tag.
      x-ms-examples:
        Successful GetTag request:
          $ref: ./examples/GetTag.json
    patch:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the target tag.
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - TagsApi
      operationId: UpdateTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tag'
          text/xml:
            schema:
              $ref: '#/components/schemas/Tag'
        description: The updated tag model.
        required: true
      summary: Update a tag.
      x-ms-examples:
        Successful UpdateTag request:
          $ref: ./examples/UpdateTag.json
  '/projects/{projectId}/tagsandregions/suggestions':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: IterationId to use for tag and region suggestion.
          in: query
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: >-
            Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to get imageIds.
          in: query
          name: imageIds
          required: true
          schema:
            items:
              format: uuid
              nullable: false
              type: string
            maxItems: 64
            minItems: 0
            type: array
          style: form
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestedTagAndRegion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestedTagAndRegion'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/SuggestedTagAndRegion'
                type: array
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - SuggestTagsAndRegionsApi
      description: "This API will get suggested tags and regions for an array/batch of untagged images along with confidences for the tags. It returns an empty array if no tags are found.\r\nThere is a limit of 64 images in the batch."
      operationId: SuggestTagsAndRegions
      summary: >-
        Suggest tags and regions for an array/batch of untagged images. Returns
        empty array if no tags are found.
      x-ms-examples:
        Successful SuggestTagsAndRegions request:
          $ref: ./examples/SuggestTagsAndRegions.json
  '/projects/{projectId}/train':
    post:
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: 'The type of training to use to train the project (default: Regular).'
          in: query
          name: trainingType
          required: false
          schema:
            enum:
              - Regular
              - Advanced
            type: string
        - description: The number of hours reserved as budget for training (if applicable).
          in: query
          name: reservedBudgetInHours
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - description: >-
            Whether to force train even if dataset and configuration does not
            change (default: false).
          in: query
          name: forceTrain
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            The email address to send notification to when training finishes
            (default: null).
          in: query
          name: notificationEmailAddress
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            application/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
            text/xml:
              schema:
                $ref: '#/components/schemas/CustomVisionError'
          description: Error response
      tags:
        - ProjectApi
      operationId: TrainProject
      summary: Queues project for training.
      x-ms-examples:
        Successful TrainProject request:
          $ref: ./examples/TrainProject.json
components:
  parameters:
    ApiKey:
      description: API key.
      in: header
      name: Training-Key
      required: true
      schema:
        type: string
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
    Endpoint:
      description: Supported Cognitive Services endpoints.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    CreateImagesFromData:
      content:
        application/octet-stream:
          schema:
            format: binary
            type: string
      required: true
  schemas:
    BoundingBox:
      description: Bounding box that defines a region of an image.
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - left
        - top
        - width
        - height
      type: object
    CustomVisionError:
      properties:
        code:
          description: The error code.
          enum:
            - NoError
            - BadRequest
            - BadRequestExceededBatchSize
            - BadRequestNotSupported
            - BadRequestInvalidIds
            - BadRequestProjectName
            - BadRequestProjectNameNotUnique
            - BadRequestProjectDescription
            - BadRequestProjectUnknownDomain
            - BadRequestProjectUnknownClassification
            - BadRequestProjectUnsupportedDomainTypeChange
            - BadRequestProjectUnsupportedExportPlatform
            - BadRequestProjectImagePreprocessingSettings
            - BadRequestIterationName
            - BadRequestIterationNameNotUnique
            - BadRequestIterationDescription
            - BadRequestIterationIsNotTrained
            - BadRequestWorkspaceCannotBeModified
            - BadRequestWorkspaceNotDeletable
            - BadRequestTagName
            - BadRequestTagNameNotUnique
            - BadRequestTagDescription
            - BadRequestTagType
            - BadRequestMultipleNegativeTag
            - BadRequestImageTags
            - BadRequestImageRegions
            - BadRequestNegativeAndRegularTagOnSameImage
            - BadRequestRequiredParamIsNull
            - BadRequestIterationIsPublished
            - BadRequestInvalidPublishName
            - BadRequestInvalidPublishTarget
            - BadRequestUnpublishFailed
            - BadRequestIterationNotPublished
            - BadRequestSubscriptionApi
            - BadRequestExceedProjectLimit
            - BadRequestExceedIterationPerProjectLimit
            - BadRequestExceedTagPerProjectLimit
            - BadRequestExceedTagPerImageLimit
            - BadRequestExceededQuota
            - BadRequestCannotMigrateProjectWithName
            - BadRequestNotLimitedTrial
            - BadRequestImageBatch
            - BadRequestImageStream
            - BadRequestImageUrl
            - BadRequestImageFormat
            - BadRequestImageSizeBytes
            - BadRequestImageExceededCount
            - BadRequestTrainingNotNeeded
            - BadRequestTrainingNotNeededButTrainingPipelineUpdated
            - BadRequestTrainingValidationFailed
            - BadRequestClassificationTrainingValidationFailed
            - BadRequestMultiClassClassificationTrainingValidationFailed
            - BadRequestMultiLabelClassificationTrainingValidationFailed
            - BadRequestDetectionTrainingValidationFailed
            - BadRequestTrainingAlreadyInProgress
            - BadRequestDetectionTrainingNotAllowNegativeTag
            - BadRequestInvalidEmailAddress
            - BadRequestDomainNotSupportedForAdvancedTraining
            - BadRequestExportPlatformNotSupportedForAdvancedTraining
            - BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
            - BadRequestExportValidationFailed
            - BadRequestExportAlreadyInProgress
            - BadRequestPredictionIdsMissing
            - BadRequestPredictionIdsExceededCount
            - BadRequestPredictionTagsExceededCount
            - BadRequestPredictionResultsExceededCount
            - BadRequestPredictionInvalidApplicationName
            - BadRequestPredictionInvalidQueryParameters
            - BadRequestInvalid
            - UnsupportedMediaType
            - Forbidden
            - ForbiddenUser
            - ForbiddenUserResource
            - ForbiddenUserSignupDisabled
            - ForbiddenUserSignupAllowanceExceeded
            - ForbiddenUserDoesNotExist
            - ForbiddenUserDisabled
            - ForbiddenUserInsufficientCapability
            - ForbiddenDRModeEnabled
            - ForbiddenInvalid
            - NotFound
            - NotFoundProject
            - NotFoundProjectDefaultIteration
            - NotFoundIteration
            - NotFoundIterationPerformance
            - NotFoundTag
            - NotFoundImage
            - NotFoundDomain
            - NotFoundApimSubscription
            - NotFoundInvalid
            - Conflict
            - ConflictInvalid
            - ErrorUnknown
            - ErrorProjectInvalidWorkspace
            - ErrorProjectInvalidPipelineConfiguration
            - ErrorProjectInvalidDomain
            - ErrorProjectTrainingRequestFailed
            - ErrorProjectExportRequestFailed
            - ErrorFeaturizationServiceUnavailable
            - ErrorFeaturizationQueueTimeout
            - ErrorFeaturizationInvalidFeaturizer
            - ErrorFeaturizationAugmentationUnavailable
            - ErrorFeaturizationUnrecognizedJob
            - ErrorFeaturizationAugmentationError
            - ErrorExporterInvalidPlatform
            - ErrorExporterInvalidFeaturizer
            - ErrorExporterInvalidClassifier
            - ErrorPredictionServiceUnavailable
            - ErrorPredictionModelNotFound
            - ErrorPredictionModelNotCached
            - ErrorPrediction
            - ErrorPredictionStorage
            - ErrorRegionProposal
            - ErrorInvalid
          type: string
          x-ms-enum:
            modelAsString: true
            name: CustomVisionErrorCodes
        message:
          description: A message explaining the error reported by the service.
          type: string
      required:
        - code
        - message
      type: object
    Domain:
      properties:
        enabled:
          nullable: false
          readOnly: true
          type: boolean
        exportable:
          nullable: false
          readOnly: true
          type: boolean
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        name:
          nullable: false
          readOnly: true
          type: string
        type:
          enum:
            - Classification
            - ObjectDetection
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: DomainType
      type: object
    Export:
      properties:
        downloadUri:
          description: URI used to download the model.
          readOnly: true
          type: string
        flavor:
          description: Flavor of the export.
          enum:
            - Linux
            - Windows
            - ONNX10
            - ONNX12
            - ARM
            - TensorFlowNormal
            - TensorFlowLite
          nullable: true
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportFlavor
        newerVersionAvailable:
          description: >-
            Indicates an updated version of the export package is available and
            should be re-exported for the latest changes.
          nullable: false
          readOnly: true
          type: boolean
        platform:
          description: Platform of the export.
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportPlatform
        status:
          description: Status of the export.
          enum:
            - Exporting
            - Failed
            - Done
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportStatus
      type: object
    Image:
      description: Image model to be sent as JSON.
      properties:
        tags:
          description: Tags associated with this image.
          items:
            $ref: '#/components/schemas/ImageTag'
          nullable: true
          readOnly: true
          type: array
        created:
          description: Date the image was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height of the image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        id:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        originalImageUri:
          description: The URI to the original uploaded image.
          readOnly: true
          type: string
        regions:
          description: Regions associated with this image.
          items:
            $ref: '#/components/schemas/ImageRegion'
          nullable: true
          readOnly: true
          type: array
        resizedImageUri:
          description: The URI to the (resized) image used for training.
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original image.
          readOnly: true
          type: string
        width:
          description: Width of the image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    ImageCreateResult:
      properties:
        image:
          $ref: '#/components/schemas/Image'
          description: The image.
          readOnly: true
        sourceUrl:
          description: Source URL of the image.
          nullable: false
          readOnly: true
          type: string
        status:
          description: Status of the image creation.
          enum:
            - OK
            - OKDuplicate
            - ErrorSource
            - ErrorImageFormat
            - ErrorImageSize
            - ErrorStorage
            - ErrorLimitExceed
            - ErrorTagLimitExceed
            - ErrorRegionLimitExceed
            - ErrorUnknown
            - ErrorNegativeAndRegularTagOnSameImage
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ImageCreateStatus
      type: object
    ImageCreateSummary:
      properties:
        images:
          description: List of the image creation results.
          items:
            $ref: '#/components/schemas/ImageCreateResult'
            nullable: false
          readOnly: true
          type: array
        isBatchSuccessful:
          description: >-
            True if all of the images in the batch were created successfully,
            otherwise false.
          nullable: false
          readOnly: true
          type: boolean
      type: object
    ImageFileCreateBatch:
      properties:
        images:
          items:
            $ref: '#/components/schemas/ImageFileCreateEntry'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageFileCreateEntry:
      properties:
        contents:
          format: byte
          readOnly: false
          type: string
        name:
          nullable: false
          readOnly: false
          type: string
        regions:
          items:
            $ref: '#/components/schemas/Region'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageIdCreateBatch:
      properties:
        images:
          items:
            $ref: '#/components/schemas/ImageIdCreateEntry'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageIdCreateEntry:
      properties:
        id:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        regions:
          items:
            $ref: '#/components/schemas/Region'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImagePerformance:
      description: Image performance model.
      properties:
        tags:
          items:
            $ref: '#/components/schemas/ImageTag'
          nullable: true
          readOnly: true
          type: array
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        imageUri:
          readOnly: true
          type: string
        predictions:
          items:
            $ref: '#/components/schemas/Prediction'
          nullable: true
          readOnly: true
          type: array
        regions:
          items:
            $ref: '#/components/schemas/ImageRegion'
          nullable: true
          readOnly: true
          type: array
        thumbnailUri:
          readOnly: true
          type: string
        width:
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    ImagePrediction:
      description: Result of an image prediction request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        predictions:
          description: List of predictions.
          items:
            $ref: '#/components/schemas/Prediction'
            nullable: false
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageProcessingSettings:
      description: Represents image preprocessing settings used by image augmentation.
      properties:
        augmentationMethods:
          additionalProperties:
            type: boolean
          description: "Gets or sets enabled image transforms. The key corresponds to the transform name. If value is set to true, then correspondent transform is enabled. Otherwise this transform will not be used.\r\nAugmentation will be uniformly distributed among enabled transforms."
          nullable: true
          readOnly: false
          type: object
      type: object
    ImageRegion:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        regionId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateBatch:
      description: Batch of image region information to create.
      properties:
        regions:
          items:
            $ref: '#/components/schemas/ImageRegionCreateEntry'
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageRegionCreateEntry:
      description: Entry associating a region to an image.
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        imageId:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - imageId
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateResult:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        imageId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        regionId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateSummary:
      properties:
        created:
          items:
            $ref: '#/components/schemas/ImageRegionCreateResult'
          nullable: true
          readOnly: false
          type: array
        duplicated:
          items:
            $ref: '#/components/schemas/ImageRegionCreateEntry'
          nullable: true
          readOnly: false
          type: array
        exceeded:
          items:
            $ref: '#/components/schemas/ImageRegionCreateEntry'
          nullable: true
          readOnly: false
          type: array
      type: object
    ImageRegionProposal:
      properties:
        imageId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        projectId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        proposals:
          items:
            $ref: '#/components/schemas/RegionProposal'
            nullable: false
          readOnly: true
          type: array
      type: object
    ImageTag:
      properties:
        created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        tagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagName:
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageTagCreateBatch:
      description: Batch of image tags.
      properties:
        tags:
          description: Image Tag entries to include in this batch.
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageTagCreateEntry:
      description: Entry associating a tag to an image.
      properties:
        imageId:
          description: Id of the image.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        tagId:
          description: Id of the tag.
          format: uuid
          nullable: false
          readOnly: false
          type: string
      type: object
    ImageTagCreateSummary:
      properties:
        created:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          readOnly: false
          type: array
        duplicated:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          readOnly: false
          type: array
        exceeded:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          readOnly: false
          type: array
      type: object
    ImageUrl:
      description: Image url.
      properties:
        url:
          description: Url of the image.
          nullable: false
          readOnly: false
          type: string
      required:
        - url
      type: object
    ImageUrlCreateBatch:
      properties:
        images:
          items:
            $ref: '#/components/schemas/ImageUrlCreateEntry'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
      type: object
    ImageUrlCreateEntry:
      properties:
        regions:
          items:
            $ref: '#/components/schemas/Region'
            nullable: false
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
        url:
          description: Url of the image.
          nullable: false
          readOnly: false
          type: string
      required:
        - url
      type: object
    Iteration:
      description: Iteration model to be sent over JSON.
      properties:
        classificationType:
          description: Gets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          nullable: true
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
        created:
          description: Gets the time this iteration was completed.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        domainId:
          description: Get or sets a guid of the domain the iteration has been trained on.
          format: uuid
          nullable: true
          readOnly: true
          type: string
        exportable:
          description: >-
            Whether the iteration can be exported to another format for
            download.
          nullable: false
          readOnly: true
          type: boolean
        exportableTo:
          description: A set of platforms this iteration can export to.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            nullable: false
            type: string
          readOnly: true
          type: array
        id:
          description: Gets the id of the iteration.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        lastModified:
          description: Gets the time this iteration was last modified.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        name:
          description: Gets or sets the name of the iteration.
          nullable: false
          readOnly: false
          type: string
        originalPublishResourceId:
          description: Resource Provider Id this iteration was originally published to.
          nullable: false
          readOnly: true
          type: string
        projectId:
          description: Gets the project id of the iteration.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        publishName:
          description: Name of the published model.
          nullable: false
          readOnly: true
          type: string
        reservedBudgetInHours:
          description: Gets the reserved advanced training budget for the iteration.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        status:
          description: Gets the current iteration status.
          nullable: false
          readOnly: true
          type: string
        trainedAt:
          description: Gets the time this iteration was last modified.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        trainingTimeInMinutes:
          description: Gets the training time for the iteration.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        trainingType:
          description: Gets the training type of the iteration.
          enum:
            - Regular
            - Advanced
          nullable: false
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: TrainingType
      required:
        - name
      type: object
    IterationPerformance:
      description: Represents the detailed performance data for a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          nullable: true
          readOnly: true
          type: number
        perTagPerformance:
          description: Gets the per-tag performance details for this iteration.
          items:
            $ref: '#/components/schemas/TagPerformance'
            nullable: false
          readOnly: true
          type: array
        precision:
          description: Gets the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        recall:
          description: Gets the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    Prediction:
      description: Prediction result.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: Bounding box of the prediction.
          nullable: true
          readOnly: true
        probability:
          description: Probability of the tag.
          format: float
          nullable: false
          readOnly: true
          type: number
        tagId:
          description: Id of the predicted tag.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        tagName:
          description: Name of the predicted tag.
          nullable: true
          readOnly: true
          type: string
      type: object
    PredictionQueryResult:
      description: >-
        Query result of the prediction images that were sent to your prediction
        endpoint.
      properties:
        results:
          description: Result of an prediction request.
          items:
            $ref: '#/components/schemas/StoredImagePrediction'
            nullable: false
          readOnly: true
          type: array
        token:
          $ref: '#/components/schemas/PredictionQueryToken'
          description: Prediction Query Token.
          readOnly: false
      type: object
    PredictionQueryTag:
      properties:
        id:
          format: uuid
          nullable: false
          readOnly: false
          type: string
        maxThreshold:
          format: float
          nullable: false
          readOnly: false
          type: number
        minThreshold:
          format: float
          nullable: false
          readOnly: false
          type: number
      type: object
    PredictionQueryToken:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/PredictionQueryTag'
            nullable: false
          readOnly: false
          type: array
        application:
          nullable: false
          readOnly: false
          type: string
        continuation:
          nullable: false
          readOnly: false
          type: string
        endTime:
          format: date-time
          nullable: true
          readOnly: false
          type: string
        iterationId:
          format: uuid
          nullable: true
          readOnly: false
          type: string
        maxCount:
          format: int32
          nullable: false
          readOnly: false
          type: integer
        orderBy:
          enum:
            - Newest
            - Oldest
            - Suggested
          nullable: false
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: OrderBy
        session:
          nullable: false
          readOnly: false
          type: string
        startTime:
          format: date-time
          nullable: true
          readOnly: false
          type: string
      type: object
    Project:
      description: Represents a project.
      properties:
        created:
          description: Gets the date this project was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        description:
          description: Gets or sets the description of the project.
          nullable: true
          readOnly: false
          type: string
        drModeEnabled:
          description: >-
            Gets if the Disaster Recovery (DR) mode is on, indicating the
            project is temporarily read-only.
          nullable: true
          readOnly: true
          type: boolean
        id:
          description: Gets the project id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        lastModified:
          description: Gets the date this project was last modified.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        name:
          description: Gets or sets the name of the project.
          nullable: false
          readOnly: false
          type: string
        settings:
          $ref: '#/components/schemas/ProjectSettings'
          description: Gets or sets the project settings.
          readOnly: false
        thumbnailUri:
          description: Gets the thumbnail url representing the image.
          readOnly: true
          type: string
      required:
        - name
        - description
        - settings
      type: object
    ProjectSettings:
      description: Represents settings associated with a project.
      properties:
        classificationType:
          description: Gets or sets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          nullable: true
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
        detectionParameters:
          description: 'Detection parameters in use, if any.'
          nullable: false
          readOnly: true
          type: string
        domainId:
          description: Gets or sets the id of the Domain to use with this project.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        imageProcessingSettings:
          $ref: '#/components/schemas/ImageProcessingSettings'
          description: Gets or sets image preprocessing settings.
          readOnly: false
        targetExportPlatforms:
          description: >-
            A list of ExportPlatform that the trained model should be able to
            support.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            nullable: false
            type: string
          readOnly: false
          type: array
        useNegativeSet:
          description: Indicates if negative set is being used.
          nullable: true
          readOnly: true
          type: boolean
      type: object
    Region:
      properties:
        height:
          description: Height.
          format: float
          nullable: false
          readOnly: false
          type: number
        left:
          description: Coordinate of the left boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          nullable: false
          readOnly: false
          type: string
        top:
          description: Coordinate of the top boundary.
          format: float
          nullable: false
          readOnly: false
          type: number
        width:
          description: Width.
          format: float
          nullable: false
          readOnly: false
          type: number
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    RegionProposal:
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          readOnly: true
        confidence:
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    StoredImagePrediction:
      description: Result of an image prediction request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        domain:
          description: Domain used for the prediction.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        originalImageUri:
          description: The URI to the original prediction image.
          readOnly: true
          type: string
        predictions:
          description: List of predictions.
          items:
            $ref: '#/components/schemas/Prediction'
            nullable: false
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        resizedImageUri:
          description: The URI to the (resized) prediction image.
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original prediction image.
          readOnly: true
          type: string
      type: object
    StoredSuggestedTagAndRegion:
      description: Result of a suggested tags and regions request of the untagged image.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        domain:
          description: Domain used for the prediction.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        height:
          description: Height of the resized image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        originalImageUri:
          description: The URI to the original prediction image.
          readOnly: true
          type: string
        predictionUncertainty:
          description: Uncertainty (entropy) of suggested tags or regions per image.
          format: double
          nullable: false
          readOnly: true
          type: number
        predictions:
          description: List of predictions.
          items:
            $ref: '#/components/schemas/Prediction'
            nullable: false
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        resizedImageUri:
          description: The URI to the (resized) prediction image.
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original prediction image.
          readOnly: true
          type: string
        width:
          description: Width of the resized image.
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    SuggestedTagAndRegion:
      description: Result of a suggested tags and regions request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          nullable: false
          readOnly: true
          type: string
        id:
          description: Prediction Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        iteration:
          description: Iteration Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        predictionUncertainty:
          description: Uncertainty (entropy) of suggested tags or regions per image.
          format: double
          nullable: false
          readOnly: true
          type: number
        predictions:
          description: List of predictions.
          items:
            $ref: '#/components/schemas/Prediction'
            nullable: false
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    SuggestedTagAndRegionQuery:
      description: >-
        The array of result images and token containing session and continuation
        Ids for the next query.
      properties:
        results:
          description: >-
            Result of a suggested tags and regions request of the untagged
            image.
          items:
            $ref: '#/components/schemas/StoredSuggestedTagAndRegion'
            nullable: false
          readOnly: true
          type: array
        token:
          $ref: '#/components/schemas/SuggestedTagAndRegionQueryToken'
          description: Contains properties we need to fetch suggested tags for.
          readOnly: false
      type: object
    SuggestedTagAndRegionQueryToken:
      description: "Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.\r\nThen on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results."
      properties:
        continuation:
          description: >-
            Continuation Id for database pagination. Initially null but later
            used to paginate.
          nullable: false
          readOnly: false
          type: string
        maxCount:
          description: Maximum number of results you want to be returned in the response.
          format: int32
          nullable: false
          readOnly: false
          type: integer
        session:
          description: >-
            SessionId for database query. Initially set to null but later used
            to paginate.
          nullable: false
          readOnly: false
          type: string
        sortBy:
          description: OrderBy. Ordering mechanism for your results.
          enum:
            - UncertaintyAscending
            - UncertaintyDescending
          nullable: false
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: SortBy
        tagIds:
          description: Existing TagIds in project to filter suggested tags on.
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
        threshold:
          description: Confidence threshold to filter suggested tags on.
          format: double
          nullable: false
          readOnly: false
          type: number
      type: object
    Tag:
      description: Represents a Tag.
      properties:
        description:
          description: Gets or sets the description of the tag.
          nullable: true
          readOnly: false
          type: string
        id:
          description: Gets the Tag ID.
          format: uuid
          nullable: false
          readOnly: true
          type: string
        imageCount:
          description: Gets the number of images with this tag.
          format: int32
          nullable: false
          readOnly: true
          type: integer
        name:
          description: Gets or sets the name of the tag.
          nullable: false
          readOnly: false
          type: string
        type:
          description: Gets or sets the type of the tag.
          enum:
            - Regular
            - Negative
          nullable: false
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: TagType
      required:
        - name
        - description
        - type
      type: object
    TagFilter:
      description: >-
        Model that query for counting of images whose suggested tags match given
        tags and their probability are greater than or equal to the given
        threshold.
      properties:
        tagIds:
          description: Existing TagIds in project to get suggested tags count for.
          items:
            format: uuid
            nullable: false
            type: string
          readOnly: false
          type: array
        threshold:
          description: Confidence threshold to filter suggested tags on.
          format: double
          nullable: false
          readOnly: false
          type: number
      type: object
    TagPerformance:
      description: Represents performance data for a particular tag in a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          nullable: true
          readOnly: true
          type: number
        id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        name:
          nullable: false
          readOnly: true
          type: string
        precision:
          description: Gets the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          nullable: false
          readOnly: true
          type: number
        recall:
          description: Gets the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object

