openapi: 3.0.0
info:
  title: TrainingApi
  version: '1.2'
servers:
  - url: >-
      https://southcentralus.api.cognitive.microsoft.com/customvision/v1.2/Training
paths:
  /account:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
            text/json:
              schema:
                $ref: '#/components/schemas/Account'
            text/xml:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
      tags:
        - AccountApi
      operationId: GetAccountInfo
      summary: Get basic information about your account
      x-ms-examples:
        Successful GetAccountInfo request:
          $ref: ./examples/GetAccountInfo.json
  /domains:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                nullable: true
                type: array
          description: OK
      tags:
        - DomainsApi
      operationId: GetDomains
      summary: Get a list of the available domains
      x-ms-examples:
        Successful GetDomains request:
          $ref: ./examples/GetDomains.json
  '/domains/{domainId}':
    get:
      parameters:
        - description: The id of the domain to get information about
          in: path
          name: domainId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
            application/xml:
              schema:
                $ref: '#/components/schemas/Domain'
            text/json:
              schema:
                $ref: '#/components/schemas/Domain'
            text/xml:
              schema:
                $ref: '#/components/schemas/Domain'
          description: OK
      tags:
        - DomainsApi
      operationId: GetDomain
      summary: Get information about a specific domain
      x-ms-examples:
        Successful GetDomain request:
          $ref: ./examples/GetDomain.json
  /projects:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                nullable: true
                type: array
          description: OK
      tags:
        - ProjectApi
      operationId: GetProjects
      summary: Get your projects
      x-ms-examples:
        Successful GetProjects request:
          $ref: ./examples/GetProjects.json
    post:
      parameters:
        - description: Name of the project
          in: query
          name: name
          required: true
          schema:
            type: string
          x-nullable: true
        - description: The description of the project
          in: query
          name: description
          required: false
          schema:
            type: string
          x-nullable: true
        - description: The id of the domain to use for this project. Defaults to General
          in: query
          name: domainId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
      tags:
        - ProjectApi
      operationId: CreateProject
      summary: Create a project
      x-ms-examples:
        Successful CreateProject request:
          $ref: ./examples/CreateProject.json
  '/projects/{projectId}':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - ProjectApi
      operationId: DeleteProject
      summary: Delete a specific project
      x-ms-examples:
        Successful DeleteProject request:
          $ref: ./examples/DeleteProject.json
    get:
      parameters:
        - description: The id of the project to get
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
      tags:
        - ProjectApi
      operationId: GetProject
      summary: Get a specific project
      x-ms-examples:
        Successful GetProject request:
          $ref: ./examples/GetProject.json
    patch:
      parameters:
        - description: The id of the project to update
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
            application/xml:
              schema:
                $ref: '#/components/schemas/Project'
            text/json:
              schema:
                $ref: '#/components/schemas/Project'
            text/xml:
              schema:
                $ref: '#/components/schemas/Project'
          description: OK
      tags:
        - ProjectApi
      operationId: UpdateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          application/xml:
            schema:
              $ref: '#/components/schemas/Project'
          text/json:
            schema:
              $ref: '#/components/schemas/Project'
          text/xml:
            schema:
              $ref: '#/components/schemas/Project'
        description: The updated project model
        required: true
      summary: Update a specific project
      x-ms-examples:
        Successful UpdateProject request:
          $ref: ./examples/UpdateProject.json
  '/projects/{projectId}/images':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Ids of the images to be deleted. Limited to 256 images per batch
          in: query
          name: imageIds
          required: true
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - ImageApi
      operationId: DeleteImages
      summary: Delete images from the set of training images
      x-ms-examples:
        Successful DeleteImages request:
          $ref: ./examples/DeleteImages.json
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tags ids with which to tag each image. Limited to 20
          in: query
          name: tagIds
          required: false
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
      tags:
        - ImageApi
      description: "This API accepts body content as multipart/form-data and application/octet-stream. When using multipart\r\nmultiple image files can be sent at once, with a maximum of 64 files"
      operationId: CreateImagesFromData
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      summary: Add the provided images to the set of training images
      x-ms-examples:
        Successful CreateImagesFromData request:
          $ref: ./examples/CreateImagesFromData.json
  '/projects/{projectId}/images/files':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
      tags:
        - ImageApi
      operationId: CreateImagesFromFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageFileCreateBatch'
        description: >-
          The batch of image files to add. Limited to 64 images and 20 tags per
          batch
        required: true
      summary: Add the provided batch of images to the set of training images
      x-ms-examples:
        Successful CreateImagesFromFiles request:
          $ref: ./examples/CreateImagesFromFiles.json
  '/projects/{projectId}/images/predictions':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
      tags:
        - ImageApi
      operationId: CreateImagesFromPredictions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageIdCreateBatch'
        description: Image and tag ids. Limited to 64 images and 20 tags per batch
        required: true
      summary: Add the specified predicted images to the set of training images
      x-ms-examples:
        Successful CreateImagesFromPredictions request:
          $ref: ./examples/CreateImagesFromPredictions.json
  '/projects/{projectId}/images/tagged':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: >-
            An list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20
          in: query
          name: tagIds
          required: false
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - description: The ordering. Defaults to newest
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
          x-nullable: false
        - description: 'Maximum number of images to return. Defaults to 50, limited to 256'
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            type: integer
        - description: >-
            Number of images to skip before beginning the image batch. Defaults
            to 0
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
          description: OK
      tags:
        - ImageApi
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r\nUse the {take} and {skip} parameters to control how many images to return in a given batch.\r\nThe filtering is on an and/or relationship. For example, if the provided tag ids are for the \"Dog\" and\r\n\"Cat\" tags, then only images tagged with Dog and/or Cat will be returned"
      operationId: GetTaggedImages
      summary: Get tagged images for a given project iteration
      x-ms-examples:
        Successful GetTaggedImages request:
          $ref: ./examples/GetTaggedImages.json
  '/projects/{projectId}/images/tags':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Image ids. Limited to 64 images
          in: query
          name: imageIds
          required: true
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - description: Tags to be deleted from the specified images. Limited to 20 tags
          in: query
          name: tagIds
          required: true
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - ImageApi
      operationId: DeleteImageTags
      summary: Remove a set of tags from a set of images
      x-ms-examples:
        Successful DeleteImageTags request:
          $ref: ./examples/DeleteImageTags.json
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageTagCreateSummary'
          description: OK
      tags:
        - ImageApi
      operationId: PostImageTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageTagCreateBatch'
        description: Batch of image tags. Limited to 128 tags per batch
        required: true
      summary: Associate a set of images with a set of tags
      x-ms-examples:
        Successful PostImageTags request:
          $ref: ./examples/PostImageTags.json
  '/projects/{projectId}/images/untagged':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - description: The ordering. Defaults to newest
          in: query
          name: orderBy
          required: false
          schema:
            enum:
              - Newest
              - Oldest
            type: string
          x-nullable: false
        - description: 'Maximum number of images to return. Defaults to 50, limited to 256'
          in: query
          name: take
          required: false
          schema:
            default: 50
            format: int32
            type: integer
        - description: >-
            Number of images to skip before beginning the image batch. Defaults
            to 0
          in: query
          name: skip
          required: false
          schema:
            default: 0
            format: int32
            type: integer
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                nullable: true
                type: array
          description: OK
      tags:
        - ImageApi
      description: "This API supports batching and range selection. By default it will only return first 50 images matching images.\r\nUse the {take} and {skip} parameters to control how many images to return in a given batch."
      operationId: GetUntaggedImages
      summary: Get untagged images for a given project iteration
      x-ms-examples:
        Successful GetUntaggedImages request:
          $ref: ./examples/GetUntaggedImages.json
  '/projects/{projectId}/images/urls':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/json:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImageCreateSummary'
          description: OK
      tags:
        - ImageApi
      operationId: CreateImagesFromUrls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageUrlCreateBatch'
        description: Image urls and tag ids. Limited to 64 images and 20 tags per batch
        required: true
      summary: Add the provided images urls to the set of training images
      x-ms-examples:
        Successful CreateImagesFromUrls request:
          $ref: ./examples/CreateImagesFromUrls.json
  '/projects/{projectId}/iterations':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Iteration'
                nullable: true
                type: array
          description: OK
      tags:
        - ProjectApi
      operationId: GetIterations
      summary: Get iterations for the project
      x-ms-examples:
        Successful GetIterations request:
          $ref: ./examples/GetIterations.json
  '/projects/{projectId}/iterations/{iterationId}':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - ProjectApi
      operationId: DeleteIteration
      summary: Delete a specific iteration of a project
      x-ms-examples:
        Successful DeleteIteration request:
          $ref: ./examples/DeleteIteration.json
    get:
      parameters:
        - description: The id of the project the iteration belongs to
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the iteration to get
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
      tags:
        - ProjectApi
      operationId: GetIteration
      summary: Get a specific iteration
      x-ms-examples:
        Successful GetIteration request:
          $ref: ./examples/GetIteration.json
    patch:
      parameters:
        - description: Project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Iteration id
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
      tags:
        - ProjectApi
      operationId: UpdateIteration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Iteration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Iteration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Iteration'
          text/json:
            schema:
              $ref: '#/components/schemas/Iteration'
          text/xml:
            schema:
              $ref: '#/components/schemas/Iteration'
        description: The updated iteration model
        required: true
      summary: Update a specific iteration
      x-ms-examples:
        Successful UpdateIteration request:
          $ref: ./examples/UpdateIteration.json
  '/projects/{projectId}/iterations/{iterationId}/export':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                nullable: true
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                nullable: true
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                nullable: true
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Export'
                nullable: true
                type: array
          description: OK
      tags:
        - ProjectApi
      operationId: GetExports
      summary: Get the list of exports for a specific iteration
      x-ms-examples:
        Successful GetExports request:
          $ref: ./examples/GetExports.json
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The target platform (coreml or tensorflow)
          in: query
          name: platform
          required: true
          schema:
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Export'
            application/xml:
              schema:
                $ref: '#/components/schemas/Export'
            text/json:
              schema:
                $ref: '#/components/schemas/Export'
            text/xml:
              schema:
                $ref: '#/components/schemas/Export'
          description: OK
      tags:
        - ProjectApi
      operationId: ExportIteration
      summary: Export a trained iteration
      x-ms-examples:
        Successful ExportIteration request:
          $ref: ./examples/ExportIteration.json
  '/projects/{projectId}/iterations/{iterationId}/performance':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the trained iteration
          in: path
          name: iterationId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The 0 to 1 threshold to determine positive prediction
          in: query
          name: threshold
          required: true
          schema:
            format: float
            type: number
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
            application/xml:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
            text/json:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
            text/xml:
              schema:
                $ref: '#/components/schemas/IterationPerformance'
          description: OK
      tags:
        - ProjectApi
      operationId: GetIterationPerformance
      summary: Get detailed performance information about a trained iteration
      x-ms-examples:
        Successful GetIterationPerformance request:
          $ref: ./examples/GetIterationPerformance.json
  '/projects/{projectId}/predictions':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The prediction ids. Limited to 64
          in: query
          name: ids
          required: true
          schema:
            items:
              nullable: false
              type: string
            type: array
          style: form
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - PredictionsApi
      operationId: DeletePrediction
      summary: Delete a set of predicted images and their associated prediction results
      x-ms-examples:
        Successful DeletePrediction request:
          $ref: ./examples/DeletePrediction.json
  '/projects/{projectId}/predictions/query':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredictionQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/PredictionQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/PredictionQuery'
            text/xml:
              schema:
                $ref: '#/components/schemas/PredictionQuery'
          description: OK
      tags:
        - PredictionsApi
      operationId: QueryPredictionResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          application/xml:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          text/json:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
          text/xml:
            schema:
              $ref: '#/components/schemas/PredictionQueryToken'
        description: Parameters used to query the predictions. Limited to combining 2 tags
        required: true
      summary: Get images that were sent to your prediction endpoint
      x-ms-examples:
        Successful QueryPredictionResults request:
          $ref: ./examples/QueryPredictionResults.json
  '/projects/{projectId}/quicktest/image':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r\n            The default iteration for the project will be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
          description: OK
      tags:
        - PredictionsApi
      operationId: QuickTestImage
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      summary: Quick test an image
      x-ms-examples:
        Successful QuickTestImage request:
          $ref: ./examples/QuickTestImage.json
  '/projects/{projectId}/quicktest/url':
    post:
      parameters:
        - description: The project to evaluate against
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: "Optional. Specifies the id of a particular iteration to evaluate against.\r\n            The default iteration for the project will be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImagePredictionResult'
          description: OK
      tags:
        - PredictionsApi
      operationId: QuickTestImageUrl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          application/xml:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          text/json:
            schema:
              $ref: '#/components/schemas/ImageUrl'
          text/xml:
            schema:
              $ref: '#/components/schemas/ImageUrl'
        description: >-
          An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image
          to be evaluated
        required: true
      summary: Quick test an image url
      x-ms-examples:
        Successful QuickTestImageUrl request:
          $ref: ./examples/QuickTestImageUrl.json
  '/projects/{projectId}/tags':
    get:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The iteration id. Defaults to workspace
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
            application/xml:
              schema:
                $ref: '#/components/schemas/TagList'
            text/json:
              schema:
                $ref: '#/components/schemas/TagList'
            text/xml:
              schema:
                $ref: '#/components/schemas/TagList'
          description: OK
      tags:
        - TagsApi
      operationId: GetTags
      summary: Get the tags for a given project and iteration
      x-ms-examples:
        Successful GetTags request:
          $ref: ./examples/GetTags.json
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag name
          in: query
          name: name
          required: true
          schema:
            type: string
          x-nullable: true
        - description: Optional description for the tag
          in: query
          name: description
          required: false
          schema:
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
      tags:
        - TagsApi
      operationId: CreateTag
      summary: Create a tag for the project
      x-ms-examples:
        Successful CreateTag request:
          $ref: ./examples/CreateTag.json
  '/projects/{projectId}/tags/{tagId}':
    delete:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: Id of the tag to be deleted
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '204':
          description: No Content
      tags:
        - TagsApi
      operationId: DeleteTag
      summary: Delete a tag from the project
      x-ms-examples:
        Successful DeleteTag request:
          $ref: ./examples/DeleteTag.json
    get:
      parameters:
        - description: The project this tag belongs to
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The tag id
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: >-
            The iteration to retrieve this tag from. Optional, defaults to
            current training set
          in: query
          name: iterationId
          required: false
          schema:
            format: uuid
            type: string
          x-nullable: true
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
      tags:
        - TagsApi
      operationId: GetTag
      summary: Get information about a specific tag
      x-ms-examples:
        Successful GetTag request:
          $ref: ./examples/GetTag.json
    patch:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - description: The id of the target tag
          in: path
          name: tagId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tag'
            text/json:
              schema:
                $ref: '#/components/schemas/Tag'
            text/xml:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
      tags:
        - TagsApi
      operationId: UpdateTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tag'
          text/json:
            schema:
              $ref: '#/components/schemas/Tag'
          text/xml:
            schema:
              $ref: '#/components/schemas/Tag'
        description: The updated tag model
        required: true
      summary: Update a tag
      x-ms-examples:
        Successful UpdateTag request:
          $ref: ./examples/UpdateTag.json
  '/projects/{projectId}/train':
    post:
      parameters:
        - description: The project id
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
          x-nullable: false
        - $ref: '#/components/parameters/ApiKey'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            application/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/json:
              schema:
                $ref: '#/components/schemas/Iteration'
            text/xml:
              schema:
                $ref: '#/components/schemas/Iteration'
          description: OK
      tags:
        - ProjectApi
      operationId: TrainProject
      summary: Queues project for training
      x-ms-examples:
        Successful TrainProject request:
          $ref: ./examples/TrainProject.json
components:
  parameters:
    ApiKey:
      in: header
      name: Training-Key
      required: true
      schema:
        type: string
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
  requestBodies:
    CreateImagesFromData:
      content:
        application/octet-stream:
          schema:
            format: binary
            type: string
      required: true
  schemas:
    Account:
      description: Represents a user account
      nullable: true
      properties:
        Email:
          description: Gets the email associated with this account
          nullable: true
          readOnly: true
          type: string
        Keys:
          $ref: '#/components/schemas/ApiKeys'
          description: Gets the api keys associated with this account
          readOnly: true
        Quotas:
          $ref: '#/components/schemas/AccountQuota'
          description: Gets the quotas associated with this account
          readOnly: true
        UserName:
          description: Gets the name of the account owner
          nullable: true
          readOnly: true
          type: string
      type: object
    AccountQuota:
      description: Represents a set of quotas associated with an account
      nullable: true
      properties:
        PerProject:
          description: Gets a list of quotas that apply per-project for each project
          items:
            $ref: '#/components/schemas/PerProjectQuota'
          nullable: true
          readOnly: true
          type: array
        Predictions:
          $ref: '#/components/schemas/Quota'
          description: Gets the prediction quota
          readOnly: true
        Projects:
          $ref: '#/components/schemas/Quota'
          description: Gets the project quota
          readOnly: true
        Tier:
          description: Gets the tier of user
          nullable: true
          readOnly: true
          type: string
      type: object
    ApiKeys:
      nullable: true
      properties:
        PredictionKeys:
          $ref: '#/components/schemas/KeyPair'
        TrainingKeys:
          $ref: '#/components/schemas/KeyPair'
      type: object
    Domain:
      nullable: true
      properties:
        Exportable:
          nullable: false
          readOnly: true
          type: boolean
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Name:
          nullable: true
          readOnly: true
          type: string
      type: object
    Export:
      nullable: true
      properties:
        DownloadUri:
          nullable: true
          readOnly: true
          type: string
        Platform:
          enum:
            - CoreML
            - TensorFlow
          nullable: false
          readOnly: true
          type: string
        Status:
          enum:
            - Exporting
            - Failed
            - Done
          nullable: false
          readOnly: true
          type: string
      type: object
    Image:
      description: Image model to be sent as JSON
      nullable: true
      properties:
        Created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        Height:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        ImageUri:
          nullable: true
          readOnly: true
          type: string
        Predictions:
          items:
            $ref: '#/components/schemas/PredictionTag'
          nullable: true
          readOnly: true
          type: array
        Tags:
          items:
            $ref: '#/components/schemas/ImageTag'
          nullable: true
          readOnly: true
          type: array
        ThumbnailUri:
          nullable: true
          readOnly: true
          type: string
        Width:
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    ImageCreateResult:
      nullable: true
      properties:
        Image:
          $ref: '#/components/schemas/Image'
          readOnly: true
        SourceUrl:
          nullable: true
          readOnly: true
          type: string
        Status:
          enum:
            - OK
            - OKDuplicate
            - ErrorSource
            - ErrorImageFormat
            - ErrorImageSize
            - ErrorStorage
            - ErrorLimitExceed
            - ErrorTagLimitExceed
            - ErrorUnknown
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageCreateSummary:
      nullable: true
      properties:
        Images:
          items:
            $ref: '#/components/schemas/ImageCreateResult'
          nullable: true
          readOnly: true
          type: array
        IsBatchSuccessful:
          nullable: false
          readOnly: true
          type: boolean
      type: object
    ImageFileCreateBatch:
      nullable: true
      properties:
        Images:
          items:
            $ref: '#/components/schemas/ImageFileCreateEntry'
          nullable: true
          type: array
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
      type: object
    ImageFileCreateEntry:
      nullable: true
      properties:
        Contents:
          format: byte
          nullable: true
          type: string
        Name:
          nullable: true
          type: string
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
      type: object
    ImageIdCreateBatch:
      nullable: true
      properties:
        Images:
          items:
            $ref: '#/components/schemas/ImageIdCreateEntry'
          nullable: true
          type: array
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
      type: object
    ImageIdCreateEntry:
      nullable: true
      properties:
        Id:
          format: uuid
          nullable: false
          type: string
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
      type: object
    ImagePredictionResult:
      description: result of an image prediction request
      nullable: true
      properties:
        Created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Iteration:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Predictions:
          items:
            $ref: '#/components/schemas/ImageTagPrediction'
          nullable: true
          readOnly: true
          type: array
        Project:
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageTag:
      nullable: true
      properties:
        Created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        TagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageTagCreateBatch:
      nullable: true
      properties:
        Tags:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          type: array
      type: object
    ImageTagCreateEntry:
      nullable: true
      properties:
        ImageId:
          format: uuid
          nullable: false
          type: string
        TagId:
          format: uuid
          nullable: false
          type: string
      type: object
    ImageTagCreateSummary:
      nullable: true
      properties:
        Created:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          type: array
        Duplicated:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          type: array
        Exceeded:
          items:
            $ref: '#/components/schemas/ImageTagCreateEntry'
          nullable: true
          type: array
      type: object
    ImageTagPrediction:
      nullable: true
      properties:
        Probability:
          format: float
          nullable: false
          readOnly: true
          type: number
        Tag:
          nullable: true
          readOnly: true
          type: string
        TagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    ImageUrl:
      nullable: true
      properties:
        Url:
          nullable: true
          type: string
      type: object
    ImageUrlCreateBatch:
      nullable: true
      properties:
        Images:
          items:
            $ref: '#/components/schemas/ImageUrlCreateEntry'
          nullable: true
          type: array
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
      type: object
    ImageUrlCreateEntry:
      nullable: true
      properties:
        TagIds:
          items:
            format: uuid
            nullable: false
            type: string
          nullable: true
          type: array
        Url:
          nullable: true
          type: string
      type: object
    Iteration:
      description: Iteration model to be sent over JSON
      nullable: true
      properties:
        Created:
          description: Gets the time this iteration was completed
          format: date-time
          nullable: false
          readOnly: true
          type: string
        DomainId:
          description: Get or sets a guid of the domain the iteration has been trained on
          format: uuid
          nullable: true
          readOnly: true
          type: string
        Exportable:
          description: Whether the iteration can be exported to another format for download
          nullable: false
          readOnly: true
          type: boolean
        Id:
          description: Gets the id of the iteration
          format: uuid
          nullable: false
          readOnly: true
          type: string
        IsDefault:
          description: >-
            Gets or sets a value indicating whether the iteration is the default
            iteration for the project
          nullable: false
          type: boolean
        LastModified:
          description: Gets the time this iteration was last modified
          format: date-time
          nullable: false
          readOnly: true
          type: string
        Name:
          description: Gets or sets the name of the iteration
          nullable: true
          type: string
        ProjectId:
          description: Gets the project id of the iteration
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Status:
          description: Gets the current iteration status
          nullable: true
          readOnly: true
          type: string
        TrainedAt:
          description: Gets the time this iteration was last modified
          format: date-time
          nullable: true
          readOnly: true
          type: string
      type: object
    IterationPerformance:
      description: Represents the detailed performance data for a trained iteration
      nullable: true
      properties:
        PerTagPerformance:
          description: Gets the per-tag performance details for this iteration
          items:
            $ref: '#/components/schemas/TagPerformance'
          nullable: true
          readOnly: true
          type: array
        Precision:
          description: Gets the precision
          format: double
          nullable: false
          readOnly: true
          type: number
        PrecisionStdDeviation:
          description: Gets the standard deviation for the precision
          format: double
          nullable: false
          readOnly: true
          type: number
        Recall:
          description: Gets the recall
          format: double
          nullable: false
          readOnly: true
          type: number
        RecallStdDeviation:
          description: Gets the standard deviation for the recall
          format: double
          nullable: false
          readOnly: true
          type: number
      type: object
    KeyPair:
      nullable: true
      properties:
        PrimaryKey:
          nullable: true
          type: string
        SecondaryKey:
          nullable: true
          type: string
      type: object
    PerProjectQuota:
      description: Represents a set of quotas for a given project
      nullable: true
      properties:
        Images:
          $ref: '#/components/schemas/Quota'
          description: Gets the image quota for the project
          readOnly: true
        Iterations:
          $ref: '#/components/schemas/Quota'
          description: Gets the iteration quota for the project
          readOnly: true
        ProjectId:
          description: Gets the project id of the project this quota applies to
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Tags:
          $ref: '#/components/schemas/Quota'
          description: Gets the tag quota for the project
          readOnly: true
      type: object
    Prediction:
      description: result of an image classification request
      nullable: true
      properties:
        Created:
          format: date-time
          nullable: false
          readOnly: true
          type: string
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        ImageUri:
          nullable: true
          readOnly: true
          type: string
        Iteration:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Predictions:
          items:
            $ref: '#/components/schemas/PredictionTag'
          nullable: true
          readOnly: true
          type: array
        Project:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        ThumbnailUri:
          nullable: true
          readOnly: true
          type: string
      type: object
    PredictionQuery:
      nullable: true
      properties:
        Results:
          items:
            $ref: '#/components/schemas/Prediction'
          nullable: true
          readOnly: true
          type: array
        Token:
          $ref: '#/components/schemas/PredictionQueryToken'
          readOnly: true
      type: object
    PredictionQueryTag:
      nullable: true
      properties:
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        MaxThreshold:
          format: float
          nullable: false
          readOnly: true
          type: number
        MinThreshold:
          format: float
          nullable: false
          readOnly: true
          type: number
      type: object
    PredictionQueryToken:
      nullable: true
      properties:
        Application:
          nullable: true
          type: string
        Continuation:
          nullable: true
          type: string
        EndTime:
          format: date-time
          nullable: true
          type: string
        IterationId:
          format: uuid
          nullable: true
          type: string
        MaxCount:
          format: int32
          nullable: false
          type: integer
        OrderBy:
          enum:
            - Newest
            - Oldest
            - Suggested
          nullable: false
          type: string
        Session:
          nullable: true
          type: string
        StartTime:
          format: date-time
          nullable: true
          type: string
        Tags:
          items:
            $ref: '#/components/schemas/PredictionQueryTag'
          nullable: true
          type: array
      type: object
    PredictionTag:
      nullable: true
      properties:
        Probability:
          format: float
          nullable: false
          readOnly: true
          type: number
        Tag:
          nullable: true
          readOnly: true
          type: string
        TagId:
          format: uuid
          nullable: false
          readOnly: true
          type: string
      type: object
    Project:
      description: Represents a project
      nullable: true
      properties:
        Created:
          description: Gets the date this project was created
          format: date-time
          nullable: false
          readOnly: true
          type: string
        CurrentIterationId:
          description: Gets the current iteration id
          format: uuid
          nullable: true
          readOnly: true
          type: string
        Description:
          description: Gets or sets the description of the project
          nullable: true
          type: string
        Id:
          description: Gets the project id
          format: uuid
          nullable: false
          readOnly: true
          type: string
        LastModified:
          description: Gets the date this project was last modified
          format: date-time
          nullable: false
          readOnly: true
          type: string
        Name:
          description: Gets or sets the name of the project
          nullable: true
          type: string
        Settings:
          $ref: '#/components/schemas/ProjectSettings'
          description: Gets or sets the project settings
        ThumbnailUri:
          description: Gets the thumbnail url representing the image
          nullable: true
          readOnly: true
          type: string
      type: object
    ProjectSettings:
      description: Represents settings associated with a project
      nullable: true
      properties:
        DomainId:
          description: Gets or sets the id of the Domain to use with this project
          format: uuid
          nullable: false
          type: string
      type: object
    Quota:
      description: Represents a quota
      nullable: true
      properties:
        TimeUntilReset:
          description: >-
            Gets the time remaining until the quota resets. Null if this quota
            does not reset.
          format: duration
          nullable: true
          readOnly: true
          type: string
        Total:
          description: The total allowable amount in the quota
          format: int32
          nullable: false
          readOnly: true
          type: integer
        Used:
          description: The amount of quota that has currently been used
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    Tag:
      description: Represents a Tag
      nullable: true
      properties:
        Description:
          description: Gets or sets the description of the tag
          nullable: true
          type: string
        Id:
          description: Gets the Tag ID
          format: uuid
          nullable: false
          readOnly: true
          type: string
        ImageCount:
          description: Gets the number of images with this tag
          format: int32
          nullable: false
          readOnly: true
          type: integer
        Name:
          description: Gets or sets the name of the tag
          nullable: true
          type: string
      type: object
    TagList:
      nullable: true
      properties:
        Tags:
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
          readOnly: true
          type: array
        TotalTaggedImages:
          format: int32
          nullable: false
          readOnly: true
          type: integer
        TotalUntaggedImages:
          format: int32
          nullable: false
          readOnly: true
          type: integer
      type: object
    TagPerformance:
      description: Represents performance data for a particular tag in a trained iteration
      nullable: true
      properties:
        Id:
          format: uuid
          nullable: false
          readOnly: true
          type: string
        Name:
          nullable: true
          readOnly: true
          type: string
        Precision:
          description: Gets the precision
          format: double
          nullable: false
          readOnly: true
          type: number
        PrecisionStdDeviation:
          description: Gets the standard deviation for the precision
          format: double
          nullable: false
          readOnly: true
          type: number
        Recall:
          description: Gets the recall
          format: double
          nullable: false
          readOnly: true
          type: number
        RecallStdDeviation:
          description: Gets the standard deviation for the recall
          format: double
          nullable: false
          readOnly: true
          type: number
      type: object

