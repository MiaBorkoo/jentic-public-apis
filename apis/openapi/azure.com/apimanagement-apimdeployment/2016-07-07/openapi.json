{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs to manage Azure API Management deployment.",
    "title": "ApiManagementClient",
    "version": "2016-07-07",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-07-07/apimdeployment.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceNameAvailabilityResult"
                }
              }
            },
            "description": "The result of check name availability."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Checks availability and correctness of a name for an API Management service.",
        "operationId": "ApiManagementServices_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceCheckNameAvailabilityParameters"
              }
            }
          },
          "description": "Parameters supplied to the CheckNameAvailability operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiManagement/service/": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceListResult"
                }
              }
            },
            "description": "The API Management service list."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Lists all API Management services within an Azure subscription.",
        "operationId": "ApiManagementServices_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceListResult"
                }
              }
            },
            "description": "The API Management service list."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "List all API Management services within a resource group.",
        "operationId": "ApiManagementServices_ListByResourceGroup",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Service was successfully deleted."
          },
          "204": {
            "description": "Service is already deleted."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "ApiManagement Service not found."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Deletes an existing API Management service.",
        "operationId": "ApiManagementServices_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Successfully got the API Management Service Resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "ApiManagement Service not found."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Gets an API Management service resource description.",
        "operationId": "ApiManagementServices_Get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Successfully updated the current API Management service."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Updates an existing API Management service.",
        "operationId": "ApiManagementServices_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceBaseParameters"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate API Management service operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "The service was successfully set up."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Creates or updates an API Management service. This is long running operation and could take several minutes to complete.",
        "operationId": "ApiManagementServices_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceResource"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate API Management service operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backup": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Successfully backed up the API Management service to the storage account."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Creates a backup of the API Management service to the given Azure Storage Account. This is long running operation and could take several minutes to complete.",
        "operationId": "ApiManagementServices_Backup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceBackupRestoreParameters"
              }
            }
          },
          "description": "Parameters supplied to the ApiManagementServices_Backup operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/getssotoken": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceGetSsoTokenResult",
                  "x-ms-client-flatten": true
                }
              }
            },
            "description": "OK if successful with the SSO Redirect URI."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Gets the Single-Sign-On token for the API Management Service which is valid for 5 Minutes.",
        "operationId": "ApiManagementServices_GetSsoToken"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/managedeployments": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Successfully applied the new deployment Configuration on the API Management service."
          },
          "202": {
            "description": "Accepted. The location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Manages deployments of an API Management service. This operation can be used to do the following: Change SKU, Change SKU Units, Change Service Tier (Developer/Standard/Premium) and Manage VPN Configuration. This is a long running operation and can take several minutes to complete.",
        "operationId": "ApiManagementServices_ManageDeployments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceManageDeploymentsParameters"
              }
            }
          },
          "description": "Parameters supplied to the ManageDeployments operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/restore": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Successfully restored the backup onto the API Management service."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Restores a backup of an API Management service created using the ApiManagementServices_Backup operation on the current service. This is a long running operation and could take several minutes to complete.",
        "operationId": "ApiManagementServices_Restore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceBackupRestoreParameters"
              }
            }
          },
          "description": "Parameters supplied to the Restore API Management service from backup operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatecertificate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateInformation"
                }
              }
            },
            "description": "Successfully uploaded certificate to the API Management Service."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Upload Custom Domain SSL certificate for an API Management service.",
        "operationId": "ApiManagementServices_UploadCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceUploadCertificateParameters"
              }
            }
          },
          "description": "Parameters supplied to the Upload SSL certificate for an API Management service operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/updatehostname": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiManagementServiceResource"
                }
              }
            },
            "description": "Service was successfully updated with desired hostnames."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ApiManagementService"
        ],
        "description": "Creates, updates, or deletes the custom hostnames for an API Management service. The custom hostname can be applied to the Proxy and Portal endpoint. This is a long running operation and could take several minutes to complete.",
        "operationId": "ApiManagementServices_UpdateHostname",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiManagementServiceUpdateHostnameParameters"
              }
            }
          },
          "description": "Parameters supplied to the UpdateHostname operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Version of the API to be used with the client request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServiceNameParameter": {
        "description": "The name of the API Management service.",
        "in": "path",
        "name": "serviceName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 1,
          "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AdditionalRegion": {
        "description": "Description of an additional API Management resource location.",
        "properties": {
          "location": {
            "description": "The location name of the additional region among Azure Data center regions.",
            "type": "string"
          },
          "skuType": {
            "description": "The SKU type in the location.",
            "enum": [
              "Developer",
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuType"
            }
          },
          "skuUnitCount": {
            "default": 1,
            "description": "The SKU Unit count at the location. The maximum SKU Unit count depends on the SkuType. Maximum allowed for Developer SKU is 1, for Standard SKU is 4, and for Premium SKU is 10, at a location.",
            "format": "int32",
            "maximum": 10,
            "type": "integer"
          },
          "staticIPs": {
            "description": "Static IP addresses of the location's virtual machines.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "vpnconfiguration": {
            "$ref": "#/components/schemas/VirtualNetworkConfiguration",
            "description": "Virtual network configuration for the location."
          }
        },
        "required": [
          "location",
          "skuType"
        ],
        "type": "object"
      },
      "ApiManagementServiceBackupRestoreParameters": {
        "description": "Parameters supplied to the Backup/Restore of an API Management service operation.",
        "properties": {
          "accessKey": {
            "description": "Azure Cloud Storage account (used to place/retrieve the backup) access key.",
            "type": "string"
          },
          "backupName": {
            "description": "The name of the backup file to create.",
            "type": "string"
          },
          "containerName": {
            "description": "Azure Cloud Storage blob container name used to place/retrieve the backup.",
            "type": "string"
          },
          "storageAccount": {
            "description": "Azure Cloud Storage account (used to place/retrieve the backup) name.",
            "type": "string"
          }
        },
        "required": [
          "storageAccount",
          "accessKey",
          "containerName",
          "backupName"
        ],
        "type": "object"
      },
      "ApiManagementServiceBaseParameters": {
        "description": "Parameters supplied to the Update API Management service operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "API Management service tags. A maximum of 10 tags can be provided for a resource, and each tag must have a key no greater than 128 characters (and a value no greater than 256 characters).",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/ApiManagementServiceProperties",
            "description": "Properties of the API Management service.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/ApiManagementServiceSkuProperties",
            "description": "SKU properties of the API Management service."
          }
        },
        "type": "object"
      },
      "ApiManagementServiceCheckNameAvailabilityParameters": {
        "description": "Parameters supplied to the CheckNameAvailability operation.",
        "properties": {
          "name": {
            "description": "The name to check for availability.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ApiManagementServiceGetSsoTokenResult": {
        "description": "The response of the GetSsoToken operation.",
        "properties": {
          "redirect_uri": {
            "description": "Redirect URL containing the SSO token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiManagementServiceListResult": {
        "description": "The response of the List API Management services operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if Value contains incomplete list of API Management services.",
            "type": "string"
          },
          "value": {
            "description": "Result of the List API Management services operation.",
            "items": {
              "$ref": "#/components/schemas/ApiManagementServiceResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ApiManagementServiceManageDeploymentsParameters": {
        "description": "Parameters supplied to the ManageDeployments operation.",
        "properties": {
          "additionalLocations": {
            "description": "Additional data center locations for the API Management service.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRegion"
            },
            "type": "array"
          },
          "location": {
            "description": "Location of the API Management service Azure data center.",
            "type": "string"
          },
          "skuType": {
            "description": "SKU type of the API Management service.",
            "enum": [
              "Developer",
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuType"
            }
          },
          "skuUnitCount": {
            "default": 1,
            "description": "SKU Unit count of the API Management service. Default value is 1.",
            "format": "int32",
            "type": "integer"
          },
          "vpnConfiguration": {
            "$ref": "#/components/schemas/VirtualNetworkConfiguration",
            "description": "Virtual network configuration."
          },
          "vpnType": {
            "default": "None",
            "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that the API Management service deployment is set up inside a Virtual Network having an Intranet Facing Endpoint only. When vpnConfiguration is specified, vpnType must be specified.",
            "enum": [
              "None",
              "External",
              "Internal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "VirtualNetworkType"
            }
          }
        },
        "required": [
          "location",
          "skuType"
        ],
        "type": "object"
      },
      "ApiManagementServiceNameAvailabilityResult": {
        "description": "Response of the CheckNameAvailability operation.",
        "properties": {
          "message": {
            "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that <resourceName> is already in use, and direct them to select a different name.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "True if the name is available and can be used to create a new API Management service; otherwise false.",
            "type": "boolean"
          },
          "reason": {
            "description": "Invalid indicates the name provided does not match the resource provider\u2019s naming requirements (incorrect length, unsupported characters, etc.)  AlreadyExists indicates that the name is already in use and is therefore unavailable.",
            "enum": [
              "Valid",
              "Invalid",
              "AlreadyExists"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "NameAvailabilityReason"
            }
          }
        },
        "required": [
          "nameAvailable"
        ],
        "type": "object"
      },
      "ApiManagementServiceProperties": {
        "description": "Properties of an API Management service resource description.",
        "properties": {
          "additionalLocations": {
            "description": "Additional datacenter locations of the API Management service.",
            "items": {
              "$ref": "#/components/schemas/AdditionalRegion"
            },
            "type": "array"
          },
          "addresserEmail": {
            "description": "Addresser email.",
            "type": "string"
          },
          "createdAtUtc": {
            "description": "Creation UTC date of the API Management service.The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "customProperties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Custom properties of the API Management service, like disabling TLS 1.0.",
            "type": "object"
          },
          "hostnameConfigurations": {
            "description": "Custom hostname configuration of the API Management service.",
            "items": {
              "$ref": "#/components/schemas/HostnameConfiguration"
            },
            "type": "array"
          },
          "managementApiUrl": {
            "description": "Management API endpoint URL of the API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "portalUrl": {
            "description": "Publisher portal endpoint Url of the API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The current provisioning state of the API Management service which can be one of the following: Created/Activating/Succeeded/Updating/Failed/Stopped/Terminating/TerminationFailed/Deleted.",
            "readOnly": true,
            "type": "string"
          },
          "publisherEmail": {
            "description": "Publisher email.",
            "maxLength": 100,
            "type": "string"
          },
          "publisherName": {
            "description": "Publisher name.",
            "type": "string"
          },
          "runtimeUrl": {
            "description": "Proxy endpoint URL of the API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "scmUrl": {
            "description": "SCM endpoint URL of the API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "staticIPs": {
            "description": "Static IP addresses of the API Management service virtual machines. Available only for Standard and Premium SKU.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "targetProvisioningState": {
            "description": "The provisioning state of the API Management service, which is targeted by the long running operation started on the service.",
            "readOnly": true,
            "type": "string"
          },
          "vpnType": {
            "default": "None",
            "description": "The type of VPN in which API Management service needs to be configured in. None (Default Value) means the API Management service is not part of any Virtual Network, External means the API Management deployment is set up inside a Virtual Network having an Internet Facing Endpoint, and Internal means that API Management deployment is setup inside a Virtual Network having an Intranet Facing Endpoint only.",
            "enum": [
              "None",
              "External",
              "Internal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "VirtualNetworkType"
            }
          },
          "vpnconfiguration": {
            "$ref": "#/components/schemas/VirtualNetworkConfiguration",
            "description": "Virtual network configuration of the API Management service."
          }
        },
        "required": [
          "publisherEmail",
          "publisherName"
        ],
        "type": "object"
      },
      "ApiManagementServiceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiManagementServiceBaseParameters"
          }
        ],
        "description": "Description of an API Management service resource.",
        "properties": {
          "etag": {
            "description": "ETag of the resource.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the created API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Datacenter location of the API Management service.",
            "type": "string"
          },
          "name": {
            "description": "Name of the API Management service.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type of the API Management service.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "sku",
          "properties",
          "location"
        ],
        "type": "object"
      },
      "ApiManagementServiceSkuProperties": {
        "description": "API Management service resource SKU properties.",
        "properties": {
          "capacity": {
            "default": 1,
            "description": "Capacity of the SKU (number of deployed units of the SKU). The default value is 1.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "externalDocs": {
              "url": "https://azure.microsoft.com/en-us/pricing/details/api-management/"
            },
            "description": "Name of the Sku.",
            "enum": [
              "Developer",
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuType"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ApiManagementServiceUpdateHostnameParameters": {
        "description": "Parameters supplied to the UpdateHostname operation.",
        "properties": {
          "delete": {
            "description": "Hostnames types to delete.",
            "items": {
              "enum": [
                "Proxy",
                "Portal",
                "Management",
                "Scm"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "HostnameType"
              }
            },
            "type": "array"
          },
          "update": {
            "description": "Hostnames to create or update.",
            "items": {
              "$ref": "#/components/schemas/HostnameConfiguration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApiManagementServiceUploadCertificateParameters": {
        "description": "Parameters supplied to the Upload SSL certificate for an API Management service operation.",
        "properties": {
          "certificate": {
            "description": "Base64 Encoded certificate.",
            "type": "string"
          },
          "certificate_password": {
            "description": "Certificate password.",
            "type": "string"
          },
          "type": {
            "description": "Hostname type.",
            "enum": [
              "Proxy",
              "Portal",
              "Management",
              "Scm"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HostnameType"
            }
          }
        },
        "required": [
          "type",
          "certificate",
          "certificate_password"
        ],
        "type": "object"
      },
      "CertificateInformation": {
        "description": "SSL certificate information.",
        "properties": {
          "expiry": {
            "description": "Expiration date of the certificate. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
            "format": "date-time",
            "type": "string"
          },
          "subject": {
            "description": "Subject of the certificate.",
            "type": "string"
          },
          "thumbprint": {
            "description": "Thumbprint of the certificate.",
            "type": "string"
          }
        },
        "required": [
          "expiry",
          "thumbprint",
          "subject"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error Response.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostnameConfiguration": {
        "description": "Custom hostname configuration.",
        "properties": {
          "certificate": {
            "$ref": "#/components/schemas/CertificateInformation",
            "description": "Certificate information."
          },
          "hostname": {
            "description": "Hostname.",
            "type": "string"
          },
          "type": {
            "description": "Hostname type.",
            "enum": [
              "Proxy",
              "Portal",
              "Management",
              "Scm"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HostnameType"
            }
          }
        },
        "required": [
          "type",
          "hostname",
          "certificate"
        ],
        "type": "object"
      },
      "VirtualNetworkConfiguration": {
        "description": "Configuration of a virtual network to which API Management service is deployed.",
        "properties": {
          "location": {
            "description": "The location of the virtual network.",
            "type": "string"
          },
          "subnetResourceId": {
            "description": "The name of the subnet Resource ID. This has format /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/Microsoft.{Network|ClassicNetwork}/VirtualNetworks/{virtual network name}/subnets/{subnet name}.",
            "type": "string"
          },
          "subnetname": {
            "description": "The name of the subnet.",
            "readOnly": true,
            "type": "string"
          },
          "vnetid": {
            "description": "The virtual network ID. This is typically a GUID. Expect a null GUID by default.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}