{
  "openapi": "3.0.0",
  "info": {
    "description": "Use this API to manage Microsoft HealthcareApis services in your Azure subscription.",
    "title": "HealthcareApisClient",
    "version": "2018-08-20-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/healthcareapis/resource-manager/Microsoft.HealthcareApis/preview/2018-08-20-preview/healthcare-apis.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.HealthcareApis/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Proxy"
        ],
        "deprecated": false,
        "description": "Lists all of the available Healthcare service REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesNameAvailabilityInfo"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the service name is available. If the name is not available, the body contains the reason."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Proxy"
        ],
        "deprecated": false,
        "description": "Check if a service instance name is available.",
        "operationId": "Services_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "description": "Set the name parameter in the CheckNameAvailabilityParameters structure to the name of the service instance to check.",
          "required": true
        },
        "x-ms-examples": {
          "CheckNameAvailabilityPost": {
            "$ref": "./examples/CheckNameAvailabilityPost.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/locations/{locationName}/operationresults/{operationResultId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/locationName"
          },
          {
            "$ref": "#/components/parameters/operationResultId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultsDescription"
                }
              }
            },
            "description": "The body contains all of the properties of the operation result."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "No operation result was found matching operationResultId."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get the operation result for a long running operation.",
        "operationId": "OperationResults_Get",
        "x-ms-examples": {
          "OperationResultsGet": {
            "$ref": "./examples/OperationResultsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescriptionListResult"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Collection"
        ],
        "deprecated": false,
        "description": "Get all the service instances in a subscription.",
        "operationId": "Services_List",
        "x-ms-examples": {
          "ServiceList": {
            "$ref": "./examples/ServiceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescriptionListResult"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the service instances in the resource group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Collection"
        ],
        "deprecated": false,
        "description": "Get all the service instances in a resource group.",
        "operationId": "Services_ListByResourceGroup",
        "x-ms-examples": {
          "ServiceListByResourceGroup": {
            "$ref": "./examples/ServiceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HealthcareApis/services/{resourceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "The resource does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Resource"
        ],
        "description": "Delete a service instance.",
        "operationId": "Services_Delete",
        "x-ms-examples": {
          "ServiceDelete": {
            "$ref": "./examples/ServiceDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescription"
                }
              }
            },
            "description": "The body contains all of the properties of the service instance."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Get the metadata of a service instance.",
        "operationId": "Services_Get",
        "x-ms-examples": {
          "ServiceGet": {
            "$ref": "./examples/ServiceGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescription"
                }
              }
            },
            "description": "The tags for the resource were updated successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Update the metadata of a service instance.",
        "operationId": "Services_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicesPatchDescription"
              }
            }
          },
          "description": "The service instance metadata and security metadata.",
          "required": true
        },
        "x-ms-examples": {
          "ServicePatch": {
            "$ref": "./examples/ServicePatch.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescription"
                }
              }
            },
            "description": "Updated - Put request accepted and an existing resource is being updated; the operation will complete asynchronously."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServicesDescription"
                }
              }
            },
            "description": "Created - Put request accepted and a new resource was created; the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetails"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Resource"
        ],
        "deprecated": false,
        "description": "Create or update the metadata of a service instance.",
        "operationId": "Services_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServicesDescription"
              }
            }
          },
          "description": "The service instance metadata.",
          "required": true
        },
        "x-ms-examples": {
          "ServicePut": {
            "$ref": "./examples/ServiceCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "The version of the API.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2018-08-20-preview"
          ],
          "minLength": 10,
          "type": "string"
        }
      },
      "locationName": {
        "description": "The location of the operation.",
        "in": "path",
        "name": "locationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "operationResultId": {
        "description": "The ID of the operation result to get.",
        "in": "path",
        "name": "operationResultId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupName": {
        "description": "The name of the resource group that contains the service instance.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceName": {
        "description": "The name of the service instance.",
        "in": "path",
        "name": "resourceName",
        "required": true,
        "schema": {
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "The subscription identifier.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "CheckNameAvailabilityParameters": {
        "description": "Input values.",
        "properties": {
          "name": {
            "description": "The name of the service instance to check.",
            "type": "string"
          },
          "type": {
            "description": "The fully qualified resource type which includes provider namespace.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ErrorDetails": {
        "description": "Error details.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetailsInternal",
            "description": "Object containing error details."
          }
        },
        "type": "object"
      },
      "ErrorDetailsInternal": {
        "description": "Error details.",
        "properties": {
          "code": {
            "description": "The error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "readOnly": true,
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "Service REST API operation.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "The information displayed about the operation."
          },
          "isDataAction": {
            "description": "Gets or sets a value indicating whether the operation is a data action or not",
            "type": "boolean"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{read | write | action | delete}",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "Default value is 'user,system'.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationProperties",
            "description": "Properties of the operation"
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "The object that represents the operation.",
        "properties": {
          "description": {
            "description": "Friendly description for the operation,",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "Name of the operation",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "Service provider: Microsoft.HealthcareApis",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "Resource Type: Services",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "A list of service operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of service description objects.",
            "type": "string"
          },
          "value": {
            "description": "A list of service operations supported by the Microsoft.HealthcareApis resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationProperties": {
        "description": "Operation properties.",
        "properties": {},
        "type": "object"
      },
      "OperationResultsDescription": {
        "description": "The properties indicating the operation result of an operation on a service.",
        "properties": {
          "id": {
            "description": "The ID of the operation returned.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the operation result.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "description": "Additional properties of the operation result.",
            "x-ms-client-flatten": false
          },
          "startTime": {
            "description": "The time that the operation was started.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the operation being performed.",
            "enum": [
              "Canceled",
              "Succeeded",
              "Failed",
              "Requested",
              "Running"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationResultStatus"
            }
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The common properties of a service.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "etag": {
            "description": "An etag associated with the resource, used for optimistic concurrency when editing it.",
            "type": "string"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "identity": {
            "description": "Setting indicating whether the service has a managed identity associated with it.",
            "properties": {
              "principalId": {
                "description": "The principal ID of the resource identity.",
                "readOnly": true,
                "type": "string"
              },
              "tenantId": {
                "description": "The tenant ID of the resource.",
                "readOnly": true,
                "type": "string"
              },
              "type": {
                "description": "Type of identity being specified, currently SystemAssigned and None are allowed.",
                "enum": [
                  "SystemAssigned",
                  "None"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ManagedServiceIdentityType"
                }
              }
            },
            "type": "object"
          },
          "kind": {
            "description": "The kind of the service. Valid values are: fhir, fhir-Stu3 and fhir-R4.",
            "enum": [
              "fhir",
              "fhir-Stu3",
              "fhir-R4"
            ],
            "readOnly": false,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "kind"
            }
          },
          "location": {
            "description": "The resource location.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "The resource name.",
            "pattern": "^[a-z0-9][a-z0-9-]{1,21}[a-z0-9]$",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location",
          "kind"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ServiceAccessPoliciesInfo": {
        "description": "The access policies of the service instance.",
        "items": {
          "$ref": "#/components/schemas/ServiceAccessPolicyEntry"
        },
        "type": "array"
      },
      "ServiceAccessPolicyEntry": {
        "description": "An access policy entry.",
        "properties": {
          "objectId": {
            "description": "An object ID that is allowed access to the FHIR service.",
            "pattern": "^(([0-9A-Fa-f]{8}[-]?(?:[0-9A-Fa-f]{4}[-]?){3}[0-9A-Fa-f]{12}){1})+$",
            "type": "string"
          }
        },
        "required": [
          "objectId"
        ],
        "type": "object"
      },
      "ServiceAuthenticationConfigurationInfo": {
        "description": "Authentication configuration information",
        "properties": {
          "audience": {
            "description": "The audience url for the service",
            "readOnly": false,
            "type": "string"
          },
          "authority": {
            "description": "The authority url for the service",
            "readOnly": false,
            "type": "string"
          },
          "smartProxyEnabled": {
            "description": "If the SMART on FHIR proxy is enabled",
            "readOnly": false,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ServiceCorsConfigurationHeaderEntry": {
        "description": "A header for CORS.",
        "type": "string"
      },
      "ServiceCorsConfigurationInfo": {
        "description": "The settings for the CORS configuration of the service instance.",
        "properties": {
          "allowCredentials": {
            "description": "If credentials are allowed via CORS.",
            "readOnly": false,
            "type": "boolean"
          },
          "headers": {
            "description": "The headers to be allowed via CORS.",
            "items": {
              "$ref": "#/components/schemas/ServiceCorsConfigurationHeaderEntry"
            },
            "readOnly": false,
            "type": "array"
          },
          "maxAge": {
            "description": "The max age to be allowed via CORS.",
            "maximum": 99999,
            "minimum": 0,
            "readOnly": false,
            "type": "integer"
          },
          "methods": {
            "description": "The methods to be allowed via CORS.",
            "items": {
              "$ref": "#/components/schemas/ServiceCorsConfigurationMethodEntry"
            },
            "readOnly": false,
            "type": "array"
          },
          "origins": {
            "description": "The origins to be allowed via CORS.",
            "items": {
              "$ref": "#/components/schemas/ServiceCorsConfigurationOriginEntry"
            },
            "readOnly": false,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceCorsConfigurationMethodEntry": {
        "description": "A method for CORS.",
        "type": "string"
      },
      "ServiceCorsConfigurationOriginEntry": {
        "description": "An origin for CORS.",
        "pattern": "^(?:(?:(?:[hH][tT][tT][pP](?:[sS]|))\\:\\/\\/(?:[a-zA-Z0-9-]+[.]?)+(?:\\:[0-9]{1,5})?|[*]))$",
        "type": "string"
      },
      "ServiceCosmosDbConfigurationInfo": {
        "description": "The settings for the Cosmos DB database backing the service.",
        "properties": {
          "offerThroughput": {
            "description": "The provisioned throughput for the backing database.",
            "maximum": 10000,
            "minimum": 400,
            "readOnly": false,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServicesDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The description of the service.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ServicesProperties",
            "description": "The common properties of a service.",
            "x-ms-client-flatten": false
          }
        },
        "type": "object"
      },
      "ServicesDescriptionListResult": {
        "description": "A list of service description objects with a next link.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of service description objects.",
            "type": "string"
          },
          "value": {
            "description": "A list of service description objects.",
            "items": {
              "$ref": "#/components/schemas/ServicesDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServicesNameAvailabilityInfo": {
        "description": "The properties indicating whether a given service name is available.",
        "properties": {
          "message": {
            "description": "The detailed reason message.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "The value which indicates whether the provided name is available.",
            "readOnly": true,
            "type": "boolean"
          },
          "reason": {
            "description": "The reason for unavailability.",
            "enum": [
              "Invalid",
              "AlreadyExists"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ServiceNameUnavailabilityReason"
            }
          }
        },
        "type": "object"
      },
      "ServicesPatchDescription": {
        "description": "The description of the service.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Instance tags",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ServicesProperties": {
        "description": "The properties of a service instance.",
        "properties": {
          "accessPolicies": {
            "$ref": "#/components/schemas/ServiceAccessPoliciesInfo",
            "description": "The access policies of the service instance."
          },
          "authenticationConfiguration": {
            "$ref": "#/components/schemas/ServiceAuthenticationConfigurationInfo",
            "description": "The authentication configuration for the service instance."
          },
          "corsConfiguration": {
            "$ref": "#/components/schemas/ServiceCorsConfigurationInfo",
            "description": "The settings for the CORS configuration of the service instance."
          },
          "cosmosDbConfiguration": {
            "$ref": "#/components/schemas/ServiceCosmosDbConfigurationInfo",
            "description": "The settings for the Cosmos DB database backing the service."
          },
          "provisioningState": {
            "description": "The provisioning state.",
            "enum": [
              "Deleting",
              "Succeeded",
              "Creating",
              "Accepted",
              "Verifying",
              "Updating",
              "Failed",
              "Canceled",
              "Deprovisioned"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}