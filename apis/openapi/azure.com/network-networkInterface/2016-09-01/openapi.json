{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2016-09-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2016-09-01/networkInterface.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of NetworkInterface resources."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Gets all network interfaces in a subscription.",
        "operationId": "NetworkInterfaces_ListAll",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterfaceListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of NetworkInterface resources."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Gets all network interfaces in a resource group.",
        "operationId": "NetworkInterfaces_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network interface.",
            "in": "path",
            "name": "networkInterfaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Deletes the specified network interface.",
        "operationId": "NetworkInterfaces_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network interface.",
            "in": "path",
            "name": "networkInterfaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Expands referenced resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting NetworkInterface resource."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Gets information about the specified network interface.",
        "operationId": "NetworkInterfaces_Get"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network interface.",
            "in": "path",
            "name": "networkInterfaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting NetworkInterface resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkInterface"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting NetworkInterface resource."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Creates or updates a network interface.",
        "operationId": "NetworkInterfaces_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkInterface"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkInterface"
              }
            }
          },
          "description": "Parameters supplied to the create or update network interface operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network interface.",
            "in": "path",
            "name": "networkInterfaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectiveNetworkSecurityGroupListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectiveNetworkSecurityGroupListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of NetworkSecurityGroup resources."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Gets all network security groups applied to a network interface.",
        "operationId": "NetworkInterfaces_ListEffectiveNetworkSecurityGroups",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network interface.",
            "in": "path",
            "name": "networkInterfaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectiveRouteListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EffectiveRouteListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of EffectRoute resources."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkInterfaces"
        ],
        "description": "Gets all route tables applied to a network interface.",
        "operationId": "NetworkInterfaces_GetEffectiveRouteTable",
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "EffectiveNetworkSecurityGroup": {
        "description": "Effective network security group.",
        "properties": {
          "association": {
            "$ref": "#/components/schemas/EffectiveNetworkSecurityGroupAssociation"
          },
          "effectiveSecurityRules": {
            "description": "A collection of effective security rules.",
            "items": {
              "$ref": "#/components/schemas/EffectiveNetworkSecurityRule"
            },
            "type": "array"
          },
          "networkSecurityGroup": {
            "$ref": "./network.json#/definitions/SubResource",
            "description": "The ID of network security group that is applied."
          }
        },
        "type": "object"
      },
      "EffectiveNetworkSecurityGroupAssociation": {
        "description": "The effective network security group association.",
        "properties": {
          "networkInterface": {
            "$ref": "./network.json#/definitions/SubResource",
            "description": "The ID of the network interface if assigned."
          },
          "subnet": {
            "$ref": "./network.json#/definitions/SubResource",
            "description": "The ID of the subnet if assigned."
          }
        },
        "type": "object"
      },
      "EffectiveNetworkSecurityGroupListResult": {
        "description": "Response for list effective network security groups API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of effective network security groups.",
            "items": {
              "$ref": "#/components/schemas/EffectiveNetworkSecurityGroup"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EffectiveNetworkSecurityRule": {
        "description": "Effective network security rules.",
        "properties": {
          "access": {
            "description": "Whether network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.",
            "enum": [
              "Allow",
              "Deny"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityRuleAccess"
            }
          },
          "destinationAddressPrefix": {
            "description": "The destination address prefix.",
            "type": "string"
          },
          "destinationPortRange": {
            "description": "The destination port or range.",
            "type": "string"
          },
          "direction": {
            "description": "The direction of the rule. Possible values are: 'Inbound and Outbound'.",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityRuleDirection"
            }
          },
          "expandedDestinationAddressPrefix": {
            "description": "Expanded destination address prefix.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "expandedSourceAddressPrefix": {
            "description": "The expanded source address prefix.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the security rule specified by the user (if created by the user).",
            "type": "string"
          },
          "priority": {
            "description": "The priority of the rule.",
            "format": "int32",
            "type": "integer"
          },
          "protocol": {
            "description": "The network protocol this rule applies to. Possible values are: 'Tcp', 'Udp', and '*'.",
            "enum": [
              "Tcp",
              "Udp",
              "*"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityRuleProtocol"
            }
          },
          "sourceAddressPrefix": {
            "description": "The source address prefix.",
            "type": "string"
          },
          "sourcePortRange": {
            "description": "The source port or range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EffectiveRoute": {
        "description": "Effective Route",
        "properties": {
          "addressPrefix": {
            "description": "The address prefixes of the effective routes in CIDR notation.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the user defined route. This is optional.",
            "type": "string"
          },
          "nextHopIpAddress": {
            "description": "The IP address of the next hop of the effective route.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "nextHopType": {
            "description": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'.",
            "enum": [
              "VirtualNetworkGateway",
              "VnetLocal",
              "Internet",
              "VirtualAppliance",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RouteNextHopType"
            }
          },
          "source": {
            "description": "Who created the route. Possible values are: 'Unknown', 'User', 'VirtualNetworkGateway', and 'Default'.",
            "enum": [
              "Unknown",
              "User",
              "VirtualNetworkGateway",
              "Default"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EffectiveRouteSource"
            }
          },
          "state": {
            "description": "The value of effective route. Possible values are: 'Active' and 'Invalid'.",
            "enum": [
              "Active",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EffectiveRouteState"
            }
          }
        },
        "type": "object"
      },
      "EffectiveRouteListResult": {
        "description": "Response for list effective route API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of effective routes.",
            "items": {
              "$ref": "#/components/schemas/EffectiveRoute"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IPConfiguration": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "IPConfiguration",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/IPConfigurationPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "IPConfigurationPropertiesFormat": {
        "description": "Properties of IP configuration.",
        "properties": {
          "privateIPAddress": {
            "description": "The private IP address of the IP configuration.",
            "type": "string"
          },
          "privateIPAllocationMethod": {
            "description": "The private IP allocation method. Possible values are 'Static' and 'Dynamic'.",
            "enum": [
              "Static",
              "Dynamic"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IPAllocationMethod"
            }
          },
          "provisioningState": {
            "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "publicIPAddress": {
            "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress",
            "description": "The reference of the public IP resource."
          },
          "subnet": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet",
            "description": "The reference of the subnet resource."
          }
        },
        "type": "object"
      },
      "NetworkInterface": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "A network interface in a resource group.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/NetworkInterfacePropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NetworkInterfaceDnsSettings": {
        "description": "DNS settings of a network interface.",
        "properties": {
          "appliedDnsServers": {
            "description": "If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dnsServers": {
            "description": "List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "internalDnsNameLabel": {
            "description": "Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.",
            "type": "string"
          },
          "internalDomainNameSuffix": {
            "description": "Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.",
            "type": "string"
          },
          "internalFqdn": {
            "description": "Fully qualified DNS name supporting internal communications between VMs in the same virtual network.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkInterfaceIPConfiguration": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "IPConfiguration in a network interface.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/NetworkInterfaceIPConfigurationPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NetworkInterfaceIPConfigurationPropertiesFormat": {
        "description": "Properties of IP configuration.",
        "properties": {
          "applicationGatewayBackendAddressPools": {
            "description": "The reference of ApplicationGatewayBackendAddressPool resource.",
            "items": {
              "$ref": "./applicationGateway.json#/definitions/ApplicationGatewayBackendAddressPool"
            },
            "type": "array"
          },
          "loadBalancerBackendAddressPools": {
            "description": "The reference of LoadBalancerBackendAddressPool resource.",
            "items": {
              "$ref": "./loadBalancer.json#/definitions/BackendAddressPool"
            },
            "type": "array"
          },
          "loadBalancerInboundNatRules": {
            "description": "A list of references of LoadBalancerInboundNatRules.",
            "items": {
              "$ref": "./loadBalancer.json#/definitions/InboundNatRule"
            },
            "type": "array"
          },
          "primary": {
            "description": "Gets whether this is a primary customer address on the network interface.",
            "type": "boolean"
          },
          "privateIPAddress": {
            "type": "string"
          },
          "privateIPAddressVersion": {
            "description": "Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
            "enum": [
              "IPv4",
              "IPv6"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IPVersion"
            }
          },
          "privateIPAllocationMethod": {
            "description": "Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.",
            "enum": [
              "Static",
              "Dynamic"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IPAllocationMethod"
            }
          },
          "provisioningState": {
            "type": "string"
          },
          "publicIPAddress": {
            "$ref": "./publicIpAddress.json#/definitions/PublicIPAddress"
          },
          "subnet": {
            "$ref": "./virtualNetwork.json#/definitions/Subnet"
          }
        },
        "type": "object"
      },
      "NetworkInterfaceListResult": {
        "description": "Response for the ListNetworkInterface API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of network interfaces in a resource group.",
            "items": {
              "$ref": "#/components/schemas/NetworkInterface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkInterfacePropertiesFormat": {
        "description": "NetworkInterface properties. ",
        "properties": {
          "dnsSettings": {
            "$ref": "#/components/schemas/NetworkInterfaceDnsSettings",
            "description": "The DNS settings in network interface."
          },
          "enableAcceleratedNetworking": {
            "description": "If the network interface is accelerated networking enabled.",
            "type": "boolean"
          },
          "enableIPForwarding": {
            "description": "Indicates whether IP forwarding is enabled on this network interface.",
            "type": "boolean"
          },
          "ipConfigurations": {
            "description": "A list of IPConfigurations of the network interface.",
            "items": {
              "$ref": "#/components/schemas/NetworkInterfaceIPConfiguration"
            },
            "type": "array"
          },
          "macAddress": {
            "description": "The MAC address of the network interface.",
            "type": "string"
          },
          "networkSecurityGroup": {
            "$ref": "./networkSecurityGroup.json#/definitions/NetworkSecurityGroup",
            "description": "The reference of the NetworkSecurityGroup resource."
          },
          "primary": {
            "description": "Gets whether this is a primary network interface on a virtual machine.",
            "type": "boolean"
          },
          "provisioningState": {
            "description": "The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "resourceGuid": {
            "description": "The resource GUID property of the network interface resource.",
            "type": "string"
          },
          "virtualMachine": {
            "$ref": "./network.json#/definitions/SubResource",
            "description": "The reference of a virtual machine."
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}