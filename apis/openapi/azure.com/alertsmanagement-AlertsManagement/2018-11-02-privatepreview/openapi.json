{
  "openapi": "3.0.0",
  "info": {
    "description": "REST APIs for Azure Alerts Management Service.",
    "title": "Azure Alerts Management Service Resource Provider",
    "version": "2018-11-02-privatepreview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/alertsmanagement/resource-manager/Microsoft.AlertsManagement/preview/2018-11-02-privatepreview/AlertsManagement.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.AlertsManagement/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationsList"
                }
              }
            },
            "description": "OK. Successfully retrieved operations list."
          }
        },
        "description": "List all operations available through Azure Alerts Management Resource Provider.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/actionRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/components/parameters/targetResourceType"
          },
          {
            "$ref": "#/components/parameters/targetResource"
          },
          {
            "$ref": "#/components/parameters/severity"
          },
          {
            "$ref": "#/components/parameters/monitorService"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actionRulesList"
                }
              }
            },
            "description": "OK. Return the list of action rules",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "List all action rules of the subscription and given input filters",
        "operationId": "ActionRules_GetAll_Subscription",
        "summary": "Get all action rule in a given subscription"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/targetResource"
          },
          {
            "$ref": "#/components/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/components/parameters/targetResourceType"
          },
          {
            "$ref": "#/components/parameters/monitorService"
          },
          {
            "$ref": "#/components/parameters/monitorCondition"
          },
          {
            "$ref": "#/components/parameters/severity"
          },
          {
            "$ref": "#/components/parameters/alertState"
          },
          {
            "$ref": "#/components/parameters/smartGroupIdFilter"
          },
          {
            "$ref": "#/components/parameters/includePayload"
          },
          {
            "$ref": "#/components/parameters/pageCount"
          },
          {
            "$ref": "#/components/parameters/alertsSortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/timeRange"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alertsList"
                }
              }
            },
            "description": "OK. Successfully listed alert objects."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "List all the existing alerts, where the results can be selective by passing multiple filter parameters including time range and sorted on specific fields. ",
        "operationId": "Alerts_GetAll",
        "x-ms-examples": {
          "ListAlerts": {
            "$ref": "./examples/Alerts_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/alertId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alert"
                }
              }
            },
            "description": "OK. Returns the alert with the specified ID."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get information related to a specific alert",
        "operationId": "Alerts_GetById",
        "summary": "Get a specific alert.",
        "x-ms-examples": {
          "GetById": {
            "$ref": "./examples/Alerts_GetById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/changestate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/alertId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/newState"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alert"
                }
              }
            },
            "description": "OK. Alert state updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Change the state of the alert.",
        "operationId": "Alerts_ChangeState",
        "x-ms-examples": {
          "Resolve": {
            "$ref": "./examples/Alerts_ChangeState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/alertId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alertModification"
                }
              }
            },
            "description": "OK. Returns the list of changes of alert."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get the history of the changes of an alert.",
        "operationId": "Alerts_GetHistory",
        "x-ms-examples": {
          "Resolve": {
            "$ref": "./examples/Alerts_History.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/components/parameters/timeRange"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/alertsSummary"
                }
              }
            },
            "description": "OK. Alert state updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Summary of alerts with the count each severity.",
        "operationId": "Alerts_GetSummary",
        "x-ms-examples": {
          "Summary": {
            "$ref": "./examples/Alerts_Summary.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/targetResource"
          },
          {
            "$ref": "#/components/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/components/parameters/targetResourceType"
          },
          {
            "$ref": "#/components/parameters/monitorService"
          },
          {
            "$ref": "#/components/parameters/monitorCondition"
          },
          {
            "$ref": "#/components/parameters/severity"
          },
          {
            "$ref": "#/components/parameters/smartGroupState"
          },
          {
            "$ref": "#/components/parameters/timeRange"
          },
          {
            "$ref": "#/components/parameters/pageCount"
          },
          {
            "$ref": "#/components/parameters/smartGroupsSortBy"
          },
          {
            "$ref": "#/components/parameters/sortOrder"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartGroupsList",
                  "description": "List of smart groups in value property."
                }
              }
            },
            "description": "OK. Returns list of all smartGroups."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "List all the smartGroups within the specified subscription. ",
        "operationId": "SmartGroups_GetAll",
        "summary": "Get all smartGroups within the subscription",
        "x-ms-examples": {
          "List": {
            "$ref": "./examples/SmartGroups_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/smartGroupId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartGroup"
                }
              }
            },
            "description": "OK. Returns the group with the specified smart group Id.",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get details of smart group.",
        "operationId": "SmartGroups_GetById",
        "summary": "Get information of smart alerts group.",
        "x-ms-examples": {
          "Get": {
            "$ref": "./examples/SmartGroups_GetById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/changeState": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/smartGroupId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/newState"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartGroup"
                }
              }
            },
            "description": "OK. Alert state updated.",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Change the state from unresolved to resolved and all the alerts within the smart group will also be resolved.",
        "operationId": "SmartGroups_ChangeState",
        "x-ms-examples": {
          "changestate": {
            "$ref": "./examples/SmartGroups_ChangeState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/smartGroupId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartGroupModification"
                }
              }
            },
            "description": "OK. Returns the list of changes of smart group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get the history of the changes of smart group.",
        "operationId": "SmartGroups_GetHistory",
        "x-ms-examples": {
          "Resolve": {
            "$ref": "./examples/SmartGroups_History.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AlertsManagement/actionRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroup"
          },
          {
            "$ref": "#/components/parameters/targetResourceGroup"
          },
          {
            "$ref": "#/components/parameters/targetResourceType"
          },
          {
            "$ref": "#/components/parameters/targetResource"
          },
          {
            "$ref": "#/components/parameters/severity"
          },
          {
            "$ref": "#/components/parameters/monitorService"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actionRulesList"
                }
              }
            },
            "description": "OK. Return the list of action rules",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "List all action rules of the subscription, created in given resource group and given input filters",
        "operationId": "ActionRules_GetAll_ResourceGroup",
        "summary": "Get all action rules created in a resource group"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AlertsManagement/actionRules/{actionRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroup"
          },
          {
            "description": "The name that needs to be deleted",
            "in": "path",
            "name": "actionRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns true if deleted successfully",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Deletes a given action rule",
        "operationId": "ActionRules_Delete",
        "summary": "Delete action rule"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroup"
          },
          {
            "description": "The name of action rule that needs to be fetched",
            "in": "path",
            "name": "actionRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actionRule"
                }
              }
            },
            "description": "OK. Returns the specific action rule",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get a specific action rule",
        "operationId": "ActionRules_GetByName",
        "summary": "Get action rule by name"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroup"
          },
          {
            "description": "The name that needs to be updated",
            "in": "path",
            "name": "actionRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Returns the created/updated action rule",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Update enabled flag and/or tags for the given action rule",
        "operationId": "ActionRules_Patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/patchObject"
              }
            }
          },
          "description": "Parameters supplied to the operation.",
          "required": true
        },
        "summary": "Patch action rule"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroup"
          },
          {
            "description": "The name of action rule that needs to be created/updated",
            "in": "path",
            "name": "actionRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/actionRule"
                }
              }
            },
            "description": "OK. Returns the created/updated action rule",
            "headers": {
              "x-ms-request-id": {
                "description": "Service generated Request ID.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsManagementErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Creates/Updates a specific action rule",
        "operationId": "ActionRules_CreateUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/actionRule"
              }
            }
          },
          "description": "action rule to be created/updated",
          "required": true
        },
        "summary": "Create/update an action rule"
      }
    }
  },
  "components": {
    "parameters": {
      "alertId": {
        "description": "Unique ID of an alert object.",
        "in": "path",
        "name": "alertId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "alertState": {
        "description": "filter by state",
        "in": "query",
        "name": "alertState",
        "required": false,
        "schema": {
          "enum": [
            "New",
            "Acknowledged",
            "Closed"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertState"
        },
        "x-ms-parameter-location": "method"
      },
      "alertsSortBy": {
        "description": "sort the query results by input field, default value is 'lastModifiedDateTime'.",
        "in": "query",
        "name": "sortBy",
        "required": false,
        "schema": {
          "enum": [
            "name",
            "severity",
            "alertState",
            "monitorCondition",
            "targetResource",
            "targetResourceName",
            "targetResourceGroup",
            "targetResourceType",
            "startDateTime",
            "lastModifiedDateTime"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertsSortByFields"
        },
        "x-ms-parameter-location": "method"
      },
      "api-version": {
        "description": "client API version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2018-11-02-privatepreview",
            "2018-05-05"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "api-version"
        }
      },
      "includePayload": {
        "description": "include payload field content, default value is 'false'.",
        "in": "query",
        "name": "includePayload",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "x-ms-parameter-location": "method"
      },
      "monitorCondition": {
        "description": "filter by monitor condition which is the state of the alert at monitor service",
        "in": "query",
        "name": "monitorCondition",
        "required": false,
        "schema": {
          "enum": [
            "Fired",
            "Resolved"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MonitorCondition"
        },
        "x-ms-parameter-location": "method"
      },
      "monitorService": {
        "description": "filter by monitor service which is the source of the alert object.",
        "in": "query",
        "name": "monitorService",
        "required": false,
        "schema": {
          "enum": [
            "Platform",
            "Application Insights",
            "Log Analytics",
            "Zabbix",
            "SCOM",
            "Nagios",
            "Infrastructure Insights",
            "ActivityLog Administrative",
            "ActivityLog Security",
            "ActivityLog Recommendation",
            "ActivityLog Policy",
            "ActivityLog Autoscale",
            "ServiceHealth",
            "SmartDetector"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MonitorService"
        }
      },
      "newState": {
        "description": "filter by state",
        "in": "query",
        "name": "newState",
        "required": true,
        "schema": {
          "enum": [
            "New",
            "Acknowledged",
            "Closed"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertState"
        },
        "x-ms-parameter-location": "method"
      },
      "pageCount": {
        "description": "number of items per page, default value is '25'.",
        "in": "query",
        "name": "pageCount",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroup": {
        "description": "Resource group name where the resource is created.",
        "in": "path",
        "name": "resourceGroup",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "severity": {
        "description": "filter by severity",
        "in": "query",
        "name": "severity",
        "required": false,
        "schema": {
          "enum": [
            "Sev0",
            "Sev1",
            "Sev2",
            "Sev3",
            "Sev4"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "Severity"
        },
        "x-ms-parameter-location": "method"
      },
      "smartGroupId": {
        "description": "Smart Group Id",
        "in": "path",
        "name": "smartGroupId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "smartGroupIdFilter": {
        "description": "filter by smart Group Id",
        "in": "query",
        "name": "smartGroupId",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "smartGroupState": {
        "description": "filter by state",
        "in": "query",
        "name": "smartGroupState",
        "required": false,
        "schema": {
          "enum": [
            "New",
            "Acknowledged",
            "Closed"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertState"
        },
        "x-ms-parameter-location": "method"
      },
      "smartGroupsSortBy": {
        "description": "sort the query results by input field, default value is 'lastModifiedDateTime'.",
        "in": "query",
        "name": "sortBy",
        "required": false,
        "schema": {
          "enum": [
            "alertsCount",
            "state",
            "severity",
            "startDateTime",
            "lastModifiedDateTime"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SmartGroupsSortByFields"
        },
        "x-ms-parameter-location": "method"
      },
      "sortOrder": {
        "description": "sort the query results order in either ascending or descending, default value is 'desc' for time fields and 'asc' for others.",
        "in": "query",
        "name": "sortOrder",
        "required": false,
        "schema": {
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "targetResource": {
        "description": "filter by target resource",
        "in": "query",
        "name": "targetResource",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "targetResourceGroup": {
        "description": "filter by target resource group name",
        "in": "query",
        "name": "targetResourceGroup",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "targetResourceType": {
        "description": "filter by target resource type",
        "in": "query",
        "name": "targetResourceType",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "timeRange": {
        "description": "filter by time range, default value is 1 day",
        "in": "query",
        "name": "timeRange",
        "required": false,
        "schema": {
          "enum": [
            "1h",
            "1d",
            "7d",
            "30d"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TimeRange"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AlertsManagementErrorResponse": {
        "description": "An error response from the service.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/errorResponseBody"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "ManagedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An azure managed resource object",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "location": {
            "description": "Resource location",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Resource": {
        "description": "An azure resource object",
        "properties": {
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Azure resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "actionRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedResource"
          }
        ],
        "description": "Action rule object containing target scope, conditions and suppression logic",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/actionRuleProperties"
          }
        },
        "type": "object"
      },
      "actionRuleProperties": {
        "description": "Action rule properties defining scope, conditions, suppression logic for action rule",
        "properties": {
          "conditions": {
            "$ref": "#/components/schemas/conditions"
          },
          "createdAt": {
            "description": "Creation time of action rule. Date-Time in ISO-8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdBy": {
            "description": "Created by user name.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of action rule",
            "type": "string"
          },
          "lastModifiedAt": {
            "description": "Last updated time of action rule. Date-Time in ISO-8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedBy": {
            "description": "Last modified by user name.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group where action rule is stored",
            "readOnly": true,
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/scope"
          },
          "status": {
            "description": "Indicates if the given action rule is enabled or disabled",
            "enum": [
              "enabled",
              "disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ActionRuleStatus"
            }
          },
          "suppressionConfig": {
            "$ref": "#/components/schemas/suppressionConfig"
          }
        },
        "type": "object"
      },
      "actionRulesList": {
        "description": "List of action rules",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of action rules",
            "type": "string"
          },
          "value": {
            "description": "List of action rules",
            "items": {
              "$ref": "#/components/schemas/actionRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "alert": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An alert created in alert management service.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/alertProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "alertModification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Alert Modification details",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/alertModificationProperties"
          }
        },
        "type": "object"
      },
      "alertModificationItem": {
        "description": "Alert modification item.",
        "properties": {
          "comments": {
            "description": "Modification comments",
            "type": "string"
          },
          "description": {
            "description": "Description of the modification",
            "type": "string"
          },
          "modificationEvent": {
            "description": "Reason for the modification",
            "enum": [
              "AlertCreated",
              "StateChange",
              "MonitorConditionChange"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "AlertModificationEvent"
            }
          },
          "modifiedAt": {
            "description": "Modified date and time",
            "type": "string"
          },
          "modifiedBy": {
            "description": "Modified user details (Principal client name)",
            "type": "string"
          },
          "newValue": {
            "description": "New value",
            "type": "string"
          },
          "oldValue": {
            "description": "Old value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alertModificationProperties": {
        "description": "Properties of the alert modification item.",
        "properties": {
          "alertId": {
            "description": "Unique Id of the alert for which the history is being retrieved",
            "readOnly": true,
            "type": "string"
          },
          "modifications": {
            "description": "Modification details",
            "items": {
              "$ref": "#/components/schemas/alertModificationItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "alertProperties": {
        "description": "An alert created in alert management service.",
        "properties": {
          "alertState": {
            "description": "Alert object state",
            "enum": [
              "New",
              "Acknowledged",
              "Closed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertState"
            }
          },
          "lastModifiedDateTime": {
            "description": "Last modification time(ISO-8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedUserName": {
            "description": "User who last modified the alert.",
            "readOnly": true,
            "type": "string"
          },
          "monitorCondition": {
            "description": "Condition of the rule at the monitor service",
            "enum": [
              "Fired",
              "Resolved"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MonitorCondition"
            }
          },
          "monitorService": {
            "description": "Monitor service which is the source of the alert object.",
            "enum": [
              "Platform",
              "Application Insights",
              "Log Analytics",
              "Infrastructure Insights",
              "ActivityLog Administrative",
              "ActivityLog Security",
              "ActivityLog Recommendation",
              "ActivityLog Policy",
              "ActivityLog Autoscale",
              "ServiceHealth",
              "SmartDetector",
              "Zabbix",
              "SCOM",
              "Nagios"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MonitorService"
            }
          },
          "payload": {
            "description": "More details which are contextual to the monitor service.",
            "readOnly": true,
            "type": "object"
          },
          "severity": {
            "description": "Severity of alert Sev1 being highest and Sev3 being lowest.",
            "enum": [
              "Sev0",
              "Sev1",
              "Sev2",
              "Sev3",
              "Sev4"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Severity"
            }
          },
          "signalType": {
            "description": "Log based alert or metric based alert",
            "enum": [
              "Metric",
              "Log",
              "Unknown"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SignalType"
            }
          },
          "smartGroupId": {
            "description": "Unique Id of the smart group",
            "readOnly": true,
            "type": "string"
          },
          "smartGroupingReason": {
            "description": "Reason for addition to a smart group",
            "readOnly": true,
            "type": "string"
          },
          "sourceCreatedId": {
            "description": "Unique Id created by monitor service",
            "readOnly": true,
            "type": "string"
          },
          "startDateTime": {
            "description": "Creation time(ISO-8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "targetResource": {
            "description": "Target ARM resource, on which alert got created.",
            "type": "string"
          },
          "targetResourceGroup": {
            "description": "Resource group of target ARM resource.",
            "type": "string"
          },
          "targetResourceName": {
            "description": "Target ARM resource name, on which alert got created.",
            "type": "string"
          },
          "targetResourceType": {
            "description": "Resource type of target ARM resource",
            "type": "string"
          }
        },
        "type": "object"
      },
      "alertsList": {
        "description": "List the alerts.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of alerts.",
            "type": "string"
          },
          "value": {
            "description": "List of alerts",
            "items": {
              "$ref": "#/components/schemas/alert"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "alertsSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Summary of the alerts.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/alertsSummaryProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "alertsSummaryByMonitorCondition": {
        "description": "Summary of the alerts by monitor condition",
        "properties": {
          "fired": {
            "description": "Count of alerts with monitorCondition 'Fired'",
            "type": "integer"
          },
          "resolved": {
            "description": "Count of alerts with monitorCondition 'Resolved'",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "alertsSummaryByMonitorService": {
        "description": "Summary of the alerts by monitor service",
        "properties": {
          "activityLog Administrative": {
            "description": "Count of alerts of \"ActivityLog Administrative\"",
            "type": "integer"
          },
          "activityLog Autoscale": {
            "description": "Count of alerts of \"ActivityLog Autoscale\"",
            "type": "integer"
          },
          "activityLog Policy": {
            "description": "Count of alerts of \"ActivityLog Policy\"",
            "type": "integer"
          },
          "activityLog Recommendation": {
            "description": "Count of alerts of \"ActivityLog Recommendation\"",
            "type": "integer"
          },
          "activityLog Security": {
            "description": "Count of alerts of \"ActivityLog Security\"",
            "type": "integer"
          },
          "application Insights": {
            "description": "Count of alerts of \"Application Insights\"",
            "type": "integer"
          },
          "infrastructure Insights": {
            "description": "Count of alerts of \"Infrastructure Insights\"",
            "type": "integer"
          },
          "log Analytics": {
            "description": "Count of alerts of \"Log Analytics\"",
            "type": "integer"
          },
          "nagios": {
            "description": "Count of alerts of \"Nagios\"",
            "type": "integer"
          },
          "platform": {
            "description": "Count of alerts of \"Platform\"",
            "type": "integer"
          },
          "scom": {
            "description": "Count of alerts of \"SCOM\"",
            "type": "integer"
          },
          "serviceHealth": {
            "description": "Count of alerts of \"ServiceHealth\"",
            "type": "integer"
          },
          "smartDetector": {
            "description": "Count of alerts of \"Smart Detector\"",
            "type": "integer"
          },
          "zabbix": {
            "description": "Count of alerts of \"Zabbix\"",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "alertsSummaryBySeverityAndMonitorCondition": {
        "description": "Summary of the alerts by severity and monitor condition",
        "properties": {
          "sev0": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorCondition"
              }
            ],
            "description": "Summary of alerts by monitor condition with severity 'Sev0'"
          },
          "sev1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorCondition"
              }
            ],
            "description": "Summary of alerts by monitor condition with severity 'Sev1'"
          },
          "sev2": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorCondition"
              }
            ],
            "description": "Summary of alerts by monitor condition with severity 'Sev2'"
          },
          "sev3": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorCondition"
              }
            ],
            "description": "Summary of alerts by monitor condition with severity 'Sev3'"
          },
          "sev4": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorCondition"
              }
            ],
            "description": "Summary of alerts by monitor condition with severity 'Sev4'"
          }
        },
        "type": "object"
      },
      "alertsSummaryByState": {
        "description": "Summary of alerts by state",
        "properties": {
          "acknowledged": {
            "description": "Count of alerts with state 'Acknowledged'",
            "type": "integer"
          },
          "closed": {
            "description": "Count of alerts with state 'Closed'",
            "type": "integer"
          },
          "new": {
            "description": "Count of alerts with state 'New'",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "alertsSummaryProperties": {
        "description": "Summary of the alerts",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of results.",
            "type": "string"
          },
          "smartGroupsCount": {
            "description": "Total number of smart groups.",
            "type": "integer"
          },
          "summaryByMonitorService": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByMonitorService"
              }
            ],
            "description": "Summary of alerts by severity",
            "type": "object"
          },
          "summaryBySeverity": {
            "description": "Summary of alerts by severity",
            "properties": {
              "sev0": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/alertsSummaryByState"
                  }
                ],
                "description": "Summary of alerts by severity 'Sev0'",
                "type": "object"
              },
              "sev1": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/alertsSummaryByState"
                  }
                ],
                "description": "Summary of alerts by severity 'Sev1'",
                "type": "object"
              },
              "sev2": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/alertsSummaryByState"
                  }
                ],
                "description": "Summary of alerts by severity 'Sev2'",
                "type": "object"
              },
              "sev3": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/alertsSummaryByState"
                  }
                ],
                "description": "Summary of alerts by severity 'Sev3'",
                "type": "object"
              },
              "sev4": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/alertsSummaryByState"
                  }
                ],
                "description": "Summary of alerts by severity 'Sev4'",
                "type": "object"
              }
            },
            "type": "object"
          },
          "summaryBySeverityAndMonitorCondition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryBySeverityAndMonitorCondition"
              }
            ],
            "description": "Summary of alerts by severity and monitor condition",
            "type": "object"
          },
          "summaryByState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/alertsSummaryByState"
              }
            ],
            "description": "Summary of alerts by state",
            "type": "object"
          },
          "total": {
            "description": "Total number of alerts.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "condition": {
        "description": "condition to trigger an action rule",
        "properties": {
          "operator": {
            "description": "operator for a given condition",
            "enum": [
              "Equals",
              "NotEquals",
              "Contains",
              "DoesNotContain"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ScopeType"
            }
          },
          "values": {
            "description": "list of values to match for a given condition.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "conditions": {
        "description": "Conditions in alert instance to be matched for a given action rule. Default value is all. Multiple values could be provided with comma separation.",
        "properties": {
          "alertRuleId": {
            "$ref": "#/components/schemas/condition"
          },
          "applicationInsightsSearchResults": {
            "$ref": "#/components/schemas/condition"
          },
          "description": {
            "$ref": "#/components/schemas/condition"
          },
          "logAnalyticsSearchResults": {
            "$ref": "#/components/schemas/condition"
          },
          "monitorCondition": {
            "$ref": "#/components/schemas/condition"
          },
          "monitorService": {
            "$ref": "#/components/schemas/condition"
          },
          "severity": {
            "$ref": "#/components/schemas/condition"
          },
          "signalType": {
            "$ref": "#/components/schemas/condition"
          },
          "targetResource": {
            "$ref": "#/components/schemas/condition"
          },
          "targetResourceGroup": {
            "$ref": "#/components/schemas/condition"
          },
          "targetResourceType": {
            "$ref": "#/components/schemas/condition"
          }
        },
        "type": "object"
      },
      "errorResponseBody": {
        "description": "Details of error response.",
        "properties": {
          "code": {
            "description": "Error code, intended to be consumed programmatically.",
            "type": "string"
          },
          "details": {
            "description": "A list of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/errorResponseBody"
            },
            "type": "array"
          },
          "message": {
            "description": "Description of the error, intended for display in user interface.",
            "type": "string"
          },
          "target": {
            "description": "Target of the particular error, for example name of the property.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "operation": {
        "description": "Operation provided by provider",
        "properties": {
          "display": {
            "description": "Properties of the operation",
            "properties": {
              "description": {
                "description": "Description of the operation",
                "type": "string"
              },
              "operation": {
                "description": "Operation name",
                "type": "string"
              },
              "provider": {
                "description": "Provider name",
                "type": "string"
              },
              "resource": {
                "description": "Resource name",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Name of the operation",
            "type": "string"
          }
        },
        "type": "object"
      },
      "operationsList": {
        "description": "Lists the operations available in the AlertsManagement RP.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of alerts.",
            "type": "string"
          },
          "value": {
            "description": "Array of operations",
            "items": {
              "$ref": "#/components/schemas/operation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "patchObject": {
        "description": "Properties supported by patch",
        "properties": {
          "tags": {
            "description": "tags to be updated",
            "type": "object"
          },
          "status": {
            "description": "Indicates if the given action rule is enabled or disabled",
            "enum": [
              "enabled",
              "disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ActionRuleStatus"
            }
          }
        },
        "type": "object"
      },
      "scope": {
        "description": "Target scope for a given action rule. By default scope will be the subscription. User can also provide list of resource groups or list of resources from the scope subscription as well.",
        "properties": {
          "type": {
            "description": "type of target scope",
            "enum": [
              "ResourceGroup",
              "Resource"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ScopeType"
            }
          },
          "values": {
            "description": "list of ARM IDs of the given scope type which will be the target of the given action rule.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "smartGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Set of related alerts grouped together smartly by AMS.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/smartGroupProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "smartGroupAggregatedProperty": {
        "description": "Aggregated property of each type",
        "properties": {
          "count": {
            "description": "Total number of items of type.",
            "type": "integer"
          },
          "name": {
            "description": "Name of the type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "smartGroupModification": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Alert Modification details",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/smartGroupModificationProperties"
          }
        },
        "type": "object"
      },
      "smartGroupModificationItem": {
        "description": "smartGroup modification item.",
        "properties": {
          "comments": {
            "description": "Modification comments",
            "type": "string"
          },
          "description": {
            "description": "Description of the modification",
            "type": "string"
          },
          "modificationEvent": {
            "description": "Reason for the modification",
            "enum": [
              "SmartGroupCreated",
              "StateChange",
              "AlertAdded",
              "AlertRemoved"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "SmartGroupModificationEvent"
            }
          },
          "modifiedAt": {
            "description": "Modified date and time",
            "type": "string"
          },
          "modifiedBy": {
            "description": "Modified user details (Principal client name)",
            "type": "string"
          },
          "newValue": {
            "description": "New value",
            "type": "string"
          },
          "oldValue": {
            "description": "Old value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "smartGroupModificationProperties": {
        "description": "Properties of the smartGroup modification item.",
        "properties": {
          "modifications": {
            "description": "Modification details",
            "items": {
              "$ref": "#/components/schemas/smartGroupModificationItem"
            },
            "type": "array"
          },
          "nextLink": {
            "description": "URL to fetch the next set of results.",
            "type": "string"
          },
          "smartGroupId": {
            "description": "Unique Id of the smartGroup for which the history is being retrieved",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "smartGroupProperties": {
        "description": "Properties of smart group.",
        "properties": {
          "alertSeverities": {
            "description": "Summary of alertSeverities in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "alertStates": {
            "description": "Summary of alertStates in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "alertsCount": {
            "description": "Total number of alerts in smart group",
            "type": "integer"
          },
          "lastModifiedDateTime": {
            "description": "Last updated time of smart group. Date-Time in ISO-8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedUserName": {
            "description": "Last modified by user name.",
            "readOnly": true,
            "type": "string"
          },
          "monitorConditions": {
            "description": "Summary of monitorConditions in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "monitorServices": {
            "description": "Summary of monitorServices in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "nextLink": {
            "description": "The URI to fetch the next page of alerts. Call ListNext() with this URI to fetch the next page alerts.",
            "type": "string"
          },
          "resourceGroups": {
            "description": "Summary of target resource groups in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "resourceTypes": {
            "description": "Summary of target resource types in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "resources": {
            "description": "Summary of target resources in the smart group",
            "items": {
              "$ref": "#/components/schemas/smartGroupAggregatedProperty"
            },
            "type": "array"
          },
          "severity": {
            "description": "Severity of smart group is the highest(Sev0 >... > Sev4) severity of all the alerts in the group.",
            "enum": [
              "Sev0",
              "Sev1",
              "Sev2",
              "Sev3",
              "Sev4"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Severity"
            }
          },
          "smartGroupState": {
            "description": "Smart group state",
            "enum": [
              "New",
              "Acknowledged",
              "Closed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "State"
            }
          },
          "startDateTime": {
            "description": "Creation time of smart group. Date-Time in ISO-8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "smartGroupsList": {
        "description": "List the alerts.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of alerts.",
            "type": "string"
          },
          "value": {
            "description": "List of alerts",
            "items": {
              "$ref": "#/components/schemas/smartGroup"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "suppressionConfig": {
        "description": "Suppression logic for a given action rule",
        "discriminator": {
          "propertyName": "recurrenceType"
        },
        "properties": {
          "recurrenceType": {
            "description": "Specifies when the suppression should be applied",
            "enum": [
              "Always",
              "Once",
              "Daily",
              "Weekly",
              "Monthly"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SuppressionType"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/suppressionSchedule"
          }
        },
        "required": [
          "recurrenceType"
        ],
        "type": "object"
      },
      "suppressionSchedule": {
        "description": "Schedule for a given suppression configuration.",
        "properties": {
          "endDate": {
            "description": "End date for suppression",
            "type": "string"
          },
          "endTime": {
            "description": "End date for suppression",
            "type": "string"
          },
          "recurrenceValues": {
            "description": "Specifies the values for recurrence pattern",
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "startDate": {
            "description": "Start date for suppression",
            "type": "string"
          },
          "startTime": {
            "description": "Start time for suppression",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}