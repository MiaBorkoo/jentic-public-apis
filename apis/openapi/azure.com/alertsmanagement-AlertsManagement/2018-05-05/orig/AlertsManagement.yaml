openapi: 3.0.0
info:
  description: >-
    Azure Alerts Management Service provides a single pane of glass of alerts
    across Azure Monitor.
  title: Azure Alerts Management Service Resource Provider
  version: '2018-05-05'
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.AlertsManagement/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operationsList'
          description: OK. Successfully retrieved operations list.
      description: >-
        List all operations available through Azure Alerts Management Resource
        Provider.
      operationId: Operations_List
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/alertState'
        - $ref: '#/components/parameters/alertRule'
        - $ref: '#/components/parameters/smartGroupIdFilter'
        - $ref: '#/components/parameters/includeContext'
        - $ref: '#/components/parameters/includeEgressConfig'
        - $ref: '#/components/parameters/pageCount'
        - $ref: '#/components/parameters/alertsSortBy'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/customTimeRange'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertsList'
          description: OK. Successfully listed alert objects.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: >-
        List all existing alerts, where the results can be filtered on the basis
        of multiple parameters (e.g. time range). The results can then be sorted
        on the basis specific fields, with the default being
        lastModifiedDateTime. 
      operationId: Alerts_GetAll
      x-ms-examples:
        ListAlerts:
          $ref: ./examples/Alerts_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
          description: OK. Returns the alert with the specified ID.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: Get information related to a specific alert
      operationId: Alerts_GetById
      summary: Get a specific alert.
      x-ms-examples:
        GetById:
          $ref: ./examples/Alerts_GetById.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/changestate':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/newState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert'
          description: OK. Alert state updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: Change the state of an alert.
      operationId: Alerts_ChangeState
      x-ms-examples:
        Resolve:
          $ref: ./examples/Alerts_ChangeState.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alerts/{alertId}/history':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertModification'
          description: OK. Returns the history of the specified alert.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: >-
        Get the history of an alert, which captures any monitor condition
        changes (Fired/Resolved) and alert state changes
        (New/Acknowledged/Closed).
      operationId: Alerts_GetHistory
      x-ms-examples:
        Resolve:
          $ref: ./examples/Alerts_History.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/alertsSummary':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/alertsSummaryGroupBy'
        - $ref: '#/components/parameters/includeSmartGroupsCount'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/alertState'
        - $ref: '#/components/parameters/alertRule'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/customTimeRange'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alertsSummary'
          description: OK. Alert summary returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: >-
        Get a summarized count of your alerts grouped by various parameters
        (e.g. grouping by 'Severity' returns the count of alerts for each
        severity).
      operationId: Alerts_GetSummary
      x-ms-examples:
        Summary:
          $ref: ./examples/Alerts_Summary.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/targetResource'
        - $ref: '#/components/parameters/targetResourceGroup'
        - $ref: '#/components/parameters/targetResourceType'
        - $ref: '#/components/parameters/monitorService'
        - $ref: '#/components/parameters/monitorCondition'
        - $ref: '#/components/parameters/severity'
        - $ref: '#/components/parameters/smartGroupState'
        - $ref: '#/components/parameters/timeRange'
        - $ref: '#/components/parameters/pageCount'
        - $ref: '#/components/parameters/smartGroupsSortBy'
        - $ref: '#/components/parameters/sortOrder'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroupsList'
                description: List of smart groups in value property.
          description: OK. Returns list of all smartGroups.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: 'List all the Smart Groups within a specified subscription. '
      operationId: SmartGroups_GetAll
      summary: Get all Smart Groups within a specified subscription
      x-ms-examples:
        List:
          $ref: ./examples/SmartGroups_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroup'
          description: OK. Returns the group with the specified smart group Id.
          headers:
            x-ms-request-id:
              description: Service generated Request ID.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: Get information related to a specific Smart Group.
      operationId: SmartGroups_GetById
      summary: Get information related to a specific Smart Group.
      x-ms-examples:
        Get:
          $ref: ./examples/SmartGroups_GetById.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/changeState':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/newState'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroup'
          description: OK. Smart Group state updated.
          headers:
            x-ms-request-id:
              description: Service generated Request ID.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: Change the state of a Smart Group.
      operationId: SmartGroups_ChangeState
      x-ms-examples:
        changestate:
          $ref: ./examples/SmartGroups_ChangeState.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.AlertsManagement/smartGroups/{smartGroupId}/history':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/smartGroupId'
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/smartGroupModification'
          description: OK. Returns the list of changes of smart group.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsManagementErrorResponse'
          description: Error response describing why the operation failed.
      description: >-
        Get the history a smart group, which captures any Smart Group state
        changes (New/Acknowledged/Closed) .
      operationId: SmartGroups_GetHistory
      x-ms-examples:
        Resolve:
          $ref: ./examples/SmartGroups_History.json
components:
  parameters:
    alertId:
      description: Unique ID of an alert instance.
      in: path
      name: alertId
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    alertRule:
      description: Filter by specific alert rule.  Default value is to select all.
      in: query
      name: alertRule
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    alertState:
      description: Filter by state of the alert instance. Default value is to select all.
      in: query
      name: alertState
      required: false
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        type: string
      x-ms-enum:
        modelAsString: true
        name: AlertState
      x-ms-parameter-location: method
    alertsSortBy:
      description: >-
        Sort the query results by input field,  Default value is
        'lastModifiedDateTime'.
      in: query
      name: sortBy
      required: false
      schema:
        enum:
          - name
          - severity
          - alertState
          - monitorCondition
          - targetResource
          - targetResourceName
          - targetResourceGroup
          - targetResourceType
          - startDateTime
          - lastModifiedDateTime
        type: string
      x-ms-enum:
        modelAsString: true
        name: AlertsSortByFields
      x-ms-parameter-location: method
    alertsSummaryGroupBy:
      description: >-
        This parameter allows the result set to be grouped by input fields. For
        example, groupby=severity,alertstate.
      in: query
      name: groupby
      required: true
      schema:
        enum:
          - severity
          - alertState
          - monitorCondition
          - monitorService
          - signalType
          - alertRule
        type: string
      x-ms-enum:
        modelAsString: true
        name: AlertsSummaryGroupByFields
      x-ms-parameter-location: method
    api-version:
      description: API version.
      in: query
      name: api-version
      required: true
      schema:
        enum:
          - '2018-05-05'
        type: string
      x-ms-enum:
        modelAsString: true
        name: api-version
    customTimeRange:
      description: >-
        Filter by custom time range in the format <start-time>/<end-time>  where
        time is in (ISO-8601 format)'. Permissible values is within 30 days
        from  query time. Either timeRange or customTimeRange could be used but
        not both. Default is none.
      in: query
      name: customTimeRange
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    includeContext:
      description: >-
        Include context which has contextual data specific to the monitor
        service. Default value is false'
      in: query
      name: includeContext
      required: false
      schema:
        type: boolean
      x-ms-parameter-location: method
    includeEgressConfig:
      description: >-
        Include egress config which would be used for displaying the content in
        portal.  Default value is 'false'.
      in: query
      name: includeEgressConfig
      required: false
      schema:
        type: boolean
      x-ms-parameter-location: method
    includeSmartGroupsCount:
      description: >-
        Include count of the SmartGroups as part of the summary. Default value
        is 'false'.
      in: query
      name: includeSmartGroupsCount
      required: false
      schema:
        type: boolean
      x-ms-parameter-location: method
    monitorCondition:
      description: >-
        Filter by monitor condition which is either 'Fired' or 'Resolved'.
        Default value is to select all.
      in: query
      name: monitorCondition
      required: false
      schema:
        enum:
          - Fired
          - Resolved
        type: string
      x-ms-enum:
        modelAsString: true
        name: MonitorCondition
      x-ms-parameter-location: method
    monitorService:
      description: >-
        Filter by monitor service which generates the alert instance. Default
        value is select all.
      in: query
      name: monitorService
      required: false
      schema:
        enum:
          - Application Insights
          - ActivityLog Administrative
          - ActivityLog Security
          - ActivityLog Recommendation
          - ActivityLog Policy
          - ActivityLog Autoscale
          - Log Analytics
          - Nagios
          - Platform
          - SCOM
          - ServiceHealth
          - SmartDetector
          - VM Insights
          - Zabbix
        type: string
      x-ms-enum:
        modelAsString: true
        name: MonitorService
      x-ms-parameter-location: method
    newState:
      description: New state of the alert.
      in: query
      name: newState
      required: true
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        type: string
      x-ms-enum:
        modelAsString: true
        name: AlertState
      x-ms-parameter-location: method
    pageCount:
      description: >-
        Determines number of alerts returned per page in response. Permissible
        value is between 1 to 250. When the "includeContent"  filter is
        selected, maximum value allowed is 25. Default value is 25.
      in: query
      name: pageCount
      required: false
      schema:
        type: integer
      x-ms-parameter-location: method
    select:
      description: >-
        This filter allows to selection of the fields(comma separated) which
        would  be part of the essential section. This would allow to project
        only the  required fields rather than getting entire content.  Default
        is to fetch all the fields in the essentials section.
      in: query
      name: select
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    severity:
      description: Filter by severity.  Default value is select all.
      in: query
      name: severity
      required: false
      schema:
        enum:
          - Sev0
          - Sev1
          - Sev2
          - Sev3
          - Sev4
        type: string
      x-ms-enum:
        modelAsString: true
        name: Severity
      x-ms-parameter-location: method
    smartGroupId:
      description: 'Smart group unique id. '
      in: path
      name: smartGroupId
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    smartGroupIdFilter:
      description: Filter the alerts list by the Smart Group Id. Default value is none.
      in: query
      name: smartGroupId
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    smartGroupState:
      description: Filter by state of the smart group. Default value is to select all.
      in: query
      name: smartGroupState
      required: false
      schema:
        enum:
          - New
          - Acknowledged
          - Closed
        type: string
      x-ms-enum:
        modelAsString: true
        name: AlertState
      x-ms-parameter-location: method
    smartGroupsSortBy:
      description: >-
        Sort the query results by input field. Default value is sort by
        'lastModifiedDateTime'.
      in: query
      name: sortBy
      required: false
      schema:
        enum:
          - alertsCount
          - state
          - severity
          - startDateTime
          - lastModifiedDateTime
        type: string
      x-ms-enum:
        modelAsString: true
        name: SmartGroupsSortByFields
      x-ms-parameter-location: method
    sortOrder:
      description: >-
        Sort the query results order in either ascending or descending.  Default
        value is 'desc' for time fields and 'asc' for others.
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
          - asc
          - desc
        type: string
      x-ms-parameter-location: method
    subscriptionId:
      description: >-
        Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    targetResource:
      description: >-
        Filter by target resource( which is full ARM ID) Default value is select
        all.
      in: query
      name: targetResource
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    targetResourceGroup:
      description: Filter by target resource group name. Default value is select all.
      in: query
      name: targetResourceGroup
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    targetResourceType:
      description: Filter by target resource type. Default value is select all.
      in: query
      name: targetResourceType
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    timeRange:
      description: Filter by time range by below listed values. Default value is 1 day.
      in: query
      name: timeRange
      required: false
      schema:
        enum:
          - 1h
          - 1d
          - 7d
          - 30d
        type: string
      x-ms-enum:
        modelAsString: true
        name: TimeRange
      x-ms-parameter-location: method
  schemas:
    AlertsManagementErrorResponse:
      description: An error response from the service.
      properties:
        error:
          $ref: '#/components/schemas/errorResponseBody'
      type: object
    Resource:
      description: An azure resource object
      properties:
        id:
          description: Azure resource Id
          readOnly: true
          type: string
        name:
          description: Azure resource name
          readOnly: true
          type: string
        type:
          description: Azure resource type
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    actionStatus:
      description: Action status
      properties:
        isSuppressed:
          description: Value indicating whether alert is suppressed.
          type: boolean
      type: object
    alert:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: An alert created in alert management service.
      properties:
        properties:
          $ref: '#/components/schemas/alertProperties'
      type: object
    alertContext:
      description: >-
        Information specific to the monitor service that gives more contextual
        details about the alert.
      readOnly: true
      type: object
    alertModification:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Alert Modification details
      properties:
        properties:
          $ref: '#/components/schemas/alertModificationProperties'
      type: object
    alertModificationItem:
      description: Alert modification item.
      properties:
        comments:
          description: Modification comments
          type: string
        description:
          description: Description of the modification
          type: string
        modificationEvent:
          description: Reason for the modification
          enum:
            - AlertCreated
            - StateChange
            - MonitorConditionChange
          type: string
          x-ms-enum:
            name: AlertModificationEvent
        modifiedAt:
          description: Modified date and time
          type: string
        modifiedBy:
          description: Modified user details (Principal client name)
          type: string
        newValue:
          description: New value
          type: string
        oldValue:
          description: Old value
          type: string
      type: object
    alertModificationProperties:
      description: Properties of the alert modification item.
      properties:
        alertId:
          description: Unique Id of the alert for which the history is being retrieved
          readOnly: true
          type: string
        modifications:
          description: Modification details
          items:
            $ref: '#/components/schemas/alertModificationItem'
          type: array
      type: object
    alertProperties:
      description: Alert property bag
      properties:
        context:
          $ref: '#/components/schemas/alertContext'
        egressConfig:
          $ref: '#/components/schemas/egressConfig'
        essentials:
          $ref: '#/components/schemas/essentials'
      type: object
    alertsList:
      description: List the alerts.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: List of alerts
          items:
            $ref: '#/components/schemas/alert'
          type: array
      type: object
    alertsSummary:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Summary of alerts based on the input filters and 'groupby' parameters.
      properties:
        properties:
          $ref: '#/components/schemas/alertsSummaryGroup'
      type: object
    alertsSummaryGroup:
      description: Group the result set.
      properties:
        groupedby:
          description: Name of the field aggregated
          type: string
        smartGroupsCount:
          description: Total count of the smart groups.
          type: integer
        total:
          description: Total count of the result set.
          type: integer
        values:
          description: List of the items
          items:
            $ref: '#/components/schemas/alertsSummaryGroupItem'
          type: array
      type: object
    alertsSummaryGroupItem:
      description: Alerts summary group item
      properties:
        count:
          description: Count of the aggregated field
          type: integer
        groupedby:
          description: Name of the field aggregated
          type: string
        name:
          description: Value of the aggregated field
          type: string
        values:
          description: List of the items
          items:
            $ref: '#/components/schemas/alertsSummaryGroupItem'
          type: array
      type: object
    egressConfig:
      description: Config which would be used for displaying the data in portal.
      readOnly: true
      type: object
    errorResponseBody:
      description: Details of error response.
      properties:
        code:
          description: 'Error code, intended to be consumed programmatically.'
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/errorResponseBody'
          type: array
        message:
          description: 'Description of the error, intended for display in user interface.'
          type: string
        target:
          description: 'Target of the particular error, for example name of the property.'
          type: string
      type: object
    essentials:
      description: >-
        This object contains consistent fields across different monitor
        services.
      properties:
        actionStatus:
          $ref: '#/components/schemas/actionStatus'
        alertRule:
          description: >-
            Rule(monitor) which fired alert instance. Depending on the monitor
            service,  this would be ARM id or name of the rule.
          readOnly: true
          type: string
        alertState:
          description: 'Alert object state, which can be modified by the user.'
          enum:
            - New
            - Acknowledged
            - Closed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: AlertState
        description:
          description: Alert description.
          type: string
        lastModifiedDateTime:
          description: Last modification time(ISO-8601 format) of alert instance.
          format: date-time
          readOnly: true
          type: string
        lastModifiedUserName:
          description: >-
            User who last modified the alert, in case of monitor service updates
            user would be 'system', otherwise name of the user.
          readOnly: true
          type: string
        monitorCondition:
          description: >-
            Can be 'Fired' or 'Resolved', which represents whether the
            underlying conditions have crossed the defined alert rule
            thresholds.
          enum:
            - Fired
            - Resolved
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: MonitorCondition
        monitorConditionResolvedDateTime:
          description: >-
            Resolved time(ISO-8601 format) of alert instance. This will be
            updated when monitor service resolves the alert instance because the
            rule condition is no longer met.
          format: date-time
          readOnly: true
          type: string
        monitorService:
          description: Monitor service on which the rule(monitor) is set.
          enum:
            - Application Insights
            - ActivityLog Administrative
            - ActivityLog Security
            - ActivityLog Recommendation
            - ActivityLog Policy
            - ActivityLog Autoscale
            - Log Analytics
            - Nagios
            - Platform
            - SCOM
            - ServiceHealth
            - SmartDetector
            - VM Insights
            - Zabbix
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: MonitorService
        severity:
          description: Severity of alert Sev0 being highest and Sev4 being lowest.
          enum:
            - Sev0
            - Sev1
            - Sev2
            - Sev3
            - Sev4
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Severity
        signalType:
          description: >-
            The type of signal the alert is based on, which could be metrics,
            logs or activity logs.
          enum:
            - Metric
            - Log
            - Unknown
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SignalType
        smartGroupId:
          description: Unique Id of the smart group
          readOnly: true
          type: string
        smartGroupingReason:
          description: >-
            Verbose reason describing the reason why this alert instance is
            added to a smart group
          readOnly: true
          type: string
        sourceCreatedId:
          description: >-
            Unique Id created by monitor service for each alert instance. This
            could be used to track the issue at the monitor service, in case of
            Nagios, Zabbix, SCOM etc.
          readOnly: true
          type: string
        startDateTime:
          description: Creation time(ISO-8601 format) of alert instance.
          format: date-time
          readOnly: true
          type: string
        targetResource:
          description: 'Target ARM resource, on which alert got created.'
          type: string
        targetResourceGroup:
          description: 'Resource group of target ARM resource, on which alert got created.'
          type: string
        targetResourceName:
          description: 'Name of the target ARM resource name, on which alert got created.'
          type: string
        targetResourceType:
          description: 'Resource type of target ARM resource, on which alert got created.'
          type: string
      type: object
    operation:
      description: Operation provided by provider
      properties:
        display:
          description: Properties of the operation
          properties:
            description:
              description: Description of the operation
              type: string
            operation:
              description: Operation name
              type: string
            provider:
              description: Provider name
              type: string
            resource:
              description: Resource name
              type: string
          type: object
        name:
          description: Name of the operation
          type: string
      type: object
    operationsList:
      description: Lists the operations available in the AlertsManagement RP.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: Array of operations
          items:
            $ref: '#/components/schemas/operation'
          type: array
      required:
        - value
      type: object
    smartGroup:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Set of related alerts grouped together smartly by AMS.
      properties:
        properties:
          $ref: '#/components/schemas/smartGroupProperties'
          x-ms-client-flatten: true
      type: object
    smartGroupAggregatedProperty:
      description: Aggregated property of each type
      properties:
        count:
          description: Total number of items of type.
          type: integer
        name:
          description: Name of the type.
          type: string
      type: object
    smartGroupModification:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Alert Modification details
      properties:
        properties:
          $ref: '#/components/schemas/smartGroupModificationProperties'
      type: object
    smartGroupModificationItem:
      description: smartGroup modification item.
      properties:
        comments:
          description: Modification comments
          type: string
        description:
          description: Description of the modification
          type: string
        modificationEvent:
          description: Reason for the modification
          enum:
            - SmartGroupCreated
            - StateChange
            - AlertAdded
            - AlertRemoved
          type: string
          x-ms-enum:
            name: SmartGroupModificationEvent
        modifiedAt:
          description: Modified date and time
          type: string
        modifiedBy:
          description: Modified user details (Principal client name)
          type: string
        newValue:
          description: New value
          type: string
        oldValue:
          description: Old value
          type: string
      type: object
    smartGroupModificationProperties:
      description: Properties of the smartGroup modification item.
      properties:
        modifications:
          description: Modification details
          items:
            $ref: '#/components/schemas/smartGroupModificationItem'
          type: array
        nextLink:
          description: URL to fetch the next set of results.
          type: string
        smartGroupId:
          description: Unique Id of the smartGroup for which the history is being retrieved
          readOnly: true
          type: string
      type: object
    smartGroupProperties:
      description: Properties of smart group.
      properties:
        alertSeverities:
          description: Summary of alertSeverities in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        alertStates:
          description: Summary of alertStates in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        alertsCount:
          description: Total number of alerts in smart group
          type: integer
        lastModifiedDateTime:
          description: Last updated time of smart group. Date-Time in ISO-8601 format.
          format: date-time
          readOnly: true
          type: string
        lastModifiedUserName:
          description: Last modified by user name.
          readOnly: true
          type: string
        monitorConditions:
          description: Summary of monitorConditions in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        monitorServices:
          description: Summary of monitorServices in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        nextLink:
          description: >-
            The URI to fetch the next page of alerts. Call ListNext() with this
            URI to fetch the next page alerts.
          type: string
        resourceGroups:
          description: Summary of target resource groups in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        resourceTypes:
          description: Summary of target resource types in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        resources:
          description: Summary of target resources in the smart group
          items:
            $ref: '#/components/schemas/smartGroupAggregatedProperty'
          type: array
        severity:
          description: >-
            Severity of smart group is the highest(Sev0 >... > Sev4) severity of
            all the alerts in the group.
          enum:
            - Sev0
            - Sev1
            - Sev2
            - Sev3
            - Sev4
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Severity
        smartGroupState:
          description: Smart group state
          enum:
            - New
            - Acknowledged
            - Closed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: State
        startDateTime:
          description: Creation time of smart group. Date-Time in ISO-8601 format.
          format: date-time
          readOnly: true
          type: string
      type: object
    smartGroupsList:
      description: List the alerts.
      properties:
        nextLink:
          description: URL to fetch the next set of alerts.
          type: string
        value:
          description: List of alerts
          items:
            $ref: '#/components/schemas/smartGroup'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

