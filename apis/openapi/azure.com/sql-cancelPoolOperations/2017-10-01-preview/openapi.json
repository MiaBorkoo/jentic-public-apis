{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "title": "SqlManagementClient",
    "version": "2017-10-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/cancelPoolOperations.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElasticPoolOperationListResult"
                }
              }
            },
            "description": "The request for getting elastic pool operations has been executed successfully."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Gets a list of operations performed on the elastic pool.",
        "operationId": "ElasticPoolOperations_ListByElasticPool",
        "x-ms-examples": {
          "List the elastic pool management operations": {
            "$ref": "./examples/ListElasticPoolOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations/{operationId}/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The operation identifier.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request for cancel has been executed successfully."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 409 CannotCancelOperation - The management operation is in a state that cannot be cancelled.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Cancels the asynchronous operation on the elastic pool.",
        "operationId": "ElasticPoolOperations_Cancel",
        "x-ms-examples": {
          "Cancel the elastic pool management operation": {
            "$ref": "./examples/CancelElasticPoolOperation.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "BlobAuditingPolicyNameParameter": {
        "description": "The name of the blob auditing policy.",
        "in": "path",
        "name": "blobAuditingPolicyName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ManagedInstanceNameParameter": {
        "description": "The name of the managed instance.",
        "in": "path",
        "name": "managedInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineContainerNameParameter": {
        "description": "The name of the SqlVirtualMachineContainer.",
        "in": "path",
        "name": "sqlVirtualMachineContainerName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineInstanceNameParameter": {
        "description": "The name of the SqlVirtualMachineInstance.",
        "in": "path",
        "name": "sqlVirtualMachineInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "VirtualClusterNameParameter": {
        "description": "The name of the virtual cluster.",
        "in": "path",
        "name": "virtualClusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ElasticPoolOperation": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "A elastic pool operation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ElasticPoolOperationProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ElasticPoolOperationListResult": {
        "description": "The response to a list elastic pool operations request",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of results.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolOperation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolOperationProperties": {
        "description": "The properties of a elastic pool operation.",
        "properties": {
          "description": {
            "description": "The operation description.",
            "readOnly": true,
            "type": "string"
          },
          "elasticPoolName": {
            "description": "The name of the elastic pool the operation is being performed on.",
            "readOnly": true,
            "type": "string"
          },
          "errorCode": {
            "description": "The operation error code.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "errorDescription": {
            "description": "The operation error description.",
            "readOnly": true,
            "type": "string"
          },
          "errorSeverity": {
            "description": "The operation error severity.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "estimatedCompletionTime": {
            "description": "The estimated completion time of the operation.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "isCancellable": {
            "description": "Whether the operation can be cancelled.",
            "readOnly": true,
            "type": "boolean"
          },
          "isUserError": {
            "description": "Whether or not the error is a user error.",
            "readOnly": true,
            "type": "boolean"
          },
          "operation": {
            "description": "The name of operation.",
            "readOnly": true,
            "type": "string"
          },
          "operationFriendlyName": {
            "description": "The friendly name of operation.",
            "readOnly": true,
            "type": "string"
          },
          "percentComplete": {
            "description": "The percentage of the operation completed.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "serverName": {
            "description": "The name of the server.",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "The operation start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The operation state.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": []
    }
  ]
}