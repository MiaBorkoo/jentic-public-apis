{
  "openapi": "3.0.0",
  "info": {
    "description": "The HDInsight Job Client.",
    "title": "HDInsightJobClient",
    "version": "2018-11-01-preview",
    "x-ms-code-generation-settings": {
      "internalConstructors": true
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/hdinsight/data-plane/Microsoft.HDInsight/preview/2018-11-01-preview/job.json"
  },
  "servers": [
    {
      "url": "{endpoint}",
      "variables": {
        "endpoint": {
          "description": "The cluster endpoint, for example https://clustername.azurehdinsight.net.",
          "x-ms-parameter-location": "client",
          "x-ms-skip-url-encoding": true
        }
      }
    }
  ],
  "paths": {
    "/templeton/v1/hive": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSubmissionJsonResponse"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Submits a Hive job to an HDInsight cluster.",
        "operationId": "Job_SubmitHiveJob",
        "requestBody": {
          "content": {
            "application/text": {
              "schema": {
                "format": "file",
                "type": "object"
              }
            }
          },
          "description": "The content of the Hive job request.",
          "required": true
        },
        "x-ms-examples": {
          "Submits a Hive job to an HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_SubmitHiveJob.json"
          }
        }
      }
    },
    "/templeton/v1/jobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          },
          {
            "description": "If showall is set to 'true', the request will return all jobs the user has permission to view, not only the jobs belonging to the user.",
            "in": "query",
            "name": "showall",
            "required": true,
            "schema": {
              "enum": [
                "true"
              ],
              "type": "string"
            }
          },
          {
            "description": "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.",
            "in": "query",
            "name": "fields",
            "required": true,
            "schema": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/JobListJsonObject"
                  },
                  "readOnly": true,
                  "type": "array"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Gets the list of jobs from the specified HDInsight cluster.",
        "operationId": "Job_List",
        "x-ms-examples": {
          "Gets the list of jobs from the specified HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_List.json"
          }
        }
      }
    },
    "/templeton/v1/jobs/{jobId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          },
          {
            "description": "The id of the job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDetailRootJsonObject"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Initiates cancel on given running job in the specified HDInsight.",
        "operationId": "Job_Kill",
        "x-ms-examples": {
          "Initiates cancel on given running job in the specified HDInsight.": {
            "$ref": "./examples/HDI_Job_Kill.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          },
          {
            "description": "The id of the job.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.",
            "in": "query",
            "name": "fields",
            "required": true,
            "schema": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDetailRootJsonObject"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Gets job details from the specified HDInsight cluster.",
        "operationId": "Job_Get",
        "x-ms-examples": {
          "Gets job details from the specified HDInsight cluster": {
            "$ref": "./examples/HDI_Job_Get.json"
          }
        }
      }
    },
    "/templeton/v1/jobs?op=LISTAFTERID": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          },
          {
            "description": "JobId from where to list jobs.",
            "in": "query",
            "name": "jobid",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of jobs to fetch.",
            "in": "query",
            "name": "numrecords",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "If showall is set to 'true', the request will return all jobs the user has permission to view, not only the jobs belonging to the user.",
            "in": "query",
            "name": "showall",
            "required": true,
            "schema": {
              "enum": [
                "true"
              ],
              "type": "string"
            }
          },
          {
            "description": "If fields set to '*', the request will return full details of the job. Currently the value can only be '*'.",
            "in": "query",
            "name": "fields",
            "required": true,
            "schema": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/JobListJsonObject"
                  },
                  "readOnly": true,
                  "type": "array"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Gets numrecords Of Jobs after jobid from the specified HDInsight cluster.",
        "operationId": "Job_ListAfterJobId",
        "x-ms-examples": {
          "Gets numOfJobs after jobId from the specified HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_ListAfterJobId.json"
          }
        }
      }
    },
    "/templeton/v1/mapreduce/jar": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSubmissionJsonResponse"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Submits a MapReduce job to an HDInsight cluster.",
        "operationId": "Job_SubmitMapReduceJob",
        "requestBody": {
          "$ref": "#/components/requestBodies/Job_SubmitMapReduceJobContent"
        },
        "x-ms-examples": {
          "Submits a MapReduce job to an HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_SubmitMapReduceJob.json"
          }
        }
      }
    },
    "/templeton/v1/mapreduce/streaming": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSubmissionJsonResponse"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Submits a MapReduce streaming job to an HDInsight cluster.",
        "operationId": "Job_SubmitMapReduceStreamingJob",
        "requestBody": {
          "$ref": "#/components/requestBodies/Job_SubmitMapReduceJobContent"
        },
        "x-ms-examples": {
          "Submits a MapReduce streaming job to an HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_SubmitMapReduceStreamingJob.json"
          }
        }
      }
    },
    "/templeton/v1/pig": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSubmissionJsonResponse"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Submits a Pig job to an HDInsight cluster.",
        "operationId": "Job_SubmitPigJob",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "format": "file",
                "type": "object"
              }
            }
          },
          "description": "The content of the Pig job request.",
          "required": true
        },
        "x-ms-examples": {
          "Submits a Pig job to an HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_SubmitPigJob.json"
          }
        }
      }
    },
    "/templeton/v1/sqoop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/UserNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobSubmissionJsonResponse"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Submits a Sqoop job to an HDInsight cluster.",
        "operationId": "Job_SubmitSqoopJob",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "format": "file",
                "type": "object"
              }
            }
          },
          "description": "The content of the Sqoop job request.",
          "required": true
        },
        "x-ms-examples": {
          "Submits a Sqoop job to an HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_SubmitSqoopJob.json"
          }
        }
      }
    },
    "/ws/v1/cluster/apps/{appId}/state": {
      "get": {
        "parameters": [
          {
            "description": "The id of the job.",
            "in": "path",
            "name": "appId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppState"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobOperationsErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Job"
        ],
        "description": "Gets application state from the specified HDInsight cluster.",
        "operationId": "Job_GetAppState",
        "x-ms-examples": {
          "Gets application state from the specified HDInsight cluster.": {
            "$ref": "./examples/HDI_Job_GetAppState.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "UserNameParameter": {
        "description": "The user name used for running job.",
        "in": "query",
        "name": "user.name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "endpointParameter": {
        "description": "The cluster endpoint, for example https://clustername.azurehdinsight.net.",
        "x-ms-parameter-location": "client",
        "x-ms-skip-url-encoding": true
      }
    },
    "requestBodies": {
      "Job_SubmitMapReduceJobContent": {
        "content": {
          "text/plain": {
            "schema": {
              "format": "file",
              "type": "object"
            }
          }
        },
        "description": "The content of the MapReduce job request.",
        "required": true
      }
    },
    "schemas": {
      "AppState": {
        "description": "The State of the application.",
        "properties": {
          "state": {
            "description": "The State of the application.",
            "enum": [
              "NEW",
              "NEW_SAVING",
              "SUBMITTED",
              "ACCEPTED",
              "RUNNING",
              "FINISHED",
              "FINISHING",
              "FAILED",
              "KILLED"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ApplicationState"
            }
          }
        },
        "type": "object"
      },
      "JobACLs": {
        "description": "The object containing the job ACLs."
      },
      "JobDetailRootJsonObject": {
        "description": "The object containing the job details.",
        "properties": {
          "callback": {
            "description": "The callback URL, if any.",
            "type": "object"
          },
          "completed": {
            "description": "The string representing completed status, for example 'done'.",
            "type": "string"
          },
          "exitValue": {
            "description": "The job's exit value.",
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "description": "The job ID.",
            "type": "string"
          },
          "msg": {
            "description": "The message returned.",
            "type": "object"
          },
          "parentId": {
            "description": "The parent job ID.",
            "type": "string"
          },
          "percentComplete": {
            "description": "The job completion percentage, for example '75% complete'.",
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile",
            "description": "The object containing the job profile information."
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "The object containing the job status information."
          },
          "user": {
            "description": "The user name of the job creator.",
            "type": "string"
          },
          "userargs": {
            "$ref": "#/components/schemas/Userargs",
            "description": "The arguments passed in by the user."
          }
        },
        "type": "object"
      },
      "JobID": {
        "description": "The object with the Job ID.",
        "properties": {
          "id": {
            "description": "The job number.",
            "format": "int64",
            "type": "integer"
          },
          "jtIdentifier": {
            "description": "The jobTracker identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobListJsonObject": {
        "description": "The List Job operation response.",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/JobDetailRootJsonObject",
            "description": "The detail of the job."
          },
          "id": {
            "description": "The Id of the job.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobOperationsErrorResponse": {
        "description": "Describes the format of Error response.",
        "properties": {
          "error": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobSubmissionJsonResponse": {
        "description": "The job submission json response.",
        "properties": {
          "id": {
            "description": "The Id of the created job.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Profile": {
        "description": "The object containing the job profile information.",
        "properties": {
          "jobFile": {
            "description": "The job configuration file.",
            "type": "string"
          },
          "jobID": {
            "$ref": "#/components/schemas/JobID",
            "description": "The ID of the job."
          },
          "jobId": {
            "description": "The full ID of the job.",
            "type": "string"
          },
          "jobName": {
            "description": "The user-specified job name.",
            "type": "string"
          },
          "queueName": {
            "description": "The name of the queue to which the job is submitted.",
            "type": "string"
          },
          "url": {
            "description": "The link to the web-ui for details of the job.",
            "type": "string"
          },
          "user": {
            "description": "The userid of the person who submitted the job.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Status": {
        "description": "Gets or sets the object containing the job status information.",
        "properties": {
          "cleanupProgress": {
            "description": "The progress made on the cleanup.",
            "format": "double",
            "type": "number"
          },
          "failureInfo": {
            "description": "The information about any failures that have occurred.",
            "type": "string"
          },
          "finishTime": {
            "description": "The time at which the job completed. It is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.",
            "format": "int64",
            "type": "integer"
          },
          "historyFile": {
            "description": "The history file of the job.",
            "type": "string"
          },
          "jobACLs": {
            "$ref": "#/components/schemas/JobACLs",
            "description": "The ACLs of the job."
          },
          "jobComplete": {
            "description": "Whether or not the job has completed.",
            "type": "boolean"
          },
          "jobFile": {
            "description": "The job configuration file.",
            "type": "string"
          },
          "jobID": {
            "$ref": "#/components/schemas/JobID",
            "description": "The ID of the job."
          },
          "jobId": {
            "description": "The full ID of the job.",
            "type": "string"
          },
          "jobName": {
            "description": "The user-specified job name.",
            "type": "string"
          },
          "jobPriority": {
            "description": "The priority of the job.",
            "type": "string"
          },
          "mapProgress": {
            "description": "The progress made on the maps.",
            "format": "double",
            "type": "number"
          },
          "neededMem": {
            "description": "The amount of memory needed for the job.",
            "format": "int64",
            "type": "integer"
          },
          "numReservedSlots": {
            "description": "The number of slots reserved.",
            "format": "int32",
            "type": "integer"
          },
          "numUsedSlots": {
            "description": "The number of slots used for the job.",
            "format": "int32",
            "type": "integer"
          },
          "priority": {
            "description": "The priority of the job.",
            "type": "string"
          },
          "queue": {
            "description": "The job queue name.",
            "type": "string"
          },
          "reduceProgress": {
            "description": "The progress made on the reduces.",
            "format": "double",
            "type": "number"
          },
          "reservedMem": {
            "description": "The amount of memory reserved for the job.",
            "format": "int64",
            "type": "integer"
          },
          "retired": {
            "description": "Whether or not the job has been retired. ",
            "type": "boolean"
          },
          "runState": {
            "description": "The current state of the job.",
            "format": "int32",
            "type": "integer"
          },
          "schedulingInfo": {
            "description": "The information about the scheduling of the job.",
            "type": "string"
          },
          "setupProgress": {
            "description": "The progress made on the setup.",
            "format": "double",
            "type": "number"
          },
          "startTime": {
            "description": "The time at which the job started. It is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.",
            "format": "int64",
            "type": "integer"
          },
          "state": {
            "description": "The state of the job.",
            "type": "string"
          },
          "trackingUrl": {
            "description": "The link to the web-ui for details of the job.",
            "type": "string"
          },
          "uber": {
            "description": "Whether job running in uber mode.",
            "type": "boolean"
          },
          "usedMem": {
            "description": "The amount of memory used by the job.",
            "format": "int64",
            "type": "integer"
          },
          "username": {
            "description": "The userid of the person who submitted the job.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Userargs": {
        "description": "Gets or sets the object containing the user arguments.",
        "properties": {
          "arg": {
            "description": "The list of args defined by the user.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "callback": {
            "description": "The callback URL, if any.",
            "type": "object"
          },
          "define": {
            "description": "The define properties defined by the user.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "enablelog": {
            "description": "Whether or not the user enabled logs.",
            "type": "string"
          },
          "execute": {
            "description": "The query defined by the user.",
            "type": "string"
          },
          "file": {
            "description": "The query file provided by the user.",
            "type": "object"
          },
          "files": {
            "description": "The files defined by the user.",
            "type": "object"
          },
          "jar": {
            "description": "The JAR file provided by the user.",
            "type": "string"
          },
          "statusdir": {
            "description": "The status directory defined by the user.",
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}