{
  "openapi": "3.0.0",
  "info": {
    "description": "The Admin Subscriptions Management Client.",
    "title": "SubscriptionsManagementClient",
    "version": "2015-11-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azsadmin/resource-manager/subscriptions/Microsoft.Subscriptions.Admin/preview/2015-11-01/Manifest.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests": {
      "get": {
        "parameters": [
          {
            "$ref": "Subscriptions.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManifestList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Subscriptions.json#/definitions/Error"
                }
              }
            },
            "description": "Unexpected Error"
          }
        },
        "tags": [
          "Manifests"
        ],
        "description": "Get a list of all manifests.",
        "operationId": "Manifests_List",
        "x-ms-examples": {
          "Get a list of all manifests.": {
            "$ref": "./examples/Manifest/List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscriptions.Admin/manifests/{manifestName}": {
      "get": {
        "parameters": [
          {
            "$ref": "Subscriptions.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Subscriptions.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ManifestParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manifest"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Subscriptions.json#/definitions/Error"
                }
              }
            },
            "description": "Unexpected Error"
          }
        },
        "tags": [
          "Manifests"
        ],
        "description": "Get the specified manifest.",
        "operationId": "Manifests_Get",
        "x-ms-examples": {
          "Get the specified manifest.": {
            "$ref": "./examples/Manifest/Get.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ManifestParameter": {
        "description": "The manifest name.",
        "in": "path",
        "name": "manifestName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ApiProfile": {
        "description": "Represents the API profile.",
        "properties": {
          "apiVersion": {
            "description": "The API version.",
            "type": "string"
          },
          "profileVersion": {
            "description": "The profile version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiProfileList": {
        "description": "List of the API profiles.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the API profiles.",
            "items": {
              "$ref": "#/components/schemas/ApiProfile"
            },
            "type": "array",
            "x-ms-identifiers": [
              "apiVersion",
              "profileVersion"
            ]
          }
        },
        "type": "object"
      },
      "AuthorizationActionMapping": {
        "description": "The linked resource access checks.",
        "properties": {
          "desired": {
            "description": "The desired action name.",
            "type": "string"
          },
          "original": {
            "description": "The original action name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationActionMappingList": {
        "description": "List of the read-only actions.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the read-only actions.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationActionMapping"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "type": "object"
      },
      "AzureResourceHydrationAccount": {
        "description": "The API versions supported by the endpoint.",
        "properties": {
          "accountName": {
            "description": "The account name.",
            "type": "string"
          },
          "encryptedKey": {
            "description": "The encrypted key.",
            "type": "string"
          },
          "maxChildResourceConsistencyJobLimit": {
            "description": "The next child resource consistency job limit.",
            "format": "int32",
            "type": "integer"
          },
          "subscriptionId": {
            "description": "The subscription identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureResourceHydrationAccountList": {
        "description": "List of the resource hydration accounts.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the resource hydration accounts.",
            "items": {
              "$ref": "#/components/schemas/AzureResourceHydrationAccount"
            },
            "type": "array",
            "x-ms-identifiers": [
              "accountName"
            ]
          }
        },
        "type": "object"
      },
      "ExtensionCollectionDefinition": {
        "description": "The manifest extension collection definition.",
        "properties": {
          "extensions": {
            "$ref": "#/components/schemas/ExtensionList",
            "description": "The extensions."
          },
          "version": {
            "description": "The version of the format a.b[.c[.d]]. see System.Version documentation for more details.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExtensionDefinition": {
        "description": "The data contract for specifying extensions in resource provider manifests.",
        "properties": {
          "name": {
            "description": "The name.",
            "type": "string"
          },
          "obsoleteBundlesBitmask": {
            "description": "The obsolete bundles bitmask.",
            "format": "int32",
            "type": "integer"
          },
          "properties": {
            "$ref": "#/components/schemas/ExtensionPropertiesDefinition",
            "description": "The extension properties."
          },
          "resourceAccess": {
            "$ref": "#/components/schemas/ResourceAccessList",
            "description": "The resource access."
          },
          "uri": {
            "description": "The Uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExtensionList": {
        "description": "List of the extensions.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the extensions.",
            "items": {
              "$ref": "#/components/schemas/ExtensionDefinition"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "ExtensionPropertiesDefinition": {
        "description": "The extension properties definition.",
        "properties": {
          "quotaCreateBladeName": {
            "description": "The quota create blade.",
            "type": "string"
          },
          "resourceProviderDashboardBladeName": {
            "description": "The resource provider dashboard blade.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FanoutLinkedNotificationRule": {
        "description": "The fan-out linked notification rule.",
        "properties": {
          "actions": {
            "description": "The list of actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "endpoints": {
            "$ref": "#/components/schemas/ResourceProviderEndpointList",
            "description": "The list of endpoint uris."
          }
        },
        "type": "object"
      },
      "FanoutLinkedNotificationRuleList": {
        "description": "List of the linked notification rules.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the linked notification rules.",
            "items": {
              "$ref": "#/components/schemas/FanoutLinkedNotificationRule"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "type": "object"
      },
      "LinkedAccessCheck": {
        "description": "The linked resource access checks.",
        "properties": {
          "actionName": {
            "description": "The action name.",
            "type": "string"
          },
          "linkedAction": {
            "description": "The linked action.",
            "type": "string"
          },
          "linkedActionVerb": {
            "description": "The linked action verb.",
            "type": "string"
          },
          "linkedProperty": {
            "description": "The linked property.",
            "type": "string"
          },
          "linkedType": {
            "description": "The linked type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LinkedAccessCheckList": {
        "description": "List of the linked access checks.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the linked access checks.",
            "items": {
              "$ref": "#/components/schemas/LinkedAccessCheck"
            },
            "type": "array",
            "x-ms-identifiers": [
              "actionName",
              "linkedType"
            ]
          }
        },
        "type": "object"
      },
      "LinkedAction": {
        "description": "The resource type linked action.",
        "enum": [
          "NotSpecified",
          "Blocked",
          "Validate",
          "Enabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "LinkedAction",
          "values": [
            {
              "description": "The action is not specified.",
              "name": "NotSpecified",
              "value": "NotSpecified"
            },
            {
              "description": "The operation is blocked.",
              "name": "Blocked",
              "value": "Blocked"
            },
            {
              "description": "The operation must be validated.",
              "name": "Validate",
              "value": "Validate"
            },
            {
              "description": "The operation must be Enabled.",
              "name": "Enabled",
              "value": "Enabled"
            }
          ]
        }
      },
      "LinkedNotificationRule": {
        "description": "The linked notification rule.",
        "properties": {
          "actions": {
            "description": "List of actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LinkedNotificationRuleList": {
        "description": "List of the linked notification rules.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the linked notification rules.",
            "items": {
              "$ref": "#/components/schemas/LinkedNotificationRule"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "type": "object"
      },
      "LinkedOperation": {
        "description": "The linked operation.",
        "enum": [
          "None",
          "CrossResourceGroupResourceMove",
          "CrossSubscriptionResourceMove"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "LinkedOperation",
          "values": [
            {
              "description": "The operation is none.",
              "name": "None",
              "value": "None"
            },
            {
              "description": "Move resources between resource groups within the same subscription.",
              "name": "CrossResourceGroupResourceMove",
              "value": "CrossResourceGroupResourceMove"
            },
            {
              "description": "Move resources across subscriptions.",
              "name": "CrossSubscriptionResourceMove",
              "value": "CrossSubscriptionResourceMove"
            }
          ]
        }
      },
      "LinkedOperationRule": {
        "description": "The linked resource access checks.",
        "properties": {
          "dependsOnTypes": {
            "description": "The list of resource types this rule depends on.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "linkedAction": {
            "$ref": "#/components/schemas/LinkedAction",
            "description": "The linked action."
          },
          "linkedOperation": {
            "$ref": "#/components/schemas/LinkedOperation",
            "description": "The linked operation."
          }
        },
        "type": "object"
      },
      "LinkedOperationRuleList": {
        "description": "List of the linked operation rules.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the linked operation rules.",
            "items": {
              "$ref": "#/components/schemas/LinkedOperationRule"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "type": "object"
      },
      "Manifest": {
        "description": "The manifest.",
        "properties": {
          "alwaysRoutable": {
            "description": "A value indicating whether the manifest is always routable by all subscriptions.",
            "type": "boolean"
          },
          "displayName": {
            "description": "The display name.",
            "type": "string"
          },
          "enabled": {
            "description": "A value indicating whether this resource provider is enabled.",
            "type": "boolean"
          },
          "extensionCollection": {
            "$ref": "#/components/schemas/ExtensionCollectionDefinition",
            "description": "The extensions."
          },
          "linkedNotificationRules": {
            "$ref": "#/components/schemas/FanoutLinkedNotificationRuleList",
            "description": "The linked notification rules."
          },
          "metadata": {
            "description": "The metadata.",
            "type": "object"
          },
          "name": {
            "description": "The unique identifier of the registration.",
            "type": "string"
          },
          "namespace": {
            "description": "The namespace.",
            "type": "string"
          },
          "providerAuthorization": {
            "$ref": "#/components/schemas/ResourceProviderAuthorization",
            "description": "The resource provider authorization."
          },
          "providerLocation": {
            "description": "The location of the provider.",
            "type": "string"
          },
          "providerType": {
            "$ref": "#/components/schemas/ResourceProviderType",
            "description": "The type of the provider."
          },
          "provisioningState": {
            "$ref": "#/components/schemas/ManifestProvisioningState",
            "description": "The provisioning state."
          },
          "resourceGroupName": {
            "description": "The name of the resource group.",
            "type": "string"
          },
          "resourceHydrationAccounts": {
            "$ref": "#/components/schemas/AzureResourceHydrationAccountList",
            "description": "The resource hydration accounts."
          },
          "resourceLocation": {
            "description": "The location of the resource.",
            "type": "string"
          },
          "resourceTags": {
            "description": "The resource tags.",
            "type": "object"
          },
          "resourceTypes": {
            "$ref": "#/components/schemas/ResourceTypeList",
            "description": "The resource types"
          },
          "routingResourceManagerType": {
            "$ref": "Subscriptions.json#/definitions/ResourceManagerType",
            "description": "The routing resource manager type."
          },
          "subscriptionId": {
            "description": "The subscription ID under which RP is registered.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManifestList": {
        "description": "List of manifests.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of manifests.",
            "items": {
              "$ref": "#/components/schemas/Manifest"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "ManifestProvisioningState": {
        "description": "The provisioning state.",
        "enum": [
          "Accepted",
          "Creating",
          "Deleting",
          "Moving",
          "Failed",
          "Succeeded"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ManifestProvisioningState",
          "values": [
            {
              "description": "The accepted provisioning state.",
              "name": "Accepted",
              "value": "Accepted"
            },
            {
              "description": "The creating provisioning state.",
              "name": "Creating",
              "value": "Creating"
            },
            {
              "description": "The deleting provisioning state.",
              "name": "Deleting",
              "value": "Deleting"
            },
            {
              "description": "The moving provisioning state.",
              "name": "Moving",
              "value": "Moving"
            },
            {
              "description": "The failed provisioning state.",
              "name": "Failed",
              "value": "Failed"
            },
            {
              "description": "The succeeded provisioning state.",
              "name": "Succeeded",
              "value": "Succeeded"
            }
          ]
        }
      },
      "MarketplaceType": {
        "description": "The type of marketplace behavior for the resource type.",
        "enum": [
          "NotSpecified",
          "AddOn"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MarketplaceType",
          "values": [
            {
              "description": "The marketplace type is not specified.",
              "name": "NotSpecified",
              "value": "NotSpecified"
            },
            {
              "description": "The marketplace offer is an add-on to a resource.",
              "name": "AddOn",
              "value": "AddOn"
            }
          ]
        }
      },
      "ResourceAccess": {
        "description": "Extension Client Access Section.",
        "properties": {
          "name": {
            "description": "The name.",
            "type": "string"
          },
          "resource": {
            "description": "The resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceAccessList": {
        "description": "List of the resource access.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the resource access.",
            "items": {
              "$ref": "#/components/schemas/ResourceAccess"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "ResourceDeletionPolicy": {
        "description": "The resource deletion policy.",
        "enum": [
          "NotSpecified",
          "Cascade"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ResourceDeletionPolicy",
          "values": [
            {
              "description": "The resource deletion policy is not specified.",
              "name": "NotSpecified",
              "value": "NotSpecified"
            },
            {
              "description": "The resource deletion policy is cascade.",
              "name": "Cascade",
              "value": "Cascade"
            }
          ]
        }
      },
      "ResourceProviderAuthorization": {
        "description": "The resource provider authorization information.",
        "properties": {
          "applicationId": {
            "description": "The application id of resource provider in AAD.",
            "type": "string"
          },
          "roleDefinitionId": {
            "description": "The role definition identifier against which a role assignment is created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceProviderEndpoint": {
        "description": "The API versions supported by the endpoint.",
        "properties": {
          "apiVersions": {
            "description": "The API versions supported by the endpoint.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "The enabled.",
            "type": "boolean"
          },
          "endpointUri": {
            "description": "The endpoint uri.",
            "type": "string"
          },
          "timeout": {
            "description": "The timeout.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceProviderEndpointList": {
        "description": "List of the resource provider endpoints.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the resource provider endpoints.",
            "items": {
              "$ref": "#/components/schemas/ResourceProviderEndpoint"
            },
            "type": "array",
            "x-ms-identifiers": [
              "endpointUri"
            ]
          }
        },
        "type": "object"
      },
      "ResourceProviderType": {
        "description": "The resource provider type.",
        "enum": [
          "NotSpecified",
          "Internal",
          "External",
          "RegistrationFree",
          "TenantOnly",
          "AlwaysRoutable"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ResourceProviderType",
          "values": [
            {
              "description": "The resource provider type is not specified.",
              "name": "NotSpecified",
              "value": "NotSpecified"
            },
            {
              "description": "The resource provider type is internal.",
              "name": "Internal",
              "value": "Internal"
            },
            {
              "description": "The resource provider type is external. This is used for 3rd party resource providers.",
              "name": "External",
              "value": "External"
            },
            {
              "description": "The resource provider doesn't require subscription registrations.",
              "name": "RegistrationFree",
              "value": "RegistrationFree"
            },
            {
              "description": "The resource provider operates only at tenant level.",
              "name": "TenantOnly",
              "value": "TenantOnly"
            },
            {
              "description": "The resource provider can always be routed to without explicit access via plan.",
              "name": "AlwaysRoutable",
              "value": "AlwaysRoutable"
            }
          ]
        }
      },
      "ResourceType": {
        "description": "The resource type definition.",
        "properties": {
          "allowedUnauthorizedActions": {
            "description": "The allowed unauthorized actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "apiProfiles": {
            "$ref": "#/components/schemas/ApiProfileList",
            "description": "The API profiles."
          },
          "authorizationActionMappings": {
            "$ref": "#/components/schemas/AuthorizationActionMappingList",
            "description": "The read-only actions."
          },
          "endpoints": {
            "$ref": "#/components/schemas/ResourceProviderEndpointList",
            "description": "The resource provider endpoints."
          },
          "inGlobalLocation": {
            "description": "A value indicating whether the resource type is in global location.",
            "type": "boolean"
          },
          "linkedAccessChecks": {
            "$ref": "#/components/schemas/LinkedAccessCheckList",
            "description": "The linked access checks."
          },
          "linkedNotificationRules": {
            "$ref": "#/components/schemas/LinkedNotificationRuleList",
            "description": "The linked notification rules."
          },
          "linkedOperationRules": {
            "$ref": "#/components/schemas/LinkedOperationRuleList",
            "description": "The linked operation rules."
          },
          "marketplaceType": {
            "$ref": "#/components/schemas/MarketplaceType",
            "description": "The resource type behavior in the marketplace."
          },
          "meteredResourceIds": {
            "description": "The metered resource ids.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "The name.",
            "type": "string"
          },
          "resourceDeletionPolicy": {
            "$ref": "#/components/schemas/ResourceDeletionPolicy",
            "description": "The resource deletion policy."
          },
          "routingType": {
            "$ref": "#/components/schemas/RoutingType",
            "description": "The resource routing type."
          }
        },
        "type": "object"
      },
      "ResourceTypeList": {
        "description": "List of the resource types.",
        "properties": {
          "nextLink": {
            "description": "URI to next page.",
            "type": "string"
          },
          "value": {
            "description": "List of the resource types.",
            "items": {
              "$ref": "#/components/schemas/ResourceType"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "RoutingType": {
        "description": "The resource routing type.",
        "enum": [
          "Default",
          "ProxyOnly",
          "HostBased",
          "Extension",
          "Tenant",
          "Fanout",
          "LocationBased"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "RoutingType",
          "values": [
            {
              "description": "The resource routing type is default.",
              "name": "Default",
              "value": "Default"
            },
            {
              "description": "The resource routing type is proxy only.",
              "name": "ProxyOnly",
              "value": "ProxyOnly"
            },
            {
              "description": "The resource routing type is host based.",
              "name": "HostBased",
              "value": "HostBased"
            },
            {
              "description": "The resource routing type is extension.",
              "name": "Extension",
              "value": "Extension"
            },
            {
              "description": "The resource routing type is tenant.",
              "name": "Tenant",
              "value": "Tenant"
            },
            {
              "description": "The resource routing type is fan out.",
              "name": "Fanout",
              "value": "Fanout"
            },
            {
              "description": "The resource routing type is Location based.",
              "name": "LocationBased",
              "value": "LocationBased"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}