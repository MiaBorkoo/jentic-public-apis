openapi: 3.0.0
info:
  description: >-
    The APIs listed in this specification can be used to manage Deployment
    Scripts resource through the Azure Resource Manager.
  title: DeploymentScriptsClient
  version: 2019-10-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deploymentScripts':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptListResult'
          description: OK -- Returns a list of deployment scripts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Lists all deployment scripts for a given subscription.
      operationId: DeploymentScripts_ListBySubscription
      x-ms-examples:
        DeploymentScriptsListBySubscription:
          $ref: ./examples/DeploymentScripts_ListBySubscription.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptListResult'
          description: OK -- Returns a list of deployment scripts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Lists deployments scripts.
      operationId: DeploymentScripts_ListByResourceGroup
      x-ms-examples:
        DeploymentScriptsList:
          $ref: ./examples/DeploymentScripts_ListByResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK -- Deployment script deleted.
        '204':
          description: Deployment script does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: >-
        Deletes a deployment script. When operation completes, status code 200
        returned without content.
      operationId: DeploymentScripts_Delete
      x-ms-examples:
        DeploymentScriptsDelete:
          $ref: ./examples/DeploymentScripts_Delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScript'
          description: OK -- Returns information about the deployment script.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Gets a deployment script with a given name.
      operationId: DeploymentScripts_Get
      x-ms-examples:
        DeploymentScriptsGet:
          $ref: ./examples/DeploymentScripts_Get.json
    patch:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScript'
          description: OK -- Deployment script tags are updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Updates deployment script tags with specified values.
      operationId: DeploymentScripts_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentScriptUpdateParameter'
        description: Deployment script resource with the tags to be updated.
      x-ms-examples:
        DeploymentScriptsUpdate:
          $ref: ./examples/DeploymentScripts_Update.json
    put:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScript'
          description: OK -- Deployment script is updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScript'
          description: Created -- Deployment script created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Creates a deployment script.
      operationId: DeploymentScripts_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeploymentScript'
        description: Deployment script supplied to the operation.
        required: true
      x-ms-examples:
        DeploymentScriptsCreate:
          $ref: ./examples/DeploymentScripts_Create.json
        DeploymentScriptsCreate_MinCreate:
          $ref: ./examples/DeploymentScripts_Min_Create.json
        DeploymentScriptsCreate_UsingCustomACIName:
          $ref: ./examples/DeploymentScripts_Create_Using_Custom_Aci_Name.json
        DeploymentScriptsCreate_UsingExistingStorageAccount:
          $ref: >-
            ./examples/DeploymentScripts_Create_Using_Existing_StorageAccount.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptLogsList'
          description: OK -- Returns deployment script logs if available.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Gets deployment script logs for a given deployment script name.
      operationId: DeploymentScripts_GetLogs
      x-ms-examples:
        DeploymentScriptsGetLogs:
          $ref: ./examples/DeploymentScripts_GetLogs.json
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deploymentScripts/{scriptName}/logs/default':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/ScriptNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - description: >-
            The number of lines to show from the tail of the deployment script
            log. Valid value is a positive number up to 1000. If 'tail' is not
            provided, all available logs are shown up to container instance log
            capacity of 4mb.
          in: query
          name: tail
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptLog'
          description: OK -- Returns deployment script logs if available.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentScriptsError'
          description: Error response describing why the operation failed.
      tags:
        - DeploymentScripts
      description: Gets deployment script logs for a given deployment script name.
      operationId: DeploymentScripts_GetLogsDefault
      x-ms-examples:
        DeploymentScriptsGetLogs:
          $ref: ./examples/DeploymentScripts_GetLogsDefault.json
        DeploymentScriptsGetLogsWithTail:
          $ref: ./examples/DeploymentScripts_GetLogsDefaultWithTail.json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    ResourceGroupNameParameter:
      description: The name of the resource group. The name is case insensitive.
      in: path
      name: resourceGroupName
      required: true
      schema:
        maxLength: 90
        minLength: 1
        pattern: '^[-\w\._\(\)]+$'
        type: string
      x-ms-parameter-location: method
    ScriptNameParameter:
      description: Name of the deployment script.
      in: path
      name: scriptName
      required: true
      schema:
        maxLength: 90
        minLength: 1
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: Subscription Id which forms part of the URI for every service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
  schemas:
    AzureCliScript:
      allOf:
        - $ref: '#/components/schemas/DeploymentScript'
      description: Object model for the Azure CLI script.
      properties:
        properties:
          $ref: '#/components/schemas/AzureCliScriptProperties'
          description: Properties of the Azure CLI script object.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
      x-ms-discriminator-value: AzureCLI
    AzureCliScriptProperties:
      allOf:
        - $ref: '#/components/schemas/DeploymentScriptPropertiesBase'
        - $ref: '#/components/schemas/ScriptConfigurationBase'
      description: Properties of the Azure CLI script object.
      properties:
        azCliVersion:
          description: Azure CLI module version to be used.
          type: string
      required:
        - azCliVersion
      type: object
    AzurePowerShellScript:
      allOf:
        - $ref: '#/components/schemas/DeploymentScript'
      description: Object model for the Azure PowerShell script.
      properties:
        properties:
          $ref: '#/components/schemas/AzurePowerShellScriptProperties'
          description: Properties of the Azure PowerShell script object.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
      x-ms-discriminator-value: AzurePowerShell
    AzurePowerShellScriptProperties:
      allOf:
        - $ref: '#/components/schemas/DeploymentScriptPropertiesBase'
        - $ref: '#/components/schemas/ScriptConfigurationBase'
      description: Properties of the Azure PowerShell script object.
      properties:
        azPowerShellVersion:
          description: Azure PowerShell module version to be used.
          type: string
      required:
        - azPowerShellVersion
      type: object
    AzureResourceBase:
      description: Common properties for all Azure resources.
      properties:
        id:
          description: String Id used to locate any resource on Azure.
          readOnly: true
          type: string
        name:
          description: Name of this resource.
          readOnly: true
          type: string
        type:
          description: Type of this resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ContainerConfiguration:
      description: Settings to customize ACI container instance.
      properties:
        containerGroupName:
          description: >-
            Container group name, if not specified then the name will get
            auto-generated. Not specifying a 'containerGroupName' indicates the
            system to generate a unique name which might end up flagging an
            Azure Policy as non-compliant. Use 'containerGroupName' when you
            have an Azure Policy that expects a specific naming convention or
            when you want to fully control the name. 'containerGroupName'
            property must be between 1 and 63 characters long, must contain only
            lowercase letters, numbers, and dashes and it cannot start or end
            with a dash and consecutive dashes are not allowed. To specify a
            'containerGroupName', add the following object to properties: {
            "containerSettings": { "containerGroupName": "contoso-container" }
            }. If you do not want to specify a 'containerGroupName' then do not
            add 'containerSettings' property.
          maxLength: 63
          minLength: 1
          type: string
      type: object
    DeploymentScript:
      allOf:
        - $ref: '#/components/schemas/AzureResourceBase'
      description: Deployment script object.
      discriminator:
        propertyName: kind
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
        identity:
          $ref: '#/components/schemas/ManagedServiceIdentity'
          description: >-
            Managed identity to be used for this deployment script. Currently,
            only user-assigned MSI is supported.
        kind:
          description: Type of the script.
          enum:
            - AzurePowerShell
            - AzureCLI
          type: string
          x-ms-enum:
            modelAsString: true
            name: ScriptType
        location:
          description: >-
            The location of the ACI and the storage account for the deployment
            script.
          type: string
          x-ms-mutability:
            - read
            - create
        systemData:
          $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/definitions/systemData
          description: The system metadata related to this resource.
          readOnly: true
      required:
        - identity
        - location
        - kind
      type: object
    DeploymentScriptListResult:
      description: List of deployment scripts.
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          readOnly: true
          type: string
        value:
          description: An array of deployment scripts.
          items:
            $ref: '#/components/schemas/DeploymentScript'
          type: array
      type: object
    DeploymentScriptPropertiesBase:
      description: Common properties for the deployment script.
      properties:
        cleanupPreference:
          default: Always
          description: >-
            The clean up preference when the script execution gets in a terminal
            state. Default setting is 'Always'.
          enum:
            - Always
            - OnSuccess
            - OnExpiration
          type: string
          x-ms-enum:
            modelAsString: true
            name: cleanupOptions
        containerSettings:
          $ref: '#/components/schemas/ContainerConfiguration'
          description: Container settings.
          type: object
        outputs:
          additionalProperties:
            description: 'Script output in <name, value> pair.'
            type: object
          description: List of script outputs.
          readOnly: true
          type: object
        provisioningState:
          description: State of the script execution. This only appears in the response.
          enum:
            - Creating
            - ProvisioningResources
            - Running
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ScriptProvisioningState
        status:
          $ref: '#/components/schemas/ScriptStatus'
          description: Contains the results of script execution.
          readOnly: true
          type: object
        storageAccountSettings:
          $ref: '#/components/schemas/StorageAccountConfiguration'
          description: Storage Account settings.
          type: object
      type: object
      x-ms-external: true
    DeploymentScriptUpdateParameter:
      allOf:
        - $ref: '#/components/schemas/AzureResourceBase'
      description: 'Deployment script parameters to be updated. '
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags to be updated.
          type: object
      type: object
    DeploymentScriptsError:
      description: Deployment scripts error response.
      properties:
        error:
          $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse
      type: object
    EnvironmentVariable:
      description: >-
        The environment variable to pass to the script in the container
        instance.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        secureValue:
          description: The value of the secure environment variable.
          type: string
          x-ms-secret: true
        value:
          description: The value of the environment variable.
          type: string
      required:
        - name
      type: object
    LogProperties:
      description: Script log properties.
      properties:
        log:
          description: Script execution logs in text format.
          readOnly: true
          type: string
      type: object
    ManagedServiceIdentity:
      description: Managed identity generic object.
      properties:
        tenantId:
          description: ID of the Azure Active Directory.
          readOnly: true
          type: string
        type:
          description: Type of the managed identity.
          enum:
            - UserAssigned
          type: string
          x-ms-enum:
            modelAsString: true
            name: ManagedServiceIdentityType
        userAssignedIdentities:
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
            description: User-assigned managed identity.
          description: >-
            The list of user-assigned managed identities associated with the
            resource. Key is the Azure resource Id of the managed identity.
          type: object
      type: object
    ScriptConfigurationBase:
      description: >-
        Common configuration settings for both Azure PowerShell and Azure CLI
        scripts.
      properties:
        arguments:
          description: >-
            Command line arguments to pass to the script. Arguments are
            separated by spaces. ex: -Name blue* -Location 'West US 2' 
          type: string
        environmentVariables:
          description: The environment variables to pass over to the script.
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        forceUpdateTag:
          description: >-
            Gets or sets how the deployment script should be forced to execute
            even if the script resource has not changed. Can be current time
            stamp or a GUID.
          type: string
        primaryScriptUri:
          description: Uri for the script. This is the entry point for the external script.
          type: string
        retentionInterval:
          description: >-
            Interval for which the service retains the script resource after it
            reaches a terminal state. Resource will be deleted when this
            duration expires. Duration is based on ISO 8601 pattern (for example
            P1D means one day).
          format: duration
          type: string
        scriptContent:
          description: Script body.
          maxLength: 32000
          type: string
        supportingScriptUris:
          description: Supporting files for the external script.
          items:
            description: Supporting file Uri.
            type: string
          type: array
        timeout:
          default: P1D
          description: >-
            Maximum allowed script execution time specified in ISO 8601 format.
            Default value is P1D
          format: duration
          type: string
      required:
        - retentionInterval
      type: object
      x-ms-external: true
    ScriptLog:
      allOf:
        - $ref: '#/components/schemas/AzureResourceBase'
      description: Script execution log object.
      properties:
        properties:
          $ref: '#/components/schemas/LogProperties'
          x-ms-client-flatten: true
      type: object
    ScriptLogsList:
      description: Deployment script execution logs.
      properties:
        value:
          description: Deployment scripts logs.
          items:
            $ref: '#/components/schemas/ScriptLog'
          type: array
      type: object
    ScriptStatus:
      description: Generic object modeling results of script execution.
      properties:
        containerInstanceId:
          description: ACI resource Id.
          readOnly: true
          type: string
        endTime:
          description: End time of the script execution.
          format: date-time
          readOnly: true
          type: string
        error:
          $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse
          description: Error that is relayed from the script execution.
        expirationTime:
          description: Time the deployment script resource will expire.
          format: date-time
          readOnly: true
          type: string
        startTime:
          description: Start time of the script execution.
          format: date-time
          readOnly: true
          type: string
        storageAccountId:
          description: Storage account resource Id.
          readOnly: true
          type: string
      type: object
    StorageAccountConfiguration:
      description: >-
        Settings to use an existing storage account. Valid storage account kinds
        are: Storage, StorageV2 and FileStorage
      properties:
        storageAccountKey:
          description: The storage account access key.
          type: string
          x-ms-secret: true
        storageAccountName:
          description: The storage account name.
          type: string
      type: object
    UserAssignedIdentity:
      description: User-assigned managed identity.
      properties:
        clientId:
          description: Client App Id associated with this identity.
          readOnly: true
          type: string
        principalId:
          description: Azure Active Directory principal ID associated with this identity.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

