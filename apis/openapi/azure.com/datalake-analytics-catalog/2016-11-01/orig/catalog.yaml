openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Analytics catalog client.
  title: DataLakeAnalyticsCatalogManagementClient
  version: '2016-11-01'
  x-ms-code-generation-settings:
    internalConstructors: true
    useDateTimeOffset: true
servers:
  - url: '{accountName}.{adlaCatalogDnsSuffix}'
    variables:
      accountName:
        default: ''
        description: >-
          The Azure Data Lake Analytics account upon which to execute catalog
          operations.
        x-ms-skip-url-encoding: true
      adlaCatalogDnsSuffix:
        description: >-
          Gets the DNS suffix used as the base for all Azure Data Lake Analytics
          Catalog service requests.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /catalog/usql/acl:
    get:
      parameters:
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclList'
          description: >-
            Successfully retrieved the list of access control list (ACL) entries
            for the Data Lake Analytics catalog.
      tags:
        - Catalog
      description: >-
        Retrieves the list of access control list (ACL) entries for the Data
        Lake Analytics catalog.
      operationId: Catalog_ListAcls
      x-ms-examples:
        Retrieves the list of access control list (ACL) entries for the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListAcls.json
      x-ms-odata: '#/components/schemas/Acl'
      x-ms-pageable:
        nextLinkName: nextLink
  /catalog/usql/databases:
    get:
      parameters:
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlDatabaseList'
          description: Successfully retrieved the list of databases.
      tags:
        - Catalog
      description: Retrieves the list of databases from the Data Lake Analytics catalog.
      operationId: Catalog_ListDatabases
      x-ms-examples:
        Retrieves the list of databases from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListDatabases.json
      x-ms-odata: '#/components/schemas/USqlDatabase'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}':
    get:
      parameters:
        - description: The name of the database.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlDatabase'
          description: Successfully retrieved the details of the specified database.
      tags:
        - Catalog
      description: Retrieves the specified database from the Data Lake Analytics catalog.
      operationId: Catalog_GetDatabase
      x-ms-examples:
        Retrieves the specified database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetDatabase.json
  '/catalog/usql/databases/{databaseName}/acl':
    get:
      parameters:
        - description: The name of the database.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclList'
          description: >-
            Successfully retrieved the list of access control list (ACL) entries
            for the specified database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of access control list (ACL) entries for the database
        from the Data Lake Analytics catalog.
      operationId: Catalog_ListAclsByDatabase
      x-ms-examples:
        Retrieves the list of access control list (ACL) entries for the database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListAclsByDatabase.json
      x-ms-odata: '#/components/schemas/Acl'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/assemblies':
    get:
      parameters:
        - description: The name of the database containing the assembly.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlAssemblyList'
          description: >-
            Successfully retrieved the list of assemblies in the specified
            database.
      tags:
        - Catalog
      description: Retrieves the list of assemblies from the Data Lake Analytics catalog.
      operationId: Catalog_ListAssemblies
      x-ms-examples:
        Retrieves the list of assemblies from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListAssemblies.json
      x-ms-odata: '#/components/schemas/USqlAssembly'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/assemblies/{assemblyName}':
    get:
      parameters:
        - description: The name of the database containing the assembly.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the assembly.
          in: path
          name: assemblyName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlAssembly'
          description: >-
            Successfully retrieved the details of the specified assembly in the
            specified database.
      tags:
        - Catalog
      description: Retrieves the specified assembly from the Data Lake Analytics catalog.
      operationId: Catalog_GetAssembly
      x-ms-examples:
        Retrieves the specified assembly from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetAssembly.json
  '/catalog/usql/databases/{databaseName}/credentials':
    get:
      parameters:
        - description: The name of the database containing the schema.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlCredentialList'
          description: >-
            Successfully retrieved the list of credentials in the specified
            database.
      tags:
        - Catalog
      description: Retrieves the list of credentials from the Data Lake Analytics catalog.
      operationId: Catalog_ListCredentials
      x-ms-examples:
        Retrieves the list of credentials from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListCredentials.json
      x-ms-odata: '#/components/schemas/USqlCredential'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/credentials/{credentialName}':
    get:
      parameters:
        - description: The name of the database containing the schema.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlCredential'
          description: >-
            Successfully retrieved the specified credential (name only) from the
            specified database.
      tags:
        - Catalog
      description: Retrieves the specified credential from the Data Lake Analytics catalog.
      operationId: Catalog_GetCredential
      x-ms-examples:
        Retrieves the specified credential from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetCredential.json
    patch:
      parameters:
        - description: The name of the database containing the credential.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully updated the specified credential's password in the
            specified database
      tags:
        - Catalog
      description: >-
        Modifies the specified credential for use with external data sources in
        the specified database
      operationId: Catalog_UpdateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DataLakeAnalyticsCatalogCredentialUpdateParameters
        description: The parameters required to modify the credential (name and password)
        required: true
      x-ms-examples:
        Modifies the specified credential for use with external data sources in the specified database:
          $ref: ./examples/Catalog_UpdateCredential.json
    post:
      parameters:
        - description: The name of the database containing the credential.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the credential to delete
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - description: >-
            Indicates if the delete should be a cascading delete (which deletes
            all resources dependent on the credential as well as the credential)
            or not. If false will fail if there are any resources relying on the
            credential.
          in: query
          name: cascade
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully deleted the specified credential from the specified
            database.
      tags:
        - Catalog
      description: Deletes the specified credential in the specified database
      operationId: Catalog_DeleteCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DataLakeAnalyticsCatalogCredentialDeleteParameters
        description: >-
          The parameters to delete a credential if the current user is not the
          account owner.
      x-ms-examples:
        Deletes the specified credential in the specified database:
          $ref: ./examples/Catalog_DeleteCredential.json
    put:
      parameters:
        - description: >-
            The name of the database in which to create the credential. Note:
            This is NOT an external database name, but the name of an existing
            U-SQL database that should contain the new credential object.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully created the credential within the specified database.
      tags:
        - Catalog
      description: >-
        Creates the specified credential for use with external data sources in
        the specified database.
      operationId: Catalog_CreateCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DataLakeAnalyticsCatalogCredentialCreateParameters
        description: The parameters required to create the credential (name and password)
        required: true
      x-ms-examples:
        Creates the specified credential for use with external data sources in the specified database:
          $ref: ./examples/Catalog_CreateCredential.json
  '/catalog/usql/databases/{databaseName}/externaldatasources':
    get:
      parameters:
        - description: The name of the database containing the external data sources.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSourceList'
          description: >-
            Successfully retrieved the list of external data sources in the
            specified database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of external data sources from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListExternalDataSources
      x-ms-examples:
        Retrieves the list of external data sources from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListExternalDataSources.json
      x-ms-odata: '#/components/schemas/USqlExternalDataSource'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/externaldatasources/{externalDataSourceName}':
    get:
      parameters:
        - description: The name of the database containing the external data source.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the external data source.
          in: path
          name: externalDataSourceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlExternalDataSource'
          description: >-
            Successfully retrieved details of the specified external data source
            in the specified database.
      tags:
        - Catalog
      description: >-
        Retrieves the specified external data source from the Data Lake
        Analytics catalog.
      operationId: Catalog_GetExternalDataSource
      x-ms-examples:
        Retrieves the specified external data source from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetExternalDataSource.json
  '/catalog/usql/databases/{databaseName}/schemas':
    get:
      parameters:
        - description: The name of the database containing the schema.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSchemaList'
          description: >-
            Successfully retrieved the list of schemas in the specified
            database.
      tags:
        - Catalog
      description: Retrieves the list of schemas from the Data Lake Analytics catalog.
      operationId: Catalog_ListSchemas
      x-ms-examples:
        Retrieves the list of schemas from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListSchemas.json
      x-ms-odata: '#/components/schemas/USqlSchema'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}':
    get:
      parameters:
        - description: The name of the database containing the schema.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSchema'
          description: >-
            Successfully retrieved the details of the specified schema in the
            specified database.
      tags:
        - Catalog
      description: Retrieves the specified schema from the Data Lake Analytics catalog.
      operationId: Catalog_GetSchema
      x-ms-examples:
        Retrieves the specified schema from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetSchema.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/packages':
    get:
      parameters:
        - description: The name of the database containing the packages.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the packages.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlPackageList'
          description: >-
            Successfully retrieved the list of packages in the specified
            database and schema.
      tags:
        - Catalog
      description: Retrieves the list of packages from the Data Lake Analytics catalog.
      operationId: Catalog_ListPackages
      x-ms-examples:
        Retrieves the list of packages from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListPackages.json
      x-ms-odata: '#/components/schemas/USqlPackage'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/packages/{packageName}':
    get:
      parameters:
        - description: The name of the database containing the package.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the package.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the package.
          in: path
          name: packageName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlPackage'
          description: >-
            Successfully retrieved the specified package from the underlying
            database and schema combination
      tags:
        - Catalog
      description: Retrieves the specified package from the Data Lake Analytics catalog.
      operationId: Catalog_GetPackage
      x-ms-examples:
        Retrieves the specified package from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetPackage.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures':
    get:
      parameters:
        - description: The name of the database containing the procedures.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the procedures.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlProcedureList'
          description: >-
            Successfully retrieved the list of procedures in the specified
            database and schema.
      tags:
        - Catalog
      description: Retrieves the list of procedures from the Data Lake Analytics catalog.
      operationId: Catalog_ListProcedures
      x-ms-examples:
        Retrieves the list of procedures from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListProcedures.json
      x-ms-odata: '#/components/schemas/USqlProcedure'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/procedures/{procedureName}':
    get:
      parameters:
        - description: The name of the database containing the procedure.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the procedure.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the procedure.
          in: path
          name: procedureName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlProcedure'
          description: >-
            Successfully retrieved the specified procedure from the underlying
            database and schema combination.
      tags:
        - Catalog
      description: Retrieves the specified procedure from the Data Lake Analytics catalog.
      operationId: Catalog_GetProcedure
      x-ms-examples:
        Retrieves the specified procedure from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetProcedure.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/statistics':
    get:
      parameters:
        - description: The name of the database containing the statistics.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the statistics.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
          description: >-
            Successfully retrieved the list of all table statistics in the
            specified database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the list of all table statistics within the specified schema
        from the Data Lake Analytics catalog.
      operationId: Catalog_ListTableStatisticsByDatabaseAndSchema
      x-ms-examples:
        Retrieves the list of all table statistics within the specified schema from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableStatisticsByDatabaseAndSchema.json
      x-ms-odata: '#/components/schemas/USqlTableStatistics'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables':
    get:
      parameters:
        - description: The name of the database containing the tables.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the tables.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - description: >-
            The basic switch indicates what level of information to return when
            listing tables. When basic is true, only database_name, schema_name,
            table_name and version are returned for each table, otherwise all
            table metadata is returned. By default, it is false. Optional.
          in: query
          name: basic
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableList'
          description: >-
            Successfully retrieved the list of tables in the specified database
            and schema.
      tags:
        - Catalog
      description: Retrieves the list of tables from the Data Lake Analytics catalog.
      operationId: Catalog_ListTables
      x-ms-examples:
        Retrieves the list of tables from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTables.json
      x-ms-odata: '#/components/schemas/USqlTable'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}':
    get:
      parameters:
        - description: The name of the database containing the table.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTable'
          description: >-
            Successfully retrieved the specified table from the underlying
            database and schema combination
      tags:
        - Catalog
      description: Retrieves the specified table from the Data Lake Analytics catalog.
      operationId: Catalog_GetTable
      x-ms-examples:
        Retrieves the specified table from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetTable.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions':
    get:
      parameters:
        - description: The name of the database containing the partitions.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the partitions.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the partitions.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartitionList'
          description: >-
            Successfully retrieved the list of table partitions in the specified
            database, schema, and table.
      tags:
        - Catalog
      description: >-
        Retrieves the list of table partitions from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTablePartitions
      x-ms-examples:
        Retrieves the list of table partitions from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTablePartitions.json
      x-ms-odata: '#/components/schemas/USqlTablePartition'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions/{partitionName}':
    get:
      parameters:
        - description: The name of the database containing the partition.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the partition.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the partition.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: The name of the table partition.
          in: path
          name: partitionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePartition'
          description: >-
            Successfully retrieved the details of the specified table partition
            in the specified database, schema, and table.
      tags:
        - Catalog
      description: >-
        Retrieves the specified table partition from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetTablePartition
      x-ms-examples:
        Retrieves the specified table partition from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetTablePartition.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/partitions/{partitionName}/previewrows':
    get:
      parameters:
        - description: The name of the database containing the partition.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the partition.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the partition.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: The name of the table partition.
          in: path
          name: partitionName
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of preview rows to be retrieved.Rows returned may
            be less than or equal to this number depending on row sizes and
            number of rows in the partition.
          in: query
          name: maxRows
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of columns to be retrieved.
          in: query
          name: maxColumns
          required: false
          schema:
            format: int64
            type: integer
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePreview'
          description: Successfully retrieved preview rows for the specified partition.
      tags:
        - Catalog
      description: Retrieves a preview set of rows in given partition.
      operationId: Catalog_PreviewTablePartition
      x-ms-examples:
        Retrieves a preview set of rows in given partition:
          $ref: ./examples/Catalog_PreviewTablePartition.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/previewrows':
    get:
      parameters:
        - description: The name of the database containing the table.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: >-
            The maximum number of preview rows to be retrieved. Rows returned
            may be less than or equal to this number depending on row sizes and
            number of rows in the table.
          in: query
          name: maxRows
          required: false
          schema:
            format: int64
            type: integer
        - description: The maximum number of columns to be retrieved.
          in: query
          name: maxColumns
          required: false
          schema:
            format: int64
            type: integer
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTablePreview'
          description: Successfully retrieved preview rows for the specified table.
      tags:
        - Catalog
      description: Retrieves a preview set of rows in given table.
      operationId: Catalog_PreviewTable
      x-ms-examples:
        Retrieves a preview set of rows in given table:
          $ref: ./examples/Catalog_PreviewTable.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics':
    get:
      parameters:
        - description: The name of the database containing the statistics.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the statistics.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the statistics.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
          description: >-
            Successfully retrieved the list of table statistics in the specified
            database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the list of table statistics from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTableStatistics
      x-ms-examples:
        Retrieves the list of table statistics from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableStatistics.json
      x-ms-odata: '#/components/schemas/USqlTableStatistics'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/statistics/{statisticsName}':
    get:
      parameters:
        - description: The name of the database containing the statistics.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the statistics.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the statistics.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: The name of the table statistics.
          in: path
          name: statisticsName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatistics'
          description: >-
            Successfully retrieved the details of the specified table statistics
            in the specified database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the specified table statistics from the Data Lake Analytics
        catalog.
      operationId: Catalog_GetTableStatistic
      x-ms-examples:
        Retrieves the specified table statistics from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetTableStatistic.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/tablefragments':
    get:
      parameters:
        - description: The name of the database containing the table fragments.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table fragments.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table containing the table fragments.
          in: path
          name: tableName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableFragmentList'
          description: >-
            Successfully retrieved the list of table fragments in the specified
            database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the list of table fragments from the Data Lake Analytics
        catalog.
      operationId: Catalog_ListTableFragments
      x-ms-examples:
        Retrieves the list of table fragments from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableFragments.json
      x-ms-odata: '#/components/schemas/USqlTableFragment'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes':
    get:
      parameters:
        - description: The name of the database containing the table types.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table types.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableTypeList'
          description: >-
            Successfully retrieved the list of table types in the specified
            database and schema.
      tags:
        - Catalog
      description: Retrieves the list of table types from the Data Lake Analytics catalog.
      operationId: Catalog_ListTableTypes
      x-ms-examples:
        Retrieves the list of table types from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableTypes.json
      x-ms-odata: '#/components/schemas/USqlTableType'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tabletypes/{tableTypeName}':
    get:
      parameters:
        - description: The name of the database containing the table type.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table type.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the table type to retrieve.
          in: path
          name: tableTypeName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableType'
          description: >-
            Successfully retrieved the specified table type from the underlying
            database and schema combination
      tags:
        - Catalog
      description: Retrieves the specified table type from the Data Lake Analytics catalog.
      operationId: Catalog_GetTableType
      x-ms-examples:
        Retrieves the specified table type from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetTableType.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions':
    get:
      parameters:
        - description: The name of the database containing the table valued functions.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table valued functions.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunctionList'
          description: >-
            Successfully retrieved the list of table valued functions in the
            specified database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the list of table valued functions from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListTableValuedFunctions
      x-ms-examples:
        Retrieves the list of table valued functions from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableValuedFunctions.json
      x-ms-odata: '#/components/schemas/USqlTableValuedFunction'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/tablevaluedfunctions/{tableValuedFunctionName}':
    get:
      parameters:
        - description: The name of the database containing the table valued function.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the table valued function.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the tableValuedFunction.
          in: path
          name: tableValuedFunctionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunction'
          description: >-
            Successfully retrieved the details of the specified table valued
            function in the specified database and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the specified table valued function from the Data Lake
        Analytics catalog.
      operationId: Catalog_GetTableValuedFunction
      x-ms-examples:
        Retrieves the specified table valued function from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetTableValuedFunction.json
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/types':
    get:
      parameters:
        - description: The name of the database containing the types.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the types.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTypeList'
          description: >-
            Successfully retrieved the list of types in the specified database
            and schema.
      tags:
        - Catalog
      description: >-
        Retrieves the list of types within the specified database and schema
        from the Data Lake Analytics catalog.
      operationId: Catalog_ListTypes
      x-ms-examples:
        Retrieves the list of types within the specified database and schema from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTypes.json
      x-ms-odata: '#/components/schemas/USqlType'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/views':
    get:
      parameters:
        - description: The name of the database containing the views.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the views.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlViewList'
          description: >-
            Successfully retrieved the list of views in the specified database
            and schema.
      tags:
        - Catalog
      description: Retrieves the list of views from the Data Lake Analytics catalog.
      operationId: Catalog_ListViews
      x-ms-examples:
        Retrieves the list of views from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListViews.json
      x-ms-odata: '#/components/schemas/USqlView'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/schemas/{schemaName}/views/{viewName}':
    get:
      parameters:
        - description: The name of the database containing the view.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the schema containing the view.
          in: path
          name: schemaName
          required: true
          schema:
            type: string
        - description: The name of the view.
          in: path
          name: viewName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlView'
          description: >-
            Successfully retrieved the specified view from the underlying
            database and schema combination
      tags:
        - Catalog
      description: Retrieves the specified view from the Data Lake Analytics catalog.
      operationId: Catalog_GetView
      x-ms-examples:
        Retrieves the specified view from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GetView.json
  '/catalog/usql/databases/{databaseName}/secrets':
    delete:
      parameters:
        - description: The name of the database containing the secret.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted all secrets from the specified database.
      tags:
        - Catalog
      deprecated: true
      description: >-
        Deletes all secrets in the specified database. This is deprecated and
        will be removed in the next release. In the future, please only drop
        individual credentials using DeleteCredential
      operationId: Catalog_DeleteAllSecrets
      x-ms-examples:
        Deletes all secrets in the specified database:
          $ref: ./examples/Catalog_DeleteAllSecrets.json
  '/catalog/usql/databases/{databaseName}/secrets/{secretName}':
    delete:
      parameters:
        - description: The name of the database containing the secret.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the secret to delete
          in: path
          name: secretName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully deleted the specified secret from the specified
            database.
      tags:
        - Catalog
      deprecated: true
      description: >-
        Deletes the specified secret in the specified database. This is
        deprecated and will be removed in the next release. Please use
        DeleteCredential instead.
      operationId: Catalog_DeleteSecret
      x-ms-examples:
        Deletes the specified secret in the specified database:
          $ref: ./examples/Catalog_DeleteSecret.json
    get:
      parameters:
        - description: The name of the database containing the secret.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the secret to get
          in: path
          name: secretName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlSecret'
          description: >-
            Successfully retrieved details of the specified secret in the
            specified database.
      tags:
        - Catalog
      deprecated: true
      description: >-
        Gets the specified secret in the specified database. This is deprecated
        and will be removed in the next release. Please use GetCredential
        instead.
      operationId: Catalog_GetSecret
      x-ms-examples:
        Gets the specified secret in the specified database:
          $ref: ./examples/Catalog_GetSecret.json
    patch:
      parameters:
        - description: The name of the database containing the secret.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the secret.
          in: path
          name: secretName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully updated the details of the specified secret in the
            specified database.
      tags:
        - Catalog
      deprecated: true
      description: >-
        Modifies the specified secret for use with external data sources in the
        specified database. This is deprecated and will be removed in the next
        release. Please use UpdateCredential instead.
      operationId: Catalog_UpdateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
        description: The parameters required to modify the secret (name and password)
        required: true
      x-ms-examples:
        Modifies the specified secret for use with external data sources in the specified database:
          $ref: ./examples/Catalog_UpdateSecret.json
    put:
      parameters:
        - description: The name of the database in which to create the secret.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the secret.
          in: path
          name: secretName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully created the specified secret in the specified database.
      tags:
        - Catalog
      deprecated: true
      description: >-
        Creates the specified secret for use with external data sources in the
        specified database. This is deprecated and will be removed in the next
        release. Please use CreateCredential instead.
      operationId: Catalog_CreateSecret
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters
        description: The parameters required to create the secret (name and password)
        required: true
      x-ms-examples:
        Creates the specified secret for use with external data sources in the specified database:
          $ref: ./examples/Catalog_CreateSecret.json
  '/catalog/usql/databases/{databaseName}/statistics':
    get:
      parameters:
        - description: The name of the database containing the table statistics.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableStatisticsList'
          description: >-
            Successfully retrieved the list of all table statistics in the
            specified database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of all statistics in a database from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListTableStatisticsByDatabase
      x-ms-examples:
        Retrieves the list of all statistics in a database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableStatisticsByDatabase.json
      x-ms-odata: '#/components/schemas/USqlTableStatistics'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/tables':
    get:
      parameters:
        - description: The name of the database containing the tables.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - description: >-
            The basic switch indicates what level of information to return when
            listing tables. When basic is true, only database_name, schema_name,
            table_name and version are returned for each table, otherwise all
            table metadata is returned. By default, it is false
          in: query
          name: basic
          required: false
          schema:
            default: false
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableList'
          description: >-
            Successfully retrieved the list of all tables in the specified
            database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of all tables in a database from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListTablesByDatabase
      x-ms-examples:
        Retrieves the list of all tables in a database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTablesByDatabase.json
      x-ms-odata: '#/components/schemas/USqlTable'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/tablevaluedfunctions':
    get:
      parameters:
        - description: The name of the database containing the table valued functions.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlTableValuedFunctionList'
          description: >-
            Successfully retrieved the list of all table valued functions in the
            specified database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of all table valued functions in a database from the
        Data Lake Analytics catalog.
      operationId: Catalog_ListTableValuedFunctionsByDatabase
      x-ms-examples:
        Retrieves the list of all table valued functions in a database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListTableValuedFunctionsByDatabase.json
      x-ms-odata: '#/components/schemas/USqlTableValuedFunction'
      x-ms-pageable:
        nextLinkName: nextLink
  '/catalog/usql/databases/{databaseName}/views':
    get:
      parameters:
        - description: The name of the database containing the views.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/USqlViewList'
          description: >-
            Successfully retrieved the list of all views in the specified
            database.
      tags:
        - Catalog
      description: >-
        Retrieves the list of all views in a database from the Data Lake
        Analytics catalog.
      operationId: Catalog_ListViewsByDatabase
      x-ms-examples:
        Retrieves the list of all views in a database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_ListViewsByDatabase.json
      x-ms-odata: '#/components/schemas/USqlView'
      x-ms-pageable:
        nextLinkName: nextLink
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    adlaCatalogDnsSuffixInPath:
      description: >-
        Gets the DNS suffix used as the base for all Azure Data Lake Analytics
        Catalog service requests.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    Acl:
      description: A Data Lake Analytics catalog access control list (ACL) entry.
      properties:
        aceType:
          description: >-
            the access control list (ACL) entry type. UserObj and GroupObj
            denote the owning user and group, respectively.
          enum:
            - UserObj
            - GroupObj
            - Other
            - User
            - Group
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: AclType
        permission:
          description: the permission type of the access control list (ACL) entry.
          enum:
            - None
            - Use
            - Create
            - Drop
            - Alter
            - Write
            - All
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: PermissionType
        principalId:
          description: >-
            the Azure AD object ID of the user or group being specified in the
            access control list (ACL) entry.
          format: uuid
          readOnly: true
          type: string
      type: object
    AclCreateOrUpdateParameters:
      description: >-
        The parameters used to create or update an access control list (ACL)
        entry.
      properties:
        aceType:
          description: >-
            the access control list (ACL) entry type. UserObj and GroupObj
            denote the owning user and group, respectively.
          enum:
            - UserObj
            - GroupObj
            - Other
            - User
            - Group
          type: string
          x-ms-enum:
            modelAsString: true
            name: AclType
        permission:
          description: the permission type of the access control list (ACL) entry.
          enum:
            - None
            - Use
            - Create
            - Drop
            - Alter
            - Write
            - All
          type: string
          x-ms-enum:
            modelAsString: true
            name: PermissionType
        principalId:
          description: >-
            the Azure AD object ID of the user or group being specified in the
            access control list (ACL) entry.
          format: uuid
          type: string
      required:
        - aceType
        - principalId
        - permission
      type: object
    AclDeleteParameters:
      description: The parameters used to delete an access control list (ACL) entry.
      properties:
        aceType:
          description: >-
            the access control list (ACL) entry type. UserObj and GroupObj
            denote the owning user and group, respectively.
          enum:
            - UserObj
            - GroupObj
            - Other
            - User
            - Group
          type: string
          x-ms-enum:
            modelAsString: true
            name: AclType
        principalId:
          description: >-
            the Azure AD object ID of the user or group being specified in the
            access control list (ACL) entry.
          format: uuid
          type: string
      required:
        - aceType
        - principalId
      type: object
    AclList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog access control list (ACL).
      properties:
        value:
          description: the access control list (ACL).
          items:
            $ref: '#/components/schemas/Acl'
          readOnly: true
          type: array
      type: object
    CatalogItem:
      description: A Data Lake Analytics catalog item.
      properties:
        computeAccountName:
          description: the name of the Data Lake Analytics account.
          type: string
        version:
          description: the version of the catalog item.
          format: uuid
          type: string
      type: object
    CatalogItemList:
      description: A Data Lake Analytics catalog item list.
      properties:
        nextLink:
          description: the link to the next page of results.
          type: string
      type: object
    DataLakeAnalyticsCatalogCredentialCreateParameters:
      description: Data Lake Analytics catalog credential creation parameters.
      properties:
        password:
          description: >-
            the password for the credential and user with access to the data
            source.
          type: string
        uri:
          description: >-
            the URI identifier for the data source this credential can connect
            to in the format <hostname>:<port>
          type: string
        userId:
          description: >-
            the object identifier for the user associated with this credential
            with access to the data source.
          type: string
      required:
        - password
        - uri
        - userId
      type: object
    DataLakeAnalyticsCatalogCredentialDeleteParameters:
      description: Data Lake Analytics catalog credential deletion parameters.
      properties:
        password:
          description: >-
            the current password for the credential and user with access to the
            data source. This is required if the requester is not the account
            owner.
          type: string
      type: object
    DataLakeAnalyticsCatalogCredentialUpdateParameters:
      description: Data Lake Analytics catalog credential update parameters.
      properties:
        newPassword:
          description: >-
            the new password for the credential and user with access to the data
            source.
          type: string
        password:
          description: >-
            the current password for the credential and user with access to the
            data source. This is required if the requester is not the account
            owner.
          type: string
        uri:
          description: >-
            the URI identifier for the data source this credential can connect
            to in the format <hostname>:<port>
          type: string
        userId:
          description: >-
            the object identifier for the user associated with this credential
            with access to the data source.
          type: string
      type: object
    DataLakeAnalyticsCatalogSecretCreateOrUpdateParameters:
      description: >-
        Data Lake Analytics catalog secret creation and update parameters. This
        is deprecated and will be removed in the next release. Please use
        DataLakeAnalyticsCatalogCredentialCreateOrUpdateParameters instead.
      properties:
        password:
          description: the password for the secret to pass in
          type: string
        uri:
          description: 'the URI identifier for the secret in the format <hostname>:<port>'
          type: string
      required:
        - password
      type: object
    DdlName:
      description: A Data Lake Analytics DDL name item.
      properties:
        firstPart:
          description: the name of the table associated with this database and schema.
          type: string
        secondPart:
          description: the name of the table associated with this database and schema.
          type: string
        server:
          description: the name of the table associated with this database and schema.
          type: string
        thirdPart:
          description: the name of the table associated with this database and schema.
          type: string
      type: object
    EntityId:
      description: A Data Lake Analytics catalog entity identifier object.
      properties:
        name:
          $ref: '#/components/schemas/DdlName'
          description: >-
            the name of the external table associated with this database, schema
            and table.
        version:
          description: the version of the external data source.
          format: uuid
          type: string
      type: object
    ExternalTable:
      description: A Data Lake Analytics catalog external table item.
      properties:
        dataSource:
          $ref: '#/components/schemas/EntityId'
          description: the data source associated with this external table.
        tableName:
          description: the name of the table associated with this database and schema.
          type: string
      type: object
    TypeFieldInfo:
      description: A Data Lake Analytics catalog type field information item.
      properties:
        name:
          description: the name of the field associated with this type.
          type: string
        type:
          description: the type of the field.
          type: string
      type: object
    USqlAssembly:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL Assembly.
      properties:
        assemblyName:
          description: the name of the assembly.
          type: string
          x-ms-client-name: name
        clrName:
          description: the name of the CLR.
          type: string
        databaseName:
          description: the name of the database.
          type: string
        dependencies:
          description: the list of dependencies associated with the assembly
          items:
            $ref: '#/components/schemas/USqlAssemblyDependencyInfo'
          type: array
        files:
          description: the list of files associated with the assembly
          items:
            $ref: '#/components/schemas/USqlAssemblyFileInfo'
          type: array
        isUserDefined:
          description: the switch indicating if this assembly is user defined or not.
          type: boolean
        isVisible:
          description: the switch indicating if this assembly is visible or not.
          type: boolean
      type: object
    USqlAssemblyClr:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL assembly CLR item.
      properties:
        assemblyClrName:
          description: the name of the assembly.
          type: string
          x-ms-client-name: name
        clrName:
          description: the name of the CLR.
          type: string
        databaseName:
          description: the name of the database.
          type: string
      type: object
    USqlAssemblyDependencyInfo:
      description: A Data Lake Analytics catalog U-SQL dependency information item.
      properties:
        entityId:
          $ref: '#/components/schemas/EntityId'
          description: the EntityId of the dependency.
      type: object
    USqlAssemblyFileInfo:
      description: A Data Lake Analytics catalog U-SQL assembly file information item.
      properties:
        contentPath:
          description: The content path to the assembly file.
          type: string
        originalPath:
          description: The original path to the assembly file.
          type: string
        type:
          description: the assembly file type.
          enum:
            - Assembly
            - Resource
            - Nodeploy
          type: string
          x-ms-enum:
            modelAsString: true
            name: FileType
      type: object
    USqlAssemblyList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL assembly CLR item list.
      properties:
        value:
          description: the list of assemblies in the database
          items:
            $ref: '#/components/schemas/USqlAssemblyClr'
          readOnly: true
          type: array
      type: object
    USqlCredential:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL credential item.
      properties:
        credentialName:
          description: the name of the credential.
          type: string
          x-ms-client-name: name
      type: object
    USqlCredentialList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL credential item list.
      properties:
        value:
          description: the list of credentials in the database
          items:
            $ref: '#/components/schemas/USqlCredential'
          readOnly: true
          type: array
      type: object
    USqlDatabase:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL database item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
          x-ms-client-name: name
      type: object
    USqlDatabaseList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL database item list.
      properties:
        value:
          description: the list of databases
          items:
            $ref: '#/components/schemas/USqlDatabase'
          readOnly: true
          type: array
      type: object
    USqlDirectedColumn:
      description: A Data Lake Analytics catalog U-SQL directed column item.
      properties:
        descending:
          description: the switch indicating if the index is descending or not.
          type: boolean
        name:
          description: the name of the index in the table.
          type: string
      type: object
    USqlDistributionInfo:
      description: A Data Lake Analytics catalog U-SQL distribution information object.
      properties:
        count:
          description: the count of indices using this distribution.
          format: int32
          type: integer
        dynamicCount:
          description: the dynamic count of indices using this distribution.
          format: int32
          type: integer
        keys:
          description: the list of directed columns in the distribution
          items:
            $ref: '#/components/schemas/USqlDirectedColumn'
          type: array
        type:
          description: the type of this distribution.
          format: int32
          type: integer
      type: object
    USqlExternalDataSource:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL external datasource item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
        externalDataSourceName:
          description: the name of the external data source.
          type: string
          x-ms-client-name: name
        provider:
          description: the name of the provider for the external data source.
          type: string
        providerString:
          description: the name of the provider string for the external data source.
          type: string
        pushdownTypes:
          description: the list of types to push down from the external data source.
          items:
            type: string
          type: array
      type: object
    USqlExternalDataSourceList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL external datasource item list.
      properties:
        value:
          description: the list of external data sources in the database
          items:
            $ref: '#/components/schemas/USqlExternalDataSource'
          readOnly: true
          type: array
      type: object
    USqlIndex:
      description: A Data Lake Analytics catalog U-SQL table index item.
      properties:
        columns:
          description: the list of columns in the index
          items:
            type: string
          type: array
        distributionInfo:
          $ref: '#/components/schemas/USqlDistributionInfo'
          description: the distributions info of the index
        indexId:
          description: the ID of this index within the table.
          format: int32
          type: integer
        indexKeys:
          description: the list of directed columns in the index
          items:
            $ref: '#/components/schemas/USqlDirectedColumn'
          type: array
        isColumnstore:
          description: the switch indicating if this index is a columnstore index.
          type: boolean
        isUnique:
          description: the switch indicating if this index is a unique index.
          type: boolean
        name:
          description: the name of the index in the table.
          type: string
        partitionFunction:
          description: partition function ID for the index.
          format: uuid
          type: string
        partitionKeyList:
          description: the list of partition keys in the index
          items:
            type: string
          type: array
        streamNames:
          description: >-
            the list of full paths to the streams that contain this index in the
            DataLake account.
          items:
            type: string
          type: array
      type: object
    USqlPackage:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL package item.
      properties:
        databaseName:
          description: the name of the database containing the package.
          type: string
        definition:
          description: the definition of the package.
          type: string
        packageName:
          description: the name of the package.
          type: string
          x-ms-client-name: name
        schemaName:
          description: the name of the schema associated with this package and database.
          type: string
      type: object
    USqlPackageList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL package item list.
      properties:
        value:
          description: the list of packages in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlPackage'
          readOnly: true
          type: array
      type: object
    USqlProcedure:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL procedure item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the defined query of the procedure.
          type: string
        procName:
          description: the name of the procedure.
          type: string
          x-ms-client-name: name
        schemaName:
          description: the name of the schema associated with this procedure and database.
          type: string
      type: object
    USqlProcedureList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL procedure item list.
      properties:
        value:
          description: the list of procedure in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlProcedure'
          readOnly: true
          type: array
      type: object
    USqlSchema:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL schema item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
        schemaName:
          description: the name of the schema.
          type: string
          x-ms-client-name: name
      type: object
    USqlSchemaList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL schema item list.
      properties:
        value:
          description: the list of schemas in the database
          items:
            $ref: '#/components/schemas/USqlSchema'
          readOnly: true
          type: array
      type: object
    USqlSecret:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL secret item.
      properties:
        creationTime:
          description: >-
            the creation time of the credential object. This is the only
            information returned about a secret from a GET.
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        password:
          description: the password for the secret to pass in
          type: string
        secretName:
          description: the name of the secret.
          type: string
          x-ms-client-name: name
        uri:
          description: 'the URI identifier for the secret in the format <hostname>:<port>'
          type: string
      type: object
    USqlTable:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table item.
      properties:
        columnList:
          description: the list of columns in this table
          items:
            $ref: '#/components/schemas/USqlTableColumn'
          type: array
        databaseName:
          description: the name of the database.
          type: string
        distributionInfo:
          $ref: '#/components/schemas/USqlDistributionInfo'
          description: the distributions info of the table
        externalTable:
          $ref: '#/components/schemas/ExternalTable'
          description: the external table associated with the table.
        indexList:
          description: the list of indices in this table
          items:
            $ref: '#/components/schemas/USqlIndex'
          type: array
        partitionKeyList:
          description: the list of partition keys in the table
          items:
            type: string
          type: array
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        tableName:
          description: the name of the table.
          type: string
          x-ms-client-name: name
      type: object
    USqlTableColumn:
      description: A Data Lake Analytics catalog U-SQL table column item.
      properties:
        name:
          description: the name of the column in the table.
          type: string
        type:
          description: the object type of the specified column (such as System.String).
          type: string
      type: object
    USqlTableFragment:
      description: A Data Lake Analytics catalog U-SQL table fragment item.
      properties:
        createDate:
          description: the creation time of the table fragment.
          format: date-time
          type: string
        fragmentId:
          description: the version of the catalog item.
          format: uuid
          type: string
        indexId:
          description: the ordinal of the index which contains the table fragment.
          format: int32
          type: integer
        parentId:
          description: >-
            the parent object Id of the table fragment. The parent could be a
            table or table partition.
          format: uuid
          type: string
        rowCount:
          description: the number of rows in the table fragment.
          format: int64
          type: integer
        size:
          description: the data size of the table fragment in bytes.
          format: int64
          type: integer
        streamPath:
          description: the relative path for the table fragment location.
          type: string
      type: object
    USqlTableFragmentList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table fragment item list.
      properties:
        value:
          description: >-
            the list of table fragments in the database, schema and table
            combination
          items:
            $ref: '#/components/schemas/USqlTableFragment'
          readOnly: true
          type: array
      type: object
    USqlTableList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table item list.
      properties:
        value:
          description: the list of tables in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlTable'
          readOnly: true
          type: array
      type: object
    USqlTablePartition:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table partition item.
      properties:
        createDate:
          description: the creation time of the partition
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        indexId:
          description: the index ID for this partition.
          format: int32
          type: integer
        label:
          description: the list of labels associated with this partition.
          items:
            type: string
          type: array
        parentName:
          $ref: '#/components/schemas/DdlName'
          description: the Ddl object of the partition's parent.
        partitionName:
          description: the name of the table partition.
          type: string
          x-ms-client-name: name
        schemaName:
          description: >-
            the name of the schema associated with this table partition and
            database.
          type: string
      type: object
    USqlTablePartitionList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table partition item list.
      properties:
        value:
          description: >-
            the list of table partitions in the database, schema and table
            combination
          items:
            $ref: '#/components/schemas/USqlTablePartition'
          readOnly: true
          type: array
      type: object
    USqlTablePreview:
      description: A Data Lake Analytics catalog table or partition preview rows item.
      properties:
        rows:
          description: >-
            the rows of the table or partition preview, where each row is an
            array of string representations the row's values. Note: Byte arrays
            will appear as base-64 encoded values, SqlMap and SqlArray objects
            will appear as escaped JSON objects, and DateTime objects will
            appear as ISO formatted UTC date-times.
          items:
            items:
              type: string
            type: array
          type: array
        schema:
          description: the schema of the table or partition.
          items:
            $ref: '#/components/schemas/USqlTableColumn'
          type: array
        totalColumnCount:
          description: the total number of columns in the table or partition.
          format: int64
          type: integer
        totalRowCount:
          description: the total number of rows in the table or partition.
          format: int64
          type: integer
        truncated:
          description: >-
            true if the amount of data in the response is less than expected due
            to the preview operation's size limitations. This can occur if the
            requested rows or row counts are too large.
          type: boolean
      type: object
    USqlTableStatistics:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table statistics item.
      properties:
        colNames:
          description: the list of column names associated with these statistics.
          items:
            type: string
          type: array
        createTime:
          description: the creation time of the statistics.
          format: date-time
          type: string
        databaseName:
          description: the name of the database.
          type: string
        filterDefinition:
          description: the filter definition for the statistics.
          type: string
        hasFilter:
          description: the switch indicating if these statistics have a filter.
          type: boolean
        isAutoCreated:
          description: the switch indicating if these statistics are automatically created.
          type: boolean
        isUserCreated:
          description: the switch indicating if these statistics are user created.
          type: boolean
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        statDataPath:
          description: the path to the statistics data.
          type: string
        statisticsName:
          description: the name of the table statistics.
          type: string
          x-ms-client-name: name
        tableName:
          description: the name of the table.
          type: string
        updateTime:
          description: the last time the statistics were updated.
          format: date-time
          type: string
        userStatName:
          description: the name of the user statistics.
          type: string
      type: object
    USqlTableStatisticsList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table statistics item list.
      properties:
        value:
          description: >-
            the list of table statistics in the database, schema and table
            combination
          items:
            $ref: '#/components/schemas/USqlTableStatistics'
          readOnly: true
          type: array
      type: object
    USqlTableType:
      allOf:
        - $ref: '#/components/schemas/USqlType'
      description: A Data Lake Analytics catalog U-SQL table type item.
      properties:
        columns:
          description: the type field information associated with this table type.
          items:
            $ref: '#/components/schemas/TypeFieldInfo'
          readOnly: true
          type: array
      type: object
    USqlTableTypeList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table type item list.
      properties:
        value:
          description: the list of table types in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlTableType'
          readOnly: true
          type: array
      type: object
    USqlTableValuedFunction:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL table valued function item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the definition of the table valued function.
          type: string
        schemaName:
          description: the name of the schema associated with this database.
          type: string
        tvfName:
          description: the name of the table valued function.
          type: string
          x-ms-client-name: name
      type: object
    USqlTableValuedFunctionList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL table valued function item list.
      properties:
        value:
          description: >-
            the list of table valued functions in the database and schema
            combination
          items:
            $ref: '#/components/schemas/USqlTableValuedFunction'
          readOnly: true
          type: array
      type: object
    USqlType:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL type item.
      properties:
        cSharpName:
          description: the C# name for this type.
          type: string
        databaseName:
          description: the name of the database.
          type: string
        fullCSharpName:
          description: the fully qualified C# name for this type.
          type: string
        isAssemblyType:
          description: The switch indicating if this type is an assembly type.
          type: boolean
        isComplexType:
          description: The switch indicating if this type is a complex type.
          type: boolean
        isNullable:
          description: The switch indicating if this type is nullable.
          type: boolean
        isTableType:
          description: The switch indicating if this type is a table type.
          type: boolean
        isUserDefined:
          description: The switch indicating if this type is user defined.
          type: boolean
        principalId:
          description: the principal ID for this type.
          format: int32
          type: integer
        schemaId:
          description: the schema ID for this type.
          format: int32
          type: integer
        schemaName:
          description: the name of the schema associated with this table and database.
          type: string
        systemTypeId:
          description: the system type ID for this type.
          format: int32
          type: integer
        typeFamily:
          description: the type family for this type.
          type: string
        typeName:
          description: the name of type for this type.
          type: string
          x-ms-client-name: name
        userTypeId:
          description: the user type ID for this type.
          format: int32
          type: integer
      type: object
    USqlTypeList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL type item list.
      properties:
        value:
          description: the list of types in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlType'
          readOnly: true
          type: array
      type: object
    USqlView:
      allOf:
        - $ref: '#/components/schemas/CatalogItem'
      description: A Data Lake Analytics catalog U-SQL view item.
      properties:
        databaseName:
          description: the name of the database.
          type: string
        definition:
          description: the defined query of the view.
          type: string
        schemaName:
          description: the name of the schema associated with this view and database.
          type: string
        viewName:
          description: the name of the view.
          type: string
          x-ms-client-name: name
      type: object
    USqlViewList:
      allOf:
        - $ref: '#/components/schemas/CatalogItemList'
      description: A Data Lake Analytics catalog U-SQL view item list.
      properties:
        value:
          description: the list of view in the database and schema combination
          items:
            $ref: '#/components/schemas/USqlView'
          readOnly: true
          type: array
      type: object
x-ms-paths:
  /catalog/usql/acl?op=GRANTACE:
    post:
      parameters:
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - GRANTACE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully granted the access control list (ACL) entry to the Data
            Lake Analytics catalog.
      tags:
        - Catalog
      description: >-
        Grants an access control list (ACL) entry to the Data Lake Analytics
        catalog.
      operationId: Catalog_GrantAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclCreateOrUpdateParameters'
        description: >-
          Parameters supplied to create or update an access control list (ACL)
          entry for a Data Lake Analytics catalog.
        required: true
      x-ms-examples:
        Grants an access control list (ACL) entry to the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GrantAcl.json
  /catalog/usql/acl?op=REVOKEACE:
    post:
      parameters:
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - REVOKEACE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully revoked the access control list (ACL) entry from the
            Data Lake Analytics catalog.
      tags:
        - Catalog
      description: >-
        Revokes an access control list (ACL) entry from the Data Lake Analytics
        catalog.
      operationId: Catalog_RevokeAcl
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclDeleteParameters'
        description: >-
          Parameters supplied to delete an access control list (ACL) entry from
          a Data Lake Analytics catalog.
        required: true
      x-ms-examples:
        Revokes an access control list (ACL) entry from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_RevokeAcl.json
  '/catalog/usql/databases/{databaseName}/acl?op=GRANTACE':
    post:
      parameters:
        - description: The name of the database.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - GRANTACE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully granted the access control list (ACL) entry to the
            specified database.
      tags:
        - Catalog
      description: >-
        Grants an access control list (ACL) entry to the database from the Data
        Lake Analytics catalog.
      operationId: Catalog_GrantAclToDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclCreateOrUpdateParameters'
        description: >-
          Parameters supplied to create or update an access control list (ACL)
          entry for a database.
        required: true
      x-ms-examples:
        Grants an access control list (ACL) entry to the database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_GrantAclToDatabase.json
  '/catalog/usql/databases/{databaseName}/acl?op=REVOKEACE':
    post:
      parameters:
        - description: The name of the database.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - REVOKEACE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully revoked the access control list (ACL) entry from the
            specified database.
      tags:
        - Catalog
      description: >-
        Revokes an access control list (ACL) entry for the database from the
        Data Lake Analytics catalog.
      operationId: Catalog_RevokeAclFromDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclDeleteParameters'
        description: >-
          Parameters supplied to delete an access control list (ACL) entry for a
          database.
        required: true
      x-ms-examples:
        Revokes an access control list (ACL) entry for the database from the Data Lake Analytics catalog:
          $ref: ./examples/Catalog_RevokeAclFromDatabase.json

