openapi: 3.0.0
info:
  description: >-
    Provides create, read, update and delete functionality for Azure SQL
    Database resources including servers, databases, elastic pools,
    recommendations, and operations.
  title: Azure SQL Database
  version: '2014-04-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions':
    get:
      parameters:
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ResourceGroupParameter
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the database to import into
          in: path
          name: databaseName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionListResult'
          description: OK
      tags:
        - ImportExport
      description: Gets database extensions. This API is deprecated and should not be used.
      operationId: Extensions_ListByDatabase
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}':
    get:
      parameters:
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ResourceGroupParameter
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the database to import into
          in: path
          name: databaseName
          required: true
          schema:
            type: string
        - description: The name of the extension to get
          in: path
          name: extensionName
          required: true
          schema:
            enum:
              - import
            type: string
          x-ms-enum:
            modelAsString: true
            name: ExtensionName
      responses:
        '200':
          description: OK
      tags:
        - ImportExport
      description: >-
        Gets a database extension. This API is deprecated and should not be
        used.
      operationId: Extensions_Get
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption':
    get:
      parameters:
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../common/v1/types.json#/components/parameters/ResourceGroupParameter
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: >-
            The name of the database for which the transparent data encryption
            applies.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransparentDataEncryptionListResult'
          description: OK
      tags:
        - TransparentDataEncryption
      deprecated: true
      description: >-
        Gets a list of a database's transparent data encryption configurations.
        There is only ever one element, named 'current', so
        GetTransparentDataEncryptionConfiguration should be used instead.
      operationId: TransparentDataEncryptionConfigurations_ListByDatabase
      x-ms-examples:
        Get a list of transparent data encryption configurations:
          $ref: ./examples/DatabaseTransparentDataEncryptionList.json
      x-ms-pageable:
        nextLinkName: null
components:
  parameters:
    DatabaseExpandParameter:
      description: >-
        A comma separated list of child objects to expand in the response.
        Possible properties: serviceTierAdvisors, transparentDataEncryption.
      in: query
      name: $expand
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
  schemas:
    ExtensionListResult:
      description: Represents the response to a list extensions request.
      properties:
        value:
          description: The list of extensions.
          items:
            properties: {}
            type: object
          type: array
      type: object
    TransparentDataEncryptionListResult:
      description: >-
        Represents the response to a list transparent data encryption
        configurations request.
      properties:
        value:
          description: The list of transparent data encryption configurations.
          items:
            $ref: ./sql.core.json#/definitions/TransparentDataEncryption
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

