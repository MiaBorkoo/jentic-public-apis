{
  "openapi": "3.0.0",
  "info": {
    "description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.",
    "title": "AuthorizationManagementClient",
    "version": "2017-10-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/preview/2017-10-01-preview/authorization-RoleAssignmentsCalls.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "parameters": [
          {
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentListResult"
                }
              }
            },
            "description": "OK - Returns an array of role assignments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets all role assignments for the subscription.",
        "operationId": "RoleAssignments_List",
        "x-ms-examples": {
          "List role assignments for subscription": {
            "$ref": "./examples/GetAllRoleAssignments.json"
          }
        },
        "x-ms-odata": "#/components/schemas/RoleAssignmentFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentListResult"
                }
              }
            },
            "description": "OK - Returns an array of role assignments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets role assignments for a resource group.",
        "operationId": "RoleAssignments_ListForResourceGroup",
        "x-ms-examples": {
          "List role assignments for resource group": {
            "$ref": "./examples/GetRoleAssignmentsForResourceGroup.json"
          }
        },
        "x-ms-odata": "#/components/schemas/RoleAssignmentFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "The parent resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "The resource type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The name of the resource to get role assignments for.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentListResult"
                }
              }
            },
            "description": "OK - Returns an array of role assignments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets role assignments for a resource.",
        "operationId": "RoleAssignments_ListForResource",
        "x-ms-examples": {
          "List role assignments for resource": {
            "$ref": "./examples/GetRoleAssignmentsForResource.json"
          }
        },
        "x-ms-odata": "#/components/schemas/RoleAssignmentFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{roleAssignmentId}": {
      "delete": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The ID of the role assignment to delete.",
            "in": "path",
            "name": "roleAssignmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "OK - Returns information about the role assignment."
          },
          "204": {
            "description": "Role assignment already deleted or does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Deletes a role assignment.",
        "operationId": "RoleAssignments_DeleteById",
        "x-ms-examples": {
          "Delete role assignment by ID": {
            "$ref": "./examples/DeleteRoleAssignmentById.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The ID of the role assignment to get.",
            "in": "path",
            "name": "roleAssignmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "OK - Returns the role assignment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets a role assignment by ID.",
        "operationId": "RoleAssignments_GetById",
        "x-ms-examples": {
          "Get role assignment by ID": {
            "$ref": "./examples/GetRoleAssignmentById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The ID of the role assignment to create.",
            "in": "path",
            "name": "roleAssignmentId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "Created - Returns the role assignment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Creates a role assignment by ID.",
        "operationId": "RoleAssignments_CreateById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAssignmentCreateParameters"
              }
            }
          },
          "description": "Parameters for the role assignment.",
          "required": true
        },
        "x-ms-examples": {
          "Create role assignment by ID": {
            "$ref": "./examples/PutRoleAssignmentById.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleAssignments": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role assignments.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The filter to apply on the operation. Use $filter=atScope() to return all role assignments at or above the scope. Use $filter=principalId eq {id} to return all role assignments at, above or below the scope for the specified principal.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignmentListResult"
                }
              }
            },
            "description": "OK - Returns an array of role assignments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Gets role assignments for a scope.",
        "operationId": "RoleAssignments_ListForScope",
        "x-ms-examples": {
          "List role assignments for scope": {
            "$ref": "./examples/GetRoleAssignmentByScope.json"
          }
        },
        "x-ms-odata": "#/components/schemas/RoleAssignmentFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}": {
      "delete": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role assignment to delete.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The name of the role assignment to delete.",
            "in": "path",
            "name": "roleAssignmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "OK - Returns information about the role assignment."
          },
          "204": {
            "description": "Role assignment already deleted or does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Deletes a role assignment.",
        "operationId": "RoleAssignments_Delete",
        "x-ms-examples": {
          "Delete role assignment by name": {
            "$ref": "./examples/DeleteRoleAssignmentByName.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role assignment.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The name of the role assignment to get.",
            "in": "path",
            "name": "roleAssignmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "OK - Returns information about the role assignment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Get the specified role assignment.",
        "operationId": "RoleAssignments_Get",
        "x-ms-examples": {
          "Get role assignment by name": {
            "$ref": "./examples/GetRoleAssignmentByName.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role assignment to create. The scope can be any REST resource instance. For example, use '/subscriptions/{subscription-id}/' for a subscription, '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}' for a resource group, and '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}' for a resource.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "A GUID for the role assignment to create. The name must be unique and different for each role assignment.",
            "in": "path",
            "name": "roleAssignmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleAssignment"
                }
              }
            },
            "description": "Created - Returns information about the role assignment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleAssignments"
        ],
        "description": "Creates a role assignment.",
        "operationId": "RoleAssignments_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleAssignmentCreateParameters"
              }
            }
          },
          "description": "Parameters for the role assignment.",
          "required": true
        },
        "x-ms-examples": {
          "Create role assignment": {
            "$ref": "./examples/PutRoleAssignment.json"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "RoleAssignmentCreateParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RoleAssignmentCreateParameters"
            }
          }
        },
        "description": "Parameters for the role assignment.",
        "required": true
      }
    },
    "schemas": {
      "RoleAssignment": {
        "description": "Role Assignments",
        "properties": {
          "id": {
            "description": "The role assignment ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The role assignment name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RoleAssignmentPropertiesWithScope",
            "description": "Role assignment properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The role assignment type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleAssignmentCreateParameters": {
        "description": "Role assignment create parameters.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RoleAssignmentProperties",
            "description": "Role assignment properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RoleAssignmentFilter": {
        "description": "Role Assignments filter",
        "properties": {
          "canDelegate": {
            "description": "The Delegation flag for the role assignment",
            "type": "boolean"
          },
          "principalId": {
            "description": "Returns role assignment of the specific principal.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleAssignmentListResult": {
        "description": "Role assignment list operation result.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Role assignment list.",
            "items": {
              "$ref": "#/components/schemas/RoleAssignment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RoleAssignmentProperties": {
        "description": "Role assignment properties.",
        "properties": {
          "canDelegate": {
            "description": "The delegation flag used for creating a role assignment",
            "type": "boolean"
          },
          "principalId": {
            "description": "The principal ID assigned to the role. This maps to the ID inside the Active Directory. It can point to a user, service principal, or security group.",
            "type": "string"
          },
          "roleDefinitionId": {
            "description": "The role definition ID used in the role assignment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleAssignmentPropertiesWithScope": {
        "description": "Role assignment properties with scope.",
        "properties": {
          "canDelegate": {
            "description": "The Delegation flag for the role assignment",
            "type": "boolean"
          },
          "principalId": {
            "description": "The principal ID.",
            "type": "string"
          },
          "roleDefinitionId": {
            "description": "The role definition ID.",
            "type": "string"
          },
          "scope": {
            "description": "The role assignment scope.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}