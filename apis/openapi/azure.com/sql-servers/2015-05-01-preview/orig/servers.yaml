openapi: 3.0.0
info:
  description: >-
    The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2015-05-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
          description: Successfully retrieved the list of servers.
        default:
          description: '*** Error Responses: ***'
      tags:
        - Servers
      description: Gets a list of all servers in the subscription.
      operationId: Servers_List
      x-ms-examples:
        List servers:
          $ref: ./examples/ServerList.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResult'
          description: Successfully retrieved the list of servers.
        default:
          description: '*** Error Responses: ***'
      tags:
        - Servers
      description: Gets a list of servers in a resource groups.
      operationId: Servers_ListByResourceGroup
      x-ms-examples:
        List servers by resource group:
          $ref: ./examples/ServerListByResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the server.
        '202':
          description: Accepted
        '204':
          description: The specified server does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 SubscriptionNotFound - The requested subscription was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 429 ConflictingServerOperation - An operation is currently in progress for the server.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      tags:
        - Servers
      description: Deletes a server.
      operationId: Servers_Delete
      x-ms-examples:
        Delete server:
          $ref: ./examples/ServerDelete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Successfully retrieved the specified server.
        default:
          description: |-
            *** Error Responses: ***

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - Servers
      description: Gets a server.
      operationId: Servers_Get
      x-ms-examples:
        Get server:
          $ref: ./examples/ServerGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Successfully updated the server.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 NameAlreadyExists - The provided name already exists.

             * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.

             * 400 ServerNotFound - The requested server was not found.

             * 400 InvalidUsername - Supplied user name contains invalid characters.

             * 400 InvalidParameterValue - An invalid value was given to a parameter.

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 400 TokenTooLong - The provided token is too long.

             * 400 InvalidLoginName - The provided login name is invalid.

             * 400 PasswordTooShort - The provided password is too short

             * 400 PasswordTooLong - The provided password is too long.

             * 400 PasswordNotComplex - The provided password is not complex enough.

             * 400 SubscriptionNotFound - The requested subscription was not found.

             * 400 InvalidLocation - An invalid location was specified.

             * 400 InvalidServerName - Invalid server name specified.

             * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 409 ServerAlreadyExists - Duplicate server name.

             * 409 SubscriptionDisabled - Subscription is disabled.

             * 409 ServerDisabled - Server is disabled.

             * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.

             * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.

             * 429 ConflictingServerOperation - An operation is currently in progress for the server.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      tags:
        - Servers
      description: Updates a server.
      operationId: Servers_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdate'
        description: The requested server resource state.
        required: true
      x-ms-examples:
        Update a server with all properties:
          $ref: ./examples/ServerUpdateMax.json
        Update a server with minimal properties:
          $ref: ./examples/ServerUpdateMin.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Successfully updated the server.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Successfully created the server.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 NameAlreadyExists - The provided name already exists.

             * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.

             * 400 ServerNotFound - The requested server was not found.

             * 400 InvalidUsername - Supplied user name contains invalid characters.

             * 400 InvalidParameterValue - An invalid value was given to a parameter.

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 400 TokenTooLong - The provided token is too long.

             * 400 InvalidLoginName - The provided login name is invalid.

             * 400 PasswordTooShort - The provided password is too short

             * 400 PasswordTooLong - The provided password is too long.

             * 400 PasswordNotComplex - The provided password is not complex enough.

             * 400 SubscriptionNotFound - The requested subscription was not found.

             * 400 InvalidLocation - An invalid location was specified.

             * 400 InvalidServerName - Invalid server name specified.

             * 400 RegionDoesNotAllowProvisioning - The selected location is not accepting new Windows Azure SQL Database servers. This may change at a later time.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 OperationIdNotFound - The operation with Id does not exist.

             * 409 OperationCancelled - The operation has been cancelled by user.

             * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.

             * 409 ServerAlreadyExists - Duplicate server name.

             * 409 SubscriptionDisabled - Subscription is disabled.

             * 409 ServerDisabled - Server is disabled.

             * 409 ServerQuotaExceeded - Server cannot be added to a subscription because it will exceed quota.

             * 429 ConflictingSubscriptionOperation - An operation is currently in progress for the subscription.

             * 429 ConflictingServerOperation - An operation is currently in progress for the server.

             * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.
      tags:
        - Servers
      description: Creates or updates a server.
      operationId: Servers_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Server'
        description: The requested server resource state.
        required: true
      x-ms-examples:
        Create server with all properties:
          $ref: ./examples/ServerCreateMax.json
        Create server with minimal properties:
          $ref: ./examples/ServerCreateMin.json
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: >-
        The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
  schemas:
    Server:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/TrackedResource
      description: An Azure SQL Database server.
      properties:
        identity:
          $ref: ../../../common/v1/types.json#/definitions/ResourceIdentity
          description: The Azure Active Directory identity of the server.
          x-ms-mutability:
            - read
            - create
        kind:
          description: >-
            Kind of sql server. This is metadata used for the Azure portal
            experience.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/ServerProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      required:
        - location
      type: object
    ServerListResult:
      description: A list of servers.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/Server'
          readOnly: true
          type: array
      type: object
    ServerProperties:
      description: The properties of a server.
      properties:
        administratorLogin:
          description: >-
            Administrator username for the server. Once created it cannot be
            changed.
          type: string
          x-ms-mutability:
            - read
            - create
        administratorLoginPassword:
          description: The administrator login password (required for server creation).
          type: string
          x-ms-mutability:
            - create
            - update
        fullyQualifiedDomainName:
          description: The fully qualified domain name of the server.
          readOnly: true
          type: string
        state:
          description: The state of the server.
          readOnly: true
          type: string
        version:
          description: The version of the server.
          type: string
      type: object
    ServerUpdate:
      description: An update request for an Azure SQL Database server.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
        properties:
          $ref: '#/components/schemas/ServerProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

