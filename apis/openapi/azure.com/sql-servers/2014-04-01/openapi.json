{
  "openapi": "3.0.0",
  "info": {
    "description": "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.",
    "title": "Azure SQL Database",
    "version": "2014-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/servers.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Returns a list of servers.",
        "operationId": "Servers_List",
        "x-ms-examples": {
          "List servers": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Returns a list of servers in a resource group.",
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "List servers by resource group": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Deletes a SQL server.",
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "Delete SQL Server": {
            "$ref": "./examples/ServerDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Gets a server.",
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "Get Server": {
            "$ref": "./examples/ServerGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Updates an existing server.",
        "operationId": "Servers_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerUpdate"
              }
            }
          },
          "description": "The required parameters for updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "Create server max": {
            "$ref": "./examples/ServerUpdateMax.json"
          },
          "Create server min": {
            "$ref": "./examples/ServerUpdateMin.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Creates or updates a new server.",
        "operationId": "Servers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Server"
              }
            }
          },
          "description": "The required parameters for creating or updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "Create server max": {
            "$ref": "./examples/ServerCreateOrUpdateMax.json"
          },
          "Create server min": {
            "$ref": "./examples/ServerCreateOrUpdateMin.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "DatabaseExpandParameter": {
        "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Server": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Represents a server.",
        "properties": {
          "kind": {
            "description": "Kind of sql server.  This is metadata used for the Azure portal experience.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ServerProperties",
            "description": "Represents the properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ServerListResult": {
        "description": "Represents the response to a get server request.",
        "properties": {
          "value": {
            "description": "The list of servers.",
            "items": {
              "$ref": "#/components/schemas/Server"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ServerProperties": {
        "description": "Represents the properties of a server.",
        "properties": {
          "administratorLogin": {
            "description": "Administrator username for the server. Can only be specified when the server is being created (and is required for creation).",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "administratorLoginPassword": {
            "description": "The administrator login password (required for server creation).",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "update"
            ]
          },
          "externalAdministratorLogin": {
            "description": "The display name of the Azure Active Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators",
            "readOnly": true,
            "type": "string"
          },
          "externalAdministratorSid": {
            "description": "The ID of the Active Azure Directory object with admin permissions on this server. Legacy parameter, always null. To check for Active Directory admin, query .../servers/{serverName}/administrators.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "fullyQualifiedDomainName": {
            "description": "The fully qualified domain name of the server.",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The state of the server.",
            "enum": [
              "Ready",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "ServerState"
            }
          },
          "version": {
            "description": "The version of the server.",
            "enum": [
              "2.0",
              "12.0"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ServerVersion"
            }
          }
        },
        "type": "object"
      },
      "ServerUpdate": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Represents an update to a server.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/ServerProperties",
            "description": "Represents the properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}