openapi: 3.0.0
info:
  description: >-
    The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2015-05-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerKeyListResult'
          description: Successfully retrieved the list of server keys.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - ServerKeys
      description: Gets a list of server keys.
      operationId: ServerKeys_ListByServer
      x-ms-examples:
        List the server keys by server:
          $ref: ./examples/ServerKeyList.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the server key to be deleted.
          in: path
          name: keyName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the server key.
        '202':
          description: Accepted
        '204':
          description: The specified server key does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.

             * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.

             * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.

             * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.

             * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.

             * 401 AzureKeyVaultMissingPermissions - The server is missing required permissions on the Azure Key Vault. 

             * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.

             * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Service Principal not found error was encountered.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.

             * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.

             * 409 ServerKeyDoesNotExists - The server key does not exist.

             * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.

             * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.

             * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.

             * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed

             * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .
      tags:
        - ServerKeys
      description: Deletes the server key with the given name.
      operationId: ServerKeys_Delete
      x-ms-examples:
        Delete the server key:
          $ref: ./examples/ServerKeyDelete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the server key to be retrieved.
          in: path
          name: keyName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerKey'
          description: Successfully retrieved the specified server key.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - ServerKeys
      description: Gets a server key.
      operationId: ServerKeys_Get
      x-ms-examples:
        Get the server key:
          $ref: ./examples/ServerKeyGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: >-
            The name of the server key to be operated on (updated or created).
            The key name is required to be in the format of 'vault_key_version'.
            For example, if the keyId is
            https://YourVaultName.vault.azure.net/keys/YourKeyName/01234567890123456789012345678901,
            then the server key name should be formatted as:
            YourVaultName_YourKeyName_01234567890123456789012345678901
          in: path
          name: keyName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerKey'
          description: Successfully updated the server key.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerKey'
          description: Successfully created the server key.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.

             * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.

             * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.

             * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.

             * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.

             * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.

             * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.

             * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.

             * 401 AzureKeyVaultMissingPermissions - The server is missing required permissions on the Azure Key Vault. 

             * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.

             * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Service Principal not found error was encountered.

             * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.

             * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured on server. Please contact support.

             * 401 AzureKeyVaultMissingPermissions - The server is missing required permissions on the Azure Key Vault. 

             * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.

             * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Service Principal not found error was encountered.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.

             * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.

             * 409 ServerKeyDoesNotExists - The server key does not exist.

             * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.

             * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.

             * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.

             * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.

             * 409 ServerKeyDoesNotExists - The server key does not exist.

             * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.

             * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.

             * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.

             * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed

             * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .

             * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed

             * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .
      tags:
        - ServerKeys
      description: Creates or updates a server key.
      operationId: ServerKeys_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerKey'
        description: The requested server key resource state.
        required: true
      x-ms-examples:
        Creates or updates a server key:
          $ref: ./examples/ServerKeyCreateOrUpdate.json
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: >-
        The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
  schemas:
    ServerKey:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: A server key.
      properties:
        kind:
          description: >-
            Kind of encryption protector. This is metadata used for the Azure
            portal experience.
          type: string
        location:
          description: Resource location.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/ServerKeyProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    ServerKeyListResult:
      description: A list of server keys.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/ServerKey'
          readOnly: true
          type: array
      type: object
    ServerKeyProperties:
      description: Properties for a server key execution.
      properties:
        creationDate:
          description: The server key creation date.
          format: date-time
          type: string
        serverKeyType:
          description: 'The server key type like ''ServiceManaged'', ''AzureKeyVault''.'
          enum:
            - ServiceManaged
            - AzureKeyVault
          type: string
          x-ms-enum:
            modelAsString: true
            name: ServerKeyType
        subregion:
          description: Subregion of the server key.
          readOnly: true
          type: string
        thumbprint:
          description: Thumbprint of the server key.
          type: string
        uri:
          description: The URI of the server key.
          type: string
      required:
        - serverKeyType
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

