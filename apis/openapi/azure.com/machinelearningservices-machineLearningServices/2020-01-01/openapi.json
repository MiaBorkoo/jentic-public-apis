{
  "openapi": "3.0.0",
  "info": {
    "description": "These APIs allow end users to operate on Azure Machine Learning Workspace resources.",
    "title": "Azure Machine Learning Workspaces",
    "version": "2020-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearningservices/resource-manager/Microsoft.MachineLearningServices/stable/2020-01-01/machineLearningServices.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.MachineLearningServices/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Operation"
        ],
        "description": "Lists all of the available Azure Machine Learning Workspaces REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/Quotas": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "The location for which resource usage is queried.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "pattern": "^[-\\w\\._]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorkspaceQuotas"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Quota"
        ],
        "description": "Gets the currently assigned Workspace Quotas based on VMFamily.",
        "operationId": "Quotas_List",
        "x-ms-examples": {
          "List workspace quotas by VMFamily": {
            "$ref": "./examples/ListWorkspaceQuotasByVMFamily.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/updateQuotas": {
      "post": {
        "parameters": [
          {
            "description": "The location for update quota is queried.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "pattern": "^[-\\w\\._]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkspaceQuotasResult"
                }
              }
            },
            "description": "The operation was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Quota"
        ],
        "description": "Update quota for each VM family in workspace.",
        "operationId": "Quotas_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuotaUpdateParameters"
              }
            }
          },
          "description": "Quota update parameters.",
          "required": true
        },
        "x-ms-examples": {
          "update quotas": {
            "$ref": "./examples/updateQuota.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/usages": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "The location for which resource usage is queried.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "pattern": "^[-\\w\\._]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsagesResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Usage"
        ],
        "description": "Gets the current usage information as well as limits for AML resources for given subscription and location.",
        "operationId": "Usages_List",
        "x-ms-examples": {
          "List Usages": {
            "$ref": "./examples/ListUsages.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/locations/{location}/vmSizes": {
      "get": {
        "parameters": [
          {
            "description": "The location upon which virtual-machine-sizes is queried.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "pattern": "^[-\\w\\._]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualMachineSizeListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "VirtualMachineSizes"
        ],
        "description": "Returns supported VM Sizes in a location",
        "operationId": "VirtualMachineSizes_List",
        "x-ms-examples": {
          "List VM Sizes": {
            "$ref": "./examples/ListVMSizesResult.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Get Workspaces by subscription": {
            "$ref": "./examples/getWorkspacesBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkspaceSkus"
        ],
        "description": "Lists all skus with associated features",
        "operationId": "ListSkus",
        "x-ms-examples": {
          "List Skus": {
            "$ref": "./examples/ListSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the available machine learning workspaces under the specified resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "x-ms-examples": {
          "Get Workspaces by Resource Group": {
            "$ref": "./examples/getWorkspacesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was accepted; the request was well-formed and received properly."
          },
          "204": {
            "description": "The machine learning workspace does not exist in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes a machine learning workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-examples": {
          "Delete Workspace": {
            "$ref": "./examples/deleteWorkspace.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the properties of the specified machine learning workspace.",
        "operationId": "Workspaces_Get",
        "x-ms-examples": {
          "Get Workspace": {
            "$ref": "./examples/getWorkspace.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Updates a machine learning workspace with the specified parameters.",
        "operationId": "Workspaces_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdateParameters"
              }
            }
          },
          "description": "The parameters for updating a machine learning workspace.",
          "required": true
        },
        "x-ms-examples": {
          "Update Workspace": {
            "$ref": "./examples/updateWorkspace.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Creates or updates a workspace with the specified parameters.",
        "operationId": "Workspaces_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          },
          "description": "The parameters for creating or updating a machine learning workspace.",
          "required": true
        },
        "x-ms-examples": {
          "Create Workspace": {
            "$ref": "./examples/createWorkspace.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/PaginationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedComputeResourcesList"
                }
              }
            },
            "description": "The response includes a paginated array of Machine Learning computes and a URI to the next set of results, if any. For the more information the limits of the number of items in a resource group, see https://azure.microsoft.com/en-us/documentation/articles/azure-subscription-service-limits/."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the request failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Gets computes in specified workspace.",
        "operationId": "MachineLearningCompute_ListByWorkspace",
        "x-ms-examples": {
          "Get Computes": {
            "$ref": "./examples/getComputes.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/UnderlyingResourceActionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "Compute deletion initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "URI to poll for asynchronous operation result.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the request failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Deletes specified Machine Learning compute.",
        "operationId": "MachineLearningCompute_Delete",
        "x-ms-examples": {
          "Delete Compute": {
            "$ref": "./examples/deleteCompute.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResource"
                }
              }
            },
            "description": "Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the request failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Gets compute definition by its name. Any secrets (storage keys, service credentials, etc) are not returned - use 'keys' nested resource to get them.",
        "operationId": "MachineLearningCompute_Get",
        "x-ms-examples": {
          "Get a AKS Compute": {
            "$ref": "./examples/getAKSCompute.json"
          },
          "Get a AML Compute": {
            "$ref": "./examples/getAmlCompute.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResource"
                }
              }
            },
            "description": "Compute update initiated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the request failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Updates properties of a compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation.",
        "operationId": "MachineLearningCompute_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterUpdateParameters"
              }
            }
          },
          "description": "Additional parameters for cluster update.",
          "required": true
        },
        "x-ms-examples": {
          "Update a AmlCompute Compute": {
            "$ref": "./examples/patchAmlCompute.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResource"
                }
              }
            },
            "description": "Compute creation or update initiated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResource"
                }
              }
            },
            "description": "Compute creation or update initiated.",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for asynchronous operation status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the request failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Creates or updates compute. This call will overwrite a compute if it exists. This is a nonrecoverable operation. If your intent is to create a new compute, do a GET first to verify that it does not exist yet.",
        "operationId": "MachineLearningCompute_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeResource"
              }
            }
          },
          "description": "Payload with Machine Learning compute definition.",
          "required": true
        },
        "x-ms-examples": {
          "Create AKS Compute": {
            "$ref": "./examples/createBasicAKSCompute.json"
          },
          "Create a AML Compute": {
            "$ref": "./examples/createBasicAmlCompute.json"
          },
          "Create a DataFactory Compute": {
            "$ref": "./examples/createBasicDataFactoryCompute.json"
          },
          "Update a AKS Compute": {
            "$ref": "./examples/updateAKSCompute.json"
          },
          "Update a AML Compute": {
            "$ref": "./examples/updateAmlCompute.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeSecrets"
                }
              }
            },
            "description": "Success."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "OperationalizationClusters",
          "MachineLearningComputes"
        ],
        "description": "Gets secrets related to Machine Learning compute (storage keys, service credentials, etc).",
        "operationId": "MachineLearningCompute_ListKeys",
        "x-ms-examples": {
          "List AKS Compute Keys": {
            "$ref": "./examples/listKeysAKSCompute.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/computes/{computeName}/listNodes": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ComputeNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmlComputeNodesInformation"
                }
              }
            },
            "description": "The operation was successful. The response contains the list of IP addresses."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "MachineLearningComputes"
        ],
        "description": "Get the details (e.g IP address, port etc) of all the compute nodes in the compute.",
        "operationId": "MachineLearningCompute_ListNodes",
        "x-ms-examples": {
          "Get compute nodes information for a compute": {
            "$ref": "./examples/amlComputeListNodes.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/features": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAmlUserFeatureResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all enabled features for a workspace",
        "operationId": "WorkspaceFeatures_List",
        "x-ms-examples": {
          "List Workspace features": {
            "$ref": "./examples/ListWorkspaceFeatures.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListWorkspaceKeysResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Lists all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ListKeys",
        "x-ms-examples": {
          "List Workspace Keys": {
            "$ref": "./examples/listWorkspaceKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Delete the private endpoint connection successfully."
          },
          "204": {
            "description": "No Content -- The private endpoint connection does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "description": "Deletes the specified private endpoint connection associated with the workspace.",
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "WorkspaceDeletePrivateEndpointConnection": {
            "$ref": "./examples/workspaceDeletePrivateEndpointConnection.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnection"
                }
              }
            },
            "description": "OK -- Get the private endpoint connection properties successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the workspace.",
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "WorkspaceGetPrivateEndpointConnection": {
            "$ref": "./examples/workspaceGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrivateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnection"
                }
              }
            },
            "description": "OK -- Update the private endpoint connection properties successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkspacePrivateEndpointConnections"
        ],
        "description": "Update the state of specified private endpoint connection associated with the workspace.",
        "operationId": "PrivateEndpointConnections_Put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateEndpointConnection"
              }
            }
          },
          "description": "The private endpoint connection properties.",
          "required": true
        },
        "x-ms-examples": {
          "WorkspacePutPrivateEndpointConnection": {
            "$ref": "./examples/workspacePutPrivateEndpointConnection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/privateLinkResources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkResourceListResult"
                }
              }
            },
            "description": "Successfully retrieved private link resources."
          }
        },
        "tags": [
          "WorkspacePrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a workspace.",
        "operationId": "PrivateLinkResources_ListByWorkspace",
        "x-ms-examples": {
          "WorkspaceListPrivateLinkResources": {
            "$ref": "./examples/workspaceListPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/resyncKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/APIVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/WorkspaceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningServiceError"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Resync all the keys associated with this workspace. This includes keys for the storage account, app insights and password for container registry",
        "operationId": "Workspaces_ResyncKeys",
        "x-ms-examples": {
          "Resync Workspace Keys": {
            "$ref": "./examples/resyncWorkspaceKeys.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "APIVersionParameter": {
        "description": "Version of Azure Machine Learning resource provider API.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "AsyncOperationIdParameter": {
        "description": "Identifier of an asynchronous Azure Machine Learning compute operation.",
        "in": "path",
        "name": "asyncOperationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ComputeNameParameter": {
        "description": "Name of the Azure Machine Learning compute.",
        "in": "path",
        "name": "computeName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ComputeTypeParameter": {
        "description": "Type of compute to filter by.",
        "in": "query",
        "name": "compute-type",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "LocationParameter": {
        "description": "The name of the Azure location/region.",
        "in": "path",
        "name": "location",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "PaginationParameter": {
        "description": "Continuation token for pagination.",
        "in": "query",
        "name": "$skiptoken",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "PrivateEndpointConnectionName": {
        "description": "The name of the private endpoint connection associated with the workspace",
        "in": "path",
        "name": "privateEndpointConnectionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "Name of the resource group in which workspace is located.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Azure subscription identifier.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "UnderlyingResourceActionParameter": {
        "description": "Delete the underlying compute if 'Delete', or detach the underlying compute from workspace if 'Detach'.",
        "in": "query",
        "name": "underlyingResourceAction",
        "required": true,
        "schema": {
          "enum": [
            "Delete",
            "Detach"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "UnderlyingResourceAction"
        },
        "x-ms-parameter-location": "method"
      },
      "WorkspaceNameParameter": {
        "description": "Name of Azure Machine Learning workspace.",
        "in": "path",
        "name": "workspaceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AKS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "description": "AKS properties",
                "properties": {
                  "agentCount": {
                    "description": "Number of agents",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "agentVMSize": {
                    "description": "Agent virtual machine size",
                    "type": "string"
                  },
                  "aksNetworkingConfiguration": {
                    "$ref": "#/components/schemas/AksNetworkingConfiguration",
                    "description": "AKS networking configuration for vnet"
                  },
                  "clusterFqdn": {
                    "description": "Cluster full qualified domain name",
                    "type": "string"
                  },
                  "sslConfiguration": {
                    "$ref": "#/components/schemas/SslConfiguration",
                    "description": "SSL configuration"
                  },
                  "systemServices": {
                    "description": "System services",
                    "items": {
                      "$ref": "#/components/schemas/SystemService"
                    },
                    "readOnly": true,
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "A Machine Learning compute based on AKS.",
        "x-ms-discriminator-value": "AKS"
      },
      "AksComputeSecrets": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ComputeSecrets"
          },
          {
            "properties": {
              "adminKubeConfig": {
                "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster.",
                "type": "string"
              },
              "imagePullSecretName": {
                "description": "Image registry pull secret.",
                "type": "string"
              },
              "userKubeConfig": {
                "description": "Content of kubeconfig file that can be used to connect to the Kubernetes cluster.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Secrets related to a Machine Learning compute based on AKS.",
        "x-ms-discriminator-value": "AKS"
      },
      "AksNetworkingConfiguration": {
        "description": "Advance configuration for AKS networking",
        "properties": {
          "dnsServiceIP": {
            "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
            "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
            "type": "string"
          },
          "dockerBridgeCidr": {
            "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "type": "string"
          },
          "serviceCidr": {
            "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
            "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "type": "string"
          },
          "subnetId": {
            "description": "Virtual network subnet resource ID the compute nodes belong to",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmlCompute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "description": "AML Compute properties",
                "properties": {
                  "allocationState": {
                    "description": "Allocation state of the compute. Possible values are: steady - Indicates that the compute is not resizing. There are no changes to the number of compute nodes in the compute in progress. A compute enters this state when it is created and when no operations are being performed on the compute to change the number of compute nodes. resizing - Indicates that the compute is resizing; that is, compute nodes are being added to or removed from the compute.",
                    "enum": [
                      "Steady",
                      "Resizing"
                    ],
                    "readOnly": true,
                    "title": "Allocation state.",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "AllocationState"
                    }
                  },
                  "allocationStateTransitionTime": {
                    "description": "The time at which the compute entered its current allocation state.",
                    "format": "date-time",
                    "readOnly": true,
                    "title": "Allocation state transition time.",
                    "type": "string"
                  },
                  "currentNodeCount": {
                    "description": "The number of compute nodes currently assigned to the compute.",
                    "format": "int32",
                    "readOnly": true,
                    "title": "Current node count.",
                    "type": "integer"
                  },
                  "errors": {
                    "description": "Collection of errors encountered by various compute nodes during node setup.",
                    "items": {
                      "$ref": "#/components/schemas/MachineLearningServiceError"
                    },
                    "readOnly": true,
                    "title": "Errors.",
                    "type": "array"
                  },
                  "nodeStateCounts": {
                    "$ref": "#/components/schemas/NodeStateCounts",
                    "description": "Counts of various node states on the compute.",
                    "readOnly": true,
                    "title": "Node state counts."
                  },
                  "remoteLoginPortPublicAccess": {
                    "default": "NotSpecified",
                    "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "NotSpecified"
                    ],
                    "title": "Close remote Login Access Port",
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "remoteLoginPortPublicAccess"
                    }
                  },
                  "scaleSettings": {
                    "$ref": "#/components/schemas/ScaleSettings",
                    "description": "Scale settings for AML Compute"
                  },
                  "subnet": {
                    "$ref": "#/components/schemas/ResourceId",
                    "description": "Virtual network subnet resource ID the compute nodes belong to.",
                    "title": "Subnet."
                  },
                  "targetNodeCount": {
                    "description": "The target number of compute nodes for the compute. If the allocationState is resizing, this property denotes the target node count for the ongoing resize operation. If the allocationState is steady, this property denotes the target node count for the previous resize operation.",
                    "format": "int32",
                    "readOnly": true,
                    "title": "Target node count.",
                    "type": "integer"
                  },
                  "userAccountCredentials": {
                    "$ref": "#/components/schemas/UserAccountCredentials",
                    "description": "Credentials for an administrator user account that will be created on each compute node.",
                    "title": "User account credentials."
                  },
                  "vmPriority": {
                    "description": "Virtual Machine priority",
                    "enum": [
                      "Dedicated",
                      "LowPriority"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "VmPriority"
                    }
                  },
                  "vmSize": {
                    "description": "Virtual Machine Size",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "An Azure Machine Learning compute.",
        "x-ms-discriminator-value": "AmlCompute"
      },
      "AmlComputeNodeInformation": {
        "description": "Compute node information related to a AmlCompute.",
        "properties": {
          "nodeId": {
            "description": "ID of the compute node.",
            "readOnly": true,
            "title": "Node ID.",
            "type": "string"
          },
          "nodeState": {
            "description": "State of the compute node. Values are idle, running, preparing, unusable, leaving and preempted.",
            "enum": [
              "idle",
              "running",
              "preparing",
              "unusable",
              "leaving",
              "preempted"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "nodeState"
            }
          },
          "port": {
            "description": "SSH port number of the node.",
            "format": "int32",
            "readOnly": true,
            "title": "Port.",
            "type": "number"
          },
          "privateIpAddress": {
            "description": "Private IP address of the compute node.",
            "readOnly": true,
            "title": "Private IP address.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "Public IP address of the compute node.",
            "readOnly": true,
            "title": "Public IP address.",
            "type": "string"
          },
          "runId": {
            "description": "ID of the Experiment running on the node, if any else null.",
            "readOnly": true,
            "title": "Run ID.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AmlCompute"
      },
      "AmlComputeNodesInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ComputeNodesInformation"
          },
          {
            "properties": {
              "nodes": {
                "description": "The collection of returned AmlCompute nodes details.",
                "items": {
                  "$ref": "#/components/schemas/AmlComputeNodeInformation"
                },
                "readOnly": true,
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Compute node information related to a AmlCompute.",
        "x-ms-discriminator-value": "AmlCompute"
      },
      "AmlUserFeature": {
        "description": "Features enabled for a workspace",
        "properties": {
          "description": {
            "description": "Describes the feature for user experience",
            "type": "string"
          },
          "displayName": {
            "description": "Specifies the feature name ",
            "type": "string"
          },
          "id": {
            "description": "Specifies the feature ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterUpdateParameters": {
        "description": "AmlCompute update parameters.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ClusterUpdateProperties",
            "description": "The properties of the amlCompute.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ClusterUpdateProperties": {
        "description": "The properties of a amlCompute that need to be updated.",
        "properties": {
          "scaleSettings": {
            "$ref": "#/components/schemas/ScaleSettings",
            "description": "Desired scale settings for the amlCompute.",
            "title": "Scale settings."
          }
        },
        "type": "object"
      },
      "Compute": {
        "description": "Machine Learning compute object.",
        "discriminator": {
          "propertyName": "computeType"
        },
        "properties": {
          "computeLocation": {
            "description": "Location for the underlying compute",
            "type": "string"
          },
          "computeType": {
            "$ref": "#/components/schemas/ComputeType",
            "description": "The type of compute"
          },
          "createdOn": {
            "description": "The date and time when the compute was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the Machine Learning compute.",
            "type": "string"
          },
          "isAttachedCompute": {
            "description": "Indicating whether the compute was provisioned by user and brought from outside if true, or machine learning service provisioned it if false.",
            "readOnly": true,
            "type": "boolean"
          },
          "modifiedOn": {
            "description": "The date and time when the compute was last modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningErrors": {
            "description": "Errors during provisioning",
            "items": {
              "$ref": "#/components/schemas/MachineLearningServiceError"
            },
            "readOnly": true,
            "type": "array"
          },
          "provisioningState": {
            "description": "The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.",
            "enum": [
              "Unknown",
              "Updating",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "resourceId": {
            "description": "ARM resource id of the underlying compute",
            "type": "string"
          }
        },
        "required": [
          "computeType"
        ],
        "type": "object"
      },
      "ComputeNodesInformation": {
        "description": "Compute nodes information related to a Machine Learning compute. Might differ for every type of compute.",
        "discriminator": {
          "propertyName": "computeType"
        },
        "properties": {
          "computeType": {
            "$ref": "#/components/schemas/ComputeType",
            "description": "The type of compute"
          },
          "nextLink": {
            "description": "The continuation token.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "computeType"
        ],
        "type": "object"
      },
      "ComputeResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "properties": {
              "properties": {
                "$ref": "#/components/schemas/Compute",
                "description": "Compute properties"
              }
            },
            "type": "object"
          }
        ],
        "description": "Machine Learning compute object wrapped into ARM resource envelope.",
        "type": "object"
      },
      "ComputeSecrets": {
        "description": "Secrets related to a Machine Learning compute. Might differ for every type of compute.",
        "discriminator": {
          "propertyName": "computeType"
        },
        "properties": {
          "computeType": {
            "$ref": "#/components/schemas/ComputeType",
            "description": "The type of compute"
          }
        },
        "required": [
          "computeType"
        ],
        "type": "object"
      },
      "ComputeType": {
        "description": "The type of compute",
        "enum": [
          "AKS",
          "AmlCompute",
          "DataFactory",
          "VirtualMachine",
          "HDInsight",
          "Databricks",
          "DataLakeAnalytics"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ComputeType"
        }
      },
      "DataFactory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          }
        ],
        "description": "A DataFactory compute.",
        "x-ms-discriminator-value": "DataFactory"
      },
      "DataLakeAnalytics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "properties": {
                  "dataLakeStoreAccountName": {
                    "description": "DataLake Store Account Name",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "A DataLakeAnalytics compute.",
        "x-ms-discriminator-value": "DataLakeAnalytics"
      },
      "Databricks": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "properties": {
                  "databricksAccessToken": {
                    "description": "Databricks access token",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "A DataFactory compute.",
        "x-ms-discriminator-value": "Databricks"
      },
      "DatabricksComputeSecrets": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ComputeSecrets"
          },
          {
            "properties": {
              "databricksAccessToken": {
                "description": "access token for databricks account.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Secrets related to a Machine Learning compute based on Databricks.",
        "x-ms-discriminator-value": "Databricks"
      },
      "EncryptionProperty": {
        "properties": {
          "keyVaultProperties": {
            "$ref": "#/components/schemas/KeyVaultProperties",
            "description": "Customer Key vault properties."
          },
          "status": {
            "description": "Indicates whether or not the encryption is enabled for the workspace.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EncryptionStatus"
            }
          }
        },
        "required": [
          "status",
          "keyVaultProperties"
        ],
        "type": "object"
      },
      "ErrorDetail": {
        "description": "Error detail information.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response information.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "An array of error detail objects.",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "readOnly": true,
            "type": "array"
          },
          "message": {
            "description": "Error message.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HDInsight": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "properties": {
                  "address": {
                    "description": "Public IP address of the master node of the cluster.",
                    "type": "string"
                  },
                  "administratorAccount": {
                    "$ref": "#/components/schemas/VirtualMachineSshCredentials",
                    "description": "Admin credentials for master node of the cluster"
                  },
                  "sshPort": {
                    "description": "Port open for ssh connections on the master node of the cluster.",
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "A HDInsight compute.",
        "x-ms-discriminator-value": "HDInsight"
      },
      "Identity": {
        "description": "Identity for the resource.",
        "properties": {
          "principalId": {
            "description": "The principal ID of resource identity.",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant ID of resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type.",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ResourceIdentityType"
            }
          }
        },
        "type": "object"
      },
      "KeyVaultProperties": {
        "properties": {
          "identityClientId": {
            "description": "For future use - The client id of the identity which will be used to access key vault.",
            "type": "string"
          },
          "keyIdentifier": {
            "description": "Key vault uri to access the encryption key.",
            "type": "string"
          },
          "keyVaultArmId": {
            "description": "The ArmId of the keyVault where the customer owned encryption key is present.",
            "type": "string"
          }
        },
        "required": [
          "keyIdentifier",
          "keyVaultArmId"
        ],
        "type": "object"
      },
      "ListAmlUserFeatureResult": {
        "description": "The List Aml user feature operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of AML user features information. Call ListNext() with this to fetch the next page of AML user features information.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of AML user facing features.",
            "items": {
              "$ref": "#/components/schemas/AmlUserFeature"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListUsagesResult": {
        "description": "The List Usages operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of AML resource usage information. Call ListNext() with this to fetch the next page of AML resource usage information.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of AML resource usages.",
            "items": {
              "$ref": "#/components/schemas/Usage"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListWorkspaceKeysResult": {
        "properties": {
          "appInsightsInstrumentationKey": {
            "readOnly": true,
            "type": "string"
          },
          "containerRegistryCredentials": {
            "$ref": "#/components/schemas/RegistryListCredentialsResult",
            "readOnly": true
          },
          "userStorageKey": {
            "readOnly": true,
            "type": "string"
          },
          "userStorageResourceId": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListWorkspaceQuotas": {
        "description": "The List WorkspaceQuotasByVMFamily operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of workspace quota information by VM Family. Call ListNext() with this to fetch the next page of Workspace Quota information.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of Workspace Quotas by VM Family",
            "items": {
              "$ref": "#/components/schemas/ResourceQuota"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MachineLearningServiceError": {
        "description": "Wrapper for error response to follow ARM guidelines.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorResponse",
            "description": "The error response.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "NodeStateCounts": {
        "description": "Counts of various compute node states on the amlCompute.",
        "properties": {
          "idleNodeCount": {
            "description": "Number of compute nodes in idle state.",
            "format": "int32",
            "readOnly": true,
            "title": "Idle node count.",
            "type": "integer"
          },
          "leavingNodeCount": {
            "description": "Number of compute nodes which are leaving the amlCompute.",
            "format": "int32",
            "readOnly": true,
            "title": "Leaving node count.",
            "type": "integer"
          },
          "preemptedNodeCount": {
            "description": "Number of compute nodes which are in preempted state.",
            "format": "int32",
            "readOnly": true,
            "title": "Preempted node count.",
            "type": "integer"
          },
          "preparingNodeCount": {
            "description": "Number of compute nodes which are being prepared.",
            "format": "int32",
            "readOnly": true,
            "title": "Preparing node count.",
            "type": "integer"
          },
          "runningNodeCount": {
            "description": "Number of compute nodes which are running jobs.",
            "format": "int32",
            "readOnly": true,
            "title": "Running node count.",
            "type": "integer"
          },
          "unusableNodeCount": {
            "description": "Number of compute nodes which are in unusable state.",
            "format": "int32",
            "readOnly": true,
            "title": "Unusable node count.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "Azure Machine Learning workspace REST API operation",
        "properties": {
          "display": {
            "description": "Display name of operation",
            "properties": {
              "description": {
                "description": "The description for the operation.",
                "type": "string"
              },
              "operation": {
                "description": "The operation that users can perform.",
                "type": "string"
              },
              "provider": {
                "description": "The resource provider name: Microsoft.MachineLearningExperimentation",
                "type": "string"
              },
              "resource": {
                "description": "The resource on which the operation is performed.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "An array of operations supported by the resource provider.",
        "properties": {
          "value": {
            "description": "List of AML workspace operations supported by the AML workspace resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedComputeResourcesList": {
        "description": "Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.",
        "properties": {
          "nextLink": {
            "description": "A continuation link (absolute URI) to the next page of results in the list.",
            "type": "string"
          },
          "value": {
            "description": "An array of Machine Learning compute objects wrapped in ARM resource envelope.",
            "items": {
              "$ref": "#/components/schemas/ComputeResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Password": {
        "properties": {
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateEndpoint": {
        "description": "The Private Endpoint resource.",
        "properties": {
          "id": {
            "description": "The ARM identifier for Private Endpoint",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateEndpointConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The Private Endpoint Connection resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PrivateEndpointConnectionProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PrivateEndpointConnectionProperties": {
        "description": "Properties of the PrivateEndpointConnectProperties.",
        "properties": {
          "privateEndpoint": {
            "$ref": "#/components/schemas/PrivateEndpoint",
            "description": "The resource of private end point."
          },
          "privateLinkServiceConnectionState": {
            "$ref": "#/components/schemas/PrivateLinkServiceConnectionState",
            "description": "A collection of information about the state of the connection between service consumer and provider."
          },
          "provisioningState": {
            "$ref": "#/components/schemas/PrivateEndpointConnectionProvisioningState",
            "description": "The provisioning state of the private endpoint connection resource."
          }
        },
        "required": [
          "privateLinkServiceConnectionState"
        ],
        "type": "object"
      },
      "PrivateEndpointConnectionProvisioningState": {
        "description": "The current provisioning state.",
        "enum": [
          "Succeeded",
          "Creating",
          "Deleting",
          "Failed"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "PrivateEndpointConnectionProvisioningState"
        }
      },
      "PrivateEndpointServiceConnectionStatus": {
        "description": "The private endpoint connection status.",
        "enum": [
          "Pending",
          "Approved",
          "Rejected"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "PrivateEndpointServiceConnectionStatus"
        }
      },
      "PrivateLinkResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A private link resource",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PrivateLinkResourceProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PrivateLinkResourceListResult": {
        "description": "A list of private link resources",
        "properties": {
          "value": {
            "description": "Array of private link resources",
            "items": {
              "$ref": "#/components/schemas/PrivateLinkResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateLinkResourceProperties": {
        "description": "Properties of a private link resource.",
        "properties": {
          "groupId": {
            "description": "The private link resource group id.",
            "readOnly": true,
            "type": "string"
          },
          "requiredMembers": {
            "description": "The private link resource required member names.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "requiredZoneNames": {
            "description": "The private link resource Private link DNS zone name.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateLinkServiceConnectionState": {
        "description": "A collection of information about the state of the connection between service consumer and provider.",
        "properties": {
          "actionRequired": {
            "description": "A message indicating if changes on the service provider require any updates on the consumer.",
            "type": "string"
          },
          "description": {
            "description": "The reason for approval/rejection of the connection.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/PrivateEndpointServiceConnectionStatus",
            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
          }
        },
        "type": "object"
      },
      "QuotaBaseProperties": {
        "description": "The properties for Quota update or retrieval.",
        "properties": {
          "id": {
            "description": "Specifies the resource ID.",
            "type": "string"
          },
          "limit": {
            "description": "The maximum permitted quota of the resource.",
            "format": "int64",
            "title": "Limit.",
            "type": "integer"
          },
          "type": {
            "description": "Specifies the resource type.",
            "type": "string"
          },
          "unit": {
            "description": "An enum describing the unit of quota measurement.",
            "enum": [
              "Count"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "QuotaUnit"
            }
          }
        },
        "type": "object"
      },
      "QuotaUpdateParameters": {
        "description": "Quota update parameters.",
        "properties": {
          "value": {
            "description": "The list for update quota.",
            "items": {
              "$ref": "#/components/schemas/QuotaBaseProperties"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RegistryListCredentialsResult": {
        "properties": {
          "location": {
            "readOnly": true,
            "type": "string"
          },
          "passwords": {
            "items": {
              "$ref": "#/components/schemas/Password"
            },
            "type": "array"
          },
          "username": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "Azure Resource Manager resource envelope.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Contains resource tags defined as key/value pairs.",
            "type": "object"
          },
          "id": {
            "description": "Specifies the resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the resource."
          },
          "location": {
            "description": "Specifies the location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "Specifies the name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the workspace."
          },
          "type": {
            "description": "Specifies the type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceId": {
        "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
        "properties": {
          "id": {
            "description": "The ID of the resource",
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceName": {
        "description": "The Resource Name.",
        "properties": {
          "localizedValue": {
            "description": "The localized name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceQuota": {
        "description": "The quota assigned to a resource.",
        "properties": {
          "id": {
            "description": "Specifies the resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "limit": {
            "description": "The maximum permitted quota of the resource.",
            "format": "int64",
            "readOnly": true,
            "title": "Limit.",
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/ResourceName",
            "description": "Name of the resource.",
            "readOnly": true
          },
          "type": {
            "description": "Specifies the resource type.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "An enum describing the unit of quota measurement.",
            "enum": [
              "Count"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "QuotaUnit"
            }
          }
        },
        "type": "object"
      },
      "ResourceSkuLocationInfo": {
        "properties": {
          "location": {
            "description": "Location of the SKU",
            "readOnly": true,
            "type": "string"
          },
          "zoneDetails": {
            "description": "Details of capabilities available to a SKU in specific zones.",
            "items": {
              "$ref": "#/components/schemas/ResourceSkuZoneDetails"
            },
            "readOnly": true,
            "type": "array"
          },
          "zones": {
            "description": "List of availability zones where the SKU is supported.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceSkuZoneDetails": {
        "description": "Describes The zonal capabilities of a SKU.",
        "properties": {
          "capabilities": {
            "description": "A list of capabilities that are available for the SKU in the specified list of zones.",
            "items": {
              "$ref": "#/components/schemas/SKUCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "The set of zones that the SKU is available in with the specified capabilities.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Restriction": {
        "description": "The restriction because of which SKU cannot be used.",
        "properties": {
          "reasonCode": {
            "description": "The reason for the restriction.",
            "enum": [
              "NotSpecified",
              "NotAvailableForRegion",
              "NotAvailableForSubscription"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ReasonCode"
            }
          },
          "type": {
            "description": "The type of restrictions. As of now only possible value for this is location.",
            "readOnly": true,
            "type": "string"
          },
          "values": {
            "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SKUCapability": {
        "description": "Features/user capabilities associated with the sku",
        "properties": {
          "name": {
            "description": "Capability/Feature ID",
            "type": "string"
          },
          "value": {
            "description": "Details about the feature/capability",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScaleSettings": {
        "description": "scale settings for AML Compute",
        "properties": {
          "maxNodeCount": {
            "description": "Max number of nodes to use",
            "type": "integer"
          },
          "minNodeCount": {
            "default": 0,
            "description": "Min number of nodes to use",
            "type": "integer"
          },
          "nodeIdleTimeBeforeScaleDown": {
            "description": "Node Idle Time before scaling down amlCompute",
            "format": "duration",
            "type": "string"
          }
        },
        "required": [
          "maxNodeCount"
        ],
        "type": "object"
      },
      "ServicePrincipalCredentials": {
        "description": "Service principal credentials.",
        "properties": {
          "clientId": {
            "description": "Client Id",
            "type": "string"
          },
          "clientSecret": {
            "description": "Client secret",
            "type": "string"
          }
        },
        "required": [
          "clientId",
          "clientSecret"
        ],
        "type": "object"
      },
      "Sku": {
        "description": "Sku of the resource",
        "properties": {
          "name": {
            "description": "Name of the sku",
            "type": "string"
          },
          "tier": {
            "description": "Tier of the sku like Basic or Enterprise",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SkuListResult": {
        "description": "List of skus with features",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of Workspace Skus. Call ListNext() with this URI to fetch the next page of Workspace Skus",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceSku"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "SslConfiguration": {
        "description": "The ssl configuration for scoring",
        "properties": {
          "cert": {
            "description": "Cert data",
            "type": "string"
          },
          "cname": {
            "description": "CNAME of the cert",
            "type": "string"
          },
          "key": {
            "description": "Key data",
            "type": "string"
          },
          "status": {
            "description": "Enable or disable ssl for scoring",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "SystemService": {
        "description": "A system service running on a compute.",
        "properties": {
          "publicIpAddress": {
            "description": "Public IP address",
            "readOnly": true,
            "type": "string"
          },
          "systemServiceType": {
            "description": "The type of this system service.",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "description": "The version for this type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateWorkspaceQuotas": {
        "description": "The properties for update Quota response.",
        "properties": {
          "id": {
            "description": "Specifies the resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "limit": {
            "description": "The maximum permitted quota of the resource.",
            "format": "int64",
            "title": "Limit.",
            "type": "integer"
          },
          "status": {
            "description": "Status of update workspace quota.",
            "enum": [
              "Undefined",
              "Success",
              "Failure",
              "InvalidQuotaBelowClusterMinimum",
              "InvalidQuotaExceedsSubscriptionLimit",
              "InvalidVMFamilyName",
              "OperationNotSupportedForSku",
              "OperationNotEnabledForRegion"
            ],
            "readOnly": false,
            "title": "Update Workspace Quota Status.",
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "status"
            }
          },
          "type": {
            "description": "Specifies the resource type.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "An enum describing the unit of quota measurement.",
            "enum": [
              "Count"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "QuotaUnit"
            }
          }
        },
        "type": "object"
      },
      "UpdateWorkspaceQuotasResult": {
        "description": "The result of update workspace quota.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of workspace quota update result. Call ListNext() with this to fetch the next page of Workspace Quota update result.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of workspace quota update result.",
            "items": {
              "$ref": "#/components/schemas/UpdateWorkspaceQuotas"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Usage": {
        "description": "Describes AML Resource Usage.",
        "properties": {
          "currentValue": {
            "description": "The current usage of the resource.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "id": {
            "description": "Specifies the resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "limit": {
            "description": "The maximum permitted usage of the resource.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/UsageName",
            "description": "The name of the type of usage.",
            "readOnly": true
          },
          "type": {
            "description": "Specifies the resource type.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "An enum describing the unit of usage measurement.",
            "enum": [
              "Count"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "UsageUnit"
            }
          }
        },
        "type": "object"
      },
      "UsageName": {
        "description": "The Usage Names.",
        "properties": {
          "localizedValue": {
            "description": "The localized name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAccountCredentials": {
        "description": "Settings for user account that gets created on each on the nodes of a compute.",
        "properties": {
          "adminUserName": {
            "description": "Name of the administrator user account which can be used to SSH to nodes.",
            "title": "User name.",
            "type": "string"
          },
          "adminUserPassword": {
            "description": "Password of the administrator user account.",
            "title": "Password.",
            "type": "string"
          },
          "adminUserSshPublicKey": {
            "description": "SSH public key of the administrator user account.",
            "title": "SSH public key.",
            "type": "string"
          }
        },
        "required": [
          "adminUserName"
        ],
        "type": "object"
      },
      "VirtualMachine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Compute"
          },
          {
            "properties": {
              "properties": {
                "properties": {
                  "address": {
                    "description": "Public IP address of the virtual machine.",
                    "type": "string"
                  },
                  "administratorAccount": {
                    "$ref": "#/components/schemas/VirtualMachineSshCredentials",
                    "description": "Admin credentials for virtual machine"
                  },
                  "sshPort": {
                    "description": "Port open for ssh connections.",
                    "type": "integer"
                  },
                  "virtualMachineSize": {
                    "description": "Virtual Machine size",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "description": "A Machine Learning compute based on Azure Virtual Machines.",
        "x-ms-discriminator-value": "VirtualMachine"
      },
      "VirtualMachineSecrets": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ComputeSecrets"
          },
          {
            "properties": {
              "administratorAccount": {
                "$ref": "#/components/schemas/VirtualMachineSshCredentials",
                "description": "Admin credentials for virtual machine."
              }
            },
            "type": "object"
          }
        ],
        "description": "Secrets related to a Machine Learning compute based on AKS.",
        "x-ms-discriminator-value": "VirtualMachine"
      },
      "VirtualMachineSize": {
        "description": "Describes the properties of a VM size.",
        "properties": {
          "family": {
            "description": "The family name of the virtual machine size.",
            "readOnly": true,
            "title": "Virtual Machine family name",
            "type": "string"
          },
          "gpus": {
            "description": "The number of gPUs supported by the virtual machine size.",
            "format": "int32",
            "readOnly": true,
            "title": "Number of gPUs",
            "type": "integer"
          },
          "lowPriorityCapable": {
            "description": "Specifies if the virtual machine size supports low priority VMs.",
            "readOnly": true,
            "title": "Low priority capable",
            "type": "boolean"
          },
          "maxResourceVolumeMB": {
            "description": "The resource volume size, in MB, allowed by the virtual machine size.",
            "format": "int32",
            "readOnly": true,
            "title": "Resource volume size",
            "type": "integer"
          },
          "memoryGB": {
            "description": "The amount of memory, in GB, supported by the virtual machine size.",
            "format": "double",
            "readOnly": true,
            "title": "Memory size",
            "type": "number"
          },
          "name": {
            "description": "The name of the virtual machine size.",
            "readOnly": true,
            "title": "Virtual Machine size name",
            "type": "string"
          },
          "osVhdSizeMB": {
            "description": "The OS VHD disk size, in MB, allowed by the virtual machine size.",
            "format": "int32",
            "readOnly": true,
            "title": "OS VHD Disk size",
            "type": "integer"
          },
          "premiumIO": {
            "description": "Specifies if the virtual machine size supports premium IO.",
            "readOnly": true,
            "title": "Premium IO supported",
            "type": "boolean"
          },
          "vCPUs": {
            "description": "The number of vCPUs supported by the virtual machine size.",
            "format": "int32",
            "readOnly": true,
            "title": "Number of vPUs",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VirtualMachineSizeListResult": {
        "description": "The List Virtual Machine size operation response.",
        "properties": {
          "amlCompute": {
            "description": "The list of virtual machine sizes supported by AmlCompute.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineSize"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualMachineSshCredentials": {
        "description": "Admin credentials for virtual machine",
        "properties": {
          "password": {
            "description": "Password of admin account",
            "type": "string"
          },
          "privateKeyData": {
            "description": "Private key data",
            "type": "string"
          },
          "publicKeyData": {
            "description": "Public key data",
            "type": "string"
          },
          "username": {
            "description": "Username of admin account",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Workspace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An object that represents a machine learning workspace.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkspaceProperties",
            "description": "The properties of the machine learning workspace.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkspaceListResult": {
        "description": "The result of a request to list machine learning workspaces.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next list of machine learning workspaces.",
            "type": "string"
          },
          "value": {
            "description": "The list of machine learning workspaces. Since this list may be incomplete, the nextLink field should be used to request the next list of machine learning workspaces.",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkspaceProperties": {
        "description": "The properties of a machine learning workspace.",
        "properties": {
          "applicationInsights": {
            "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created",
            "type": "string"
          },
          "containerRegistry": {
            "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created",
            "type": "string"
          },
          "creationTime": {
            "description": "The creation time of the machine learning workspace in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of this workspace.",
            "type": "string"
          },
          "discoveryUrl": {
            "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
            "type": "string"
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionProperty",
            "description": "The encryption settings of Azure ML workspace."
          },
          "friendlyName": {
            "description": "The friendly name for this workspace. This name in mutable",
            "type": "string"
          },
          "hbiWorkspace": {
            "default": false,
            "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
            "type": "boolean"
          },
          "keyVault": {
            "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
            "type": "string"
          },
          "provisioningState": {
            "description": "The current deployment state of workspace resource. The provisioningState is to indicate states for resource provisioning.",
            "enum": [
              "Unknown",
              "Updating",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "serviceProvisionedResourceGroup": {
            "description": "The name of the managed resource group created by workspace RP in customer subscription if the workspace is CMK workspace",
            "readOnly": true,
            "type": "string"
          },
          "storageAccount": {
            "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
            "type": "string"
          },
          "workspaceId": {
            "description": "The immutable id associated with this workspace.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkspacePropertiesUpdateParameters": {
        "description": "The parameters for updating the properties of a machine learning workspace.",
        "properties": {
          "description": {
            "description": "The description of this workspace.",
            "type": "string"
          },
          "friendlyName": {
            "description": "The friendly name for this workspace.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkspaceSku": {
        "description": "Describes Workspace Sku details and features",
        "properties": {
          "capabilities": {
            "description": "List of features/user capabilities associated with the sku",
            "items": {
              "$ref": "#/components/schemas/SKUCapability"
            },
            "readOnly": true,
            "type": "array",
            "uniqueItems": false
          },
          "locationInfo": {
            "description": "A list of locations and availability zones in those locations where the SKU is available.",
            "items": {
              "$ref": "#/components/schemas/ResourceSkuLocationInfo"
            },
            "readOnly": true,
            "type": "array"
          },
          "locations": {
            "description": "The set of locations that the SKU is available. This will be supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.).",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "readOnly": true,
            "type": "string"
          },
          "resourceType": {
            "readOnly": true,
            "type": "string"
          },
          "restrictions": {
            "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
            "items": {
              "$ref": "#/components/schemas/Restriction"
            },
            "type": "array"
          },
          "tier": {
            "description": "Sku Tier like Basic or Enterprise",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkspaceUpdateParameters": {
        "description": "The parameters for updating a machine learning workspace.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags for the machine learning workspace.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkspacePropertiesUpdateParameters",
            "description": "The properties that the machine learning workspace will be updated with.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the workspace."
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}