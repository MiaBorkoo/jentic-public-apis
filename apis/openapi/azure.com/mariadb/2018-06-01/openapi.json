{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MariaDB resources including servers, databases, firewall rules, VNET rules, log files and configurations with new business model.",
    "title": "MariaDBManagementClient",
    "version": "2018-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/mariadb/resource-manager/Microsoft.DBforMariaDB/preview/2018-06-01-privatepreview/mariadb.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DBforMariaDB/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameAvailability"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "CheckNameAvailability"
        ],
        "description": "Check the availability of name for resource",
        "operationId": "CheckNameAvailability_Execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameAvailabilityRequest"
              }
            }
          },
          "description": "The required parameters for checking if resource name is available.",
          "required": true
        },
        "x-ms-examples": {
          "NameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/performanceTiers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceTierListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "LocationBasedPerformanceTier"
        ],
        "description": "List all the performance tiers at specified location in a given subscription.",
        "operationId": "LocationBasedPerformanceTier_List",
        "x-ms-examples": {
          "PerformanceTiersList": {
            "$ref": "./examples/PerformanceTiersListByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsAzureAsyncOperation/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationNameParameter"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendedActionSessionsOperationStatus"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "LocationBasedRecommendedActionSessionsOperationStatus"
        ],
        "description": "Recommendation action session operation status.",
        "operationId": "LocationBasedRecommendedActionSessionsOperationStatus_Get",
        "x-ms-examples": {
          "RecommendedActionSessionOperationStatus": {
            "$ref": "./examples/RecommendedActionSessionOperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/locations/{locationName}/recommendedActionSessionsOperationResults/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationNameParameter"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationActionsResultList"
                }
              }
            },
            "description": "Created"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationActionsResultList"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "LocationBasedRecommendedActionSessionsResult"
        ],
        "description": "Recommendation action session operation result.",
        "operationId": "LocationBasedRecommendedActionSessionsResult_List",
        "x-ms-examples": {
          "RecommendedActionSessionResult": {
            "$ref": "./examples/RecommendedActionSessionResult.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforMariaDB/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given subscription.",
        "operationId": "Servers_List",
        "x-ms-examples": {
          "ServerList": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given resource group.",
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "ServerListByResourceGroup": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Deletes a server.",
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "ServerDelete": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Gets information about a server.",
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "ServerGet": {
            "$ref": "./examples/ServerGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "operationId": "Servers_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerUpdateParameters"
              }
            }
          },
          "description": "The required parameters for updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "ServerUpdate": {
            "$ref": "./examples/ServerUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Creates a new server or updates an existing server. The update action will overwrite the existing server.",
        "operationId": "Servers_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerForCreate"
              }
            }
          },
          "description": "The required parameters for creating or updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "Create a database as a point in time restore": {
            "$ref": "./examples/ServerCreatePointInTimeRestore.json"
          },
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a replica server": {
            "$ref": "./examples/ServerCreateReplicaMode.json"
          },
          "Create a server as a geo restore ": {
            "$ref": "./examples/ServerCreateGeoRestoreMode.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvisorsResultList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Advisors"
        ],
        "description": "List recommendation action advisors.",
        "operationId": "Advisors_ListByServer",
        "x-ms-examples": {
          "AdvisorsListByServer": {
            "$ref": "./examples/AdvisorsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/AdvisorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advisor"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Advisors"
        ],
        "description": "Get a recommendation action advisor.",
        "operationId": "Advisors_Get",
        "x-ms-examples": {
          "AdvisorsGet": {
            "$ref": "./examples/AdvisorsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/createRecommendedActionSession": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/AdvisorNameParameter"
          },
          {
            "description": "The name of the database.",
            "in": "query",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "RecommendedActionSessions"
        ],
        "description": "Create recommendation action session for the advisor.",
        "operationId": "CreateRecommendedActionSession",
        "x-ms-examples": {
          "RecommendedActionSessionCreate": {
            "$ref": "./examples/RecommendedActionSessionCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/AdvisorNameParameter"
          },
          {
            "description": "The recommendation action session identifier.",
            "in": "query",
            "name": "sessionId",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationActionsResultList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "RecommendedActions"
        ],
        "description": "Retrieve recommended actions from the advisor.",
        "operationId": "RecommendedActions_ListByServer",
        "x-ms-examples": {
          "RecommendedActionsListByServer": {
            "$ref": "./examples/RecommendedActionsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/AdvisorNameParameter"
          },
          {
            "$ref": "#/components/parameters/RecommendedActionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationAction"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "RecommendedActions"
        ],
        "description": "Retrieve recommended actions from the advisor.",
        "operationId": "RecommendedActions_Get",
        "x-ms-examples": {
          "RecommendedActionsGet": {
            "$ref": "./examples/RecommendedActionsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "List all the configurations in a given server.",
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "ConfigurationList": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/configurations/{configurationName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "Gets information about a configuration of server.",
        "operationId": "Configurations_Get",
        "x-ms-examples": {
          "ConfigurationGet": {
            "$ref": "./examples/ConfigurationGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "Updates a configuration of a server.",
        "operationId": "Configurations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Configuration"
              }
            }
          },
          "description": "The required parameters for updating a server configuration.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationCreateOrUpdate": {
            "$ref": "./examples/ConfigurationCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "List all the databases in a given server.",
        "operationId": "Databases_ListByServer",
        "x-ms-examples": {
          "DatabaseList": {
            "$ref": "./examples/DatabaseListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/databases/{databaseName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Deletes a database.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "DatabaseDelete": {
            "$ref": "./examples/DatabaseDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Gets information about a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "DatabaseGet": {
            "$ref": "./examples/DatabaseGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Creates a new database or updates an existing database.",
        "operationId": "Databases_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Database"
              }
            }
          },
          "description": "The required parameters for creating or updating a database.",
          "required": true
        },
        "x-ms-examples": {
          "DatabaseCreate": {
            "$ref": "./examples/DatabaseCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRuleListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given server.",
        "operationId": "FirewallRules_ListByServer",
        "x-ms-examples": {
          "FirewallRuleList": {
            "$ref": "./examples/FirewallRuleListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/firewallRules/{firewallRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a server firewall rule.",
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "FirewallRuleDelete": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a server firewall rule.",
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "FirewallRuleGet": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "operationId": "FirewallRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirewallRule"
              }
            }
          },
          "description": "The required parameters for creating or updating a firewall rule.",
          "required": true
        },
        "x-ms-examples": {
          "FirewallRuleCreate": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/logFiles": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogFileListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "LogFiles"
        ],
        "description": "List all the log files in a given server.",
        "operationId": "LogFiles_ListByServer",
        "x-ms-examples": {
          "LogFileList": {
            "$ref": "./examples/LogFileListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The query identifiers",
            "explode": true,
            "in": "query",
            "name": "queryIds",
            "required": true,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTextsResultList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "QueryTexts"
        ],
        "description": "Retrieve the Query-Store query texts for specified queryIds.",
        "operationId": "QueryTexts_ListByServer",
        "x-ms-examples": {
          "QueryTextsListByServer": {
            "$ref": "./examples/QueryTextsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/queryTexts/{queryId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/QueryIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryText"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "QueryTexts"
        ],
        "description": "Retrieve the Query-Store query texts for the queryId.",
        "operationId": "QueryTexts_Get",
        "x-ms-examples": {
          "QueryTextsGet": {
            "$ref": "./examples/QueryTextsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/replicas": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Replicas"
        ],
        "description": "List all the replicas for a given server.",
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "ReplicasListByServer": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/restart": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerRestart"
        ],
        "description": "Restarts a server.",
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "ServerRestart": {
            "$ref": "./examples/ServerRestart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the security alert policy.",
            "in": "path",
            "name": "securityAlertPolicyName",
            "required": true,
            "schema": {
              "enum": [
                "Default"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityAlertPolicyName"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSecurityAlertPolicy"
                }
              }
            },
            "description": "Successfully retrieved the server threat detection policy."
          },
          "default": {
            "description": "Error response describing why the operation of getting security alert policies failed."
          }
        },
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Get a server's security alert policy.",
        "operationId": "ServerSecurityAlertPolicies_Get",
        "x-ms-examples": {
          "Get a server's threat detection policy": {
            "$ref": "./examples/ServerSecurityAlertsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the threat detection policy.",
            "in": "path",
            "name": "securityAlertPolicyName",
            "required": true,
            "schema": {
              "enum": [
                "Default"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecurityAlertPolicyName"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerSecurityAlertPolicy"
                }
              }
            },
            "description": "Successfully updated the threat detection policy."
          },
          "202": {
            "description": "Created request to set the server threat detection policy."
          },
          "default": {
            "description": "Error response describing why the operation of setting security alert policies failed."
          }
        },
        "tags": [
          "ServerSecurityAlertPolicies"
        ],
        "description": "Creates or updates a threat detection policy.",
        "operationId": "ServerSecurityAlertPolicies_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerSecurityAlertPolicy"
              }
            }
          },
          "description": "The server security alert policy.",
          "required": true
        },
        "x-ms-examples": {
          "Update a server's threat detection policy with all parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMax.json"
          },
          "Update a server's threat detection policy with minimal parameters": {
            "$ref": "./examples/ServerSecurityAlertsCreateMin.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopQueryStatisticsResultList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "TopQueryStatistics"
        ],
        "description": "Retrieve the Query-Store top queries for specified metric and aggregation.",
        "operationId": "TopQueryStatistics_ListByServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopQueryStatisticsInput"
              }
            }
          },
          "description": "The required parameters for retrieving top query statistics.",
          "required": true
        },
        "x-ms-examples": {
          "TopQueryStatisticsListByServer": {
            "$ref": "./examples/TopQueryStatisticsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/topQueryStatistics/{queryStatisticId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/QueryStatisticIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryStatistic"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "TopQueryStatistics"
        ],
        "description": "Retrieve the query statistic for specified identifier.",
        "operationId": "TopQueryStatistics_Get",
        "x-ms-examples": {
          "TopQueryStatisticsGet": {
            "$ref": "./examples/TopQueryStatisticsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRuleListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of virtual network rules."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a list of virtual network rules in a server.",
        "operationId": "VirtualNetworkRules_ListByServer",
        "x-ms-examples": {
          "List virtual network rules": {
            "$ref": "./examples/VirtualNetworkRulesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the virtual network rule."
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "The specified virtual network rule does not exist."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Deletes the virtual network rule with the given name.",
        "operationId": "VirtualNetworkRules_Delete",
        "x-ms-examples": {
          "Delete a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully retrieved a specified virtual network rule."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a virtual network rule.",
        "operationId": "VirtualNetworkRules_Get",
        "x-ms-examples": {
          "Gets a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully updated a virtual network rule."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully created a virtual network rule."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Creates or updates an existing virtual network rule.",
        "operationId": "VirtualNetworkRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualNetworkRule"
              }
            }
          },
          "description": "The requested virtual Network Rule Resource state.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitStatisticsResultList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WaitStatistics"
        ],
        "description": "Retrieve wait statistics for specified aggregation window.",
        "operationId": "WaitStatistics_ListByServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaitStatisticsInput"
              }
            }
          },
          "description": "The required parameters for retrieving wait statistics.",
          "required": true
        },
        "x-ms-examples": {
          "WaitStatisticsListByServer": {
            "$ref": "./examples/WaitStatisticsListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}/waitStatistics/{waitStatisticsId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/WaitStatisticsIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaitStatistic"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WaitStatistics"
        ],
        "description": "Retrieve wait statistics for specified identifier.",
        "operationId": "WaitStatistics_Get",
        "x-ms-examples": {
          "WaitStatisticsGet": {
            "$ref": "./examples/WaitStatisticsGet.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AdvisorNameParameter": {
        "description": "The advisor name for recommendation action.",
        "in": "path",
        "name": "advisorName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConfigurationNameParameter": {
        "description": "The name of the server configuration.",
        "in": "path",
        "name": "configurationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "FirewallRuleNameParameter": {
        "description": "The name of the server firewall rule.",
        "in": "path",
        "name": "firewallRuleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "LocationNameParameter": {
        "description": "The name of the location.",
        "in": "path",
        "name": "locationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "OperationIdParameter": {
        "description": "The operation identifier.",
        "in": "path",
        "name": "operationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryIdParameter": {
        "description": "The Query-Store query identifier.",
        "in": "path",
        "name": "queryId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryStatisticIdParameter": {
        "description": "The Query Statistic identifier.",
        "in": "path",
        "name": "queryStatisticId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "RecommendedActionNameParameter": {
        "description": "The recommended action name.",
        "in": "path",
        "name": "recommendedActionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SecurityAlertPolicyNameParameter": {
        "description": "The name of the security alert policy.",
        "in": "path",
        "name": "securityAlertPolicyName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "WaitStatisticsIdParameter": {
        "description": "The Wait Statistic identifier.",
        "in": "path",
        "name": "waitStatisticsId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "virtualNetworkRuleNameParameter": {
        "description": "The name of the virtual network rule.",
        "in": "path",
        "name": "virtualNetworkRuleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Advisor": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a recommendation action advisor.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AdvisorProperties",
            "description": "The properties of a recommendation action advisor.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AdvisorProperties": {
        "description": "The properties of a recommendation action advisor.",
        "properties": {},
        "type": "object"
      },
      "AdvisorsResultList": {
        "description": "A list of query statistics.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of recommendation action advisors.",
            "items": {
              "$ref": "#/components/schemas/Advisor"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "An error response from the Batch service.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "An error response from the Batch service.",
        "properties": {
          "code": {
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "type": "string"
          },
          "details": {
            "description": "A list of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/CloudErrorBody"
            },
            "type": "array"
          },
          "message": {
            "description": "A message describing the error, intended to be suitable for display in a user interface.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error. For example, the name of the property in error.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "Configuration": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Configuration.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ConfigurationProperties",
            "description": "The properties of a configuration.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ConfigurationListResult": {
        "description": "A list of server configurations.",
        "properties": {
          "value": {
            "description": "The list of server configurations.",
            "items": {
              "$ref": "#/components/schemas/Configuration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConfigurationProperties": {
        "description": "The properties of a configuration.",
        "properties": {
          "allowedValues": {
            "description": "Allowed values of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "dataType": {
            "description": "Data type of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "defaultValue": {
            "description": "Default value of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "source": {
            "description": "Source of the configuration.",
            "type": "string"
          },
          "value": {
            "description": "Value of the configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Database": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Database.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DatabaseProperties",
            "description": "The properties of a database.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DatabaseListResult": {
        "description": "A List of databases.",
        "properties": {
          "value": {
            "description": "The list of databases housed in a server",
            "items": {
              "$ref": "#/components/schemas/Database"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabaseProperties": {
        "description": "The properties of a database.",
        "properties": {
          "charset": {
            "description": "The charset of the database.",
            "type": "string"
          },
          "collation": {
            "description": "The collation of the database.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FirewallRule": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a server firewall rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FirewallRuleProperties",
            "description": "The properties of a firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "FirewallRuleListResult": {
        "description": "A list of firewall rules.",
        "properties": {
          "value": {
            "description": "The list of firewall rules in a server.",
            "items": {
              "$ref": "#/components/schemas/FirewallRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallRuleProperties": {
        "description": "The properties of a server firewall rule.",
        "properties": {
          "endIpAddress": {
            "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type": "string"
          },
          "startIpAddress": {
            "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type": "string"
          }
        },
        "required": [
          "startIpAddress",
          "endIpAddress"
        ],
        "type": "object"
      },
      "LogFile": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a log file.",
        "properties": {
          "name": {
            "description": "The name of the log file.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/LogFileProperties",
            "description": "The properties of the log file.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "LogFileListResult": {
        "description": "A list of log files.",
        "properties": {
          "value": {
            "description": "The list of log files.",
            "items": {
              "$ref": "#/components/schemas/LogFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LogFileProperties": {
        "description": "The properties of a log file.",
        "properties": {
          "createdTime": {
            "description": "Creation timestamp of the log file.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "Last modified timestamp of the log file.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "sizeInKB": {
            "description": "Size of the log file.",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "Type of the log file.",
            "type": "string"
          },
          "url": {
            "description": "The url to download the log file from.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MinimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "enum": [
          "TLS1_0",
          "TLS1_1",
          "TLS1_2",
          "TLSEnforcementDisabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MinimalTlsVersionEnum"
        }
      },
      "NameAvailability": {
        "description": "Represents a resource name availability.",
        "properties": {
          "message": {
            "description": "Error Message.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Indicates whether the resource name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for name being unavailable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameAvailabilityRequest": {
        "description": "Request from client to check resource name availability.",
        "properties": {
          "name": {
            "description": "Resource name to verify.",
            "type": "string"
          },
          "type": {
            "description": "Resource type used for verification.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "REST API operation definition.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "The localized display information for this particular operation or action.",
            "readOnly": true
          },
          "name": {
            "description": "The name of the operation being performed on this particular object.",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "The intended executor of the operation.",
            "enum": [
              "NotSpecified",
              "user",
              "system"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationOrigin"
            }
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Additional descriptions for the operation.",
            "readOnly": true,
            "type": "object",
            "x-ms-client-flatten": false
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "Display metadata associated with the operation.",
        "properties": {
          "description": {
            "description": "Operation description.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "Localized friendly name for the operation.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "Operation resource provider name.",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "Resource on which the operation is performed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "OperationListResult": {
        "description": "A list of resource provider operations.",
        "properties": {
          "value": {
            "description": "The list of resource provider operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierListResult": {
        "description": "A list of performance tiers.",
        "properties": {
          "value": {
            "description": "The list of performance tiers",
            "items": {
              "$ref": "#/components/schemas/PerformanceTierProperties"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierProperties": {
        "description": "Performance tier properties",
        "properties": {
          "id": {
            "description": "ID of the performance tier.",
            "type": "string"
          },
          "serviceLevelObjectives": {
            "description": "Service level objectives associated with the performance tier",
            "items": {
              "$ref": "#/components/schemas/PerformanceTierServiceLevelObjectives"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierServiceLevelObjectives": {
        "description": "Service level objectives for performance tier.",
        "properties": {
          "edition": {
            "description": "Edition of the performance tier.",
            "type": "string"
          },
          "hardwareGeneration": {
            "description": "Hardware generation associated with the service level objective",
            "type": "string"
          },
          "id": {
            "description": "ID for the service level objective.",
            "type": "string"
          },
          "maxBackupRetentionDays": {
            "description": "Maximum Backup retention in days for the performance tier edition",
            "type": "integer"
          },
          "maxStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "minBackupRetentionDays": {
            "description": "Minimum Backup retention in days for the performance tier edition",
            "type": "integer"
          },
          "minStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "vCore": {
            "description": "vCore associated with the service level objective",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "QueryStatistic": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Query Statistic.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/QueryStatisticProperties",
            "description": "The properties of a query statistic.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "QueryStatisticProperties": {
        "description": "The properties of a query statistic.",
        "properties": {
          "aggregationFunction": {
            "description": "Aggregation function name.",
            "type": "string"
          },
          "databaseNames": {
            "description": "The list of database names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "endTime": {
            "description": "Observation end time.",
            "format": "date-time",
            "type": "string"
          },
          "metricDisplayName": {
            "description": "Metric display name.",
            "type": "string"
          },
          "metricName": {
            "description": "Metric name.",
            "type": "string"
          },
          "metricValue": {
            "description": "Metric value.",
            "format": "double",
            "type": "number"
          },
          "metricValueUnit": {
            "description": "Metric value unit.",
            "type": "string"
          },
          "queryExecutionCount": {
            "description": "Number of query executions in this time interval.",
            "format": "int64",
            "type": "integer"
          },
          "queryId": {
            "description": "Database query identifier.",
            "type": "string"
          },
          "startTime": {
            "description": "Observation start time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryText": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Query Text.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/QueryTextProperties",
            "description": "The properties of a query text.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "QueryTextProperties": {
        "description": "The properties of a query text.",
        "properties": {
          "queryId": {
            "description": "Query identifier unique to the server.",
            "type": "string"
          },
          "queryText": {
            "description": "Query text.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryTextsResultList": {
        "description": "A list of query texts.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of query texts.",
            "items": {
              "$ref": "#/components/schemas/QueryText"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecommendationAction": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Recommendation Action.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecommendationActionProperties",
            "description": "The properties of a recommendation action.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RecommendationActionProperties": {
        "description": "The properties of a recommendation action.",
        "properties": {
          "actionId": {
            "description": "Recommendation action identifier.",
            "format": "int32",
            "type": "integer"
          },
          "advisorName": {
            "description": "Advisor name.",
            "type": "string"
          },
          "createdTime": {
            "description": "Recommendation action creation time.",
            "format": "date-time",
            "type": "string"
          },
          "details": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Recommendation action details.",
            "type": "object"
          },
          "expirationTime": {
            "description": "Recommendation action expiration time.",
            "format": "date-time",
            "type": "string"
          },
          "reason": {
            "description": "Recommendation action reason.",
            "type": "string"
          },
          "recommendationType": {
            "description": "Recommendation action type.",
            "type": "string"
          },
          "sessionId": {
            "description": "Recommendation action session identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecommendationActionsResultList": {
        "description": "A list of recommendation actions.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of recommendation action advisors.",
            "items": {
              "$ref": "#/components/schemas/RecommendationAction"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecommendedActionSessionsOperationStatus": {
        "description": "Recommendation action session operation status.",
        "properties": {
          "name": {
            "description": "Operation identifier.",
            "type": "string"
          },
          "startTime": {
            "description": "Operation start time.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Operation status.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceIdentity": {
        "description": "Azure Active Directory identity configuration for a resource.",
        "properties": {
          "principalId": {
            "description": "The Azure Active Directory principal id.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The Azure Active Directory tenant id.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IdentityType"
            }
          }
        },
        "type": "object"
      },
      "SecurityAlertPolicyProperties": {
        "description": "Properties of a security alert policy.",
        "properties": {
          "disabledAlerts": {
            "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "emailAccountAdmins": {
            "description": "Specifies that the alert is sent to the account administrators.",
            "type": "boolean"
          },
          "emailAddresses": {
            "description": "Specifies an array of e-mail addresses to which the alert is sent.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "retentionDays": {
            "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
            "format": "int32",
            "type": "integer"
          },
          "state": {
            "description": "Specifies the state of the policy, whether it is enabled or disabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ServerSecurityAlertPolicyState"
            }
          },
          "storageAccountAccessKey": {
            "description": "Specifies the identifier key of the Threat Detection audit storage account.",
            "type": "string"
          },
          "storageEndpoint": {
            "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
            "type": "string"
          }
        },
        "required": [
          "state"
        ],
        "type": "object"
      },
      "Server": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Represents a server.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The Azure Active Directory identity of the server."
          },
          "properties": {
            "$ref": "#/components/schemas/ServerProperties",
            "description": "Properties of the server.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "type": "object"
      },
      "ServerForCreate": {
        "description": "Represents a server to be created.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-specific metadata in the form of key-value pairs.",
            "type": "object"
          },
          "location": {
            "description": "The location the resource resides in.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ServerPropertiesForCreate",
            "description": "Properties of the server.",
            "x-ms-client-flatten": false
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "required": [
          "properties",
          "location"
        ],
        "type": "object"
      },
      "ServerListResult": {
        "description": "A list of servers.",
        "properties": {
          "value": {
            "description": "The list of servers",
            "items": {
              "$ref": "#/components/schemas/Server"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerProperties": {
        "description": "The properties of a server.",
        "properties": {
          "administratorLogin": {
            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
            "type": "string"
          },
          "earliestRestoreDate": {
            "description": "Earliest restore point creation time (ISO8601 format)",
            "format": "date-time",
            "type": "string"
          },
          "fullyQualifiedDomainName": {
            "description": "The fully qualified domain name of a server.",
            "type": "string"
          },
          "masterServerId": {
            "description": "The master server id of a replica server.",
            "type": "string"
          },
          "minimalTlsVersion": {
            "$ref": "#/components/schemas/MinimalTlsVersion",
            "description": "Enforce a minimal Tls version for the server."
          },
          "replicaCapacity": {
            "description": "The maximum number of replicas that a master server can have.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "replicationRole": {
            "description": "The replication role of the server.",
            "type": "string"
          },
          "sslEnforcement": {
            "$ref": "#/components/schemas/SslEnforcement",
            "description": "Enable ssl enforcement or not when connect to server."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "Storage profile of a server."
          },
          "userVisibleState": {
            "description": "A state of a server that is visible to user.",
            "enum": [
              "Ready",
              "Dropping",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ServerState"
            }
          },
          "version": {
            "$ref": "#/components/schemas/ServerVersion",
            "description": "Server version."
          }
        },
        "type": "object"
      },
      "ServerPropertiesForCreate": {
        "description": "The properties used to create a new server.",
        "discriminator": {
          "propertyName": "createMode"
        },
        "properties": {
          "createMode": {
            "description": "The mode to create a new server.",
            "enum": [
              "Default",
              "PointInTimeRestore",
              "GeoRestore",
              "Replica"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CreateMode"
            }
          },
          "minimalTlsVersion": {
            "$ref": "#/components/schemas/MinimalTlsVersion",
            "description": "Enforce a minimal Tls version for the server."
          },
          "sslEnforcement": {
            "$ref": "#/components/schemas/SslEnforcement",
            "description": "Enable ssl enforcement or not when connect to server."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "Storage profile of a server."
          },
          "version": {
            "$ref": "#/components/schemas/ServerVersion",
            "description": "Server version."
          }
        },
        "required": [
          "createMode"
        ],
        "type": "object"
      },
      "ServerPropertiesForDefaultCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server.",
        "properties": {
          "administratorLogin": {
            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
            "type": "string"
          },
          "administratorLoginPassword": {
            "description": "The password of the administrator login.",
            "format": "password",
            "type": "string"
          }
        },
        "required": [
          "administratorLogin",
          "administratorLoginPassword"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Default"
      },
      "ServerPropertiesForGeoRestore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server by restoring to a different region from a geo replicated backup.",
        "properties": {
          "sourceServerId": {
            "description": "The source server id to restore from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId"
        ],
        "type": "object",
        "x-ms-discriminator-value": "GeoRestore"
      },
      "ServerPropertiesForReplica": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties to create a new replica.",
        "properties": {
          "sourceServerId": {
            "description": "The master server id to create replica from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Replica"
      },
      "ServerPropertiesForRestore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server by restoring from a backup.",
        "properties": {
          "restorePointInTime": {
            "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
            "format": "date-time",
            "type": "string"
          },
          "sourceServerId": {
            "description": "The source server id to restore from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId",
          "restorePointInTime"
        ],
        "type": "object",
        "x-ms-discriminator-value": "PointInTimeRestore"
      },
      "ServerSecurityAlertPolicy": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "A server security alert policy.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SecurityAlertPolicyProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ServerUpdateParameters": {
        "description": "Parameters allowed to update for a server.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-specific metadata in the form of key-value pairs.",
            "type": "object"
          },
          "properties": {
            "description": "The properties that can be updated for a server.",
            "properties": {
              "administratorLoginPassword": {
                "description": "The password of the administrator login.",
                "format": "password",
                "type": "string"
              },
              "minimalTlsVersion": {
                "$ref": "#/components/schemas/MinimalTlsVersion",
                "description": "Enforce a minimal Tls version for the server."
              },
              "replicationRole": {
                "description": "The replication role of the server.",
                "type": "string"
              },
              "sslEnforcement": {
                "$ref": "#/components/schemas/SslEnforcement",
                "description": "Enable ssl enforcement or not when connect to server."
              },
              "storageProfile": {
                "$ref": "#/components/schemas/StorageProfile",
                "description": "Storage profile of a server."
              },
              "version": {
                "$ref": "#/components/schemas/ServerVersion",
                "description": "The version of a server."
              }
            },
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "type": "object"
      },
      "ServerVersion": {
        "description": "The version of a server.",
        "enum": [
          "10.2",
          "10.3"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ServerVersion"
        }
      },
      "Sku": {
        "description": "Billing information related properties of a server.",
        "properties": {
          "capacity": {
            "description": "The scale up/out capacity, representing server's compute units.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "family": {
            "description": "The family of hardware.",
            "type": "string"
          },
          "name": {
            "description": "The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.",
            "type": "string"
          },
          "size": {
            "description": "The size code, to be interpreted by resource as appropriate.",
            "type": "string"
          },
          "tier": {
            "description": "The tier of the particular SKU, e.g. Basic.",
            "enum": [
              "Basic",
              "GeneralPurpose",
              "MemoryOptimized"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuTier"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "SslEnforcementEnum"
        }
      },
      "StorageProfile": {
        "description": "Storage Profile properties of a server",
        "properties": {
          "backupRetentionDays": {
            "description": "Backup retention days for the server.",
            "type": "integer"
          },
          "geoRedundantBackup": {
            "description": "Enable Geo-redundant or not for server backup.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GeoRedundantBackup"
            }
          },
          "storageAutogrow": {
            "description": "Enable Storage Auto Grow.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageAutogrow"
            }
          },
          "storageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TopQueryStatisticsInput": {
        "description": "Input to get top query statistics",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TopQueryStatisticsInputProperties",
            "description": "The properties of a wait statistics input.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "TopQueryStatisticsInputProperties": {
        "description": "The properties for input to get top query statistics",
        "properties": {
          "aggregationFunction": {
            "description": "Aggregation function name.",
            "type": "string"
          },
          "aggregationWindow": {
            "description": "Aggregation interval type in ISO 8601 format.",
            "type": "string"
          },
          "numberOfTopQueries": {
            "description": "Max number of top queries to return.",
            "format": "int32",
            "type": "integer"
          },
          "observationEndTime": {
            "description": "Observation end time.",
            "format": "date-time",
            "type": "string"
          },
          "observationStartTime": {
            "description": "Observation start time.",
            "format": "date-time",
            "type": "string"
          },
          "observedMetric": {
            "description": "Observed metric name.",
            "type": "string"
          }
        },
        "required": [
          "numberOfTopQueries",
          "aggregationFunction",
          "observedMetric",
          "observationStartTime",
          "observationEndTime",
          "aggregationWindow"
        ],
        "type": "object"
      },
      "TopQueryStatisticsResultList": {
        "description": "A list of query statistics.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of top query statistics.",
            "items": {
              "$ref": "#/components/schemas/QueryStatistic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualNetworkRule": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "A virtual network rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/VirtualNetworkRuleProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleListResult": {
        "description": "A list of virtual network rules.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of results.",
            "items": {
              "$ref": "#/components/schemas/VirtualNetworkRule"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleProperties": {
        "description": "Properties of a virtual network rule.",
        "properties": {
          "ignoreMissingVnetServiceEndpoint": {
            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
            "type": "boolean"
          },
          "state": {
            "description": "Virtual Network Rule State",
            "enum": [
              "Initializing",
              "InProgress",
              "Ready",
              "Deleting",
              "Unknown"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "VirtualNetworkRuleState"
            }
          },
          "virtualNetworkSubnetId": {
            "description": "The ARM resource id of the virtual network subnet.",
            "type": "string"
          }
        },
        "required": [
          "virtualNetworkSubnetId"
        ],
        "type": "object"
      },
      "WaitStatistic": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Wait Statistic.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WaitStatisticProperties",
            "description": "The properties of a wait statistic.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WaitStatisticProperties": {
        "description": "The properties of a wait statistic.",
        "properties": {
          "count": {
            "description": "Wait event count observed in this time interval.",
            "format": "int64",
            "type": "integer"
          },
          "databaseName": {
            "description": "Database Name.",
            "type": "string"
          },
          "endTime": {
            "description": "Observation end time.",
            "format": "date-time",
            "type": "string"
          },
          "eventName": {
            "description": "Wait event name.",
            "type": "string"
          },
          "eventTypeName": {
            "description": "Wait event type name.",
            "type": "string"
          },
          "queryId": {
            "description": "Database query identifier.",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "Observation start time.",
            "format": "date-time",
            "type": "string"
          },
          "totalTimeInMs": {
            "description": "Total time of wait in milliseconds in this time interval.",
            "format": "double",
            "type": "number"
          },
          "userId": {
            "description": "Database user identifier.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "WaitStatisticsInput": {
        "description": "Input to get wait statistics",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WaitStatisticsInputProperties",
            "description": "The properties of a wait statistics input.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "WaitStatisticsInputProperties": {
        "description": "The properties for input to get wait statistics",
        "properties": {
          "aggregationWindow": {
            "description": "Aggregation interval type in ISO 8601 format.",
            "type": "string"
          },
          "observationEndTime": {
            "description": "Observation end time.",
            "format": "date-time",
            "type": "string"
          },
          "observationStartTime": {
            "description": "Observation start time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "observationStartTime",
          "observationEndTime",
          "aggregationWindow"
        ],
        "type": "object"
      },
      "WaitStatisticsResultList": {
        "description": "A list of wait statistics.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of wait statistics.",
            "items": {
              "$ref": "#/components/schemas/WaitStatistic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}