openapi: 3.0.0
info:
  description: >-
    To manage and control access to your resources, you can define customized
    policies and assign them at a scope.
  title: PolicyClient
  version: '2019-01-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments':
    get:
      parameters:
        - description: >-
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
            provided, no filtering is performed.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignmentListResult'
          description: OK - Returns an array of policy assignments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation retrieves the list of all policy assignments associated
        with the given subscription that match the optional given $filter. Valid
        values for $filter are: 'atScope()' or 'policyDefinitionId eq
        '{value}''. If $filter is not provided, the unfiltered list includes all
        policy assignments associated with the subscription, including those
        that apply directly or from management groups that contain the given
        subscription, as well as any applied to objects contained within the
        subscription. If $filter=atScope() is provided, the returned list
        includes all policy assignments that apply to the subscription, which is
        everything in the unfiltered list except those applied to objects
        contained within the subscription. If $filter=policyDefinitionId eq
        '{value}' is provided, the returned list includes all policy assignments
        of the policy definition whose id is {value}.
      operationId: PolicyAssignments_List
      summary: Retrieves all policy assignments that apply to a subscription.
      x-ms-examples:
        List policy assignments that apply to a subscription:
          $ref: ./examples/listPolicyAssignments.json
      x-ms-odata: '#/components/schemas/PolicyAssignment'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Authorization/policyAssignments':
    get:
      parameters:
        - description: The name of the resource group that contains policy assignments.
          in: path
          name: resourceGroupName
          required: true
          schema:
            maxLength: 90
            minLength: 1
            pattern: '^[-\w\._\(\)]+$'
            type: string
        - allowReserved: true
          description: >-
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
            provided, no filtering is performed.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignmentListResult'
          description: OK - Returns an array of policy assignments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation retrieves the list of all policy assignments associated
        with the given resource group in the given subscription that match the
        optional given $filter. Valid values for $filter are: 'atScope()' or
        'policyDefinitionId eq '{value}''. If $filter is not provided, the
        unfiltered list includes all policy assignments associated with the
        resource group, including those that apply directly or apply from
        containing scopes, as well as any applied to resources contained within
        the resource group. If $filter=atScope() is provided, the returned list
        includes all policy assignments that apply to the resource group, which
        is everything in the unfiltered list except those applied to resources
        contained within the resource group. If $filter=policyDefinitionId eq
        '{value}' is provided, the returned list includes all policy assignments
        of the policy definition whose id is {value} that apply to the resource
        group.
      operationId: PolicyAssignments_ListForResourceGroup
      summary: Retrieves all policy assignments that apply to a resource group.
      x-ms-examples:
        List policy assignments that apply to a resource group:
          $ref: ./examples/listPolicyAssignmentsForResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/policyAssignments':
    get:
      parameters:
        - description: The name of the resource group containing the resource.
          in: path
          name: resourceGroupName
          required: true
          schema:
            maxLength: 90
            minLength: 1
            pattern: '^[-\w\._\(\)]+$'
            type: string
        - description: >-
            The namespace of the resource provider. For example, the namespace
            of a virtual machine is Microsoft.Compute (from
            Microsoft.Compute/virtualMachines)
          in: path
          name: resourceProviderNamespace
          required: true
          schema:
            type: string
        - allowReserved: true
          description: The parent resource path. Use empty string if there is none.
          in: path
          name: parentResourcePath
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - allowReserved: true
          description: >-
            The resource type name. For example the type name of a web app is
            'sites' (from Microsoft.Web/sites).
          in: path
          name: resourceType
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - description: The name of the resource.
          in: path
          name: resourceName
          required: true
          schema:
            type: string
        - description: >-
            The filter to apply on the operation. Valid values for $filter are:
            'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
            provided, no filtering is performed.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignmentListResult'
          description: OK - Returns an array of policy assignments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      deprecated: false
      description: >-
        This operation retrieves the list of all policy assignments associated
        with the specified resource in the given resource group and subscription
        that match the optional given $filter. Valid values for $filter are:
        'atScope()' or 'policyDefinitionId eq '{value}''. If $filter is not
        provided, the unfiltered list includes all policy assignments associated
        with the resource, including those that apply directly or from all
        containing scopes, as well as any applied to resources contained within
        the resource. If $filter=atScope() is provided, the returned list
        includes all policy assignments that apply to the resource, which is
        everything in the unfiltered list except those applied to resources
        contained within the resource. If $filter=policyDefinitionId eq
        '{value}' is provided, the returned list includes all policy assignments
        of the policy definition whose id is {value} that apply to the resource.
        Three parameters plus the resource name are used to identify a specific
        resource. If the resource is not part of a parent resource (the more
        common case), the parent resource path should not be provided (or
        provided as ''). For example a web app could be specified as
        ({resourceProviderNamespace} == 'Microsoft.Web', {parentResourcePath} ==
        '', {resourceType} == 'sites', {resourceName} == 'MyWebApp'). If the
        resource is part of a parent resource, then all parameters should be
        provided. For example a virtual machine DNS name could be specified as
        ({resourceProviderNamespace} == 'Microsoft.Compute',
        {parentResourcePath} == 'virtualMachines/MyVirtualMachine',
        {resourceType} == 'domainNames', {resourceName} == 'MyComputerName'). A
        convenient alternative to providing the namespace and type name
        separately is to provide both in the {resourceType} parameter, format:
        ({resourceProviderNamespace} == '', {parentResourcePath} == '',
        {resourceType} == 'Microsoft.Web/sites', {resourceName} == 'MyWebApp').
      operationId: PolicyAssignments_ListForResource
      summary: Retrieves all policy assignments that apply to a resource.
      x-ms-examples:
        List all policy assignments that apply to a resource:
          $ref: ./examples/listPolicyAssignmentsForResource.json
      x-ms-odata: '#/components/schemas/PolicyAssignment'
      x-ms-pageable:
        nextLinkName: nextLink
  '/{policyAssignmentId}':
    delete:
      parameters:
        - allowReserved: true
          description: >-
            The ID of the policy assignment to delete. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
          in: path
          name: policyAssignmentId
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: OK - Returns information about the policy assignment.
        '204':
          description: No Content - the policy assignment doesn't exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation deletes the policy with the given ID. Policy assignment
        IDs have this format:
        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        Valid formats for {scope} are:
        '/providers/Microsoft.Management/managementGroups/{managementGroup}'
        (management group), '/subscriptions/{subscriptionId}' (subscription),
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'
        (resource group), or
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
        (resource).
      operationId: PolicyAssignments_DeleteById
      summary: Deletes a policy assignment.
      x-ms-examples:
        Delete a policy assignment by ID:
          $ref: ./examples/deletePolicyAssignmentById.json
    get:
      parameters:
        - allowReserved: true
          description: >-
            The ID of the policy assignment to get. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
          in: path
          name: policyAssignmentId
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: OK - Returns information about the policy assignment.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        The operation retrieves the policy assignment with the given ID. Policy
        assignment IDs have this format:
        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        Valid scopes are: management group (format:
        '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
        subscription (format: '/subscriptions/{subscriptionId}'), resource group
        (format:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
        resource (format:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
      operationId: PolicyAssignments_GetById
      summary: Retrieves the policy assignment with the given ID.
      x-ms-examples:
        Retrieve a policy assignment by ID:
          $ref: ./examples/getPolicyAssignmentById.json
        Retrieve a policy assignment with a managed identity by ID:
          $ref: ./examples/getPolicyAssignmentWithIdentityById.json
    put:
      parameters:
        - allowReserved: true
          description: >-
            The ID of the policy assignment to create. Use the format
            '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
          in: path
          name: policyAssignmentId
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: Created - Returns information about the policy assignment.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation creates or updates the policy assignment with the given
        ID. Policy assignments made on a scope apply to all resources contained
        in that scope. For example, when you assign a policy to a resource group
        that policy applies to all resources in the group. Policy assignment IDs
        have this format:
        '{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
        Valid scopes are: management group (format:
        '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
        subscription (format: '/subscriptions/{subscriptionId}'), resource group
        (format:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or
        resource (format:
        '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'.
      operationId: PolicyAssignments_CreateById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAssignment'
        description: Parameters for policy assignment.
        required: true
      summary: Creates or updates a policy assignment.
      x-ms-examples:
        Create or update policy assignment by ID:
          $ref: ./examples/createPolicyAssignmentById.json
        Create or update policy assignment with a managed identity by ID:
          $ref: ./examples/createPolicyAssignmentWithIdentityById.json
  '/{scope}/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}':
    delete:
      parameters:
        - allowReserved: true
          description: >-
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
          in: path
          name: scope
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - description: The name of the policy assignment to delete.
          in: path
          name: policyAssignmentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: OK - Returns information about the deleted assignment.
        '204':
          description: No Content - the policy assignment doesn't exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation deletes a policy assignment, given its name and the scope
        it was created in. The scope of a policy assignment is the part of its
        ID preceding
        '/providers/Microsoft.Authorization/policyAssignments/{policyAssignmentName}'.
      operationId: PolicyAssignments_Delete
      summary: Deletes a policy assignment.
      x-ms-examples:
        Delete a policy assignment:
          $ref: ./examples/deletePolicyAssignment.json
    get:
      parameters:
        - allowReserved: true
          description: >-
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
          in: path
          name: scope
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - description: The name of the policy assignment to get.
          in: path
          name: policyAssignmentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: OK - Returns information about the policy assignment.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: >-
        This operation retrieves a single policy assignment, given its name and
        the scope it was created at.
      operationId: PolicyAssignments_Get
      summary: Retrieves a policy assignment.
      x-ms-examples:
        Retrieve a policy assignment:
          $ref: ./examples/getPolicyAssignment.json
        Retrieve a policy assignment with a managed identity:
          $ref: ./examples/getPolicyAssignmentWithIdentity.json
    put:
      parameters:
        - allowReserved: true
          description: >-
            The scope of the policy assignment. Valid scopes are: management
            group (format:
            '/providers/Microsoft.Management/managementGroups/{managementGroup}'),
            subscription (format: '/subscriptions/{subscriptionId}'), resource
            group (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}',
            or resource (format:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'
          in: path
          name: scope
          required: true
          schema:
            type: string
          x-ms-skip-url-encoding: true
        - description: The name of the policy assignment.
          in: path
          name: policyAssignmentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAssignment'
          description: Created - Returns information about the new policy assignment.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      tags:
        - PolicyAssignments
      description: ' This operation creates or updates a policy assignment with the given scope and name. Policy assignments apply to all resources contained within their scope. For example, when you assign a policy at resource group scope, that policy applies to all resources in the group.'
      operationId: PolicyAssignments_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyAssignment'
        description: Parameters for the policy assignment.
        required: true
      summary: Creates or updates a policy assignment.
      x-ms-examples:
        Create or update a policy assignment:
          $ref: ./examples/createPolicyAssignment.json
        Create or update a policy assignment with a managed identity:
          $ref: ./examples/createPolicyAssignmentWithIdentity.json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the operation.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: The ID of the target subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    ErrorResponse:
      description: >-
        Error response indicates Azure Resource Manager is not able to process
        the incoming request. The reason is provided in the error message.
      properties:
        errorCode:
          description: Error code.
          type: string
        errorMessage:
          description: Error message indicating why the operation failed.
          type: string
        httpStatus:
          description: Http status code.
          type: string
      type: object
    Identity:
      description: Identity for the resource.
      properties:
        principalId:
          description: The principal ID of the resource identity.
          readOnly: true
          type: string
        tenantId:
          description: The tenant ID of the resource identity.
          readOnly: true
          type: string
        type:
          description: The identity type.
          enum:
            - SystemAssigned
            - None
          type: string
          x-ms-enum:
            modelAsString: false
            name: ResourceIdentityType
      type: object
    PolicyAssignment:
      description: The policy assignment.
      properties:
        id:
          description: The ID of the policy assignment.
          readOnly: true
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
          description: The managed identity associated with the policy assignment.
        location:
          description: >-
            The location of the policy assignment. Only required when utilizing
            managed identity.
          type: string
        name:
          description: The name of the policy assignment.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/PolicyAssignmentProperties'
          description: Properties for the policy assignment.
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/PolicySku'
          description: >-
            The policy sku. This property is optional, obsolete, and will be
            ignored.
        type:
          description: The type of the policy assignment.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    PolicyAssignmentListResult:
      description: List of policy assignments.
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          description: An array of policy assignments.
          items:
            $ref: '#/components/schemas/PolicyAssignment'
          type: array
      type: object
    PolicyAssignmentProperties:
      description: The policy assignment properties.
      properties:
        parameters:
          description: Required if a parameter is used in policy rule.
          type: object
        description:
          description: This message will be part of response in case of policy violation.
          type: string
        displayName:
          description: The display name of the policy assignment.
          type: string
        metadata:
          description: The policy assignment metadata.
          type: object
        notScopes:
          description: The policy's excluded scopes.
          items:
            type: string
          type: array
        policyDefinitionId:
          description: >-
            The ID of the policy definition or policy set definition being
            assigned.
          type: string
        scope:
          description: The scope for the policy assignment.
          type: string
      type: object
    PolicySku:
      description: >-
        The policy sku. This property is optional, obsolete, and will be
        ignored.
      properties:
        name:
          description: The name of the policy sku. Possible values are A0 and A1.
          type: string
        tier:
          description: The policy sku tier. Possible values are Free and Standard.
          type: string
      required:
        - name
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

