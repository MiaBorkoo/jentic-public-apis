{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure Instance Metadata Client",
    "title": "InstanceMetadataClient",
    "version": "2019-08-15",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/imds/data-plane/Microsoft.InstanceMetadataService/stable/2019-08-15/imds.json"
  },
  "servers": [
    {
      "url": "http://169.254.169.254/metadata"
    },
    {
      "url": "https://169.254.169.254/metadata"
    }
  ],
  "paths": {
    "/attested/document": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "This is a string of up to 32 random alphanumeric characters.",
            "in": "query",
            "name": "nonce",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/MetadataParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttestedData"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get Attested Data for the Virtual Machine.",
        "operationId": "Attested_GetDocument",
        "x-ms-examples": {
          "Get Attested Data for the VM": {
            "$ref": "./examples/GetAttestedData.json"
          }
        }
      }
    },
    "/identity/info": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MetadataParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityInfoResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Get metadata information"
        ],
        "description": "Get information about AAD Metadata",
        "operationId": "Identity_GetInfo",
        "x-ms-examples": {
          "Get Identity Info for the VM": {
            "$ref": "./examples/GetIdentityInfo.json"
          }
        }
      }
    },
    "/identity/oauth2/token": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/MetadataParameter"
          },
          {
            "description": "This is the urlencoded identifier URI of the sink resource for the requested Azure AD token. The resulting token contains the corresponding aud for this resource.",
            "in": "query",
            "name": "resource",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "This identifies, by Azure AD client id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with object_id and msi_res_id.",
            "in": "query",
            "name": "client_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This identifies, by Azure AD object id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and msi_res_id.",
            "in": "query",
            "name": "object_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This identifies, by urlencoded ARM resource id, a specific explicit identity to use when authenticating to Azure AD. Mutually exclusive with client_id and object_id.",
            "in": "query",
            "name": "msi_res_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This indicates the authority to request AAD tokens from. Defaults to the known authority of the identity to be used.",
            "in": "query",
            "name": "authority",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If provided, the value must be 'true'. This indicates to the server that the token must be retrieved from Azure AD and cannot be retrieved from an internal cache.",
            "in": "query",
            "name": "bypass_cache",
            "required": false,
            "schema": {
              "enum": [
                "true"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BypassCache"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityTokenResponse"
                }
              }
            },
            "description": "Successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdentityErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed.",
            "headers": {
              "Www-Authenticate": {
                "description": "This is the response header containing a challenge for the Basic scheme with a realm value",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {},
          {
            "basic_auth": []
          }
        ],
        "tags": [
          "Get token"
        ],
        "description": "Get a Token from Azure AD",
        "operationId": "Identity_GetToken",
        "x-ms-examples": {
          "Get Identity Token for the VM": {
            "$ref": "./examples/GetIdentityToken.json"
          }
        }
      }
    },
    "/instance": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/MetadataParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Instance"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get Instance Metadata for the Virtual Machine.",
        "operationId": "Instances_GetMetadata",
        "x-ms-examples": {
          "Get Instance Metadata for the VM": {
            "$ref": "./examples/GetInstanceMetadata.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "This is the API version to use.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2018-10-01"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ApiVersion"
        }
      },
      "MetadataParameter": {
        "description": "This must be set to 'true'.",
        "in": "header",
        "name": "Metadata",
        "required": true,
        "schema": {
          "enum": [
            "true"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ApplicationResponse": {
        "description": "This is a binary string containing the application.",
        "type": "string"
      },
      "AttestedData": {
        "description": "This is the response from the Attested_GetDocument operation.",
        "properties": {
          "encoding": {
            "description": "This is the encoding scheme of the signature.",
            "type": "string"
          },
          "signature": {
            "description": "This is the encoded string containing the VM ID, plan information, public key, timestamp, and nonce value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Compute": {
        "description": "Compute Metadata",
        "properties": {
          "tags": {
            "description": "This is the list of tags for your VM.",
            "type": "string"
          },
          "azEnvironment": {
            "description": "This is the name of the environment in which the VM is running.",
            "type": "string"
          },
          "location": {
            "description": "This is the Azure Region in which the VM is running.",
            "type": "string"
          },
          "name": {
            "description": "This is the name of the VM.",
            "type": "string"
          },
          "offer": {
            "description": "This is the offer information for the VM image. This value is only present for images deployed from the Azure Image Gallery.",
            "type": "string"
          },
          "osType": {
            "description": "This value indicates the type of OS the VM is running, either Linux or Windows.",
            "type": "string"
          },
          "placementGroupId": {
            "description": "This is the placement group of your Virtual Machine Scale Set.",
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/PlanProperties",
            "description": "This contains the data about the plan.",
            "type": "object"
          },
          "platformFaultDomain": {
            "description": "This is the fault domain in which the VM.",
            "type": "string"
          },
          "platformUpdateDomain": {
            "description": "This is the update domain in which the VM.",
            "type": "string"
          },
          "provider": {
            "description": "This is the provider of the VM.",
            "type": "string"
          },
          "publicKeys": {
            "description": "This is information about the SSH certificate",
            "items": {
              "$ref": "#/components/schemas/PublicKeysProperties"
            },
            "type": "array"
          },
          "publisher": {
            "description": "This is the publisher of the VM image.",
            "type": "string"
          },
          "resourceGroupName": {
            "description": "This is the resource group for the VM.",
            "type": "string"
          },
          "resourceId": {
            "description": "This is the fully qualified ID for the VM.",
            "type": "string"
          },
          "sku": {
            "description": "This is the specific SKU for the VM image.",
            "type": "string"
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "This contains the data about the storage disks associated with the VM.",
            "type": "object"
          },
          "subscriptionId": {
            "description": "This is the Azure subscription for the VM.",
            "type": "string"
          },
          "version": {
            "description": "This is the version of the VM image.",
            "type": "string"
          },
          "vmId": {
            "description": "This is the unique identifier for the VM.",
            "type": "string"
          },
          "vmScaleSetName": {
            "description": "This is the resource name of the VMSS.",
            "type": "string"
          },
          "vmSize": {
            "description": "This is the size of the VM.",
            "type": "string"
          },
          "zone": {
            "description": "This is the availability zone of the VM.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataDisk": {
        "description": "This contains information about the data disk.",
        "properties": {
          "caching": {
            "description": "This is the caching requirements.",
            "type": "string"
          },
          "createOption": {
            "description": "This is information about how the VM was created.",
            "type": "string"
          },
          "diskSizeGB": {
            "description": "This is the size of the disk in GB.",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/DiskImage",
            "description": "This is the source user image virtual hard disk.",
            "type": "object"
          },
          "lun": {
            "description": "This is the logical unit number of the disk.",
            "type": "string"
          },
          "managedDisk": {
            "$ref": "#/components/schemas/ManagedDisk",
            "description": "This is managed disk parameters.",
            "type": "object"
          },
          "name": {
            "description": "This is the disk name.",
            "type": "string"
          },
          "vhd": {
            "$ref": "#/components/schemas/VirtualHardDisk",
            "description": "This is the virtual hard disk.",
            "type": "object"
          },
          "writeAcceleratorEnabled": {
            "description": "This specifies whether or not writeAccelerator is enabled on the disk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiffDiskSettings": {
        "description": "This is the ephemeral disk settings.",
        "properties": {
          "option": {
            "description": "This specifies the ephemeral disk settings.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskImage": {
        "description": "This is the source user image virtual hard disk.",
        "properties": {
          "uri": {
            "description": "This is the uri of the virtual hard disk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionSettings": {
        "description": "This is the encryption settings for the disk.",
        "properties": {
          "enabled": {
            "description": "This specifies whether or not disk encryption is enabled on the VM.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "This is the response from an operation in the case an error occurs.",
        "properties": {
          "error": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdentityErrorResponse": {
        "description": "This is the response from an Identity operation in the case an error occurs.",
        "properties": {
          "error": {
            "description": "Error code",
            "enum": [
              "invalid_request",
              "unauthorized_client",
              "access_denied",
              "unsupported_response_type",
              "invalid_scope",
              "server_error",
              "service_unavailable",
              "bad_request",
              "forbidden",
              "not_found",
              "method_not_allowed",
              "too_many_requests"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Error"
            }
          },
          "error_description": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdentityInfoResponse": {
        "description": "This is the response from the Identity_GetInfo operation.",
        "properties": {
          "tenantId": {
            "description": "This is the AAD tenantId of the identity of the system assigned managed identity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdentityTokenResponse": {
        "description": "This is the response from the Identity_GetToken operation.",
        "properties": {
          "access_token": {
            "description": "This is the requested access token. The app can use this token to authenticate to the sink resource.",
            "type": "string"
          },
          "client_id": {
            "description": "This is the client_id specified in the request, if any.",
            "type": "string"
          },
          "expires_in": {
            "description": "This is how long the access token is valid (in seconds).",
            "type": "string"
          },
          "expires_on": {
            "description": "This is the time when the access token expires. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time. This value is used to determine the lifetime of cached tokens.",
            "type": "string"
          },
          "ext_expires_in": {
            "description": "This indicates the extended lifetime of the token (in seconds).",
            "type": "string"
          },
          "msi_res_id": {
            "description": "This is the msi_res_id specified in the request, if any.",
            "type": "string"
          },
          "not_before": {
            "description": "This is the time when the access token becomes effective. The date is represented as the number of seconds from 1970-01-01T0:0:0Z UTC until the expiration time.",
            "type": "string"
          },
          "object_id": {
            "description": "This is the object_id specified in the request, if any.",
            "type": "string"
          },
          "resource": {
            "description": "This is the app ID URI of the sink resource.",
            "type": "string"
          },
          "token_type": {
            "description": "This indicates the token type value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageReference": {
        "description": "This contains information about the OS image.",
        "properties": {
          "id": {
            "description": "This is the resource ID.",
            "type": "string"
          },
          "offer": {
            "description": "This is the offer of the platform or marketplace image.",
            "type": "string"
          },
          "publisher": {
            "description": "This is the image publisher.",
            "type": "string"
          },
          "sku": {
            "description": "This is the image SKU.",
            "type": "string"
          },
          "version": {
            "description": "This is the version of the platform or marketplace image.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Instance": {
        "description": "This is the response from the Instance_GetMetadata operation.",
        "properties": {
          "compute": {
            "$ref": "#/components/schemas/Compute",
            "description": "Compute Metadata"
          },
          "network": {
            "$ref": "#/components/schemas/Network",
            "description": "Network Metadata"
          }
        },
        "type": "object"
      },
      "Ipv4Properties": {
        "description": "This contains the IPv4 properties.",
        "properties": {
          "privateIpAddress": {
            "description": "This is the private IP address assigned to the interface.",
            "type": "string"
          },
          "publicIpAddress": {
            "description": "This is the public IP address assigned to the interface.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Ipv6Properties": {
        "description": "This contains the IPv6 properties.",
        "properties": {
          "privateIpAddress": {
            "description": "This is the private IPv6 address assigned to the interface.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedDisk": {
        "description": "This is managed disk parameters.",
        "properties": {
          "id": {
            "description": "This is the resource ID.",
            "type": "string"
          },
          "storageAccountType": {
            "description": "This is the storage account type for the managed disk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Network": {
        "description": "Network Metadata",
        "properties": {
          "interface": {
            "description": "This contains data about the network interface.",
            "items": {
              "$ref": "#/components/schemas/NetworkInterface",
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkInterface": {
        "description": "This contains data about the network interface.",
        "properties": {
          "ipv4": {
            "description": "This contains the IPv4 address.",
            "properties": {
              "ipAddress": {
                "description": "This is the IP address",
                "items": {
                  "$ref": "#/components/schemas/Ipv4Properties",
                  "description": "This contains the IPv4 properties.",
                  "type": "object"
                },
                "type": "array"
              },
              "subnet": {
                "description": "This is the subnet",
                "items": {
                  "$ref": "#/components/schemas/SubnetProperties",
                  "description": "This contains the subnet properties.",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "ipv6": {
            "description": "This contains the IPv6 address.",
            "properties": {
              "ipAddress": {
                "description": "This is the IP address",
                "items": {
                  "$ref": "#/components/schemas/Ipv6Properties",
                  "description": "This contains the IPv6 properties.",
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "macAddress": {
            "description": "This is the MAC address of the interface.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OsDisk": {
        "description": "This contains information about the OS disk used by the VM.",
        "properties": {
          "caching": {
            "description": "This is the caching requirements.",
            "type": "string"
          },
          "createOption": {
            "description": "This is information about how the VM was created.",
            "type": "string"
          },
          "diffDiskSettings": {
            "$ref": "#/components/schemas/DiffDiskSettings",
            "description": "This is the ephemeral disk settings.",
            "type": "object"
          },
          "diskSizeGB": {
            "description": "This is the size of the disk in GB.",
            "type": "string"
          },
          "encryptionSettings": {
            "$ref": "#/components/schemas/EncryptionSettings",
            "description": "This is the encryption settings for the disk.",
            "type": "object"
          },
          "image": {
            "$ref": "#/components/schemas/DiskImage",
            "description": "This is the source user image virtual hard disk.",
            "type": "object"
          },
          "managedDisk": {
            "$ref": "#/components/schemas/ManagedDisk",
            "description": "This is managed disk parameters.",
            "type": "object"
          },
          "name": {
            "description": "This is the disk name.",
            "type": "string"
          },
          "osType": {
            "description": "This is the type of OS included in the disk.",
            "type": "string"
          },
          "vhd": {
            "$ref": "#/components/schemas/VirtualHardDisk",
            "description": "This is the virtual hard disk.",
            "type": "object"
          },
          "writeAcceleratorEnabled": {
            "description": "This specifies whether or not writeAccelerator is enabled on the disk.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanProperties": {
        "description": "This contains the data about the plan.",
        "properties": {
          "name": {
            "description": "This is the Plan ID.",
            "type": "string"
          },
          "product": {
            "description": "This is the product of the image from the Marketplace.",
            "type": "string"
          },
          "publisher": {
            "description": "This is the publisher ID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PublicKeysProperties": {
        "description": "This contains the data about the public key.",
        "properties": {
          "keyData": {
            "description": "This is the SSH public key certificate used to authenticate with the VM.",
            "type": "string"
          },
          "path": {
            "description": "This specifies the full path on the VM where the SSH public key is stored.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageProfile": {
        "description": "This contains the data about the storage disks associated with the VM.",
        "properties": {
          "dataDisks": {
            "description": "Data disk information",
            "items": {
              "$ref": "#/components/schemas/DataDisk",
              "description": "This contains information about the data disk.",
              "type": "object"
            },
            "type": "array"
          },
          "imageReference": {
            "$ref": "#/components/schemas/ImageReference",
            "description": "Image information",
            "type": "object"
          },
          "osDisk": {
            "$ref": "#/components/schemas/OsDisk",
            "description": "OS disk information",
            "type": "object"
          }
        },
        "type": "object"
      },
      "SubnetProperties": {
        "description": "This contains the properties of the subnet.",
        "properties": {
          "address": {
            "description": "This is the address range of the subnet.",
            "type": "string"
          },
          "prefix": {
            "description": "This is the prefix of the subnet.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualHardDisk": {
        "description": "This is the virtual hard disk.",
        "properties": {
          "uri": {
            "description": "This is the uri of the virtual hard disk.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "description": "A Basic authentication flow",
        "scheme": "basic",
        "type": "http"
      }
    }
  }
}