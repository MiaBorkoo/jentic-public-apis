{
  "openapi": "3.0.0",
  "info": {
    "description": "The Admin Storage Management Client.",
    "title": "StorageManagementClient",
    "version": "2019-08-08-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azsadmin/resource-manager/storage/Microsoft.Storage.Admin/preview/2019-08-08/storage.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Storage.Admin/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationList"
                }
              }
            },
            "description": "OK -- The list of operations has been returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "Commerce"
        ],
        "description": "Get the list of support rest operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get the list of support rest operations.": {
            "$ref": "./examples/Operations/List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/asyncOperations/{asyncOperationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationParameter"
          },
          {
            "$ref": "#/components/parameters/AsyncOperationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationModel"
                }
              }
            },
            "description": "OK -- The async operation has been returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "AsyncOperations"
        ],
        "description": "Returns the async operation specified by asyncOperationId.",
        "operationId": "AsyncOperations_Get",
        "x-ms-examples": {
          "Returns the async operation specified by asyncOperationId.": {
            "$ref": "./examples/AsyncOperations/Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/storageServices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageServiceList"
                }
              }
            },
            "description": "OK -- The list of storage services has been returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "StorageServices"
        ],
        "description": "Returns the storage services list under the specified subscription.",
        "operationId": "StorageServices_ListSub",
        "x-ms-examples": {
          "Returns the storage services list under the specified subscription.": {
            "$ref": "./examples/StorageServices/ListSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageServiceList"
                }
              }
            },
            "description": "OK -- The list of storage services has been returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "StorageServices"
        ],
        "description": "Returns the storage services list under the specified resource group and subscription.",
        "operationId": "StorageServices_ListRG",
        "x-ms-examples": {
          "Returns the storage services list under the specified resource group and subscription.": {
            "$ref": "./examples/StorageServices/ListResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Storage.Admin/storageServices/{serviceName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StorageServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageService"
                }
              }
            },
            "description": "OK -- The specified storage service has been returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "StorageServices"
        ],
        "description": "Returns the specified storage service.",
        "operationId": "StorageServices_Get",
        "x-ms-examples": {
          "Returns the specified storage service.": {
            "$ref": "./examples/StorageServices/Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StorageServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageService"
                }
              }
            },
            "description": "OK -- The specified storage service has been created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error Response."
          }
        },
        "tags": [
          "StorageServices"
        ],
        "description": "Create the specified storage resource.",
        "operationId": "StorageServices_Create",
        "x-ms-examples": {
          "Create the specified storage resource.": {
            "$ref": "./examples/StorageServices/Put.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "REST Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "AsyncOperationIdParameter": {
        "description": "Async Operation Id.",
        "in": "path",
        "name": "asyncOperationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "LocationParameter": {
        "description": "Resource location.",
        "in": "path",
        "name": "location",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "Resource group name.",
        "in": "path",
        "name": "resourceGroup",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "StorageServiceNameParameter": {
        "description": "Storage service name.",
        "in": "path",
        "name": "serviceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Subscription Id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AsyncOperation": {
        "description": "Async operation content",
        "properties": {
          "name": {
            "description": "Async operation name",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsyncOperationModel": {
        "description": "The async operation body for srp request.",
        "properties": {
          "context": {
            "$ref": "#/components/schemas/OperationRequestContext",
            "description": "Operation context.",
            "readOnly": true,
            "x-ms-client-flatten": true
          },
          "httpStatus": {
            "description": "Http status for the async operation.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The operation id.",
            "readOnly": true,
            "type": "string"
          },
          "locationHeader": {
            "description": "Location header for async operation.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "$ref": "#/components/schemas/AsyncOperation",
            "description": "Async operation content.",
            "readOnly": true,
            "x-ms-client-flatten": true
          },
          "operationEndTime": {
            "description": "Operation end time.",
            "readOnly": true,
            "type": "string"
          },
          "operationStartTime": {
            "description": "Operation start time.",
            "readOnly": true,
            "type": "string"
          },
          "response": {
            "description": "Response for the async operation.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id for async operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Display": {
        "description": "Contains the localized display information for this particular operation / action.",
        "properties": {
          "description": {
            "description": "The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise \u2013 it will be used in tool tips and detailed views.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "The localized friendly name for the operation, as it should be shown to the user.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "The localized friendly form of the resource provider name \u2013 it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "The localized friendly form of the resource type related to this action/operation \u2013 it should match the public documentation for the resource provider.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "The error response for request which failed.",
        "properties": {
          "code": {
            "description": "The error description code.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "The error details information.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "message": {
            "description": "The error description message.",
            "readOnly": true,
            "type": "string"
          },
          "target": {
            "description": "The error target description.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "Describes the supported REST operation.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/Display",
            "description": "Contains the localized display information for this particular operation / action.",
            "readOnly": true
          },
          "name": {
            "description": "The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationList": {
        "description": "Pageable list of supported operations.",
        "properties": {
          "value": {
            "description": "List of operations",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "OperationRequestContext": {
        "description": "Operation request context.",
        "properties": {
          "activityId": {
            "description": "Activity id for the operation.",
            "readOnly": true,
            "type": "string"
          },
          "apiVersion": {
            "description": "Operation api version.",
            "readOnly": true,
            "type": "string"
          },
          "errorCode": {
            "description": "Async operation error code if operation failed.",
            "readOnly": true,
            "type": "string"
          },
          "operationName": {
            "description": "Async operation name.",
            "readOnly": true,
            "type": "string"
          },
          "runtimeException": {
            "description": "Runtime exception if operation failed.",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "Start time for the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "Base resource object.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource Location.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource Name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource Type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ServiceNameProperties": {
        "description": "The properties for service name.",
        "properties": {
          "serviceName": {
            "description": "Service Name for Storage Service.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "MDM storage service resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ServiceNameProperties",
            "description": "Properties for service name.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "StorageServiceList": {
        "description": "List for storage services.",
        "items": {
          "$ref": "#/components/schemas/StorageService"
        },
        "type": "array"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}