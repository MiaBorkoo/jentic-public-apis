openapi: 3.0.0
info:
  title: LUIS Authoring Client
  version: 3.0-preview
servers:
  - url: '{Endpoint}/luis/authoring/v3.0-preview'
    variables:
      Endpoint:
        description: >-
          Supported Cognitive Services endpoints (protocol and hostname, for
          example: https://westus.api.cognitive.microsoft.com).
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /apps/:
    get:
      parameters:
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsInfoList'
          description: A list of the user applications.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Lists all of the user's applications.
      operationId: Apps_List
      x-ms-examples:
        Successful Get Applications List request:
          $ref: ./examples/apps/SuccessfulGetApplicationsListRequest.json
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created application.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Creates a new LUIS app.
      operationId: Apps_Add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateObject'
        description: >-
          An application containing Name, Description (optional), Culture, Usage
          Scenario (optional), Domain (optional) and initial version ID
          (optional) of the application. Default value for the version ID is
          "0.1". Note: the culture cannot be changed after the app is created.
        required: true
      x-ms-examples:
        Successful Application Creation:
          $ref: ./examples/apps/SuccessfulAddApplicationRequest.json
  /apps/assistants:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAssistantsResponse'
          description: >-
            A personal assistant apps JSON object containing the endpoint URLs
            for Cortana applications and the user's endpoint keys.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the endpoint URLs for the prebuilt Cortana applications.
      operationId: Apps_ListCortanaEndpoints
      x-ms-examples:
        Successful Get Personal Assistant Applications:
          $ref: ./examples/apps/SuccessfulGetPersonalAssistantApplications.json
  /apps/cultures:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableCultures'
          description: A list object containing the supported application cultures.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets a list of supported cultures. Cultures are equivalent to the
        written language and locale. For example,"en-us" represents the U.S.
        variation of English.
      operationId: Apps_ListSupportedCultures
      x-ms-examples:
        Successful Get Application Cultures request:
          $ref: ./examples/apps/SuccessfulGetApplicationCulturesRequest.json
  /apps/customprebuiltdomains:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrebuiltDomainsList'
          description: >-
            Returns a list of all custom prebuilt domains and their
            intents/entities representation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets all the available custom prebuilt domains for all cultures.
      operationId: Apps_ListAvailableCustomPrebuiltDomains
      x-ms-examples:
        Successful Get Available Custom Prebuilt Domains request:
          $ref: >-
            ./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsRequest.json
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created application.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a prebuilt domain along with its intent and entity models as a new
        application.
      operationId: Apps_AddCustomPrebuiltDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrebuiltDomainCreateObject'
        description: >-
          A prebuilt domain create object containing the name and culture of the
          domain.
        required: true
      x-ms-examples:
        Successful Add Custom Prebuilt Application request:
          $ref: ./examples/apps/SuccessfulAddCustomPrebuiltApplicationRequest.json
  '/apps/customprebuiltdomains/{culture}':
    get:
      parameters:
        - description: Culture.
          in: path
          name: culture
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrebuiltDomainsList'
          description: >-
            Returns a list of all domains and their intents and entities for a
            specific culture.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets all the available prebuilt domains for a specific culture.
      operationId: Apps_ListAvailableCustomPrebuiltDomainsForCulture
      x-ms-examples:
        Successful Get AvailableCustomPrebuiltDomainsForCulture request:
          $ref: >-
            ./examples/apps/SuccessfulGetAvailableCustomPrebuiltDomainsForCultureRequest.json
  /apps/domains:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDomains'
          description: A list object containing the available application domains.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the available application domains.
      operationId: Apps_ListDomains
      x-ms-examples:
        Successful Get Application Domains request:
          $ref: ./examples/apps/SuccessfulGetApplicationDomainsRequest.json
  /apps/import:
    post:
      parameters:
        - description: >-
            The application name to create. If not specified, the application
            name will be read from the imported object. If the application name
            already exists, an error is returned.
          in: query
          name: appName
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the imported application.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Imports an application to LUIS, the application's structure is included
        in the request body.
      operationId: Apps_Import
      requestBody:
        $ref: '#/components/requestBodies/LuisApp'
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/apps/SuccessfulImportApplicationRequest.json
  /apps/usagescenarios:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationUsageScenarios'
          description: A list object containing the available application usage scenarios.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the application available usage scenarios.
      operationId: Apps_ListUsageScenarios
      x-ms-examples:
        Successful Get Application Usage Scenarios request:
          $ref: >-
            ./examples/apps/SuccessfulGetApplicationUsageScenariosListRequest.json
  '/apps/{appId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/ForcePath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes an application.
      operationId: Apps_Delete
      x-ms-examples:
        Successful Rename Application request:
          $ref: ./examples/apps/SuccessfulDeleteApplicationRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationInfoResponse'
          description: The application info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the application info.
      operationId: Apps_Get
      x-ms-examples:
        Successful Get Application Info request:
          $ref: ./examples/apps/SuccessfulGetApplicationInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated application name and description.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the name or description of the application.
      operationId: Apps_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateObject'
        description: A model containing Name and Description of the application.
        required: true
      x-ms-examples:
        Successful Rename Application request:
          $ref: ./examples/apps/SuccessfulRenameApplicationRequest.json
  '/apps/{appId}/azureaccounts':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/BearerAuthPath'
        - $ref: '#/components/parameters/ArmTokenParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Removes assigned Azure account from the application.
      operationId: AzureAccounts_RemoveFromApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccountInfoObject'
        description: The Azure account information object.
      summary: apps - Removes an assigned LUIS Azure account from an application
      x-ms-examples:
        Successful delete assigned azure account request:
          $ref: ./examples/stats/SuccessfulDeleteAssignedAzureAccountRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/BearerAuthPath'
        - $ref: '#/components/parameters/ArmTokenParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureAccountInfoList'
          description: A list of azure account information objects.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the LUIS Azure accounts assigned to the application for the user
        using his ARM token.
      operationId: AzureAccounts_GetAssigned
      summary: apps - Get LUIS Azure accounts assigned to the application
      x-ms-examples:
        Successful Get assigned azure accounts request:
          $ref: ./examples/stats/SuccessfulGetAssignedAzureAccountsRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/BearerAuthPath'
        - $ref: '#/components/parameters/ArmTokenParameter'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Assigns an Azure account to the application.
      operationId: AzureAccounts_AssignToApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureAccountInfoObject'
        description: The Azure account information object.
      summary: apps - Assign a LUIS Azure account to an application
      x-ms-examples:
        Successful Assign azure account request:
          $ref: ./examples/stats/SuccessfulAssignAzureAccountRequest.json
  '/apps/{appId}/endpoints':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableEndpoints'
          description: >-
            Returns a list of endpoints regions and their corresponding endpoint
            URL.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Returns the available endpoint deployment regions and URLs.
      operationId: Apps_ListEndpoints
      x-ms-examples:
        Successful Get Endpoints request:
          $ref: ./examples/apps/SuccessfulGetEndpointsRequest.json
  '/apps/{appId}/publish':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionOrStagingEndpointInfo'
          description: >-
            An object containing the application endpoint URL, its assigned
            endpoint key and publishing status.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionOrStagingEndpointInfo'
          description: >-
            An object containing the application endpoint URL, its assigned
            endpoint key and publishing status in case that publishing one or
            more regions failed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Publishes a specific version of the application.
      operationId: Apps_Publish
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationPublishObject'
        description: >-
          The application publish object. The region is the target region that
          the application is published to.
        required: true
      x-ms-examples:
        Successful Publish Application request:
          $ref: ./examples/apps/SuccessfulPublishApplicationRequest.json
  '/apps/{appId}/publishsettings':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishSettings'
          description: The application publish settings.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Get the application publish settings including 'UseAllTrainingData'.
      operationId: Apps_GetPublishSettings
      x-ms-examples:
        Successful Get Publish Settings request:
          $ref: ./examples/apps/SuccessfulGetPublishSettingsRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated application settings.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the application publish settings including 'UseAllTrainingData'.
      operationId: Apps_UpdatePublishSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishSettingUpdateObject'
        description: An object containing the new publish application settings.
        required: true
      x-ms-examples:
        Successful Update Publish Settings request:
          $ref: ./examples/apps/SuccessfulUpdatePublishSettingsRequest.json
  '/apps/{appId}/querylogs':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                description: >-
                  The query logs of an application for the past month in CSV
                  format.
                format: file
                type: object
          description: A CSV file containing the query logs for the past month.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the logs of the past month's endpoint queries for the application.
      operationId: Apps_DownloadQueryLogs
      x-ms-examples:
        Successful Download Application Query logs request:
          $ref: ./examples/apps/SuccessfulDownloadApplicationQueryLogsRequest.json
  '/apps/{appId}/settings':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSettings'
          description: The application settings.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Get the application settings including 'UseAllTrainingData'.
      operationId: Apps_GetSettings
      x-ms-examples:
        Successful Get Application Settings request:
          $ref: ./examples/apps/SuccessfulGetApplicationSettingsRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated application settings.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the application settings including 'UseAllTrainingData'.
      operationId: Apps_UpdateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSettingUpdateObject'
        description: An object containing the new application settings.
        required: true
      x-ms-examples:
        Successful Update Application Settings request:
          $ref: ./examples/apps/SuccessfulUpdateApplicationSettingsRequest.json
  '/apps/{appId}/versions':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VersionInfo'
                type: array
          description: A list of all versions of the application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets a list of versions for this application ID.
      operationId: Versions_List
      x-ms-examples:
        Successful Get Application Versions info request:
          $ref: ./examples/versions/SuccessfulGetApplicationVersionsInfoRequest.json
  '/apps/{appId}/versions/import':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - description: >-
            The new versionId to import. If not specified, the versionId will be
            read from the imported object.
          in: query
          name: versionId
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: The created application version.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Imports a new version into a LUIS application.
      operationId: Versions_Import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LuisApp'
        description: A LUIS application structure.
        required: true
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/versions/SuccessfulImportApplicationVersionRequest.json
  '/apps/{appId}/versions/{versionId}/':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes an application version.
      operationId: Versions_Delete
      x-ms-examples:
        Successful Delete Application Version request:
          $ref: ./examples/versions/SuccessfulDeleteApplicationVersionRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'
          description: A model containing the version info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the version information such as date created, last modified date,
        endpoint URL, count of intents and entities, training and publishing
        status.
      operationId: Versions_Get
      x-ms-examples:
        Successful Get Application Version info request:
          $ref: ./examples/versions/SuccessfulGetApplicationVersionInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the name or description of the application version.
      operationId: Versions_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateObject'
        description: A model containing Name and Description of the application.
        required: true
      x-ms-examples:
        Successful Rename Application Version request:
          $ref: ./examples/versions/SuccessfulRenameApplicationVersionRequest.json
  '/apps/{appId}/versions/{versionId}/clone':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                type: string
          description: The new version ID.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Creates a new version from the selected version.
      operationId: Versions_Clone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdateObject'
        description: A model containing the new version ID.
        required: true
      x-ms-examples:
        Successful Clone Application Version request:
          $ref: ./examples/versions/SuccessfulCloneApplicatioVersionRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedListEntityExtractorsList'
          description: A list of list entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the list entity models in a version of the
        application.
      operationId: Model_ListClosedLists
      x-ms-examples:
        Successful Get Application Version Closed List Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionClosedListInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds a list entity model to a version of the application.
      operationId: Model_AddClosedList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedListModelCreateObject'
        description: >-
          A model containing the name and words for the new list entity
          extractor.
        required: true
      x-ms-examples:
        Successful Create Closed List Entity Model request:
          $ref: ./examples/model/SuccessfulCreateClosedListEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list entity model ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully delete list entity from a version of application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a list entity model from a version of the application.
      operationId: Model_DeleteClosedList
      x-ms-examples:
        Successful Delete Closed List Entity Info request:
          $ref: ./examples/model/SuccessfulDeleteClosedListEntityModelRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list model ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedListEntityExtractor'
          description: The list model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets information about a list entity in a version of the application.
      operationId: Model_GetClosedList
      x-ms-examples:
        Successful Get Closed List Entity Info request:
          $ref: ./examples/model/SuccessfulGetClosedListEntityInfoRequest.json
    patch:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list entity model ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully added sublists to the list entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a batch of sublists to an existing list entity in a version of the
        application.
      operationId: Model_PatchClosedList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedListModelPatchObject'
        description: A words list batch.
        required: true
      x-ms-examples:
        Successful Add SubLists to Closed List Entity request:
          $ref: ./examples/model/SuccessfulPatchClosedListEntityModelRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list model ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated list entity name and words list.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the list entity in a version of the application.
      operationId: Model_UpdateClosedList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedListModelUpdateObject'
        description: The new list entity name and words list.
        required: true
      x-ms-examples:
        Successful Update Closed List Entity Info request:
          $ref: ./examples/model/SuccessfulUpdateClosedListEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list entity extractor ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                format: int64
                type: integer
          description: The ID of the newly created sublist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a sublist to an existing list entity in a version of the
        application.
      operationId: Model_AddSubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordListObject'
        description: Words list.
        required: true
      x-ms-examples:
        Successful Add Sublist request:
          $ref: >-
            ./examples/model/SuccessfulAddSublistToClosedListEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list entity extractor ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The sublist ID.
          in: path
          name: subListId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted sublist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes a sublist of a specific list entity model from a version of the
        application.
      operationId: Model_DeleteSubList
      x-ms-examples:
        Successful Delete Sublist request:
          $ref: ./examples/model/SuccessfulDeleteSublistRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The list entity extractor ID.
          in: path
          name: clEntityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The sublist ID.
          in: path
          name: subListId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated sublist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates one of the list entity's sublists in a version of the
        application.
      operationId: Model_UpdateSubList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WordListBaseUpdateObject'
        description: >-
          A sublist update object containing the new canonical form and the list
          of words.
        required: true
      x-ms-examples:
        Successful Update Sublist request:
          $ref: ./examples/model/SuccessfulUpdateSublistRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListClosedListEntityRoles
      summary: Get all roles for a list entity in a version of the application.
      x-ms-examples:
        Successful Get Closed List Entity Roles request:
          $ref: ./examples/model/SuccessfulGetClosedListEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateClosedListEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create a role for a list entity in a version of the application.
      x-ms-examples:
        Successful Create Closed List Entity Role request:
          $ref: ./examples/model/SuccessfulCreateClosedListEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteClosedListEntityRole
      summary: Delete a role for a given list entity in a version of the application.
      x-ms-examples:
        Successful Delete Prebuilt Entity Role request:
          $ref: ./examples/model/SuccessfulDeletePrebuiltEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetClosedListEntityRole
      summary: Get one role for a given list entity in a version of the application.
      x-ms-examples:
        Successful Get Closed List Entity Role request:
          $ref: ./examples/model/SuccessfulGetClosedListEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateClosedListEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: Update a role for a given list entity in a version of the application.
      x-ms-examples:
        Successful Update Closed List Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdateClosedListEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeEntityExtractorsList'
          description: A list of composite entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the composite entity models in a version of
        the application.
      operationId: Model_ListCompositeEntities
      x-ms-examples:
        Successful Get Application Version Composite Entity Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionCompositeEntityInfosRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted composite entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a composite entity from a version of the application.
      operationId: Model_DeleteCompositeEntity
      x-ms-examples:
        Successful Delete Entity Info request:
          $ref: ./examples/model/SuccessfulDeleteCompositeEntityModelRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompositeEntityExtractor'
          description: The composite entity model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about a composite entity in a version of the
        application.
      operationId: Model_GetCompositeEntity
      x-ms-examples:
        Successful Get Composite Entity Info request:
          $ref: ./examples/model/SuccessfulGetCompositeEntityInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated composite entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates a composite entity in a version of the application.
      operationId: Model_UpdateCompositeEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositeEntityModel'
        description: A model object containing the new entity extractor name and children.
        required: true
      x-ms-examples:
        Successful Update Composite Entity Extractor request:
          $ref: ./examples/model/SuccessfulUpdateCompositeEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Creates a single child in an existing composite entity model in a
        version of the application.
      operationId: Model_AddCompositeEntityChild
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: A model object containing the name of the new composite child model.
        required: true
      x-ms-examples:
        Successful Create Composite Entity Child Model request:
          $ref: ./examples/model/SuccessfulCreateCompositeChildModelRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
        - description: The hierarchical entity extractor child ID.
          in: path
          name: cChildId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes a composite entity extractor child from a version of the
        application.
      operationId: Model_DeleteCompositeEntityChild
      x-ms-examples:
        Successful Delete Composite Entity Child Model request:
          $ref: ./examples/model/SuccessfulDeleteCompositeChildModelRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListCompositeEntityRoles
      summary: Get all roles for a composite entity in a version of the application
      x-ms-examples:
        Successful Get Composite Entity Roles request:
          $ref: ./examples/model/SuccessfulGetCompositeEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateCompositeEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create a role for a composite entity in a version of the application.
      x-ms-examples:
        Successful Create Composite Entity Role request:
          $ref: ./examples/model/SuccessfulCreateCompositeEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteCompositeEntityRole
      summary: >-
        Delete a role for a given composite entity in a version of the
        application.
      x-ms-examples:
        Successful Delete Composite Entity Role request:
          $ref: ./examples/model/SuccessfulDeleteCompositeEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetCompositeEntityRole
      summary: >-
        Get one role for a given composite entity in a version of the
        application
      x-ms-examples:
        Successful Get Composite Entity Role request:
          $ref: ./examples/model/SuccessfulGetCompositeEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/CEntityIdInPath'
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateCompositeEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given composite entity in a version of the
        application
      x-ms-examples:
        Successful Update Composite Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdateCompositeEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltdomains':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidList'
          description: >-
            An array of the created customizable prebuilt domain intent and
            entity model Ids.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a customizable prebuilt domain along with all of its intent and
        entity models in a version of the application.
      operationId: Model_AddCustomPrebuiltDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrebuiltDomainCreateBaseObject'
        description: A prebuilt domain create object containing the name of the domain.
        required: true
      x-ms-examples:
        Successful Add Custom Prebuilt Domain to Application request:
          $ref: >-
            ./examples/model/SuccessfulAddCustomPrebuildDomainToApplicationRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: Domain name.
          in: path
          name: domainName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a prebuilt domain's models in a version of the application.
      operationId: Model_DeleteCustomPrebuiltDomain
      x-ms-examples:
        Successful Delete Prebuilt Domain from Application request:
          $ref: >-
            ./examples/model/SuccessfulDeletePrebuiltDomainFromApplicationRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltentities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityExtractorsList'
          description: Returns a list of all prebuilt entities and their representations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets all prebuilt entities used in a version of the application.
      operationId: Model_ListCustomPrebuiltEntities
      x-ms-examples:
        Successful Get Custom Prebuilt Domain Entities request:
          $ref: >-
            ./examples/model/SuccessfulGetCustomPrebuiltDomainEntitiesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created prebuilt model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds a prebuilt entity model to a version of the application.
      operationId: Model_AddCustomPrebuiltEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrebuiltDomainModelCreateObject'
        description: >-
          A model object containing the name of the prebuilt entity and the name
          of the domain to which this model belongs.
        required: true
      x-ms-examples:
        Successful Add Custom Prebuilt Entity request:
          $ref: ./examples/model/SuccessfulAddCustomPrebuiltEntityRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListCustomPrebuiltEntityRoles
      summary: Get all roles for a prebuilt entity in a version of the application
      x-ms-examples:
        Successful Get Custom Prebuilt Entity Roles request:
          $ref: ./examples/model/SuccessfulGetCustomPrebuiltEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateCustomPrebuiltEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create a role for a prebuilt entity in a version of the application.
      x-ms-examples:
        Successful Create Custom Prebuilt Entity Role request:
          $ref: >-
            ./examples/model/SuccessfulCreateCustomPrebuiltEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteCustomEntityRole
      summary: >-
        Delete a role for a given prebuilt entity in a version of the
        application.
      x-ms-examples:
        Successful Delete Custom Prebuilt Entity Role request:
          $ref: >-
            ./examples/model/SuccessfulDeleteCustomPrebuiltEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetCustomEntityRole
      summary: >-
        Get one role for a given prebuilt entity in a version of the
        application.
      x-ms-examples:
        Successful Get Custom Prebuilt Domain Entity Role request:
          $ref: >-
            ./examples/model/SuccessfulGetCustomPrebuiltEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateCustomPrebuiltEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given prebuilt entity in a version of the
        application.
      x-ms-examples:
        Successful Update Custom Prebuilt Entity Extractor Role request:
          $ref: >-
            ./examples/model/SuccessfulUpdateCustomPrebuiltEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltintents':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntentClassifiersList'
          description: >-
            Returns a list of all customizable prebuilt intents and their
            representations in a version of the application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about customizable prebuilt intents added to a version
        of the application.
      operationId: Model_ListCustomPrebuiltIntents
      x-ms-examples:
        Successful Get Custom Prebuilt Intent request:
          $ref: ./examples/model/SuccessfulGetCustomPrebuildIntentRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created intent model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a customizable prebuilt intent model to a version of the
        application.
      operationId: Model_AddCustomPrebuiltIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrebuiltDomainModelCreateObject'
        description: >-
          A model object containing the name of the customizable prebuilt intent
          and the name of the domain to which this model belongs.
        required: true
      x-ms-examples:
        Successful Add Custom Prebuilt Intent request:
          $ref: ./examples/model/SuccessfulAddCustomPrebuildIntentRequest.json
  '/apps/{appId}/versions/{versionId}/customprebuiltmodels':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomPrebuiltModelList'
          description: Returns a list of all prebuilt models and their representations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets all prebuilt intent and entity model information used in a version
        of this application.
      operationId: Model_ListCustomPrebuiltModels
      x-ms-examples:
        Successful Get Custom Prebuilt Domain Models request:
          $ref: ./examples/model/SuccessfulGetCustomPrebuiltDomainModelsRequest.json
  '/apps/{appId}/versions/{versionId}/entities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NDepthEntityExtractorsList'
          description: A list of entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the simple entity models in a version of the
        application.
      operationId: Model_ListEntities
      x-ms-examples:
        Successful Get Application Version Entity Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionEntityInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds an entity extractor to a version of the application.
      operationId: Model_AddEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityModelCreateObject'
        description: >-
          A model object containing the name of the new entity extractor and its
          children.
        required: true
      x-ms-examples:
        Successful Create Entity Extractor request:
          $ref: ./examples/model/SuccessfulCreateEntityExtractorRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity extractor or the child entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes an entity or a child from a version of the application.
      operationId: Model_DeleteEntity
      x-ms-examples:
        Successful Delete Entity Info request:
          $ref: ./examples/model/SuccessfulDeleteEntityExtractorRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NDepthEntityExtractor'
          description: An entity model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets information about an entity model in a version of the application.
      operationId: Model_GetEntity
      x-ms-examples:
        Successful Get Entity Info request:
          $ref: ./examples/model/SuccessfulGetEntityInfoRequest.json
    patch:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity extractor or the child entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates the name of an entity extractor or the name and instanceOf model
        of a child entity extractor.
      operationId: Model_UpdateEntityChild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityModelUpdateObject'
        description: >-
          A model object containing the name new entity extractor or the name
          and instance of model of a child entity extractor 
        required: true
      x-ms-examples:
        Successful Update Entity Extractor request:
          $ref: ./examples/model/SuccessfulUpdateEntityExtractorRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}/children':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Creates a single child in an existing entity model hierarchy in a
        version of the application.
      operationId: Model_AddEntityChild
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChildEntityModelCreateObject'
        description: >-
          A model object containing the name of the new child model and its
          children.
        required: true
      x-ms-examples:
        Successful Create Entity Child Model request:
          $ref: ./examples/model/SuccessfulCreateEntityChildModelRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}/features':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes a relation from the feature relations used by the entity in a
        version of the application.
      operationId: Model_DeleteEntityFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFeatureInformation'
        description: >-
          A feature information object containing the feature relation to
          delete.
        required: true
      x-ms-examples:
        Successful Delete feature relation request:
          $ref: ./examples/model/SuccessfulDeleteEntityFeatureRelationRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesPerModelResponseObject'
          description: A list of feature information objects for the entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the information of the features used by the entity in a version of
        the application.
      operationId: Model_GetEntityFeatures
      x-ms-examples:
        Successful Get Features information request:
          $ref: ./examples/model/SuccessfulGetEntityFeaturesInfoRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a new feature relation to be used by the entity in a version of the
        application.
      operationId: Features_AddEntityFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFeatureInformation'
        description: A Feature relation information object.
        required: true
      x-ms-examples:
        Successful Add Feature Relation request:
          $ref: ./examples/model/SuccessfulAddEntityFeatureRelationRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates the information of the features used by the entity in a version
        of the application.
      operationId: Model_ReplaceEntityFeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesPerModelResponseObject'
        description: >-
          A list of feature information objects containing the new feature
          relations.
        required: true
      x-ms-examples:
        Successful Replace Features request:
          $ref: ./examples/model/SuccessfulReplaceEntityFeaturesRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListEntityRoles
      summary: Get all roles for an entity in a version of the application
      x-ms-examples:
        Successful Get Entity Roles request:
          $ref: ./examples/model/SuccessfulGetEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create an entity role in a version of the application.
      x-ms-examples:
        Successful Create Entity Role request:
          $ref: ./examples/model/SuccessfulCreateEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteEntityRole
      summary: Delete an entity role in a version of the application.
      x-ms-examples:
        Successful Delete Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulDeleteEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetEntityRole
      summary: Get one role for a given entity in a version of the application
      x-ms-examples:
        Successful Get Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulGetEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: Update a role for a given entity in a version of the application.
      x-ms-examples:
        Successful Update Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdateEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The target entity extractor model to enhance.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/TakeInPath'
        - $ref: '#/components/parameters/EnableNestedChildren'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesSuggestionExamples'
          description: >-
            If there's no trained entity model, nothing is returned in the
            response. If there's a trained model and active learning finds any
            relevant queries, they are returned with the entity model
            predictions. If there's a trained model but active learning didn't
            find any relevant queries, an empty list is returned in the
            response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Get suggested example utterances that would improve the accuracy of the
        entity model in a version of the application.
      operationId: Model_ListEntitySuggestions
      x-ms-examples:
        Successful Get Entity Suggestion Examples:
          $ref: ./examples/model/SuccessfulGetEntitySuggestionExamples.json
  '/apps/{appId}/versions/{versionId}/example':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EnableNestedChildren'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelExampleResponse'
          description: The ID of the created example utterance.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds a labeled example utterance in a version of the application.
      operationId: Examples_Add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleLabelObject'
        description: A labeled example utterance with the expected intent and entities.
        required: true
      x-ms-examples:
        Successful Add Label request:
          $ref: ./examples/examples/SuccessfulAddLabelRequest.json
  '/apps/{appId}/versions/{versionId}/examples':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
        - $ref: '#/components/parameters/EnableNestedChildren'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabeledUtterances'
          description: >-
            A list of predictions and label pairs for every example utterance in
            the application.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Returns example utterances to be reviewed from a version of the
        application.
      operationId: Examples_List
      x-ms-examples:
        Successful Review Labeled Examples request:
          $ref: ./examples/examples/SuccessfulReviewLabeledExamplesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/EnableNestedChildren'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchLabelExampleResponse'
          description: >-
            A string array determining which labeled example utterances were
            added successfully.
        '207':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchLabelExampleResponse'
          description: >-
            Indicates that the request was partially successful. The response
            contains a string array indicating the status of each of the added
            labeled example utterances.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a batch of labeled example utterances to a version of the
        application.
      operationId: Examples_Batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleLabelObjectArray'
        description: Array of example utterances.
        required: true
      x-ms-examples:
        Successful Batch Add Labels request:
          $ref: ./examples/examples/SuccessfulBatchAddLabelsRequest.json
  '/apps/{appId}/versions/{versionId}/examples/{exampleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The example ID.
          in: path
          name: exampleId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted example utterance.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes the labeled example utterances with the specified ID from a
        version of the application.
      operationId: Examples_Delete
      x-ms-examples:
        Successful Delete Example Label request:
          $ref: ./examples/examples/SuccessfulDeleteExampleLabelRequest.json
  '/apps/{appId}/versions/{versionId}/export':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LuisApp'
          description: The LUIS application structure in JSON format.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Exports a LUIS application to JSON format.
      operationId: Versions_Export
      x-ms-examples:
        Successful Export Application Version:
          $ref: ./examples/versions/SuccessfulExportApplicationVersionRequest.json
  '/apps/{appId}/versions/{versionId}/features':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesResponseObject'
          description: >-
            A list of all phraselist features and a list of all pattern
            features.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets all the extraction phraselist and pattern features in a version of
        the application.
      operationId: Features_List
      x-ms-examples:
        Successful Get Application Version Features request:
          $ref: >-
            ./examples/features/SuccessfulGetApplicationVersionFeaturesRequest.json
  '/apps/{appId}/versions/{versionId}/hierarchicalentities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchicalEntityExtractorsList'
          description: A list of hierarchical entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the hierarchical entity models in a version
        of the application.
      operationId: Model_ListHierarchicalEntities
      x-ms-examples:
        Successful Get Application Version Hierarchical Entity Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionHierarchicalEntityInfosRequest.json
  '/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a hierarchical entity from a version of the application.
      operationId: Model_DeleteHierarchicalEntity
      x-ms-examples:
        Successful Delete Hierarchical Entity Model request:
          $ref: ./examples/model/SuccessfulDeleteHierarchicalEntityModelRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchicalEntityExtractor'
          description: A hierarchical entity model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about a hierarchical entity in a version of the
        application.
      operationId: Model_GetHierarchicalEntity
      x-ms-examples:
        Successful Get Hierarchical Entity Info request:
          $ref: ./examples/model/SuccessfulGetHierarchicalEntityInfoRequest.json
    patch:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates the name of a hierarchical entity model in a version of the
        application.
      operationId: Model_UpdateHierarchicalEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateObject'
        description: Model containing names of the hierarchical entity.
        required: true
      x-ms-examples:
        Successful Get Hierarchical Entity Info request:
          $ref: ./examples/model/SuccessfulUpdateHierarchicalEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: The hierarchical entity extractor child ID.
          in: path
          name: hChildId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted entity.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes a hierarchical entity extractor child in a version of the
        application.
      operationId: Model_DeleteHierarchicalEntityChild
      x-ms-examples:
        Successful Delete Hierarchical Entity Child Model request:
          $ref: ./examples/model/SuccessfulDeleteHierarchicalChildModelRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: The hierarchical entity extractor child ID.
          in: path
          name: hChildId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HierarchicalChildEntity'
          description: The hierarchical entity child model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about the child's model contained in an hierarchical
        entity child model in a version of the application.
      operationId: Model_GetHierarchicalEntityChild
      x-ms-examples:
        Successful Get Hierarchical Entity Child Info request:
          $ref: >-
            ./examples/model/SuccessfulGetHierarchicalChildEntityInfoRequest.json
    patch:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: The hierarchical entity extractor child ID.
          in: path
          name: hChildId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated entity child.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Renames a single child in an existing hierarchical entity model in a
        version of the application.
      operationId: Model_UpdateHierarchicalEntityChild
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              type: object
        description: Model object containing new name of the hierarchical entity child.
        required: true
      x-ms-examples:
        Successful Update Hierarchical Entity Child Model request:
          $ref: ./examples/model/SuccessfulUpdateHierarchicalChildModelRequest.json
  '/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListHierarchicalEntityRoles
      summary: Get all roles for a hierarchical entity in a version of the application
      x-ms-examples:
        Successful Get Hierarchical Entity Roles request:
          $ref: ./examples/model/SuccessfulGetHierarchicalEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateHierarchicalEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: >-
        Create a role for an hierarchical entity in a version of the
        application.
      x-ms-examples:
        Successful Create Hierarchical Entity Role request:
          $ref: ./examples/model/SuccessfulCreateHierarchicalEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteHierarchicalEntityRole
      summary: >-
        Delete a role for a given hierarchical role in a version of the
        application.
      x-ms-examples:
        Successful Delete Hierarchical Entity Role request:
          $ref: ./examples/model/SuccessfulDeleteHierarchicalEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetHierarchicalEntityRole
      summary: >-
        Get one role for a given hierarchical entity in a version of the
        application.
      x-ms-examples:
        Successful Get Hierarchical Entity Role request:
          $ref: ./examples/model/SuccessfulGetHierarchicalEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/HEntityIdInPath'
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateHierarchicalEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given hierarchical entity in a version of the
        application.
      x-ms-examples:
        Successful Update Hierarchical Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdateHierarchicalEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/intents':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntentClassifiersList'
          description: A list of intent model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about the intent models in a version of the
        application.
      operationId: Model_ListIntents
      x-ms-examples:
        Successful Get Application Version Intent Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionIntentInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created intent model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds an intent to a version of the application.
      operationId: Model_AddIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCreateObject'
        description: A model object containing the name of the new intent.
        required: true
      x-ms-examples:
        Successful Create Intent Classifier request:
          $ref: ./examples/model/SuccessfulCreateIntentClassifierRequest.json
  '/apps/{appId}/versions/{versionId}/intents/{intentId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
        - description: >-
            If true, deletes the intent's example utterances. If false, moves
            the example utterances to the None intent. The default value is
            false.
          in: query
          name: deleteUtterances
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes an intent from a version of the application.
      operationId: Model_DeleteIntent
      x-ms-examples:
        Successful Delete Intent Model request:
          $ref: ./examples/model/SuccessfulDeleteIntentModelRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntentClassifier'
          description: An intent model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets information about the intent model in a version of the application.
      operationId: Model_GetIntent
      x-ms-examples:
        Successful Get Intent Info request:
          $ref: ./examples/model/SuccessfulGetIntentInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the name of an intent in a version of the application.
      operationId: Model_UpdateIntent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelUpdateObject'
        description: A model object containing the new intent name.
        required: true
      x-ms-examples:
        Successful Rename Intent Model request:
          $ref: ./examples/model/SuccessfulRenameIntentModelRequest.json
  '/apps/{appId}/versions/{versionId}/intents/{intentId}/features':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Deletes a relation from the feature relations used by the intent in a
        version of the application.
      operationId: Model_DeleteIntentFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFeatureInformation'
        description: >-
          A feature information object containing the feature relation to
          delete.
        required: true
      x-ms-examples:
        Successful Delete feature relation request:
          $ref: ./examples/model/SuccessfulDeleteIntentFeatureRelationRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeaturesPerModelResponseObject'
          description: A list of feature information objects for the intent.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the information of the features used by the intent in a version of
        the application.
      operationId: Model_GetIntentFeatures
      x-ms-examples:
        Successful Get Features information request:
          $ref: ./examples/model/SuccessfulGetIntentFeaturesInfoRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Adds a new feature relation to be used by the intent in a version of the
        application.
      operationId: Features_AddIntentFeature
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFeatureInformation'
        description: A Feature relation information object.
        required: true
      x-ms-examples:
        Successful Add Feature Relation request:
          $ref: ./examples/model/SuccessfulAddIntentFeatureRelationRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates the information of the features used by the intent in a version
        of the application.
      operationId: Model_ReplaceIntentFeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeaturesPerModelResponseObject'
        description: >-
          A list of feature information objects containing the new feature
          relations.
        required: true
      x-ms-examples:
        Successful Replace Features request:
          $ref: ./examples/model/SuccessfulReplaceIntentFeaturesRequest.json
  '/apps/{appId}/versions/{versionId}/intents/{intentId}/patternrules':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleList'
          description: The retrieved patterns
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_ListIntentPatterns
      summary: >-
        Returns patterns for the specific intent in a version of the
        application.
      x-ms-examples:
        Successful Get Intent Patterns request:
          $ref: ./examples/patterns/SuccessfulGetIntentPatternsRequest.json
  '/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/IntentIdInPath'
        - $ref: '#/components/parameters/TakeInPath'
        - $ref: '#/components/parameters/EnableNestedChildren'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntentsSuggestionExamples'
          description: >-
            If there's no trained intent model, nothing is returned in the
            response. If there's a trained model and active learning finds any
            relevant queries, they are returned with the intent model
            predictions. If there's a trained model but active learning didn't
            find any relevant queries, an empty list is returned in the
            response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Suggests example utterances that would improve the accuracy of the
        intent model in a version of the application.
      operationId: Model_ListIntentSuggestions
      x-ms-examples:
        Successful Get Intents Suggestion Examples:
          $ref: ./examples/model/SuccessfulGetIntentsSuggestionExamples.json
  '/apps/{appId}/versions/{versionId}/listprebuilts':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailablePrebuiltEntityModels'
          description: A list of the possible prebuilt entity extractors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets all the available prebuilt entities in a version of the
        application.
      operationId: Model_ListPrebuiltEntities
      x-ms-examples:
        Successful Get Available Prebuilt Entity Extractors request:
          $ref: >-
            ./examples/model/SuccessfulGetAvailablePrebuiltEntityExtractorsRequest.json
  '/apps/{appId}/versions/{versionId}/models':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsInfoResponseObject'
          description: A list of application model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the intent and entity models in a version of
        the application.
      operationId: Model_ListModels
      x-ms-examples:
        Successful Get Application Version Model Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionModelInfosRequest.json
  '/apps/{appId}/versions/{versionId}/models/{modelId}/examples':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The ID (GUID) of the model.
          in: path
          name: modelId
          required: true
          schema:
            type: string
          x-ms-parameter-location: method
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamplesPerModelResponseObject'
          description: A list of example utterances for the model.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the example utterances for the given intent or entity model in a
        version of the application.
      operationId: Model_Examples
      x-ms-examples:
        Successful Get Examples Per Model Request:
          $ref: ./examples/model/SuccessfulGetExamplesPerModelRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternAnyEntityExtractorList'
          description: A list of Pattern.Any entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListPatternAnyEntityInfos
      summary: >-
        Get information about the Pattern.Any entity models in a version of the
        application.
      x-ms-examples:
        Successful Create Regex Entity Model request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionPatternAnyEntityInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created Pattern.Any entity model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreatePatternAnyEntityModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternAnyModelCreateObject'
        description: >-
          A model object containing the name and explicit list for the new
          Pattern.Any entity extractor.
        required: true
      summary: Adds a pattern.any entity extractor to a version of the application.
      x-ms-examples:
        Successful Create Regex Entity Model request:
          $ref: >-
            ./examples/model/SuccessfulCreatePatternAnyEntityExtractorRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeletePatternAnyEntityModel
      summary: >-
        Deletes a Pattern.Any entity extractor from a version of the
        application.
      x-ms-examples:
        Successful Delete Pattern.Any Entity request:
          $ref: ./examples/model/SuccessfulDeletePatternAnyEntityRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternAnyEntityExtractor'
          description: A regular expression entity model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetPatternAnyEntityInfo
      summary: >-
        Gets information about the Pattern.Any model in a version of the
        application.
      x-ms-examples:
        Successful Get Pattern.Any Entity request:
          $ref: ./examples/model/SuccessfulGetPatternAnyEntityInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the Pattern.Any entity extractor.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdatePatternAnyEntityModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternAnyModelUpdateObject'
        description: An object containing the explicit list of the Pattern.Any entity.
        required: true
      summary: >-
        Updates the name and explicit (exception) list of a Pattern.Any entity
        model in a version of the application.
      x-ms-examples:
        Successful Update Pattern.Any Entity request:
          $ref: ./examples/model/SuccessfulUpdatePatternAnyEntityRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity id.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitListItemList'
          description: A list of the explicit list items
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetExplicitList
      summary: >-
        Get the explicit (exception) list of the pattern.any entity in a version
        of the application.
      x-ms-examples:
        Successful Get Explicit List request:
          $ref: ./examples/model/SuccessfulGetPatternAnyExplicitListRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitListItemIDResponse'
          description: The ID of the created explicit list item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_AddExplicitListItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitListItemCreateObject'
        description: The new explicit list item.
        required: true
      summary: >-
        Add a new exception to the explicit list for the Pattern.Any entity in a
        version of the application.
      x-ms-examples:
        Successful Create Custom Prebuilt Entity Role request:
          $ref: ./examples/model/SuccessfulCreatePatternAnyExplicitListRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The pattern.any entity id.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The explicit list item which will be deleted.
          in: path
          name: itemId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteExplicitListItem
      summary: >-
        Delete an item from the explicit (exception) list for a Pattern.any
        entity in a version of the application.
      x-ms-examples:
        Successful Delete Pattern.Any Explicit List Item request:
          $ref: >-
            ./examples/model/SuccessfulDeletePatternAnyExplicitListItemRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity Id.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The explicit list item Id.
          in: path
          name: itemId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplicitListItem'
          description: An explicit list item info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetExplicitListItem
      summary: >-
        Get the explicit (exception) list of the pattern.any entity in a version
        of the application.
      x-ms-examples:
        Successful Get Pattern.Any Explicit List Item request:
          $ref: ./examples/model/SuccessfulGetPatternAnyExplicitListItemRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The Pattern.Any entity extractor ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The explicit list item ID.
          in: path
          name: itemId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the explicit list item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateExplicitListItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplicitListItemUpdateObject'
        description: The new explicit list item.
        required: true
      summary: >-
        Updates an explicit (exception) list item for a Pattern.Any entity in a
        version of the application.
      x-ms-examples:
        Successful Update Pattern.Any Entity Explicit List Item request:
          $ref: >-
            ./examples/model/SuccessfulUpdatePatternAnyEntityExplicitListItemRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListPatternAnyEntityRoles
      summary: Get all roles for a Pattern.any entity in a version of the application
      x-ms-examples:
        Successful Get Pattern.Any Entity Roles request:
          $ref: ./examples/model/SuccessfulGetPatternAnyEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreatePatternAnyEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create a role for an Pattern.any entity in a version of the application.
      x-ms-examples:
        Successful Create Pattern.Any Entity Role request:
          $ref: ./examples/model/SuccessfulCreatePatternAnyEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeletePatternAnyEntityRole
      summary: >-
        Delete a role for a given Pattern.any entity in a version of the
        application.
      x-ms-examples:
        Successful Delete Pattern.Any Entity Role request:
          $ref: ./examples/model/SuccessfulDeletePatternAnyEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetPatternAnyEntityRole
      summary: >-
        Get one role for a given Pattern.any entity in a version of the
        application.
      x-ms-examples:
        Successful Get Pattern.Any Entity Role request:
          $ref: ./examples/model/SuccessfulGetPatternAnyEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdatePatternAnyEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given Pattern.any entity in a version of the
        application.
      x-ms-examples:
        Successful Update Pattern.Any Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdatePatternAnyEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/patternrule':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleInfo'
          description: The created pattern
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_AddPattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternRuleCreateObject'
        description: The input pattern.
        required: true
      summary: Adds a pattern to a version of the application.
      x-ms-examples:
        Successful Add Pattern request:
          $ref: ./examples/patterns/SuccessfulAddPatternRequest.json
  '/apps/{appId}/versions/{versionId}/patternrules':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_DeletePatterns
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: uuid
                type: string
              type: array
        description: The patterns IDs.
        required: true
      summary: Deletes a list of patterns in a version of the application.
      x-ms-examples:
        Successful Batch Delete Patterns request:
          $ref: ./examples/patterns/SuccessfulDeletePatternsRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleList'
          description: The retrieved patterns
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_ListPatterns
      summary: Gets patterns in a version of the application.
      x-ms-examples:
        Successful Get Application Version Patterns request:
          $ref: ./examples/patterns/SuccessfulGetPatternsRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleList'
          description: The created patterns
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_BatchAddPatterns
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatternRuleCreateObject'
              type: array
        description: A JSON array containing patterns.
        required: true
      summary: Adds a batch of patterns in a version of the application.
      x-ms-examples:
        Successful Batch Add Patterns request:
          $ref: ./examples/patterns/SuccessfulBatchAddLabelsRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleList'
          description: The updated patterns
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_UpdatePatterns
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PatternRuleUpdateObject'
              type: array
        description: An array represents the patterns.
        required: true
      summary: Updates patterns in a version of the application.
      x-ms-examples:
        Successful Batch Update Patterns request:
          $ref: ./examples/patterns/SuccessfulUpdatePatternsRequest.json
  '/apps/{appId}/versions/{versionId}/patternrules/{patternId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The pattern ID.
          in: path
          name: patternId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_DeletePattern
      summary: >-
        Deletes the pattern with the specified ID from a version of the
        application..
      x-ms-examples:
        Successful Delete Pattern request:
          $ref: ./examples/patterns/SuccessfulDeletePatternRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The pattern ID.
          in: path
          name: patternId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatternRuleInfo'
          description: The updated pattern
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Pattern_UpdatePattern
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatternRuleUpdateObject'
        description: An object representing a pattern.
        required: true
      summary: Updates a pattern in a version of the application.
      x-ms-examples:
        Successful Update Pattern request:
          $ref: ./examples/patterns/SuccessfulUpdatePatternRequest.json
  '/apps/{appId}/versions/{versionId}/phraselists':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseListFeatureInfoList'
          description: A list of all phraselist features.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets all the phraselist features in a version of the application.
      operationId: Features_ListPhraseLists
      x-ms-examples:
        Successful Get Application Version Phraselist Features request:
          $ref: >-
            ./examples/features/SuccessfulGetApplicationVersionPhraselistFeaturesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureIDResponse'
          description: The ID of the created feature.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Creates a new phraselist feature in a version of the application.
      operationId: Features_AddPhraseList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraselistCreateObject'
        description: >-
          A Phraselist object containing Name, comma-separated Phrases and the
          isExchangeable boolean. Default value for isExchangeable is true.
        required: true
      x-ms-examples:
        Successful Create Phraselist Feature request:
          $ref: ./examples/features/SuccessfulCreatePhraselistFeatureRequest.json
  '/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The ID of the feature to be deleted.
          in: path
          name: phraselistId
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully deleted phraselist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a phraselist feature from a version of the application.
      operationId: Features_DeletePhraseList
      x-ms-examples:
        Successful Delete Phraselist Feature Info request:
          $ref: >-
            ./examples/features/SuccessfulDeletePhraselistFeatureInfoRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The ID of the feature to be retrieved.
          in: path
          name: phraselistId
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhraseListFeatureInfo'
          description: A phraselist feature info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets phraselist feature info in a version of the application.
      operationId: Features_GetPhraseList
      x-ms-examples:
        Successful Get Phraselist Feature Info request:
          $ref: ./examples/features/SuccessfulGetPhraselistFeatureInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The ID of the feature to be updated.
          in: path
          name: phraselistId
          required: true
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated phraselist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Updates the phrases, the state and the name of the phraselist feature in
        a version of the application.
      operationId: Features_UpdatePhraseList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhraselistUpdateObject'
        description: >-
          The new values for: - Just a boolean called IsActive, in which case
          the status of the feature will be changed. - Name, Pattern, Mode, and
          a boolean called IsActive to update the feature.
      x-ms-examples:
        Successful Update Phraselist Feature Info request:
          $ref: >-
            ./examples/features/SuccessfulUpdatePhraselistFeatureInfoRequest.json
  '/apps/{appId}/versions/{versionId}/prebuilts':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrebuiltEntityExtractorsList'
          description: A list of prebuilt entity models infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about all the prebuilt entities in a version of the
        application.
      operationId: Model_ListPrebuilts
      x-ms-examples:
        Successful Get Application Version Prebuilt Infos request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionPrebuiltInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrebuiltEntityExtractorsList'
          description: An array of the created prebuilt extractor infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Adds a list of prebuilt entities to a version of the application.
      operationId: Model_AddPrebuilt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrebuiltExtractorNames'
        description: An array of prebuilt entity extractor names.
        required: true
      x-ms-examples:
        Successful Add Application Version Prebuilt Infos request:
          $ref: >-
            ./examples/model/SuccessfulAddApplicationVersionPrebuiltInfosRequest.json
  '/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListPrebuiltEntityRoles
      summary: Get a prebuilt entity's roles in a version of the application.
      x-ms-examples:
        Successful Get Prebuilt Entity Roles request:
          $ref: ./examples/model/SuccessfulGetPrebuiltEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreatePrebuiltEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: Create a role for a prebuilt entity in a version of the application.
      x-ms-examples:
        Successful Create Prebuilt Entity Role request:
          $ref: ./examples/model/SuccessfulCreatePrebuiltEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeletePrebuiltEntityRole
      summary: Delete a role in a prebuilt entity in a version of the application.
      x-ms-examples:
        Successful Delete Prebuilt Entity Role request:
          $ref: ./examples/model/SuccessfulDeletePrebuiltEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetPrebuiltEntityRole
      summary: Get one role for a given prebuilt entity in a version of the application
      x-ms-examples:
        Successful Get Prebuilt Entity Role request:
          $ref: ./examples/model/SuccessfulGetPrebuiltEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdatePrebuiltEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given prebuilt entity in a version of the
        application
      x-ms-examples:
        Successful Update Prebuilt Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdatePrebuiltEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The prebuilt entity extractor ID.
          in: path
          name: prebuiltId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deletes a prebuilt entity extractor from a version of the application.
      operationId: Model_DeletePrebuilt
      x-ms-examples:
        Successful Get Prebuilt Info request:
          $ref: ./examples/model/SuccessfulDeletePrebuiltEntityRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The prebuilt entity extractor ID.
          in: path
          name: prebuiltId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrebuiltEntityExtractor'
          description: A prebuilt entity models info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets information about a prebuilt entity model in a version of the
        application.
      operationId: Model_GetPrebuilt
      x-ms-examples:
        Successful Get Prebuilt Info request:
          $ref: ./examples/model/SuccessfulGetPrebuiltInfoRequest.json
  '/apps/{appId}/versions/{versionId}/regexentities':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - $ref: '#/components/parameters/SkipInPath'
        - $ref: '#/components/parameters/TakeInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexEntityExtractorList'
          description: A list of regular expression entity model infos.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListRegexEntityInfos
      summary: >-
        Gets information about the regular expression entity models in a version
        of the application.
      x-ms-examples:
        Successful Get Regex Entity Models request:
          $ref: >-
            ./examples/model/SuccessfulGetApplicationVersionRegexEntityInfosRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created model.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateRegexEntityModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegexModelCreateObject'
        description: >-
          A model object containing the name and regex pattern for the new
          regular expression entity extractor.
        required: true
      summary: Adds a regular expression entity model to a version of the application.
      x-ms-examples:
        Successful Create Regex Entity Model request:
          $ref: ./examples/model/SuccessfulCreateRegexEntityExtractorRequest.json
  '/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity Id
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRoleList'
          description: A list of the entity roles
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_ListRegexEntityRoles
      summary: >-
        Get all roles for a regular expression entity in a version of the
        application.
      x-ms-examples:
        Successful Get Regex Entity Roles request:
          $ref: ./examples/model/SuccessfulGetRegexEntityRolesRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity model ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the created entity role
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_CreateRegexEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleCreateObject'
        description: An entity role object containing the name of role.
        required: true
      summary: >-
        Create a role for an regular expression entity in a version of the
        application.
      x-ms-examples:
        Successful Create Regex Entity Role request:
          $ref: ./examples/model/SuccessfulCreateRegexEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role Id.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteRegexEntityRole
      summary: >-
        Delete a role for a given regular expression in a version of the
        application.
      x-ms-examples:
        Successful Delete Regex Entity Role request:
          $ref: ./examples/model/SuccessfulDeleteRegexEntityRoleRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRole'
          description: An entity role
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetRegexEntityRole
      summary: >-
        Get one role for a given regular expression entity in a version of the
        application.
      x-ms-examples:
        Successful Get Regex Entity Role request:
          $ref: ./examples/model/SuccessfulGetRegexEntityRoleInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The entity ID.
          in: path
          name: entityId
          required: true
          schema:
            format: uuid
            type: string
        - description: The entity role ID.
          in: path
          name: roleId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the entity role.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateRegexEntityRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRoleUpdateObject'
        description: The new entity role.
        required: true
      summary: >-
        Update a role for a given regular expression entity in a version of the
        application
      x-ms-examples:
        Successful Update Regex Entity Extractor Role request:
          $ref: ./examples/model/SuccessfulUpdateRegexEntityRoleRequest.json
  '/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The regular expression entity extractor ID.
          in: path
          name: regexEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_DeleteRegexEntityModel
      summary: Deletes a regular expression entity from a version of the application.
      x-ms-examples:
        Successful Delete Regex Entity request:
          $ref: ./examples/model/SuccessfulDeleteRegexEntityRequest.json
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The regular expression entity model ID.
          in: path
          name: regexEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegexEntityExtractor'
          description: A regular expression entity model info.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_GetRegexEntityEntityInfo
      summary: >-
        Gets information about a regular expression entity in a version of the
        application.
      x-ms-examples:
        Successful Get Regex Entity request:
          $ref: ./examples/model/SuccessfulGetRegexEntityInfoRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: The regular expression entity extractor ID.
          in: path
          name: regexEntityId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successfully updated the regular expression entity extractor.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      operationId: Model_UpdateRegexEntityModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegexModelUpdateObject'
        description: An object containing the new entity name and regex pattern.
        required: true
      summary: Updates the regular expression entity in a version of the application.
      x-ms-examples:
        Successful Update Regex Entity request:
          $ref: ./examples/model/SuccessfulUpdateRegexEntityModelRequest.json
  '/apps/{appId}/versions/{versionId}/settings':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppVersionSettingObject'
                type: array
          description: A list of the application version settings.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the settings in a version of the application.
      operationId: Settings_List
      x-ms-examples:
        Successful Get Application Version settings request:
          $ref: >-
            ./examples/versions/SuccessfulGetApplicationVersionSettingsRequest.json
    put:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Updates the settings in a version of the application.
      operationId: Settings_Update
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AppVersionSettingObject'
              type: array
        description: A list of the updated application version settings.
        required: true
      x-ms-examples:
        Successful Update Application Version settings request:
          $ref: >-
            ./examples/versions/SuccessfulUpdateApplicationVersionSettingsRequest.json
  '/apps/{appId}/versions/{versionId}/suggest':
    delete:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationStatus'
          description: Successful operation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Deleted an unlabelled utterance in a version of the application.
      operationId: Versions_DeleteUnlabelledUtterance
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The utterance text to delete.
        required: true
      x-ms-examples:
        Successful Delete Unlabelled Utterance:
          $ref: ./examples/versions/SuccessfulDeleteUnlabelledUtteranceRequest.json
  '/apps/{appId}/versions/{versionId}/train':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/ModelTrainingInfoList'
            application/json:
              schema:
                $ref: '#/components/schemas/ModelTrainingInfoList'
          description: >-
            A successful response provides an array of training status details
            for a LUIS app that you submitted for training. Each element in the
            response array provides training status for a model (intent or
            entity) in the LUIS app. Note: Training status is not provided for
            prebuilt entities because they are pretrained. The "modelId"
            property identifies which intent or entity the training status
            corresponds to. To get the name and type of each model, use the
            models API which has a request URL in this format:
            https://westus.api.cognitive.microsoft.com/luis/api/v3.0-preview/apps/{appId}/versions/{versionId}/models
            The details property for each model can contain the following
            fields: "statusId": An integer from 0 to 3 that corresponds to the
            value of the status field. "status": A string with one of the
            following values: "Success", "UpToDate", "InProgress", "Fail". If
            the status is "Fail", the "failureReason" property provides the
            reason for failure. "exampleCount": The number of examples used for
            training. In the case of the None intent or prebuilt domain intents
            and entities, this number includes example provided internally by
            the system as well as examples you added to your LUIS app.
            "failureReason": A string that indicates the reason training
            failed.  The value "FewLabels" means that no labeled example
            utterances were provided for training. "trainingDateTime": A string
            indicating the time the model was last trained. The value uses the
            ISO 8601 format for representing times in UTC (Coordinated Universal
            Time) with a UTC designator ("Z"), for example:
            "2017-08-10T01:08:34Z".
        default:
          content:
            JSON:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Gets the training status of all models (intents and entities) for the
        specified LUIS app. You must call the train API to train the LUIS app
        before you call this API to get training status. "appID" specifies the
        LUIS app ID. "versionId" specifies the version number of the LUIS app.
        For example, "0.1".
      operationId: Train_GetStatus
      x-ms-examples:
        Successful Get Application Version Training Status request:
          $ref: >-
            ./examples/train/SuccessfulGetApplicationVersionTrainingStatusRequest.json
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
        - description: An enum value specifying mode of training.
          in: query
          name: mode
          schema:
            type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnqueueTrainingResponse'
          description: This response indicates the initial training status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Sends a training request for a version of a specified LUIS app. This
        POST request initiates a request asynchronously. To determine whether
        the training request is successful, submit a GET request to get training
        status. Note: The application version is not fully trained unless all
        the models (intents and entities) are trained successfully or are up to
        date. To verify training success, get the training status at least once
        after training is complete.
      operationId: Train_TrainVersion
      x-ms-examples:
        Successful Train Application Version request:
          $ref: ./examples/train/SuccessfulTrainApplicationVersionRequest.json
  /azureaccounts:
    get:
      parameters:
        - $ref: '#/components/parameters/BearerAuthPath'
        - $ref: '#/components/parameters/ArmTokenParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureAccountInfoList'
          description: A list of Azure account information objects.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Gets the LUIS Azure accounts for the user using his ARM token.
      operationId: AzureAccounts_ListUserLUISAccounts
      summary: user - Get LUIS Azure accounts
      x-ms-examples:
        Successful Get azure accounts request:
          $ref: ./examples/stats/SuccessfulGetAzureAccountsRequest.json
  '/package/{appId}/slot/{slotName}/gzip':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/SlotNameInPath'
      responses:
        '200':
          content:
            application/json: {}
            application/octet-stream: {}
          description: The GZip binary stream of the published application package.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Packages a published LUIS application as a GZip file to be used in the
        LUIS container.
      operationId: Apps_PackagePublishedApplicationAsGzip
      summary: >-
        package - Gets published LUIS application package in binary stream GZip
        format
      x-ms-examples:
        Successful Get published application package request:
          $ref: >-
            ./examples/package/SuccessfulGetTrainedApplicationPackageRequest.json
  '/package/{appId}/versions/{versionId}/gzip':
    get:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/json: {}
            application/octet-stream: {}
          description: The GZip binary stream of the trained application package.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Packages trained LUIS application as GZip file to be used in the LUIS
        container.
      operationId: Apps_PackageTrainedApplicationAsGzip
      summary: >-
        package - Gets trained LUIS application package in binary stream GZip
        format
      x-ms-examples:
        Successful Get published application package request:
          $ref: >-
            ./examples/package/SuccessfulGetPublishedApplicationPackageRequest.json
components:
  parameters:
    AppIdInPath:
      description: The application ID.
      in: path
      name: appId
      required: true
      schema:
        format: uuid
        type: string
      x-ms-parameter-location: method
    ArmTokenParameter:
      description: >-
        The custom arm token header to use; containing the user's ARM token used
        to validate azure accounts information.
      in: header
      name: ArmToken
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    BearerAuthPath:
      description: >-
        The bearer authorization header to use; containing the user's ARM token
        used to validate Azure accounts information.
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    CEntityIdInPath:
      description: The composite entity extractor ID.
      in: path
      name: cEntityId
      required: true
      schema:
        format: uuid
        type: string
      x-ms-parameter-location: method
    EnableNestedChildren:
      description: Toggles nested/flat format
      in: query
      name: enableNestedChildren
      schema:
        default: false
        type: boolean
      x-ms-parameter-location: method
    Endpoint:
      description: >-
        Supported Cognitive Services endpoints (protocol and hostname, for
        example: https://westus.api.cognitive.microsoft.com).
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
    EntityIdInPath:
      description: The entity extractor ID.
      in: path
      name: entityId
      required: true
      schema:
        format: uuid
        type: string
      x-ms-parameter-location: method
    ForcePath:
      description: A flag to indicate whether to force an operation.
      in: query
      name: force
      schema:
        default: false
        type: boolean
      x-ms-parameter-location: method
    HEntityIdInPath:
      description: The hierarchical entity extractor ID.
      in: path
      name: hEntityId
      required: true
      schema:
        format: uuid
        type: string
      x-ms-parameter-location: method
    IntentIdInPath:
      description: The intent classifier ID.
      in: path
      name: intentId
      required: true
      schema:
        format: uuid
        type: string
      x-ms-parameter-location: method
    SkipInPath:
      description: The number of entries to skip. Default value is 0.
      in: query
      name: skip
      schema:
        default: 0
        minimum: 0
        type: integer
      x-ms-parameter-location: method
    SlotNameInPath:
      description: The publishing slot name.
      in: path
      name: slotName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    TakeInPath:
      description: >-
        The number of entries to return. Maximum page size is 500. Default is
        100.
      in: query
      name: take
      schema:
        default: 100
        maximum: 500
        minimum: 0
        type: integer
      x-ms-parameter-location: method
    VersionIdInPath:
      description: The version ID.
      in: path
      name: versionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
  requestBodies:
    AzureAccountInfoObject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AzureAccountInfoObject'
      description: The Azure account information object.
    EntityRoleCreateObject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityRoleCreateObject'
      description: An entity role object containing the name of role.
      required: true
    EntityRoleUpdateObject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityRoleUpdateObject'
      description: The new entity role.
      required: true
    FeaturesPerModelResponseObject:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FeaturesPerModelResponseObject'
      description: >-
        A list of feature information objects containing the new feature
        relations.
      required: true
    LuisApp:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LuisApp'
      description: A LUIS application structure.
      required: true
    LuisAppV2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LuisAppV2'
      description: A LUIS application structure.
      required: true
    ModelFeatureInformation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelFeatureInformation'
      description: A Feature relation information object.
      required: true
    ModelFeatureInformation2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ModelFeatureInformation'
      description: A feature information object containing the feature relation to delete.
      required: true
  schemas:
    AppVersionSettingObject:
      description: Object model of an application version setting.
      properties:
        name:
          description: The application version setting name.
          type: string
        value:
          description: The application version setting value.
          type: string
      type: object
    ApplicationCreateObject:
      description: Properties for creating a new LUIS Application
      properties:
        culture:
          description: >-
            The culture for the new application. It is the language that your
            app understands and speaks. E.g.: "en-us". Note: the culture cannot
            be changed after the app is created.
          type: string
        description:
          description: Description of the new application. Optional.
          type: string
        domain:
          description: 'The domain for the new application. Optional. E.g.: Comics.'
          type: string
        initialVersionId:
          description: 'The initial version ID. Optional. Default value is: "0.1"'
          type: string
        name:
          description: The name for the new application.
          type: string
        usageScenario:
          description: 'Defines the scenario for the new application. Optional. E.g.: IoT.'
          type: string
      required:
        - culture
        - name
      type: object
    ApplicationInfoResponse:
      description: Response containing the Application Info.
      properties:
        activeVersion:
          description: The version ID currently marked as active.
          type: string
        createdDateTime:
          description: The version's creation timestamp.
          type: string
        culture:
          description: 'The culture of the application. For example, "en-us".'
          type: string
        description:
          description: The description of the application.
          type: string
        domain:
          description: 'The domain for the new application. Optional. For example, Comics.'
          type: string
        endpointHitsCount:
          description: Number of calls made to this endpoint.
          type: integer
        endpoints:
          description: The Runtime endpoint URL for this model version.
          type: object
        id:
          description: The ID (GUID) of the application.
          format: uuid
          type: string
        name:
          description: The name of the application.
          type: string
        usageScenario:
          description: >-
            Defines the scenario for the new application. Optional. For example,
            IoT.
          type: string
        versionsCount:
          description: Amount of model versions within the application.
          type: integer
      type: object
    ApplicationPublishObject:
      description: Object model for publishing a specific application version.
      properties:
        isStaging:
          default: false
          description: >-
            Indicates if the staging slot should be used, instead of the
            Production one.
          type: boolean
        versionId:
          description: The version ID to publish.
          type: string
      type: object
    ApplicationSettingUpdateObject:
      description: Object model for updating an application's settings.
      properties:
        public:
          description: >-
            Setting your application as public allows other people to use your
            application's endpoint using their own keys.
          nullable: false
          type: boolean
          x-ms-client-name: isPublic
      type: object
    ApplicationSettings:
      description: The application settings.
      properties:
        id:
          description: The application ID.
          format: uuid
          type: string
        public:
          description: >-
            Setting your application as public allows other people to use your
            application's endpoint using their own keys for billing purposes.
          nullable: false
          type: boolean
          x-ms-client-name: isPublic
      required:
        - id
        - public
      type: object
    ApplicationUpdateObject:
      description: Object model for updating the name or description of an application.
      properties:
        description:
          description: The application's new description.
          type: string
        name:
          description: The application's new name.
          type: string
      type: object
    ApplicationUsageScenarios:
      description: A list of possible application usage scenarios.
      items:
        type: string
      type: array
    ApplicationsInfoList:
      description: List of Application Infos.
      items:
        $ref: '#/components/schemas/ApplicationInfoResponse'
      type: array
    AvailableCulture:
      description: Available culture for using in a new application.
      properties:
        code:
          description: The ISO value for the language.
          type: string
        name:
          description: The language name.
          type: string
      type: object
    AvailableCultures:
      description: A list of available application cultures.
      items:
        $ref: '#/components/schemas/AvailableCulture'
      type: array
    AvailableDomains:
      description: A list of available application domains.
      items:
        type: string
      type: array
    AvailableEndpoints:
      additionalProperties:
        type: string
      description: >-
        Collection of endpoint URLs where the selected application is deployed
        to.
      type: object
    AvailablePrebuiltEntityModel:
      description: Available Prebuilt entity model for using in an application.
      properties:
        description:
          description: The entity description and usage information.
          type: string
        examples:
          description: Usage examples.
          type: string
        name:
          description: The entity name.
          type: string
      type: object
    AvailablePrebuiltEntityModels:
      description: List of Available Prebuilt entity models.
      items:
        $ref: '#/components/schemas/AvailablePrebuiltEntityModel'
      type: array
    AzureAccountInfoList:
      description: List of Azure account info objects.
      items:
        $ref: '#/components/schemas/AzureAccountInfoObject'
      type: array
    AzureAccountInfoObject:
      description: Defines the Azure account information object.
      properties:
        accountName:
          description: The Azure account name.
          type: string
        azureSubscriptionId:
          description: The id for the Azure subscription.
          type: string
        resourceGroup:
          description: The Azure resource group name.
          type: string
      required:
        - azureSubscriptionId
        - resourceGroup
        - accountName
      type: object
    BatchLabelExample:
      description: Response when adding a batch of labeled example utterances.
      properties:
        error:
          $ref: '#/components/schemas/OperationStatus'
        hasError:
          type: boolean
        value:
          $ref: '#/components/schemas/LabelExampleResponse'
      type: object
    BatchLabelExampleResponse:
      description: Response when adding a batch of labeled example utterances.
      items:
        $ref: '#/components/schemas/BatchLabelExample'
      type: array
    ChildEntity:
      description: The base child entity type.
      properties:
        children:
          description: List of children
          items:
            $ref: '#/components/schemas/ChildEntity'
          type: array
        id:
          description: The ID (GUID) belonging to a child entity.
          format: uuid
          type: string
        instanceOf:
          description: Instance of Model.
          type: string
        name:
          description: The name of a child entity.
          type: string
        readableType:
          $ref: '#/components/schemas/ReadableType'
        typeId:
          description: The type ID of the Entity Model.
          type: integer
      required:
        - id
      type: object
    ChildEntityModelCreateObject:
      description: A child entity extractor create object.
      properties:
        children:
          description: Child entities.
          items:
            $ref: '#/components/schemas/ChildEntityModelCreateObject'
            type: object
          type: array
        instanceOf:
          description: The instance of model name
          type: string
        name:
          description: Entity name.
          type: string
      type: object
    ClosedList:
      description: Exported Model - A list entity.
      properties:
        name:
          description: Name of the list entity.
          type: string
        roles:
          items:
            type: string
          type: array
        subLists:
          description: Sublists for the list entity.
          items:
            $ref: '#/components/schemas/SubClosedList'
            type: object
          type: array
      type: object
    ClosedListEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: List Entity Extractor.
      properties:
        subLists:
          description: List of sublists.
          items:
            $ref: '#/components/schemas/SubClosedListResponse'
          type: array
      type: object
    ClosedListEntityExtractorsList:
      description: List of List Entity Extractors.
      items:
        $ref: '#/components/schemas/ClosedListEntityExtractor'
      type: array
    ClosedListModelCreateObject:
      description: Object model for creating a list entity.
      properties:
        name:
          description: Name of the list entity.
          type: string
        subLists:
          description: Sublists for the feature.
          items:
            $ref: '#/components/schemas/WordListObject'
            type: object
          type: array
      type: object
    ClosedListModelPatchObject:
      description: Object model for adding a batch of sublists to an existing list entity.
      properties:
        subLists:
          description: Sublists to add.
          items:
            $ref: '#/components/schemas/WordListObject'
            type: object
          type: array
      type: object
    ClosedListModelUpdateObject:
      description: Object model for updating a list entity.
      properties:
        name:
          description: The new name of the list entity.
          type: string
        subLists:
          description: The new sublists for the feature.
          items:
            $ref: '#/components/schemas/WordListObject'
            type: object
          type: array
      type: object
    CollaboratorsArray:
      properties:
        emails:
          description: The email address of the users.
          items:
            type: string
          type: array
      type: object
    CompositeEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: A Composite Entity Extractor.
      properties:
        children:
          description: List of child entities.
          items:
            $ref: '#/components/schemas/ChildEntity'
          type: array
      type: object
    CompositeEntityExtractorsList:
      description: List of Composite Entity Extractors.
      items:
        $ref: '#/components/schemas/CompositeEntityExtractor'
      type: array
    CompositeEntityModel:
      description: A composite entity extractor.
      properties:
        children:
          description: Child entities.
          items:
            type: string
          type: array
        name:
          description: Entity name.
          type: string
      type: object
    CustomPrebuiltModel:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/IntentClassifier'
        - $ref: '#/components/schemas/EntityExtractor'
      description: A Custom Prebuilt model.
    CustomPrebuiltModelList:
      description: A List of Custom Prebuilt models.
      items:
        $ref: '#/components/schemas/CustomPrebuiltModel'
      type: array
    EndpointInfo:
      description: The base class "ProductionOrStagingEndpointInfo" inherits from.
      properties:
        assignedEndpointKey:
          description: The endpoint key.
          type: string
        endpointRegion:
          description: The endpoint's region.
          type: string
        endpointUrl:
          description: The Runtime endpoint URL for this model version.
          type: string
        failedRegions:
          description: Regions where publishing failed.
          type: string
        isStaging:
          description: >-
            Indicates if the staging slot should be used, instead of the
            Production one.
          type: boolean
        publishedDateTime:
          description: Timestamp when was last published.
          type: string
        region:
          description: The target region that the application is published to.
          type: string
        versionId:
          description: The version ID to publish.
          type: string
      type: object
    EndpointKeys:
      description: >-
        An a array of GUIDs, comprised of Azure Endpoint Keys and the Authoring
        API key.
      items:
        format: uuid
        type: string
      type: array
    EnqueueTrainingResponse:
      description: Response model when requesting to train the model.
      properties:
        status:
          $ref: '#/components/schemas/TrainingStatus'
        statusId:
          description: The train request status ID.
          type: integer
      type: object
    EntitiesSuggestionExample:
      description: Predicted/suggested entity.
      properties:
        entityPredictions:
          description: Predicted/suggested entities.
          items:
            $ref: '#/components/schemas/EntityPrediction'
          type: array
        intentPredictions:
          description: Predicted/suggested intents.
          items:
            $ref: '#/components/schemas/IntentPrediction'
          type: array
        text:
          description: 'The utterance. For example, "What''s the weather like in seattle?"'
          type: string
        tokenizedText:
          description: The utterance tokenized.
          items:
            type: string
          type: array
      type: object
    EntitiesSuggestionExamples:
      description: List of predicted/suggested entities.
      items:
        $ref: '#/components/schemas/EntitiesSuggestionExample'
      type: array
    EntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: Entity Extractor.
      properties:
        customPrebuiltDomainName:
          description: The domain name.
          type: string
        customPrebuiltModelName:
          description: The intent name or entity name.
          type: string
      type: object
    EntityExtractorsList:
      description: List of Entity Extractors.
      items:
        $ref: '#/components/schemas/EntityExtractor'
      type: array
    EntityLabel:
      description: >-
        Defines the entity type and position of the extracted entity within the
        example.
      properties:
        children:
          example:
            - children: []
              endTokenIndex: 0
              entityName: child
              startTokenIndex: 0
          items:
            $ref: '#/components/schemas/EntityLabel'
            type: object
          type: array
        endTokenIndex:
          description: The index within the utterance where the extracted entity ends.
          type: integer
        entityName:
          description: The entity type.
          type: string
        role:
          description: The role of the predicted entity.
          type: string
        roleId:
          description: The role id for the predicted entity.
          format: uuid
          type: string
        startTokenIndex:
          description: The index within the utterance where the extracted entity starts.
          type: integer
      required:
        - entityName
        - startTokenIndex
        - endTokenIndex
      type: object
    EntityLabelObject:
      description: >-
        Defines the entity type and position of the extracted entity within the
        example.
      properties:
        children:
          description: The identified entities within the example utterance.
          example:
            - children: []
              endCharIndex: 0
              entityName: child
              startCharIndex: 0
          items:
            $ref: '#/components/schemas/EntityLabelObject'
            type: object
          type: array
        endCharIndex:
          description: The index within the utterance where the extracted entity ends.
          type: integer
        entityName:
          description: The entity type.
          type: string
        role:
          description: The role the entity plays in the utterance.
          type: string
        startCharIndex:
          description: The index within the utterance where the extracted entity starts.
          type: integer
      required:
        - entityName
        - startCharIndex
        - endCharIndex
      type: object
    EntityModelCreateObject:
      description: An entity extractor create object.
      properties:
        children:
          description: Child entities.
          items:
            $ref: '#/components/schemas/ChildEntityModelCreateObject'
            type: object
          type: array
        name:
          description: Entity name.
          type: string
      type: object
    EntityModelInfo:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
      description: An Entity Extractor model info.
      properties:
        roles:
          $ref: '#/components/schemas/EntityRoleList'
      type: object
    EntityModelUpdateObject:
      description: An entity extractor update object.
      properties:
        instanceOf:
          description: The instance of model name
          type: string
        name:
          description: Entity name.
          type: string
      type: object
    EntityPrediction:
      description: A suggested entity.
      properties:
        children:
          example:
            - endTokenIndex: 0
              entityName: child
              phrase: string
              startTokenIndex: 0
          items:
            $ref: '#/components/schemas/EntityPrediction'
            type: object
          type: array
        endTokenIndex:
          description: The index within the utterance where the extracted entity ends.
          type: integer
        entityName:
          description: The entity's name
          type: string
        phrase:
          description: The actual token(s) that comprise the entity.
          type: string
        startTokenIndex:
          description: The index within the utterance where the extracted entity starts.
          type: integer
      required:
        - entityName
        - startTokenIndex
        - endTokenIndex
        - phrase
      type: object
    EntityRole:
      description: Entity extractor role
      properties:
        id:
          description: The entity role ID.
          format: uuid
          type: string
        name:
          description: The entity role name.
          type: string
      type: object
    EntityRoleCreateObject:
      description: Object model for creating an entity role.
      properties:
        name:
          description: The entity role name.
          type: string
      type: object
    EntityRoleList:
      description: List of Pattern.Any Entity Extractors.
      items:
        $ref: '#/components/schemas/EntityRole'
      type: array
    EntityRoleUpdateObject:
      description: Object model for updating an entity role.
      properties:
        name:
          description: The entity role name.
          type: string
      type: object
    ErrorResponse:
      additionalProperties:
        type: object
      description: Error response when invoking an operation on the API.
      properties:
        errorType:
          type: string
      type: object
    ExampleLabelObject:
      description: A labeled example utterance.
      properties:
        entityLabels:
          description: The identified entities within the example utterance.
          items:
            $ref: '#/components/schemas/EntityLabelObject'
            type: object
          type: array
        intentName:
          description: The identified intent representing the example utterance.
          type: string
        text:
          description: The example utterance.
          type: string
      type: object
    ExampleLabelObjectArray:
      description: Object model for adding a batch of labeled examples.
      items:
        $ref: '#/components/schemas/ExampleLabelObject'
        type: object
      type: array
    ExamplesPerModelResponseObject:
      description: A list of example utterances per model.
      items:
        $ref: '#/components/schemas/LabelTextObject'
      type: array
    ExplicitListItem:
      description: Explicit (exception) list item
      properties:
        explicitListItem:
          description: The explicit list item value.
          type: string
        id:
          description: The explicit list item ID.
          format: int64
          type: integer
      type: object
    ExplicitListItemCreateObject:
      description: Object model for creating an explicit (exception) list item.
      properties:
        explicitListItem:
          description: The explicit list item.
          type: string
      type: object
    ExplicitListItemIDResponse:
      description: The ID of the created explicit list item.
      nullable: false
      type: integer
    ExplicitListItemList:
      description: List of explicit (exception) list items
      items:
        $ref: '#/components/schemas/ExplicitListItem'
      type: array
    ExplicitListItemUpdateObject:
      description: Model object for updating an explicit (exception) list item.
      properties:
        explicitListItem:
          description: The explicit list item.
          type: string
      type: object
    FeatureIDResponse:
      description: The ID of the created feature.
      nullable: false
      type: integer
    FeatureInfoObject:
      description: The base class Features-related response objects inherit from.
      properties:
        enabledForAllModels:
          description: >-
            Indicates if the feature is enabled for all models in the
            application.
          type: boolean
        id:
          description: A six-digit ID used for Features.
          type: integer
        isActive:
          description: Indicates if the feature is enabled.
          type: boolean
        name:
          description: The name of the Feature.
          type: string
      type: object
    FeaturesPerModelResponseObject:
      description: A list of feature information objects per model.
      items:
        $ref: '#/components/schemas/ModelFeatureInformation'
      type: array
    FeaturesResponseObject:
      description: 'Model Features, including Patterns and Phraselists.'
      properties:
        patternFeatures:
          $ref: '#/components/schemas/PatternFeatureInfoList'
        phraselistFeatures:
          $ref: '#/components/schemas/PhraseListFeatureInfoList'
      type: object
    GuidList:
      description: List of IDs (GUID)
      items:
        $ref: '#/components/schemas/GuidResponse'
      type: array
    GuidResponse:
      description: The ID (GUID) returned by an operation.
      format: uuid
      type: string
    HierarchicalChildEntity:
      allOf:
        - $ref: '#/components/schemas/ChildEntity'
      description: A Hierarchical Child Entity.
      properties:
        readableType:
          $ref: '#/components/schemas/ReadableType'
        typeId:
          description: The type ID of the Entity Model.
          type: integer
      type: object
    HierarchicalEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: Hierarchical Entity Extractor.
      properties:
        children:
          description: List of child entities.
          items:
            $ref: '#/components/schemas/ChildEntity'
          type: array
      type: object
    HierarchicalEntityExtractorsList:
      description: List of Hierarchical Entity Extractors.
      items:
        $ref: '#/components/schemas/HierarchicalEntityExtractor'
      type: array
    HierarchicalModel:
      properties:
        children:
          items:
            $ref: '#/components/schemas/JsonChild'
            type: object
          type: array
        features:
          items:
            $ref: '#/components/schemas/JsonModelFeatureInformation'
            type: object
          type: array
        inherits:
          $ref: '#/components/schemas/PrebuiltDomainObject'
          type: object
        name:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    HierarchicalModelV2:
      properties:
        children:
          items:
            type: string
          type: array
        inherits:
          $ref: '#/components/schemas/PrebuiltDomainObject'
          type: object
        name:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    IntentClassifier:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
      description: Intent Classifier.
      properties:
        customPrebuiltDomainName:
          description: The domain name.
          type: string
        customPrebuiltModelName:
          description: The intent name or entity name.
          type: string
      type: object
    IntentClassifiersList:
      description: List of Intent Classifiers.
      items:
        $ref: '#/components/schemas/IntentClassifier'
      type: array
    IntentPrediction:
      description: A suggested intent.
      properties:
        name:
          description: The intent's name
          type: string
        score:
          description: 'The intent''s score, based on the prediction model.'
          type: number
      type: object
    IntentsSuggestionExample:
      description: Predicted/suggested intent.
      properties:
        entityPredictions:
          description: Predicted/suggested entities.
          items:
            $ref: '#/components/schemas/EntityPrediction'
          type: array
        intentPredictions:
          description: Predicted/suggested intents.
          items:
            $ref: '#/components/schemas/IntentPrediction'
          type: array
        text:
          description: 'The utterance. For example, "What''s the weather like in seattle?"'
          type: string
        tokenizedText:
          description: The tokenized utterance.
          items:
            type: string
          type: array
      type: object
    IntentsSuggestionExamples:
      description: List of predicted/suggested intents.
      items:
        $ref: '#/components/schemas/IntentsSuggestionExample'
      type: array
    JSONEntity:
      description: Exported Model - Extracted Entity from utterance.
      properties:
        children:
          example:
            - children: []
              endPos: 0
              entity: child1
              startPos: 0
          items:
            $ref: '#/components/schemas/JSONEntity'
            type: object
          type: array
        endPos:
          description: The index within the utterance where the extracted entity ends.
          type: integer
        entity:
          description: The entity name.
          type: string
        role:
          description: The role the entity plays in the utterance.
          type: string
        startPos:
          description: The index within the utterance where the extracted entity starts.
          type: integer
      required:
        - startPos
        - endPos
        - entity
      type: object
    JSONModelFeature:
      description: Exported Model - Phraselist Model Feature.
      properties:
        activated:
          description: Indicates if the feature is enabled.
          type: boolean
        enabledForAllModels:
          default: true
          description: >-
            Indicates if the Phraselist is enabled for all models in the
            application.
          type: boolean
        mode:
          description: >-
            An interchangeable phrase list feature serves as a list of synonyms
            for training. A non-exchangeable phrase list serves as separate
            features for training. So, if your non-interchangeable phrase list
            contains 5 phrases, they will be mapped to 5 separate features. You
            can think of the non-interchangeable phrase list as an additional
            bag of words to add to LUIS existing vocabulary features. It is used
            as a lexicon lookup feature where its value is 1 if the lexicon
            contains a given word or 0 if it doesn’t.  Default value is true.
          type: boolean
        name:
          description: The Phraselist name.
          type: string
        words:
          description: List of comma-separated phrases that represent the Phraselist.
          type: string
      type: object
    JSONRegexFeature:
      description: Exported Model - A Pattern feature.
      properties:
        activated:
          description: Indicates if the Pattern feature is enabled.
          type: boolean
        name:
          description: Name of the feature.
          type: string
        pattern:
          description: The Regular Expression to match.
          type: string
      type: object
    JSONUtterance:
      description: Exported Model - Utterance that was used to train the model.
      properties:
        entities:
          description: The matched entities.
          items:
            $ref: '#/components/schemas/JSONEntity'
            type: object
          type: array
        intent:
          description: The matched intent.
          type: string
        text:
          description: The utterance.
          type: string
      type: object
    JsonChild:
      properties:
        children:
          items:
            $ref: '#/components/schemas/JsonChild'
            type: object
          type: array
        features:
          items:
            $ref: '#/components/schemas/JsonModelFeatureInformation'
            type: object
          type: array
        instanceOf:
          type: string
        name:
          type: string
      type: object
    JsonModelFeatureInformation:
      description: >-
        An object containing the model feature information either the model name
        or feature name.
      properties:
        featureName:
          description: The name of the feature used.
          type: string
        modelName:
          description: The name of the model used.
          type: string
      type: object
    LabelExampleResponse:
      description: Response when adding a labeled example utterance.
      properties:
        ExampleId:
          description: The newly created example ID.
          format: int64
          type: integer
        UtteranceText:
          description: The example utterance.
          type: string
      type: object
    LabelTextObject:
      description: An object containing the example utterance's text.
      properties:
        id:
          description: The ID of the Label.
          type: integer
        text:
          description: The text of the label.
          type: string
      type: object
    LabeledUtterance:
      description: A prediction and label pair of an example.
      properties:
        entityLabels:
          description: The entities matching the example.
          items:
            $ref: '#/components/schemas/EntityLabel'
          type: array
        entityPredictions:
          description: List of suggested entities.
          items:
            $ref: '#/components/schemas/EntityPrediction'
          type: array
        id:
          description: ID of Labeled Utterance.
          format: int64
          type: integer
        intentLabel:
          description: The intent matching the example.
          type: string
        intentPredictions:
          description: List of suggested intents.
          items:
            $ref: '#/components/schemas/IntentPrediction'
          type: array
        text:
          description: 'The utterance. For example, "What''s the weather like in seattle?"'
          type: string
        tokenizedText:
          description: The utterance tokenized.
          items:
            type: string
          type: array
      type: object
    LabeledUtterances:
      description: >-
        A list of predictions and label pairs for every example in the
        application.
      items:
        $ref: '#/components/schemas/LabeledUtterance'
      type: array
    LuisApp:
      additionalProperties: true
      description: Exported Model - An exported LUIS Application.
      properties:
        closedLists:
          description: List of list entities.
          items:
            $ref: '#/components/schemas/ClosedList'
            type: object
          type: array
        composites:
          description: List of composite entities.
          items:
            $ref: '#/components/schemas/HierarchicalModel'
            type: object
          type: array
        culture:
          description: 'The culture of the application. E.g.: en-us.'
          type: string
        desc:
          description: The description of the application.
          type: string
        entities:
          description: List of entities.
          items:
            $ref: '#/components/schemas/HierarchicalModel'
            type: object
          type: array
        hierarchicals:
          description: List of hierarchical entities.
          items:
            $ref: '#/components/schemas/HierarchicalModel'
            type: object
          type: array
        intents:
          description: List of intents.
          items:
            $ref: '#/components/schemas/HierarchicalModel'
            type: object
          type: array
        name:
          description: The name of the application.
          type: string
        patternAnyEntities:
          description: List of Pattern.Any entities.
          items:
            $ref: '#/components/schemas/PatternAny'
            type: object
          type: array
        patterns:
          description: List of patterns.
          items:
            $ref: '#/components/schemas/PatternRule'
            type: object
          type: array
        phraselists:
          description: List of model features.
          items:
            $ref: '#/components/schemas/JSONModelFeature'
            type: object
          type: array
        prebuiltEntities:
          description: List of prebuilt entities.
          items:
            $ref: '#/components/schemas/PrebuiltEntity'
            type: object
          type: array
        regex_entities:
          description: List of regular expression entities.
          items:
            $ref: '#/components/schemas/RegexEntity'
            type: object
          type: array
        regex_features:
          description: List of pattern features.
          items:
            $ref: '#/components/schemas/JSONRegexFeature'
            type: object
          type: array
        utterances:
          description: List of example utterances.
          items:
            $ref: '#/components/schemas/JSONUtterance'
            type: object
          type: array
        versionId:
          description: The version ID of the application that was exported.
          type: string
      type: object
    LuisAppV2:
      additionalProperties: true
      description: Exported Model - An exported LUIS Application.
      properties:
        closedLists:
          description: List of list entities.
          items:
            $ref: '#/components/schemas/ClosedList'
            type: object
          type: array
        composites:
          description: List of composite entities.
          items:
            $ref: '#/components/schemas/HierarchicalModelV2'
            type: object
          type: array
        culture:
          description: 'The culture of the application. E.g.: en-us.'
          type: string
        desc:
          description: The description of the application.
          type: string
        entities:
          description: List of entities.
          items:
            $ref: '#/components/schemas/HierarchicalModelV2'
            type: object
          type: array
        intents:
          description: List of intents.
          items:
            $ref: '#/components/schemas/HierarchicalModelV2'
            type: object
          type: array
        luis_schema_version:
          description: Luis schema deserialization version.
          type: string
        model_features:
          description: List of model features.
          items:
            $ref: '#/components/schemas/JSONModelFeature'
            type: object
          type: array
        name:
          description: The name of the application.
          type: string
        patternAnyEntities:
          description: List of Pattern.Any entities.
          items:
            $ref: '#/components/schemas/PatternAny'
            type: object
          type: array
        patterns:
          description: List of patterns.
          items:
            $ref: '#/components/schemas/PatternRule'
            type: object
          type: array
        prebuiltEntities:
          description: List of prebuilt entities.
          items:
            $ref: '#/components/schemas/PrebuiltEntity'
            type: object
          type: array
        regex_entities:
          description: List of regular expression entities.
          items:
            $ref: '#/components/schemas/RegexEntity'
            type: object
          type: array
        regex_features:
          description: List of pattern features.
          items:
            $ref: '#/components/schemas/JSONRegexFeature'
            type: object
          type: array
        utterances:
          description: List of example utterances.
          items:
            $ref: '#/components/schemas/JSONUtterance'
            type: object
          type: array
        versionId:
          description: The version ID of the application that was exported.
          type: string
      type: object
    ModelCreateObject:
      description: Object model for creating a new entity extractor.
      properties:
        name:
          description: Name of the new entity extractor.
          type: string
      type: object
    ModelFeatureInformation:
      description: >-
        An object containing the model feature information either the model name
        or feature name.
      properties:
        featureName:
          description: The name of the feature used.
          type: string
        isRequired:
          type: boolean
        modelName:
          description: The name of the model used.
          type: string
      type: object
    ModelInfo:
      description: Base type used in entity types.
      properties:
        id:
          description: The ID of the Entity Model.
          format: uuid
          type: string
        name:
          description: Name of the Entity Model.
          type: string
        readableType:
          $ref: '#/components/schemas/ReadableType'
        typeId:
          description: The type ID of the Entity Model.
          type: integer
      required:
        - id
        - readableType
      type: object
    ModelInfoResponse:
      allOf:
        - $ref: '#/components/schemas/HierarchicalEntityExtractor'
        - $ref: '#/components/schemas/CompositeEntityExtractor'
        - $ref: '#/components/schemas/ClosedListEntityExtractor'
        - $ref: '#/components/schemas/IntentClassifier'
        - $ref: '#/components/schemas/EntityExtractor'
        - $ref: '#/components/schemas/RegexEntityExtractor'
        - $ref: '#/components/schemas/PatternAnyEntityExtractor'
        - $ref: '#/components/schemas/NDepthEntityExtractor'
      description: An application model info.
      properties:
        id:
          description: The ID of the Entity Model.
          format: uuid
          type: string
        name:
          description: Name of the Entity Model.
          type: string
        readableType:
          $ref: '#/components/schemas/ReadableType'
        typeId:
          description: The type ID of the Entity Model.
          type: integer
      required:
        - id
        - readableType
      type: object
    ModelTrainingDetails:
      description: Model Training Details.
      properties:
        exampleCount:
          description: The count of examples used to train the model.
          type: integer
        failureReason:
          description: Reason for the training failure.
          type: string
        status:
          $ref: '#/components/schemas/TrainingStatus'
        statusId:
          description: The train request status ID.
          type: integer
        trainingDateTime:
          description: When the model was trained.
          format: date-time
          type: string
      type: object
    ModelTrainingInfo:
      description: Model Training Info.
      properties:
        details:
          $ref: '#/components/schemas/ModelTrainingDetails'
        modelId:
          description: The ID (GUID) of the model.
          format: uuid
          type: string
      type: object
    ModelTrainingInfoList:
      description: List of Model Training Infos.
      items:
        $ref: '#/components/schemas/ModelTrainingInfo'
      type: array
    ModelUpdateObject:
      description: Object model for updating an intent classifier.
      properties:
        name:
          description: The entity's new name.
          type: string
      type: object
    ModelsInfoResponseObject:
      description: A list of application model infos.
      items:
        $ref: '#/components/schemas/ModelInfoResponse'
      type: array
    NDepthEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: N-Depth Entity Extractor.
      properties:
        children:
          items:
            $ref: '#/components/schemas/ChildEntity'
          type: array
        customPrebuiltDomainName:
          description: The domain name.
          type: string
        customPrebuiltModelName:
          description: The intent name or entity name.
          type: string
      type: object
    NDepthEntityExtractorsList:
      description: List of N-Depth Entity Extractors.
      items:
        $ref: '#/components/schemas/NDepthEntityExtractor'
      type: array
    OperationError:
      description: Operation error details when invoking an operation on the API.
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    OperationStatus:
      description: Response of an Operation status.
      properties:
        code:
          description: Status Code.
          enum:
            - Failed
            - FAILED
            - Success
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperationStatusType
        message:
          description: Status details.
          type: string
      type: object
    PatternAny:
      description: Pattern.Any Entity Extractor.
      properties:
        explicitList:
          items:
            type: string
          type: array
        name:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    PatternAnyEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: Pattern.Any Entity Extractor.
      properties:
        explicitList:
          $ref: '#/components/schemas/ExplicitListItemList'
      type: object
    PatternAnyEntityExtractorList:
      description: List of Pattern.Any Entity Extractors.
      items:
        $ref: '#/components/schemas/PatternAnyEntityExtractor'
      type: array
    PatternAnyModelCreateObject:
      description: Model object for creating a Pattern.Any entity model.
      properties:
        explicitList:
          description: The Pattern.Any explicit list.
          items:
            type: string
          type: array
        name:
          description: The model name.
          type: string
      type: object
    PatternAnyModelUpdateObject:
      description: Model object for updating a Pattern.Any entity model.
      properties:
        explicitList:
          description: The Pattern.Any explicit list.
          items:
            type: string
          type: array
        name:
          description: The model name.
          type: string
      type: object
    PatternFeatureInfo:
      allOf:
        - $ref: '#/components/schemas/FeatureInfoObject'
      description: Pattern feature.
      properties:
        pattern:
          description: The Regular Expression to match.
          type: string
      type: object
    PatternFeatureInfoList:
      description: List of Pattern features.
      items:
        $ref: '#/components/schemas/PatternFeatureInfo'
      type: array
    PatternRule:
      description: Pattern
      properties:
        intent:
          description: The intent's name where the pattern belongs to.
          type: string
        pattern:
          description: The pattern text.
          type: string
      type: object
    PatternRuleCreateObject:
      description: Object model for creating a pattern
      properties:
        intent:
          description: The intent's name which the pattern belongs to.
          type: string
        pattern:
          description: The pattern text.
          type: string
      type: object
    PatternRuleInfo:
      description: Pattern rule
      properties:
        id:
          description: The pattern ID.
          format: uuid
          type: string
        intent:
          description: The intent's name where the pattern belongs to.
          type: string
        pattern:
          description: The pattern text.
          type: string
      type: object
    PatternRuleList:
      description: List of patterns
      items:
        $ref: '#/components/schemas/PatternRuleInfo'
      type: array
    PatternRuleUpdateObject:
      description: Object model for updating a pattern.
      properties:
        id:
          description: The pattern ID.
          format: uuid
          type: string
        intent:
          description: The intent's name which the pattern belongs to.
          type: string
        pattern:
          description: The pattern text.
          type: string
      type: object
    PersonalAssistantUrls:
      additionalProperties:
        type: string
      description: Endpoint URLs for prebuilt Cortana applications.
      type: object
    PersonalAssistantsResponse:
      description: >-
        Response containing user's endpoint keys and the endpoint URLs of the
        prebuilt Cortana applications.
      properties:
        endpointKeys:
          $ref: '#/components/schemas/EndpointKeys'
        endpointUrls:
          $ref: '#/components/schemas/PersonalAssistantUrls'
      type: object
    PhraseListFeatureInfo:
      allOf:
        - $ref: '#/components/schemas/FeatureInfoObject'
      description: Phraselist Feature.
      properties:
        isExchangeable:
          description: >-
            An exchangeable phrase list feature are serves as single feature to
            the LUIS underlying training algorithm. It is used as a lexicon
            lookup feature where its value is 1 if the lexicon contains a given
            word or 0 if it doesn’t. Think of an exchangeable as a synonyms
            list. A non-exchangeable phrase list feature has all the phrases in
            the list serve as separate features to the underlying training
            algorithm. So, if you your phrase list feature contains 5 phrases,
            they will be mapped to 5 separate features. You can think of the
            non-exchangeable phrase list feature as an additional bag of words
            that you are willing to add to LUIS existing vocabulary features.
            Think of a non-exchangeable as set of different words. Default value
            is true.
          type: boolean
        phrases:
          description: A list of comma-separated values.
          type: string
      type: object
    PhraseListFeatureInfoList:
      description: List of Phraselist Features.
      items:
        $ref: '#/components/schemas/PhraseListFeatureInfo'
      type: array
    PhraselistCreateObject:
      description: Object model for creating a phraselist model.
      properties:
        enabledForAllModels:
          default: true
          description: >-
            Indicates if the Phraselist is enabled for all models in the
            application.
          type: boolean
        isExchangeable:
          default: true
          description: >-
            An interchangeable phrase list feature serves as a list of synonyms
            for training. A non-exchangeable phrase list serves as separate
            features for training. So, if your non-interchangeable phrase list
            contains 5 phrases, they will be mapped to 5 separate features. You
            can think of the non-interchangeable phrase list as an additional
            bag of words to add to LUIS existing vocabulary features. It is used
            as a lexicon lookup feature where its value is 1 if the lexicon
            contains a given word or 0 if it doesn’t.  Default value is true.
          type: boolean
        name:
          description: The Phraselist name.
          type: string
        phrases:
          description: List of comma-separated phrases that represent the Phraselist.
          type: string
      type: object
    PhraselistUpdateObject:
      description: Object model for updating a Phraselist.
      properties:
        enabledForAllModels:
          default: true
          description: >-
            Indicates if the Phraselist is enabled for all models in the
            application.
          type: boolean
        isActive:
          default: true
          description: Indicates if the Phraselist is enabled.
          type: boolean
        isExchangeable:
          default: true
          description: >-
            An exchangeable phrase list feature are serves as single feature to
            the LUIS underlying training algorithm. It is used as a lexicon
            lookup feature where its value is 1 if the lexicon contains a given
            word or 0 if it doesn’t. Think of an exchangeable as a synonyms
            list. A non-exchangeable phrase list feature has all the phrases in
            the list serve as separate features to the underlying training
            algorithm. So, if you your phrase list feature contains 5 phrases,
            they will be mapped to 5 separate features. You can think of the
            non-exchangeable phrase list feature as an additional bag of words
            that you are willing to add to LUIS existing vocabulary features.
            Think of a non-exchangeable as set of different words. Default value
            is true.
          type: boolean
        name:
          description: The Phraselist name.
          type: string
        phrases:
          description: List of comma-separated phrases that represent the Phraselist.
          type: string
      type: object
    PrebuiltDomain:
      description: Prebuilt Domain.
      properties:
        culture:
          type: string
        description:
          type: string
        entities:
          items:
            $ref: '#/components/schemas/PrebuiltDomainItem'
          type: array
        examples:
          type: string
        intents:
          items:
            $ref: '#/components/schemas/PrebuiltDomainItem'
          type: array
        name:
          type: string
      type: object
    PrebuiltDomainCreateBaseObject:
      description: >-
        A model object containing the name of the custom prebuilt entity and the
        name of the domain to which this model belongs.
      properties:
        domainName:
          description: The domain name.
          type: string
      type: object
    PrebuiltDomainCreateObject:
      description: >-
        A prebuilt domain create object containing the name and culture of the
        domain.
      properties:
        culture:
          description: The culture of the new domain.
          type: string
        domainName:
          description: The domain name.
          type: string
      type: object
    PrebuiltDomainItem:
      properties:
        description:
          type: string
        examples:
          type: string
        name:
          type: string
      type: object
    PrebuiltDomainModelCreateObject:
      description: >-
        A model object containing the name of the custom prebuilt intent or
        entity and the name of the domain to which this model belongs.
      properties:
        domainName:
          description: The domain name.
          type: string
        modelName:
          description: The intent name or entity name.
          type: string
      type: object
    PrebuiltDomainObject:
      properties:
        domain_name:
          type: string
        model_name:
          type: string
      type: object
    PrebuiltDomainsList:
      description: List of Prebuilt Domains.
      items:
        $ref: '#/components/schemas/PrebuiltDomain'
      type: array
    PrebuiltEntity:
      description: Prebuilt Entity Extractor.
      properties:
        name:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    PrebuiltEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: Prebuilt Entity Extractor.
      type: object
    PrebuiltEntityExtractorsList:
      description: List of Prebuilt Entity Extractors.
      items:
        $ref: '#/components/schemas/PrebuiltEntityExtractor'
      type: array
    PrebuiltExtractorNames:
      description: Object model for adding a prebuilt entity to the application.
      items:
        type: string
      type: array
    ProductionOrStagingEndpointInfo:
      allOf:
        - $ref: '#/components/schemas/EndpointInfo'
      type: object
    PublishSettingUpdateObject:
      description: Object model for updating an application's publish settings.
      properties:
        sentimentAnalysis:
          description: >-
            Setting sentiment analysis as true returns the Sentiment of the
            input utterance along with the response
          nullable: false
          type: boolean
        speech:
          description: Setting speech as public enables speech priming in your app
          nullable: false
          type: boolean
        spellChecker:
          description: >-
            Setting spell checker as public enables spell checking the input
            utterance.
          nullable: false
          type: boolean
      type: object
    PublishSettings:
      description: The application publish settings.
      properties:
        id:
          description: The application ID.
          format: uuid
          type: string
        sentimentAnalysis:
          description: >-
            Setting sentiment analysis as true returns the sentiment of the
            input utterance along with the response
          nullable: false
          type: boolean
          x-ms-client-name: IsSentimentAnalysisEnabled
        speech:
          description: Enables speech priming in your app
          nullable: false
          type: boolean
          x-ms-client-name: IsSpeechEnabled
        spellChecker:
          description: Enables spell checking of the utterance.
          nullable: false
          type: boolean
          x-ms-client-name: IsSpellCheckerEnabled
      required:
        - id
        - sentimentAnalysis
        - speech
        - spellChecker
      type: object
    ReadableType:
      description: Full name of the entity type.
      enum:
        - Entity Extractor
        - Child Entity Extractor
        - Hierarchical Entity Extractor
        - Hierarchical Child Entity Extractor
        - Composite Entity Extractor
        - List Entity Extractor
        - Prebuilt Entity Extractor
        - Intent Classifier
        - Pattern.Any Entity Extractor
        - Closed List Entity Extractor
        - Regex Entity Extractor
      type: string
    RegexEntity:
      description: Regular Expression Entity Extractor.
      properties:
        name:
          type: string
        regexPattern:
          type: string
        roles:
          items:
            type: string
          type: array
      type: object
    RegexEntityExtractor:
      allOf:
        - $ref: '#/components/schemas/ModelInfo'
        - $ref: '#/components/schemas/EntityModelInfo'
      description: Regular Expression Entity Extractor.
      properties:
        regexPattern:
          description: The Regular Expression entity pattern.
          type: string
      type: object
    RegexEntityExtractorList:
      description: List of Regular Expression Entity Extractors.
      items:
        $ref: '#/components/schemas/RegexEntityExtractor'
      type: array
    RegexModelCreateObject:
      description: Model object for creating a regular expression entity model.
      properties:
        name:
          description: The model name.
          type: string
        regexPattern:
          description: The regular expression entity pattern.
          type: string
      type: object
    RegexModelUpdateObject:
      description: Model object for updating a regular expression entity model.
      properties:
        name:
          description: The model name.
          type: string
        regexPattern:
          description: The regular expression entity pattern.
          type: string
      type: object
    SubClosedList:
      description: Sublist of items for a list entity.
      properties:
        canonicalForm:
          description: The standard form that the list represents.
          type: string
        list:
          description: List of synonym words.
          items:
            type: string
          type: array
      type: object
    SubClosedListResponse:
      allOf:
        - $ref: '#/components/schemas/SubClosedList'
      description: Sublist of items for a list entity.
      properties:
        id:
          description: The sublist ID
          nullable: false
          type: integer
      type: object
    TaskUpdateObject:
      description: Object model for cloning an application's version.
      properties:
        version:
          description: The new version for the cloned model.
          type: string
      type: object
    TrainingStatus:
      description: The Training status.
      enum:
        - Queued
        - InProgress
        - UpToDate
        - Fail
        - Success
      type: string
    UserAccessList:
      description: List of user permissions.
      properties:
        emails:
          items:
            type: string
          type: array
        owner:
          description: The email address of owner of the application.
          type: string
      type: object
    UserCollaborator:
      properties:
        email:
          description: The email address of the user.
          type: string
      type: object
    VersionInfo:
      description: Object model of an application version.
      properties:
        assignedEndpointKey:
          additionalProperties:
            type: string
          description: The endpoint key.
          type: object
        createdDateTime:
          description: The version's creation timestamp.
          format: date-time
          type: string
        endpointHitsCount:
          description: Number of calls made to this endpoint.
          type: integer
        endpointUrl:
          description: The Runtime endpoint URL for this model version.
          type: string
        entitiesCount:
          description: Number of entities in this model.
          type: integer
        externalApiKeys:
          description: External keys.
          type: object
        intentsCount:
          description: Number of intents in this model.
          type: integer
        lastModifiedDateTime:
          description: Timestamp of the last update.
          format: date-time
          type: string
        lastPublishedDateTime:
          description: Timestamp when was last published.
          format: date-time
          type: string
        lastTrainedDateTime:
          description: Timestamp of the last time the model was trained.
          format: date-time
          type: string
        trainingStatus:
          description: The current training status.
          enum:
            - NeedsTraining
            - InProgress
            - Trained
          type: string
          x-ms-enum:
            name: TrainingStatus
        version:
          description: 'The version ID. E.g.: "0.1"'
          type: string
      required:
        - version
        - trainingStatus
      type: object
    VersionResponse:
      description: The new version ID returned by when importing a model version.
      type: string
    WordListBaseUpdateObject:
      description: Object model for updating one of the list entity's sublists.
      properties:
        canonicalForm:
          description: The standard form that the list represents.
          type: string
        list:
          description: List of synonym words.
          items:
            type: string
          type: array
      type: object
    WordListObject:
      description: Sublist of items for a list entity.
      properties:
        canonicalForm:
          description: The standard form that the list represents.
          type: string
        list:
          description: List of synonym words.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
security:
  - apiKeyHeader: []
x-ms-paths:
  /apps/import?JsonVersion=V2:
    post:
      parameters:
        - description: >-
            The application name to create. If not specified, the application
            name will be read from the imported object. If the application name
            already exists, an error is returned.
          in: query
          name: appName
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the imported application.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Imports an application to LUIS, the application's structure is included
        in the request body.
      operationId: Apps_ImportV2App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LuisAppV2'
        description: A LUIS application structure.
        required: true
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/apps/SuccessfulImportV2ApplicationRequest.json
  /apps/import?format=lu:
    post:
      parameters:
        - description: >-
            The application name to create. If not specified, the application
            name will be read from the imported object. If the application name
            already exists, an error is returned.
          in: query
          name: appName
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GuidResponse'
          description: The ID of the imported application.
          x-nullable: false
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: >-
        Imports an application to LUIS, the application's structure is included
        in the request body.
      operationId: Apps_ImportLuFormat
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: A LUIS application structure.
        required: true
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/apps/SuccessfulImportLuApplicationRequest.json
  '/apps/{appId}/versions/import?JsonVersion=V2':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - description: >-
            The new versionId to import. If not specified, the versionId will be
            read from the imported object.
          in: query
          name: versionId
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: The created application version.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Imports a new version into a LUIS application.
      operationId: Versions_ImportV2App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LuisAppV2'
        description: A LUIS application structure.
        required: true
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/versions/SuccessfulImportV2ApplicationVersionRequest.json
  '/apps/{appId}/versions/import?format=lu':
    post:
      parameters:
        - $ref: '#/components/parameters/AppIdInPath'
        - description: >-
            The new versionId to import. If not specified, the versionId will be
            read from the imported object.
          in: query
          name: versionId
          schema:
            type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: The created application version.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Imports a new version into a LUIS application.
      operationId: Versions_ImportLuFormat
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: An LU representing the LUIS application structure.
        required: true
      x-ms-examples:
        Successful Import Application:
          $ref: ./examples/versions/SuccessfulImportLuApplicationVersionRequest.json
  '/apps/{appId}/versions/{versionId}/export?format=lu':
    get:
      parameters:
        - description: Lu format extension
          in: query
          name: format
          required: true
          schema:
            enum:
              - lu
            type: string
        - $ref: '#/components/parameters/AppIdInPath'
        - $ref: '#/components/parameters/VersionIdInPath'
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                description: The LUIS application structure in LU format.
                format: file
                type: object
          description: The LUIS application structure in LU format.
        default:
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response.
      description: Exports a LUIS application to text format.
      operationId: Versions_ExportLuFormat
      x-ms-examples:
        Successful Export Application Version:
          $ref: ./examples/versions/SuccessfulExportLuApplicationVersionRequest.json

