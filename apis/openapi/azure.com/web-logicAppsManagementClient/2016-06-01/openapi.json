{
  "openapi": "3.0.0",
  "info": {
    "title": "LogicAppsManagementClient",
    "version": "2016-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/web/resource-manager/Microsoft.Web/stable/2016-06-01/logicAppsManagementClient.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/connectionGateways": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinitionCollection"
                }
              }
            },
            "description": "The gateway definitions"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Gets a list of gateways under a subscription",
        "operationId": "ConnectionGateways_List",
        "summary": "Lists all of the connection gateways",
        "x-ms-examples": {
          "List all connection gateways": {
            "$ref": "./examples/connectionGatewaysList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/customApis": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/pageSizeParameter"
          },
          {
            "$ref": "#/components/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomApiDefinitionCollection"
                }
              }
            },
            "description": "A list of custom APIs"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Gets a list of all custom APIs for a subscription id",
        "operationId": "CustomApis_List",
        "summary": "List of custom APIs",
        "x-ms-examples": {
          "List all custom APIs": {
            "$ref": "./examples/customApisList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/connectionGatewayInstallations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayInstallationDefinitionCollection"
                }
              }
            },
            "description": "The gateway installations"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Gets a list of installed gateways that the user is an admin of, in a specific subscription and at a certain location",
        "operationId": "ConnectionGatewayInstallations_List",
        "summary": "Gets a list of installed gateways that the user is an admin of",
        "x-ms-examples": {
          "List all installations in a region": {
            "$ref": "./examples/connectionGatewayInstallationsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/connectionGatewayInstallations/{gatewayId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/gatewayIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayInstallationDefinition"
                }
              }
            },
            "description": "The gateway installation"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Get a specific installed gateway that the user is an admin of, in a specific subscription and at a certain location",
        "operationId": "ConnectionGatewayInstallations_Get",
        "summary": "Gets an installed gateway that the user is an admin of",
        "x-ms-examples": {
          "Get a specific gateway installation": {
            "$ref": "./examples/connectionGatewayInstallationsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/extractApiDefinitionFromWsdl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Swagger of the API extracted from the WSDL"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Parses the specified WSDL and extracts the API definition",
        "operationId": "CustomApis_ExtractApiDefinitionFromWsdl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsdlDefinition"
              }
            }
          },
          "description": "WSDL definition",
          "required": true
        },
        "summary": "Returns API definition from WSDL",
        "x-ms-examples": {
          "Extract definition from WSDL": {
            "$ref": "./examples/customApisExtractApiDefinitionFromWsdl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/listWsdlInterfaces": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WsdlServiceCollection"
                }
              }
            },
            "description": "A list of interfaces"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "This returns the list of interfaces in the WSDL",
        "operationId": "CustomApis_ListWsdlInterfaces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WsdlDefinition"
              }
            }
          },
          "description": "WSDL definition",
          "required": true
        },
        "summary": "Lists WSDL interfaces",
        "x-ms-examples": {
          "List the WSDL interfaces": {
            "$ref": "./examples/customApisListWsdlInterfaces.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedApiDefinitionCollection"
                }
              }
            },
            "description": "A list of managed APIs"
          }
        },
        "tags": [
          "Managed APIs"
        ],
        "description": "Gets a list of managed APIs",
        "operationId": "ManagedApis_List",
        "summary": "Lists managed APIs",
        "x-ms-examples": {
          "List all managed APIs": {
            "$ref": "./examples/managedApisList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/locations/{location}/managedApis/{apiName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/locationParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedApiDefinition"
                }
              }
            },
            "description": "A managed API definition"
          }
        },
        "tags": [
          "Managed APIs"
        ],
        "description": "Gets a managed API",
        "operationId": "ManagedApis_Get",
        "summary": "Gets managed API",
        "x-ms-examples": {
          "Get a managed API": {
            "$ref": "./examples/managedApisGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinitionCollection"
                }
              }
            },
            "description": "The gateway definitions"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Gets a list of gateways under a subscription and in a specific resource group",
        "operationId": "ConnectionGateways_ListByResourceGroup",
        "summary": "Lists all of the connection gateways",
        "x-ms-examples": {
          "List all connection gateways": {
            "$ref": "./examples/connectionGatewaysListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connectionGateways/{connectionGatewayName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionGatewayNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the connection gateway"
          },
          "204": {
            "description": "No connection gateway to delete"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Deletes a specific gateway for under a subscription and in a specific resource group",
        "operationId": "ConnectionGateways_Delete",
        "summary": "Deletes a specific gateway",
        "x-ms-examples": {
          "Delete a connection gateway definition": {
            "$ref": "./examples/connectionGatewaysDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionGatewayNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinition"
                }
              }
            },
            "description": "The gateway definition"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Gets a specific gateway under a subscription and in a specific resource group",
        "operationId": "ConnectionGateways_Get",
        "summary": "Gets a specific gateway",
        "x-ms-examples": {
          "Get the connection gateway definition": {
            "$ref": "./examples/connectionGatewaysGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionGatewayNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinition"
                }
              }
            },
            "description": "The gateway definition"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Updates a connection gateway's tags",
        "operationId": "ConnectionGateways_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionGatewayDefinition"
              }
            }
          },
          "description": "The connection gateway",
          "required": true
        },
        "summary": "Updates a specific gateway",
        "x-ms-examples": {
          "Update a connection gateway's tags": {
            "$ref": "./examples/connectionGatewaysUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionGatewayNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinition"
                }
              }
            },
            "description": "The updated gateway definition"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionGatewayDefinition"
                }
              }
            },
            "description": "The newly created gateway definition"
          }
        },
        "tags": [
          "Connection Gateways"
        ],
        "description": "Creates or updates a specific gateway for under a subscription and in a specific resource group",
        "operationId": "ConnectionGateways_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionGatewayDefinition"
              }
            }
          },
          "description": "The connection gateway",
          "required": true
        },
        "summary": "Replaces a specific gateway",
        "x-ms-examples": {
          "Replace a connection gateway definition": {
            "$ref": "./examples/connectionGatewaysCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/pageSizeParameter"
          },
          {
            "$ref": "#/components/parameters/filterParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConnectionDefinitionCollection"
                }
              }
            },
            "description": "A list of API connection"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Gets a list of connections",
        "operationId": "Connections_List",
        "summary": "Get all connections",
        "x-ms-examples": {
          "List all connections": {
            "$ref": "./examples/connectionsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the connection"
          },
          "204": {
            "description": "No connection to delete"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Deletes a connection",
        "operationId": "Connections_Delete",
        "summary": "Delete an existing connection",
        "x-ms-examples": {
          "Delete a connection": {
            "$ref": "./examples/connectionsDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConnectionDefinition"
                }
              }
            },
            "description": "An API connection"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Get a specific connection",
        "operationId": "Connections_Get",
        "summary": "Get a connection",
        "x-ms-examples": {
          "Get a connection": {
            "$ref": "./examples/connectionsGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConnectionDefinition"
                }
              }
            },
            "description": "API connection updated"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Updates a connection's tags",
        "operationId": "Connections_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiConnectionDefinition"
              }
            }
          },
          "description": "The connection",
          "required": true
        },
        "summary": "Update an existing connection",
        "x-ms-examples": {
          "Update a connection's tags": {
            "$ref": "./examples/connectionsUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConnectionDefinition"
                }
              }
            },
            "description": "New API connection created"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiConnectionDefinition"
                }
              }
            },
            "description": "Already existing API connection updated"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Creates or updates a connection",
        "operationId": "Connections_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiConnectionDefinition"
              }
            }
          },
          "description": "The connection",
          "required": true
        },
        "summary": "Replace an existing connection",
        "x-ms-examples": {
          "Replace a connection": {
            "$ref": "./examples/connectionsCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}/confirmConsentCode": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmConsentCodeDefinition"
                }
              }
            },
            "description": "Confirmation of the consent code"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Confirms consent code of a connection",
        "operationId": "Connections_ConfirmConsentCode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmConsentCodeDefinition"
              }
            }
          },
          "description": "The consent code confirmation",
          "required": true
        },
        "summary": "Confirms the consent code for a connection",
        "x-ms-examples": {
          "Confirm consent code": {
            "$ref": "./examples/connectionsConfirmConsentCode.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/connections/{connectionName}/listConsentLinks": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/connectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentLinkCollection"
                }
              }
            },
            "description": "A list of the consent links"
          }
        },
        "tags": [
          "Connections"
        ],
        "description": "Lists the consent links of a connection",
        "operationId": "Connections_ListConsentLinks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListConsentLinksDefinition"
              }
            }
          },
          "description": "The consent links",
          "required": true
        },
        "summary": "Lists consent links for a connection",
        "x-ms-examples": {
          "List consent links": {
            "$ref": "./examples/connectionsListConsentLinks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/pageSizeParameter"
          },
          {
            "$ref": "#/components/parameters/skipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomApiDefinitionCollection"
                }
              }
            },
            "description": "A list of custom APIs"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Gets a list of all custom APIs in a subscription for a specific resource group",
        "operationId": "CustomApis_ListByResourceGroup",
        "summary": "List of custom APIs",
        "x-ms-examples": {
          "List all custom APIs": {
            "$ref": "./examples/customApisListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the custom API"
          },
          "204": {
            "description": "No custom API to delete"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Deletes a custom API from the resource group",
        "operationId": "CustomApis_Delete",
        "summary": "Delete a custom API",
        "x-ms-examples": {
          "Delete a custom API": {
            "$ref": "./examples/customApisDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomApiDefinition"
                }
              }
            },
            "description": "A custom API"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Gets a custom API by name for a specific subscription and resource group",
        "operationId": "CustomApis_Get",
        "summary": "Get a custom API",
        "x-ms-examples": {
          "Get a custom API": {
            "$ref": "./examples/customApisGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomApiDefinition"
                }
              }
            },
            "description": "The updated custom API"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Updates an existing custom API's tags",
        "operationId": "CustomApis_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomApiDefinition"
              }
            }
          },
          "description": "The custom API",
          "required": true
        },
        "summary": "Update an existing custom API",
        "x-ms-examples": {
          "Update a custom API's tags": {
            "$ref": "./examples/customApisUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomApiDefinition"
                }
              }
            },
            "description": "The replacing custom API"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Creates or updates an existing custom API",
        "operationId": "CustomApis_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomApiDefinition"
              }
            }
          },
          "description": "The custom API",
          "required": true
        },
        "summary": "Replaces an existing custom API",
        "x-ms-examples": {
          "Replace a custom API": {
            "$ref": "./examples/customApisCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/customApis/{apiName}/move": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "custom API successfully moved"
          }
        },
        "tags": [
          "Custom APIs"
        ],
        "description": "Moves a specific custom API",
        "operationId": "CustomApis_Move",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomApiReference"
              }
            }
          },
          "description": "The custom API reference",
          "required": true
        },
        "summary": "Moves the custom API",
        "x-ms-examples": {
          "Move a custom API": {
            "$ref": "./examples/customApisMove.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "apiNameParameter": {
        "description": "API name",
        "in": "path",
        "name": "apiName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "apiVersionParameter": {
        "description": "API Version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "connectionGatewayNameParameter": {
        "description": "The connection gateway name",
        "in": "path",
        "name": "connectionGatewayName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "connectionNameParameter": {
        "description": "Connection name",
        "in": "path",
        "name": "connectionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "filterParameter": {
        "description": "The filter to apply on the operation",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "gatewayIdParameter": {
        "description": "Gateway ID",
        "in": "path",
        "name": "gatewayId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "locationParameter": {
        "description": "The location",
        "in": "path",
        "name": "location",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "pageSizeParameter": {
        "description": "The number of items to be included in the result",
        "in": "query",
        "name": "$top",
        "required": false,
        "schema": {
          "format": "int32",
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "The resource group",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "skipTokenParameter": {
        "description": "Skip Token",
        "in": "query",
        "name": "skiptoken",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Subscription Id",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "ApiConnectionDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ApiConnectionDefinition"
            }
          }
        },
        "description": "The connection",
        "required": true
      },
      "ConnectionGatewayDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConnectionGatewayDefinition"
            }
          }
        },
        "description": "The connection gateway",
        "required": true
      },
      "CustomApiDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CustomApiDefinition"
            }
          }
        },
        "description": "The custom API",
        "required": true
      },
      "WsdlDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WsdlDefinition"
            }
          }
        },
        "description": "WSDL definition",
        "required": true
      }
    },
    "schemas": {
      "ApiConnectionDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "API connection",
        "properties": {
          "properties": {
            "properties": {
              "api": {
                "$ref": "#/components/schemas/ApiReference"
              },
              "changedTime": {
                "description": "Timestamp of last connection change",
                "format": "date-time",
                "type": "string"
              },
              "createdTime": {
                "description": "Timestamp of the connection creation",
                "format": "date-time",
                "type": "string"
              },
              "customParameterValues": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Dictionary of custom parameter values",
                "type": "object"
              },
              "displayName": {
                "description": "Display name",
                "type": "string"
              },
              "nonSecretParameterValues": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Dictionary of nonsecret parameter values",
                "type": "object"
              },
              "parameterValues": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Dictionary of parameter values",
                "type": "object"
              },
              "statuses": {
                "description": "Status of the connection",
                "items": {
                  "$ref": "#/components/schemas/ConnectionStatusDefinition"
                },
                "type": "array"
              },
              "testLinks": {
                "description": "Links to test the API connection",
                "items": {
                  "$ref": "#/components/schemas/ApiConnectionTestLink"
                },
                "type": "array"
              }
            }
          }
        },
        "type": "object"
      },
      "ApiConnectionDefinitionCollection": {
        "description": "A list of API connection definitions",
        "properties": {
          "value": {
            "description": "Collection of API connections",
            "items": {
              "$ref": "#/components/schemas/ApiConnectionDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApiConnectionTestLink": {
        "additionalProperties": false,
        "description": "API connection properties",
        "properties": {
          "method": {
            "description": "HTTP Method",
            "type": "string"
          },
          "requestUri": {
            "description": "Test link request URI",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiOAuthSettings": {
        "description": "OAuth settings for the connection provider",
        "properties": {
          "clientId": {
            "description": "Resource provider client id",
            "type": "string"
          },
          "clientSecret": {
            "description": "Client Secret needed for OAuth",
            "type": "string"
          },
          "customParameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ApiOAuthSettingsParameter"
            },
            "description": "OAuth parameters key is the name of parameter",
            "type": "object"
          },
          "identityProvider": {
            "description": "Identity provider",
            "type": "string"
          },
          "properties": {
            "description": "Read only properties for this oauth setting.",
            "type": "object"
          },
          "redirectUrl": {
            "description": "Url",
            "type": "string"
          },
          "scopes": {
            "description": "OAuth scopes",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApiOAuthSettingsParameter": {
        "description": "OAuth settings for the API",
        "properties": {
          "options": {
            "description": "Options available to this parameter",
            "type": "object"
          },
          "uiDefinition": {
            "description": "UI definitions per culture as caller can specify the culture",
            "type": "object"
          },
          "value": {
            "description": "Value of the setting",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiReference": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceReference"
          }
        ],
        "properties": {
          "swagger": {
            "description": "The JSON representation of the swagger",
            "type": "object"
          },
          "brandColor": {
            "description": "Brand color",
            "type": "string"
          },
          "description": {
            "description": "The custom API description",
            "type": "string"
          },
          "displayName": {
            "description": "The display name",
            "type": "string"
          },
          "iconUri": {
            "description": "The icon URI",
            "type": "string"
          },
          "name": {
            "description": "The name of the API",
            "type": "string"
          }
        },
        "type": "object",
        "x-abstract": true
      },
      "ApiResourceBackendService": {
        "additionalProperties": false,
        "description": "The API backend service",
        "properties": {
          "serviceUrl": {
            "description": "The service URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiResourceDefinitions": {
        "additionalProperties": false,
        "description": "API Definitions",
        "properties": {
          "modifiedSwaggerUrl": {
            "description": "The modified swagger URL",
            "type": "string"
          },
          "originalSwaggerUrl": {
            "description": "The original swagger URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiResourceGeneralInformation": {
        "additionalProperties": false,
        "description": "General information about the API",
        "properties": {
          "description": {
            "description": "The API description",
            "type": "string"
          },
          "displayName": {
            "description": "Display name",
            "type": "string"
          },
          "iconUrl": {
            "description": "The icon URL",
            "type": "string"
          },
          "releaseTag": {
            "description": "Release tag",
            "type": "string"
          },
          "termsOfUseUrl": {
            "description": "URL to the Terms of Use",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiResourceMetadata": {
        "additionalProperties": false,
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/TagsDictionary"
          },
          "apiType": {
            "$ref": "#/components/schemas/ApiType"
          },
          "brandColor": {
            "description": "Brand color",
            "type": "string"
          },
          "connectionType": {
            "description": "The connection type",
            "type": "string"
          },
          "hideKey": {
            "description": "Hide key",
            "type": "string"
          },
          "source": {
            "description": "The source",
            "type": "string"
          },
          "wsdlImportMethod": {
            "$ref": "#/components/schemas/WsdlImportMethod"
          },
          "wsdlService": {
            "$ref": "#/components/schemas/WsdlService"
          }
        },
        "type": "object"
      },
      "ApiResourcePolicies": {
        "additionalProperties": false,
        "description": "Describes the API policies either as embedded content or as a link to uploaded content",
        "properties": {
          "content": {
            "description": "API level policies as XML",
            "type": "string"
          },
          "contentLink": {
            "description": "Link to the JSON of the policies",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiResourceProperties": {
        "additionalProperties": false,
        "description": "API resource properties",
        "properties": {
          "swagger": {
            "description": "The JSON representation of the swagger",
            "type": "object"
          },
          "apiDefinitionUrl": {
            "description": "URL where the swagger can be downloaded from",
            "type": "string"
          },
          "apiDefinitions": {
            "$ref": "#/components/schemas/ApiResourceDefinitions"
          },
          "backendService": {
            "$ref": "#/components/schemas/ApiResourceBackendService"
          },
          "capabilities": {
            "description": "The managed API capabilities",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "connectionParameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConnectionParameter"
            },
            "description": "Connection parameters",
            "type": "object"
          },
          "generalInformation": {
            "$ref": "#/components/schemas/ApiResourceGeneralInformation"
          },
          "metadata": {
            "$ref": "#/components/schemas/ApiResourceMetadata"
          },
          "name": {
            "type": "string"
          },
          "policies": {
            "$ref": "#/components/schemas/ApiResourcePolicies"
          },
          "runtimeUrls": {
            "description": "Runtime URLs",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApiType": {
        "description": "The API type",
        "enum": [
          "NotSpecified",
          "Rest",
          "Soap"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ApiType"
        }
      },
      "ConfirmConsentCodeDefinition": {
        "description": "Confirm consent code request",
        "properties": {
          "code": {
            "description": "Code that was returned during consent flow",
            "type": "string"
          },
          "objectId": {
            "description": "AAD object ID. This is userId",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectionError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "Connection error",
        "properties": {
          "properties": {
            "properties": {
              "code": {
                "description": "Code of the status",
                "type": "string"
              },
              "message": {
                "description": "Description of the status",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ConnectionGatewayDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "The gateway definition",
        "properties": {
          "properties": {
            "properties": {
              "backendUri": {
                "description": "The URI of the backend",
                "type": "string"
              },
              "connectionGatewayInstallation": {
                "$ref": "#/components/schemas/ConnectionGatewayReference"
              },
              "contactInformation": {
                "description": "The gateway admin",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "description": {
                "description": "The gateway description",
                "type": "string"
              },
              "displayName": {
                "description": "The gateway display name",
                "type": "string"
              },
              "machineName": {
                "description": "The machine name of the gateway",
                "type": "string"
              },
              "status": {
                "description": "The gateway status",
                "type": "object"
              }
            }
          }
        },
        "type": "object"
      },
      "ConnectionGatewayDefinitionCollection": {
        "description": "A list of connection gateway definitions",
        "properties": {
          "value": {
            "description": "Collection of connection gateways",
            "items": {
              "$ref": "#/components/schemas/ConnectionGatewayDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConnectionGatewayInstallationDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "The gateway installation",
        "properties": {
          "properties": {
            "properties": {
              "backendUri": {
                "description": "The URI of the backend",
                "type": "string"
              },
              "connectionGateway": {
                "$ref": "#/components/schemas/ConnectionGatewayReference"
              },
              "contactInformation": {
                "description": "The gateway admin",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "description": {
                "description": "The gateway description",
                "type": "string"
              },
              "displayName": {
                "description": "The gateway display name",
                "type": "string"
              },
              "machineName": {
                "description": "The machine name of the gateway",
                "type": "string"
              },
              "status": {
                "description": "The gateway status",
                "type": "object"
              }
            }
          }
        },
        "type": "object"
      },
      "ConnectionGatewayInstallationDefinitionCollection": {
        "description": "A list of connection gateway installation definitions",
        "properties": {
          "value": {
            "description": "Collection of connection gateway installations",
            "items": {
              "$ref": "#/components/schemas/ConnectionGatewayInstallationDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConnectionGatewayReference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceReference"
          }
        ],
        "description": "The gateway installation reference",
        "properties": {
          "location": {
            "description": "Resource reference location",
            "type": "string"
          },
          "name": {
            "description": "Resource reference name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectionParameter": {
        "description": "Connection provider parameters",
        "properties": {
          "oAuthSettings": {
            "$ref": "#/components/schemas/ApiOAuthSettings"
          },
          "type": {
            "description": "Type of the parameter",
            "enum": [
              "string",
              "securestring",
              "secureobject",
              "int",
              "bool",
              "object",
              "array",
              "oauthSetting",
              "connection"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ConnectionParameterType"
            }
          }
        },
        "type": "object"
      },
      "ConnectionStatusDefinition": {
        "description": "Connection status",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ConnectionError"
          },
          "status": {
            "description": "The gateway status",
            "type": "string"
          },
          "target": {
            "description": "Target of the error",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsentLinkCollection": {
        "description": "Collection of consent links",
        "properties": {
          "value": {
            "description": "Collection of resources",
            "items": {
              "$ref": "#/components/schemas/ConsentLinkDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConsentLinkDefinition": {
        "description": "A consent link",
        "properties": {
          "displayName": {
            "description": "Display name of the parameter in the connection provider's OAuth settings",
            "type": "string"
          },
          "firstPartyLoginUri": {
            "description": "URI for first party login",
            "type": "string"
          },
          "link": {
            "description": "URI for the consent link",
            "type": "string"
          },
          "status": {
            "description": "Status of the link",
            "enum": [
              "Unauthenticated",
              "Authenticated",
              "Error"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "LinkState"
            }
          }
        },
        "type": "object"
      },
      "ConsentLinkParameterDefinition": {
        "description": "Consent link definition",
        "properties": {
          "objectId": {
            "description": "AAD OID (user or group) if the principal type is ActiveDirectory. MSA PUID if the principal type is MicrosoftAccount",
            "type": "string"
          },
          "parameterName": {
            "description": "Name of the parameter in the connection provider's OAuth settings",
            "type": "string"
          },
          "redirectUrl": {
            "description": "Name of the parameter in the connection provider's OAuth settings",
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant id",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomApiDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "A custom API",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CustomApiPropertiesDefinition"
          }
        },
        "type": "object"
      },
      "CustomApiDefinitionCollection": {
        "description": "A list of custom API definitions",
        "properties": {
          "value": {
            "description": "Collection of custom APIs",
            "items": {
              "$ref": "#/components/schemas/CustomApiDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomApiPropertiesDefinition": {
        "additionalProperties": false,
        "description": "Custom API properties",
        "properties": {
          "swagger": {
            "description": "The JSON representation of the swagger",
            "type": "object"
          },
          "apiDefinitions": {
            "$ref": "#/components/schemas/ApiResourceDefinitions"
          },
          "apiType": {
            "$ref": "#/components/schemas/ApiType"
          },
          "backendService": {
            "$ref": "#/components/schemas/ApiResourceBackendService"
          },
          "brandColor": {
            "description": "Brand color",
            "type": "string"
          },
          "capabilities": {
            "description": "The custom API capabilities",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "connectionParameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConnectionParameter"
            },
            "description": "Connection parameters",
            "type": "object"
          },
          "description": {
            "description": "The custom API description",
            "type": "string"
          },
          "displayName": {
            "description": "The display name",
            "type": "string"
          },
          "iconUri": {
            "description": "The icon URI",
            "type": "string"
          },
          "runtimeUrls": {
            "description": "Runtime URLs",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "wsdlDefinition": {
            "$ref": "#/components/schemas/WsdlDefinition"
          }
        },
        "type": "object"
      },
      "CustomApiReference": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ApiReference"
          }
        ],
        "description": "The custom API reference",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListConnectionKeysDefinition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "List connection keys",
        "properties": {
          "properties": {
            "properties": {
              "validityTimeSpan": {
                "description": "Time span for how long the keys will be valid",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ListConsentLinksDefinition": {
        "description": "Request for a list of consent links",
        "properties": {
          "parameters": {
            "description": "Collection of resources",
            "items": {
              "$ref": "#/components/schemas/ConsentLinkParameterDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedApiDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceDefinition"
          }
        ],
        "description": "A managed API definition",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ApiResourceProperties"
          }
        },
        "type": "object"
      },
      "ManagedApiDefinitionCollection": {
        "description": "A list of managed API definitions",
        "properties": {
          "value": {
            "description": "Collection of managed APIs",
            "items": {
              "$ref": "#/components/schemas/ManagedApiDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ResourceDefinition": {
        "additionalProperties": false,
        "description": "A resource",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/TagsDictionary"
          },
          "etag": {
            "description": "Resource ETag",
            "type": "string"
          },
          "id": {
            "description": "Resource id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceReference": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "description": "Resource reference id",
            "type": "string"
          },
          "type": {
            "description": "Resource reference type",
            "type": "string"
          }
        },
        "type": "object",
        "x-abstract": true
      },
      "TagsDictionary": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "Resource tags",
        "example": {
          "SampleTagName": "SampleTagValue"
        },
        "type": "object"
      },
      "WsdlDefinition": {
        "additionalProperties": false,
        "description": "The WSDL definition",
        "properties": {
          "content": {
            "description": "The WSDL content",
            "type": "string"
          },
          "importMethod": {
            "$ref": "#/components/schemas/WsdlImportMethod"
          },
          "service": {
            "$ref": "#/components/schemas/WsdlService"
          },
          "url": {
            "description": "The WSDL URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WsdlImportMethod": {
        "description": "The WSDL import method",
        "enum": [
          "NotSpecified",
          "SoapToRest",
          "SoapPassThrough"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "WsdlImportMethod"
        }
      },
      "WsdlService": {
        "additionalProperties": false,
        "description": "The service with name and endpoint names",
        "properties": {
          "endpointQualifiedNames": {
            "description": "List of the endpoints' qualified names",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "qualifiedName": {
            "description": "The service's qualified name",
            "type": "string"
          }
        },
        "required": [
          "qualifiedName"
        ],
        "type": "object"
      },
      "WsdlServiceCollection": {
        "description": "A list of custom API WSDL interfaces",
        "properties": {
          "value": {
            "description": "Collection of WSDL interfaces",
            "items": {
              "$ref": "#/components/schemas/WsdlService"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate a user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}