openapi: 3.0.0
info:
  description: Azure Service Fabric Resource Provider API Client
  title: ServiceFabricManagementClient
  version: 2019-03-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.ServiceFabric/operations:
    get:
      parameters:
        - description: The version of the Service Fabric resource provider API
          in: query
          name: api-version
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error response describing why the operation failed.
      tags:
        - Operations
      description: >-
        Get the list of available Service Fabric resource provider API
        operations.
      operationId: Operations_List
      summary: >-
        Lists all of the available Service Fabric resource provider API
        operations.
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/clusters':
    get:
      parameters:
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
          description: The operation completed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: >-
        Gets all Service Fabric cluster resources created or in the process of
        being created in the subscription.
      operationId: Clusters_List
      summary: >-
        Gets the list of Service Fabric cluster resources created in the
        specified subscription.
      x-ms-examples:
        List clusters:
          $ref: ./examples/ClusterListOperation_example.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions':
    get:
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: The operation completed successfully.
      tags:
        - ClusterVersion
      description: >-
        Gets all available code versions for Service Fabric cluster resources by
        location.
      operationId: ClusterVersions_List
      summary: >-
        Gets the list of Service Fabric cluster code versions available for the
        specified location.
      x-ms-examples:
        List cluster versions:
          $ref: ./examples/ClusterVersionsList_example.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/clusterVersions/{clusterVersion}':
    get:
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: The operation completed successfully.
      tags:
        - ClusterVersion
      description: Gets information about an available Service Fabric cluster code version.
      operationId: ClusterVersions_Get
      summary: >-
        Gets information about a Service Fabric cluster code version available
        in the specified location.
      x-ms-examples:
        Get cluster version:
          $ref: ./examples/ClusterVersionsGet_example.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions':
    get:
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: The operation completed successfully.
      tags:
        - ClusterVersion
      description: >-
        Gets all available code versions for Service Fabric cluster resources by
        environment.
      operationId: ClusterVersions_ListByEnvironment
      summary: >-
        Gets the list of Service Fabric cluster code versions available for the
        specified environment.
      x-ms-examples:
        List cluster versions by environment:
          $ref: ./examples/ClusterVersionsListByEnvironment.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabric/locations/{location}/environments/{environment}/clusterVersions/{clusterVersion}':
    get:
      parameters:
        - $ref: '#/components/parameters/locationForClusterCodeVersions'
        - $ref: '#/components/parameters/environment'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/clusterVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterCodeVersionsListResult'
          description: The operation completed successfully.
      tags:
        - ClusterVersion
      description: >-
        Gets information about an available Service Fabric cluster code version
        by environment.
      operationId: ClusterVersions_GetByEnvironment
      summary: >-
        Gets information about a Service Fabric cluster code version available
        for the specified environment.
      x-ms-examples:
        Get cluster version by environment:
          $ref: ./examples/ClusterVersionsGetByEnvironment_example.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          description: The operation completed successfully.
        '204':
          description: The resource was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: Delete a Service Fabric cluster resource with the specified name.
      operationId: Clusters_Delete
      summary: Deletes a Service Fabric cluster resource.
      x-ms-examples:
        Delete a cluster:
          $ref: ./examples/ClusterDeleteOperation_example.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: The operation completed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: >-
        Get a Service Fabric cluster resource created or in the process of being
        created in the specified resource group.
      operationId: Clusters_Get
      summary: Gets a Service Fabric cluster resource.
      x-ms-examples:
        Get a cluster:
          $ref: ./examples/ClusterGetOperation_example.json
    patch:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: The operation completed successfully.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: >-
            The request was accepted and the operation will complete
            asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: >-
        Update the configuration of a Service Fabric cluster resource with the
        specified name.
      operationId: Clusters_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterUpdateParameters'
        description: >-
          The parameters which contains the property value and property name
          which used to update the cluster configuration.
        required: true
      summary: Updates the configuration of a Service Fabric cluster resource.
      x-ms-examples:
        Patch a cluster:
          $ref: ./examples/ClusterPatchOperation_example.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/clusterNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: The operation completed successfully.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: >-
            The request was accepted and the operation will complete
            asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: >-
        Create or update a Service Fabric cluster resource with the specified
        name.
      operationId: Clusters_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cluster'
        description: The cluster resource.
        required: true
      summary: Creates or updates a Service Fabric cluster resource.
      x-ms-examples:
        Put a cluster with maximum parameters:
          $ref: ./examples/ClusterPutOperation_example_max.json
        Put a cluster with minimum parameters:
          $ref: ./examples/ClusterPutOperation_example_min.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/api-version'
        - $ref: '#/components/parameters/subscriptionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterListResult'
          description: The operation completed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: The detailed error response.
      tags:
        - Cluster
      description: >-
        Gets all Service Fabric cluster resources created or in the process of
        being created in the resource group.
      operationId: Clusters_ListByResourceGroup
      summary: >-
        Gets the list of Service Fabric cluster resources created in the
        specified resource group.
      x-ms-examples:
        List cluster by resource group:
          $ref: ./examples/ClusterListByResourceGroupOperation_example.json
components:
  parameters:
    api-version:
      description: >-
        The version of the Service Fabric resource provider API. This is a
        required parameter and it's value must be "2019-03-01-preview" for this
        specification.
      in: query
      name: api-version
      required: true
      schema:
        default: 2019-03-01-preview
        enum:
          - 2019-03-01-preview
        type: string
      x-ms-parameter-location: client
    clusterNameParameter:
      description: The name of the cluster resource.
      in: path
      name: clusterName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    clusterVersion:
      description: The cluster code version.
      in: path
      name: clusterVersion
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    environment:
      description: The operating system of the cluster. The default means all.
      in: path
      name: environment
      required: true
      schema:
        enum:
          - Windows
          - Linux
        type: string
      x-ms-parameter-location: method
    locationForClusterCodeVersions:
      description: >-
        The location for the cluster code versions. This is different from
        cluster location.
      in: path
      name: location
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    subscriptionId:
      description: The customer subscription identifier.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
  schemas:
    AddOnFeatures:
      description: Available cluster add-on features
      enum:
        - RepairManager
        - DnsService
        - BackupRestoreService
        - ResourceMonitorService
      type: string
    ApplicationDeltaHealthPolicy:
      description: >
        Defines a delta health policy used to evaluate the health of an
        application or one of its child entities when upgrading the cluster.
      properties:
        defaultServiceTypeDeltaHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicy'
          description: >-
            The delta health policy used by default to evaluate the health of a
            service type when upgrading the cluster.
        serviceTypeDeltaHealthPolicies:
          $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicyMap'
          description: >-
            The map with service type delta health policy per service type name.
            The map is empty by default.
      type: object
    ApplicationDeltaHealthPolicyMap:
      additionalProperties:
        $ref: '#/components/schemas/ApplicationDeltaHealthPolicy'
      description: >
        Defines a map that contains specific application delta health policies
        for different applications.

        Each entry specifies as key the application name and as value an
        ApplicationDeltaHealthPolicy used to evaluate the application health
        when upgrading the cluster.

        The application name should include the 'fabric:' URI scheme.

        The map is empty by default.
      type: object
    ApplicationHealthPolicy:
      description: >
        Defines a health policy used to evaluate the health of an application or
        one of its children entities.
      properties:
        defaultServiceTypeHealthPolicy:
          $ref: '#/components/schemas/ServiceTypeHealthPolicy'
          description: >-
            The health policy used by default to evaluate the health of a
            service type.
        serviceTypeHealthPolicies:
          $ref: '#/components/schemas/ServiceTypeHealthPolicyMap'
          description: >-
            The map with service type health policy per service type name. The
            map is empty by default.
      type: object
    ApplicationHealthPolicyMap:
      additionalProperties:
        $ref: '#/components/schemas/ApplicationHealthPolicy'
      description: >
        Defines a map that contains specific application health policies for
        different applications.

        Each entry specifies as key the application name and as value an
        ApplicationHealthPolicy used to evaluate the application health.

        The application name should include the 'fabric:' URI scheme.

        The map is empty by default.
      type: object
    AvailableOperationDisplay:
      description: Operation supported by the Service Fabric resource provider
      properties:
        description:
          description: Operation description
          type: string
        operation:
          description: The operation that can be performed.
          type: string
        provider:
          description: The name of the provider.
          type: string
        resource:
          description: The resource on which the operation is performed
          type: string
      type: object
    AzureActiveDirectory:
      description: The settings to enable AAD authentication on the cluster.
      properties:
        clientApplication:
          description: Azure active directory client application id.
          type: string
        clusterApplication:
          description: Azure active directory cluster application id.
          type: string
        tenantId:
          description: Azure active directory tenant id.
          type: string
      type: object
    CertificateDescription:
      description: Describes the certificate details.
      properties:
        thumbprint:
          description: Thumbprint of the primary certificate.
          type: string
        thumbprintSecondary:
          description: Thumbprint of the secondary certificate.
          type: string
        x509StoreName:
          $ref: '#/components/schemas/StoreName'
          description: The local certificate store location.
      required:
        - thumbprint
      type: object
    ClientCertificateCommonName:
      description: Describes the client certificate details using common name.
      properties:
        certificateCommonName:
          description: The common name of the client certificate.
          type: string
        certificateIssuerThumbprint:
          description: The issuer thumbprint of the client certificate.
          type: string
        isAdmin:
          description: >-
            Indicates if the client certificate has admin access to the cluster.
            Non admin clients can perform only read only operations on the
            cluster.
          type: boolean
      required:
        - certificateCommonName
        - isAdmin
        - certificateIssuerThumbprint
      type: object
    ClientCertificateThumbprint:
      description: Describes the client certificate details using thumbprint.
      properties:
        certificateThumbprint:
          description: The thumbprint of the client certificate.
          type: string
        isAdmin:
          description: >-
            Indicates if the client certificate has admin access to the cluster.
            Non admin clients can perform only read only operations on the
            cluster.
          type: boolean
      required:
        - certificateThumbprint
        - isAdmin
      type: object
    Cluster:
      allOf:
        - description: The cluster resource properties
        - $ref: '#/components/schemas/Resource'
        - properties:
            properties:
              $ref: '#/components/schemas/ClusterProperties'
              description: The cluster resource properties
              x-ms-client-flatten: true
          type: object
      description: |
        The cluster resource
      type: object
    ClusterCodeVersionsListResult:
      description: The list results of the Service Fabric runtime versions.
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/ClusterCodeVersionsResult'
          type: array
      type: object
    ClusterCodeVersionsResult:
      description: The result of the Service Fabric runtime versions
      properties:
        id:
          description: The identification of the result
          type: string
        name:
          description: The name of the result
          type: string
        properties:
          $ref: '#/components/schemas/ClusterVersionDetails'
          description: The detail of the Service Fabric runtime version result
          x-ms-client-flatten: true
        type:
          description: The result resource type
          type: string
      type: object
    ClusterEnvironment:
      description: 'Cluster operating system, the default will be Windows'
      enum:
        - Windows
        - Linux
      type: string
    ClusterHealthPolicy:
      description: >
        Defines a health policy used to evaluate the health of the cluster or of
        a cluster node.
      properties:
        applicationHealthPolicies:
          $ref: '#/components/schemas/ApplicationHealthPolicyMap'
          description: >-
            Defines the application health policy map used to evaluate the
            health of an application or one of its children entities.
        maxPercentUnhealthyApplications:
          default: 0
          description: >
            The maximum allowed percentage of unhealthy applications before
            reporting an error. For example, to allow 10% of applications to be
            unhealthy, this value would be 10.


            The percentage represents the maximum tolerated percentage of
            applications that can be unhealthy before the cluster is considered
            in error.

            If the percentage is respected but there is at least one unhealthy
            application, the health is evaluated as Warning.

            This is calculated by dividing the number of unhealthy applications
            over the total number of application instances in the cluster,
            excluding applications of application types that are included in the
            ApplicationTypeHealthPolicyMap.

            The computation rounds up to tolerate one failure on small numbers
            of applications. Default percentage is zero.
          maximum: 100
          minimum: 0
          type: integer
        maxPercentUnhealthyNodes:
          default: 0
          description: >
            The maximum allowed percentage of unhealthy nodes before reporting
            an error. For example, to allow 10% of nodes to be unhealthy, this
            value would be 10.


            The percentage represents the maximum tolerated percentage of nodes
            that can be unhealthy before the cluster is considered in error.

            If the percentage is respected but there is at least one unhealthy
            node, the health is evaluated as Warning.

            The percentage is calculated by dividing the number of unhealthy
            nodes over the total number of nodes in the cluster.

            The computation rounds up to tolerate one failure on small numbers
            of nodes. Default percentage is zero.


            In large clusters, some nodes will always be down or out for
            repairs, so this percentage should be configured to tolerate that.
          maximum: 100
          minimum: 0
          type: integer
      type: object
    ClusterListResult:
      description: Cluster list results
      properties:
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/Cluster'
          type: array
      type: object
    ClusterProperties:
      description: Describes the cluster resource properties.
      properties:
        addOnFeatures:
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
          type: array
        availableClusterVersions:
          description: The Service Fabric runtime versions available for this cluster.
          items:
            $ref: '#/components/schemas/ClusterVersionDetails'
          readOnly: true
          type: array
        azureActiveDirectory:
          $ref: '#/components/schemas/AzureActiveDirectory'
          description: The AAD authentication settings of the cluster.
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: >-
            The certificate to use for securing the cluster. The certificate
            provided will be used for node to node security within the cluster,
            SSL certificate for cluster management endpoint and default admin
            client.
        certificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
          description: >-
            Describes a list of server certificates referenced by common name
            that are used to secure the cluster.
        clientCertificateCommonNames:
          description: >-
            The list of client certificates referenced by common name that are
            allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
          type: array
        clientCertificateThumbprints:
          description: >-
            The list of client certificates referenced by thumbprint that are
            allowed to manage the cluster.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
          type: array
        clusterCodeVersion:
          description: >-
            The Service Fabric runtime version of the cluster. This property can
            only by set the user when **upgradeMode** is set to 'Manual'. To get
            list of available Service Fabric versions for new clusters use
            [ClusterVersion API](./ClusterVersion.md). To get the list of
            available version for existing clusters use
            **availableClusterVersions**.
          type: string
        clusterEndpoint:
          description: >-
            The Azure Resource Provider endpoint. A system service in the
            cluster connects to this  endpoint.
          readOnly: true
          type: string
        clusterId:
          description: A service generated unique identifier for the cluster resource.
          readOnly: true
          type: string
        clusterState:
          $ref: '#/components/schemas/ClusterState'
          description: |
            The current state of the cluster.

              - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
              - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
              - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
              - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
              - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
              - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
              - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
              - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
              - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
              - Ready - Indicates that the cluster is in a stable state.
          readOnly: true
        diagnosticsStorageAccountConfig:
          $ref: '#/components/schemas/DiagnosticsStorageAccountConfig'
          description: >-
            The storage account information for storing Service Fabric
            diagnostic logs.
        eventStoreServiceEnabled:
          description: Indicates if the event store service is enabled.
          type: boolean
        fabricSettings:
          description: The list of custom fabric settings to configure the cluster.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
          type: array
        managementEndpoint:
          description: The http management endpoint of the cluster.
          type: string
        nodeTypes:
          description: The list of node types in the cluster.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
          type: array
        provisioningState:
          description: The provisioning state of the cluster resource.
          enum:
            - Updating
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        reliabilityLevel:
          $ref: '#/components/schemas/ReliabilityLevel'
          description: >
            The reliability level sets the replica set size of system services.
            Learn about
            [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

              - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
              - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
              - Silver - Run the System services with a target replica set count of 5.
              - Gold - Run the System services with a target replica set count of 7.
              - Platinum - Run the System services with a target replica set count of 9.
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The server certificate used by reverse proxy.
        reverseProxyCertificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
          description: >-
            Describes a list of server certificates referenced by common name
            that are used to secure the cluster.
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
          description: The policy to use when upgrading the cluster.
        upgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
          description: >
            The upgrade mode of the cluster when new Service Fabric runtime
            version is available.

              - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
              - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
        vmImage:
          description: >-
            The VM image VMSS has been configured with. Generic names such as
            Windows or Linux can be used.
          type: string
      required:
        - managementEndpoint
        - nodeTypes
      type: object
    ClusterPropertiesUpdateParameters:
      description: >-
        Describes the cluster resource properties that can be updated during
        PATCH operation.
      properties:
        addOnFeatures:
          description: The list of add-on features to enable in the cluster.
          items:
            $ref: '#/components/schemas/AddOnFeatures'
          type: array
        certificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: >-
            The certificate to use for securing the cluster. The certificate
            provided will be used for  node to node security within the cluster,
            SSL certificate for cluster management endpoint and default  admin
            client.
        certificateCommonNames:
          $ref: '#/components/schemas/ServerCertificateCommonNames'
          description: >-
            Describes a list of server certificates referenced by common name
            that are used to secure the cluster.
        clientCertificateCommonNames:
          description: >-
            The list of client certificates referenced by common name that are
            allowed to manage the cluster. This will overwrite the existing
            list.
          items:
            $ref: '#/components/schemas/ClientCertificateCommonName'
          type: array
        clientCertificateThumbprints:
          description: >-
            The list of client certificates referenced by thumbprint that are
            allowed to manage the cluster. This will overwrite the existing
            list.
          items:
            $ref: '#/components/schemas/ClientCertificateThumbprint'
          type: array
        clusterCodeVersion:
          description: >-
            The Service Fabric runtime version of the cluster. This property can
            only by set the user when **upgradeMode** is set to 'Manual'. To get
            list of available Service Fabric versions for new clusters use
            [ClusterVersion API](./ClusterVersion.md). To get the list of
            available version for existing clusters use
            **availableClusterVersions**.
          type: string
        eventStoreServiceEnabled:
          description: Indicates if the event store service is enabled.
          type: boolean
        fabricSettings:
          description: >-
            The list of custom fabric settings to configure the cluster. This
            will overwrite the existing list.
          items:
            $ref: '#/components/schemas/SettingsSectionDescription'
          type: array
        nodeTypes:
          description: >-
            The list of node types in the cluster. This will overwrite the
            existing list.
          items:
            $ref: '#/components/schemas/NodeTypeDescription'
          type: array
        reliabilityLevel:
          $ref: '#/components/schemas/ReliabilityLevel'
          description: >
            The reliability level sets the replica set size of system services.
            Learn about
            [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

              - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
              - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
              - Silver - Run the System services with a target replica set count of 5.
              - Gold - Run the System services with a target replica set count of 7.
              - Platinum - Run the System services with a target replica set count of 9.
        reverseProxyCertificate:
          $ref: '#/components/schemas/CertificateDescription'
          description: The server certificate used by reverse proxy.
        upgradeDescription:
          $ref: '#/components/schemas/ClusterUpgradePolicy'
          description: The policy to use when upgrading the cluster.
        upgradeMode:
          $ref: '#/components/schemas/UpgradeMode'
          description: >
            The upgrade mode of the cluster when new Service Fabric runtime
            version is available.

              - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
              - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
      type: object
    ClusterState:
      description: |
        The current state of the cluster.

          - WaitingForNodes - Indicates that the cluster resource is created and the resource provider is waiting for Service Fabric VM extension to boot up and report to it.
          - Deploying - Indicates that the Service Fabric runtime is being installed on the VMs. Cluster resource will be in this state until the cluster boots up and system services are up.
          - BaselineUpgrade - Indicates that the cluster is upgrading to establishes the cluster version. This upgrade is automatically initiated when the cluster boots up for the first time.
          - UpdatingUserConfiguration - Indicates that the cluster is being upgraded with the user provided configuration.
          - UpdatingUserCertificate - Indicates that the cluster is being upgraded with the user provided certificate.
          - UpdatingInfrastructure - Indicates that the cluster is being upgraded with the latest Service Fabric runtime version. This happens only when the **upgradeMode** is set to 'Automatic'.
          - EnforcingClusterVersion - Indicates that cluster is on a different version than expected and the cluster is being upgraded to the expected version.
          - UpgradeServiceUnreachable - Indicates that the system service in the cluster is no longer polling the Resource Provider. Clusters in this state cannot be managed by the Resource Provider.
          - AutoScale - Indicates that the ReliabilityLevel of the cluster is being adjusted.
          - Ready - Indicates that the cluster is in a stable state.
      enum:
        - WaitingForNodes
        - Deploying
        - BaselineUpgrade
        - UpdatingUserConfiguration
        - UpdatingUserCertificate
        - UpdatingInfrastructure
        - EnforcingClusterVersion
        - UpgradeServiceUnreachable
        - AutoScale
        - Ready
      type: string
    ClusterUpdateParameters:
      description: Cluster update request
      properties:
        tags:
          additionalProperties:
            type: string
          description: Cluster update parameters
          type: object
        properties:
          $ref: '#/components/schemas/ClusterPropertiesUpdateParameters'
          description: >-
            Describes the cluster resource properties that can be updated during
            PATCH operation.
          x-ms-client-flatten: true
      type: object
    ClusterUpgradeDeltaHealthPolicy:
      description: Describes the delta health policies for the cluster upgrade.
      properties:
        applicationDeltaHealthPolicies:
          $ref: '#/components/schemas/ApplicationDeltaHealthPolicyMap'
          description: >-
            Defines the application delta health policy map used to evaluate the
            health of an application or one of its child entities when upgrading
            the cluster.
        maxPercentDeltaUnhealthyApplications:
          description: >
            The maximum allowed percentage of applications health degradation
            allowed during cluster upgrades.

            The delta is measured between the state of the applications at the
            beginning of upgrade and the state of the applications at the time
            of the health evaluation.

            The check is performed after every upgrade domain upgrade completion
            to make sure the global state of the cluster is within tolerated
            limits. System services are not included in this.
          maximum: 100
          minimum: 0
          type: integer
        maxPercentDeltaUnhealthyNodes:
          description: >
            The maximum allowed percentage of nodes health degradation allowed
            during cluster upgrades.

            The delta is measured between the state of the nodes at the
            beginning of upgrade and the state of the nodes at the time of the
            health evaluation.

            The check is performed after every upgrade domain upgrade completion
            to make sure the global state of the cluster is within tolerated
            limits.
          maximum: 100
          minimum: 0
          type: integer
        maxPercentUpgradeDomainDeltaUnhealthyNodes:
          description: >
            The maximum allowed percentage of upgrade domain nodes health
            degradation allowed during cluster upgrades.

            The delta is measured between the state of the upgrade domain nodes
            at the beginning of upgrade and the state of the upgrade domain
            nodes at the time of the health evaluation.

            The check is performed after every upgrade domain upgrade completion
            for all completed upgrade domains to make sure the state of the
            upgrade domains is within tolerated limits.
          maximum: 100
          minimum: 0
          type: integer
      required:
        - maxPercentDeltaUnhealthyApplications
        - maxPercentDeltaUnhealthyNodes
        - maxPercentUpgradeDomainDeltaUnhealthyNodes
      type: object
    ClusterUpgradePolicy:
      description: Describes the policy used when upgrading the cluster.
      properties:
        deltaHealthPolicy:
          $ref: '#/components/schemas/ClusterUpgradeDeltaHealthPolicy'
          description: The cluster delta health policy used when upgrading the cluster.
        forceRestart:
          description: >-
            If true, then processes are forcefully restarted during upgrade even
            when the code version has not changed (the upgrade only changes
            configuration or data).
          type: boolean
        healthCheckRetryTimeout:
          description: >-
            The amount of time to retry health evaluation when the application
            or cluster is unhealthy before the upgrade rolls back. The timeout
            can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
          type: string
        healthCheckStableDuration:
          description: >-
            The amount of time that the application or cluster must remain
            healthy before the upgrade proceeds to the next upgrade domain. The
            duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format.
          type: string
        healthCheckWaitDuration:
          description: >-
            The length of time to wait after completing an upgrade domain before
            performing health checks. The duration can be in either hh:mm:ss or
            in d.hh:mm:ss.ms format.
          type: string
        healthPolicy:
          $ref: '#/components/schemas/ClusterHealthPolicy'
          description: The cluster health policy used when upgrading the cluster.
        upgradeDomainTimeout:
          description: >-
            The amount of time each upgrade domain has to complete before the
            upgrade rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms format.
          type: string
        upgradeReplicaSetCheckTimeout:
          description: >-
            The maximum amount of time to block processing of an upgrade domain
            and prevent loss of availability when there are unexpected issues.
            When this timeout expires, processing of the upgrade domain will
            proceed regardless of availability loss issues. The timeout is reset
            at the start of each upgrade domain. The timeout can be in either
            hh:mm:ss or in d.hh:mm:ss.ms format.
          type: string
        upgradeTimeout:
          description: >-
            The amount of time the overall upgrade has to complete before the
            upgrade rolls back. The timeout can be in either hh:mm:ss or in
            d.hh:mm:ss.ms format.
          type: string
      required:
        - healthCheckRetryTimeout
        - healthCheckStableDuration
        - healthCheckWaitDuration
        - healthPolicy
        - upgradeDomainTimeout
        - upgradeReplicaSetCheckTimeout
        - upgradeTimeout
      type: object
    ClusterVersionDetails:
      description: The detail of the Service Fabric runtime version result
      properties:
        codeVersion:
          description: The Service Fabric runtime version of the cluster.
          type: string
        environment:
          $ref: '#/components/schemas/ClusterEnvironment'
          description: Indicates if this version is for Windows or Linux operating system.
        supportExpiryUtc:
          description: The date of expiry of support of the version.
          type: string
      type: object
    DiagnosticsStorageAccountConfig:
      description: >-
        The storage account information for storing Service Fabric diagnostic
        logs.
      properties:
        blobEndpoint:
          description: The blob endpoint of the azure storage account.
          type: string
        protectedAccountKeyName:
          description: The protected diagnostics storage key name.
          type: string
        queueEndpoint:
          description: The queue endpoint of the azure storage account.
          type: string
        storageAccountName:
          description: The Azure storage account name.
          type: string
        tableEndpoint:
          description: The table endpoint of the azure storage account.
          type: string
      required:
        - blobEndpoint
        - protectedAccountKeyName
        - queueEndpoint
        - storageAccountName
        - tableEndpoint
      type: object
    DurabilityLevel:
      description: >
        The durability level of the node type. Learn about
        [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - Bronze - No privileges. This is the default.
          - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.
          - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
      enum:
        - Bronze
        - Silver
        - Gold
      type: string
    EndpointRangeDescription:
      description: Port range details
      properties:
        endPort:
          description: End port of a range of ports
          type: integer
        startPort:
          description: Starting port of a range of ports
          type: integer
      required:
        - endPort
        - startPort
      type: object
    ErrorModel:
      description: The structure of the error.
      properties:
        error:
          $ref: '#/components/schemas/ErrorModelError'
          description: The error details.
      type: object
    ErrorModelError:
      description: The error details.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
      type: object
    NodeTypeDescription:
      description: >-
        Describes a node type in the cluster, each node type represents sub set
        of nodes in the cluster.
      properties:
        applicationPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: >-
            The range of ports from which cluster assigned port to Service
            Fabric applications.
        capacities:
          additionalProperties:
            description: Capacity tag value
            type: string
          description: >-
            The capacity tags applied to the nodes in the node type, the cluster
            resource manager uses these tags to understand how much resource a
            node has.
          type: object
        clientConnectionEndpointPort:
          description: The TCP cluster management endpoint port.
          type: integer
        durabilityLevel:
          $ref: '#/components/schemas/DurabilityLevel'
          description: >
            The durability level of the node type. Learn about
            [DurabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

              - Bronze - No privileges. This is the default.
              - Silver - The infrastructure jobs can be paused for a duration of 10 minutes per UD.
              - Gold - The infrastructure jobs can be paused for a duration of 2 hours per UD. Gold durability can be enabled only on full node VM skus like D15_V2, G5 etc.
        ephemeralPorts:
          $ref: '#/components/schemas/EndpointRangeDescription'
          description: >-
            The range of ephemeral ports that nodes in this node type should be
            configured with.
        httpGatewayEndpointPort:
          description: The HTTP cluster management endpoint port.
          type: integer
        isPrimary:
          description: >-
            The node type on which system services will run. Only one node type
            should be marked as primary. Primary node type cannot be deleted or
            changed for existing clusters.
          type: boolean
        name:
          description: The name of the node type.
          type: string
        placementProperties:
          additionalProperties:
            description: Placement tag value
            type: string
          description: >-
            The placement tags applied to nodes in the node type, which can be
            used to indicate where certain services (workload) should run.
          type: object
        reverseProxyEndpointPort:
          description: The endpoint used by reverse proxy.
          type: integer
        vmInstanceCount:
          description: >-
            The number of nodes in the node type. This count should match the
            capacity property in the corresponding VirtualMachineScaleSet
            resource.
          maximum: 2147483647
          minimum: 1
          type: integer
      required:
        - clientConnectionEndpointPort
        - httpGatewayEndpointPort
        - isPrimary
        - name
        - vmInstanceCount
      type: object
    OperationListResult:
      description: >-
        Describes the result of the request to list Service Fabric resource
        provider operations.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: >-
            List of operations supported by the Service Fabric resource
            provider.
          items:
            $ref: '#/components/schemas/OperationResult'
          type: array
      type: object
    OperationResult:
      description: Available operation list result
      properties:
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
          description: The object that represents the operation.
        name:
          description: The name of the operation.
          type: string
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        origin:
          description: Origin result
          type: string
      type: object
    ReliabilityLevel:
      description: >
        The reliability level sets the replica set size of system services.
        Learn about
        [ReliabilityLevel](https://docs.microsoft.com/azure/service-fabric/service-fabric-cluster-capacity).

          - None - Run the System services with a target replica set count of 1. This should only be used for test clusters.
          - Bronze - Run the System services with a target replica set count of 3. This should only be used for test clusters.
          - Silver - Run the System services with a target replica set count of 5.
          - Gold - Run the System services with a target replica set count of 7.
          - Platinum - Run the System services with a target replica set count of 9.
      enum:
        - None
        - Bronze
        - Silver
        - Gold
        - Platinum
      type: string
    Resource:
      description: The resource model definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Azure resource tags.
          type: object
        etag:
          description: Azure resource etag.
          readOnly: true
          type: string
        id:
          description: Azure resource identifier.
          readOnly: true
          type: string
        location:
          description: Azure resource location.
          type: string
          x-ms-mutability:
            - create
            - read
        name:
          description: Azure resource name.
          readOnly: true
          type: string
        type:
          description: Azure resource type.
          readOnly: true
          type: string
      required:
        - location
      type: object
      x-ms-azure-resource: true
    ServerCertificateCommonName:
      description: Describes the server certificate details using common name.
      properties:
        certificateCommonName:
          description: The common name of the server certificate.
          type: string
        certificateIssuerThumbprint:
          description: The issuer thumbprint of the server certificate.
          type: string
      required:
        - certificateCommonName
        - certificateIssuerThumbprint
      type: object
    ServerCertificateCommonNames:
      description: >-
        Describes a list of server certificates referenced by common name that
        are used to secure the cluster.
      properties:
        commonNames:
          description: >-
            The list of server certificates referenced by common name that are
            used to secure the cluster.
          items:
            $ref: '#/components/schemas/ServerCertificateCommonName'
          type: array
        x509StoreName:
          $ref: '#/components/schemas/StoreName'
          description: The local certificate store location.
      type: object
    ServiceTypeDeltaHealthPolicy:
      description: >
        Represents the delta health policy used to evaluate the health of
        services belonging to a service type when upgrading the cluster.
      properties:
        maxPercentDeltaUnhealthyServices:
          default: 0
          description: >
            The maximum allowed percentage of services health degradation
            allowed during cluster upgrades.

            The delta is measured between the state of the services at the
            beginning of upgrade and the state of the services at the time of
            the health evaluation.

            The check is performed after every upgrade domain upgrade completion
            to make sure the global state of the cluster is within tolerated
            limits.
          maximum: 100
          minimum: 0
          type: integer
      type: object
    ServiceTypeDeltaHealthPolicyMap:
      additionalProperties:
        $ref: '#/components/schemas/ServiceTypeDeltaHealthPolicy'
      description: >
        Defines a map that contains specific delta health policies for different
        service types.

        Each entry specifies as key the service type name and as value a
        ServiceTypeDeltaHealthPolicy used to evaluate the service health when
        upgrading the cluster.

        The map is empty by default.
      type: object
    ServiceTypeHealthPolicy:
      description: >
        Represents the health policy used to evaluate the health of services
        belonging to a service type.
      properties:
        maxPercentUnhealthyServices:
          default: 0
          description: >
            The maximum percentage of services allowed to be unhealthy before
            your application is considered in error.
          maximum: 100
          minimum: 0
          type: integer
      type: object
    ServiceTypeHealthPolicyMap:
      additionalProperties:
        $ref: '#/components/schemas/ServiceTypeHealthPolicy'
      description: >
        Defines a ServiceTypeHealthPolicy per service type name.


        The entries in the map replace the default service type health policy
        for each specified service type.

        For example, in an application that contains both a stateless gateway
        service type and a stateful engine service type, the health policies for
        the stateless and stateful services can be configured differently.

        With policy per service type, there's more granular control of the
        health of the service.


        If no policy is specified for a service type name, the
        DefaultServiceTypeHealthPolicy is used for evaluation.
      type: object
    SettingsParameterDescription:
      description: Describes a parameter in fabric settings of the cluster.
      properties:
        name:
          description: The parameter name of fabric setting.
          type: string
        value:
          description: The parameter value of fabric setting.
          type: string
      required:
        - name
        - value
      type: object
    SettingsSectionDescription:
      description: Describes a section in the fabric settings of the cluster.
      properties:
        parameters:
          description: The collection of parameters in the section.
          items:
            $ref: '#/components/schemas/SettingsParameterDescription'
          type: array
        name:
          description: The section name of the fabric settings.
          type: string
      required:
        - name
        - parameters
      type: object
    StoreName:
      description: The local certificate store location.
      enum:
        - AddressBook
        - AuthRoot
        - CertificateAuthority
        - Disallowed
        - My
        - Root
        - TrustedPeople
        - TrustedPublisher
      type: string
    UpgradeMode:
      description: >
        The upgrade mode of the cluster when new Service Fabric runtime version
        is available.

          - Automatic - The cluster will be automatically upgraded to the latest Service Fabric runtime version as soon as it is available.
          - Manual - The cluster will not be automatically upgraded to the latest Service Fabric runtime version. The cluster is upgraded by setting the **clusterCodeVersion** property in the cluster resource.
      enum:
        - Automatic
        - Manual
      type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

