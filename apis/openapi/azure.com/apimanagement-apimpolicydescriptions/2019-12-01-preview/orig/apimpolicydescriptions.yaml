openapi: 3.0.0
info:
  description: >-
    Use these REST APIs for performing retrieving a collection of policy
    snippets available in Azure API Management deployment.
  title: ApiManagementClient
  version: 2019-12-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/policyDescriptions':
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - description: Policy scope.
          in: query
          name: scope
          required: false
          schema:
            enum:
              - Tenant
              - Product
              - Api
              - Operation
              - All
            type: string
          x-ms-enum:
            modelAsString: false
            name: PolicyScopeContract
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./definitions.json#/definitions/PolicyDescriptionCollection
          description: Returns an array of policy descriptions.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - PolicyDescription
      description: Lists all policy descriptions.
      operationId: PolicyDescription_ListByService
      x-ms-examples:
        ApiManagementListPolicyDescriptions:
          $ref: ./examples/ApiManagementListPolicyDescriptions.json
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

