{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.",
    "title": "PostgreSQLManagementClient",
    "version": "2017-12-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/postgresql/resource-manager/Microsoft.DBforPostgreSQL/stable/2017-12-01/postgresql.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DBforPostgreSQL/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationList": {
            "$ref": "./examples/OperationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameAvailability"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CheckNameAvailability"
        ],
        "description": "Check the availability of name for resource",
        "operationId": "CheckNameAvailability_Execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NameAvailabilityRequest"
              }
            }
          },
          "description": "The required parameters for checking if resource name is available.",
          "required": true
        },
        "x-ms-examples": {
          "NameAvailability": {
            "$ref": "./examples/CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/performanceTiers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceTierListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "LocationBasedPerformanceTier"
        ],
        "description": "List all the performance tiers at specified location in a given subscription.",
        "operationId": "LocationBasedPerformanceTier_List",
        "x-ms-examples": {
          "PerformanceTiersList": {
            "$ref": "./examples/PerformanceTiersListByLocation.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given subscription.",
        "operationId": "Servers_List",
        "x-ms-examples": {
          "ServerList": {
            "$ref": "./examples/ServerList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "List all the servers in a given resource group.",
        "operationId": "Servers_ListByResourceGroup",
        "x-ms-examples": {
          "ServerListByResourceGroup": {
            "$ref": "./examples/ServerListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Deletes a server.",
        "operationId": "Servers_Delete",
        "x-ms-examples": {
          "ServerDelete": {
            "$ref": "./examples/ServerDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Gets information about a server.",
        "operationId": "Servers_Get",
        "x-ms-examples": {
          "ServerGet": {
            "$ref": "./examples/ServerGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
        "operationId": "Servers_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerUpdateParameters"
              }
            }
          },
          "description": "The required parameters for updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "ServerUpdate": {
            "$ref": "./examples/ServerUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Servers"
        ],
        "description": "Creates a new server, or will overwrite an existing server.",
        "operationId": "Servers_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerForCreate"
              }
            }
          },
          "description": "The required parameters for creating or updating a server.",
          "required": true
        },
        "x-ms-examples": {
          "Create a database as a point in time restore": {
            "$ref": "./examples/ServerCreatePointInTimeRestore.json"
          },
          "Create a new server": {
            "$ref": "./examples/ServerCreate.json"
          },
          "Create a replica server": {
            "$ref": "./examples/ServerCreateReplicaMode.json"
          },
          "Create a server as a geo restore ": {
            "$ref": "./examples/ServerCreateGeoRestoreMode.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerAdministratorResourceListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerAdministrators"
        ],
        "description": "Returns a list of server Administrators.",
        "operationId": "ServerAdministrators_List",
        "x-ms-examples": {
          "get a list of server administrators": {
            "$ref": "./examples/ServerAdminList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/administrators/activeDirectory": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the active directory administrator"
          },
          "202": {
            "description": "Operation in progress"
          },
          "204": {
            "description": "The specified Server active directory administrator does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerAdministrators"
        ],
        "description": "Deletes server active directory administrator.",
        "operationId": "ServerAdministrators_Delete",
        "x-ms-examples": {
          "ServerAdministratorsDelete": {
            "$ref": "./examples/ServerAdminDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerAdministratorResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerAdministrators"
        ],
        "description": "Gets information about a AAD server administrator.",
        "operationId": "ServerAdministrators_Get",
        "x-ms-examples": {
          "ServerAdministratorGet": {
            "$ref": "./examples/ServerAdminGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerAdministratorResource"
                }
              }
            },
            "description": "Successfully updated the active directory administrator"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerAdministratorResource"
                }
              }
            },
            "description": "Operation in progress"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerAdministrators"
        ],
        "description": "Creates or update active directory administrator on an existing server. The update action will overwrite the existing administrator.",
        "operationId": "ServerAdministrators_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerAdministratorResource"
              }
            }
          },
          "description": "The required parameters for creating or updating an AAD server administrator.",
          "required": true
        },
        "x-ms-examples": {
          "ServerAdministratorCreate": {
            "$ref": "./examples/ServerAdminCreateUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/configurations": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "List all the configurations in a given server.",
        "operationId": "Configurations_ListByServer",
        "x-ms-examples": {
          "ConfigurationList": {
            "$ref": "./examples/ConfigurationListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/configurations/{configurationName}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "Gets information about a configuration of server.",
        "operationId": "Configurations_Get",
        "x-ms-examples": {
          "ConfigurationGet": {
            "$ref": "./examples/ConfigurationGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Configuration"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Configurations"
        ],
        "description": "Updates a configuration of a server.",
        "operationId": "Configurations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Configuration"
              }
            }
          },
          "description": "The required parameters for updating a server configuration.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationCreateOrUpdate": {
            "$ref": "./examples/ConfigurationCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "List all the databases in a given server.",
        "operationId": "Databases_ListByServer",
        "x-ms-examples": {
          "DatabaseList": {
            "$ref": "./examples/DatabaseListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/databases/{databaseName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Deletes a database.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "DatabaseDelete": {
            "$ref": "./examples/DatabaseDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Gets information about a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "DatabaseGet": {
            "$ref": "./examples/DatabaseGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Creates a new database or updates an existing database.",
        "operationId": "Databases_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Database"
              }
            }
          },
          "description": "The required parameters for creating or updating a database.",
          "required": true
        },
        "x-ms-examples": {
          "DatabaseCreate": {
            "$ref": "./examples/DatabaseCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRuleListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "List all the firewall rules in a given server.",
        "operationId": "FirewallRules_ListByServer",
        "x-ms-examples": {
          "FirewallRuleList": {
            "$ref": "./examples/FirewallRuleListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/firewallRules/{firewallRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes a server firewall rule.",
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "FirewallRuleDelete": {
            "$ref": "./examples/FirewallRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets information about a server firewall rule.",
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "FirewallRuleGet": {
            "$ref": "./examples/FirewallRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/FirewallRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "operationId": "FirewallRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FirewallRule"
              }
            }
          },
          "description": "The required parameters for creating or updating a firewall rule.",
          "required": true
        },
        "x-ms-examples": {
          "FirewallRuleCreate": {
            "$ref": "./examples/FirewallRuleCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/logFiles": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogFileListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "LogFiles"
        ],
        "description": "List all the log files in a given server.",
        "operationId": "LogFiles_ListByServer",
        "x-ms-examples": {
          "LogFileList": {
            "$ref": "./examples/LogFileListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/performanceTiers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceTierListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerBasedPerformanceTier"
        ],
        "description": "List all the performance tiers for a PostgreSQL server.",
        "operationId": "ServerBasedPerformanceTier_List",
        "x-ms-examples": {
          "PerformanceTiersList": {
            "$ref": "./examples/PerformanceTiersListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/recoverableServers": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecoverableServerResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RecoverableServers"
        ],
        "description": "Gets a recoverable PostgreSQL Server.",
        "operationId": "RecoverableServers_Get",
        "x-ms-examples": {
          "ReplicasListByServer": {
            "$ref": "./examples/RecoverableServersGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/replicas": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Replicas"
        ],
        "description": "List all the replicas for a given server.",
        "operationId": "Replicas_ListByServer",
        "x-ms-examples": {
          "ReplicasListByServer": {
            "$ref": "./examples/ReplicasListByServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/restart": {
      "post": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ServerRestart"
        ],
        "description": "Restarts a server.",
        "operationId": "Servers_Restart",
        "x-ms-examples": {
          "ServerRestart": {
            "$ref": "./examples/ServerRestart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/updateConfigurations": {
      "post": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationListResult"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConfigurationsUpdate"
        ],
        "description": "Update a list of configurations in a given server.",
        "operationId": "ServerParameters_ListUpdateConfigurations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationListResult"
              }
            }
          },
          "description": "The parameters for updating a list of server configuration.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationList": {
            "$ref": "./examples/ConfigurationsUpdateByServer.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRuleListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of virtual network rules."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a list of virtual network rules in a server.",
        "operationId": "VirtualNetworkRules_ListByServer",
        "x-ms-examples": {
          "List virtual network rules": {
            "$ref": "./examples/VirtualNetworkRulesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the virtual network rule."
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "The specified virtual network rule does not exist."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Deletes the virtual network rule with the given name.",
        "operationId": "VirtualNetworkRules_Delete",
        "x-ms-examples": {
          "Delete a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully retrieved a specified virtual network rule."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ResourceNotFound - The requested resource was not found."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Gets a virtual network rule.",
        "operationId": "VirtualNetworkRules_Get",
        "x-ms-examples": {
          "Gets a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/virtualNetworkRuleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully updated a virtual network rule."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description": "Successfully created a virtual network rule."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 NullVirtualNetworkRequest - Virtual Network Request is Null\n\n * 400 NullVirtualNetworkRequestParameters - Virtual Network Request Parameters are Null\n\n * 400 NullVirtualNetworkSubnetId - The Virtual Network Subnet Id is null\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 VirtualNetworkRuleNotEnabled - Azure SQL Server Virtual Network Rule feature is not enabled\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation."
          }
        },
        "tags": [
          "VirtualNetworkRules"
        ],
        "description": "Creates or updates an existing virtual network rule.",
        "operationId": "VirtualNetworkRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VirtualNetworkRule"
              }
            }
          },
          "description": "The requested virtual Network Rule Resource state.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a virtual network rule": {
            "$ref": "./examples/VirtualNetworkRulesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ConfigurationNameParameter": {
        "description": "The name of the server configuration.",
        "in": "path",
        "name": "configurationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "FirewallRuleNameParameter": {
        "description": "The name of the server firewall rule.",
        "in": "path",
        "name": "firewallRuleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "LocationNameParameter": {
        "description": "The name of the location.",
        "in": "path",
        "name": "locationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "virtualNetworkRuleNameParameter": {
        "description": "The name of the virtual network rule.",
        "in": "path",
        "name": "virtualNetworkRuleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "CloudError": {
        "description": "An error response from the Batch service.",
        "properties": {
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "Configuration": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Configuration.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ConfigurationProperties",
            "description": "The properties of a configuration.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ConfigurationListResult": {
        "description": "A list of server configurations.",
        "properties": {
          "value": {
            "description": "The list of server configurations.",
            "items": {
              "$ref": "#/components/schemas/Configuration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConfigurationProperties": {
        "description": "The properties of a configuration.",
        "properties": {
          "allowedValues": {
            "description": "Allowed values of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "dataType": {
            "description": "Data type of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "defaultValue": {
            "description": "Default value of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Description of the configuration.",
            "readOnly": true,
            "type": "string"
          },
          "source": {
            "description": "Source of the configuration.",
            "type": "string"
          },
          "value": {
            "description": "Value of the configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Database": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Database.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DatabaseProperties",
            "description": "The properties of a database.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DatabaseListResult": {
        "description": "A List of databases.",
        "properties": {
          "value": {
            "description": "The list of databases housed in a server",
            "items": {
              "$ref": "#/components/schemas/Database"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabaseProperties": {
        "description": "The properties of a database.",
        "properties": {
          "charset": {
            "description": "The charset of the database.",
            "type": "string"
          },
          "collation": {
            "description": "The collation of the database.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FirewallRule": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a server firewall rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FirewallRuleProperties",
            "description": "The properties of a firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "FirewallRuleListResult": {
        "description": "A list of firewall rules.",
        "properties": {
          "value": {
            "description": "The list of firewall rules in a server.",
            "items": {
              "$ref": "#/components/schemas/FirewallRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallRuleProperties": {
        "description": "The properties of a server firewall rule.",
        "properties": {
          "endIpAddress": {
            "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type": "string"
          },
          "startIpAddress": {
            "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
            "type": "string"
          }
        },
        "required": [
          "startIpAddress",
          "endIpAddress"
        ],
        "type": "object"
      },
      "InfrastructureEncryption": {
        "description": "Add a second layer of encryption for your data using new encryption algorithm which gives additional data protection. Value is optional but if passed in, must be 'Disabled' or 'Enabled'.",
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "InfrastructureEncryption",
          "values": [
            {
              "description": "Default value for single layer of encryption for data at rest.",
              "value": "Enabled"
            },
            {
              "description": "Additional (2nd) layer of encryption for data at rest",
              "value": "Disabled"
            }
          ]
        }
      },
      "LogFile": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a log file.",
        "properties": {
          "name": {
            "description": "The name of the log file.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/LogFileProperties",
            "description": "The properties of the log file.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "LogFileListResult": {
        "description": "A list of log files.",
        "properties": {
          "value": {
            "description": "The list of log files.",
            "items": {
              "$ref": "#/components/schemas/LogFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LogFileProperties": {
        "description": "The properties of a log file.",
        "properties": {
          "createdTime": {
            "description": "Creation timestamp of the log file.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "Last modified timestamp of the log file.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "sizeInKB": {
            "description": "Size of the log file.",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "Type of the log file.",
            "type": "string"
          },
          "url": {
            "description": "The url to download the log file from.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MinimalTlsVersion": {
        "description": "Enforce a minimal Tls version for the server.",
        "enum": [
          "TLS1_0",
          "TLS1_1",
          "TLS1_2",
          "TLSEnforcementDisabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MinimalTlsVersionEnum"
        }
      },
      "NameAvailability": {
        "description": "Represents a resource name availability.",
        "properties": {
          "message": {
            "description": "Error Message.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Indicates whether the resource name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason for name being unavailable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameAvailabilityRequest": {
        "description": "Request from client to check resource name availability.",
        "properties": {
          "name": {
            "description": "Resource name to verify.",
            "type": "string"
          },
          "type": {
            "description": "Resource type used for verification.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "REST API operation definition.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "The localized display information for this particular operation or action.",
            "readOnly": true
          },
          "name": {
            "description": "The name of the operation being performed on this particular object.",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "The intended executor of the operation.",
            "enum": [
              "NotSpecified",
              "user",
              "system"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationOrigin"
            }
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Additional descriptions for the operation.",
            "readOnly": true,
            "type": "object",
            "x-ms-client-flatten": false
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "Display metadata associated with the operation.",
        "properties": {
          "description": {
            "description": "Operation description.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "Localized friendly name for the operation.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "Operation resource provider name.",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "Resource on which the operation is performed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "A list of resource provider operations.",
        "properties": {
          "value": {
            "description": "The list of resource provider operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierListResult": {
        "description": "A list of performance tiers.",
        "properties": {
          "value": {
            "description": "The list of performance tiers",
            "items": {
              "$ref": "#/components/schemas/PerformanceTierProperties"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierProperties": {
        "description": "Performance tier properties",
        "properties": {
          "id": {
            "description": "ID of the performance tier.",
            "type": "string"
          },
          "maxBackupRetentionDays": {
            "description": "Maximum Backup retention in days for the performance tier edition",
            "format": "int32",
            "type": "integer"
          },
          "maxLargeStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "maxStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "minBackupRetentionDays": {
            "description": "Minimum Backup retention in days for the performance tier edition",
            "format": "int32",
            "type": "integer"
          },
          "minLargeStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "minStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "serviceLevelObjectives": {
            "description": "Service level objectives associated with the performance tier",
            "items": {
              "$ref": "#/components/schemas/PerformanceTierServiceLevelObjectives"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PerformanceTierServiceLevelObjectives": {
        "description": "Service level objectives for performance tier.",
        "properties": {
          "edition": {
            "description": "Edition of the performance tier.",
            "type": "string"
          },
          "hardwareGeneration": {
            "description": "Hardware generation associated with the service level objective",
            "type": "string"
          },
          "id": {
            "description": "ID for the service level objective.",
            "type": "string"
          },
          "maxBackupRetentionDays": {
            "description": "Maximum Backup retention in days for the performance tier edition",
            "format": "int32",
            "type": "integer"
          },
          "maxStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "minBackupRetentionDays": {
            "description": "Minimum Backup retention in days for the performance tier edition",
            "format": "int32",
            "type": "integer"
          },
          "minStorageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          },
          "vCore": {
            "description": "vCore associated with the service level objective",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrivateEndpointProperty": {
        "properties": {
          "id": {
            "description": "Resource id of the private endpoint.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "PublicNetworkAccess": {
        "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "PublicNetworkAccessEnum"
        }
      },
      "RecoverableServerProperties": {
        "description": "The recoverable server's properties.",
        "properties": {
          "edition": {
            "description": "Edition of the performance tier.",
            "readOnly": true,
            "type": "string"
          },
          "hardwareGeneration": {
            "description": "Hardware generation associated with the service level objective",
            "readOnly": true,
            "type": "string"
          },
          "lastAvailableBackupDateTime": {
            "description": "The last available backup date time.",
            "readOnly": true,
            "type": "string"
          },
          "serviceLevelObjective": {
            "description": "The service level objective",
            "readOnly": true,
            "type": "string"
          },
          "vCore": {
            "description": "vCore associated with the service level objective",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "version": {
            "description": "The PostgreSQL version",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecoverableServerResource": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "A recoverable server resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecoverableServerProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ResourceIdentity": {
        "description": "Azure Active Directory identity configuration for a resource.",
        "properties": {
          "principalId": {
            "description": "The Azure Active Directory principal id.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The Azure Active Directory tenant id.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IdentityType"
            }
          }
        },
        "type": "object"
      },
      "Server": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Represents a server.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The Azure Active Directory identity of the server."
          },
          "properties": {
            "$ref": "#/components/schemas/ServerProperties",
            "description": "Properties of the server.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "type": "object"
      },
      "ServerAdministratorProperties": {
        "description": "The properties of an server Administrator.",
        "properties": {
          "administratorType": {
            "description": "The type of administrator.",
            "enum": [
              "ActiveDirectory"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "AdministratorType"
            }
          },
          "login": {
            "description": "The server administrator login account name.",
            "type": "string"
          },
          "sid": {
            "description": "The server administrator Sid (Secure ID).",
            "format": "uuid",
            "type": "string"
          },
          "tenantId": {
            "description": "The server Active Directory Administrator tenant id.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "tenantId",
          "administratorType",
          "login",
          "sid"
        ],
        "type": "object"
      },
      "ServerAdministratorResource": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a and external administrator to be created.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ServerAdministratorProperties",
            "description": "Properties of the server AAD administrator.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ServerAdministratorResourceListResult": {
        "description": "The response to a list Active Directory Administrators request.",
        "properties": {
          "value": {
            "description": "The list of server Active Directory Administrators for the server.",
            "items": {
              "$ref": "#/components/schemas/ServerAdministratorResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerForCreate": {
        "description": "Represents a server to be created.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-specific metadata in the form of key-value pairs.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The Azure Active Directory identity of the server."
          },
          "location": {
            "description": "The location the resource resides in.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ServerPropertiesForCreate",
            "description": "Properties of the server.",
            "x-ms-client-flatten": false
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "required": [
          "properties",
          "location"
        ],
        "type": "object"
      },
      "ServerListResult": {
        "description": "A list of servers.",
        "properties": {
          "value": {
            "description": "The list of servers",
            "items": {
              "$ref": "#/components/schemas/Server"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServerPrivateEndpointConnection": {
        "description": "A private endpoint connection under a server",
        "properties": {
          "id": {
            "description": "Resource ID of the Private Endpoint Connection.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ServerPrivateEndpointConnectionProperties",
            "description": "Private endpoint connection properties",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ServerPrivateEndpointConnectionProperties": {
        "description": "Properties of a private endpoint connection.",
        "properties": {
          "privateEndpoint": {
            "$ref": "#/components/schemas/PrivateEndpointProperty",
            "description": "Private endpoint which the connection belongs to."
          },
          "privateLinkServiceConnectionState": {
            "$ref": "#/components/schemas/ServerPrivateLinkServiceConnectionStateProperty",
            "description": "Connection state of the private endpoint connection."
          },
          "provisioningState": {
            "description": "State of the private endpoint connection.",
            "enum": [
              "Approving",
              "Ready",
              "Dropping",
              "Failed",
              "Rejecting"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrivateEndpointProvisioningState"
            }
          }
        },
        "type": "object"
      },
      "ServerPrivateLinkServiceConnectionStateProperty": {
        "properties": {
          "actionsRequired": {
            "description": "The actions required for private link service connection.",
            "enum": [
              "None"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrivateLinkServiceConnectionStateActionsRequire"
            }
          },
          "description": {
            "description": "The private link service connection description.",
            "type": "string"
          },
          "status": {
            "description": "The private link service connection status.",
            "enum": [
              "Approved",
              "Pending",
              "Rejected",
              "Disconnected"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrivateLinkServiceConnectionStateStatus"
            }
          }
        },
        "required": [
          "status",
          "description"
        ],
        "type": "object"
      },
      "ServerProperties": {
        "description": "The properties of a server.",
        "properties": {
          "administratorLogin": {
            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
            "type": "string"
          },
          "byokEnforcement": {
            "description": "Status showing whether the server data encryption is enabled with customer-managed keys.",
            "readOnly": true,
            "type": "string"
          },
          "earliestRestoreDate": {
            "description": "Earliest restore point creation time (ISO8601 format)",
            "format": "date-time",
            "type": "string"
          },
          "fullyQualifiedDomainName": {
            "description": "The fully qualified domain name of a server.",
            "type": "string"
          },
          "infrastructureEncryption": {
            "$ref": "#/components/schemas/InfrastructureEncryption",
            "description": "Status showing whether the server enabled infrastructure encryption."
          },
          "masterServerId": {
            "description": "The master server id of a replica server.",
            "type": "string"
          },
          "minimalTlsVersion": {
            "$ref": "#/components/schemas/MinimalTlsVersion",
            "description": "Enforce a minimal Tls version for the server."
          },
          "privateEndpointConnections": {
            "description": "List of private endpoint connections on a server",
            "items": {
              "$ref": "#/components/schemas/ServerPrivateEndpointConnection"
            },
            "readOnly": true,
            "type": "array"
          },
          "publicNetworkAccess": {
            "$ref": "#/components/schemas/PublicNetworkAccess",
            "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
          },
          "replicaCapacity": {
            "description": "The maximum number of replicas that a master server can have.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "replicationRole": {
            "description": "The replication role of the server.",
            "type": "string"
          },
          "sslEnforcement": {
            "$ref": "#/components/schemas/SslEnforcement",
            "description": "Enable ssl enforcement or not when connect to server."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "Storage profile of a server."
          },
          "userVisibleState": {
            "description": "A state of a server that is visible to user.",
            "enum": [
              "Ready",
              "Dropping",
              "Disabled",
              "Inaccessible"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ServerState"
            }
          },
          "version": {
            "$ref": "#/components/schemas/ServerVersion",
            "description": "Server version."
          }
        },
        "type": "object"
      },
      "ServerPropertiesForCreate": {
        "description": "The properties used to create a new server.",
        "discriminator": {
          "propertyName": "createMode"
        },
        "properties": {
          "createMode": {
            "description": "The mode to create a new server.",
            "enum": [
              "Default",
              "PointInTimeRestore",
              "GeoRestore",
              "Replica"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CreateMode"
            }
          },
          "infrastructureEncryption": {
            "$ref": "#/components/schemas/InfrastructureEncryption",
            "description": "Status showing whether the server enabled infrastructure encryption."
          },
          "minimalTlsVersion": {
            "$ref": "#/components/schemas/MinimalTlsVersion",
            "description": "Enforce a minimal Tls version for the server."
          },
          "publicNetworkAccess": {
            "$ref": "#/components/schemas/PublicNetworkAccess",
            "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
          },
          "sslEnforcement": {
            "$ref": "#/components/schemas/SslEnforcement",
            "description": "Enable ssl enforcement or not when connect to server."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "Storage profile of a server."
          },
          "version": {
            "$ref": "#/components/schemas/ServerVersion",
            "description": "Server version."
          }
        },
        "required": [
          "createMode"
        ],
        "type": "object"
      },
      "ServerPropertiesForDefaultCreate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server.",
        "properties": {
          "administratorLogin": {
            "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
            "type": "string"
          },
          "administratorLoginPassword": {
            "description": "The password of the administrator login.",
            "format": "password",
            "type": "string",
            "x-ms-secret": true
          }
        },
        "required": [
          "administratorLogin",
          "administratorLoginPassword"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Default"
      },
      "ServerPropertiesForGeoRestore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server by restoring to a different region from a geo replicated backup.",
        "properties": {
          "sourceServerId": {
            "description": "The source server id to restore from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId"
        ],
        "type": "object",
        "x-ms-discriminator-value": "GeoRestore"
      },
      "ServerPropertiesForReplica": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties to create a new replica.",
        "properties": {
          "sourceServerId": {
            "description": "The master server id to create replica from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Replica"
      },
      "ServerPropertiesForRestore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServerPropertiesForCreate"
          }
        ],
        "description": "The properties used to create a new server by restoring from a backup.",
        "properties": {
          "restorePointInTime": {
            "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
            "format": "date-time",
            "type": "string"
          },
          "sourceServerId": {
            "description": "The source server id to restore from.",
            "type": "string"
          }
        },
        "required": [
          "sourceServerId",
          "restorePointInTime"
        ],
        "type": "object",
        "x-ms-discriminator-value": "PointInTimeRestore"
      },
      "ServerUpdateParameters": {
        "description": "Parameters allowed to update for a server.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Application-specific metadata in the form of key-value pairs.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The Azure Active Directory identity of the server."
          },
          "properties": {
            "description": "The properties that can be updated for a server.",
            "properties": {
              "administratorLoginPassword": {
                "description": "The password of the administrator login.",
                "format": "password",
                "type": "string"
              },
              "minimalTlsVersion": {
                "$ref": "#/components/schemas/MinimalTlsVersion",
                "description": "Enforce a minimal Tls version for the server."
              },
              "publicNetworkAccess": {
                "$ref": "#/components/schemas/PublicNetworkAccess",
                "description": "Whether or not public network access is allowed for this server. Value is optional but if passed in, must be 'Enabled' or 'Disabled'"
              },
              "replicationRole": {
                "description": "The replication role of the server.",
                "type": "string"
              },
              "sslEnforcement": {
                "$ref": "#/components/schemas/SslEnforcement",
                "description": "Enable ssl enforcement or not when connect to server."
              },
              "storageProfile": {
                "$ref": "#/components/schemas/StorageProfile",
                "description": "Storage profile of a server."
              },
              "version": {
                "$ref": "#/components/schemas/ServerVersion",
                "description": "The version of a server."
              }
            },
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU (pricing tier) of the server."
          }
        },
        "type": "object"
      },
      "ServerVersion": {
        "description": "The version of a server.",
        "enum": [
          "9.5",
          "9.6",
          "10",
          "10.0",
          "10.2",
          "11"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ServerVersion"
        }
      },
      "Sku": {
        "description": "Billing information related properties of a server.",
        "properties": {
          "capacity": {
            "description": "The scale up/out capacity, representing server's compute units.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "family": {
            "description": "The family of hardware.",
            "type": "string"
          },
          "name": {
            "description": "The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.",
            "type": "string"
          },
          "size": {
            "description": "The size code, to be interpreted by resource as appropriate.",
            "type": "string"
          },
          "tier": {
            "description": "The tier of the particular SKU, e.g. Basic.",
            "enum": [
              "Basic",
              "GeneralPurpose",
              "MemoryOptimized"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuTier"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SslEnforcement": {
        "description": "Enable ssl enforcement or not when connect to server.",
        "enum": [
          "Enabled",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "SslEnforcementEnum"
        }
      },
      "StorageProfile": {
        "description": "Storage Profile properties of a server",
        "properties": {
          "backupRetentionDays": {
            "description": "Backup retention days for the server.",
            "format": "int32",
            "type": "integer"
          },
          "geoRedundantBackup": {
            "description": "Enable Geo-redundant or not for server backup.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GeoRedundantBackup"
            }
          },
          "storageAutogrow": {
            "description": "Enable Storage Auto Grow.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageAutogrow"
            }
          },
          "storageMB": {
            "description": "Max storage allowed for a server.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VirtualNetworkRule": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "A virtual network rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/VirtualNetworkRuleProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleListResult": {
        "description": "A list of virtual network rules.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of results.",
            "items": {
              "$ref": "#/components/schemas/VirtualNetworkRule"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleProperties": {
        "description": "Properties of a virtual network rule.",
        "properties": {
          "ignoreMissingVnetServiceEndpoint": {
            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
            "type": "boolean"
          },
          "state": {
            "description": "Virtual Network Rule State",
            "enum": [
              "Initializing",
              "InProgress",
              "Ready",
              "Deleting",
              "Unknown"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "VirtualNetworkRuleState"
            }
          },
          "virtualNetworkSubnetId": {
            "description": "The ARM resource id of the virtual network subnet.",
            "type": "string"
          }
        },
        "required": [
          "virtualNetworkSubnetId"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}