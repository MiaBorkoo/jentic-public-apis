{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).",
    "title": "ApiManagementClient",
    "version": "2017-03-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2017-03-01/apimauthorizationservers.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "description": "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationServerCollection"
                }
              }
            },
            "description": "A Collection of the Authorization Server entities for the specified API Management service instance."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Lists a collection of authorization servers defined within a service instance.",
        "operationId": "AuthorizationServer_ListByService",
        "x-ms-examples": {
          "ApiManagementListAuthorizationServers": {
            "$ref": "./examples/ApiManagementListAuthorizationServers.json"
          }
        },
        "x-ms-odata": "#/components/schemas/AuthorizationServerContract",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/authorizationServers/{authsid}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/AuthenticationServerIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the authentication server to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The authorization server settings were successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Deletes specific authorization server instance.",
        "operationId": "AuthorizationServer_Delete",
        "x-ms-examples": {
          "ApiManagementDeleteAuthorizationServer": {
            "$ref": "./examples/ApiManagementDeleteAuthorizationServer.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationServerContract"
                }
              }
            },
            "description": "Gets the details of the specified authorization server.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Gets the details of the authorization server specified by its identifier.",
        "operationId": "AuthorizationServer_Get",
        "x-ms-examples": {
          "ApiManagementGetAuthorizationServer": {
            "$ref": "./examples/ApiManagementGetAuthorizationServer.json"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified authorization server entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Gets the entity state (Etag) version of the authorizationServer specified by its identifier.",
        "operationId": "AuthorizationServer_GetEntityTag",
        "x-ms-examples": {
          "ApiManagementHeadAuthorizationServer": {
            "$ref": "./examples/ApiManagementHeadAuthorizationServer.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/AuthenticationServerIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the authorization server to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The authorization server settings were successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Updates the details of the authorization server specified by its identifier.",
        "operationId": "AuthorizationServer_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationServerUpdateContract"
              }
            }
          },
          "description": "OAuth2 Server settings Update parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementUpdateAuthorizationServer": {
            "$ref": "./examples/ApiManagementUpdateAuthorizationServer.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/AuthenticationServerIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationServerContract"
                }
              }
            },
            "description": "Authorization server is already registered."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationServerContract"
                }
              }
            },
            "description": "Authorization server was successfully registered."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AuthorizationServers"
        ],
        "description": "Creates new authorization server or updates an existing authorization server.",
        "operationId": "AuthorizationServer_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationServerContract"
              }
            }
          },
          "description": "Create or update parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementCreateAuthorizationServer": {
            "$ref": "./examples/ApiManagementCreateAuthorizationServer.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AuthenticationServerIdParameter": {
        "description": "Identifier of the authorization server.",
        "in": "path",
        "name": "authsid",
        "required": true,
        "schema": {
          "maxLength": 256,
          "pattern": "^[^*#&+:<>?]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AuthorizationServerCollection": {
        "description": "Paged OAuth2 Authorization Servers list representation.",
        "properties": {
          "count": {
            "description": "Total record count number across all pages.",
            "format": "int64",
            "type": "integer"
          },
          "nextLink": {
            "description": "Next page link if any.",
            "type": "string"
          },
          "value": {
            "description": "Page values.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationServerContract"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AuthorizationServerContract": {
        "allOf": [
          {
            "$ref": "./apimanagement.json#/definitions/Resource"
          }
        ],
        "description": "External OAuth authorization server settings.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AuthorizationServerContractProperties",
            "description": "Properties of the External OAuth authorization server Contract.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AuthorizationServerContractBaseProperties": {
        "description": "External OAuth authorization server Update settings contract.",
        "properties": {
          "authorizationMethods": {
            "description": "HTTP verbs supported by the authorization endpoint. GET must be always present. POST is optional.",
            "items": {
              "enum": [
                "HEAD",
                "OPTIONS",
                "TRACE",
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "AuthorizationMethod"
              }
            },
            "type": "array"
          },
          "bearerTokenSendingMethods": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-4"
            },
            "description": "Specifies the mechanism by which access token is passed to the API. ",
            "items": {
              "enum": [
                "authorizationHeader",
                "query"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BearerTokenSendingMethod"
              }
            },
            "type": "array"
          },
          "clientAuthenticationMethod": {
            "description": "Method of authentication supported by the token endpoint of this authorization server. Possible values are Basic and/or Body. When Body is specified, client credentials and other parameters are passed within the request body in the application/x-www-form-urlencoded format.",
            "items": {
              "enum": [
                "Basic",
                "Body"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ClientAuthenticationMethod",
                "values": [
                  {
                    "description": "Basic Client Authentication method.",
                    "value": "Basic"
                  },
                  {
                    "description": "Body based Authentication method.",
                    "value": "Body"
                  }
                ]
              }
            },
            "type": "array"
          },
          "clientSecret": {
            "description": "Client or app secret registered with this authorization server.",
            "type": "string"
          },
          "defaultScope": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-3.3"
            },
            "description": "Access token scope that is going to be requested by default. Can be overridden at the API level. Should be provided in the form of a string containing space-delimited values.",
            "type": "string"
          },
          "description": {
            "description": "Description of the authorization server. Can contain HTML formatting tags.",
            "type": "string"
          },
          "resourceOwnerPassword": {
            "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner password.",
            "type": "string"
          },
          "resourceOwnerUsername": {
            "description": "Can be optionally specified when resource owner password grant type is supported by this authorization server. Default resource owner username.",
            "type": "string"
          },
          "supportState": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
            },
            "description": "If true, authorization server will include state parameter from the authorization request to its response. Client may use state parameter to raise protocol security.",
            "type": "boolean"
          },
          "tokenBodyParameters": {
            "description": "Additional parameters required by the token endpoint of this authorization server represented as an array of JSON objects with name and value string properties, i.e. {\"name\" : \"name value\", \"value\": \"a value\"}.",
            "items": {
              "$ref": "#/components/schemas/TokenBodyParameterContract"
            },
            "type": "array"
          },
          "tokenEndpoint": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-3.1"
            },
            "description": "OAuth token endpoint. Contains absolute URI to entity being referenced.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationServerContractProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuthorizationServerContractBaseProperties"
          }
        ],
        "description": "External OAuth authorization server settings Properties.",
        "properties": {
          "authorizationEndpoint": {
            "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.",
            "type": "string"
          },
          "clientId": {
            "description": "Client or app id registered with this authorization server.",
            "type": "string"
          },
          "clientRegistrationEndpoint": {
            "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly authorization server name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "grantTypes": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-4"
            },
            "description": "Form of an authorization grant, which the client uses to request the access token.",
            "items": {
              "enum": [
                "authorizationCode",
                "implicit",
                "resourceOwnerPassword",
                "clientCredentials"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "GrantType",
                "values": [
                  {
                    "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1.",
                    "value": "authorizationCode"
                  },
                  {
                    "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2.",
                    "value": "implicit"
                  },
                  {
                    "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3.",
                    "value": "resourceOwnerPassword"
                  },
                  {
                    "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4.",
                    "value": "clientCredentials"
                  }
                ]
              }
            },
            "type": "array"
          }
        },
        "required": [
          "displayName",
          "clientRegistrationEndpoint",
          "authorizationEndpoint",
          "clientId",
          "grantTypes"
        ],
        "type": "object"
      },
      "AuthorizationServerUpdateContract": {
        "allOf": [
          {
            "$ref": "./apimanagement.json#/definitions/Resource"
          }
        ],
        "description": "External OAuth authorization server settings.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AuthorizationServerUpdateContractProperties",
            "description": "Properties of the External OAuth authorization server update Contract.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AuthorizationServerUpdateContractProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuthorizationServerContractBaseProperties"
          }
        ],
        "description": "External OAuth authorization server Update settings contract.",
        "properties": {
          "authorizationEndpoint": {
            "description": "OAuth authorization endpoint. See http://tools.ietf.org/html/rfc6749#section-3.2.",
            "type": "string"
          },
          "clientId": {
            "description": "Client or app id registered with this authorization server.",
            "type": "string"
          },
          "clientRegistrationEndpoint": {
            "description": "Optional reference to a page where client or app registration for this authorization server is performed. Contains absolute URL to entity being referenced.",
            "type": "string"
          },
          "displayName": {
            "description": "User-friendly authorization server name.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "grantTypes": {
            "externalDocs": {
              "url": "http://tools.ietf.org/html/rfc6749#section-4"
            },
            "description": "Form of an authorization grant, which the client uses to request the access token.",
            "items": {
              "enum": [
                "authorizationCode",
                "implicit",
                "resourceOwnerPassword",
                "clientCredentials"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "GrantType",
                "values": [
                  {
                    "description": "Authorization Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.1.",
                    "value": "authorizationCode"
                  },
                  {
                    "description": "Implicit Code Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.2.",
                    "value": "implicit"
                  },
                  {
                    "description": "Resource Owner Password Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.3.",
                    "value": "resourceOwnerPassword"
                  },
                  {
                    "description": "Client Credentials Grant flow as described https://tools.ietf.org/html/rfc6749#section-4.4.",
                    "value": "clientCredentials"
                  }
                ]
              }
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TokenBodyParameterContract": {
        "description": "OAuth acquire token request body parameter (www-url-form-encoded).",
        "properties": {
          "name": {
            "description": "body parameter name.",
            "type": "string"
          },
          "value": {
            "description": "body parameter value.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}