{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "title": "SqlManagementClient",
    "version": "2019-06-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2019-06-01-preview/WorkloadGroups.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadGroupListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of workload groups."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OperationNotAllowedOnPausedDatabase - Operation is not allowed on a paused database.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 503 DatabaseUnavailable - The operation failed because the database is unavailable.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "WorkloadGroups"
        ],
        "description": "Gets the list of workload groups",
        "operationId": "WorkloadGroups_ListByDatabase",
        "x-ms-examples": {
          "Get the list of workload groups for a data warehouse": {
            "$ref": "./examples/GetWorkloadGroupList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "description": "The name of the workload group to delete.",
            "in": "path",
            "name": "workloadGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the workload group."
          },
          "202": {
            "description": "Deleting the workload group is in progress."
          },
          "204": {
            "description": "The specified workload group does not exist."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OperationNotAllowedOnPausedDatabase - Operation is not allowed on a paused database.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 DatabaseUnavailable - The operation failed because the database is unavailable.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "WorkloadGroups"
        ],
        "description": "Deletes a workload group.",
        "operationId": "WorkloadGroups_Delete",
        "x-ms-examples": {
          "Delete a workload group": {
            "$ref": "./examples/DeleteWorkloadGroup.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "description": "The name of the workload group.",
            "in": "path",
            "name": "workloadGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadGroup"
                }
              }
            },
            "description": "Successfully retrieved the specifies workload group."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OperationNotAllowedOnPausedDatabase - Operation is not allowed on a paused database.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 503 DatabaseUnavailable - The operation failed because the database is unavailable.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "WorkloadGroups"
        ],
        "description": "Gets a workload group",
        "operationId": "WorkloadGroups_Get",
        "x-ms-examples": {
          "Gets a workload group for a data warehouse": {
            "$ref": "./examples/GetWorkloadGroup.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "description": "The name of the workload group.",
            "in": "path",
            "name": "workloadGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadGroup"
                }
              }
            },
            "description": "Successfully updated the workload group."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadGroup"
                }
              }
            },
            "description": "Successfully created the workload group."
          },
          "202": {
            "description": "Create or update for the workload group accepted."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 FeatureDisabledOnSelectedEdition - User attempted to use a feature which is disabled on current database edition.\n\n * 400 OperationNotAllowedOnPausedDatabase - Operation is not allowed on a paused database.\n\n * 400 InvalidWorkloadGroupNameParameter - Invalid workload group name\n\n * 400 InvalidMinResourcePercentParameter - Invalid min resource percent for this workload group.\n\n * 400 InvalidMinResourcePercentPerRequestParameter - Invalid min resource percent per query for this workload group.\n\n * 400 InvalidMaxResourcePercentParameter - Invalid max resource percent to allocate for this workload group.\n\n * 400 InvalidMaxResourcePercentPerRequestParameter - Invalid max resource percent per query for this workload group.\n\n * 400 InvalidImportanceParameter - Importance must be one of the following strings: Low, Below_Normal, Normal, Above_Normal, High.\n\n * 400 InvalidQueryExecutionTimeoutParameter - Invalid query execution timeout value for this workload group.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 503 DatabaseUnavailable - The operation failed because the database is unavailable.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "WorkloadGroups"
        ],
        "description": "Creates or updates a workload group.",
        "operationId": "WorkloadGroups_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkloadGroup"
              }
            }
          },
          "description": "The requested workload group state.",
          "required": true
        },
        "x-ms-examples": {
          "Create a workload group with all properties specified.": {
            "$ref": "./examples/CreateOrUpdateWorkloadGroupMax.json"
          },
          "Create a workload group with the required properties specified.": {
            "$ref": "./examples/CreateOrUpdateWorkloadGroupMin.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "BlobAuditingPolicyNameParameter": {
        "description": "The name of the blob auditing policy.",
        "in": "path",
        "name": "blobAuditingPolicyName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ManagedInstanceNameParameter": {
        "description": "The name of the managed instance.",
        "in": "path",
        "name": "managedInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineContainerNameParameter": {
        "description": "The name of the SqlVirtualMachineContainer.",
        "in": "path",
        "name": "sqlVirtualMachineContainerName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineInstanceNameParameter": {
        "description": "The name of the SqlVirtualMachineInstance.",
        "in": "path",
        "name": "sqlVirtualMachineInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "VirtualClusterNameParameter": {
        "description": "The name of the virtual cluster.",
        "in": "path",
        "name": "virtualClusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ProxyResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "ARM proxy resource.",
        "properties": {},
        "type": "object"
      },
      "Resource": {
        "description": "ARM resource.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "WorkloadGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "Workload group operations for a data warehouse",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkloadGroupProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkloadGroupListResult": {
        "description": "A list of workload groups.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of results.",
            "items": {
              "$ref": "#/components/schemas/WorkloadGroup"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkloadGroupProperties": {
        "description": "Workload group definition. For more information look at sys.workload_management_workload_groups (DMV).",
        "properties": {
          "importance": {
            "description": "The workload group importance level.",
            "type": "string"
          },
          "maxResourcePercent": {
            "description": "The workload group cap percentage resource.",
            "format": "int32",
            "type": "integer"
          },
          "maxResourcePercentPerRequest": {
            "description": "The workload group request maximum grant percentage.",
            "format": "double",
            "type": "number"
          },
          "minResourcePercent": {
            "description": "The workload group minimum percentage resource.",
            "format": "int32",
            "type": "integer"
          },
          "minResourcePercentPerRequest": {
            "description": "The workload group request minimum grant percentage.",
            "format": "double",
            "type": "number"
          },
          "queryExecutionTimeout": {
            "description": "The workload group query execution timeout.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "minResourcePercent",
          "maxResourcePercent",
          "minResourcePercentPerRequest"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}