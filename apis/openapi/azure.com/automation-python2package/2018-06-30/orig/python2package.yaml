openapi: 3.0.0
info:
  title: AutomationManagement
  version: '2018-06-30'
  x-ms-code-generation-settings:
    useDateTimeOffset: true
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages':
    get:
      parameters:
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/AutomationAccountNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleListResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: ../../common/v1/definitions.json#/definitions/ErrorResponse
          description: Automation error response describing why the operation failed.
      tags:
        - Python2Package
      externalDocs:
        url: 'http://aka.ms/azureautomationsdk/moduleoperations'
      description: Retrieve a list of python 2 packages.
      operationId: Python2Package_ListByAutomationAccount
      x-ms-examples:
        List python 2 packages by automation account:
          $ref: ./examples/listPython2PackagesByAutomationAccount.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/python2Packages/{packageName}':
    delete:
      parameters:
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/AutomationAccountNameParameter
        - description: The python package name.
          in: path
          name: packageName
          required: true
          schema:
            type: string
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: ../../common/v1/definitions.json#/definitions/ErrorResponse
          description: Automation error response describing why the operation failed.
      tags:
        - Python2Package
      externalDocs:
        url: 'http://aka.ms/azureautomationsdk/moduleoperations'
      description: Delete the python 2 package by name.
      operationId: Python2Package_Delete
      x-ms-examples:
        Delete a python 2 package:
          $ref: ./examples/deletePython2Package.json
    get:
      parameters:
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/AutomationAccountNameParameter
        - description: The python package name.
          in: path
          name: packageName
          required: true
          schema:
            type: string
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: ../../common/v1/definitions.json#/definitions/ErrorResponse
          description: Automation error response describing why the operation failed.
      tags:
        - Python2Package
      externalDocs:
        url: 'http://aka.ms/azureautomationsdk/moduleoperations'
      description: Retrieve the python 2 package identified by package name.
      operationId: Python2Package_Get
      x-ms-examples:
        Get a python 2 package:
          $ref: ./examples/getPython2Package.json
    patch:
      parameters:
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/AutomationAccountNameParameter
        - description: The name of python package.
          in: path
          name: packageName
          required: true
          schema:
            type: string
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: ../../common/v1/definitions.json#/definitions/ErrorResponse
          description: Automation error response describing why the operation failed.
      tags:
        - Python2Package
      externalDocs:
        url: 'http://aka.ms/azureautomationsdk/moduleoperations'
      description: Update the python 2 package identified by package name.
      operationId: Python2Package_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageUpdateParameters'
        description: The update parameters for python package.
        required: true
      x-ms-examples:
        Update a module:
          $ref: ./examples/updatePython2Package.json
    put:
      parameters:
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/AutomationAccountNameParameter
        - description: The name of python package.
          in: path
          name: packageName
          required: true
          schema:
            type: string
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../common/v1/definitions.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: ../../common/v1/definitions.json#/definitions/ErrorResponse
          description: Automation error response describing why the operation failed.
      tags:
        - Python2Package
      externalDocs:
        url: 'http://aka.ms/azureautomationsdk/moduleoperations'
      description: Create or Update the python 2 package identified by package name.
      operationId: Python2Package_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PythonPackageCreateParameters'
        description: The create or update parameters for python package.
        required: true
      x-ms-examples:
        Create or update a python 2 package:
          $ref: ./examples/createOrUpdatePython2Package.json
components:
  schemas:
    Activity:
      description: Definition of the activity.
      properties:
        id:
          description: Gets or sets the id of the resource.
          type: string
        name:
          description: Gets the name of the activity.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/ActivityProperties'
          description: Gets or sets the properties of the activity.
          x-ms-client-flatten: true
      type: object
    ActivityListResult:
      description: The response model for the list activity operation.
      properties:
        nextLink:
          description: Gets or sets the next link.
          type: string
        value:
          description: Gets or sets a list of activities.
          items:
            $ref: '#/components/schemas/Activity'
          type: array
      type: object
    ActivityOutputType:
      description: Definition of the activity output type.
      properties:
        name:
          description: Gets or sets the name of the activity output type.
          type: string
        type:
          description: Gets or sets the type of the activity output type.
          type: string
      type: object
    ActivityParameter:
      description: Definition of the activity parameter.
      properties:
        description:
          description: Gets or sets the description of the activity parameter.
          type: string
        isDynamic:
          description: >-
            Gets or sets a Boolean value that indicates true if the parameter is
            dynamic.
          type: boolean
        isMandatory:
          description: >-
            Gets or sets a Boolean value that indicates true if the parameter is
            required. If the value is false, the parameter is optional.
          type: boolean
        name:
          description: Gets or sets the name of the activity parameter.
          type: string
        position:
          description: Gets or sets the position of the activity parameter.
          format: int64
          type: integer
        type:
          description: Gets or sets the type of the activity parameter.
          type: string
        validationSet:
          description: Gets or sets the validation set of activity parameter.
          items:
            $ref: '#/components/schemas/ActivityParameterValidationSet'
          type: array
        valueFromPipeline:
          description: >-
            Gets or sets a Boolean value that indicates true if the parameter
            can take values from the incoming pipeline objects. This setting is
            used if the cmdlet must access the complete input object. false
            indicates that the parameter cannot take values from the complete
            input object.
          type: boolean
        valueFromPipelineByPropertyName:
          description: >-
            Gets or sets a Boolean value that indicates true if the parameter
            can be filled from a property of the incoming pipeline object that
            has the same name as this parameter. false indicates that the
            parameter cannot be filled from the incoming pipeline object
            property with the same name. 
          type: boolean
        valueFromRemainingArguments:
          description: >-
            Gets or sets a Boolean value that indicates true if the cmdlet
            parameter accepts all the remaining command-line arguments that are
            associated with this parameter in the form of an array. false if the
            cmdlet parameter does not accept all the remaining argument values.
          type: boolean
      type: object
    ActivityParameterSet:
      description: Definition of the activity parameter set.
      properties:
        parameters:
          description: Gets or sets the parameters of the activity parameter set.
          items:
            $ref: '#/components/schemas/ActivityParameter'
          type: array
        name:
          description: Gets or sets the name of the activity parameter set.
          type: string
      type: object
    ActivityParameterValidationSet:
      description: Definition of the activity parameter validation set.
      properties:
        memberValue:
          description: >-
            Gets or sets the name of the activity parameter validation set
            member.
          type: string
      type: object
    ActivityProperties:
      description: Properties of the activity.
      properties:
        creationTime:
          description: Gets or sets the creation time.
          format: date-time
          nullable: false
          type: string
        definition:
          description: Gets or sets the user name of the activity.
          type: string
        description:
          description: Gets or sets the description.
          type: string
        lastModifiedTime:
          description: Gets or sets the last modified time.
          format: date-time
          nullable: false
          type: string
        outputTypes:
          description: Gets or sets the output types of the activity.
          items:
            $ref: '#/components/schemas/ActivityOutputType'
          type: array
        parameterSets:
          description: Gets or sets the parameter sets of the activity.
          items:
            $ref: '#/components/schemas/ActivityParameterSet'
          type: array
      type: object
    ContentHash:
      description: Definition of the runbook property type.
      properties:
        algorithm:
          description: Gets or sets the content hash algorithm used to hash the content.
          type: string
        value:
          description: Gets or sets expected hash value of the content.
          type: string
      required:
        - algorithm
        - value
      type: object
    ContentLink:
      description: Definition of the content link.
      properties:
        contentHash:
          $ref: '#/components/schemas/ContentHash'
          description: Gets or sets the hash.
        uri:
          description: Gets or sets the uri of the runbook content.
          type: string
        version:
          description: Gets or sets the version of the content.
          type: string
      type: object
    Module:
      allOf:
        - $ref: ../../common/v1/definitions.json#/definitions/TrackedResource
      description: Definition of the module type.
      properties:
        etag:
          description: Gets or sets the etag of the resource.
          type: string
        properties:
          $ref: '#/components/schemas/ModuleProperties'
          description: Gets or sets the module properties.
          x-ms-client-flatten: true
      type: object
    ModuleErrorInfo:
      description: Definition of the module error info type.
      properties:
        code:
          description: Gets or sets the error code.
          type: string
        message:
          description: Gets or sets the error message.
          type: string
      type: object
    ModuleListResult:
      description: The response model for the list module operation.
      properties:
        nextLink:
          description: Gets or sets the next link.
          type: string
        value:
          description: Gets or sets a list of modules.
          items:
            $ref: '#/components/schemas/Module'
          type: array
      type: object
    ModuleProperties:
      description: Definition of the module property type.
      properties:
        activityCount:
          description: Gets or sets the activity count of the module.
          format: int32
          type: integer
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the contentLink of the module.
        creationTime:
          description: Gets or sets the creation time.
          format: date-time
          nullable: false
          type: string
        description:
          description: Gets or sets the description.
          type: string
        error:
          $ref: '#/components/schemas/ModuleErrorInfo'
          description: Gets or sets the error info of the module.
        isComposite:
          description: 'Gets or sets type of module, if its composite or not.'
          type: boolean
        isGlobal:
          description: Gets or sets the isGlobal flag of the module.
          type: boolean
        lastModifiedTime:
          description: Gets or sets the last modified time.
          format: date-time
          nullable: false
          type: string
        provisioningState:
          description: Gets or sets the provisioning state of the module.
          enum:
            - Created
            - Creating
            - StartingImportModuleRunbook
            - RunningImportModuleRunbook
            - ContentRetrieved
            - ContentDownloaded
            - ContentValidated
            - ConnectionTypeImported
            - ContentStored
            - ModuleDataStored
            - ActivitiesStored
            - ModuleImportRunbookComplete
            - Succeeded
            - Failed
            - Cancelled
            - Updating
          type: string
          x-ms-enum:
            modelAsString: false
            name: ModuleProvisioningState
        sizeInBytes:
          description: Gets or sets the size in bytes of the module.
          format: int64
          type: integer
        version:
          description: Gets or sets the version of the module.
          type: string
      type: object
    PythonPackageCreateParameters:
      description: The parameters supplied to the create or update module operation.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
          type: object
        properties:
          $ref: '#/components/schemas/PythonPackageCreateProperties'
          description: Gets or sets the module create properties.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    PythonPackageCreateProperties:
      description: The parameters supplied to the create or update module properties.
      properties:
        contentLink:
          $ref: '#/components/schemas/ContentLink'
          description: Gets or sets the module content link.
      required:
        - contentLink
      type: object
    PythonPackageUpdateParameters:
      description: The parameters supplied to the update module operation.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Gets or sets the tags attached to the resource.
          type: object
      type: object
    TypeField:
      description: Information about a field of a type.
      properties:
        name:
          description: Gets or sets the name of the field.
          type: string
        type:
          description: Gets or sets the type of the field.
          type: string
      type: object
    TypeFieldListResult:
      description: The response model for the list fields operation.
      properties:
        value:
          description: Gets or sets a list of fields.
          items:
            $ref: '#/components/schemas/TypeField'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

