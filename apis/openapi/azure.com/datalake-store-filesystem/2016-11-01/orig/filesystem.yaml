openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Store filesystem client.
  title: DataLakeStoreFileSystemManagementClient
  version: '2016-11-01'
  x-ms-code-generation-settings:
    internalConstructors: true
servers:
  - url: '{accountName}.{adlsFileSystemDnsSuffix}'
    variables:
      accountName:
        default: ''
        description: The Azure Data Lake Store account to execute filesystem operations on.
        x-ms-skip-url-encoding: true
      adlsFileSystemDnsSuffix:
        description: Gets the URI used as the base for all cloud service requests.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  '/WebHdfsExt/{path}':
    post:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file to which to
            append using concurrent append.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            Indicates the concurrent append call should create the file if it
            doesn't exist or just open the existing file for append
          in: query
          name: appendMode
          required: false
          schema:
            enum:
              - autocreate
            type: string
          x-ms-enum:
            modelAsString: false
            name: AppendModeType
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - CONCURRENTAPPEND
            type: string
        - description: >-
            Indicates the data being sent to the server is being streamed in
            chunks.
          in: header
          name: Transfer-Encoding
          required: true
          schema:
            enum:
              - chunked
            type: string
        - description: >-
            Optionally indicates what to do after completion of the concurrent
            append. DATA indicates that more data will be sent immediately by
            the client, the file handle should remain open/locked, and file
            metadata (including file length, last modified time) should NOT get
            updated. METADATA indicates that more data will be sent immediately
            by the client, the file handle should remain open/locked, and file
            metadata should get updated. CLOSE indicates that the client is done
            sending data, the file handle should be closed/unlocked, and file
            metadata should get updated.
          in: query
          name: syncFlag
          required: false
          schema:
            default: DATA
            enum:
              - DATA
              - METADATA
              - CLOSE
            type: string
          x-ms-enum:
            modelAsString: false
            name: SyncFlag
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Appends to the specified file, optionally first creating the file if it
        does not yet exist. This method supports multiple concurrent appends to
        the file. NOTE: The target must not contain data added by Create or
        normal (serial) Append. ConcurrentAppend and Append cannot be used
        interchangeably; once a target file has been modified using either of
        these append options, the other append option cannot be used on the
        target file. ConcurrentAppend does not guarantee order and can result in
        duplicated data landing in the target file.
      operationId: FileSystem_ConcurrentAppend
      requestBody:
        content:
          application/json:
            schema:
              format: file
              type: object
          application/octet-stream:
            schema:
              format: file
              type: object
        description: >-
          The file contents to include when appending to the file.  The maximum
          content size is 4MB.  For content larger than 4MB you must append the
          content in 4MB chunks.
        required: true
      x-ms-examples:
        'Appends to the specified file, optionally first creating the file if it does not yet exist. This method supports multiple concurrent appends to the file. NOTE: The target must not contain data added by Create or normal (serial) Append. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file. ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file':
          $ref: ./examples/FileSystem_ConcurrentAppend.json
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file on which to
            set or remove the expiration time.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            Indicates the type of expiration to use for the file: 1.
            NeverExpire: ExpireTime is ignored. 2. RelativeToNow: ExpireTime is
            an integer in milliseconds representing the expiration date relative
            to when file expiration is updated. 3. RelativeToCreationDate:
            ExpireTime is an integer in milliseconds representing the expiration
            date relative to file creation. 4. Absolute: ExpireTime is an
            integer in milliseconds, as a Unix timestamp relative to 1/1/1970
            00:00:00.
          in: query
          name: expiryOption
          required: true
          schema:
            enum:
              - NeverExpire
              - RelativeToNow
              - RelativeToCreationDate
              - Absolute
            type: string
          x-ms-enum:
            modelAsString: false
            name: ExpiryOptionType
        - description: >-
            The time that the file will expire, corresponding to the
            ExpiryOption that was set.
          in: query
          name: expireTime
          required: false
          schema:
            format: int64
            type: integer
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - SETEXPIRY
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully set the expiration time on the specified file.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Sets or removes the expiration time on the specified file. This
        operation can only be executed against files. Folders are not supported.
      operationId: FileSystem_SetFileExpiry
      x-ms-examples:
        Sets or removes the expiration time on the specified file. This operation can only be executed against files. Folders are not supported:
          $ref: ./examples/FileSystem_SetFileExpiry.json
  '/webhdfs/v1/{path}':
    get:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory for which to check access.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            File system operation read/write/execute in string form, matching
            regex pattern '[rwx-]{3}'
          in: query
          name: fsaction
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - CHECKACCESS
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Checks if the specified access is available at the given path.
      operationId: FileSystem_CheckAccess
      x-ms-examples:
        Checks if the specified access is available at the given path:
          $ref: ./examples/FileSystem_CheckAccess.json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    adlsFilesystemDnsSuffixInPath:
      description: Gets the URI used as the base for all cloud service requests.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    FileSystem_ConcurrentAppendStreamcontents:
      content:
        application/json:
          schema:
            format: file
            type: object
        application/octet-stream:
          schema:
            format: file
            type: object
      description: >-
        The file contents to include when appending to the file.  The maximum
        content size is 4MB.  For content larger than 4MB you must append the
        content in 4MB chunks.
      required: true
  schemas:
    AclStatus:
      description: Data Lake Store file or directory Access Control List information.
      properties:
        entries:
          description: the list of ACLSpec entries on a file or directory.
          items:
            type: string
          type: array
        group:
          description: 'the group owner, an AAD Object ID.'
          type: string
        owner:
          description: 'the user owner, an AAD Object ID.'
          type: string
        permission:
          description: >-
            The octal representation of the unnamed user, mask and other
            permissions.
          type: string
        stickyBit:
          description: the indicator of whether the sticky bit is on or off.
          readOnly: true
          type: boolean
      type: object
    AclStatusResult:
      description: Data Lake Store file or directory Access Control List information.
      properties:
        aclStatus:
          $ref: '#/components/schemas/AclStatus'
          description: the AclStatus object for a given file or directory.
      type: object
    AdlsAccessControlException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating that access is denied due to
        insufficient permissions. Thrown when a 403 error response code is
        returned (forbidden).
      x-ms-discriminator-value: AccessControlException
    AdlsBadOffsetException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating the append or read is from a bad
        offset. Thrown when a 400 error response code is returned for append and
        open operations (Bad request).
      x-ms-discriminator-value: BadOffsetException
    AdlsError:
      description: >-
        Data Lake Store filesystem error containing a specific WebHDFS
        exception.
      properties:
        remoteException:
          $ref: '#/components/schemas/AdlsRemoteException'
          description: the object representing the actual WebHDFS exception being returned.
          readOnly: true
      type: object
    AdlsFileAlreadyExistsException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating the file or folder already exists.
        Thrown when a 403 error response code is returned (forbidden).
      x-ms-discriminator-value: FileAlreadyExistsException
    AdlsFileNotFoundException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating the file or folder could not be
        found. Thrown when a 404 error response code is returned (not found).
      x-ms-discriminator-value: FileNotFoundException
    AdlsIOException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating there was an IO (read or write)
        error. Thrown when a 403 error response code is returned (forbidden).
      x-ms-discriminator-value: IOException
    AdlsIllegalArgumentException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating that one more arguments is
        incorrect. Thrown when a 400 error response code is returned (bad
        request).
      x-ms-discriminator-value: IllegalArgumentException
    AdlsRemoteException:
      description: >-
        Data Lake Store filesystem exception based on the WebHDFS definition for
        RemoteExceptions. This is a WebHDFS 'catch all' exception
      discriminator:
        propertyName: exception
      properties:
        exception:
          description: >-
            the class name of the exception thrown, such as
            'IllegalArgumentException'.
          type: string
        javaClassName:
          description: >-
            the full class package name for the exception thrown, such as
            'java.lang.IllegalArgumentException'.
          readOnly: true
          type: string
        message:
          description: >-
            the message associated with the exception that was thrown, such as
            'Invalid value for webhdfs parameter "permission":...'.
          readOnly: true
          type: string
      required:
        - exception
      type: object
    AdlsRuntimeException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown when an unexpected error occurs during an
        operation. Thrown when a 500 error response code is returned (Internal
        server error).
      x-ms-discriminator-value: RuntimeException
    AdlsSecurityException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating that access is denied. Thrown when
        a 401 error response code is returned (Unauthorized).
      x-ms-discriminator-value: SecurityException
    AdlsThrottledException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating that the request is being
        throttled. Reducing the number of requests or request size helps to
        mitigate this error.
      x-ms-discriminator-value: ThrottledException
    AdlsUnsupportedOperationException:
      allOf:
        - $ref: '#/components/schemas/AdlsRemoteException'
      description: >-
        A WebHDFS exception thrown indicating that the requested operation is
        not supported. Thrown when a 400 error response code is returned (bad
        request).
      x-ms-discriminator-value: UnsupportedOperationException
    ContentSummary:
      description: Data Lake Store content summary information
      properties:
        directoryCount:
          description: the number of directories.
          format: int64
          readOnly: true
          type: integer
        fileCount:
          description: the number of files.
          format: int64
          readOnly: true
          type: integer
        length:
          description: the number of bytes used by the content.
          format: int64
          readOnly: true
          type: integer
        spaceConsumed:
          description: the disk space consumed by the content.
          format: int64
          readOnly: true
          type: integer
      type: object
    ContentSummaryResult:
      description: Data Lake Store filesystem content summary information response.
      properties:
        contentSummary:
          $ref: '#/components/schemas/ContentSummary'
          description: the content summary for the specified path
          readOnly: true
      type: object
    FileOperationResult:
      description: The result of the request or operation.
      properties:
        boolean:
          description: the result of the operation or request.
          readOnly: true
          type: boolean
          x-ms-client-name: operationResult
      type: object
    FileStatusProperties:
      description: Data Lake Store file or directory information.
      properties:
        accessTime:
          description: the last access time as ticks since the epoch.
          format: int64
          readOnly: true
          type: integer
        aclBit:
          description: 'flag to indicate if extended acls are enabled '
          readOnly: true
          type: boolean
        blockSize:
          description: the block size for the file.
          format: int64
          readOnly: true
          type: integer
        group:
          description: the group owner.
          readOnly: true
          type: string
        length:
          description: the number of bytes in a file.
          format: int64
          readOnly: true
          type: integer
        modificationTime:
          description: the modification time as ticks since the epoch.
          format: int64
          readOnly: true
          type: integer
        msExpirationTime:
          description: >-
            Gets the expiration time, if any, as ticks since the epoch. If the
            value is 0 or DateTime.MaxValue there is no expiration.
          format: int64
          readOnly: true
          type: integer
          x-ms-client-name: expirationTime
        owner:
          description: the user who is the owner.
          readOnly: true
          type: string
        pathSuffix:
          description: the path suffix.
          readOnly: true
          type: string
        permission:
          description: the permission represented as an string.
          readOnly: true
          type: string
        type:
          description: the type of the path object.
          enum:
            - FILE
            - DIRECTORY
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FileType
      type: object
    FileStatusResult:
      description: Data Lake Store filesystem file status information response.
      properties:
        fileStatus:
          $ref: '#/components/schemas/FileStatusProperties'
          description: the file status object associated with the specified path.
          readOnly: true
      type: object
    FileStatuses:
      description: Data Lake Store file status list information.
      properties:
        fileStatus:
          description: the object containing the list of properties of the files.
          items:
            $ref: '#/components/schemas/FileStatusProperties'
          readOnly: true
          type: array
      type: object
    FileStatusesResult:
      description: Data Lake Store filesystem file status list information response.
      properties:
        fileStatuses:
          $ref: '#/components/schemas/FileStatuses'
          description: the object representing the list of file statuses.
          readOnly: true
      type: object
x-ms-paths:
  '/webhdfs/v1/{path}?op=APPEND':
    post:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file to which to
            append.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The optional offset in the stream to begin the append operation.
            Default is to append at the end of the stream.
          in: query
          name: offset
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Optionally indicates what to do after completion of the concurrent
            append. DATA indicates that more data will be sent immediately by
            the client, the file handle should remain open/locked, and file
            metadata (including file length, last modified time) should NOT get
            updated. METADATA indicates that more data will be sent immediately
            by the client, the file handle should remain open/locked, and file
            metadata should get updated. CLOSE indicates that the client is done
            sending data, the file handle should be closed/unlocked, and file
            metadata should get updated.
          in: query
          name: syncFlag
          required: false
          schema:
            default: CLOSE
            enum:
              - DATA
              - METADATA
              - CLOSE
            type: string
          x-ms-enum:
            modelAsString: false
            name: SyncFlag
        - description: >-
            Optional unique GUID per file to ensure single writer semantics,
            meaning that only clients that append to the file with the same
            leaseId will be allowed to do so.
          in: query
          name: leaseId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            Optional unique GUID per file indicating all the appends with the
            same fileSessionId are from the same client and same session. This
            will give a performance benefit when syncFlag is DATA or METADATA.
          in: query
          name: fileSessionId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            Flag to skip redirection. When append=false or not specified, the
            request is redirected. Submit another HTTP PUT request using the URL
            in the Location header with the file data to be written. When
            append=true, this redirection is skipped.
          in: query
          name: append
          required: true
          schema:
            enum:
              - 'true'
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - APPEND
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: "Used for serial appends to the specified file.\_NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file."
      operationId: FileSystem_Append
      requestBody:
        content:
          application/json:
            schema:
              format: file
              type: object
          application/octet-stream:
            schema:
              format: file
              type: object
        description: >-
          The file contents to include when appending to the file.  The maximum
          content size is 4MB.  For content larger than 4MB you must append the
          content in 4MB chunks.
        required: true
      x-ms-examples:
        "Used for serial appends to the specified file.\_NOTE: The target must not contain data added by ConcurrentAppend. ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file":
          $ref: ./examples/FileSystem_Append.json
  '/webhdfs/v1/{path}?op=CONCAT':
    post:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            A list of comma separated Data Lake Store paths (starting with '/')
            of the files to concatenate, in the order in which they should be
            concatenated.
          in: query
          name: sources
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - CONCAT
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Concatenates the list of source files into the destination file,
        removing all source files upon success.
      operationId: FileSystem_Concat
      x-ms-examples:
        'Concatenates the list of source files into the destination file, removing all source files upon success':
          $ref: ./examples/FileSystem_Concat.json
  '/webhdfs/v1/{path}?op=CREATE':
    put:
      parameters:
        - description: The Data Lake Store path (starting with '/') of the file to create.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The indication of if the file should be overwritten.
          in: query
          name: overwrite
          required: false
          schema:
            type: boolean
        - description: >-
            Optionally indicates what to do after completion of the create. DATA
            indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata (including
            file length, last modified time) should NOT get updated. METADATA
            indicates that more data will be sent immediately by the client, the
            file handle should remain open/locked, and file metadata should get
            updated. CLOSE indicates that the client is done sending data, the
            file handle should be closed/unlocked, and file metadata should get
            updated.
          in: query
          name: syncFlag
          required: false
          schema:
            default: CLOSE
            enum:
              - DATA
              - METADATA
              - CLOSE
            type: string
          x-ms-enum:
            modelAsString: false
            name: SyncFlag
        - description: >-
            Optional unique GUID per file to ensure single writer semantics,
            meaning that only clients that append to the file with the same
            leaseId will be allowed to do so.
          in: query
          name: leaseId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            The octal representation of the unnamed user, mask and other
            permissions that should be set for the file when created. If not
            specified, it inherits these from the container.
          in: query
          name: permission
          schema:
            format: int32
            type: integer
        - description: >-
            Flag to skip redirection. When write=false or not specified, the
            request is redirected. Submit another HTTP PUT request using the URL
            in the Location header with the file data to be written. When
            write=true, this redirection is skipped.
          in: query
          name: write
          required: true
          schema:
            enum:
              - 'true'
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - CREATE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: CREATED
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Creates a file with optionally specified content. NOTE: If content is
        provided, the resulting file cannot be modified using ConcurrentAppend.
      operationId: FileSystem_Create
      requestBody:
        content:
          application/json:
            schema:
              format: file
              type: object
          application/octet-stream:
            schema:
              format: file
              type: object
        description: >-
          The file contents to include when creating the file. This parameter is
          optional, resulting in an empty file if not specified.  The maximum
          content size is 4MB.  For content larger than 4MB you must append the
          content in 4MB chunks.
      x-ms-examples:
        'Creates a file with optionally specified content. NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend':
          $ref: ./examples/FileSystem_Create.json
  '/webhdfs/v1/{path}?op=DELETE':
    delete:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory to delete.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The optional switch indicating if the delete should be recursive
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - DELETE
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileOperationResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: 'Deletes the requested file or directory, optionally recursively.'
      operationId: FileSystem_Delete
      x-ms-examples:
        'Deletes the requested file or directory, optionally recursively':
          $ref: ./examples/FileSystem_Delete.json
  '/webhdfs/v1/{path}?op=GETACLSTATUS':
    get:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory for which to get the ACL.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            An optional switch to return friendly names in place of object ID
            for ACL entries. tooId=false returns friendly names instead of the
            AAD Object ID. Default value is true, returning AAD object IDs.
          in: query
          name: tooId
          required: false
          schema:
            type: boolean
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - GETACLSTATUS
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclStatusResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Gets Access Control List (ACL) entries for the specified file or
        directory.
      operationId: FileSystem_GetAclStatus
      x-ms-examples:
        Gets Access Control List (ACL) entries for the specified file or directory:
          $ref: ./examples/FileSystem_GetAclStatus.json
  '/webhdfs/v1/{path}?op=GETCONTENTSUMMARY':
    get:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file for which
            to retrieve the summary.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - GETCONTENTSUMMARY
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSummaryResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Gets the file content summary object specified by the file path.
      operationId: FileSystem_GetContentSummary
      x-ms-examples:
        Gets the file content summary object specified by the file path:
          $ref: ./examples/FileSystem_GetContentSummary.json
  '/webhdfs/v1/{path}?op=GETFILESTATUS':
    get:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory for which to retrieve the status.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            An optional switch to return friendly names in place of owner and
            group. tooId=false returns friendly names instead of the AAD Object
            ID. Default value is true, returning AAD object IDs.
          in: query
          name: tooId
          required: false
          schema:
            type: boolean
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - GETFILESTATUS
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatusResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Get the file status object specified by the file path.
      operationId: FileSystem_GetFileStatus
      x-ms-examples:
        Get the file status object specified by the file path:
          $ref: ./examples/FileSystem_GetFileStatus.json
  '/webhdfs/v1/{path}?op=LISTSTATUS':
    get:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the directory to
            list.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: Gets or sets the number of items to return. Optional.
          in: query
          name: listSize
          required: false
          schema:
            format: int32
            type: integer
        - description: >-
            Gets or sets the item or lexicographical index after which to begin
            returning results. For example, a file list of 'a','b','d' and
            listAfter='b' will return 'd', and a listAfter='c' will also return
            'd'. Optional.
          in: query
          name: listAfter
          required: false
          schema:
            type: string
        - description: >-
            Gets or sets the item or lexicographical index before which to begin
            returning results. For example, a file list of 'a','b','d' and
            listBefore='d' will return 'a','b', and a listBefore='c' will also
            return 'a','b'. Optional.
          in: query
          name: listBefore
          required: false
          schema:
            type: string
        - description: >-
            An optional switch to return friendly names in place of owner and
            group. tooId=false returns friendly names instead of the AAD Object
            ID. Default value is true, returning AAD object IDs.
          in: query
          name: tooId
          required: false
          schema:
            type: boolean
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - LISTSTATUS
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatusesResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Get the list of file status objects specified by the file path, with
        optional pagination parameters
      operationId: FileSystem_ListFileStatus
      x-ms-examples:
        'Get the list of file status objects specified by the file path, with optional pagination parameters':
          $ref: ./examples/FileSystem_ListFileStatus.json
  '/webhdfs/v1/{path}?op=MKDIRS':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the directory to
            create.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            Optional octal permission with which the directory should be
            created.
          in: query
          name: permission
          required: false
          schema:
            format: int32
            type: integer
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - MKDIRS
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileOperationResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Creates a directory.
      operationId: FileSystem_Mkdirs
      x-ms-examples:
        Creates a directory:
          $ref: ./examples/FileSystem_Mkdirs.json
  '/webhdfs/v1/{path}?op=MODIFYACLENTRIES':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being modified.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The ACL specification included in ACL modification operations in the
            format '[default:]user|group|other::r|-w|-x|-'
          in: query
          name: aclspec
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - MODIFYACLENTRIES
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Modifies existing Access Control List (ACL) entries on a file or folder.
      operationId: FileSystem_ModifyAclEntries
      x-ms-examples:
        Modifies existing Access Control List (ACL) entries on a file or folder:
          $ref: ./examples/FileSystem_ModifyAclEntries.json
  '/webhdfs/v1/{path}?op=MSCONCAT':
    post:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the destination file
            resulting from the concatenation.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            Indicates that as an optimization instead of deleting each
            individual source stream, delete the source stream folder if all
            streams are in the same folder instead. This results in a
            substantial performance improvement when the only streams in the
            folder are part of the concatenation operation. WARNING: This
            includes the deletion of any other files that are not source files.
            Only set this to true when source files are the only files in the
            source directory.
          in: query
          name: deleteSourceDirectory
          required: false
          schema:
            type: boolean
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - MSCONCAT
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Concatenates the list of source files into the destination file,
        deleting all source files upon success. This method accepts more source
        file paths than the Concat method. This method and the parameters it
        accepts are subject to change for usability in an upcoming version.
      operationId: FileSystem_MsConcat
      requestBody:
        content:
          application/json:
            schema:
              format: file
              type: object
          application/octet-stream:
            schema:
              format: file
              type: object
        description: >-
          A list of Data Lake Store paths (starting with '/') of the source
          files. Must be a comma-separated path list in the format:
          sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
        required: true
      x-ms-examples:
        'Concatenates the list of source files into the destination file, deleting all source files upon success. This method accepts more source file paths than the Concat method. This method and the parameters it accepts are subject to change for usability in an upcoming version':
          $ref: ./examples/FileSystem_MsConcat.json
  '/webhdfs/v1/{path}?op=OPEN':
    get:
      parameters:
        - description: The Data Lake Store path (starting with '/') of the file to open.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The number of bytes that the server will attempt to retrieve. It
            will retrieve <= length bytes.
          in: query
          name: length
          required: false
          schema:
            format: int64
            type: integer
        - description: The byte offset to start reading data from.
          in: query
          name: offset
          required: false
          schema:
            format: int64
            type: integer
        - description: >-
            Optional unique GUID per file indicating all the reads with the same
            fileSessionId are from the same client and same session. This will
            give a performance benefit.
          in: query
          name: fileSessionId
          required: false
          schema:
            format: uuid
            type: string
        - description: >-
            Flag to skip redirection. When read=false or not specified, the
            request is redirected. Submit another HTTP PUT request using the URL
            in the Location header with the file data to be read. When
            read=true, this redirection is skipped.
          in: query
          name: read
          required: true
          schema:
            enum:
              - 'true'
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - OPEN
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json: {}
            application/octet-stream: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Opens and reads from the specified file.
      operationId: FileSystem_Open
      x-ms-examples:
        Opens and reads from the specified file:
          $ref: ./examples/FileSystem_Open.json
  '/webhdfs/v1/{path}?op=REMOVEACL':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being removed.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - REMOVEACL
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully removed the Access Control List on the specified file
            or directory.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Removes the existing Access Control List (ACL) of the specified file or
        directory.
      operationId: FileSystem_RemoveAcl
      x-ms-examples:
        Removes the existing Access Control List (ACL) of the specified file or directory:
          $ref: ./examples/FileSystem_RemoveAcl.json
  '/webhdfs/v1/{path}?op=REMOVEACLENTRIES':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory with the ACL being removed.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The ACL spec included in ACL removal operations in the format
            '[default:]user|group|other'
          in: query
          name: aclspec
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - REMOVEACLENTRIES
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Removes existing Access Control List (ACL) entries for a file or folder.
      operationId: FileSystem_RemoveAclEntries
      x-ms-examples:
        Removes existing Access Control List (ACL) entries for a file or folder:
          $ref: ./examples/FileSystem_RemoveAclEntries.json
  '/webhdfs/v1/{path}?op=REMOVEDEFAULTACL':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the directory with
            the default ACL being removed.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - REMOVEDEFAULTACL
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully Removed the Default Access Control List on the
            specified directory.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: >-
        Removes the existing Default Access Control List (ACL) of the specified
        directory.
      operationId: FileSystem_RemoveDefaultAcl
      x-ms-examples:
        Removes the existing Default Access Control List (ACL) of the specified directory:
          $ref: ./examples/FileSystem_RemoveDefaultAcl.json
  '/webhdfs/v1/{path}?op=RENAME':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory to move/rename.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: The path to move/rename the file or folder to
          in: query
          name: destination
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - RENAME
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileOperationResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Rename a file or directory.
      operationId: FileSystem_Rename
      x-ms-examples:
        Rename a file or directory:
          $ref: ./examples/FileSystem_Rename.json
  '/webhdfs/v1/{path}?op=SETACL':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory on which to set the ACL.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The ACL spec included in ACL creation operations in the format
            '[default:]user|group|other::r|-w|-x|-'
          in: query
          name: aclspec
          required: true
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - SETACL
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Sets the Access Control List (ACL) for a file or folder.
      operationId: FileSystem_SetAcl
      x-ms-examples:
        Sets the Access Control List (ACL) for a file or folder:
          $ref: ./examples/FileSystem_SetAcl.json
  '/webhdfs/v1/{path}?op=SETOWNER':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory for which to set the owner.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            The AAD Object ID of the user owner of the file or directory. If
            empty, the property will remain unchanged.
          in: query
          name: owner
          required: false
          schema:
            type: string
        - description: >-
            The AAD Object ID of the group owner of the file or directory. If
            empty, the property will remain unchanged.
          in: query
          name: group
          required: false
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - SETOWNER
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Sets the owner of a file or directory.
      operationId: FileSystem_SetOwner
      x-ms-examples:
        Sets the owner of a file or directory:
          $ref: ./examples/FileSystem_SetOwner.json
  '/webhdfs/v1/{path}?op=SETPERMISSION':
    put:
      parameters:
        - description: >-
            The Data Lake Store path (starting with '/') of the file or
            directory for which to set the permission.
          in: path
          name: path
          required: true
          schema:
            type: string
        - description: >-
            A string representation of the permission (i.e 'rwx'). If empty,
            this property remains unchanged.
          in: query
          name: permission
          required: false
          schema:
            type: string
        - description: The constant value for the operation.
          in: query
          name: op
          required: true
          schema:
            enum:
              - SETPERMISSION
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdlsError'
          description: An unexpected error from the server.
      tags:
        - FileSystem
      description: Sets the permission of the file or folder.
      operationId: FileSystem_SetPermission
      x-ms-examples:
        Sets the owner of a file or directory:
          $ref: ./examples/FileSystem_SetPermission.json

