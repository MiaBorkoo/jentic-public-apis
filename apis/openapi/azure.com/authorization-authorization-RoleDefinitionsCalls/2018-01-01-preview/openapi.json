{
  "openapi": "3.0.0",
  "info": {
    "description": "Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations allow you to manage role definitions. A role definition describes the set of actions that can be performed on resources.",
    "title": "AuthorizationManagementClient",
    "version": "2018-01-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/authorization/resource-manager/Microsoft.Authorization/preview/2018-01-01-preview/authorization-RoleDefinitionsCalls.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Authorization/permissions": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGetResult"
                }
              }
            },
            "description": "OK - Returns an array of permissions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Permissions"
        ],
        "description": "Gets all permissions the caller has for a resource group.",
        "operationId": "Permissions_ListForResourceGroup",
        "x-ms-examples": {
          "List permissions for resource group": {
            "$ref": "./examples/GetPermissions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}/providers/Microsoft.Authorization/permissions": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../2020-10-01-preview/common-types.json#/components/parameters/ResourceProviderNamespaceParameter"
          },
          {
            "allowReserved": true,
            "description": "The parent resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "The resource type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The name of the resource to get the permissions for.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionGetResult"
                }
              }
            },
            "description": "OK - Returns an array of permissions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Permissions"
        ],
        "description": "Gets all permissions the caller has for a resource.",
        "operationId": "Permissions_ListForResource",
        "x-ms-examples": {
          "List permissions for resource": {
            "$ref": "./examples/GetResourcePermissions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role definition.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The filter to apply on the operation. Use atScopeAndBelow filter to search below the given scope as well.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinitionListResult"
                }
              }
            },
            "description": "OK - Returns an array of role definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleDefinitions"
        ],
        "description": "Get all role definitions that are applicable at scope and above.",
        "operationId": "RoleDefinitions_List",
        "x-ms-examples": {
          "List role definition for scope": {
            "$ref": "./examples/GetRoleDefinitionAtScope.json"
          }
        },
        "x-ms-odata": "#/components/schemas/RoleDefinitionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}": {
      "delete": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role definition.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The ID of the role definition to delete.",
            "in": "path",
            "name": "roleDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinition"
                }
              }
            },
            "description": "OK - Returns information about the role definition."
          },
          "204": {
            "description": "Role definition already deleted or does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleDefinitions"
        ],
        "description": "Deletes a role definition.",
        "operationId": "RoleDefinitions_Delete",
        "x-ms-examples": {
          "Delete role definition": {
            "$ref": "./examples/DeleteRoleDefinition.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role definition.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The ID of the role definition.",
            "in": "path",
            "name": "roleDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinition"
                }
              }
            },
            "description": "OK - Returns information about the role definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleDefinitions"
        ],
        "description": "Get role definition by name (GUID).",
        "operationId": "RoleDefinitions_Get",
        "x-ms-examples": {
          "Get role definition by name": {
            "$ref": "./examples/GetRoleDefinitionByName.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The scope of the role definition.",
            "in": "path",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The ID of the role definition.",
            "in": "path",
            "name": "roleDefinitionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinition"
                }
              }
            },
            "description": "OK - Returns information about the role definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleDefinitions"
        ],
        "description": "Creates or updates a role definition.",
        "operationId": "RoleDefinitions_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleDefinition"
              }
            }
          },
          "description": "The values for the role definition.",
          "required": true
        },
        "x-ms-examples": {
          "Create role definition": {
            "$ref": "./examples/PutRoleDefinition.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "FilterParameter": {
        "description": "The filter to apply on the operation. Use $filter=atScope() to return all deny assignments at or above the scope. Use $filter=denyAssignmentName eq '{name}' to search deny assignments by name at specified scope. Use $filter=principalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. Use $filter=gdprExportPrincipalId eq '{id}' to return all deny assignments at, above and below the scope for the specified principal. This filter is different from the principalId filter as it returns not only those deny assignments that contain the specified principal is the Principals list but also those deny assignments that contain the specified principal is the ExcludePrincipals list. Additionally, when gdprExportPrincipalId filter is used, only the deny assignment name and description properties are returned.",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Permission": {
        "description": "Role definition permissions.",
        "properties": {
          "actions": {
            "description": "Allowed actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataActions": {
            "description": "Allowed Data actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notActions": {
            "description": "Denied actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notDataActions": {
            "description": "Denied Data actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PermissionGetResult": {
        "description": "Permissions information.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "An array of permissions.",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "type": "object"
      },
      "RoleDefinition": {
        "description": "Role definition.",
        "properties": {
          "id": {
            "description": "The role definition ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The role definition name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RoleDefinitionProperties",
            "description": "Role definition properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The role definition type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleDefinitionFilter": {
        "description": "Role Definitions filter",
        "properties": {
          "roleName": {
            "description": "Returns role definition with the specific name.",
            "type": "string"
          },
          "type": {
            "description": "Returns role definition with the specific type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleDefinitionListResult": {
        "description": "Role definition list operation result.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Role definition list.",
            "items": {
              "$ref": "#/components/schemas/RoleDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RoleDefinitionProperties": {
        "description": "Role definition properties.",
        "properties": {
          "assignableScopes": {
            "description": "Role definition assignable scopes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "The role definition description.",
            "type": "string"
          },
          "permissions": {
            "description": "Role definition permissions.",
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "roleName": {
            "description": "The role name.",
            "type": "string"
          },
          "type": {
            "description": "The role type.",
            "type": "string",
            "x-ms-client-name": "roleType"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-ms-paths": {
    "/{roleId}?disambiguation_dummy": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified role definition ID. Use the format, /subscriptions/{guid}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for subscription level role definitions, or /providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId} for tenant level role definitions.",
            "in": "path",
            "name": "roleId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDefinition"
                }
              }
            },
            "description": "OK - Returns information about the role definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RoleDefinitions"
        ],
        "description": "Gets a role definition by ID.",
        "operationId": "RoleDefinitions_GetById",
        "x-ms-examples": {
          "Get role definition by ID": {
            "$ref": "./examples/GetRoleDefinitionById.json"
          }
        }
      }
    }
  }
}