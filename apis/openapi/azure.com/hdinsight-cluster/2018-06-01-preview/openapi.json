{
  "openapi": "3.0.0",
  "info": {
    "description": "The HDInsight Management Client.",
    "title": "HDInsightManagementClient",
    "version": "2018-06-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/hdinsight/resource-manager/Microsoft.HDInsight/stable/2018-06-01-preview/cluster.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.HDInsight/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists all the HDInsight clusters under the subscription.",
        "operationId": "Clusters_List",
        "x-ms-examples": {
          "Get All Hadoop on Linux clusters": {
            "$ref": "./examples/GetLinuxHadoopAllClusters.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists the HDInsight clusters in a resource group.",
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "Get All Hadoop on Linux clusters in a resource group": {
            "$ref": "./examples/GetLinuxHadoopAllClustersInResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok response definition."
          },
          "202": {
            "description": "Accepted response definition."
          },
          "204": {
            "description": "No Content response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Deletes the specified HDInsight cluster.",
        "operationId": "Clusters_Delete",
        "x-ms-examples": {
          "Delete Hadoop on Linux cluster": {
            "$ref": "./examples/DeleteLinuxHadoopCluster.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Gets the specified cluster.",
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "Get Hadoop on Linux cluster": {
            "$ref": "./examples/GetLinuxHadoopCluster.json"
          },
          "Get Spark on Linux cluster": {
            "$ref": "./examples/GetLinuxSparkCluster.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Patch HDInsight cluster with the specified parameters.",
        "operationId": "Clusters_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterPatchParameters"
              }
            }
          },
          "description": "The cluster patch request.",
          "required": true
        },
        "x-ms-examples": {
          "Patch HDInsight Linux clusters": {
            "$ref": "./examples/PatchLinuxHadoopCluster.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Creates a new HDInsight cluster with the specified parameters.",
        "operationId": "Clusters_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterCreateParametersExtended"
              }
            }
          },
          "description": "The cluster create request.",
          "required": true
        },
        "x-ms-examples": {
          "Create HDInsight cluster with Autoscale configuration": {
            "$ref": "./examples/CreateHDInsightClusterWithAutoscaleConfig.json"
          },
          "Create Hadoop cluster with Azure Data Lake Storage Gen 2": {
            "$ref": "./examples/CreateLinuxHadoopAdlsGen2.json"
          },
          "Create Hadoop on Linux cluster with SSH password": {
            "$ref": "./examples/CreateLinuxHadoopSshPassword.json"
          },
          "Create Hadoop on Linux cluster with SSH public key": {
            "$ref": "./examples/CreateLinuxHadoopSshPublicKey.json"
          },
          "Create Kafka cluster with Kafka Rest Proxy": {
            "$ref": "./examples/CreateKafkaClusterWithKafkaRestProxy.json"
          },
          "Create Secure Hadoop cluster": {
            "$ref": "./examples/CreateLinuxHadoopSecureHadoop.json"
          },
          "Create Spark on Linux Cluster with SSH password": {
            "$ref": "./examples/CreateLinuxSparkSshPassword.json"
          },
          "Create cluster with TLS 1.2": {
            "$ref": "./examples/CreateHDInsightClusterWithTLS12.json"
          },
          "Create cluster with compute isolation properties": {
            "$ref": "./examples/CreateHDInsightClusterWithComputeIsolationProperties.json"
          },
          "Create cluster with encryption at host": {
            "$ref": "./examples/CreateHDInsightClusterWithEncryptionAtHost.json"
          },
          "Create cluster with encryption in transit": {
            "$ref": "./examples/CreateHDInsightClusterWithEncryptionInTransit.json"
          },
          "Create cluster with network properties": {
            "$ref": "./examples/CreateHDInsightClusterWithCustomNetworkProperties.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/azureasyncoperations/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationResult"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "The the async operation status.",
        "operationId": "Clusters_GetAzureAsyncOperationStatus",
        "x-ms-examples": {
          "Get Async Operation Status of Creating Cluster": {
            "$ref": "./examples/GetClusterCreatingAsyncOperationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/getGatewaySettings": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GatewaySettings"
                }
              }
            },
            "description": "OK response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Gets the gateway settings for the specified cluster.",
        "operationId": "Clusters_GetGatewaySettings",
        "x-ms-examples": {
          "Get HTTP settings": {
            "$ref": "./examples/HDI_Clusters_GetGatewaySettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/autoscale": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "description": "The constant value for the roleName",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "enum": [
                "workernode"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RoleName"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "202": {
            "description": "Accepted response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Updates the Autoscale Configuration for HDInsight cluster.",
        "operationId": "Clusters_UpdateAutoScaleConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoscaleConfigurationUpdateParameter"
              }
            }
          },
          "description": "The parameters for the update autoscale configuration operation.",
          "required": true
        },
        "x-ms-examples": {
          "Disable Autoscale for the HDInsight cluster": {
            "$ref": "./examples/DisableClusterAutoScale.json"
          },
          "Enable or Update Autoscale with the load based configuration for HDInsight cluster": {
            "$ref": "./examples/EnableOrUpdateAutoScaleWithLoadBasedConfiguration.json"
          },
          "Enable or Update Autoscale with the schedule based configuration for HDInsight cluster": {
            "$ref": "./examples/EnableOrUpdateAutoScaleWithScheduleBasedConfiguration.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/roles/{roleName}/resize": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "description": "The constant value for the roleName",
            "in": "path",
            "name": "roleName",
            "required": true,
            "schema": {
              "enum": [
                "workernode"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RoleName"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "202": {
            "description": "Accepted response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Resizes the specified HDInsight cluster to the specified size.",
        "operationId": "Clusters_Resize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterResizeParameters"
              }
            }
          },
          "description": "The parameters for the resize operation.",
          "required": true
        },
        "x-ms-examples": {
          "Resize the worker nodes for a Hadoop on Linux cluster": {
            "$ref": "./examples/ResizeLinuxHadoopCluster.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/rotatediskencryptionkey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "202": {
            "description": "Accepted response definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Rotate disk encryption key of the specified HDInsight cluster.",
        "operationId": "Clusters_RotateDiskEncryptionKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterDiskEncryptionParameters"
              }
            }
          },
          "description": "The parameters for the disk encryption operation.",
          "required": true
        },
        "x-ms-examples": {
          "Rotate disk encryption key of the specified HDInsight cluster": {
            "$ref": "./examples/RotateLinuxHadoopClusterDiskEncryptionKey.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateClusterIdentityCertificate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "202": {
            "description": "Accepted response definition"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Updates the cluster identity certificate.",
        "operationId": "Clusters_UpdateIdentityCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClusterIdentityCertificateParameters"
              }
            }
          },
          "description": "The cluster configurations.",
          "required": true
        },
        "x-ms-examples": {
          "Update cluster identity certificate": {
            "$ref": "./examples/HDI_Clusters_UpdateClusterIdentityCertificate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/updateGatewaySettings": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "202": {
            "description": "Accepted response definition"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./operations.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Configures the gateway settings on the specified cluster.",
        "operationId": "Clusters_UpdateGatewaySettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGatewaySettingsParameters"
              }
            }
          },
          "description": "The cluster configurations.",
          "required": true
        },
        "x-ms-examples": {
          "Enable HTTP connectivity": {
            "$ref": "./examples/HDI_Clusters_UpdateGatewaySettings_Enable.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The HDInsight client API Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ClusterNameParameter": {
        "description": "The name of the cluster.",
        "in": "path",
        "name": "clusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "OperationIdParameter": {
        "description": "The long running operation id.",
        "in": "path",
        "name": "operationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AsyncOperationResult": {
        "description": "The azure async operation response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Errors",
            "description": "The operation error information."
          },
          "status": {
            "description": "The async operation state.",
            "enum": [
              "InProgress",
              "Succeeded",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AsyncOperationState"
            }
          }
        },
        "type": "object"
      },
      "Autoscale": {
        "description": "The autoscale request parameters",
        "properties": {
          "capacity": {
            "$ref": "#/components/schemas/AutoscaleCapacity",
            "description": "Parameters for load-based autoscale"
          },
          "recurrence": {
            "$ref": "#/components/schemas/AutoscaleRecurrence",
            "description": "Parameters for schedule-based autoscale"
          }
        },
        "type": "object"
      },
      "AutoscaleCapacity": {
        "description": "The load-based autoscale request parameters",
        "properties": {
          "maxInstanceCount": {
            "description": "The maximum instance count of the cluster",
            "format": "int32",
            "type": "integer"
          },
          "minInstanceCount": {
            "description": "The minimum instance count of the cluster",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AutoscaleConfigurationUpdateParameter": {
        "description": "The autoscale configuration update parameter.",
        "properties": {
          "autoscale": {
            "$ref": "#/components/schemas/Autoscale",
            "description": "The autoscale configuration."
          }
        },
        "type": "object"
      },
      "AutoscaleRecurrence": {
        "description": "Schedule-based autoscale request parameters",
        "properties": {
          "schedule": {
            "description": "Array of schedule-based autoscale rules",
            "items": {
              "$ref": "#/components/schemas/AutoscaleSchedule"
            },
            "type": "array"
          },
          "timeZone": {
            "description": "The time zone for the autoscale schedule times",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AutoscaleSchedule": {
        "description": "Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity",
        "properties": {
          "days": {
            "description": "Days of the week for a schedule-based autoscale rule",
            "items": {
              "enum": [
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday",
                "Sunday"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DaysOfWeek"
              }
            },
            "type": "array"
          },
          "timeAndCapacity": {
            "$ref": "#/components/schemas/AutoscaleTimeAndCapacity",
            "description": "Time and capacity for a schedule-based autoscale rule"
          }
        },
        "type": "object"
      },
      "AutoscaleTimeAndCapacity": {
        "description": "Time and capacity request parameters",
        "properties": {
          "maxInstanceCount": {
            "description": "The maximum instance count of the cluster",
            "format": "int32",
            "type": "integer"
          },
          "minInstanceCount": {
            "description": "The minimum instance count of the cluster",
            "format": "int32",
            "type": "integer"
          },
          "time": {
            "description": "24-hour time in the form xx:xx",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClientGroupInfo": {
        "description": "The information of AAD security group.",
        "properties": {
          "groupId": {
            "description": "The AAD security group id.",
            "type": "string"
          },
          "groupName": {
            "description": "The AAD security group name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Cluster": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "The HDInsight cluster.",
        "properties": {
          "etag": {
            "description": "The ETag for the resource",
            "type": "string"
          },
          "identity": {
            "$ref": "#/components/schemas/ClusterIdentity",
            "description": "The identity of the cluster, if configured."
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterGetProperties",
            "description": "The properties of the cluster."
          }
        },
        "type": "object"
      },
      "ClusterCreateParametersExtended": {
        "description": "The CreateCluster request parameters.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/ClusterIdentity",
            "description": "The identity of the cluster, if configured."
          },
          "location": {
            "description": "The location of the cluster.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterCreateProperties",
            "description": "The cluster create parameters."
          }
        },
        "type": "object"
      },
      "ClusterCreateProperties": {
        "description": "The cluster create parameters.",
        "properties": {
          "clusterDefinition": {
            "$ref": "#/components/schemas/ClusterDefinition",
            "description": "The cluster definition."
          },
          "clusterVersion": {
            "description": "The version of the cluster.",
            "type": "string"
          },
          "computeIsolationProperties": {
            "$ref": "#/components/schemas/ComputeIsolationProperties",
            "description": "The compute isolation properties."
          },
          "computeProfile": {
            "$ref": "#/components/schemas/ComputeProfile",
            "description": "The compute profile."
          },
          "diskEncryptionProperties": {
            "$ref": "#/components/schemas/DiskEncryptionProperties",
            "description": "The disk encryption properties."
          },
          "encryptionInTransitProperties": {
            "$ref": "#/components/schemas/EncryptionInTransitProperties",
            "description": "The encryption-in-transit properties."
          },
          "kafkaRestProperties": {
            "$ref": "#/components/schemas/KafkaRestProperties",
            "description": "The cluster kafka rest proxy configuration."
          },
          "minSupportedTlsVersion": {
            "description": "The minimal supported tls version.",
            "type": "string"
          },
          "networkProperties": {
            "$ref": "#/components/schemas/NetworkProperties",
            "description": "The network properties."
          },
          "osType": {
            "description": "The type of operating system.",
            "enum": [
              "Windows",
              "Linux"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "OSType"
            }
          },
          "securityProfile": {
            "$ref": "#/components/schemas/SecurityProfile",
            "description": "The security profile."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "The storage profile."
          },
          "tier": {
            "default": "Standard",
            "description": "The cluster tier.",
            "enum": [
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Tier"
            },
            "x-ms-mutability": [
              "create",
              "read"
            ]
          }
        },
        "type": "object"
      },
      "ClusterDefinition": {
        "description": "The cluster definition.",
        "properties": {
          "blueprint": {
            "description": "The link to the blueprint.",
            "type": "string"
          },
          "componentVersion": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The versions of different services in the cluster.",
            "type": "object",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "configurations": {
            "description": "The cluster configurations.",
            "type": "object",
            "x-ms-secret": true
          },
          "kind": {
            "description": "The type of cluster.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterDiskEncryptionParameters": {
        "description": "The Disk Encryption Cluster request parameters.",
        "properties": {
          "keyName": {
            "description": "Key name that is used for enabling disk encryption.",
            "type": "string"
          },
          "keyVersion": {
            "description": "Specific key version that is used for enabling disk encryption.",
            "type": "string"
          },
          "vaultUri": {
            "description": "Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterGetProperties": {
        "description": "The properties of cluster.",
        "properties": {
          "clusterDefinition": {
            "$ref": "#/components/schemas/ClusterDefinition",
            "description": "The cluster definition."
          },
          "clusterHdpVersion": {
            "description": "The hdp version of the cluster.",
            "type": "string"
          },
          "clusterId": {
            "description": "The cluster id.",
            "type": "string"
          },
          "clusterState": {
            "description": "The state of the cluster.",
            "type": "string"
          },
          "clusterVersion": {
            "description": "The version of the cluster.",
            "type": "string"
          },
          "computeIsolationProperties": {
            "$ref": "#/components/schemas/ComputeIsolationProperties",
            "description": "The compute isolation properties."
          },
          "computeProfile": {
            "$ref": "#/components/schemas/ComputeProfile",
            "description": "The compute profile."
          },
          "connectivityEndpoints": {
            "description": "The list of connectivity endpoints.",
            "items": {
              "$ref": "#/components/schemas/ConnectivityEndpoint"
            },
            "type": "array"
          },
          "createdDate": {
            "description": "The date on which the cluster was created.",
            "type": "string"
          },
          "diskEncryptionProperties": {
            "$ref": "#/components/schemas/DiskEncryptionProperties",
            "description": "The disk encryption properties."
          },
          "encryptionInTransitProperties": {
            "$ref": "#/components/schemas/EncryptionInTransitProperties",
            "description": "The encryption-in-transit properties."
          },
          "errors": {
            "description": "The list of errors.",
            "items": {
              "$ref": "#/components/schemas/Errors"
            },
            "type": "array"
          },
          "excludedServicesConfig": {
            "$ref": "#/components/schemas/ExcludedServicesConfig",
            "description": "The excluded services config."
          },
          "kafkaRestProperties": {
            "$ref": "#/components/schemas/KafkaRestProperties",
            "description": "The cluster kafka rest proxy configuration."
          },
          "minSupportedTlsVersion": {
            "description": "The minimal supported tls version.",
            "type": "string"
          },
          "networkProperties": {
            "$ref": "#/components/schemas/NetworkProperties",
            "description": "The network properties."
          },
          "osType": {
            "description": "The type of operating system.",
            "enum": [
              "Windows",
              "Linux"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "OSType"
            }
          },
          "provisioningState": {
            "description": "The provisioning state, which only appears in the response.",
            "enum": [
              "InProgress",
              "Failed",
              "Succeeded",
              "Canceled",
              "Deleting"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HDInsightClusterProvisioningState"
            }
          },
          "quotaInfo": {
            "$ref": "#/components/schemas/QuotaInfo",
            "description": "The quota information."
          },
          "securityProfile": {
            "$ref": "#/components/schemas/SecurityProfile",
            "description": "The security profile."
          },
          "storageProfile": {
            "$ref": "#/components/schemas/StorageProfile",
            "description": "The storage profile."
          },
          "tier": {
            "description": "The cluster tier.",
            "enum": [
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Tier"
            }
          }
        },
        "required": [
          "clusterDefinition"
        ],
        "type": "object"
      },
      "ClusterIdentity": {
        "description": "Identity for the cluster.",
        "properties": {
          "principalId": {
            "description": "The principal id of cluster identity. This property will only be provided for a system assigned identity.",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant id associated with the cluster. This property will only be provided for a system assigned identity.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of identity used for the cluster. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities.",
            "enum": [
              "SystemAssigned",
              "UserAssigned",
              "SystemAssigned, UserAssigned",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ResourceIdentityType"
            }
          },
          "userAssignedIdentities": {
            "additionalProperties": {
              "properties": {
                "clientId": {
                  "description": "The client id of user assigned identity.",
                  "readOnly": true,
                  "type": "string"
                },
                "principalId": {
                  "description": "The principal id of user assigned identity.",
                  "readOnly": true,
                  "type": "string"
                },
                "tenantId": {
                  "description": "The tenant id of user assigned identity.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The list of user identities associated with the cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClusterListPersistedScriptActionsResult": {
        "description": "The ListPersistedScriptActions operation response.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of Persisted Script Actions.",
            "items": {
              "$ref": "#/components/schemas/RuntimeScriptAction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterListResult": {
        "description": "The List Cluster operation response.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of Clusters.",
            "items": {
              "$ref": "#/components/schemas/Cluster"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterListRuntimeScriptActionDetailResult": {
        "description": "The list runtime script action detail response.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/RuntimeScriptActionDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterPatchParameters": {
        "description": "The PatchCluster request parameters",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "nullable": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClusterResizeParameters": {
        "description": "The Resize Cluster request parameters.",
        "properties": {
          "targetInstanceCount": {
            "description": "The target instance count for the operation.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ComputeIsolationProperties": {
        "description": "The compute isolation properties.",
        "properties": {
          "enableComputeIsolation": {
            "default": false,
            "description": "The flag indicates whether enable compute isolation or not.",
            "type": "boolean"
          },
          "hostSku": {
            "description": "The host sku.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ComputeProfile": {
        "description": "Describes the compute profile.",
        "properties": {
          "roles": {
            "description": "The list of roles in the cluster.",
            "items": {
              "$ref": "#/components/schemas/Role"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConnectivityEndpoint": {
        "description": "The connectivity properties",
        "properties": {
          "location": {
            "description": "The location of the endpoint.",
            "type": "string"
          },
          "name": {
            "description": "The name of the endpoint.",
            "type": "string"
          },
          "port": {
            "description": "The port to connect to.",
            "format": "int32",
            "type": "integer"
          },
          "privateIPAddress": {
            "description": "The private ip address of the endpoint.",
            "type": "string"
          },
          "protocol": {
            "description": "The protocol of the endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataDisksGroups": {
        "description": "The data disks groups for the role.",
        "properties": {
          "diskSizeGB": {
            "description": "ReadOnly. The DiskSize in GB. Do not set this value.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "disksPerNode": {
            "description": "The number of disks per node.",
            "format": "int32",
            "type": "integer"
          },
          "storageAccountType": {
            "description": "ReadOnly. The storage account type. Do not set this value.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskEncryptionProperties": {
        "description": "The disk encryption properties",
        "properties": {
          "encryptionAlgorithm": {
            "description": "Algorithm identifier for encryption, default RSA-OAEP.",
            "enum": [
              "RSA-OAEP",
              "RSA-OAEP-256",
              "RSA1_5"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "JsonWebKeyEncryptionAlgorithm"
            }
          },
          "encryptionAtHost": {
            "default": false,
            "description": "Indicates whether or not resource disk encryption is enabled.",
            "type": "boolean"
          },
          "keyName": {
            "description": "Key name that is used for enabling disk encryption.",
            "type": "string"
          },
          "keyVersion": {
            "description": "Specific key version that is used for enabling disk encryption.",
            "type": "string"
          },
          "msiResourceId": {
            "description": "Resource ID of Managed Identity that is used to access the key vault.",
            "type": "string"
          },
          "vaultUri": {
            "description": "Base key vault URI where the customers key is located eg. https://myvault.vault.azure.net",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionInTransitProperties": {
        "description": "The encryption-in-transit properties.",
        "properties": {
          "isEncryptionInTransitEnabled": {
            "default": false,
            "description": "Indicates whether or not inter cluster node communication is encrypted in transit.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Errors": {
        "description": "The error message associated with the cluster creation.",
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExcludedServicesConfig": {
        "description": "The configuration that services will be excluded when creating cluster.",
        "properties": {
          "excludedServicesConfigId": {
            "description": "The config id of excluded services.",
            "type": "string"
          },
          "excludedServicesList": {
            "description": "The list of excluded services.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExecuteScriptActionParameters": {
        "description": "The parameters for the script actions to execute on a running cluster.",
        "properties": {
          "persistOnSuccess": {
            "description": "Gets or sets if the scripts needs to be persisted.",
            "type": "boolean"
          },
          "scriptActions": {
            "description": "The list of run time script actions.",
            "items": {
              "$ref": "#/components/schemas/RuntimeScriptAction"
            },
            "type": "array"
          }
        },
        "required": [
          "persistOnSuccess"
        ],
        "type": "object"
      },
      "GatewaySettings": {
        "description": "Gateway settings.",
        "properties": {
          "restAuthCredential.isEnabled": {
            "description": "Indicates whether or not the gateway settings based authorization is enabled.",
            "readOnly": true,
            "type": "string",
            "x-ms-client-name": "isCredentialEnabled"
          },
          "restAuthCredential.password": {
            "description": "The gateway settings user password.",
            "readOnly": true,
            "type": "string",
            "x-ms-client-name": "password"
          },
          "restAuthCredential.username": {
            "description": "The gateway settings user name.",
            "readOnly": true,
            "type": "string",
            "x-ms-client-name": "userName"
          }
        },
        "type": "object"
      },
      "HardwareProfile": {
        "description": "The hardware profile.",
        "properties": {
          "vmSize": {
            "description": "The size of the VM",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KafkaRestProperties": {
        "description": "The kafka rest proxy configuration which contains AAD security group information.",
        "properties": {
          "clientGroupInfo": {
            "$ref": "#/components/schemas/ClientGroupInfo",
            "description": "The information of AAD security group."
          },
          "configurationOverride": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The configurations that need to be overriden.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "LinuxOperatingSystemProfile": {
        "description": "The ssh username, password, and ssh public key.",
        "properties": {
          "password": {
            "description": "The password.",
            "type": "string"
          },
          "sshProfile": {
            "$ref": "#/components/schemas/SshProfile",
            "description": "The SSH profile.",
            "x-ms-secret": true
          },
          "username": {
            "description": "The username.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkProperties": {
        "description": "The network properties.",
        "properties": {
          "privateLink": {
            "description": "Indicates whether or not private link is enabled.",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrivateLink"
            }
          },
          "resourceProviderConnection": {
            "description": "The direction for the resource provider connection.",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ResourceProviderConnection"
            }
          }
        },
        "type": "object"
      },
      "OsProfile": {
        "description": "The Linux operation systems profile.",
        "properties": {
          "linuxOperatingSystemProfile": {
            "$ref": "#/components/schemas/LinuxOperatingSystemProfile",
            "description": "The Linux OS profile."
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags"
      },
      "QuotaInfo": {
        "description": "The quota properties for the cluster.",
        "properties": {
          "coresUsed": {
            "description": "The cores used by the cluster.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The core properties of ARM resources",
        "properties": {
          "id": {
            "description": "Fully qualified resource Id for the resource.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Role": {
        "description": "Describes a role on the cluster.",
        "properties": {
          "VMGroupName": {
            "description": "The name of the virtual machine group.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "autoscale": {
            "$ref": "#/components/schemas/Autoscale",
            "description": "The autoscale configurations.",
            "x-ms-client-name": "autoscaleConfiguration"
          },
          "dataDisksGroups": {
            "description": "The data disks groups for the role.",
            "items": {
              "$ref": "#/components/schemas/DataDisksGroups"
            },
            "type": "array"
          },
          "encryptDataDisks": {
            "default": false,
            "description": "Indicates whether encrypt the data disks.",
            "type": "boolean"
          },
          "hardwareProfile": {
            "$ref": "#/components/schemas/HardwareProfile",
            "description": "The hardware profile."
          },
          "minInstanceCount": {
            "description": "The minimum instance count of the cluster.",
            "format": "int32",
            "type": "integer",
            "x-ms-secret": true
          },
          "name": {
            "description": "The name of the role.",
            "type": "string"
          },
          "osProfile": {
            "$ref": "#/components/schemas/OsProfile",
            "description": "The operating system profile."
          },
          "scriptActions": {
            "description": "The list of script actions on the role.",
            "items": {
              "$ref": "./scriptActions.json#/definitions/ScriptAction"
            },
            "type": "array",
            "x-ms-secret": true
          },
          "targetInstanceCount": {
            "description": "The instance count of the cluster.",
            "format": "int32",
            "type": "integer"
          },
          "virtualNetworkProfile": {
            "$ref": "#/components/schemas/VirtualNetworkProfile",
            "description": "The virtual network profile."
          }
        },
        "type": "object"
      },
      "RuntimeScriptAction": {
        "description": "Describes a script action on a running cluster.",
        "properties": {
          "parameters": {
            "description": "The parameters for the script",
            "type": "string"
          },
          "applicationName": {
            "description": "The application name of the script action, if any.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the script action.",
            "type": "string"
          },
          "roles": {
            "description": "The list of roles where script will be executed.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uri": {
            "description": "The URI to the script.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "uri",
          "roles"
        ],
        "type": "object"
      },
      "RuntimeScriptActionDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuntimeScriptAction"
          },
          {
            "properties": {
              "debugInformation": {
                "description": "The script action execution debug information.",
                "readOnly": true,
                "type": "string"
              },
              "endTime": {
                "description": "The end time of script action execution.",
                "readOnly": true,
                "type": "string"
              },
              "executionSummary": {
                "description": "The summary of script action execution result.",
                "items": {
                  "$ref": "#/components/schemas/ScriptActionExecutionSummary"
                },
                "readOnly": true,
                "type": "array"
              },
              "operation": {
                "description": "The reason why the script action was executed.",
                "readOnly": true,
                "type": "string"
              },
              "scriptExecutionId": {
                "description": "The execution id of the script action.",
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "startTime": {
                "description": "The start time of script action execution.",
                "readOnly": true,
                "type": "string"
              },
              "status": {
                "description": "The current execution status of the script action.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "The execution details of a script action."
      },
      "ScriptActionExecutionSummary": {
        "description": "The execution summary of a script action.",
        "properties": {
          "instanceCount": {
            "description": "The instance count for a given script action execution status.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "description": "The status of script action execution.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityProfile": {
        "description": "The security profile which contains Ssh public key for the HDInsight cluster.",
        "properties": {
          "aaddsResourceId": {
            "description": "The resource ID of the user's Azure Active Directory Domain Service.",
            "type": "string"
          },
          "clusterUsersGroupDNs": {
            "description": "Optional. The Distinguished Names for cluster user groups",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "directoryType": {
            "description": "The directory type.",
            "enum": [
              "ActiveDirectory"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DirectoryType"
            }
          },
          "domain": {
            "description": "The organization's active directory domain.",
            "type": "string"
          },
          "domainUserPassword": {
            "description": "The domain admin password.",
            "format": "password",
            "type": "string"
          },
          "domainUsername": {
            "description": "The domain user account that will have admin privileges on the cluster.",
            "type": "string"
          },
          "ldapsUrls": {
            "description": "The LDAPS protocol URLs to communicate with the Active Directory.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "msiResourceId": {
            "description": "User assigned identity that has permissions to read and create cluster-related artifacts in the user's AADDS.",
            "type": "string"
          },
          "organizationalUnitDN": {
            "description": "The organizational unit within the Active Directory to place the cluster and service accounts.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          }
        },
        "type": "object"
      },
      "SshProfile": {
        "description": "The list of SSH public keys.",
        "properties": {
          "publicKeys": {
            "description": "The list of SSH public keys.",
            "items": {
              "$ref": "#/components/schemas/SshPublicKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SshPublicKey": {
        "description": "The SSH public key for the cluster nodes.",
        "properties": {
          "certificateData": {
            "description": "The certificate for SSH.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageAccount": {
        "description": "The storage Account.",
        "properties": {
          "container": {
            "description": "The container in the storage account, only to be specified for WASB storage accounts.",
            "type": "string"
          },
          "fileSystem": {
            "description": "The filesystem, only to be specified for Azure Data Lake Storage Gen 2.",
            "type": "string"
          },
          "fileshare": {
            "description": "The file share name.",
            "type": "string"
          },
          "isDefault": {
            "description": "Whether or not the storage account is the default storage account.",
            "type": "boolean"
          },
          "key": {
            "description": "The storage account access key.",
            "type": "string"
          },
          "msiResourceId": {
            "description": "The managed identity (MSI) that is allowed to access the storage account, only to be specified for Azure Data Lake Storage Gen 2.",
            "type": "string"
          },
          "name": {
            "description": "The name of the storage account.",
            "type": "string"
          },
          "resourceId": {
            "description": "The resource ID of storage account, only to be specified for Azure Data Lake Storage Gen 2.",
            "type": "string"
          },
          "saskey": {
            "description": "The shared access signature key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageProfile": {
        "description": "The storage profile.",
        "properties": {
          "storageaccounts": {
            "description": "The list of storage accounts in the cluster.",
            "items": {
              "$ref": "#/components/schemas/StorageAccount"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource model definition for a ARM tracked top level resource",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "location": {
            "description": "The Azure Region where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "type": "object"
      },
      "UpdateClusterIdentityCertificateParameters": {
        "description": "The update cluster identity certificate request parameters.",
        "properties": {
          "applicationId": {
            "description": "The application id.",
            "type": "string"
          },
          "certificate": {
            "description": "The certificate in base64 encoded format.",
            "type": "string"
          },
          "certificatePassword": {
            "description": "The password of the certificate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateGatewaySettingsParameters": {
        "description": "The update gateway settings request parameters.",
        "properties": {
          "restAuthCredential.isEnabled": {
            "default": true,
            "description": "Indicates whether or not the gateway settings based authorization is enabled.",
            "type": "boolean",
            "x-ms-client-name": "isCredentialEnabled"
          },
          "restAuthCredential.password": {
            "description": "The gateway settings user password.",
            "type": "string",
            "x-ms-client-name": "password"
          },
          "restAuthCredential.username": {
            "description": "The gateway settings user name.",
            "type": "string",
            "x-ms-client-name": "userName"
          }
        },
        "type": "object"
      },
      "VirtualNetworkProfile": {
        "description": "The virtual network properties.",
        "properties": {
          "id": {
            "description": "The ID of the virtual network.",
            "type": "string"
          },
          "subnet": {
            "description": "The name of the subnet.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}