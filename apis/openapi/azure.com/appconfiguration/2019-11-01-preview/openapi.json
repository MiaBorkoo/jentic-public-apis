{
  "openapi": "3.0.0",
  "info": {
    "title": "AppConfigurationManagementClient",
    "version": "2019-11-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/appconfiguration/resource-manager/Microsoft.AppConfiguration/preview/2019-11-01-preview/appconfiguration.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.AppConfiguration/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationDefinitionListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists the operations available from this provider.",
        "operationId": "Operations_List",
        "x-ms-examples": {},
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameAvailabilityStatus"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Checks whether the configuration store name is available for use.",
        "operationId": "Operations_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "description": "The object containing information for the availability request.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationStores_CheckNameAvailable": {
            "$ref": "./examples/CheckNameAvailable.json"
          },
          "ConfigurationStores_CheckNameNotAvailable": {
            "$ref": "./examples/CheckNameNotAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStoreListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given subscription.",
        "operationId": "ConfigurationStores_List",
        "x-ms-examples": {
          "ConfigurationStores_List": {
            "$ref": "./examples/ConfigurationStoresList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStoreListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the configuration stores for a given resource group.",
        "operationId": "ConfigurationStores_ListByResourceGroup",
        "x-ms-examples": {
          "ConfigurationStores_ListByResourceGroup": {
            "$ref": "./examples/ConfigurationStoresListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Deletes a configuration store.",
        "operationId": "ConfigurationStores_Delete",
        "x-ms-examples": {
          "ConfigurationStores_Delete": {
            "$ref": "./examples/ConfigurationStoresDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStore"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Gets the properties of the specified configuration store.",
        "operationId": "ConfigurationStores_Get",
        "x-ms-examples": {
          "ConfigurationStores_Get": {
            "$ref": "./examples/ConfigurationStoresGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStore"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStore"
                }
              }
            },
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Updates a configuration store with the specified parameters.",
        "operationId": "ConfigurationStores_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStoreUpdateParameters"
              }
            }
          },
          "description": "The parameters for updating a configuration store.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationStores_Update": {
            "$ref": "./examples/ConfigurationStoresUpdate.json"
          },
          "ConfigurationStores_Update_WithIdentity": {
            "$ref": "./examples/ConfigurationStoresUpdateWithIdentity.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStore"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationStore"
                }
              }
            },
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Creates a configuration store with the specified parameters.",
        "operationId": "ConfigurationStores_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationStore"
              }
            }
          },
          "description": "The parameters for creating a configuration store.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationStores_Create": {
            "$ref": "./examples/ConfigurationStoresCreate.json"
          },
          "ConfigurationStores_Create_WithIdentity": {
            "$ref": "./examples/ConfigurationStoresCreateWithIdentity.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/ListKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "A skip token is used to continue retrieving items after an operation returns a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skipToken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists the access key for the specified configuration store.",
        "operationId": "ConfigurationStores_ListKeys",
        "x-ms-examples": {
          "ConfigurationStores_ListKeys": {
            "$ref": "./examples/ConfigurationStoresListKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/RegenerateKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKey"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Regenerates an access key for the specified configuration store.",
        "operationId": "ConfigurationStores_RegenerateKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateKeyParameters"
              }
            }
          },
          "description": "The parameters for regenerating an access key.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationStores_RegenerateKey": {
            "$ref": "./examples/ConfigurationStoresRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/listKeyValue": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyValue"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "ConfigurationStores"
        ],
        "description": "Lists a configuration store key-value.",
        "operationId": "ConfigurationStores_ListKeyValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListKeyValueParameters"
              }
            }
          },
          "description": "The parameters for retrieving a key-value.",
          "required": true
        },
        "x-ms-examples": {
          "ConfigurationStores_ListKeyValue": {
            "$ref": "./examples/ConfigurationStoresListKeyValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnectionListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists all private endpoint connections for a configuration store.",
        "operationId": "PrivateEndpointConnections_ListByConfigurationStore",
        "x-ms-examples": {
          "PrivateEndpointConnection_List": {
            "$ref": "./examples/ConfigurationStoresListPrivateEndpointConnections.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "Private endpoint connection name",
            "in": "path",
            "name": "privateEndpointConnectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "x-ms-examples": {
          "PrivateEndpointConnections_Delete": {
            "$ref": "./examples/ConfigurationStoresDeletePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "Private endpoint connection name",
            "in": "path",
            "name": "privateEndpointConnectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnection"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets the specified private endpoint connection associated with the configuration store.",
        "operationId": "PrivateEndpointConnections_Get",
        "x-ms-examples": {
          "PrivateEndpointConnection_GetConnection": {
            "$ref": "./examples/ConfigurationStoresGetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "Private endpoint connection name",
            "in": "path",
            "name": "privateEndpointConnectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnection"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnection"
                }
              }
            },
            "description": "The request was successfully accepted; the operation will complete asynchronously. The provisioning state of the resource should indicate the current state of the resource."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Update the state of the specified private endpoint connection associated with the configuration store.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateEndpointConnection"
              }
            }
          },
          "description": "The private endpoint connection properties.",
          "required": true
        },
        "x-ms-examples": {
          "PrivateEndpointConnection_CreateOrUpdate": {
            "$ref": "./examples/ConfigurationStoresCreatePrivateEndpointConnection.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkResourceListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a configuration store.",
        "operationId": "PrivateLinkResources_ListByConfigurationStore",
        "x-ms-examples": {
          "PrivateLinkResources_ListGroupIds": {
            "$ref": "./examples/PrivateLinkResourcesListByConfigurationStore.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppConfiguration/configurationStores/{configStoreName}/privateLinkResources/{groupName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigStoreNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "The name of the private link resource group.",
            "in": "path",
            "name": "groupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkResource"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource that need to be created for a configuration store.",
        "operationId": "PrivateLinkResources_Get",
        "x-ms-examples": {
          "PrivateLinkResources_Get": {
            "$ref": "./examples/PrivateLinkResourceGet.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ConfigStoreNameParameter": {
        "description": "The name of the configuration store.",
        "in": "path",
        "name": "configStoreName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 5,
          "pattern": "^[a-zA-Z0-9_-]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group to which the container registry belongs.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The Microsoft Azure subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ApiKey": {
        "description": "An API key used for authenticating with a configuration store endpoint.",
        "properties": {
          "connectionString": {
            "description": "A connection string that can be used by supporting clients for authentication.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The key ID.",
            "readOnly": true,
            "type": "string"
          },
          "lastModified": {
            "description": "The last time any of the key's properties were modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "A name for the key describing its usage.",
            "readOnly": true,
            "type": "string"
          },
          "readOnly": {
            "description": "Whether this key can only be used for read operations.",
            "readOnly": true,
            "type": "boolean"
          },
          "value": {
            "description": "The value of the key that is used for authentication purposes.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApiKeyListResult": {
        "description": "The result of a request to list API keys.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next set of paged results.",
            "type": "string"
          },
          "value": {
            "description": "The collection value.",
            "items": {
              "$ref": "#/components/schemas/ApiKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CheckNameAvailabilityParameters": {
        "description": "Parameters used for checking whether a resource name is available.",
        "properties": {
          "name": {
            "description": "The name to check for availability.",
            "type": "string"
          },
          "type": {
            "description": "The resource type to check for name availability.",
            "enum": [
              "Microsoft.AppConfiguration/configurationStores"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConfigurationResourceType"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ConfigurationStore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The configuration store along with all resource properties. The Configuration Store will have all information to begin utilizing it.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The managed identity information, if configured."
          },
          "properties": {
            "$ref": "#/components/schemas/ConfigurationStoreProperties",
            "description": "The properties of a configuration store.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the configuration store."
          }
        },
        "required": [
          "location",
          "sku"
        ],
        "type": "object"
      },
      "ConfigurationStoreListResult": {
        "description": "The result of a request to list configuration stores.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next set of paged results.",
            "type": "string"
          },
          "value": {
            "description": "The collection value.",
            "items": {
              "$ref": "#/components/schemas/ConfigurationStore"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConfigurationStoreProperties": {
        "description": "The properties of a configuration store.",
        "properties": {
          "creationDate": {
            "description": "The creation date of configuration store.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionProperties",
            "description": "The encryption settings of the configuration store."
          },
          "endpoint": {
            "description": "The DNS endpoint where the configuration store API will be available.",
            "readOnly": true,
            "type": "string"
          },
          "privateEndpointConnections": {
            "description": "The list of private endpoint connections that are set up for this resource.",
            "items": {
              "$ref": "#/components/schemas/PrivateEndpointConnectionReference"
            },
            "readOnly": true,
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the configuration store.",
            "enum": [
              "Creating",
              "Updating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "publicNetworkAccess": {
            "description": "Control permission for data plane traffic coming from public networks while private endpoint is enabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PublicNetworkAccess"
            }
          }
        },
        "type": "object"
      },
      "ConfigurationStorePropertiesUpdateParameters": {
        "description": "The properties for updating a configuration store.",
        "properties": {
          "encryption": {
            "$ref": "#/components/schemas/EncryptionProperties",
            "description": "The encryption settings of the configuration store."
          }
        },
        "type": "object"
      },
      "ConfigurationStoreUpdateParameters": {
        "description": "The parameters for updating a configuration store.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The ARM resource tags.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/ResourceIdentity",
            "description": "The managed identity information for the configuration store."
          },
          "properties": {
            "$ref": "#/components/schemas/ConfigurationStorePropertiesUpdateParameters",
            "description": "The properties for updating a configuration store.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU of the configuration store."
          }
        },
        "type": "object"
      },
      "EncryptionProperties": {
        "description": "The encryption settings for a configuration store.",
        "properties": {
          "keyVaultProperties": {
            "$ref": "#/components/schemas/KeyVaultProperties",
            "description": "Key vault properties."
          }
        },
        "type": "object"
      },
      "Error": {
        "description": "AppConfiguration error object.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyValue": {
        "description": "The result of a request to retrieve a key-value from the specified configuration store.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "A dictionary of tags that can help identify what a key-value may be applicable for.",
            "readOnly": true,
            "type": "object"
          },
          "contentType": {
            "description": "The content type of the key-value's value.\r\nProviding a proper content-type can enable transformations of values when they are retrieved by applications.",
            "readOnly": true,
            "type": "string"
          },
          "eTag": {
            "description": "An ETag indicating the state of a key-value within a configuration store.",
            "readOnly": true,
            "type": "string"
          },
          "key": {
            "description": "The primary identifier of a key-value.\r\nThe key is used in unison with the label to uniquely identify a key-value.",
            "readOnly": true,
            "type": "string"
          },
          "label": {
            "description": "A value used to group key-values.\r\nThe label is used in unison with the key to uniquely identify a key-value.",
            "readOnly": true,
            "type": "string"
          },
          "lastModified": {
            "description": "The last time a modifying operation was performed on the given key-value.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "locked": {
            "description": "A value indicating whether the key-value is locked.\r\nA locked key-value may not be modified until it is unlocked.",
            "readOnly": true,
            "type": "boolean"
          },
          "value": {
            "description": "The value of the key-value.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyVaultProperties": {
        "description": "Settings concerning key vault encryption for a configuration store.",
        "properties": {
          "identityClientId": {
            "description": "The client id of the identity which will be used to access key vault.",
            "type": "string"
          },
          "keyIdentifier": {
            "description": "The URI of the key vault key used to encrypt data.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListKeyValueParameters": {
        "description": "The parameters used to list a configuration store key-value",
        "properties": {
          "key": {
            "description": "The key to retrieve.",
            "type": "string"
          },
          "label": {
            "description": "The label of the key.",
            "type": "string"
          }
        },
        "required": [
          "key"
        ],
        "type": "object"
      },
      "NameAvailabilityStatus": {
        "description": "The result of a request to check the availability of a resource name.",
        "properties": {
          "message": {
            "description": "If any, the error message that provides more detail for the reason that the name is not available.",
            "readOnly": true,
            "type": "string"
          },
          "nameAvailable": {
            "description": "The value indicating whether the resource name is available.",
            "readOnly": true,
            "type": "boolean"
          },
          "reason": {
            "description": "If any, the reason that the name is not available.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDefinition": {
        "description": "The definition of a configuration store operation.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDefinitionDisplay",
            "description": "The display information for the configuration store operation."
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDefinitionDisplay": {
        "description": "The display information for a configuration store operation.",
        "properties": {
          "description": {
            "description": "The description for the operation.",
            "type": "string"
          },
          "operation": {
            "description": "The operation that users can perform.",
            "type": "string"
          },
          "provider": {
            "description": "The resource provider name: Microsoft App Configuration.\"",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "The resource on which the operation is performed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDefinitionListResult": {
        "description": "The result of a request to list configuration store operations.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next set of paged results.",
            "type": "string"
          },
          "value": {
            "description": "The collection value.",
            "items": {
              "$ref": "#/components/schemas/OperationDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "properties": {
          "id": {
            "description": "The resource Id for private endpoint",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateEndpointConnection": {
        "description": "A private endpoint connection",
        "properties": {
          "id": {
            "description": "The resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PrivateEndpointConnectionProperties",
            "description": "The properties of a private endpoint.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "PrivateEndpointConnectionListResult": {
        "description": "A list of private endpoint connections",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next set of paged results.",
            "type": "string"
          },
          "value": {
            "description": "The collection value.",
            "items": {
              "$ref": "#/components/schemas/PrivateEndpointConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateEndpointConnectionProperties": {
        "description": "Properties of a private endpoint connection.",
        "properties": {
          "privateEndpoint": {
            "$ref": "#/components/schemas/PrivateEndpoint",
            "description": "The resource of private endpoint."
          },
          "privateLinkServiceConnectionState": {
            "$ref": "#/components/schemas/PrivateLinkServiceConnectionState",
            "description": "A collection of information about the state of the connection between service consumer and provider."
          },
          "provisioningState": {
            "description": "The provisioning status of the private endpoint connection.",
            "enum": [
              "Creating",
              "Updating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          }
        },
        "required": [
          "privateLinkServiceConnectionState"
        ],
        "type": "object"
      },
      "PrivateEndpointConnectionReference": {
        "description": "A reference to a related private endpoint connection.",
        "properties": {
          "id": {
            "description": "The resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PrivateEndpointConnectionProperties",
            "description": "The properties of a private endpoint connection.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateLinkResource": {
        "description": "A resource that supports private link capabilities.",
        "properties": {
          "id": {
            "description": "The resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PrivateLinkResourceProperties",
            "description": "Private link resource properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateLinkResourceListResult": {
        "description": "A list of private link resources.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next set of paged results.",
            "type": "string"
          },
          "value": {
            "description": "The collection value.",
            "items": {
              "$ref": "#/components/schemas/PrivateLinkResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateLinkResourceProperties": {
        "description": "Properties of a private link resource.",
        "properties": {
          "groupId": {
            "description": "The private link resource group id.",
            "readOnly": true,
            "type": "string"
          },
          "requiredMembers": {
            "description": "The private link resource required member names.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "requiredZoneNames": {
            "description": "The list of required DNS zone names of the private link resource.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateLinkServiceConnectionState": {
        "description": "The state of a private link service connection.",
        "properties": {
          "actionsRequired": {
            "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
            "enum": [
              "None",
              "Recreate"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ActionsRequired"
            }
          },
          "description": {
            "description": "The private link service connection description.",
            "type": "string"
          },
          "status": {
            "description": "The private link service connection status.",
            "enum": [
              "Pending",
              "Approved",
              "Rejected",
              "Disconnected"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConnectionStatus"
            }
          }
        },
        "type": "object"
      },
      "RegenerateKeyParameters": {
        "description": "The parameters used to regenerate an API key.",
        "properties": {
          "id": {
            "description": "The id of the key to regenerate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "An Azure resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags of the resource.",
            "type": "object"
          },
          "id": {
            "description": "The resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The location of the resource. This cannot be changed after the resource is created.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceIdentity": {
        "description": "An identity that can be associated with a resource.",
        "properties": {
          "principalId": {
            "description": "The principal id of the identity. This property will only be provided for a system-assigned identity.",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant id associated with the resource's identity. This property will only be provided for a system-assigned identity.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identities.",
            "enum": [
              "None",
              "SystemAssigned",
              "UserAssigned",
              "SystemAssigned, UserAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IdentityType"
            }
          },
          "userAssignedIdentities": {
            "additionalProperties": {
              "$ref": "#/components/schemas/UserIdentity"
            },
            "description": "The list of user-assigned identities associated with the resource. The user-assigned identity dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Sku": {
        "description": "Describes a configuration store SKU.",
        "properties": {
          "name": {
            "description": "The SKU name of the configuration store.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UserIdentity": {
        "description": "A resource identity that is managed by the user of the service.",
        "properties": {
          "clientId": {
            "description": "The client ID of the user-assigned identity.",
            "readOnly": true,
            "type": "string"
          },
          "principalId": {
            "description": "The principal ID of the user-assigned identity.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}