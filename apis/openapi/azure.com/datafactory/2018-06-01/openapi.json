{
  "openapi": "3.0.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2018-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datafactory/resource-manager/Microsoft.DataFactory/stable/2018-06-01/datafactory.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataFactory/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "operations"
        ],
        "description": "Lists the available Azure Data Factory API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactoryListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Lists factories under the specified subscription.",
        "operationId": "Factories_List",
        "x-ms-examples": {
          "Factories_List": {
            "$ref": "./examples/Factories_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Updates a factory's repo information.",
        "operationId": "Factories_ConfigureFactoryRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactoryRepoUpdate"
              }
            }
          },
          "description": "Update factory repo request definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_ConfigureFactoryRepo": {
            "$ref": "./examples/Factories_ConfigureFactoryRepo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/getFeatureValue": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureControlResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "exposureControl"
        ],
        "description": "Get exposure control feature for specific location.",
        "operationId": "ExposureControl_GetFeatureValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureControlRequest"
              }
            }
          },
          "description": "The exposure control request.",
          "required": true
        },
        "x-ms-examples": {
          "ExposureControl_GetFeatureValue": {
            "$ref": "./examples/ExposureControl_GetFeatureValue.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactoryListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Lists factories.",
        "operationId": "Factories_ListByResourceGroup",
        "x-ms-examples": {
          "Factories_ListByResourceGroup": {
            "$ref": "./examples/Factories_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Deletes a factory.",
        "operationId": "Factories_Delete",
        "x-ms-examples": {
          "Factories_Delete": {
            "$ref": "./examples/Factories_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the factory entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Gets a factory.",
        "operationId": "Factories_Get",
        "x-ms-examples": {
          "Factories_Get": {
            "$ref": "./examples/Factories_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Updates a factory.",
        "operationId": "Factories_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactoryUpdateParameters"
              }
            }
          },
          "description": "The parameters for updating a factory.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_Update": {
            "$ref": "./examples/Factories_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the factory entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Creates or updates a factory.",
        "operationId": "Factories_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Factory"
              }
            }
          },
          "description": "Factory resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_CreateOrUpdate": {
            "$ref": "./examples/Factories_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/addDataFlowToDebugSession": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDataFlowToDebugSessionResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlowDebugSession"
        ],
        "description": "Add a data flow into debug session.",
        "operationId": "DataFlowDebugSession_AddDataFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFlowDebugPackage"
              }
            }
          },
          "description": "Data flow debug session definition with debug content.",
          "required": true
        },
        "x-ms-examples": {
          "DataFlowDebugSession_AddDataFlow": {
            "$ref": "./examples/DataFlowDebugSession_AddDataFlow.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeDataCaptureListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Lists all resources of type change data capture.",
        "operationId": "ChangeDataCapture_ListByFactory",
        "x-ms-examples": {
          "ChangeDataCapture_ListByFactory": {
            "$ref": "./examples/ChangeDataCapture_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Deletes a change data capture.",
        "operationId": "ChangeDataCapture_Delete",
        "x-ms-examples": {
          "ChangeDataCapture_Delete": {
            "$ref": "./examples/ChangeDataCapture_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the change data capture entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeDataCaptureResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Gets a change data capture.",
        "operationId": "ChangeDataCapture_Get",
        "x-ms-examples": {
          "ChangeDataCapture_Get": {
            "$ref": "./examples/ChangeDataCapture_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the change data capture entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeDataCaptureResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Creates or updates a change data capture resource.",
        "operationId": "ChangeDataCapture_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDataCaptureResource"
              }
            }
          },
          "description": "Change data capture resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "ChangeDataCapture_Create": {
            "$ref": "./examples/ChangeDataCapture_Create.json"
          },
          "ChangeDataCapture_Update": {
            "$ref": "./examples/ChangeDataCapture_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Change data capture has been started successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Starts a change data capture.",
        "operationId": "ChangeDataCapture_Start",
        "x-ms-examples": {
          "ChangeDataCapture_Start": {
            "$ref": "./examples/ChangeDataCapture_Start.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeDataCaptureStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Gets the current status for the change data capture resource.",
        "operationId": "ChangeDataCapture_Status",
        "x-ms-examples": {
          "ChangeDataCapture_Start": {
            "$ref": "./examples/ChangeDataCapture_Status.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/adfcdcs/{changeDataCaptureName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/changeDataCaptureName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Change data capture has been stopped successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "changeDataCapture"
        ],
        "description": "Stops a change data capture.",
        "operationId": "ChangeDataCapture_Stop",
        "x-ms-examples": {
          "ChangeDataCapture_Stop": {
            "$ref": "./examples/ChangeDataCapture_Stop.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/createDataFlowDebugSession": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDataFlowDebugSessionResponse"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlowDebugSession"
        ],
        "description": "Creates a data flow debug session.",
        "operationId": "DataFlowDebugSession_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataFlowDebugSessionRequest"
              }
            }
          },
          "description": "Data flow debug session definition",
          "required": true
        },
        "x-ms-examples": {
          "DataFlowDebugSession_Create": {
            "$ref": "./examples/DataFlowDebugSession_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "credentials"
        ],
        "description": "List credentials.",
        "operationId": "CredentialOperations_ListByFactory",
        "x-ms-examples": {
          "Credentials_ListByFactory": {
            "$ref": "./examples/Credentials_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/credentials/{credentialName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/credentialName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from DELETE credential operation."
          }
        },
        "tags": [
          "credentials"
        ],
        "description": "Deletes a credential.",
        "operationId": "CredentialOperations_Delete",
        "x-ms-examples": {
          "Credentials_Delete": {
            "$ref": "./examples/Credentials_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/credentialName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the credential entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from GET credential operation."
          }
        },
        "tags": [
          "credentials"
        ],
        "description": "Gets a credential.",
        "operationId": "CredentialOperations_Get",
        "x-ms-examples": {
          "Credentials_Get": {
            "$ref": "./examples/Credentials_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/credentialName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the credential entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredentialResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from PUT credential operation."
          }
        },
        "tags": [
          "credentials"
        ],
        "description": "Creates or updates a credential.",
        "operationId": "CredentialOperations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialResource"
              }
            }
          },
          "description": "Credential resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Credentials_Create": {
            "$ref": "./examples/Credentials_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlows"
        ],
        "description": "Lists data flows.",
        "operationId": "DataFlows_ListByFactory",
        "x-ms-examples": {
          "DataFlows_ListByFactory": {
            "$ref": "./examples/DataFlows_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/dataflows/{dataFlowName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/dataFlowName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlows"
        ],
        "description": "Deletes a data flow.",
        "operationId": "DataFlows_Delete",
        "x-ms-examples": {
          "DataFlows_Delete": {
            "$ref": "./examples/DataFlows_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/dataFlowName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the data flow entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlows"
        ],
        "description": "Gets a data flow.",
        "operationId": "DataFlows_Get",
        "x-ms-examples": {
          "DataFlows_Get": {
            "$ref": "./examples/DataFlows_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/dataFlowName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the data flow entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlows"
        ],
        "description": "Creates or updates a data flow.",
        "operationId": "DataFlows_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFlowResource"
              }
            }
          },
          "description": "Data flow resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "DataFlows_Create": {
            "$ref": "./examples/DataFlows_Create.json"
          },
          "DataFlows_Update": {
            "$ref": "./examples/DataFlows_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Lists datasets.",
        "operationId": "Datasets_ListByFactory",
        "x-ms-examples": {
          "Datasets_ListByFactory": {
            "$ref": "./examples/Datasets_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Deletes a dataset.",
        "operationId": "Datasets_Delete",
        "x-ms-examples": {
          "Datasets_Delete": {
            "$ref": "./examples/Datasets_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the dataset entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Gets a dataset.",
        "operationId": "Datasets_Get",
        "x-ms-examples": {
          "Datasets_Get": {
            "$ref": "./examples/Datasets_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Creates or updates a dataset.",
        "operationId": "Datasets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetResource"
              }
            }
          },
          "description": "Dataset resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Datasets_Create": {
            "$ref": "./examples/Datasets_Create.json"
          },
          "Datasets_Update": {
            "$ref": "./examples/Datasets_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/deleteDataFlowDebugSession": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlowDebugSession"
        ],
        "description": "Deletes a data flow debug session.",
        "operationId": "DataFlowDebugSession_Delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDataFlowDebugSessionRequest"
              }
            }
          },
          "description": "Data flow debug session definition for deletion",
          "required": true
        },
        "x-ms-examples": {
          "DataFlowDebugSession_Delete": {
            "$ref": "./examples/DataFlowDebugSession_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/executeDataFlowDebugCommand": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataFlowDebugCommandResponse"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "location": {
                "description": "URI to poll for asynchronous operation status.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlowDebugSession"
        ],
        "description": "Execute a data flow debug command.",
        "operationId": "DataFlowDebugSession_ExecuteCommand",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataFlowDebugCommandRequest"
              }
            }
          },
          "description": "Data flow debug command definition.",
          "required": true
        },
        "x-ms-examples": {
          "DataFlowDebugSession_ExecuteCommand": {
            "$ref": "./examples/DataFlowDebugSession_ExecuteCommand.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getDataPlaneAccess": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Get Data Plane access.",
        "operationId": "Factories_GetDataPlaneAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAccessPolicy"
              }
            }
          },
          "description": "Data Plane user access policy definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_GetDataPlaneAccess": {
            "$ref": "./examples/Factories_GetDataPlaneAccess.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getFeatureValue": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureControlResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "exposureControl"
        ],
        "description": "Get exposure control feature for specific factory.",
        "operationId": "ExposureControl_GetFeatureValueByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureControlRequest"
              }
            }
          },
          "description": "The exposure control request.",
          "required": true
        },
        "x-ms-examples": {
          "ExposureControl_GetFeatureValueByFactory": {
            "$ref": "./examples/ExposureControl_GetFeatureValueByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/getGitHubAccessToken": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GitHubAccessTokenResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Get GitHub Access Token.",
        "operationId": "Factories_GetGitHubAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitHubAccessTokenRequest"
              }
            }
          },
          "description": "Get GitHub access token request definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_GetGitHubAccessToken": {
            "$ref": "./examples/Factories_GetGitHubAccessToken.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameterListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "globalParameters"
        ],
        "description": "Lists Global parameters",
        "operationId": "GlobalParameters_ListByFactory",
        "x-ms-examples": {
          "GlobalParameters_ListByFactory": {
            "$ref": "./examples/GlobalParameters_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/globalParameters/{globalParameterName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/globalParameterName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "globalParameters"
        ],
        "description": "Deletes a Global parameter",
        "operationId": "GlobalParameters_Delete",
        "x-ms-examples": {
          "GlobalParameters_Delete": {
            "$ref": "./examples/GlobalParameters_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/globalParameterName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameterResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "globalParameters"
        ],
        "description": "Gets a Global parameter",
        "operationId": "GlobalParameters_Get",
        "x-ms-examples": {
          "GlobalParameters_Get": {
            "$ref": "./examples/GlobalParameters_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/globalParameterName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalParameterResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "globalParameters"
        ],
        "description": "Creates or updates a Global parameter",
        "operationId": "GlobalParameters_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GlobalParameterResource"
              }
            }
          },
          "description": "Global parameter resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "GlobalParameters_Create": {
            "$ref": "./examples/GlobalParameters_Create.json"
          },
          "GlobalParameters_Update": {
            "$ref": "./examples/GlobalParameters_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Lists integration runtimes.",
        "operationId": "IntegrationRuntimes_ListByFactory",
        "x-ms-examples": {
          "IntegrationRuntimes_ListByFactory": {
            "$ref": "./examples/IntegrationRuntimes_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from DELETE integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Deletes an integration runtime.",
        "operationId": "IntegrationRuntimes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimes_Delete": {
            "$ref": "./examples/IntegrationRuntimes_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the integration runtime entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from GET integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets an integration runtime.",
        "operationId": "IntegrationRuntimes_Get",
        "x-ms-examples": {
          "IntegrationRuntimes_Get": {
            "$ref": "./examples/IntegrationRuntimes_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Updates an integration runtime.",
        "operationId": "IntegrationRuntimes_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationRuntimeRequest"
              }
            }
          },
          "description": "The parameters for updating an integration runtime.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Update": {
            "$ref": "./examples/IntegrationRuntimes_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from PUT integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Creates or updates an integration runtime.",
        "operationId": "IntegrationRuntimes_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationRuntimeResource"
              }
            }
          },
          "description": "Integration runtime resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Create": {
            "$ref": "./examples/IntegrationRuntimes_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeConnectionInfo"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.",
        "operationId": "IntegrationRuntimes_GetConnectionInfo",
        "x-ms-examples": {
          "IntegrationRuntimes_GetConnectionInfo": {
            "$ref": "./examples/IntegrationRuntimes_GetConnectionInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getObjectMetadata": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SsisObjectMetadataListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "description": "Get a SSIS integration runtime object metadata by specified path. The return is pageable metadata list.",
        "operationId": "IntegrationRuntimeObjectMetadata_Get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetSsisObjectMetadataRequest"
              }
            }
          },
          "description": "The parameters for getting a SSIS object metadata."
        },
        "x-ms-examples": {
          "IntegrationRuntimeObjectMetadata_Get": {
            "$ref": "./examples/IntegrationRuntimeObjectMetadata_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets detailed status information for an integration runtime.",
        "operationId": "IntegrationRuntimes_GetStatus",
        "x-ms-examples": {
          "IntegrationRuntimes_GetStatus": {
            "$ref": "./examples/IntegrationRuntimes_GetStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/linkedIntegrationRuntime": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Create a linked integration runtime entry in a shared integration runtime.",
        "operationId": "IntegrationRuntimes_CreateLinkedIntegrationRuntime",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedIntegrationRuntimeRequest"
              }
            }
          },
          "description": "The linked integration runtime properties.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_CreateLinkedIntegrationRuntime": {
            "$ref": "./examples/IntegrationRuntimes_CreateLinkedIntegrationRuntime.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Retrieves the authentication keys for an integration runtime.",
        "operationId": "IntegrationRuntimes_ListAuthKeys",
        "x-ms-examples": {
          "IntegrationRuntimes_ListAuthKeys": {
            "$ref": "./examples/IntegrationRuntimes_ListAuthKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeMonitoringData"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.",
        "operationId": "IntegrationRuntimes_GetMonitoringData",
        "x-ms-examples": {
          "IntegrationRuntimes_GetMonitoringData": {
            "$ref": "./examples/IntegrationRuntimes_GetMonitoringData.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Deletes a self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimesNodes_Delete": {
            "$ref": "./examples/IntegrationRuntimeNodes_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SelfHostedIntegrationRuntimeNode"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Gets a self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_Get",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_Get": {
            "$ref": "./examples/IntegrationRuntimeNodes_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SelfHostedIntegrationRuntimeNode"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Updates a self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationRuntimeNodeRequest"
              }
            }
          },
          "description": "The parameters for updating an integration runtime node.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimeNodes_Update": {
            "$ref": "./examples/IntegrationRuntimeNodes_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeNodeIpAddress"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Get the IP address of self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_GetIpAddress",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_GetIpAddress": {
            "$ref": "./examples/IntegrationRuntimeNodes_GetIpAddress.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/outboundNetworkDependenciesEndpoints": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeOutboundNetworkDependenciesEndpointsResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets the list of outbound network dependencies for a given Azure-SSIS integration runtime.",
        "operationId": "IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints",
        "x-ms-examples": {
          "IntegrationRuntimes_OutboundNetworkDependenciesEndpoints": {
            "$ref": "./examples/IntegrationRuntimes_ListOutboundNetworkDependenciesEndpoints.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/refreshObjectMetadata": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SsisObjectMetadataStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeObjectMetadata"
        ],
        "description": "Refresh a SSIS integration runtime object metadata.",
        "operationId": "IntegrationRuntimeObjectMetadata_Refresh",
        "x-ms-examples": {
          "IntegrationRuntimeObjectMetadata_Refresh": {
            "$ref": "./examples/IntegrationRuntimeObjectMetadata_Refresh.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Regenerates the authentication key for an integration runtime.",
        "operationId": "IntegrationRuntimes_RegenerateAuthKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeRegenerateKeyParameters"
              }
            }
          },
          "description": "The parameters for regenerating integration runtime authentication key.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_RegenerateAuthKey": {
            "$ref": "./examples/IntegrationRuntimes_RegenerateAuthKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeLinks": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Remove all linked integration runtimes under specific data factory in a self-hosted integration runtime.",
        "operationId": "IntegrationRuntimes_RemoveLinks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedIntegrationRuntimeRequest"
              }
            }
          },
          "description": "The data factory name for the linked integration runtime.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Upgrade": {
            "$ref": "./examples/IntegrationRuntimes_RemoveLinks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Starts a ManagedReserved type integration runtime.",
        "operationId": "IntegrationRuntimes_Start",
        "x-ms-examples": {
          "IntegrationRuntimes_Start": {
            "$ref": "./examples/IntegrationRuntimes_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Stops a ManagedReserved type integration runtime.",
        "operationId": "IntegrationRuntimes_Stop",
        "x-ms-examples": {
          "IntegrationRuntimes_Stop": {
            "$ref": "./examples/IntegrationRuntimes_Stop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "operationId": "IntegrationRuntimes_SyncCredentials",
        "x-ms-examples": {
          "IntegrationRuntimes_SyncCredentials": {
            "$ref": "./examples/IntegrationRuntimes_SyncCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Upgrade self-hosted integration runtime to latest version if availability.",
        "operationId": "IntegrationRuntimes_Upgrade",
        "x-ms-examples": {
          "IntegrationRuntimes_Upgrade": {
            "$ref": "./examples/IntegrationRuntimes_Upgrade.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Lists linked services.",
        "operationId": "LinkedServices_ListByFactory",
        "x-ms-examples": {
          "LinkedServices_ListByFactory": {
            "$ref": "./examples/LinkedServices_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Deletes a linked service.",
        "operationId": "LinkedServices_Delete",
        "x-ms-examples": {
          "LinkedServices_Delete": {
            "$ref": "./examples/LinkedServices_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the linked service entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Gets a linked service.",
        "operationId": "LinkedServices_Get",
        "x-ms-examples": {
          "LinkedServices_Get": {
            "$ref": "./examples/LinkedServices_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Creates or updates a linked service.",
        "operationId": "LinkedServices_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedServiceResource"
              }
            }
          },
          "description": "Linked service resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "LinkedServices_Create": {
            "$ref": "./examples/LinkedServices_Create.json"
          },
          "LinkedServices_Update": {
            "$ref": "./examples/LinkedServices_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedVirtualNetworkListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "managedVirtualNetworks"
        ],
        "description": "Lists managed Virtual Networks.",
        "operationId": "ManagedVirtualNetworks_ListByFactory",
        "x-ms-examples": {
          "ManagedVirtualNetworks_ListByFactory": {
            "$ref": "./examples/ManagedVirtualNetworks_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the managed Virtual Network entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedVirtualNetworkResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from GET managed Virtual Network operation."
          }
        },
        "tags": [
          "managedVirtualNetworks"
        ],
        "description": "Gets a managed Virtual Network.",
        "operationId": "ManagedVirtualNetworks_Get",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Get": {
            "$ref": "./examples/ManagedVirtualNetworks_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the managed Virtual Network entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedVirtualNetworkResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from PUT managed Virtual Network operation."
          }
        },
        "tags": [
          "managedVirtualNetworks"
        ],
        "description": "Creates or updates a managed Virtual Network.",
        "operationId": "ManagedVirtualNetworks_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedVirtualNetworkResource"
              }
            }
          },
          "description": "Managed Virtual Network resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "ManagedVirtualNetworks_Create": {
            "$ref": "./examples/ManagedVirtualNetworks_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/managedPrivateEndpointListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "managedPrivateEndpoints"
        ],
        "description": "Lists managed private endpoints.",
        "operationId": "ManagedPrivateEndpoints_ListByFactory",
        "x-ms-examples": {
          "ManagedPrivateEndpoints_ListByFactory": {
            "$ref": "./examples/ManagedPrivateEndpoints_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/managedVirtualNetworks/{managedVirtualNetworkName}/managedPrivateEndpoints/{managedPrivateEndpointName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from DELETE managed private endpoint operation."
          }
        },
        "tags": [
          "managedPrivateEndpoints"
        ],
        "description": "Deletes a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_Delete",
        "x-ms-examples": {
          "ManagedVirtualNetworks_Delete": {
            "$ref": "./examples/ManagedPrivateEndpoints_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the managed private endpoint entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedPrivateEndpointResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from GET managed private endpoint operation."
          }
        },
        "tags": [
          "managedPrivateEndpoints"
        ],
        "description": "Gets a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_Get",
        "x-ms-examples": {
          "ManagedPrivateEndpoints_Get": {
            "$ref": "./examples/ManagedPrivateEndpoints_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/managedVirtualNetworkName"
          },
          {
            "$ref": "#/components/parameters/managedPrivateEndpointName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the managed private endpoint entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedPrivateEndpointResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from PUT managed private endpoint operation."
          }
        },
        "tags": [
          "managedPrivateEndpoints"
        ],
        "description": "Creates or updates a managed private endpoint.",
        "operationId": "ManagedPrivateEndpoints_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedPrivateEndpointResource"
              }
            }
          },
          "description": "Managed private endpoint resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "ManagedVirtualNetworks_Create": {
            "$ref": "./examples/ManagedPrivateEndpoints_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRun"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Get a pipeline run by its run ID.",
        "operationId": "PipelineRuns_Get",
        "x-ms-examples": {
          "PipelineRuns_Get": {
            "$ref": "./examples/PipelineRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "description": "If true, cancel all the Child pipelines that are triggered by the current pipeline.",
            "in": "query",
            "name": "isRecursive",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline run has been canceled successfully. "
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Cancel a pipeline run by its run ID.",
        "operationId": "PipelineRuns_Cancel",
        "x-ms-examples": {
          "PipelineRuns_Cancel": {
            "$ref": "./examples/PipelineRuns_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/queryActivityruns": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRunsQueryResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "activityruns"
        ],
        "description": "Query activity runs based on input filter conditions.",
        "operationId": "ActivityRuns_QueryByPipelineRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "description": "Parameters to filter the activity runs.",
          "required": true
        },
        "x-ms-examples": {
          "ActivityRuns_QueryByPipelineRun": {
            "$ref": "./examples/ActivityRuns_QueryByPipelineRun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Lists pipelines.",
        "operationId": "Pipelines_ListByFactory",
        "x-ms-examples": {
          "Pipelines_ListByFactory": {
            "$ref": "./examples/Pipelines_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Deletes a pipeline.",
        "operationId": "Pipelines_Delete",
        "x-ms-examples": {
          "Pipelines_Delete": {
            "$ref": "./examples/Pipelines_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the pipeline entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Gets a pipeline.",
        "operationId": "Pipelines_Get",
        "x-ms-examples": {
          "Pipelines_Get": {
            "$ref": "./examples/Pipelines_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Creates or updates a pipeline.",
        "operationId": "Pipelines_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineResource"
              }
            }
          },
          "description": "Pipeline resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Pipelines_Create": {
            "$ref": "./examples/Pipelines_Create.json"
          },
          "Pipelines_Update": {
            "$ref": "./examples/Pipelines_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The pipeline run identifier. If run ID is specified the parameters of the specified run will be used to create a new run.",
            "in": "query",
            "name": "referencePipelineRunId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Recovery mode flag. If recovery mode is set to true, the specified referenced pipeline run and the new run will be grouped under the same groupId.",
            "in": "query",
            "name": "isRecovery",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "In recovery mode, the rerun will start from this activity. If not specified, all activities will run.",
            "in": "query",
            "name": "startActivityName",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "In recovery mode, if set to true, the rerun will start from failed activities. The property will be used only if startActivityName is not specified.",
            "in": "query",
            "name": "startFromFailure",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRunResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Creates a run of a pipeline.",
        "operationId": "Pipelines_CreateRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterValueSpecification"
              }
            }
          },
          "description": "Parameters of the pipeline run. These parameters will be used only if the runId is not specified."
        },
        "x-ms-examples": {
          "Pipelines_CreateRun": {
            "$ref": "./examples/Pipelines_CreateRun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndPointConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnectionListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "privateEndPointConnections"
        ],
        "description": "Lists Private endpoint connections",
        "operationId": "privateEndPointConnections_ListByFactory",
        "x-ms-examples": {
          "privateEndPointConnections_ListByFactory": {
            "$ref": "./examples/PrivateEndPointConnections_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/privateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from DELETE privateEndpointConnections operation."
          }
        },
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection",
        "operationId": "PrivateEndpointConnection_Delete",
        "x-ms-examples": {
          "Delete a private endpoint connection for a datafactory.": {
            "$ref": "./examples/DeletePrivateEndpointConnection.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/privateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the private endpoint connection entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnectionResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from GET privateEndpointConnections operation."
          }
        },
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection",
        "operationId": "PrivateEndpointConnection_Get",
        "x-ms-examples": {
          "Get a private endpoint connection for a datafactory.": {
            "$ref": "./examples/GetPrivateEndpointConnection.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/privateEndpointConnectionName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the private endpoint connection entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateEndpointConnectionResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from PUT privateEndpointConnections operation."
          }
        },
        "tags": [
          "privateEndpointConnections"
        ],
        "description": "Approves or rejects a private endpoint connection",
        "operationId": "PrivateEndpointConnection_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PrivateLinkConnectionApprovalRequestResource"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "Approves or rejects a private endpoint connection for a factory.": {
            "$ref": "./examples/ApproveRejectPrivateEndpointConnection.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/privateLinkResources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivateLinkResourcesWrapper"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "privateLinkResources"
        ],
        "description": "Gets the private link resources",
        "operationId": "privateLinkResources_Get",
        "x-ms-examples": {
          "Get private link resources of a site": {
            "$ref": "./examples/GetPrivateLinkResources.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryDataFlowDebugSessions": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDataFlowDebugSessionsResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "dataFlowDebugSession"
        ],
        "description": "Query all active data flow debug sessions.",
        "operationId": "DataFlowDebugSession_QueryByFactory",
        "x-ms-examples": {
          "DataFlowDebugSession_QueryByFactory": {
            "$ref": "./examples/DataFlowDebugSession_QueryByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryFeaturesValue": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExposureControlBatchResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "exposureControl"
        ],
        "description": "Get list of exposure control features for specific factory.",
        "operationId": "ExposureControl_QueryFeatureValuesByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExposureControlBatchRequest"
              }
            }
          },
          "description": "The exposure control request for list of features.",
          "required": true
        },
        "x-ms-examples": {
          "ExposureControl_QueryFeatureValuesByFactory": {
            "$ref": "./examples/ExposureControl_QueryFeatureValuesByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryPipelineRuns": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRunsQueryResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Query pipeline runs in the factory based on input filter conditions.",
        "operationId": "PipelineRuns_QueryByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "description": "Parameters to filter the pipeline run.",
          "required": true
        },
        "x-ms-examples": {
          "PipelineRuns_QueryByFactory": {
            "$ref": "./examples/PipelineRuns_QueryByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/queryTriggerRuns": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerRunsQueryResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggerruns"
        ],
        "description": "Query trigger runs.",
        "operationId": "TriggerRuns_QueryByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunFilterParameters"
              }
            }
          },
          "description": "Parameters to filter the pipeline run.",
          "required": true
        },
        "x-ms-examples": {
          "TriggerRuns_QueryByFactory": {
            "$ref": "./examples/TriggerRuns_QueryByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/querytriggers": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerQueryResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Query triggers.",
        "operationId": "Triggers_QueryByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerFilterParameters"
              }
            }
          },
          "description": "Parameters to filter the triggers.",
          "required": true
        },
        "x-ms-examples": {
          "Triggers_QueryByFactory": {
            "$ref": "./examples/Triggers_QueryByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Lists triggers.",
        "operationId": "Triggers_ListByFactory",
        "x-ms-examples": {
          "Triggers_ListByFactory": {
            "$ref": "./examples/Triggers_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Deletes a trigger.",
        "operationId": "Triggers_Delete",
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the trigger entity. Should only be specified for get. If the ETag matches the existing entity tag, or if * was provided, then no content will be returned.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResource"
                }
              }
            },
            "description": "OK."
          },
          "304": {
            "description": "Not modified."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "trigger"
        ],
        "description": "Gets a trigger.",
        "operationId": "Triggers_Get",
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Creates or updates a trigger.",
        "operationId": "Triggers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerResource"
              }
            }
          },
          "description": "Trigger resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Triggers_Create": {
            "$ref": "./examples/Triggers_Create.json"
          },
          "Triggers_Update": {
            "$ref": "./examples/Triggers_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/getEventSubscriptionStatus": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            },
            "description": "Trigger event subscription state."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Get a trigger's event subscription status.",
        "operationId": "Triggers_GetEventSubscriptionStatus",
        "x-ms-examples": {
          "Triggers_GetEventSubscriptionStatus": {
            "$ref": "./examples/Triggers_GetEventSubscriptionStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been started successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Starts a trigger.",
        "operationId": "Triggers_Start",
        "x-ms-examples": {
          "Triggers_Start": {
            "$ref": "./examples/Triggers_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been stopped successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Stops a trigger.",
        "operationId": "Triggers_Stop",
        "x-ms-examples": {
          "Triggers_Stop": {
            "$ref": "./examples/Triggers_Stop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/subscribeToEvents": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            },
            "description": "Trigger is subscribed to events."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Subscribe event trigger to events.",
        "operationId": "Triggers_SubscribeToEvents",
        "x-ms-examples": {
          "Triggers_SubscribeToEvents": {
            "$ref": "./examples/Triggers_SubscribeToEvents.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been cancelled."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggerruns"
        ],
        "description": "Cancel a single trigger instance by runId.",
        "operationId": "TriggerRuns_Cancel",
        "x-ms-examples": {
          "Triggers_Cancel": {
            "$ref": "./examples/TriggerRuns_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerRuns/{runId}/rerun": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "TriggerRun has been restarted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggerruns"
        ],
        "description": "Rerun single trigger instance by runId.",
        "operationId": "TriggerRuns_Rerun",
        "x-ms-examples": {
          "Triggers_Rerun": {
            "$ref": "./examples/TriggerRuns_Rerun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/unsubscribeFromEvents": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerSubscriptionOperationStatus"
                }
              }
            },
            "description": "Trigger is unsubscribed from events."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Unsubscribe event trigger from events.",
        "operationId": "Triggers_UnsubscribeFromEvents",
        "x-ms-examples": {
          "Triggers_UnsubscribeFromEvents": {
            "$ref": "./examples/Triggers_UnsubscribeFromEvents.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "The API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "changeDataCaptureName": {
        "description": "The change data capture name.",
        "in": "path",
        "name": "changeDataCaptureName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "credentialName": {
        "description": "Credential name",
        "in": "path",
        "name": "credentialName",
        "required": true,
        "schema": {
          "maxLength": 127,
          "minLength": 1,
          "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "dataFlowName": {
        "description": "The data flow name.",
        "in": "path",
        "name": "dataFlowName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "datasetName": {
        "description": "The dataset name.",
        "in": "path",
        "name": "datasetName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "factoryName": {
        "description": "The factory name.",
        "in": "path",
        "name": "factoryName",
        "required": true,
        "schema": {
          "maxLength": 63,
          "minLength": 3,
          "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "globalParameterName": {
        "description": "The global parameter name.",
        "in": "path",
        "name": "globalParameterName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "integrationRuntimeName": {
        "description": "The integration runtime name.",
        "in": "path",
        "name": "integrationRuntimeName",
        "required": true,
        "schema": {
          "maxLength": 63,
          "minLength": 3,
          "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "linkedServiceName": {
        "description": "The linked service name.",
        "in": "path",
        "name": "linkedServiceName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "locationId": {
        "description": "The location identifier.",
        "in": "path",
        "name": "locationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "managedPrivateEndpointName": {
        "description": "Managed private endpoint name",
        "in": "path",
        "name": "managedPrivateEndpointName",
        "required": true,
        "schema": {
          "maxLength": 127,
          "minLength": 1,
          "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "managedVirtualNetworkName": {
        "description": "Managed virtual network name",
        "in": "path",
        "name": "managedVirtualNetworkName",
        "required": true,
        "schema": {
          "maxLength": 127,
          "minLength": 1,
          "pattern": "^([_A-Za-z0-9]|([_A-Za-z0-9][-_A-Za-z0-9]{0,125}[_A-Za-z0-9]))$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "nodeName": {
        "description": "The integration runtime node name.",
        "in": "path",
        "name": "nodeName",
        "required": true,
        "schema": {
          "maxLength": 150,
          "minLength": 1,
          "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "pipelineName": {
        "description": "The pipeline name.",
        "in": "path",
        "name": "pipelineName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "privateEndpointConnectionName": {
        "description": "The private endpoint connection name.",
        "in": "path",
        "name": "privateEndpointConnectionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupName": {
        "description": "The resource group name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "runId": {
        "description": "The pipeline run identifier.",
        "in": "path",
        "name": "runId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "The subscription identifier.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "triggerName": {
        "description": "The trigger name.",
        "in": "path",
        "name": "triggerName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "ExposureControlRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ExposureControlRequest"
            }
          }
        },
        "description": "The exposure control request.",
        "required": true
      },
      "RunFilterParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RunFilterParameters"
            }
          }
        },
        "description": "Parameters to filter the pipeline run.",
        "required": true
      }
    },
    "schemas": {
      "AccessPolicyResponse": {
        "description": "Get Data Plane read only token response definition.",
        "properties": {
          "accessToken": {
            "description": "Data Plane read only access token.",
            "type": "string"
          },
          "dataPlaneUrl": {
            "description": "Data Plane service base URL.",
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/UserAccessPolicy",
            "description": "The user access policy."
          }
        },
        "type": "object"
      },
      "ActivityRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Information about an activity run in a pipeline.",
        "properties": {
          "activityName": {
            "description": "The name of the activity.",
            "readOnly": true,
            "type": "string"
          },
          "activityRunEnd": {
            "description": "The end time of the activity run in 'ISO 8601' format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "activityRunId": {
            "description": "The id of the activity run.",
            "readOnly": true,
            "type": "string"
          },
          "activityRunStart": {
            "description": "The start time of the activity run in 'ISO 8601' format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "activityType": {
            "description": "The type of the activity.",
            "readOnly": true,
            "type": "string"
          },
          "durationInMs": {
            "description": "The duration of the activity run.",
            "readOnly": true,
            "type": "integer"
          },
          "error": {
            "description": "The error if any from the activity run.",
            "readOnly": true,
            "type": "object"
          },
          "input": {
            "description": "The input for the activity.",
            "readOnly": true,
            "type": "object"
          },
          "linkedServiceName": {
            "description": "The name of the compute linked service.",
            "readOnly": true,
            "type": "string"
          },
          "output": {
            "description": "The output for the activity.",
            "readOnly": true,
            "type": "object"
          },
          "pipelineName": {
            "description": "The name of the pipeline.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineRunId": {
            "description": "The id of the pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the activity run.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActivityRunsQueryResponse": {
        "description": "A list activity runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "type": "string"
          },
          "value": {
            "description": "List of activity runs.",
            "items": {
              "$ref": "#/components/schemas/ActivityRun"
            },
            "type": "array",
            "x-ms-identifiers": [
              "pipelineRunId"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AddDataFlowToDebugSessionResponse": {
        "description": "Response body structure for starting data flow debug session.",
        "properties": {
          "jobVersion": {
            "description": "The ID of data flow debug job version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArmIdWrapper": {
        "description": "A wrapper for an ARM resource id",
        "properties": {
          "id": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureKeyVaultSecretReference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SecretBase"
          }
        ],
        "description": "Azure Key Vault secret reference.",
        "properties": {
          "secretName": {
            "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).",
            "type": "object",
            "x-ms-format": "dfe-string"
          },
          "secretVersion": {
            "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).",
            "type": "object",
            "x-ms-format": "dfe-string"
          },
          "store": {
            "$ref": "#/components/schemas/LinkedServiceReference",
            "description": "The Azure Key Vault linked service reference."
          }
        },
        "required": [
          "store",
          "secretName"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AzureKeyVaultSecret"
      },
      "CMKIdentityDefinition": {
        "description": "Managed Identity used for CMK.",
        "properties": {
          "userAssignedIdentity": {
            "description": "The resource id of the user assigned identity to authenticate to customer's key vault.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChangeDataCaptureListResponse": {
        "description": "A list of change data capture resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "Lists all resources of type change data capture.",
            "items": {
              "$ref": "#/components/schemas/ChangeDataCaptureResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ChangeDataCaptureResource": {
        "additionalProperties": {
          "type": "object"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Change data capture resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/ChangeDataCapture.json#/definitions/ChangeDataCapture",
            "description": "Properties of the change data capture.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ChangeDataCaptureStatusResponse": {
        "description": "Current status of the change data capture resource.",
        "type": "string"
      },
      "CloudError": {
        "description": "The object that defines the structure of an Azure Data Factory error response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody",
            "description": "Error data",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "error"
        ],
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "The object that defines the structure of an Azure Data Factory error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "details": {
            "description": "Array with additional error details.",
            "items": {
              "$ref": "#/components/schemas/CloudError"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "target": {
            "description": "Property name/path in request associated with error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "x-ms-external": true
      },
      "CreateDataFlowDebugSessionRequest": {
        "description": "Request body structure for creating data flow debug session.",
        "properties": {
          "computeType": {
            "description": "Compute type of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
            "type": "string"
          },
          "coreCount": {
            "description": "Core count of the cluster. The value will be overwritten by the same setting in integration runtime if provided.",
            "type": "integer"
          },
          "integrationRuntime": {
            "$ref": "#/components/schemas/IntegrationRuntimeDebugResource",
            "description": "Set to use integration runtime setting for data flow debug session."
          },
          "timeToLive": {
            "description": "Time to live setting of the cluster in minutes.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CreateDataFlowDebugSessionResponse": {
        "description": "Response body structure for creating data flow debug session.",
        "properties": {
          "sessionId": {
            "description": "The ID of data flow debug session.",
            "type": "string"
          },
          "status": {
            "description": "The state of the debug session.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateLinkedIntegrationRuntimeRequest": {
        "description": "The linked integration runtime information.",
        "properties": {
          "dataFactoryLocation": {
            "description": "The location of the data factory that the linked integration runtime belongs to.",
            "type": "string"
          },
          "dataFactoryName": {
            "description": "The name of the data factory that the linked integration runtime belongs to.",
            "type": "string"
          },
          "name": {
            "description": "The name of the linked integration runtime.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "The ID of the subscription that the linked integration runtime belongs to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateRunResponse": {
        "description": "Response body with a run identifier.",
        "properties": {
          "runId": {
            "description": "Identifier of a run.",
            "type": "string"
          }
        },
        "required": [
          "runId"
        ],
        "type": "object"
      },
      "CredentialListResponse": {
        "description": "A list of credential resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of credentials.",
            "items": {
              "$ref": "#/components/schemas/CredentialResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "CredentialReference": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Credential reference type.",
        "properties": {
          "referenceName": {
            "description": "Reference credential name.",
            "type": "string"
          },
          "type": {
            "description": "Credential reference type.",
            "enum": [
              "CredentialReference"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CredentialReferenceType"
            }
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "CredentialResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Credential resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Credential.json#/definitions/Credential",
            "description": "Properties of credentials."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "DataFlowDebugCommandPayload": {
        "description": "Structure of command payload.",
        "properties": {
          "columns": {
            "description": "Array of column names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "expression": {
            "description": "The expression which is used for preview.",
            "type": "string"
          },
          "rowLimits": {
            "description": "Row limits for preview response.",
            "type": "integer"
          },
          "streamName": {
            "description": "The stream name which is used for preview.",
            "type": "string"
          }
        },
        "required": [
          "streamName"
        ],
        "type": "object"
      },
      "DataFlowDebugCommandRequest": {
        "description": "Request body structure for data flow debug command.",
        "properties": {
          "command": {
            "description": "The command type.",
            "enum": [
              "executePreviewQuery",
              "executeStatisticsQuery",
              "executeExpressionQuery"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataFlowDebugCommandType"
            }
          },
          "commandPayload": {
            "$ref": "#/components/schemas/DataFlowDebugCommandPayload",
            "description": "The command payload object."
          },
          "sessionId": {
            "description": "The ID of data flow debug session.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataFlowDebugCommandResponse": {
        "description": "Response body structure of data flow result for data preview, statistics or expression preview.",
        "properties": {
          "data": {
            "description": "The result data of data preview, statistics or expression preview.",
            "type": "string"
          },
          "status": {
            "description": "The run status of data preview, statistics or expression preview.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataFlowDebugPackage": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Request body structure for starting data flow debug session.",
        "properties": {
          "dataFlow": {
            "$ref": "#/components/schemas/DataFlowDebugResource",
            "description": "Data flow instance."
          },
          "dataFlows": {
            "description": "List of Data flows",
            "items": {
              "$ref": "#/components/schemas/DataFlowDebugResource"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "datasets": {
            "description": "List of datasets.",
            "items": {
              "$ref": "#/components/schemas/DatasetDebugResource"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "debugSettings": {
            "description": "Data flow debug settings.",
            "properties": {
              "parameters": {
                "$ref": "#/components/schemas/ParameterValueSpecification",
                "description": "Data flow parameters."
              },
              "datasetParameters": {
                "description": "Parameters for dataset.",
                "type": "object"
              },
              "sourceSettings": {
                "description": "Source setting for data flow debug.",
                "items": {
                  "$ref": "#/components/schemas/DataFlowSourceSetting"
                },
                "type": "array",
                "x-ms-identifiers": [
                  "sourceName"
                ]
              }
            },
            "type": "object"
          },
          "linkedServices": {
            "description": "List of linked services.",
            "items": {
              "$ref": "#/components/schemas/LinkedServiceDebugResource"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "sessionId": {
            "description": "The ID of data flow debug session.",
            "type": "string"
          },
          "staging": {
            "$ref": "#/components/schemas/DataFlowStagingInfo",
            "description": "Staging info for debug session."
          }
        },
        "type": "object"
      },
      "DataFlowDebugResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResourceDebugResource"
          }
        ],
        "description": "Data flow debug resource.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/DataFlow.json#/definitions/DataFlow",
            "description": "Data flow properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "DataFlowDebugSessionInfo": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Data flow debug session info.",
        "properties": {
          "computeType": {
            "description": "Compute type of the cluster.",
            "type": "string"
          },
          "coreCount": {
            "description": "Core count of the cluster.",
            "type": "integer"
          },
          "dataFlowName": {
            "description": "The name of the data flow.",
            "type": "string"
          },
          "integrationRuntimeName": {
            "description": "Attached integration runtime name of data flow debug session.",
            "type": "string"
          },
          "lastActivityTime": {
            "description": "Last activity time of data flow debug session.",
            "type": "string"
          },
          "nodeCount": {
            "description": "Node count of the cluster. (deprecated property)",
            "type": "integer"
          },
          "sessionId": {
            "description": "The ID of data flow debug session.",
            "type": "string"
          },
          "startTime": {
            "description": "Start time of data flow debug session.",
            "type": "string"
          },
          "timeToLiveInMinutes": {
            "description": "Compute type of the cluster.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DataFlowListResponse": {
        "description": "A list of data flow resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of data flows.",
            "items": {
              "$ref": "#/components/schemas/DataFlowResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DataFlowReference": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Data flow reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Data flow parameters"
          },
          "datasetParameters": {
            "description": "Reference data flow parameters from dataset.",
            "type": "object"
          },
          "referenceName": {
            "description": "Reference data flow name.",
            "type": "string"
          },
          "type": {
            "description": "Data flow reference type.",
            "enum": [
              "DataFlowReference"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataFlowReferenceType"
            }
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "DataFlowResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Data flow resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/DataFlow.json#/definitions/DataFlow",
            "description": "Data flow properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "DataFlowSourceSetting": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Definition of data flow source setting for debug.",
        "properties": {
          "rowLimit": {
            "description": "Defines the row limit of data flow source in debug.",
            "type": "integer"
          },
          "sourceName": {
            "description": "The data flow source name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataFlowStagingInfo": {
        "description": "Staging info for execute data flow activity.",
        "properties": {
          "folderPath": {
            "description": "Folder path for staging blob. Type: string (or Expression with resultType string)",
            "type": "object",
            "x-ms-format": "dfe-string"
          },
          "linkedService": {
            "$ref": "#/components/schemas/LinkedServiceReference",
            "description": "Staging linked service reference."
          }
        },
        "type": "object"
      },
      "DatasetDebugResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResourceDebugResource"
          }
        ],
        "description": "Dataset debug resource.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Dataset.json#/definitions/Dataset",
            "description": "Dataset properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "DatasetListResponse": {
        "description": "A list of dataset resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of datasets.",
            "items": {
              "$ref": "#/components/schemas/DatasetResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DatasetReference": {
        "description": "Dataset reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for dataset."
          },
          "referenceName": {
            "description": "Reference dataset name.",
            "type": "string"
          },
          "type": {
            "description": "Dataset reference type.",
            "enum": [
              "DatasetReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "DatasetResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Dataset resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Dataset.json#/definitions/Dataset",
            "description": "Dataset properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "DeleteDataFlowDebugSessionRequest": {
        "description": "Request body structure for deleting data flow debug session.",
        "properties": {
          "sessionId": {
            "description": "The ID of data flow debug session.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionConfiguration": {
        "description": "Definition of CMK for the factory.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/CMKIdentityDefinition",
            "description": "User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service Identity will be used."
          },
          "keyName": {
            "description": "The name of the key in Azure Key Vault to use as Customer Managed Key.",
            "type": "string"
          },
          "keyVersion": {
            "description": "The version of the key used for CMK. If not provided, latest version will be used.",
            "type": "string"
          },
          "vaultBaseUrl": {
            "description": "The url of the Azure Key Vault used for CMK.",
            "type": "string"
          }
        },
        "required": [
          "keyName",
          "vaultBaseUrl"
        ],
        "type": "object"
      },
      "ExposureControlBatchRequest": {
        "description": "A list of exposure control features.",
        "properties": {
          "exposureControlRequests": {
            "description": "List of exposure control features.",
            "items": {
              "$ref": "#/components/schemas/ExposureControlRequest"
            },
            "type": "array",
            "x-ms-identifiers": [
              "featureName"
            ]
          }
        },
        "required": [
          "exposureControlRequests"
        ],
        "type": "object"
      },
      "ExposureControlBatchResponse": {
        "description": "A list of exposure control feature values.",
        "properties": {
          "exposureControlResponses": {
            "description": "List of exposure control feature values.",
            "items": {
              "$ref": "#/components/schemas/ExposureControlResponse"
            },
            "type": "array",
            "x-ms-identifiers": [
              "featureName"
            ]
          }
        },
        "required": [
          "exposureControlResponses"
        ],
        "type": "object"
      },
      "ExposureControlRequest": {
        "description": "The exposure control request.",
        "properties": {
          "featureName": {
            "description": "The feature name.",
            "type": "string"
          },
          "featureType": {
            "description": "The feature type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExposureControlResponse": {
        "description": "The exposure control response.",
        "properties": {
          "featureName": {
            "description": "The feature name.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The feature value.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Expression": {
        "description": "Azure Data Factory expression definition.",
        "properties": {
          "type": {
            "description": "Expression type.",
            "enum": [
              "Expression"
            ],
            "type": "string"
          },
          "value": {
            "description": "Expression value.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      },
      "Factory": {
        "additionalProperties": {
          "type": "object"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Factory resource type.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/FactoryIdentity",
            "description": "Managed service identity of the factory."
          },
          "properties": {
            "$ref": "#/components/schemas/FactoryProperties",
            "description": "Properties of the factory.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "FactoryGitHubConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FactoryRepoConfiguration"
          }
        ],
        "description": "Factory's GitHub repo information.",
        "properties": {
          "clientId": {
            "description": "GitHub bring your own app client id.",
            "type": "string"
          },
          "clientSecret": {
            "$ref": "#/components/schemas/GitHubClientSecret",
            "description": "GitHub bring your own app client secret information."
          },
          "hostName": {
            "description": "GitHub Enterprise host name. For example: `https://github.mydomain.com`",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "FactoryGitHubConfiguration"
      },
      "FactoryIdentity": {
        "description": "Identity properties of the factory resource.",
        "properties": {
          "principalId": {
            "description": "The principal id of the identity.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The client tenant id of the identity.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type.",
            "enum": [
              "SystemAssigned",
              "UserAssigned",
              "SystemAssigned,UserAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "FactoryIdentityType"
            }
          },
          "userAssignedIdentities": {
            "$ref": "#/components/schemas/UserAssignedIdentitiesDefinitionSpecification",
            "description": "List of user assigned identities for the factory."
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "FactoryListResponse": {
        "description": "A list of factory resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of factories.",
            "items": {
              "$ref": "#/components/schemas/Factory"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "FactoryProperties": {
        "description": "Factory resource properties.",
        "properties": {
          "createTime": {
            "description": "Time the factory was created in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "encryption": {
            "$ref": "#/components/schemas/EncryptionConfiguration",
            "description": "Properties to enable Customer Managed Key for the factory."
          },
          "globalParameters": {
            "$ref": "#/components/schemas/GlobalParameterDefinitionSpecification",
            "description": "List of parameters for factory."
          },
          "provisioningState": {
            "description": "Factory provisioning state, example Succeeded.",
            "readOnly": true,
            "type": "string"
          },
          "publicNetworkAccess": {
            "description": "Whether or not public network access is allowed for the data factory.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PublicNetworkAccess"
            }
          },
          "purviewConfiguration": {
            "$ref": "#/components/schemas/PurviewConfiguration",
            "description": "Purview information of the factory."
          },
          "repoConfiguration": {
            "$ref": "#/components/schemas/FactoryRepoConfiguration",
            "description": "Git repo information of the factory."
          },
          "version": {
            "description": "Version of the factory.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FactoryRepoConfiguration": {
        "description": "Factory's git repo information.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "accountName": {
            "description": "Account name.",
            "type": "string"
          },
          "collaborationBranch": {
            "description": "Collaboration branch.",
            "type": "string"
          },
          "disablePublish": {
            "description": "Disable manual publish operation in ADF studio to favor automated publish.",
            "type": "boolean"
          },
          "lastCommitId": {
            "description": "Last commit id.",
            "type": "string"
          },
          "repositoryName": {
            "description": "Repository name.",
            "type": "string"
          },
          "rootFolder": {
            "description": "Root folder.",
            "type": "string"
          },
          "type": {
            "description": "Type of repo configuration.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "accountName",
          "repositoryName",
          "collaborationBranch",
          "rootFolder"
        ],
        "type": "object"
      },
      "FactoryRepoUpdate": {
        "description": "Factory's git repo information.",
        "properties": {
          "factoryResourceId": {
            "description": "The factory resource id.",
            "type": "string"
          },
          "repoConfiguration": {
            "$ref": "#/components/schemas/FactoryRepoConfiguration",
            "description": "Git repo information of the factory."
          }
        },
        "type": "object"
      },
      "FactoryUpdateParameters": {
        "description": "Parameters for updating a factory resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/FactoryIdentity",
            "description": "Managed service identity of the factory."
          },
          "properties": {
            "$ref": "#/components/schemas/FactoryUpdateProperties",
            "description": "Properties of update the factory.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "FactoryUpdateProperties": {
        "description": "Factory update resource properties.",
        "properties": {
          "publicNetworkAccess": {
            "description": "Whether or not public network access is allowed for the data factory.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PublicNetworkAccess"
            }
          }
        },
        "type": "object"
      },
      "FactoryVSTSConfiguration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FactoryRepoConfiguration"
          }
        ],
        "description": "Factory's VSTS repo information.",
        "properties": {
          "projectName": {
            "description": "VSTS project name.",
            "type": "string"
          },
          "tenantId": {
            "description": "VSTS tenant id.",
            "type": "string"
          }
        },
        "required": [
          "projectName"
        ],
        "type": "object",
        "x-ms-discriminator-value": "FactoryVSTSConfiguration"
      },
      "GetDataFactoryOperationStatusResponse": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Response body structure for get data factory operation status.",
        "properties": {
          "status": {
            "description": "Status of the operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSsisObjectMetadataRequest": {
        "description": "The request payload of get SSIS object metadata.",
        "properties": {
          "metadataPath": {
            "description": "Metadata path.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GitHubAccessTokenRequest": {
        "description": "Get GitHub access token request definition.",
        "properties": {
          "gitHubAccessCode": {
            "description": "GitHub access code.",
            "type": "string"
          },
          "gitHubAccessTokenBaseUrl": {
            "description": "GitHub access token base URL.",
            "type": "string"
          },
          "gitHubClientId": {
            "description": "GitHub application client ID.",
            "type": "string"
          },
          "gitHubClientSecret": {
            "$ref": "#/components/schemas/GitHubClientSecret",
            "description": "GitHub bring your own app client secret information."
          }
        },
        "required": [
          "gitHubAccessCode",
          "gitHubAccessTokenBaseUrl"
        ],
        "type": "object"
      },
      "GitHubAccessTokenResponse": {
        "description": "Get GitHub access token response definition.",
        "properties": {
          "gitHubAccessToken": {
            "description": "GitHub access token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GitHubClientSecret": {
        "description": "Client secret information for factory's bring your own app repository configuration.",
        "properties": {
          "byoaSecretAkvUrl": {
            "description": "Bring your own app client secret AKV URL.",
            "type": "string"
          },
          "byoaSecretName": {
            "description": "Bring your own app client secret name in AKV.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlobalParameterDefinitionSpecification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/GlobalParameterSpecification"
        },
        "description": "Definition of all parameters for an entity.",
        "type": "object"
      },
      "GlobalParameterListResponse": {
        "description": "A list of Global parameters.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of global parameters.",
            "items": {
              "$ref": "#/components/schemas/GlobalParameterResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "GlobalParameterResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Global parameters resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/GlobalParameter.json#/definitions/GlobalParameter",
            "description": "Properties of the global parameter."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "GlobalParameterSpecification": {
        "description": "Definition of a single parameter for an entity.",
        "properties": {
          "type": {
            "description": "Global Parameter type.",
            "enum": [
              "Object",
              "String",
              "Int",
              "Float",
              "Bool",
              "Array"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GlobalParameterType"
            }
          },
          "value": {
            "description": "Value of parameter.",
            "type": "object"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      },
      "IntegrationRuntimeDebugResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResourceDebugResource"
          }
        ],
        "description": "Integration runtime debug resource.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntime",
            "description": "Integration runtime properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationRuntimeListResponse": {
        "description": "A list of integration runtime resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of integration runtimes.",
            "items": {
              "$ref": "#/components/schemas/IntegrationRuntimeResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IntegrationRuntimeReference": {
        "description": "Integration runtime reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for integration runtime."
          },
          "referenceName": {
            "description": "Reference integration runtime name.",
            "type": "string"
          },
          "type": {
            "description": "Type of integration runtime.",
            "enum": [
              "IntegrationRuntimeReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "IntegrationRuntimeResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Integration runtime resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntime",
            "description": "Integration runtime properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationRuntimeStatusListResponse": {
        "description": "A list of integration runtime status.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of integration runtime status.",
            "items": {
              "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IntegrationRuntimeStatusResponse": {
        "description": "Integration runtime status response.",
        "properties": {
          "name": {
            "description": "The integration runtime name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeStatus",
            "description": "Integration runtime properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "LinkedIntegrationRuntimeRequest": {
        "description": "Data factory name for linked integration runtime request.",
        "properties": {
          "factoryName": {
            "description": "The data factory name for linked integration runtime.",
            "type": "string",
            "x-ms-client-name": "linkedFactoryName"
          }
        },
        "required": [
          "factoryName"
        ],
        "type": "object"
      },
      "LinkedServiceDebugResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResourceDebugResource"
          }
        ],
        "description": "Linked service debug resource.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService",
            "description": "Properties of linked service."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "LinkedServiceListResponse": {
        "description": "A list of linked service resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of linked services.",
            "items": {
              "$ref": "#/components/schemas/LinkedServiceResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "LinkedServiceReference": {
        "description": "Linked service reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for LinkedService."
          },
          "referenceName": {
            "description": "Reference LinkedService name.",
            "type": "string"
          },
          "type": {
            "description": "Linked service reference type.",
            "enum": [
              "LinkedServiceReference"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Type"
            }
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "LinkedServiceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Linked service resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService",
            "description": "Properties of linked service."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ManagedPrivateEndpointResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Managed private endpoint resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/ManagedPrivateEndpoint.json#/definitions/ManagedPrivateEndpoint",
            "description": "Managed private endpoint properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ManagedVirtualNetworkListResponse": {
        "description": "A list of managed Virtual Network resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of managed Virtual Networks.",
            "items": {
              "$ref": "#/components/schemas/ManagedVirtualNetworkResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ManagedVirtualNetworkReference": {
        "description": "Managed Virtual Network reference type.",
        "properties": {
          "referenceName": {
            "description": "Reference ManagedVirtualNetwork name.",
            "type": "string"
          },
          "type": {
            "description": "Managed Virtual Network reference type.",
            "enum": [
              "ManagedVirtualNetworkReference"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ManagedVirtualNetworkReferenceType"
            }
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "ManagedVirtualNetworkResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Managed Virtual Network resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/ManagedVirtualNetwork.json#/definitions/ManagedVirtualNetwork",
            "description": "Managed Virtual Network properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "Azure Data Factory API operation definition.",
        "properties": {
          "display": {
            "description": "Metadata associated with the operation.",
            "properties": {
              "description": {
                "description": "The description of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "The type of operation: get, read, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "The name of the provider.",
                "type": "string"
              },
              "resource": {
                "description": "The name of the resource type on which the operation is performed.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          },
          "origin": {
            "description": "The intended executor of the operation.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationProperties",
            "description": "Additional details about the operation.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "OperationListResponse": {
        "description": "A list of operations that can be performed by the Data Factory service.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of Data Factory operations supported by the Data Factory resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "OperationLogSpecification": {
        "description": "Details about an operation related to logs.",
        "properties": {
          "blobDuration": {
            "description": "Blobs created in the customer storage account, per hour.",
            "type": "string"
          },
          "displayName": {
            "description": "Localized display name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the log category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetricAvailability": {
        "description": "Defines how often data for a metric becomes available.",
        "properties": {
          "blobDuration": {
            "description": "Blob created in the customer storage account, per hour.",
            "type": "string"
          },
          "timeGrain": {
            "description": "The granularity for the metric.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetricDimension": {
        "description": "Defines the metric dimension.",
        "properties": {
          "displayName": {
            "description": "The display name of the metric dimension.",
            "type": "string"
          },
          "name": {
            "description": "The name of the dimension for the metric.",
            "type": "string"
          },
          "toBeExportedForShoebox": {
            "description": "Whether the dimension should be exported to Azure Monitor.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "OperationMetricSpecification": {
        "description": "Details about an operation related to metrics.",
        "properties": {
          "aggregationType": {
            "description": "The type of metric aggregation.",
            "type": "string"
          },
          "availabilities": {
            "description": "Defines how often data for metrics becomes available.",
            "items": {
              "$ref": "#/components/schemas/OperationMetricAvailability"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "dimensions": {
            "description": "Defines the metric dimension.",
            "items": {
              "$ref": "#/components/schemas/OperationMetricDimension"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "displayDescription": {
            "description": "The description of the metric.",
            "type": "string"
          },
          "displayName": {
            "description": "Localized display name of the metric.",
            "type": "string"
          },
          "enableRegionalMdmAccount": {
            "description": "Whether or not the service is using regional MDM accounts.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric.",
            "type": "string"
          },
          "sourceMdmAccount": {
            "description": "The name of the MDM account.",
            "type": "string"
          },
          "sourceMdmNamespace": {
            "description": "The name of the MDM namespace.",
            "type": "string"
          },
          "unit": {
            "description": "The unit that the metric is measured in.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationProperties": {
        "description": "Additional details about an operation.",
        "properties": {
          "serviceSpecification": {
            "$ref": "#/components/schemas/OperationServiceSpecification",
            "description": "Details about a service operation."
          }
        },
        "type": "object",
        "x-ms-client-flatten": true
      },
      "OperationServiceSpecification": {
        "description": "Details about a service operation.",
        "properties": {
          "logSpecifications": {
            "description": "Details about operations related to logs.",
            "items": {
              "$ref": "#/components/schemas/OperationLogSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "metricSpecifications": {
            "description": "Details about operations related to metrics.",
            "items": {
              "$ref": "#/components/schemas/OperationMetricSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "ParameterDefinitionSpecification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ParameterSpecification"
        },
        "description": "Definition of all parameters for an entity.",
        "type": "object"
      },
      "ParameterSpecification": {
        "description": "Definition of a single parameter for an entity.",
        "properties": {
          "defaultValue": {
            "description": "Default value of parameter.",
            "type": "object"
          },
          "type": {
            "description": "Parameter type.",
            "enum": [
              "Object",
              "String",
              "Int",
              "Float",
              "Bool",
              "Array",
              "SecureString"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ParameterType"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ParameterValueSpecification": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "An object mapping parameter names to argument values.",
        "type": "object"
      },
      "PipelineListResponse": {
        "description": "A list of pipeline resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of pipelines.",
            "items": {
              "$ref": "#/components/schemas/PipelineResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PipelineReference": {
        "description": "Pipeline reference type.",
        "properties": {
          "name": {
            "description": "Reference name.",
            "type": "string"
          },
          "referenceName": {
            "description": "Reference pipeline name.",
            "type": "string"
          },
          "type": {
            "description": "Pipeline reference type.",
            "enum": [
              "PipelineReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "PipelineResource": {
        "additionalProperties": {
          "type": "object"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Pipeline resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Pipeline.json#/definitions/Pipeline",
            "description": "Properties of the pipeline.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "PipelineRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Information about a pipeline run.",
        "properties": {
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
            "readOnly": true,
            "type": "object"
          },
          "durationInMs": {
            "description": "The duration of a pipeline run.",
            "readOnly": true,
            "type": "integer"
          },
          "invokedBy": {
            "$ref": "#/components/schemas/PipelineRunInvokedBy",
            "description": "Entity that started the pipeline run.",
            "readOnly": true
          },
          "isLatest": {
            "description": "Indicates if the recovered pipeline run is the latest in its group.",
            "readOnly": true,
            "type": "boolean"
          },
          "lastUpdated": {
            "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The message from a pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineName": {
            "description": "The pipeline name.",
            "readOnly": true,
            "type": "string"
          },
          "runDimensions": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Run dimensions emitted by Pipeline run.",
            "readOnly": true,
            "type": "object"
          },
          "runEnd": {
            "description": "The end time of a pipeline run in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "runGroupId": {
            "description": "Identifier that correlates all the recovery runs of a pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "runId": {
            "description": "Identifier of a run.",
            "readOnly": true,
            "type": "string"
          },
          "runStart": {
            "description": "The start time of a pipeline run in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of a pipeline run. Possible values: Queued, InProgress, Succeeded, Failed, Canceling, Cancelled",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PipelineRunInvokedBy": {
        "description": "Provides entity name and id that started the pipeline run.",
        "properties": {
          "id": {
            "description": "The ID of the entity that started the run.",
            "readOnly": true,
            "type": "string"
          },
          "invokedByType": {
            "description": "The type of the entity that started the run.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the entity that started the pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineName": {
            "description": "The name of the pipeline that triggered the run, if any.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineRunId": {
            "description": "The run id of the pipeline that triggered the run, if any.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PipelineRunsQueryResponse": {
        "description": "A list pipeline runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "type": "string"
          },
          "value": {
            "description": "List of pipeline runs.",
            "items": {
              "$ref": "#/components/schemas/PipelineRun"
            },
            "type": "array",
            "x-ms-identifiers": [
              "runId"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PrivateEndpoint": {
        "description": "Private endpoint which a connection belongs to.",
        "properties": {
          "id": {
            "description": "The resource Id for private endpoint",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateEndpointConnectionListResponse": {
        "description": "A list of linked service resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of Private Endpoint Connections.",
            "items": {
              "$ref": "#/components/schemas/PrivateEndpointConnectionResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PrivateEndpointConnectionResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Private Endpoint Connection ARM resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RemotePrivateEndpointConnection",
            "description": "Core resource properties"
          }
        },
        "type": "object"
      },
      "PrivateLinkConnectionApprovalRequest": {
        "description": "A request to approve or reject a private endpoint connection",
        "properties": {
          "privateEndpoint": {
            "$ref": "#/components/schemas/PrivateEndpoint",
            "description": "The resource of private endpoint."
          },
          "privateLinkServiceConnectionState": {
            "$ref": "#/components/schemas/PrivateLinkConnectionState"
          }
        },
        "type": "object"
      },
      "PrivateLinkConnectionApprovalRequestResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Private Endpoint Connection Approval ARM resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PrivateLinkConnectionApprovalRequest",
            "description": "Core resource properties"
          }
        },
        "type": "object"
      },
      "PrivateLinkConnectionState": {
        "description": "The state of a private link connection",
        "properties": {
          "actionsRequired": {
            "description": "ActionsRequired for a private link connection",
            "type": "string"
          },
          "description": {
            "description": "Description of a private link connection",
            "type": "string"
          },
          "status": {
            "description": "Status of a private link connection",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrivateLinkResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "A private link resource",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PrivateLinkResourceProperties",
            "description": "Core resource properties"
          }
        },
        "type": "object"
      },
      "PrivateLinkResourceProperties": {
        "description": "Properties of a private link resource",
        "properties": {
          "groupId": {
            "description": "GroupId of a private link resource",
            "readOnly": true,
            "type": "string"
          },
          "requiredMembers": {
            "description": "RequiredMembers of a private link resource",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "requiredZoneNames": {
            "description": "RequiredZoneNames of a private link resource",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrivateLinkResourcesWrapper": {
        "description": "Wrapper for a collection of private link resources",
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/PrivateLinkResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PurviewConfiguration": {
        "description": "Purview configuration.",
        "properties": {
          "purviewResourceId": {
            "description": "Purview resource id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryDataFlowDebugSessionsResponse": {
        "description": "A list of active debug sessions.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "Array with all active debug sessions.",
            "items": {
              "$ref": "#/components/schemas/DataFlowDebugSessionInfo"
            },
            "type": "array",
            "x-ms-identifiers": [
              "dataFlowName",
              "sessionId"
            ]
          }
        },
        "type": "object"
      },
      "RemotePrivateEndpointConnection": {
        "description": "A remote private endpoint connection",
        "properties": {
          "privateEndpoint": {
            "$ref": "#/components/schemas/ArmIdWrapper",
            "description": "PrivateEndpoint of a remote private endpoint connection"
          },
          "privateLinkServiceConnectionState": {
            "$ref": "#/components/schemas/PrivateLinkConnectionState"
          },
          "provisioningState": {
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "Azure Data Factory top-level resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "eTag": {
            "description": "Etag identifies change in the resource.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The resource location.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "RunFilterParameters": {
        "description": "Query parameters for listing runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results. Null for first page.",
            "type": "string"
          },
          "filters": {
            "description": "List of filters.",
            "items": {
              "$ref": "#/components/schemas/RunQueryFilter"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "lastUpdatedAfter": {
            "description": "The time at or after which the run event was updated in 'ISO 8601' format.",
            "format": "date-time",
            "type": "string"
          },
          "lastUpdatedBefore": {
            "description": "The time at or before which the run event was updated in 'ISO 8601' format.",
            "format": "date-time",
            "type": "string"
          },
          "orderBy": {
            "description": "List of OrderBy option.",
            "items": {
              "$ref": "#/components/schemas/RunQueryOrderBy"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "required": [
          "lastUpdatedAfter",
          "lastUpdatedBefore"
        ],
        "type": "object"
      },
      "RunQueryFilter": {
        "description": "Query filter option for listing runs.",
        "properties": {
          "operand": {
            "description": "Parameter name to be used for filter. The allowed operands to query pipeline runs are PipelineName, RunStart, RunEnd and Status; to query activity runs are ActivityName, ActivityRunStart, ActivityRunEnd, ActivityType and Status, and to query trigger runs are TriggerName, TriggerRunTimestamp and Status.",
            "enum": [
              "PipelineName",
              "Status",
              "RunStart",
              "RunEnd",
              "ActivityName",
              "ActivityRunStart",
              "ActivityRunEnd",
              "ActivityType",
              "TriggerName",
              "TriggerRunTimestamp",
              "RunGroupId",
              "LatestOnly"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RunQueryFilterOperand"
            }
          },
          "operator": {
            "description": "Operator to be used for filter.",
            "enum": [
              "Equals",
              "NotEquals",
              "In",
              "NotIn"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RunQueryFilterOperator"
            }
          },
          "values": {
            "description": "List of filter values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operand",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "RunQueryOrderBy": {
        "description": "An object to provide order by options for listing runs.",
        "properties": {
          "order": {
            "description": "Sorting order of the parameter.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RunQueryOrder"
            }
          },
          "orderBy": {
            "description": "Parameter name to be used for order by. The allowed parameters to order by for pipeline runs are PipelineName, RunStart, RunEnd and Status; for activity runs are ActivityName, ActivityRunStart, ActivityRunEnd and Status; for trigger runs are TriggerName, TriggerRunTimestamp and Status.",
            "enum": [
              "RunStart",
              "RunEnd",
              "PipelineName",
              "Status",
              "ActivityName",
              "ActivityRunStart",
              "ActivityRunEnd",
              "TriggerName",
              "TriggerRunTimestamp"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RunQueryOrderByField"
            }
          }
        },
        "required": [
          "orderBy",
          "order"
        ],
        "type": "object"
      },
      "SecretBase": {
        "description": "The base definition of a secret type.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Type of the secret.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "SecureString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SecretBase"
          }
        ],
        "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
        "properties": {
          "value": {
            "description": "Value of secure string.",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SecureString"
      },
      "SsisObjectMetadataStatusResponse": {
        "description": "The status of the operation.",
        "properties": {
          "error": {
            "description": "The operation error message.",
            "type": "string"
          },
          "name": {
            "description": "The operation name.",
            "type": "string"
          },
          "properties": {
            "description": "The operation properties.",
            "type": "string"
          },
          "status": {
            "description": "The status of the operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubResource": {
        "description": "Azure Data Factory nested resource, which belongs to a factory.",
        "properties": {
          "etag": {
            "description": "Etag identifies change in the resource.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "SubResourceDebugResource": {
        "description": "Azure Data Factory nested debug resource.",
        "properties": {
          "name": {
            "description": "The resource name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TriggerFilterParameters": {
        "description": "Query parameters for triggers.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results. Null for first page.",
            "type": "string"
          },
          "parentTriggerName": {
            "description": "The name of the parent TumblingWindowTrigger to get the child rerun triggers",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TriggerListResponse": {
        "description": "A list of trigger resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of triggers.",
            "items": {
              "$ref": "#/components/schemas/TriggerResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TriggerPipelineReference": {
        "description": "Pipeline that needs to be triggered with the given parameters.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Pipeline parameters."
          },
          "pipelineReference": {
            "$ref": "#/components/schemas/PipelineReference",
            "description": "Pipeline reference."
          }
        },
        "type": "object"
      },
      "TriggerQueryResponse": {
        "description": "A query of triggers.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "type": "string"
          },
          "value": {
            "description": "List of triggers.",
            "items": {
              "$ref": "#/components/schemas/TriggerResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TriggerResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Trigger resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Trigger.json#/definitions/Trigger",
            "description": "Properties of the trigger."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "TriggerRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Trigger runs.",
        "properties": {
          "dependencyStatus": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Status of the upstream pipelines.",
            "readOnly": true,
            "type": "object"
          },
          "message": {
            "description": "Trigger error message.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
            "readOnly": true,
            "type": "object"
          },
          "runDimension": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Run dimension for which trigger was fired.",
            "readOnly": true,
            "type": "object"
          },
          "status": {
            "description": "Trigger run status.",
            "enum": [
              "Succeeded",
              "Failed",
              "Inprogress"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TriggerRunStatus"
            }
          },
          "triggerName": {
            "description": "Trigger name.",
            "readOnly": true,
            "type": "string"
          },
          "triggerRunId": {
            "description": "Trigger run id.",
            "readOnly": true,
            "type": "string"
          },
          "triggerRunTimestamp": {
            "description": "Trigger run start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "triggerType": {
            "description": "Trigger type.",
            "readOnly": true,
            "type": "string"
          },
          "triggeredPipelines": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of pipeline name and run Id triggered by the trigger run.",
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "TriggerRunsQueryResponse": {
        "description": "A list of trigger runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "type": "string"
          },
          "value": {
            "description": "List of trigger runs.",
            "items": {
              "$ref": "#/components/schemas/TriggerRun"
            },
            "type": "array",
            "x-ms-identifiers": [
              "triggerRunId"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TriggerSubscriptionOperationStatus": {
        "description": "Defines the response of a trigger subscription operation.",
        "properties": {
          "status": {
            "description": "Event Subscription Status.",
            "enum": [
              "Enabled",
              "Provisioning",
              "Deprovisioning",
              "Disabled",
              "Unknown"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EventSubscriptionStatus"
            }
          },
          "triggerName": {
            "description": "Trigger name.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateIntegrationRuntimeNodeRequest": {
        "description": "Update integration runtime node request.",
        "properties": {
          "concurrentJobsLimit": {
            "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateIntegrationRuntimeRequest": {
        "description": "Update integration runtime request.",
        "properties": {
          "autoUpdate": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAutoUpdate",
            "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189."
          },
          "updateDelayOffset": {
            "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAccessPolicy": {
        "description": "Get Data Plane read only token request definition.",
        "properties": {
          "accessResourcePath": {
            "description": "The resource path to get access relative to factory. Currently only empty string is supported which corresponds to the factory resource.",
            "type": "string"
          },
          "expireTime": {
            "description": "Expiration time for the token. Maximum duration for the token is eight hours and by default the token will expire in eight hours.",
            "type": "string"
          },
          "permissions": {
            "description": "The string with permissions for Data Plane access. Currently only 'r' is supported which grants read only access.",
            "type": "string"
          },
          "profileName": {
            "description": "The name of the profile. Currently only the default is supported. The default value is DefaultProfile.",
            "type": "string"
          },
          "startTime": {
            "description": "Start time for the token. If not specified the current time will be used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserAssignedIdentitiesDefinitionSpecification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/UserAssignedIdentitySpecification"
        },
        "description": "Definition of all user assigned identities for a factory.",
        "type": "object"
      },
      "UserAssignedIdentitySpecification": {
        "description": "Definition of a single user assigned identity for a factory.",
        "properties": {},
        "type": "object"
      },
      "VariableDefinitionSpecification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/VariableSpecification"
        },
        "description": "Definition of variable for a Pipeline.",
        "type": "object"
      },
      "VariableSpecification": {
        "description": "Definition of a single variable for a Pipeline.",
        "properties": {
          "defaultValue": {
            "description": "Default value of variable.",
            "type": "object"
          },
          "type": {
            "description": "Variable type.",
            "enum": [
              "String",
              "Bool",
              "Array"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "VariableType"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "managedPrivateEndpointListResponse": {
        "description": "A list of managed private endpoint resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of managed private endpoints.",
            "items": {
              "$ref": "#/components/schemas/ManagedPrivateEndpointResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}