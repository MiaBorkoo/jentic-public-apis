{
  "openapi": "3.0.0",
  "info": {
    "title": "DataFactoryManagementClient",
    "version": "2017-09-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datafactory/resource-manager/Microsoft.DataFactory/preview/2017-09-01-preview/datafactory.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataFactory/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "operations"
        ],
        "description": "Lists the available Azure Data Factory API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactoryListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Lists factories under the specified subscription.",
        "operationId": "Factories_List",
        "x-ms-examples": {
          "Factories_List": {
            "$ref": "./examples/Factories_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataFactory/locations/{locationId}/configureFactoryRepo": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "configureFactoryRepo"
        ],
        "description": "Updates a factory's repo information.",
        "operationId": "Factories_ConfigureFactoryRepo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactoryRepoUpdate"
              }
            }
          },
          "description": "Update factory repo request definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_ConfigureFactoryRepo": {
            "$ref": "./examples/Factories_ConfigureFactoryRepo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactoryListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Lists factories.",
        "operationId": "Factories_ListByResourceGroup",
        "x-ms-examples": {
          "Factories_ListByResourceGroup": {
            "$ref": "./examples/Factories_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Deletes a factory.",
        "operationId": "Factories_Delete",
        "x-ms-examples": {
          "Factories_Delete": {
            "$ref": "./examples/Factories_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Gets a factory.",
        "operationId": "Factories_Get",
        "x-ms-examples": {
          "Factories_Get": {
            "$ref": "./examples/Factories_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Updates a factory.",
        "operationId": "Factories_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactoryUpdateParameters"
              }
            }
          },
          "description": "The parameters for updating a factory.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_Update": {
            "$ref": "./examples/Factories_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Factory"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "factories"
        ],
        "description": "Creates or updates a factory.",
        "operationId": "Factories_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Factory"
              }
            }
          },
          "description": "Factory resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Factories_CreateOrUpdate": {
            "$ref": "./examples/Factories_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/cancelpipelinerun/{runId}": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Pipeline run has been canceled successfully. "
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Cancel a pipeline run by its run ID.",
        "operationId": "Factories_CancelPipelineRun",
        "x-ms-examples": {
          "Factories_CancelPipelineRun": {
            "$ref": "./examples/Factories_CancelPipelineRun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Lists datasets.",
        "operationId": "Datasets_ListByFactory",
        "x-ms-examples": {
          "Datasets_ListByFactory": {
            "$ref": "./examples/Datasets_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/datasets/{datasetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Deletes a dataset.",
        "operationId": "Datasets_Delete",
        "x-ms-examples": {
          "Datasets_Delete": {
            "$ref": "./examples/Datasets_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Gets a dataset.",
        "operationId": "Datasets_Get",
        "x-ms-examples": {
          "Datasets_Get": {
            "$ref": "./examples/Datasets_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/datasetName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the dataset entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "datasets"
        ],
        "description": "Creates or updates a dataset.",
        "operationId": "Datasets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetResource"
              }
            }
          },
          "description": "Dataset resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Datasets_Create": {
            "$ref": "./examples/Datasets_Create.json"
          },
          "Datasets_Update": {
            "$ref": "./examples/Datasets_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Lists integration runtimes.",
        "operationId": "IntegrationRuntimes_ListByFactory",
        "x-ms-examples": {
          "IntegrationRuntimes_ListByFactory": {
            "$ref": "./examples/IntegrationRuntimes_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from DELETE integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Deletes an integration runtime.",
        "operationId": "IntegrationRuntimes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimes_Delete": {
            "$ref": "./examples/IntegrationRuntimes_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from GET integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets an integration runtime.",
        "operationId": "IntegrationRuntimes_Get",
        "x-ms-examples": {
          "IntegrationRuntimes_Get": {
            "$ref": "./examples/IntegrationRuntimes_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Updates an integration runtime.",
        "operationId": "IntegrationRuntimes_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationRuntimeRequest"
              }
            }
          },
          "description": "The parameters for updating an integration runtime.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Update": {
            "$ref": "./examples/IntegrationRuntimes_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from PUT integration runtime operation."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Creates or updates an integration runtime.",
        "operationId": "IntegrationRuntimes_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationRuntimeResource"
              }
            }
          },
          "description": "Integration runtime resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_Create": {
            "$ref": "./examples/IntegrationRuntimes_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getConnectionInfo": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeConnectionInfo"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets the on-premises integration runtime connection information for encrypting the on-premises data source credentials.",
        "operationId": "IntegrationRuntimes_GetConnectionInfo",
        "x-ms-examples": {
          "IntegrationRuntimes_GetConnectionInfo": {
            "$ref": "./examples/IntegrationRuntimes_GetConnectionInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/getStatus": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Gets detailed status information for an integration runtime.",
        "operationId": "IntegrationRuntimes_GetStatus",
        "x-ms-examples": {
          "IntegrationRuntimes_GetStatus": {
            "$ref": "./examples/IntegrationRuntimes_GetStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/listAuthKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Retrieves the authentication keys for an integration runtime.",
        "operationId": "IntegrationRuntimes_ListAuthKeys",
        "x-ms-examples": {
          "IntegrationRuntimes_ListAuthKeys": {
            "$ref": "./examples/IntegrationRuntimes_ListAuthKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/monitoringData": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeMonitoringData"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Get the integration runtime monitoring data, which includes the monitor data for all the nodes under this integration runtime.",
        "operationId": "IntegrationRuntimes_GetMonitoringData",
        "x-ms-examples": {
          "IntegrationRuntimes_GetMonitoringData": {
            "$ref": "./examples/IntegrationRuntimes_GetMonitoringData.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Deletes a self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_Delete",
        "x-ms-examples": {
          "IntegrationRuntimesNodes_Delete": {
            "$ref": "./examples/IntegrationRuntimeNodes_Delete.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/SelfHostedIntegrationRuntimeNode"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Updates a self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIntegrationRuntimeNodeRequest"
              }
            }
          },
          "description": "The parameters for updating an integration runtime node.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimeNodes_Update": {
            "$ref": "./examples/IntegrationRuntimeNodes_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/nodes/{nodeName}/ipAddress": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/nodeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeNodeIpAddress"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimeNodes"
        ],
        "description": "Get the IP address of self-hosted integration runtime node.",
        "operationId": "IntegrationRuntimeNodes_GetIpAddress",
        "x-ms-examples": {
          "IntegrationRuntimeNodes_GetIpAddress": {
            "$ref": "./examples/IntegrationRuntimeNodes_GetIpAddress.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/regenerateAuthKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAuthKeys"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Regenerates the authentication key for an integration runtime.",
        "operationId": "IntegrationRuntimes_RegenerateAuthKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeRegenerateKeyParameters"
              }
            }
          },
          "description": "The parameters for regenerating integration runtime authentication key.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_RegenerateAuthKey": {
            "$ref": "./examples/IntegrationRuntimes_RegenerateAuthKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/removeNode": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Remove a node from integration runtime.",
        "operationId": "IntegrationRuntimes_RemoveNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeRemoveNodeRequest"
              }
            }
          },
          "description": "The name of the node to be removed from an integration runtime.",
          "required": true
        },
        "x-ms-examples": {
          "IntegrationRuntimes_RemoveNode": {
            "$ref": "./examples/IntegrationRuntimes_RemoveNode.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Starts a ManagedReserved type integration runtime.",
        "operationId": "IntegrationRuntimes_Start",
        "x-ms-examples": {
          "IntegrationRuntimes_Start": {
            "$ref": "./examples/IntegrationRuntimes_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Stops a ManagedReserved type integration runtime.",
        "operationId": "IntegrationRuntimes_Stop",
        "x-ms-examples": {
          "IntegrationRuntimes_Stop": {
            "$ref": "./examples/IntegrationRuntimes_Stop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/syncCredentials": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Force the integration runtime to synchronize credentials across integration runtime nodes, and this will override the credentials across all worker nodes with those available on the dispatcher node. If you already have the latest credential backup file, you should manually import it (preferred) on any self-hosted integration runtime node than using this API directly.",
        "operationId": "IntegrationRuntimes_SyncCredentials",
        "x-ms-examples": {
          "IntegrationRuntimes_SyncCredentials": {
            "$ref": "./examples/IntegrationRuntimes_SyncCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}/upgrade": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/integrationRuntimeName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "integrationRuntimes"
        ],
        "description": "Upgrade self-hosted integration runtime to latest version if availability.",
        "operationId": "IntegrationRuntimes_Upgrade",
        "x-ms-examples": {
          "IntegrationRuntimes_Upgrade": {
            "$ref": "./examples/IntegrationRuntimes_Upgrade.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Lists linked services.",
        "operationId": "LinkedServices_ListByFactory",
        "x-ms-examples": {
          "LinkedServices_ListByFactory": {
            "$ref": "./examples/LinkedServices_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/linkedservices/{linkedServiceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Deletes a linked service.",
        "operationId": "LinkedServices_Delete",
        "x-ms-examples": {
          "LinkedServices_Delete": {
            "$ref": "./examples/LinkedServices_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Gets a linked service.",
        "operationId": "LinkedServices_Get",
        "x-ms-examples": {
          "LinkedServices_Get": {
            "$ref": "./examples/LinkedServices_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/linkedServiceName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the linkedService entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedServiceResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "linkedServices"
        ],
        "description": "Creates or updates a linked service.",
        "operationId": "LinkedServices_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedServiceResource"
              }
            }
          },
          "description": "Linked service resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "LinkedServices_Create": {
            "$ref": "./examples/LinkedServices_Create.json"
          },
          "LinkedServices_Update": {
            "$ref": "./examples/LinkedServices_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRunQueryResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Query pipeline runs in the factory based on input filter conditions.",
        "operationId": "PipelineRuns_QueryByFactory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineRunFilterParameters"
              }
            }
          },
          "description": "Parameters to filter the pipeline run.",
          "required": true
        },
        "x-ms-examples": {
          "PipelineRuns_QueryByFactory": {
            "$ref": "./examples/PipelineRuns_QueryByFactory.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineRun"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelineruns"
        ],
        "description": "Get a pipeline run by its run ID.",
        "operationId": "PipelineRuns_Get",
        "x-ms-examples": {
          "PipelineRuns_Get": {
            "$ref": "./examples/PipelineRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelineruns/{runId}/activityruns": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/runId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The start time of activity runs in ISO8601 format.",
            "in": "query",
            "name": "startTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The end time of activity runs in ISO8601 format.",
            "in": "query",
            "name": "endTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The status of the pipeline run.",
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the activity.",
            "in": "query",
            "name": "activityName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The linked service name.",
            "in": "query",
            "name": "linkedServiceName",
            "required": false,
            "schema": {
              "maxLength": 260,
              "minLength": 1,
              "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityRunsListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "activityruns"
        ],
        "description": "List activity runs based on input filter conditions.",
        "operationId": "ActivityRuns_ListByPipelineRun",
        "x-ms-examples": {
          "ActivityRuns_ListByPipelineRun": {
            "$ref": "./examples/ActivityRuns_ListByPipelineRun.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Lists pipelines.",
        "operationId": "Pipelines_ListByFactory",
        "x-ms-examples": {
          "Pipelines_ListByFactory": {
            "$ref": "./examples/Pipelines_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Deletes a pipeline.",
        "operationId": "Pipelines_Delete",
        "x-ms-examples": {
          "Pipelines_Delete": {
            "$ref": "./examples/Pipelines_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Gets a pipeline.",
        "operationId": "Pipelines_Get",
        "x-ms-examples": {
          "Pipelines_Get": {
            "$ref": "./examples/Pipelines_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the pipeline entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PipelineResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Creates or updates a pipeline.",
        "operationId": "Pipelines_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PipelineResource"
              }
            }
          },
          "description": "Pipeline resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Pipelines_Create": {
            "$ref": "./examples/Pipelines_Create.json"
          },
          "Pipelines_Update": {
            "$ref": "./examples/Pipelines_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/pipelines/{pipelineName}/createRun": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/pipelineName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRunResponse"
                }
              }
            },
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "pipelines"
        ],
        "description": "Creates a run of a pipeline.",
        "operationId": "Pipelines_CreateRun",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParameterValueSpecification"
              }
            }
          },
          "description": "Parameters of the pipeline run."
        },
        "x-ms-examples": {
          "Pipelines_CreateRun": {
            "$ref": "./examples/Pipelines_CreateRun.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Lists triggers.",
        "operationId": "Triggers_ListByFactory",
        "x-ms-examples": {
          "Triggers_ListByFactory": {
            "$ref": "./examples/Triggers_ListByFactory.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "204": {
            "description": "No Content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Deletes a trigger.",
        "operationId": "Triggers_Delete",
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "trigger"
        ],
        "description": "Gets a trigger.",
        "operationId": "Triggers_Get",
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "ETag of the trigger entity.  Should only be specified for update, for which it should match existing entity or can be * for unconditional update.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerResource"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Creates or updates a trigger.",
        "operationId": "Triggers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TriggerResource"
              }
            }
          },
          "description": "Trigger resource definition.",
          "required": true
        },
        "x-ms-examples": {
          "Triggers_Create": {
            "$ref": "./examples/Triggers_Create.json"
          },
          "Triggers_Update": {
            "$ref": "./examples/Triggers_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been started successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Starts a trigger.",
        "operationId": "Triggers_Start",
        "x-ms-examples": {
          "Triggers_Start": {
            "$ref": "./examples/Triggers_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger has been stopped successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "Stops a trigger.",
        "operationId": "Triggers_Stop",
        "x-ms-examples": {
          "Triggers_Stop": {
            "$ref": "./examples/Triggers_Stop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/triggers/{triggerName}/triggerruns": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/factoryName"
          },
          {
            "$ref": "#/components/parameters/triggerName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Start time for trigger runs.",
            "in": "query",
            "name": "startTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "End time for trigger runs.",
            "in": "query",
            "name": "endTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerRunListResponse"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error response received from the Azure Data Factory service."
          }
        },
        "tags": [
          "triggers"
        ],
        "description": "List trigger runs.",
        "operationId": "Triggers_ListRuns",
        "x-ms-examples": {
          "Triggers_ListRuns": {
            "$ref": "./examples/Triggers_ListRuns.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "The API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "datasetName": {
        "description": "The dataset name.",
        "in": "path",
        "name": "datasetName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "factoryName": {
        "description": "The factory name.",
        "in": "path",
        "name": "factoryName",
        "required": true,
        "schema": {
          "maxLength": 63,
          "minLength": 3,
          "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "integrationRuntimeName": {
        "description": "The integration runtime name.",
        "in": "path",
        "name": "integrationRuntimeName",
        "required": true,
        "schema": {
          "maxLength": 63,
          "minLength": 3,
          "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "linkedServiceName": {
        "description": "The linked service name.",
        "in": "path",
        "name": "linkedServiceName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "locationId": {
        "description": "The location identifier.",
        "in": "path",
        "name": "locationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "nodeName": {
        "description": "The integration runtime node name.",
        "in": "path",
        "name": "nodeName",
        "required": true,
        "schema": {
          "maxLength": 150,
          "minLength": 1,
          "pattern": "^[a-z0-9A-Z][a-z0-9A-Z_-]{0,149}$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "pipelineName": {
        "description": "The pipeline name.",
        "in": "path",
        "name": "pipelineName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "referencePipelineRunId": {
        "description": "The pipeline run identifier.",
        "in": "path",
        "name": "referencePipelineRunId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupName": {
        "description": "The resource group name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "runId": {
        "description": "The pipeline run identifier.",
        "in": "path",
        "name": "runId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "The subscription identifier.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "triggerName": {
        "description": "The trigger name.",
        "in": "path",
        "name": "triggerName",
        "required": true,
        "schema": {
          "maxLength": 260,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9_][^<>*#.%&:\\\\+?/]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ActivityRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Information about an activity run in a pipeline.",
        "properties": {
          "activityName": {
            "description": "The name of the activity.",
            "readOnly": true,
            "type": "string"
          },
          "activityRunEnd": {
            "description": "The end time of the activity run in 'ISO 8601' format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "activityRunId": {
            "description": "The id of the activity run.",
            "readOnly": true,
            "type": "string"
          },
          "activityRunStart": {
            "description": "The start time of the activity run in 'ISO 8601' format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "activityType": {
            "description": "The type of the activity.",
            "readOnly": true,
            "type": "string"
          },
          "durationInMs": {
            "description": "The duration of the activity run.",
            "readOnly": true,
            "type": "integer"
          },
          "error": {
            "description": "The error if any from the activity run.",
            "readOnly": true,
            "type": "object"
          },
          "input": {
            "description": "The input for the activity.",
            "readOnly": true,
            "type": "object"
          },
          "linkedServiceName": {
            "description": "The name of the compute linked service.",
            "readOnly": true,
            "type": "string"
          },
          "output": {
            "description": "The output for the activity.",
            "readOnly": true,
            "type": "object"
          },
          "pipelineName": {
            "description": "The name of the pipeline.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineRunId": {
            "description": "The id of the pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the activity run.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActivityRunsListResponse": {
        "description": "A list activity runs.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of activity runs.",
            "items": {
              "$ref": "#/components/schemas/ActivityRun"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AzureKeyVaultSecretReference": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SecretBase"
          }
        ],
        "description": "Azure Key Vault secret reference.",
        "properties": {
          "secretName": {
            "description": "The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).",
            "type": "object"
          },
          "secretVersion": {
            "description": "The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).",
            "type": "object"
          },
          "store": {
            "$ref": "#/components/schemas/LinkedServiceReference",
            "description": "The Azure Key Vault linked service reference."
          }
        },
        "required": [
          "store",
          "secretName"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AzureKeyVaultSecret"
      },
      "CreateRunResponse": {
        "description": "Response body with a run identifier.",
        "properties": {
          "runId": {
            "description": "Identifier of a run.",
            "type": "string"
          }
        },
        "required": [
          "runId"
        ],
        "type": "object"
      },
      "DatasetListResponse": {
        "description": "A list of dataset resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of datasets.",
            "items": {
              "$ref": "#/components/schemas/DatasetResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DatasetReference": {
        "description": "Dataset reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for dataset."
          },
          "referenceName": {
            "description": "Reference dataset name.",
            "type": "string"
          },
          "type": {
            "description": "Dataset reference type.",
            "enum": [
              "DatasetReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "DatasetResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Dataset resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Dataset.json#/definitions/Dataset",
            "description": "Dataset properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ErrorResponse": {
        "description": "The object that defines the structure of an Azure Data Factory response.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "details": {
            "description": "Array with additional error details.",
            "items": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "type": "array"
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "target": {
            "description": "Property name/path in request associated with error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "Expression": {
        "description": "Azure Data Factory expression definition.",
        "properties": {
          "type": {
            "description": "Expression type.",
            "enum": [
              "Expression"
            ],
            "type": "string"
          },
          "value": {
            "description": "Expression value.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      },
      "Factory": {
        "additionalProperties": {
          "type": "object"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Factory resource type.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/FactoryIdentity",
            "description": "Managed service identity of the factory."
          },
          "properties": {
            "$ref": "#/components/schemas/FactoryProperties",
            "description": "Properties of the factory.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "FactoryIdentity": {
        "description": "Identity properties of the factory resource.",
        "properties": {
          "principalId": {
            "description": "The principal id of the identity.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The client tenant id of the identity.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type. Currently the only supported type is 'SystemAssigned'.",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FactoryIdentityType"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "FactoryListResponse": {
        "description": "A list of factory resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of factories.",
            "items": {
              "$ref": "#/components/schemas/Factory"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "FactoryProperties": {
        "description": "Factory resource properties.",
        "properties": {
          "createTime": {
            "description": "Time the factory was created in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Factory provisioning state, example Succeeded.",
            "readOnly": true,
            "type": "string"
          },
          "version": {
            "description": "Version of the factory.",
            "readOnly": true,
            "type": "string"
          },
          "vstsConfiguration": {
            "$ref": "#/components/schemas/FactoryVSTSConfiguration",
            "description": "VSTS repo information of the factory."
          }
        },
        "type": "object"
      },
      "FactoryRepoUpdate": {
        "description": "Factory's VSTS repo information.",
        "properties": {
          "factoryResourceId": {
            "description": "The factory resource id.",
            "type": "string"
          },
          "resourceGroupName": {
            "description": "The resource group name.",
            "type": "string"
          },
          "vstsConfiguration": {
            "$ref": "#/components/schemas/FactoryVSTSConfiguration",
            "description": "VSTS repo information of the factory."
          }
        },
        "type": "object"
      },
      "FactoryUpdateParameters": {
        "description": "Parameters for updating a factory resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "identity": {
            "$ref": "#/components/schemas/FactoryIdentity",
            "description": "Managed service identity of the factory."
          }
        },
        "type": "object"
      },
      "FactoryVSTSConfiguration": {
        "description": "Factory's VSTS repo information.",
        "properties": {
          "accountName": {
            "description": "VSTS account name.",
            "type": "string"
          },
          "collaborationBranch": {
            "description": "VSTS collaboration branch.",
            "type": "string"
          },
          "lastCommitId": {
            "description": "VSTS last commit id.",
            "type": "string"
          },
          "projectName": {
            "description": "VSTS project name.",
            "type": "string"
          },
          "repositoryName": {
            "description": "VSTS repository name.",
            "type": "string"
          },
          "rootFolder": {
            "description": "VSTS root folder.",
            "type": "string"
          },
          "tenantId": {
            "description": "VSTS tenant id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntegrationRuntimeListResponse": {
        "description": "A list of integration runtime resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of integration runtimes.",
            "items": {
              "$ref": "#/components/schemas/IntegrationRuntimeResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IntegrationRuntimeReference": {
        "description": "Integration runtime reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for integration runtime."
          },
          "referenceName": {
            "description": "Reference integration runtime name.",
            "type": "string"
          },
          "type": {
            "description": "Type of integration runtime.",
            "enum": [
              "IntegrationRuntimeReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "IntegrationRuntimeResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Integration runtime resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntime",
            "description": "Integration runtime properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationRuntimeStatusListResponse": {
        "description": "A list of integration runtime status.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of integration runtime status.",
            "items": {
              "$ref": "#/components/schemas/IntegrationRuntimeStatusResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IntegrationRuntimeStatusResponse": {
        "description": "Integration runtime status response.",
        "properties": {
          "name": {
            "description": "The integration runtime name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeStatus",
            "description": "Integration runtime properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "LinkedServiceListResponse": {
        "description": "A list of linked service resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of linked services.",
            "items": {
              "$ref": "#/components/schemas/LinkedServiceResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "LinkedServiceReference": {
        "description": "Linked service reference type.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Arguments for LinkedService."
          },
          "referenceName": {
            "description": "Reference LinkedService name.",
            "type": "string"
          },
          "type": {
            "description": "Linked service reference type.",
            "enum": [
              "LinkedServiceReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "LinkedServiceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Linked service resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/LinkedService.json#/definitions/LinkedService",
            "description": "Properties of linked service."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "Azure Data Factory API operation definition.",
        "properties": {
          "display": {
            "description": "Metadata associated with the operation.",
            "properties": {
              "description": {
                "description": "The description of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "The type of operation: get, read, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "The name of the provider.",
                "type": "string"
              },
              "resource": {
                "description": "The name of the resource type on which the operation is performed.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          },
          "origin": {
            "description": "The intended executor of the operation.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationProperties",
            "description": "Additional details about the operation.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "OperationListResponse": {
        "description": "A list of operations that can be performed by the Data Factory service.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of Data Factory operations supported by the Data Factory resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationLogSpecification": {
        "description": "Details about an operation related to logs.",
        "properties": {
          "blobDuration": {
            "description": "Blobs created in the customer storage account, per hour.",
            "type": "string"
          },
          "displayName": {
            "description": "Localized display name.",
            "type": "string"
          },
          "name": {
            "description": "The name of the log category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetricAvailability": {
        "description": "Defines how often data for a metric becomes available.",
        "properties": {
          "blobDuration": {
            "description": "Blob created in the customer storage account, per hour.",
            "type": "string"
          },
          "timeGrain": {
            "description": "The granularity for the metric.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetricSpecification": {
        "description": "Details about an operation related to metrics.",
        "properties": {
          "aggregationType": {
            "description": "The type of metric aggregation.",
            "type": "string"
          },
          "availabilities": {
            "description": "Defines how often data for metrics becomes available.",
            "items": {
              "$ref": "#/components/schemas/OperationMetricAvailability"
            },
            "type": "array"
          },
          "displayDescription": {
            "description": "The description of the metric.",
            "type": "string"
          },
          "displayName": {
            "description": "Localized display name of the metric.",
            "type": "string"
          },
          "enableRegionalMdmAccount": {
            "description": "Whether or not the service is using regional MDM accounts.",
            "type": "string"
          },
          "name": {
            "description": "The name of the metric.",
            "type": "string"
          },
          "sourceMdmAccount": {
            "description": "The name of the MDM account.",
            "type": "string"
          },
          "sourceMdmNamespace": {
            "description": "The name of the MDM namespace.",
            "type": "string"
          },
          "unit": {
            "description": "The unit that the metric is measured in.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationProperties": {
        "description": "Additional details about an operation.",
        "properties": {
          "serviceSpecification": {
            "$ref": "#/components/schemas/OperationServiceSpecification",
            "description": "Details about a service operation."
          }
        },
        "type": "object",
        "x-ms-client-flatten": true
      },
      "OperationServiceSpecification": {
        "description": "Details about a service operation.",
        "properties": {
          "logSpecifications": {
            "description": "Details about operations related to logs.",
            "items": {
              "$ref": "#/components/schemas/OperationLogSpecification"
            },
            "type": "array"
          },
          "metricSpecifications": {
            "description": "Details about operations related to metrics.",
            "items": {
              "$ref": "#/components/schemas/OperationMetricSpecification"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ParameterDefinitionSpecification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ParameterSpecification"
        },
        "description": "Definition of all parameters for an entity.",
        "type": "object"
      },
      "ParameterSpecification": {
        "description": "Definition of a single parameter for an entity.",
        "properties": {
          "defaultValue": {
            "description": "Default value of parameter.",
            "type": "object"
          },
          "type": {
            "description": "Parameter type.",
            "enum": [
              "Object",
              "String",
              "Int",
              "Float",
              "Bool",
              "Array",
              "SecureString"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ParameterType"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ParameterValueSpecification": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "An object mapping parameter names to argument values.",
        "type": "object"
      },
      "PipelineListResponse": {
        "description": "A list of pipeline resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of pipelines.",
            "items": {
              "$ref": "#/components/schemas/PipelineResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PipelineReference": {
        "description": "Pipeline reference type.",
        "properties": {
          "name": {
            "description": "Reference name.",
            "type": "string"
          },
          "referenceName": {
            "description": "Reference pipeline name.",
            "type": "string"
          },
          "type": {
            "description": "Pipeline reference type.",
            "enum": [
              "PipelineReference"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "referenceName"
        ],
        "type": "object"
      },
      "PipelineResource": {
        "additionalProperties": {
          "type": "object"
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Pipeline resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Pipeline.json#/definitions/Pipeline",
            "description": "Properties of the pipeline.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "PipelineRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Information about a pipeline run.",
        "properties": {
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The full or partial list of parameter name, value pair used in the pipeline run.",
            "readOnly": true,
            "type": "object"
          },
          "durationInMs": {
            "description": "The duration of a pipeline run.",
            "readOnly": true,
            "type": "integer"
          },
          "invokedBy": {
            "$ref": "#/components/schemas/PipelineRunInvokedBy",
            "description": "Entity that started the pipeline run.",
            "readOnly": true
          },
          "lastUpdated": {
            "description": "The last updated timestamp for the pipeline run event in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The message from a pipeline run.",
            "readOnly": true,
            "type": "string"
          },
          "pipelineName": {
            "description": "The pipeline name.",
            "readOnly": true,
            "type": "string"
          },
          "runEnd": {
            "description": "The end time of a pipeline run in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "runId": {
            "description": "Identifier of a run.",
            "readOnly": true,
            "type": "string"
          },
          "runStart": {
            "description": "The start time of a pipeline run in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of a pipeline run.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PipelineRunFilterParameters": {
        "description": "Query parameters for listing pipeline runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results. Null for first page.",
            "type": "string"
          },
          "filters": {
            "description": "List of filters.",
            "items": {
              "$ref": "#/components/schemas/PipelineRunQueryFilter"
            },
            "type": "array"
          },
          "lastUpdatedAfter": {
            "description": "The time at or after which the pipeline run event was updated in 'ISO 8601' format.",
            "format": "date-time",
            "type": "string"
          },
          "lastUpdatedBefore": {
            "description": "The time at or before which the pipeline run event was updated in 'ISO 8601' format.",
            "format": "date-time",
            "type": "string"
          },
          "orderBy": {
            "description": "List of OrderBy option.",
            "items": {
              "$ref": "#/components/schemas/PipelineRunQueryOrderBy"
            },
            "type": "array"
          }
        },
        "required": [
          "lastUpdatedAfter",
          "lastUpdatedBefore"
        ],
        "type": "object"
      },
      "PipelineRunInvokedBy": {
        "description": "Provides entity name and id that started the pipeline run.",
        "properties": {
          "id": {
            "description": "The ID of the entity that started the run.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the entity that started the pipeline run.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PipelineRunQueryFilter": {
        "description": "Query filter option for listing pipeline runs.",
        "properties": {
          "operand": {
            "description": "Parameter name to be used for filter.",
            "enum": [
              "PipelineName",
              "Status",
              "RunStart",
              "RunEnd"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PipelineRunQueryFilterOperand"
            }
          },
          "operator": {
            "description": "Operator to be used for filter.",
            "enum": [
              "Equals",
              "NotEquals",
              "In",
              "NotIn"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PipelineRunQueryFilterOperator"
            }
          },
          "values": {
            "description": "List of filter values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "operand",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "PipelineRunQueryOrderBy": {
        "description": "An object to provide order by options for listing pipeline runs.",
        "properties": {
          "order": {
            "description": "Sorting order of the parameter.",
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PipelineRunQueryOrder"
            }
          },
          "orderBy": {
            "description": "Parameter name to be used for order by.",
            "enum": [
              "RunStart",
              "RunEnd"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PipelineRunQueryOrderByField"
            }
          }
        },
        "required": [
          "orderBy",
          "order"
        ],
        "type": "object"
      },
      "PipelineRunQueryResponse": {
        "description": "A list pipeline runs.",
        "properties": {
          "continuationToken": {
            "description": "The continuation token for getting the next page of results, if any remaining results exist, null otherwise.",
            "type": "string"
          },
          "value": {
            "description": "List of pipeline runs.",
            "items": {
              "$ref": "#/components/schemas/PipelineRun"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Resource": {
        "description": "Azure Data Factory top-level resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The resource location.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "SecretBase": {
        "description": "The base definition of a secret type.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Type of the secret.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "SecureString": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SecretBase"
          }
        ],
        "description": "Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.",
        "properties": {
          "value": {
            "description": "Value of secure string.",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SecureString"
      },
      "SubResource": {
        "description": "Azure Data Factory nested resource, which belongs to a factory.",
        "properties": {
          "etag": {
            "description": "Etag identifies change in the resource.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "TriggerListResponse": {
        "description": "A list of trigger resources.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of triggers.",
            "items": {
              "$ref": "#/components/schemas/TriggerResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TriggerPipelineReference": {
        "description": "Pipeline that needs to be triggered with the given parameters.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/ParameterValueSpecification",
            "description": "Pipeline parameters."
          },
          "pipelineReference": {
            "$ref": "#/components/schemas/PipelineReference",
            "description": "Pipeline reference."
          }
        },
        "type": "object"
      },
      "TriggerResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Trigger resource type.",
        "properties": {
          "properties": {
            "$ref": "./entityTypes/Trigger.json#/definitions/Trigger",
            "description": "Properties of the trigger."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "TriggerRun": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Trigger runs.",
        "properties": {
          "message": {
            "description": "Trigger error message.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of property name and value related to trigger run. Name, value pair depends on type of trigger.",
            "readOnly": true,
            "type": "object"
          },
          "status": {
            "description": "Trigger run status.",
            "enum": [
              "Succeeded",
              "Failed",
              "Inprogress"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TriggerRunStatus"
            }
          },
          "triggerName": {
            "description": "Trigger name.",
            "readOnly": true,
            "type": "string"
          },
          "triggerRunId": {
            "description": "Trigger run id.",
            "readOnly": true,
            "type": "string"
          },
          "triggerRunTimestamp": {
            "description": "Trigger run start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "triggerType": {
            "description": "Trigger type.",
            "readOnly": true,
            "type": "string"
          },
          "triggeredPipelines": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "List of pipeline name and run Id triggered by the trigger run.",
            "readOnly": true,
            "type": "object"
          }
        },
        "type": "object"
      },
      "TriggerRunListResponse": {
        "description": "A list of trigger runs.",
        "properties": {
          "nextLink": {
            "description": "The link to the next page of results, if any remaining results exist.",
            "type": "string"
          },
          "value": {
            "description": "List of trigger runs.",
            "items": {
              "$ref": "#/components/schemas/TriggerRun"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "UpdateIntegrationRuntimeNodeRequest": {
        "description": "Update integration runtime node request.",
        "properties": {
          "concurrentJobsLimit": {
            "description": "The number of concurrent jobs permitted to run on the integration runtime node. Values between 1 and maxConcurrentJobs(inclusive) are allowed.",
            "minimum": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UpdateIntegrationRuntimeRequest": {
        "description": "Update integration runtime request.",
        "properties": {
          "autoUpdate": {
            "$ref": "./entityTypes/IntegrationRuntime.json#/definitions/IntegrationRuntimeAutoUpdate",
            "description": "Enables or disables the auto-update feature of the self-hosted integration runtime. See https://go.microsoft.com/fwlink/?linkid=854189."
          },
          "updateDelayOffset": {
            "description": "The time offset (in hours) in the day, e.g., PT03H is 3 hours. The integration runtime auto update will happen on that time.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}