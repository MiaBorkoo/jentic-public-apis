{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2018-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-06-01/routeFilter.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of Route Filter resources."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Gets all route filters in a subscription.",
        "operationId": "RouteFilters_List",
        "x-ms-examples": {
          "RouteFilterList": {
            "$ref": "./examples/RouteFilterList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of Route Filter resources."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Gets all route filters in a resource group.",
        "operationId": "RouteFilters_ListByResourceGroup",
        "x-ms-examples": {
          "RouteFilterListByResourceGroup": {
            "$ref": "./examples/RouteFilterListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Deletes the specified route filter.",
        "operationId": "RouteFilters_Delete",
        "x-ms-examples": {
          "RouteFilterDelete": {
            "$ref": "./examples/RouteFilterDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Expands referenced express route bgp peering resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilter"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting Route Filter resource."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Gets the specified route filter.",
        "operationId": "RouteFilters_Get",
        "x-ms-examples": {
          "RouteFilterGet": {
            "$ref": "./examples/RouteFilterGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilter"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting Route Filter resource."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Updates a route filter in a specified resource group.",
        "operationId": "RouteFilters_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRouteFilter"
              }
            }
          },
          "description": "Parameters supplied to the update route filter operation.",
          "required": true
        },
        "x-ms-examples": {
          "RouteFilterUpdate": {
            "$ref": "./examples/RouteFilterUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilter"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting Route Filter resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilter"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting Route Filter resource."
          }
        },
        "tags": [
          "RouteFilters"
        ],
        "description": "Creates or updates a route filter in a specified resource group.",
        "operationId": "RouteFilters_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteFilter"
              }
            }
          },
          "description": "Parameters supplied to the create or update route filter operation.",
          "required": true
        },
        "x-ms-examples": {
          "RouteFilterCreate": {
            "$ref": "./examples/RouteFilterCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterRuleListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of Route Filter Rule resources."
          }
        },
        "tags": [
          "RouteFilterRules"
        ],
        "description": "Gets all RouteFilterRules in a route filter.",
        "operationId": "RouteFilterRules_ListByRouteFilter",
        "x-ms-examples": {
          "RouteFilterRuleListByRouteFilter": {
            "$ref": "./examples/RouteFilterRuleListByRouteFilter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Rule was deleted or not found."
          }
        },
        "tags": [
          "RouteFilterRules"
        ],
        "description": "Deletes the specified rule from a route filter.",
        "operationId": "RouteFilterRules_Delete",
        "x-ms-examples": {
          "RouteFilterRuleDelete": {
            "$ref": "./examples/RouteFilterRuleDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterRule"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting Route Filter Rule resource."
          }
        },
        "tags": [
          "RouteFilterRules"
        ],
        "description": "Gets the specified rule from a route filter.",
        "operationId": "RouteFilterRules_Get",
        "x-ms-examples": {
          "RouteFilterRuleGet": {
            "$ref": "./examples/RouteFilterRuleGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterRule"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting Route Filter Rule resource."
          }
        },
        "tags": [
          "RouteFilterRules"
        ],
        "description": "Updates a route in the specified route filter.",
        "operationId": "RouteFilterRules_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRouteFilterRule"
              }
            }
          },
          "description": "Parameters supplied to the update route filter rule operation.",
          "required": true
        },
        "x-ms-examples": {
          "RouteFilterRuleUpdate": {
            "$ref": "./examples/RouteFilterRuleUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter.",
            "in": "path",
            "name": "routeFilterName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route filter rule.",
            "in": "path",
            "name": "ruleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterRule"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting Route Filter Rule resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteFilterRule"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting Route Filter Rule resource."
          }
        },
        "tags": [
          "RouteFilterRules"
        ],
        "description": "Creates or updates a route in the specified route filter.",
        "operationId": "RouteFilterRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteFilterRule"
              }
            }
          },
          "description": "Parameters supplied to the create or update route filter rule operation.",
          "required": true
        },
        "x-ms-examples": {
          "RouteFilterRuleCreate": {
            "$ref": "./examples/RouteFilterRuleCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "schemas": {
      "PatchRouteFilter": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Route Filter Resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RouteFilterPropertiesFormat",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PatchRouteFilterRule": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Route Filter Rule Resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RouteFilterRulePropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RouteFilter": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Route Filter Resource.",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RouteFilterPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "RouteFilterListResult": {
        "description": "Response for the ListRouteFilters API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets a list of route filters in a resource group.",
            "items": {
              "$ref": "#/components/schemas/RouteFilter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RouteFilterPropertiesFormat": {
        "description": "Route Filter Resource",
        "properties": {
          "peerings": {
            "description": "A collection of references to express route circuit peerings.",
            "items": {
              "$ref": "./expressRouteCircuit.json#/definitions/ExpressRouteCircuitPeering"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "Collection of RouteFilterRules contained within a route filter.",
            "items": {
              "$ref": "#/components/schemas/RouteFilterRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RouteFilterRule": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Route Filter Rule Resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RouteFilterRulePropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RouteFilterRuleListResult": {
        "description": "Response for the ListRouteFilterRules API service call",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets a list of RouteFilterRules in a resource group.",
            "items": {
              "$ref": "#/components/schemas/RouteFilterRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RouteFilterRulePropertiesFormat": {
        "description": "Route Filter Rule Resource",
        "properties": {
          "access": {
            "description": "The access type of the rule. Valid values are: 'Allow', 'Deny'",
            "enum": [
              "Allow",
              "Deny"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Access"
            }
          },
          "communities": {
            "description": "The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.",
            "readOnly": true,
            "type": "string"
          },
          "routeFilterRuleType": {
            "description": "The rule type of the rule. Valid value is: 'Community'",
            "enum": [
              "Community"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RouteFilterRuleType"
            }
          }
        },
        "required": [
          "access",
          "routeFilterRuleType",
          "communities"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}