openapi: 3.0.0
info:
  description: >-
    Extracts information from forms and images into structured data based on a
    model created by a set of representative training forms.
  title: Form Recognizer Client
  version: 1.0-preview
servers:
  - url: '{Endpoint}/formrecognizer/v1.0-preview'
    variables:
      Endpoint:
        description: >-
          Supported Cognitive Services endpoints (protocol and hostname, for
          example: https://westus2.api.cognitive.microsoft.com).
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /custom/models:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Get information about all trained custom models
      operationId: GetCustomModels
      summary: Get Models
      x-ms-examples:
        Get Model from id:
          $ref: ./examples/GetModels.json
  '/custom/models/{id}':
    delete:
      parameters:
        - description: The identifier of the model to delete.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: Successfully removed model artifacts.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Delete model artifacts.
      operationId: DeleteCustomModel
      summary: Delete Model
      x-ms-examples:
        Get Model from id:
          $ref: ./examples/DeleteModel.json
    get:
      parameters:
        - description: Model identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Get information about a model.
      operationId: GetCustomModel
      summary: Get Model
      x-ms-examples:
        Get Model from id:
          $ref: ./examples/GetModel.json
  '/custom/models/{id}/analyze':
    post:
      parameters:
        - description: Model Identifier to analyze the document with.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
        - description: An optional list of known keys to extract the values for.
          in: query
          name: keys
          required: false
          schema:
            items:
              type: string
            type: array
            uniqueItems: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Extract key-value pairs from a given document. The input document must
        be of one of the supported content types - 'application/pdf',
        'image/jpeg' or 'image/png'. A success response is returned in JSON.
      operationId: AnalyzeWithCustomModel
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
        required: true
      summary: Analyze Form
      x-ms-examples:
        Get Model from id:
          $ref: ./examples/Analyze.json
  '/custom/models/{id}/keys':
    get:
      parameters:
        - description: Model identifier.
          in: path
          name: id
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: "Retrieve the keys that were\r\n extracted during the training of the specified model."
      operationId: GetExtractedKeys
      summary: Get Keys
      x-ms-examples:
        Get Keys from Model:
          $ref: ./examples/GetKeys.json
  /custom/train:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: "Create and train a custom model. The train request must include a source parameter that is either an externally accessible Azure Storage blob container Uri (preferably a Shared Access Signature Uri) or valid path to a data folder in a locally mounted drive. When local paths are specified, they must follow the Linux/Unix path format and be an absolute path rooted to the input mount configuration\r\n setting value e.g., if '{Mounts:Input}' configuration setting value is '/input' then a valid source path would be '/input/contosodataset'. All data to be trained is expected to be directly under the source folder. Subfolders are not supported. Models are trained using documents that are of the following content type - 'application/pdf', 'image/jpeg' and 'image/png'.\"\r\n Other type of content is ignored."
      operationId: TrainCustomModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainRequest'
        description: Request object for training.
        required: true
      summary: Train Model
      x-ms-examples:
        Train new model example:
          $ref: ./examples/Train.json
        'Train new model example, subfolder filter options':
          $ref: ./examples/TrainWithSubFolders.json
components:
  parameters:
    Endpoint:
      description: >-
        Supported Cognitive Services endpoints (protocol and hostname, for
        example: https://westus2.api.cognitive.microsoft.com).
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    AnalyzeResult:
      description: Analyze API call result.
      properties:
        errors:
          description: "List of errors reported during the analyze\r\noperation."
          items:
            $ref: '#/components/schemas/FormOperationError'
          type: array
          uniqueItems: false
        pages:
          description: "Page level information extracted in the analyzed\r\ndocument."
          items:
            $ref: '#/components/schemas/ExtractedPage'
          type: array
          uniqueItems: false
        status:
          description: Status of the analyze operation.
          enum:
            - success
            - partialSuccess
            - failure
          type: string
      type: object
    ErrorInformation:
      properties:
        code:
          type: string
        innerError:
          $ref: '#/components/schemas/InnerError'
        message:
          type: string
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorInformation'
      type: object
    ExtractedKeyValuePair:
      description: "Representation of a key-value pair as a list\r\nof key and value tokens."
      properties:
        key:
          description: List of tokens for the extracted key in a key-value pair.
          items:
            $ref: '#/components/schemas/ExtractedToken'
          type: array
          uniqueItems: false
        value:
          description: List of tokens for the extracted value in a key-value pair.
          items:
            $ref: '#/components/schemas/ExtractedToken'
          type: array
          uniqueItems: false
      type: object
    ExtractedPage:
      description: "Extraction information of a single page in a\r\nwith a document."
      properties:
        clusterId:
          description: Cluster identifier.
          format: int32
          type: integer
        height:
          description: Height of the page (in pixels).
          format: int32
          type: integer
        keyValuePairs:
          description: List of Key-Value pairs extracted from the page.
          items:
            $ref: '#/components/schemas/ExtractedKeyValuePair'
          type: array
          uniqueItems: false
        number:
          description: Page number.
          format: int32
          type: integer
        tables:
          description: List of Tables and their information extracted from the page.
          items:
            $ref: '#/components/schemas/ExtractedTable'
          type: array
          uniqueItems: false
        width:
          description: Width of the page (in pixels).
          format: int32
          type: integer
      type: object
    ExtractedTable:
      description: "Extraction information about a table\r\ncontained in a page."
      properties:
        columns:
          description: List of columns contained in the table.
          items:
            $ref: '#/components/schemas/ExtractedTableColumn'
          type: array
          uniqueItems: false
        id:
          description: Table identifier.
          type: string
      type: object
    ExtractedTableColumn:
      description: "Extraction information of a column in\r\na table."
      properties:
        entries:
          description: "Extracted text for each cell of a column. Each cell\r\nin the column can have a list of one or more tokens."
          items:
            items:
              $ref: '#/components/schemas/ExtractedToken'
            type: array
            uniqueItems: false
          type: array
          uniqueItems: false
        header:
          description: List of extracted tokens for the column header.
          items:
            $ref: '#/components/schemas/ExtractedToken'
          type: array
          uniqueItems: false
      type: object
    ExtractedToken:
      description: Canonical representation of single extracted text.
      properties:
        boundingBox:
          description: "Bounding box of the extracted text. Represents the\r\nlocation of the extracted text as a pair of\r\ncartesian co-ordinates. The co-ordinate pairs are arranged by\r\ntop-left, top-right, bottom-right and bottom-left endpoints box\r\nwith origin reference from the bottom-left of the page."
          items:
            format: double
            type: number
          type: array
          uniqueItems: false
        confidence:
          description: A measure of accuracy of the extracted text.
          format: double
          type: number
        text:
          description: String value of the extracted text.
          type: string
      type: object
    FormDocumentReport:
      properties:
        documentName:
          description: Reference to the data that the report is for.
          type: string
        errors:
          description: List of errors per page.
          items:
            type: string
          type: array
          uniqueItems: false
        pages:
          description: Total number of pages trained on.
          format: int32
          type: integer
        status:
          description: Status of the training operation.
          enum:
            - success
            - partialSuccess
            - failure
          type: string
      type: object
    FormOperationError:
      description: Error reported during an operation.
      properties:
        errorMessage:
          description: Message reported during the train operation.
          type: string
      type: object
    InnerError:
      properties:
        requestId:
          type: string
      type: object
    KeysResult:
      description: "Result of an operation to get\r\nthe keys extracted by a model."
      properties:
        clusters:
          additionalProperties:
            items:
              type: string
            type: array
            uniqueItems: false
          description: Object mapping ClusterIds to Key lists.
          type: object
      type: object
    ModelResult:
      description: Result of a model status query operation.
      properties:
        createdDateTime:
          description: Get or set the created date time of the model.
          format: date-time
          type: string
        lastUpdatedDateTime:
          description: Get or set the model last updated datetime.
          format: date-time
          type: string
        modelId:
          description: Get or set model identifier.
          format: uuid
          nullable: false
          type: string
        status:
          description: Get or set the status of model.
          enum:
            - created
            - ready
            - invalid
          type: string
      type: object
    ModelsResult:
      description: Result of query operation to fetch multiple models.
      properties:
        models:
          description: Collection of models.
          items:
            $ref: '#/components/schemas/ModelResult'
          type: array
          uniqueItems: false
      type: object
    TrainRequest:
      description: Contract to initiate a train request.
      properties:
        source:
          description: Get or set source path.
          maxLength: 2048
          minLength: 0
          type: string
        sourceFilter:
          $ref: '#/components/schemas/TrainSourceFilter'
          description: "Get or set filter to further search the\r\nsource path for content."
      required:
        - source
      type: object
    TrainResult:
      description: Response of the Train API call.
      properties:
        errors:
          description: Errors returned during the training operation.
          items:
            $ref: '#/components/schemas/FormOperationError'
          type: array
          uniqueItems: false
        modelId:
          description: Identifier of the model.
          format: uuid
          nullable: false
          type: string
        trainingDocuments:
          description: "List of documents used to train the model and the\r\ntrain operation error reported by each."
          items:
            $ref: '#/components/schemas/FormDocumentReport'
          type: array
          uniqueItems: false
      type: object
    TrainSourceFilter:
      description: Filters to be applied when traversing a data source.
      properties:
        includeSubFolders:
          description: "A flag to indicate if sub folders within the set of\r\nprefix folders will also need to be included when searching\r\nfor content to be preprocessed."
          type: boolean
        prefix:
          description: "A case-sensitive prefix string to filter content\r\nunder the source location. For e.g., when using a Azure Blob\r\nUri use the prefix to restrict subfolders for content."
          maxLength: 128
          minLength: 0
          type: string
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
security:
  - apim_key: []

