openapi: 3.0.0
info:
  description: Extracts information from forms and images into structured data.
  title: Form Recognizer Client
  version: 2.0-preview
servers:
  - url: '{endpoint}/formrecognizer/v2.0-preview'
    variables:
      endpoint:
        description: >-
          Supported Cognitive Services endpoints (protocol and hostname, for
          example: https://westus2.api.cognitive.microsoft.com).
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /custom/models:
    post:
      responses:
        '201':
          description: Request is queued successfully.
          headers:
            Location:
              description: >-
                Location and ID of the model being trained. The status of model
                training is specified in the status property at the model
                location.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Create and train a custom model. The request must include a source
        parameter that is either an externally accessible Azure storage blob
        container Uri (preferably a Shared Access Signature Uri) or valid path
        to a data folder in a locally mounted drive. When local paths are
        specified, they must follow the Linux/Unix path format and be an
        absolute path rooted to the input mount configuration setting value
        e.g., if '{Mounts:Input}' configuration setting value is '/input' then a
        valid source path would be '/input/contosodataset'. All data to be
        trained is expected to be under the source folder or sub folders under
        it. Models are trained using documents that are of the following content
        type - 'application/pdf', 'image/jpeg', 'image/png', 'image/tiff'. Other
        type of content is ignored.
      operationId: TrainCustomModelAsync
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainRequest'
        description: Training request parameters.
        required: true
      summary: Train Custom Model
      x-ms-examples:
        Train custom model:
          $ref: ./examples/TrainBatch.json
        Train custom model with subfolder filter options:
          $ref: ./examples/TrainBatchWithSubFolders.json
  /custom/models/copyAuthorization:
    post:
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyAuthorizationResult'
          description: Copy request is authorized successfully.
          headers:
            Location:
              description: >-
                Location and ID of the model being copied. The status of model
                copy is specified in the status property at the model location.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Generate authorization to copy a model into the target Form Recognizer
        resource.
      operationId: GenerateModelCopyAuthorization
      summary: Generate Copy Authorization
      x-ms-examples:
        Copy custom model:
          $ref: ./examples/CopyModelAuthorization.json
  '/custom/models/{modelId}':
    delete:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: >-
            Successfully marked model for deletion. Model artifacts will be
            removed within a predefined time period.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Mark model for deletion. Model artifacts will be permanently removed
        within a predetermined period.
      operationId: DeleteCustomModel
      summary: Delete Custom Model
      x-ms-examples:
        Delete custom model:
          $ref: ./examples/DeleteModel.json
    get:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
        - description: Include list of extracted keys in model information.
          in: query
          name: includeKeys
          required: false
          schema:
            default: false
            type: boolean
          x-nullable: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Get detailed information about a custom model.
      operationId: GetCustomModel
      summary: Get Custom Model
      x-ms-examples:
        Get custom model:
          $ref: ./examples/GetModel.json
  '/custom/models/{modelId}/analyze':
    post:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
        - description: Include text lines and element references in the result.
          in: query
          name: includeTextDetails
          required: false
          schema:
            default: false
            type: boolean
          x-nullable: false
      responses:
        '202':
          description: Request is queued successfully.
          headers:
            Operation-Location:
              description: >-
                URL containing the resultId used to track the progress and
                obtain the result of the analyze operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Extract key-value pairs, tables, and semantic values from a given
        document. The input document must be of one of the supported content
        types - 'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'.
        Alternatively, use 'application/json' type to specify the location (Uri
        or local path) of the document to be analyzed.
      operationId: AnalyzeWithCustomModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcePath'
          application/pdf:
            schema:
              $ref: '#/components/schemas/SourcePath'
          image/jpeg:
            schema:
              $ref: '#/components/schemas/SourcePath'
          image/png:
            schema:
              $ref: '#/components/schemas/SourcePath'
          image/tiff:
            schema:
              $ref: '#/components/schemas/SourcePath'
        description: '.json, .pdf, .jpg, .png or .tiff type file stream.'
      summary: Analyze Form
      x-ms-examples:
        Analyze form with custom model:
          $ref: ./examples/AnalyzeBatch.json
      x-ms-long-running-operation: true
  '/custom/models/{modelId}/analyzeResults/{resultId}':
    get:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
        - description: Analyze operation result identifier.
          in: path
          name: resultId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeOperationResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Obtain current status and the result of the analyze form operation.
      operationId: GetAnalyzeFormResult
      summary: Get Analyze Form Result
      x-ms-examples:
        Get analyze form result:
          $ref: ./examples/AnalyzeOperationResult.json
  '/custom/models/{modelId}/copy':
    post:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '202':
          description: Copy request is queued successfully.
          headers:
            Operation-Location:
              description: >-
                URL containing the resultId used to track the progress and
                obtain the result of the copy operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Copy custom model stored in this resource (the source) to user specified
        target Form Recognizer resource.
      operationId: CopyCustomModel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRequest'
        description: Copy request parameters.
        required: true
      summary: Copy Custom Model
      x-ms-examples:
        Copy custom model:
          $ref: ./examples/CopyModel.json
      x-ms-long-running-operation: true
  '/custom/models/{modelId}/copyResults/{resultId}':
    get:
      parameters:
        - description: Model identifier.
          in: path
          name: modelId
          required: true
          schema:
            format: uuid
            type: string
        - description: Copy operation result identifier.
          in: path
          name: resultId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyOperationResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Obtain current status and the result of a custom model copy operation.
      operationId: GetCustomModelCopyResult
      summary: Get Custom Model Copy Result
      x-ms-examples:
        Get copy custom model result:
          $ref: ./examples/CopyOperationResult.json
        Get copy custom model result with failures:
          $ref: ./examples/CopyOperationResultWithErrors.json
  /layout/analyze:
    post:
      responses:
        '202':
          description: Request is queued successfully.
          headers:
            Operation-Location:
              description: >-
                URL containing the resultId used to track the progress and
                obtain the result of the analyze operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Extract text and layout information from a given document. The input
        document must be of one of the supported content types -
        'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'.
        Alternatively, use 'application/json' type to specify the location (Uri
        or local path) of the document to be analyzed.
      operationId: AnalyzeLayoutAsync
      requestBody:
        $ref: '#/components/requestBodies/SourcePath'
      summary: Analyze Layout
      x-ms-examples:
        Analyze layout:
          $ref: ./examples/LayoutBatch.json
      x-ms-long-running-operation: true
  '/layout/analyzeResults/{resultId}':
    get:
      parameters:
        - description: Analyze operation result identifier.
          in: path
          name: resultId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeOperationResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Track the progress and obtain the result of the analyze layout operation
      operationId: GetAnalyzeLayoutResult
      summary: Get Analyze Layout Result
      x-ms-examples:
        Get analyze layout result:
          $ref: ./examples/LayoutBatchResult.json
  /prebuilt/receipt/analyze:
    post:
      parameters:
        - description: Include text lines and element references in the result.
          in: query
          name: includeTextDetails
          required: false
          schema:
            default: false
            type: boolean
          x-nullable: false
      responses:
        '202':
          description: Request is queued successfully.
          headers:
            Operation-Location:
              description: >-
                URL containing the resultId used to track the progress and
                obtain the result of the analyze operation.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Extract field text and semantic values from a given receipt document.
        The input document must be of one of the supported content types -
        'application/pdf', 'image/jpeg', 'image/png' or 'image/tiff'.
        Alternatively, use 'application/json' type to specify the location (Uri
        or local path) of the document to be analyzed.
      operationId: AnalyzeReceiptAsync
      requestBody:
        $ref: '#/components/requestBodies/SourcePath'
      summary: Analyze Receipt
      x-ms-examples:
        Analyze receipt:
          $ref: ./examples/ReceiptsBatch.json
      x-ms-long-running-operation: true
  '/prebuilt/receipt/analyzeResults/{resultId}':
    get:
      parameters:
        - description: Analyze operation result identifier.
          in: path
          name: resultId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeOperationResult'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: >-
        Track the progress and obtain the result of the analyze receipt
        operation.
      operationId: GetAnalyzeReceiptResult
      summary: Get Analyze Receipt Result
      x-ms-examples:
        Get analyze receipt result:
          $ref: ./examples/ReceiptsBatchResult.json
components:
  parameters:
    Endpoint:
      description: >-
        Supported Cognitive Services endpoints (protocol and hostname, for
        example: https://westus2.api.cognitive.microsoft.com).
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    SourcePath:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourcePath'
        application/pdf:
          schema:
            $ref: '#/components/schemas/SourcePath'
        image/jpeg:
          schema:
            $ref: '#/components/schemas/SourcePath'
        image/png:
          schema:
            $ref: '#/components/schemas/SourcePath'
        image/tiff:
          schema:
            $ref: '#/components/schemas/SourcePath'
      description: '.json, .pdf, .jpg, .png or .tiff type file stream.'
  schemas:
    AnalyzeOperationResult:
      description: Status and result of the queued analyze operation.
      properties:
        analyzeResult:
          $ref: '#/components/schemas/AnalyzeResult'
          description: Results of the analyze operation.
        createdDateTime:
          description: Date and time (UTC) when the analyze operation was submitted.
          format: date-time
          nullable: false
          type: string
        lastUpdatedDateTime:
          description: Date and time (UTC) when the status was last updated.
          format: date-time
          nullable: false
          type: string
        status:
          $ref: '#/components/schemas/OperationStatus'
          description: Operation status.
      required:
        - status
        - createdDateTime
        - lastUpdatedDateTime
      type: object
    AnalyzeResult:
      description: Analyze operation result.
      properties:
        documentResults:
          description: Document-level information extracted from the input.
          items:
            $ref: '#/components/schemas/DocumentResult'
          type: array
        errors:
          description: List of errors reported during the analyze operation.
          items:
            $ref: '#/components/schemas/ErrorInformation'
          type: array
        pageResults:
          description: Page-level information extracted from the input.
          items:
            $ref: '#/components/schemas/PageResult'
          type: array
        readResults:
          description: Text extracted from the input.
          items:
            $ref: '#/components/schemas/ReadResult'
          type: array
        version:
          description: Version of schema used for this result.
          type: string
      required:
        - version
        - readResults
      type: object
    BoundingBox:
      description: >-
        Quadrangle bounding box, with coordinates specified relative to the
        top-left of the original image. The eight numbers represent the four
        points, clockwise from the top-left corner relative to the text
        orientation. For image, the (x, y) coordinates are measured in pixels.
        For PDF, the (x, y) coordinates are measured in inches.
      items:
        nullable: false
        type: number
      maxItems: 8
      minItems: 8
      type: array
    Confidence:
      description: Confidence value.
      maximum: 1
      minimum: 0
      nullable: false
      type: number
    CopyAuthorizationResult:
      description: Request parameter that contains authorization claims for copy operation.
      properties:
        accessToken:
          description: Token claim used to authorize the request.
          type: string
        expirationDateTimeTicks:
          description: >-
            The time when the access token expires. The date is represented as
            the number of seconds from 1970-01-01T0:0:0Z UTC until the
            expiration time.
          format: int64
          type: integer
        modelId:
          description: Model identifier.
          type: string
      required:
        - modelId
        - accessToken
        - expirationDateTimeTicks
      type: object
    CopyOperationResult:
      description: Status and result of the queued copy operation.
      properties:
        copyResult:
          $ref: '#/components/schemas/CopyResult'
          description: Results of the copy operation.
        createdDateTime:
          description: Date and time (UTC) when the copy operation was submitted.
          format: date-time
          nullable: false
          type: string
        lastUpdatedDateTime:
          description: Date and time (UTC) when the status was last updated.
          format: date-time
          nullable: false
          type: string
        status:
          $ref: '#/components/schemas/OperationStatus'
          description: Operation status.
      required:
        - status
        - createdDateTime
        - lastUpdatedDateTime
      type: object
    CopyRequest:
      description: >-
        Request parameter to copy an existing custom model from the source
        resource to a target resource referenced by the resource ID.
      properties:
        copyAuthorization:
          $ref: '#/components/schemas/CopyAuthorizationResult'
          description: Entity that encodes claims to authorize the copy request.
        targetResourceId:
          description: >-
            Azure Resource Id of the target Form Recognizer resource where the
            model is copied to.
          maxLength: 1024
          pattern: >-
            ^/subscriptions/[^/]*/resourceGroups/[^/]*/providers/Microsoft.CognitiveServices/accounts/[^/]*$
          type: string
          x-ms-azure-resource: true
        targetResourceRegion:
          description: >-
            Location of the target Azure resource. A valid Azure region name
            supported by Cognitive Services.
          maxLength: 24
          minLength: 1
          pattern: '^[a-z0-9]+$'
          type: string
      required:
        - targetResourceId
        - targetResourceRegion
        - copyAuthorization
      type: object
    CopyResult:
      description: Custom model copy result.
      properties:
        errors:
          description: Errors returned during the copy operation.
          items:
            $ref: '#/components/schemas/ErrorInformation'
          type: array
        modelId:
          description: Identifier of the target model.
          format: uuid
          type: string
      required:
        - modelId
      type: object
    DataTable:
      description: Information about the extracted table contained in a page.
      properties:
        cells:
          description: List of cells contained in the table.
          items:
            $ref: '#/components/schemas/DataTableCell'
          type: array
        columns:
          description: Number of columns.
          minimum: 1
          nullable: false
          type: integer
        rows:
          description: Number of rows.
          minimum: 1
          nullable: false
          type: integer
      required:
        - rows
        - columns
        - cells
      type: object
    DataTableCell:
      description: Information about the extracted cell in a table.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: Bounding box of the cell.
        columnIndex:
          description: Column index of the cell.
          minimum: 0
          nullable: false
          type: integer
        columnSpan:
          default: 1
          description: Number of columns spanned by this cell.
          minimum: 1
          nullable: false
          type: integer
        confidence:
          $ref: '#/components/schemas/Confidence'
          description: Confidence value.
        elements:
          description: >-
            When includeTextDetails is set to true, a list of references to the
            text elements constituting this table cell.
          items:
            $ref: '#/components/schemas/ElementReference'
          type: array
        isFooter:
          default: false
          description: Is the current cell a footer cell?
          nullable: false
          type: boolean
        isHeader:
          default: false
          description: Is the current cell a header cell?
          nullable: false
          type: boolean
        rowIndex:
          description: Row index of the cell.
          minimum: 0
          nullable: false
          type: integer
        rowSpan:
          default: 1
          description: Number of rows spanned by this cell.
          minimum: 1
          nullable: false
          type: integer
        text:
          description: Text content of the cell.
          type: string
      required:
        - rowIndex
        - columnIndex
        - text
        - boundingBox
        - confidence
      type: object
    DocumentResult:
      description: A set of extracted fields corresponding to the input document.
      properties:
        docType:
          description: Document type.
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/FieldValue'
          description: Dictionary of named field values.
          type: object
        pageRange:
          description: First and last page number where the document is found.
          items:
            minimum: 1
            nullable: false
            type: integer
          maxItems: 2
          minItems: 2
          type: array
      required:
        - docType
        - pageRange
        - fields
      type: object
    ElementReference:
      description: Reference to a line or word.
      type: string
    ErrorInformation:
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/ErrorInformation'
      required:
        - error
      type: object
    FieldValue:
      description: Recognized field value.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: 'Bounding box of the field value, if appropriate.'
        confidence:
          $ref: '#/components/schemas/Confidence'
          description: Confidence score.
        elements:
          description: >-
            When includeTextDetails is set to true, a list of references to the
            text elements constituting this field.
          items:
            $ref: '#/components/schemas/ElementReference'
          type: array
        page:
          description: The 1-based page number in the input document.
          minimum: 1
          nullable: false
          type: integer
        text:
          description: Text content of the extracted field.
          type: string
        type:
          $ref: '#/components/schemas/FieldValueType'
          description: Type of field value.
        valueArray:
          description: Array of field values.
          items:
            $ref: '#/components/schemas/FieldValue'
          type: array
        valueDate:
          description: Date value.
          format: date
          nullable: false
          type: string
        valueInteger:
          description: Integer value.
          nullable: false
          type: integer
        valueNumber:
          description: Floating point value.
          nullable: false
          type: number
        valueObject:
          additionalProperties:
            $ref: '#/components/schemas/FieldValue'
          description: Dictionary of named field values.
          type: object
        valuePhoneNumber:
          description: Phone number value.
          type: string
        valueString:
          description: String value.
          type: string
        valueTime:
          description: Time value.
          format: time
          nullable: false
          type: string
      required:
        - type
      type: object
    FieldValueType:
      description: Semantic data type of the field value.
      enum:
        - string
        - date
        - time
        - phoneNumber
        - number
        - integer
        - array
        - object
      nullable: false
      type: string
      x-ms-enum:
        modelAsString: false
        name: FieldValueType
    FormFieldsReport:
      description: Report for a custom model training field.
      properties:
        accuracy:
          description: Estimated extraction accuracy for this field.
          nullable: false
          type: number
        fieldName:
          description: Training field name.
          type: string
      required:
        - fieldName
        - accuracy
      type: object
    KeyValueElement:
      description: Information about the extracted key or value in a key-value pair.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: Bounding box of the key or value.
        elements:
          description: >-
            When includeTextDetails is set to true, a list of references to the
            text elements constituting this key or value.
          items:
            $ref: '#/components/schemas/ElementReference'
          type: array
        text:
          description: The text content of the key or value.
          type: string
      required:
        - text
      type: object
    KeyValuePair:
      description: Information about the extracted key-value pair.
      properties:
        confidence:
          $ref: '#/components/schemas/Confidence'
          description: Confidence value.
        key:
          $ref: '#/components/schemas/KeyValueElement'
          description: Information about the extracted key in a key-value pair.
        label:
          description: A user defined label for the key/value pair entry.
          type: string
        value:
          $ref: '#/components/schemas/KeyValueElement'
          description: Information about the extracted value in a key-value pair.
      required:
        - key
        - value
        - confidence
      type: object
    KeysResult:
      description: Keys extracted by the custom model.
      properties:
        clusters:
          additionalProperties:
            items:
              type: string
            type: array
            uniqueItems: true
          description: Object mapping clusterIds to a list of keys.
          type: object
      required:
        - clusters
      type: object
    Language:
      description: Language code
      enum:
        - en
        - es
      nullable: false
      type: string
      x-ms-enum:
        modelAsString: true
        name: Language
    Model:
      description: Response to the get custom model operation.
      properties:
        keys:
          $ref: '#/components/schemas/KeysResult'
        modelInfo:
          $ref: '#/components/schemas/ModelInfo'
        trainResult:
          $ref: '#/components/schemas/TrainResult'
      required:
        - modelInfo
      type: object
    ModelInfo:
      description: Basic custom model information.
      properties:
        createdDateTime:
          description: Date and time (UTC) when the model was created.
          format: date-time
          nullable: false
          type: string
        lastUpdatedDateTime:
          description: Date and time (UTC) when the status was last updated.
          format: date-time
          nullable: false
          type: string
        modelId:
          description: Model identifier.
          format: uuid
          nullable: false
          type: string
        status:
          description: Status of the model.
          enum:
            - creating
            - ready
            - invalid
          nullable: false
          type: string
          x-ms-enum:
            modelAsString: false
            name: ModelStatus
      required:
        - modelId
        - status
        - createdDateTime
        - lastUpdatedDateTime
      type: object
    Models:
      description: Response to the list custom models operation.
      properties:
        modelList:
          description: Collection of trained custom models.
          items:
            $ref: '#/components/schemas/ModelInfo'
          type: array
        nextLink:
          description: Link to the next page of custom models.
          type: string
        summary:
          description: Summary of all trained custom models.
          properties:
            count:
              description: Current count of trained custom models.
              nullable: false
              type: integer
            lastUpdatedDateTime:
              description: Date and time (UTC) when the summary was last updated.
              format: date-time
              nullable: false
              type: string
            limit:
              description: Max number of models that can be trained for this account.
              nullable: false
              type: integer
          required:
            - count
            - limit
            - lastUpdatedDateTime
          type: object
      type: object
    OperationStatus:
      description: Status of the queued operation.
      enum:
        - notStarted
        - running
        - succeeded
        - failed
      nullable: false
      type: string
      x-ms-enum:
        modelAsString: false
        name: OperationStatus
    PageResult:
      description: Extracted information from a single page.
      properties:
        clusterId:
          description: Cluster identifier.
          format: int32
          minimum: 0
          nullable: false
          type: integer
        keyValuePairs:
          description: List of key-value pairs extracted from the page.
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
        page:
          description: Page number.
          format: int32
          minimum: 1
          nullable: false
          type: integer
        tables:
          description: List of data tables extracted from the page.
          items:
            $ref: '#/components/schemas/DataTable'
          type: array
      required:
        - page
      type: object
    ReadResult:
      description: Text extracted from a page in the input document.
      properties:
        angle:
          description: >-
            The general orientation of the text in clockwise direction, measured
            in degrees between (-180, 180].
          exclusiveMinimum: true
          maximum: 180
          minimum: -180
          nullable: false
          type: number
        height:
          description: 'The height of the image/PDF in pixels/inches, respectively.'
          minimum: 0
          nullable: false
          type: number
        language:
          $ref: '#/components/schemas/Language'
          description: The detected language on the page overall.
        lines:
          description: >-
            When includeTextDetails is set to true, a list of recognized text
            lines. The maximum number of lines returned is 300 per page. The
            lines are sorted top to bottom, left to right, although in certain
            cases proximity is treated with higher priority. As the sorting
            order depends on the detected text, it may change across images and
            OCR version updates. Thus, business logic should be built upon the
            actual line location instead of order.
          items:
            $ref: '#/components/schemas/TextLine'
          type: array
        page:
          description: The 1-based page number in the input document.
          minimum: 1
          nullable: false
          type: integer
        unit:
          description: >-
            The unit used by the width, height and boundingBox properties. For
            images, the unit is "pixel". For PDF, the unit is "inch".
          enum:
            - pixel
            - inch
          nullable: false
          type: string
          x-ms-enum:
            modelAsString: false
            name: LengthUnit
        width:
          description: 'The width of the image/PDF in pixels/inches, respectively.'
          minimum: 0
          nullable: false
          type: number
      required:
        - page
        - angle
        - width
        - height
        - unit
      type: object
    SourcePath:
      description: Uri or local path to source data.
      properties:
        source:
          description: File source path.
          maxLength: 2048
          minLength: 0
          type: string
      type: object
    TextLine:
      description: An object representing an extracted text line.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: Bounding box of an extracted line.
        language:
          $ref: '#/components/schemas/Language'
          description: >-
            The detected language of this line, if different from the overall
            page language.
        text:
          description: The text content of the line.
          type: string
        words:
          description: List of words in the text line.
          items:
            $ref: '#/components/schemas/TextWord'
          type: array
      required:
        - text
        - boundingBox
        - words
      type: object
    TextWord:
      description: An object representing a word.
      properties:
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
          description: Bounding box of an extracted word.
        confidence:
          $ref: '#/components/schemas/Confidence'
          description: Confidence value.
        text:
          description: The text content of the word.
          type: string
      required:
        - boundingBox
        - text
      type: object
    TrainRequest:
      description: Request parameter to train a new custom model.
      properties:
        source:
          description: Source path containing the training documents.
          maxLength: 2048
          minLength: 0
          type: string
        sourceFilter:
          $ref: '#/components/schemas/TrainSourceFilter'
          description: Filter to apply to the documents in the source path for training.
        useLabelFile:
          default: false
          description: Use label file for training a model.
          type: boolean
      required:
        - source
      type: object
    TrainResult:
      description: Custom model training result.
      properties:
        averageModelAccuracy:
          description: Average accuracy.
          nullable: false
          type: number
        errors:
          description: Errors returned during the training operation.
          items:
            $ref: '#/components/schemas/ErrorInformation'
          type: array
        fields:
          description: >-
            List of fields used to train the model and the train operation error
            reported by each.
          items:
            $ref: '#/components/schemas/FormFieldsReport'
          type: array
        trainingDocuments:
          description: >-
            List of the documents used to train the model and any errors
            reported in each document.
          items:
            $ref: '#/components/schemas/TrainingDocumentInfo'
          type: array
      required:
        - trainingDocuments
      type: object
    TrainSourceFilter:
      description: Filter to apply to the documents in the source path for training.
      properties:
        includeSubFolders:
          default: false
          description: >-
            A flag to indicate if sub folders within the set of prefix folders
            will also need to be included when searching for content to be
            preprocessed.
          nullable: false
          type: boolean
        prefix:
          description: >-
            A case-sensitive prefix string to filter documents in the source
            path for training. For example, when using a Azure storage blob Uri,
            use the prefix to restrict sub folders for training.
          maxLength: 1024
          minLength: 0
          type: string
      type: object
    TrainingDocumentInfo:
      description: Report for a custom model training document.
      properties:
        documentName:
          description: Training document name.
          type: string
        errors:
          description: List of errors.
          items:
            $ref: '#/components/schemas/ErrorInformation'
          type: array
        pages:
          description: Total number of pages trained.
          format: int32
          nullable: false
          type: integer
        status:
          description: Status of the training operation.
          enum:
            - succeeded
            - partiallySucceeded
            - failed
          nullable: false
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrainStatus
      required:
        - documentName
        - pages
        - errors
        - status
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
security:
  - apim_key: []
x-ms-paths:
  /custom/models?op=full:
    get:
      parameters:
        - description: Specify whether to return summary or full list of models.
          in: query
          name: op
          required: true
          schema:
            enum:
              - full
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Get information about all custom models
      operationId: ListCustomModels
      summary: List Custom Models
      x-ms-examples:
        List custom models:
          $ref: ./examples/GetModels.json
      x-ms-pageable:
        itemName: modelList
        nextLinkName: nextLink
  /custom/models?op=summary:
    get:
      parameters:
        - description: Specify whether to return summary or full list of models.
          in: query
          name: op
          required: true
          schema:
            enum:
              - summary
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Response entity accompanying non-successful responses containing
            additional details about the error.
      description: Get information about all custom models
      operationId: GetCustomModels
      summary: Get Custom Models
      x-ms-examples:
        Get models summary:
          $ref: ./examples/GetModelsSummary.json

