{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Event Hubs client",
    "title": "EventHubManagementClient",
    "version": "2015-08-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/eventhub/resource-manager/Microsoft.EventHub/stable/2015-08-01/EventHub.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.EventHub/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Event Hub REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "EHOperations_List": {
            "$ref": "./examples/EHOperations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            },
            "description": "check availability returned successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Check the give Namespace name availability.",
        "operationId": "Namespaces_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameAvailabilityParameter"
              }
            }
          },
          "description": "Parameters to check availability of the given Namespace name",
          "required": true
        },
        "x-ms-examples": {
          "NamespacesCheckNameAvailability": {
            "$ref": "./examples/EHNameSpaceCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceListResult"
                }
              }
            },
            "description": "Namespaces returned successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Lists all the available Namespaces within a subscription, irrespective of the resource groups.",
        "operationId": "Namespaces_ListBySubscription",
        "x-ms-examples": {
          "NamespacesListBySubscription": {
            "$ref": "./examples/EHNameSpaceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceListResult"
                }
              }
            },
            "description": "Namespaces returned successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Lists the available Namespaces within a resource group.",
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "NamespaceListByResourceGroup": {
            "$ref": "./examples/EHNameSpaceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace successfully deleted."
          },
          "202": {
            "description": "Namespace delete request accepted."
          },
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "NameSpaceDelete": {
            "$ref": "./examples/EHNameSpaceDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace returned successfully."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace update request accepted."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Gets the description of the specified namespace.",
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "NameSpaceGet": {
            "$ref": "./examples/EHNameSpaceGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace successfully updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace update request accepted."
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId": "Namespaces_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamespaceUpdateParameter"
              }
            }
          },
          "description": "Parameters for updating a namespace resource.",
          "required": true
        },
        "x-ms-examples": {
          "NamespacesUpdate": {
            "$ref": "./examples/EHNameSpaceUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace successfully created."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceResource"
                }
              }
            },
            "description": "Namespace create request accepted."
          },
          "202": {
            "description": "Namespace create or update request accepted."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId": "Namespaces_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NamespaceCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters for creating a namespace resource.",
          "required": true
        },
        "x-ms-examples": {
          "NamespaceCreate": {
            "$ref": "./examples/EHNameSpaceCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleListResult"
                }
              }
            },
            "description": "Namespace AuthorizationRule successfully returned."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Gets a list of authorization rules for a Namespace.",
        "operationId": "Namespaces_ListAuthorizationRules",
        "x-ms-examples": {
          "ListAuthorizationRules": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace AuthorizationRule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes an AuthorizationRule for a Namespace.",
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleDelete": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
                }
              }
            },
            "description": "Namespace AuthorizationRule returned successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Gets an AuthorizationRule for a Namespace by rule name.",
        "operationId": "Namespaces_GetAuthorizationRule",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleGet": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
                }
              }
            },
            "description": "Namespace AuthorizationRule created"
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates an AuthorizationRule for a Namespace.",
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
              }
            }
          },
          "description": "The shared access AuthorizationRule.",
          "required": true
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListKeys"
                }
              }
            },
            "description": "Connection strings returned successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Gets the primary and secondary connection strings for the Namespace.",
        "operationId": "Namespaces_ListKeys",
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListKeys"
                }
              }
            },
            "description": "Connection strings regenerated successfully."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Regenerates the primary or secondary connection strings for the specified Namespace.",
        "operationId": "Namespaces_RegenerateKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateKeysParameters"
              }
            }
          },
          "description": "Parameters required to regenerate the connection string.",
          "required": true
        },
        "x-ms-examples": {
          "NameSpaceAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/EHNameSpaceAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Event Hubs."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639493.aspx"
        },
        "description": "Gets all the Event Hubs in a Namespace.",
        "operationId": "EventHubs_ListAll",
        "x-ms-examples": {
          "EventHubsListAll": {
            "$ref": "./examples/EHEventHubListByNameSpace.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639496.aspx"
        },
        "description": "Deletes an Event Hub from the specified Namespace and resource group.",
        "operationId": "EventHubs_Delete",
        "x-ms-examples": {
          "EventHubDelete": {
            "$ref": "./examples/EHEventHubDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubResource"
                }
              }
            },
            "description": "Successfully retrieved the Event Hub description."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639501.aspx"
        },
        "description": "Gets an Event Hubs description for the specified Event Hub.",
        "operationId": "EventHubs_Get",
        "x-ms-examples": {
          "EventHubGet": {
            "$ref": "./examples/EHEventHubGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubResource"
                }
              }
            },
            "description": "Event Hub successfully created."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639497.aspx"
        },
        "description": "Creates or updates a new Event Hub as a nested resource within a Namespace.",
        "operationId": "EventHubs_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHubCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters supplied to create an Event Hub resource.",
          "required": true
        },
        "x-ms-examples": {
          "EventHubCreate": {
            "$ref": "./examples/EHEventHubCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleListResult"
                }
              }
            },
            "description": "Event Hub AuthorizationRule returned successfully."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "description": "Gets the authorization rules for an Event Hub.",
        "operationId": "EventHubs_ListAuthorizationRules",
        "x-ms-examples": {
          "EventHubAuthorizationRuleListAll": {
            "$ref": "./examples/EHEventHubAuthorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Event Hub AuthorizationRule successfully deleted."
          },
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706100.aspx"
        },
        "description": "Deletes an Event Hub AuthorizationRule.",
        "operationId": "EventHubs_DeleteAuthorizationRule",
        "x-ms-examples": {
          "EventHubAuthorizationRuleDelete": {
            "$ref": "./examples/EHEventHubAuthorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
                }
              }
            },
            "description": "Event Hub AuthorizationRule successfully returned."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706097.aspx"
        },
        "description": "Gets an AuthorizationRule for an Event Hub by rule name.",
        "operationId": "EventHubs_GetAuthorizationRule",
        "x-ms-examples": {
          "EventHubAuthorizationRuleGet": {
            "$ref": "./examples/EHEventHubAuthorizationRuleGet.json"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
                }
              }
            },
            "description": "Event Hub AuthorizationRule successfully returned."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706097.aspx"
        },
        "description": "Gets an AuthorizationRule for an Event Hub by rule name.",
        "operationId": "EventHubs_PostAuthorizationRule",
        "x-ms-examples": {
          "EventHubAuthorizationRuleGet": {
            "$ref": "./examples/EHEventHubAuthorizationRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
                }
              }
            },
            "description": "Event Hub AuthorizationRule successfully created."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706096.aspx"
        },
        "description": "Creates or updates an AuthorizationRule for the specified Event Hub.",
        "operationId": "EventHubs_CreateOrUpdateAuthorizationRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
              }
            }
          },
          "description": "The shared access AuthorizationRule.",
          "required": true
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleCreate": {
            "$ref": "./examples/EHEventHubAuthorizationRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/ListKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListKeys"
                }
              }
            },
            "description": "Connection strings successfully returned."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706098.aspx"
        },
        "description": "Gets the ACS and SAS connection strings for the Event Hub.",
        "operationId": "EventHubs_ListKeys",
        "x-ms-examples": {
          "EventHubAuthorizationRuleListKey": {
            "$ref": "./examples/EHEventHubAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListKeys"
                }
              }
            },
            "description": "Connection strings successfully regenerated."
          }
        },
        "tags": [
          "EventHubs"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt706099.aspx"
        },
        "description": "Regenerates the ACS and SAS connection strings for the Event Hub.",
        "operationId": "EventHubs_RegenerateKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateKeysParameters"
              }
            }
          },
          "description": "Parameters supplied to regenerate the AuthorizationRule Keys (PrimaryKey/SecondaryKey).",
          "required": true
        },
        "x-ms-examples": {
          "EventHubAuthorizationRuleRegenerateKey": {
            "$ref": "./examples/EHEventHubAuthorizationRuleRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of consumer groups."
          }
        },
        "tags": [
          "ConsumerGroups"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639503.aspx"
        },
        "description": "Gets all the consumer groups in a Namespace. An empty feed is returned if no consumer group exists in the Namespace.",
        "operationId": "ConsumerGroups_ListAll",
        "x-ms-examples": {
          "ConsumerGroupsListAll": {
            "$ref": "./examples/EHConsumerGroupListByEventHub.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/consumerGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumer group deleted."
          },
          "204": {
            "description": "No content."
          }
        },
        "tags": [
          "ConsumerGroups"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639491.aspx"
        },
        "description": "Deletes a consumer group from the specified Event Hub and resource group.",
        "operationId": "ConsumerGroups_Delete",
        "x-ms-examples": {
          "ConsumerGroupDelete": {
            "$ref": "./examples/EHConsumerGroupDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/consumerGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupResource"
                }
              }
            },
            "description": "Successfully retrieved the consumer group description."
          }
        },
        "tags": [
          "ConsumerGroups"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639488.aspx"
        },
        "description": "Gets a description for the specified consumer group.",
        "operationId": "ConsumerGroups_Get",
        "x-ms-examples": {
          "ConsumerGroupGet": {
            "$ref": "./examples/EHConsumerGroupGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/eventHubNameParameter"
          },
          {
            "$ref": "#/components/parameters/consumerGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerGroupResource"
                }
              }
            },
            "description": "Consumer group successfully created."
          }
        },
        "tags": [
          "ConsumerGroups"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt639498.aspx"
        },
        "description": "Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.",
        "operationId": "ConsumerGroups_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerGroupCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters supplied to create or update a consumer group resource.",
          "required": true
        },
        "x-ms-examples": {
          "ConsumerGroupCreate": {
            "$ref": "./examples/EHConsumerGroupCreate.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "authorizationRuleNameParameter": {
        "description": "The authorization rule name.",
        "in": "path",
        "name": "authorizationRuleName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "consumerGroupNameParameter": {
        "description": "The consumer group name",
        "in": "path",
        "name": "consumerGroupName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventHubNameParameter": {
        "description": "The Event Hub name",
        "in": "path",
        "name": "eventHubName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "namespaceNameParameter": {
        "description": "The Namespace name",
        "in": "path",
        "name": "namespaceName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 6,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Name of the resource group within the azure subscription.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters"
            }
          }
        },
        "description": "The shared access AuthorizationRule.",
        "required": true
      }
    },
    "schemas": {
      "CheckNameAvailabilityParameter": {
        "description": "Parameter supplied to check Namespace name availability operation ",
        "properties": {
          "name": {
            "description": "Name to check the namespace name availability",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CheckNameAvailabilityResult": {
        "description": "The Result of the CheckNameAvailability operation",
        "properties": {
          "message": {
            "description": "The detailed info regarding the reason associated with the Namespace.",
            "readOnly": true,
            "type": "string"
          },
          "nameAvailable": {
            "description": "Value indicating Namespace is availability, true if the Namespace is available; otherwise, false.",
            "type": "boolean"
          },
          "reason": {
            "$ref": "#/components/schemas/UnavailableReason",
            "description": "The reason for unavailability of a Namespace."
          }
        },
        "type": "object"
      },
      "ConsumerGroupCreateOrUpdateParameters": {
        "description": "Parameters supplied to the Create Or Update Consumer Group operation.",
        "properties": {
          "location": {
            "description": "Location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "Name of the consumer group.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ConsumerGroupProperties",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "ARM type of the Namespace.",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "ConsumerGroupListResult": {
        "description": "The result to the List Consumer Group operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group",
            "type": "string"
          },
          "value": {
            "description": "Result of the List Consumer Group operation.",
            "items": {
              "$ref": "#/components/schemas/ConsumerGroupResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConsumerGroupProperties": {
        "description": "Properties supplied to the Create Or Update Consumer Group operation.",
        "properties": {
          "createdAt": {
            "description": "Exact time the message was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventHubPath": {
            "description": "The path of the Event Hub.",
            "readOnly": true,
            "type": "string"
          },
          "updatedAt": {
            "description": "The exact time the message was updated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "userMetadata": {
            "description": "The user metadata.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsumerGroupResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Single item in List or Get Consumer group operation",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ConsumerGroupProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventHubCreateOrUpdateParameters": {
        "description": "Parameters supplied to the Create Or Update Event Hub operation.",
        "properties": {
          "location": {
            "description": "Location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "Name of the Event Hub.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/EventHubProperties",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "ARM type of the Namespace.",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "EventHubListResult": {
        "description": "The result of the List EventHubs operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if Value contains incomplete list of EventHubs.",
            "type": "string"
          },
          "value": {
            "description": "Result of the List EventHubs operation.",
            "items": {
              "$ref": "#/components/schemas/EventHubResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventHubProperties": {
        "description": "Properties supplied to the Create Or Update Event Hub operation.",
        "properties": {
          "createdAt": {
            "description": "Exact time the Event Hub was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "messageRetentionInDays": {
            "description": "Number of days to retain the events for this Event Hub.",
            "format": "int64",
            "type": "integer"
          },
          "partitionCount": {
            "description": "Number of partitions created for the Event Hub.",
            "format": "int64",
            "type": "integer"
          },
          "partitionIds": {
            "description": "Current number of shards on the Event Hub.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "status": {
            "description": "Enumerates the possible values for the status of the Event Hub.",
            "enum": [
              "Active",
              "Disabled",
              "Restoring",
              "SendDisabled",
              "ReceiveDisabled",
              "Creating",
              "Deleting",
              "Renaming",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "EntityStatus"
            }
          },
          "updatedAt": {
            "description": "The exact time the message was updated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventHubResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Single item in List or Get Event Hub operation",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NamespaceCreateOrUpdateParameters": {
        "description": "Parameters supplied to the Create Or Update Namespace operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Namespace tags.",
            "type": "object"
          },
          "location": {
            "description": "Namespace location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/NamespaceProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "NamespaceListResult": {
        "description": "The response of the List Namespace operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if Value contains incomplete list of namespaces.",
            "type": "string"
          },
          "value": {
            "description": "Result of the List Namespace operation.",
            "items": {
              "$ref": "#/components/schemas/NamespaceResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NamespaceProperties": {
        "description": "Properties of the Namespace supplied for create or update Namespace operation",
        "properties": {
          "createdAt": {
            "description": "The time the Namespace was created.",
            "format": "date-time",
            "type": "string"
          },
          "enabled": {
            "description": "Specifies whether this instance is enabled.",
            "type": "boolean"
          },
          "metricId": {
            "description": "Identifier for Azure Insights metrics",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the Namespace.",
            "type": "string"
          },
          "serviceBusEndpoint": {
            "externalDocs": {
              "url": "http://msdn.microsoft.com/en-us/library/windowsazure/jj873988.aspx"
            },
            "description": "Endpoint you can use to perform Service Bus operations.",
            "type": "string"
          },
          "status": {
            "description": "State of the Namespace.",
            "enum": [
              "Unknown",
              "Creating",
              "Created",
              "Activating",
              "Enabling",
              "Active",
              "Disabling",
              "Disabled",
              "SoftDeleting",
              "SoftDeleted",
              "Removing",
              "Removed",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "NamespaceState"
            }
          },
          "updatedAt": {
            "description": "The time the Namespace was updated.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NamespaceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "Single Namespace item in List or Get Operation",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/NamespaceProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku"
          }
        },
        "type": "object"
      },
      "NamespaceUpdateParameter": {
        "description": "Parameters supplied to the Patch/update Namespace operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the created Namespace"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "A Event Hub REST API operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.EventHub",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Invoice, etc.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "RegenerateKeysParameters": {
        "description": "Parameters supplied to the Regenerate Authorization Rule keys operation.",
        "properties": {
          "policykey": {
            "description": "Key that needs to be regenerated.",
            "enum": [
              "PrimaryKey",
              "SecondaryKey"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Policykey"
            }
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The Resource definition",
        "properties": {
          "id": {
            "description": "Resource Id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceListKeys": {
        "description": "Namespace/EventHub Connection String",
        "properties": {
          "keyName": {
            "description": "A string that describes the AuthorizationRule.",
            "readOnly": true,
            "type": "string"
          },
          "primaryConnectionString": {
            "description": "Primary connection string of the created Namespace AuthorizationRule.",
            "readOnly": true,
            "type": "string"
          },
          "primaryKey": {
            "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
            "readOnly": true,
            "type": "string"
          },
          "secondaryConnectionString": {
            "description": "Secondary connection string of the created Namespace AuthorizationRule.",
            "readOnly": true,
            "type": "string"
          },
          "secondaryKey": {
            "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SharedAccessAuthorizationRuleCreateOrUpdateParameters": {
        "description": "Parameters supplied to the Create Or Update Authorization Rules operation.",
        "properties": {
          "location": {
            "description": "Data center location.",
            "type": "string"
          },
          "name": {
            "description": "Name of the AuthorizationRule.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/SharedAccessAuthorizationRuleProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SharedAccessAuthorizationRuleListResult": {
        "description": "The response from the List Namespace operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules",
            "type": "string"
          },
          "value": {
            "description": "Result of the List Authorization Rules operation.",
            "items": {
              "$ref": "#/components/schemas/SharedAccessAuthorizationRuleResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SharedAccessAuthorizationRuleProperties": {
        "description": "Properties supplied to create or update SharedAccessAuthorizationRule",
        "properties": {
          "rights": {
            "description": "The rights associated with the rule.",
            "items": {
              "enum": [
                "Manage",
                "Send",
                "Listen"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "AccessRights"
              }
            },
            "type": "array"
          }
        },
        "required": [
          "rights"
        ],
        "type": "object"
      },
      "SharedAccessAuthorizationRuleResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Single item in a List or Get AuthorizationRule operation",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SharedAccessAuthorizationRuleProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Sku": {
        "description": "SKU parameters supplied to the create Namespace operation",
        "properties": {
          "capacity": {
            "description": "The Event Hubs throughput units.",
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "description": "Name of this SKU.",
            "enum": [
              "Basic",
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuName"
            }
          },
          "tier": {
            "description": "The billing tier of this particular SKU.",
            "enum": [
              "Basic",
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuTier"
            }
          }
        },
        "required": [
          "tier"
        ],
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Definition of Resource",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "location": {
            "description": "Resource location",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "UnavailableReason": {
        "description": "Specifies the reason for the unavailability of the service.",
        "enum": [
          "None",
          "InvalidName",
          "SubscriptionIsDisabled",
          "NameInUse",
          "NameInLockdown",
          "TooManyNamespaceInCurrentSubscription"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "UnavailableReason"
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}