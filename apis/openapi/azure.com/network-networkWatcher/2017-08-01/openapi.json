{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2017-08-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2017-08-01/networkWatcher.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcherListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcherListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of network watcher resources."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets all network watchers by subscription.",
        "operationId": "NetworkWatchers_ListAll",
        "x-ms-examples": {
          "List Network Watchers": {
            "$ref": "./examples/NetworkWatcherListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcherListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcherListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of network watcher resources."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets all network watchers by resource group.",
        "operationId": "NetworkWatchers_List",
        "x-ms-examples": {
          "List Network Watchers": {
            "$ref": "./examples/NetworkWatcherList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Deletes the specified network watcher resource.",
        "operationId": "NetworkWatchers_Delete",
        "x-ms-examples": {
          "Delete Network Watcher": {
            "$ref": "./examples/NetworkWatcherDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              }
            },
            "description": "Request successful. The operation returns a network watcher resource."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets the specified network watcher by resource group.",
        "operationId": "NetworkWatchers_Get",
        "x-ms-examples": {
          "Get Network Watcher": {
            "$ref": "./examples/NetworkWatcherGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting network watcher resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkWatcher"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting network watcher resource."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Creates or updates a network watcher in the specified resource group.",
        "operationId": "NetworkWatchers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkWatcher"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkWatcher"
              }
            }
          },
          "description": "Parameters that define the network watcher resource.",
          "required": true
        },
        "x-ms-examples": {
          "Create Network Watcher": {
            "$ref": "./examples/NetworkWatcherCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/configureFlowLog": {
      "post": {
        "parameters": [
          {
            "description": "The name of the network watcher resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              }
            },
            "description": "Successful request for setting flow log configuration."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Configures flow log on a specified resource.",
        "operationId": "NetworkWatchers_SetFlowLogConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowLogInformation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowLogInformation"
              }
            }
          },
          "description": "Parameters that define the configuration of flow log.",
          "required": true
        },
        "x-ms-examples": {
          "Configure Flow Logs": {
            "$ref": "./examples/NetworkWatcherFlowLogConfigure.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectivityCheck": {
      "post": {
        "parameters": [
          {
            "description": "The name of the network watcher resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectivityInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectivityInformation"
                }
              }
            },
            "description": "Successful request for checking connectivity."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectivityInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectivityInformation"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Verifies the possibility of establishing a direct TCP connection from a virtual machine to a given endpoint including another VM or an arbitrary remote server.",
        "operationId": "NetworkWatchers_CheckConnectivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectivityParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectivityParameters"
              }
            }
          },
          "description": "Parameters that determine how the connectivity check will be performed.",
          "required": true
        },
        "x-ms-examples": {
          "Check Connectivity": {
            "$ref": "./examples/NetworkWatcherConnectivityCheck.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/ipFlowVerify": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationIPFlowResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationIPFlowResult"
                }
              }
            },
            "description": "Request successful. The operation returns the result of IP flow verification."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationIPFlowResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationIPFlowResult"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Verify IP flow from the specified VM to a location given the currently configured NSG rules.",
        "operationId": "NetworkWatchers_VerifyIPFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationIPFlowParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerificationIPFlowParameters"
              }
            }
          },
          "description": "Parameters that define the IP flow to be verified.",
          "required": true
        },
        "x-ms-examples": {
          "Verify IP Flow": {
            "$ref": "./examples/NetworkWatcherIpFlowVerify.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/nextHop": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextHopResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextHopResult"
                }
              }
            },
            "description": "Request successful. The operation returns the next hop from the VM."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextHopResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextHopResult"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets the next hop from the specified VM.",
        "operationId": "NetworkWatchers_GetNextHop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NextHopParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NextHopParameters"
              }
            }
          },
          "description": "Parameters that define the source and destination endpoint.",
          "required": true
        },
        "x-ms-examples": {
          "Get Next Hop": {
            "$ref": "./examples/NetworkWatcherNextHopGet.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureListResult"
                }
              }
            },
            "description": "Successful packet capture enumeration request."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Lists all packet capture sessions within the specified resource group.",
        "operationId": "PacketCaptures_List",
        "x-ms-examples": {
          "List Packet Captures": {
            "$ref": "./examples/NetworkWatcherPacketCapturesList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the packet capture session.",
            "in": "path",
            "name": "packetCaptureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Deletes the specified packet capture session.",
        "operationId": "PacketCaptures_Delete",
        "x-ms-examples": {
          "Delete Packet Capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the packet capture session.",
            "in": "path",
            "name": "packetCaptureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureResult"
                }
              }
            },
            "description": "Request successful. The operation returns a packet capture session."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Gets a packet capture session by name.",
        "operationId": "PacketCaptures_Get",
        "x-ms-examples": {
          "Create Packet Capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the packet capture session.",
            "in": "path",
            "name": "packetCaptureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureResult"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting packet capture session."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Create and start a packet capture on the specified VM.",
        "operationId": "PacketCaptures_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PacketCapture"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PacketCapture"
              }
            }
          },
          "description": "Parameters that define the create packet capture operation.",
          "required": true
        },
        "x-ms-examples": {
          "Create Packet Capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/queryStatus": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name given to the packet capture session.",
            "in": "path",
            "name": "packetCaptureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureQueryStatusResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureQueryStatusResult"
                }
              }
            },
            "description": "Successful query of packet capture status."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureQueryStatusResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PacketCaptureQueryStatusResult"
                }
              }
            },
            "description": "Accepted query status of packet capture."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Query the status of a running packet capture session.",
        "operationId": "PacketCaptures_GetStatus",
        "x-ms-examples": {
          "Get Packet Capture status": {
            "$ref": "./examples/NetworkWatcherPacketCaptureQueryStatus.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/packetCaptures/{packetCaptureName}/stop": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the packet capture session.",
            "in": "path",
            "name": "packetCaptureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the packet capture session."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "PacketCaptures"
        ],
        "description": "Stops a specified packet capture session.",
        "operationId": "PacketCaptures_Stop",
        "x-ms-examples": {
          "Stop Packet Capture": {
            "$ref": "./examples/NetworkWatcherPacketCaptureStop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryFlowLogStatus": {
      "post": {
        "parameters": [
          {
            "description": "The name of the network watcher resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              }
            },
            "description": "Successful request for query flow log status."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlowLogInformation"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Queries status of flow log on a specified resource.",
        "operationId": "NetworkWatchers_GetFlowLogStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowLogStatusParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FlowLogStatusParameters"
              }
            }
          },
          "description": "Parameters that define a resource to query flow log status.",
          "required": true
        },
        "x-ms-examples": {
          "Query Flow Log Status": {
            "$ref": "./examples/NetworkWatcherFlowLogStatusQuery.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/queryTroubleshootResult": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              }
            },
            "description": "Successful get troubleshooting result request"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              }
            },
            "description": "Accepted get troubleshooting result request."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Get the last completed troubleshooting result on a specified resource",
        "operationId": "NetworkWatchers_GetTroubleshootingResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTroubleshootingParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryTroubleshootingParameters"
              }
            }
          },
          "description": "Parameters that define the resource to query the troubleshooting result.",
          "required": true
        },
        "x-ms-examples": {
          "Get Troubleshoot result": {
            "$ref": "./examples/NetworkWatcherTroubleshootResultQuery.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/securityGroupView": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroupViewResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroupViewResult"
                }
              }
            },
            "description": "Request successful. The operation returns security group rules on the VM."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroupViewResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecurityGroupViewResult"
                }
              }
            },
            "description": "Accepted and the operation will complete asynchronously."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets the configured and effective security group rules on the specified VM.",
        "operationId": "NetworkWatchers_GetVMSecurityRules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityGroupViewParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SecurityGroupViewParameters"
              }
            }
          },
          "description": "Parameters that define the VM to check security groups for.",
          "required": true
        },
        "x-ms-examples": {
          "Get Security Group View": {
            "$ref": "./examples/NetworkWatcherSecurityGroupViewGet.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/topology": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topology"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Topology"
                }
              }
            },
            "description": "Request successful. The operation returns the topology of resource group."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Gets the current network topology by resource group.",
        "operationId": "NetworkWatchers_GetTopology",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopologyParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TopologyParameters"
              }
            }
          },
          "description": "Parameters that define the representation of topology.",
          "required": true
        },
        "x-ms-examples": {
          "Get Topology": {
            "$ref": "./examples/NetworkWatcherTopologyGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/troubleshoot": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              }
            },
            "description": "Successful troubleshooting request"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TroubleshootingResult"
                }
              }
            },
            "description": "Accepted get troubleshooting request."
          }
        },
        "tags": [
          "NetworkWatchers"
        ],
        "description": "Initiate troubleshooting on a specified resource",
        "operationId": "NetworkWatchers_GetTroubleshooting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TroubleshootingParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TroubleshootingParameters"
              }
            }
          },
          "description": "Parameters that define the resource to troubleshoot.",
          "required": true
        },
        "x-ms-examples": {
          "Troubleshoot Resource": {
            "$ref": "./examples/NetworkWatcherTroubleshootGet.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ConnectivityDestination": {
        "description": "Parameters that define destination of connection.",
        "properties": {
          "address": {
            "description": "The IP address or URI the resource to which a connection attempt will be made.",
            "type": "string"
          },
          "port": {
            "description": "Port on which check connectivity will be performed.",
            "type": "integer"
          },
          "resourceId": {
            "description": "The ID of the resource to which a connection attempt will be made.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectivityHop": {
        "description": "Information about a hop between the source and the destination.",
        "properties": {
          "address": {
            "description": "The IP address of the hop.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The ID of the hop.",
            "readOnly": true,
            "type": "string"
          },
          "issues": {
            "description": "List of issues.",
            "items": {
              "$ref": "#/components/schemas/ConnectivityIssue"
            },
            "readOnly": true,
            "type": "array"
          },
          "nextHopIds": {
            "description": "List of next hop identifiers.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "resourceId": {
            "description": "The ID of the resource corresponding to this hop.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the hop.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectivityInformation": {
        "description": "Information on the connectivity status.",
        "properties": {
          "avgLatencyInMs": {
            "description": "Average latency in milliseconds.",
            "readOnly": true,
            "type": "integer"
          },
          "connectionStatus": {
            "description": "The connection status.",
            "enum": [
              "Unknown",
              "Connected",
              "Disconnected",
              "Degraded"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConnectionStatus"
            }
          },
          "hops": {
            "description": "List of hops between the source and the destination.",
            "items": {
              "$ref": "#/components/schemas/ConnectivityHop"
            },
            "readOnly": true,
            "type": "array"
          },
          "maxLatencyInMs": {
            "description": "Maximum latency in milliseconds.",
            "readOnly": true,
            "type": "integer"
          },
          "minLatencyInMs": {
            "description": "Minimum latency in milliseconds.",
            "readOnly": true,
            "type": "integer"
          },
          "probesFailed": {
            "description": "Number of failed probes.",
            "readOnly": true,
            "type": "integer"
          },
          "probesSent": {
            "description": "Total number of probes sent.",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConnectivityIssue": {
        "description": "Information about an issue encountered in the process of checking for connectivity.",
        "properties": {
          "context": {
            "description": "Provides additional context on the issue.",
            "items": {
              "$ref": "#/components/schemas/IssueContext"
            },
            "readOnly": true,
            "type": "array"
          },
          "origin": {
            "description": "The origin of the issue.",
            "enum": [
              "Local",
              "Inbound",
              "Outbound"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Origin"
            }
          },
          "severity": {
            "description": "The severity of the issue.",
            "enum": [
              "Error",
              "Warning"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Severity"
            }
          },
          "type": {
            "description": "The type of issue.",
            "enum": [
              "Unknown",
              "AgentStopped",
              "GuestFirewall",
              "DnsResolution",
              "SocketBind",
              "NetworkSecurityRule",
              "UserDefinedRoute",
              "PortThrottled",
              "Platform"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IssueType"
            }
          }
        },
        "type": "object"
      },
      "ConnectivityParameters": {
        "description": "Parameters that determine how the connectivity check will be performed.",
        "properties": {
          "destination": {
            "$ref": "#/components/schemas/ConnectivityDestination"
          },
          "source": {
            "$ref": "#/components/schemas/ConnectivitySource"
          }
        },
        "required": [
          "source",
          "destination"
        ],
        "type": "object"
      },
      "ConnectivitySource": {
        "description": "Parameters that define the source of the connection.",
        "properties": {
          "port": {
            "description": "The source port from which a connectivity check will be performed.",
            "type": "integer"
          },
          "resourceId": {
            "description": "The ID of the resource from which a connectivity check will be initiated.",
            "type": "string"
          }
        },
        "required": [
          "resourceId"
        ],
        "type": "object"
      },
      "FlowLogInformation": {
        "description": "Information on the configuration of flow log.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FlowLogProperties",
            "x-ms-client-flatten": true
          },
          "targetResourceId": {
            "description": "The ID of the resource to configure for flow logging.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId",
          "properties"
        ],
        "type": "object"
      },
      "FlowLogProperties": {
        "description": "Parameters that define the configuration of flow log.",
        "properties": {
          "enabled": {
            "description": "Flag to enable/disable flow logging.",
            "type": "boolean"
          },
          "retentionPolicy": {
            "$ref": "#/components/schemas/RetentionPolicyParameters"
          },
          "storageId": {
            "description": "ID of the storage account which is used to store the flow log.",
            "type": "string"
          }
        },
        "required": [
          "storageId",
          "enabled"
        ],
        "type": "object"
      },
      "FlowLogStatusParameters": {
        "description": "Parameters that define a resource to query flow log status.",
        "properties": {
          "targetResourceId": {
            "description": "The target resource where getting the flow logging status.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId"
        ],
        "type": "object"
      },
      "IssueContext": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "A key-value pair that provides additional context on the issue.",
        "type": "object"
      },
      "NetworkInterfaceAssociation": {
        "description": "Network interface and its custom security rules.",
        "properties": {
          "id": {
            "description": "Network interface ID.",
            "readOnly": true,
            "type": "string"
          },
          "securityRules": {
            "description": "Collection of custom security rules.",
            "items": {
              "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkWatcher": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Network watcher in a resource group.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/NetworkWatcherPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NetworkWatcherListResult": {
        "description": "List of network watcher resources.",
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/NetworkWatcher"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkWatcherPropertiesFormat": {
        "description": "The network watcher properties.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state of the resource.",
            "enum": [
              "Succeeded",
              "Updating",
              "Deleting",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          }
        },
        "type": "object"
      },
      "NextHopParameters": {
        "description": "Parameters that define the source and destination endpoint.",
        "properties": {
          "destinationIPAddress": {
            "description": "The destination IP address.",
            "type": "string"
          },
          "sourceIPAddress": {
            "description": "The source IP address.",
            "type": "string"
          },
          "targetNicResourceId": {
            "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional).",
            "type": "string"
          },
          "targetResourceId": {
            "description": "The resource identifier of the target resource against which the action is to be performed.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId",
          "sourceIPAddress",
          "destinationIPAddress"
        ],
        "type": "object"
      },
      "NextHopResult": {
        "description": "The information about next hop from the specified VM.",
        "properties": {
          "nextHopIpAddress": {
            "description": "Next hop IP Address",
            "type": "string"
          },
          "nextHopType": {
            "description": "Next hop type.",
            "enum": [
              "Internet",
              "VirtualAppliance",
              "VirtualNetworkGateway",
              "VnetLocal",
              "HyperNetGateway",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "NextHopType"
            }
          },
          "routeTableId": {
            "description": "The resource identifier for the route table associated with the route being returned. If the route being returned does not correspond to any user created routes then this field will be the string 'System Route'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PacketCapture": {
        "description": "Parameters that define the create packet capture operation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PacketCaptureParameters",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "PacketCaptureFilter": {
        "description": "Filter that is applied to packet capture request. Multiple filters can be applied.",
        "properties": {
          "localIPAddress": {
            "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5\"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
            "type": "string"
          },
          "localPort": {
            "description": "Local port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
            "type": "string"
          },
          "protocol": {
            "default": "Any",
            "description": "Protocol to be filtered on.",
            "enum": [
              "TCP",
              "UDP",
              "Any"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PcProtocol"
            }
          },
          "remoteIPAddress": {
            "description": "Local IP Address to be filtered on. Notation: \"127.0.0.1\" for single address entry. \"127.0.0.1-127.0.0.255\" for range. \"127.0.0.1;127.0.0.5;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
            "type": "string"
          },
          "remotePort": {
            "description": "Remote port to be filtered on. Notation: \"80\" for single port entry.\"80-85\" for range. \"80;443;\" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PacketCaptureListResult": {
        "description": "List of packet capture sessions.",
        "properties": {
          "value": {
            "description": "Information about packet capture sessions.",
            "items": {
              "$ref": "#/components/schemas/PacketCaptureResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PacketCaptureParameters": {
        "description": "Parameters that define the create packet capture operation.",
        "properties": {
          "bytesToCapturePerPacket": {
            "default": 0,
            "description": "Number of bytes captured per packet, the remaining bytes are truncated.",
            "type": "integer"
          },
          "filters": {
            "items": {
              "$ref": "#/components/schemas/PacketCaptureFilter"
            },
            "type": "array"
          },
          "storageLocation": {
            "$ref": "#/components/schemas/PacketCaptureStorageLocation"
          },
          "target": {
            "description": "The ID of the targeted resource, only VM is currently supported.",
            "type": "string"
          },
          "timeLimitInSeconds": {
            "default": 18000,
            "description": "Maximum duration of the capture session in seconds.",
            "type": "integer"
          },
          "totalBytesPerSession": {
            "default": 1073741824,
            "description": "Maximum size of the capture output.",
            "type": "integer"
          }
        },
        "required": [
          "target",
          "storageLocation"
        ],
        "type": "object"
      },
      "PacketCaptureQueryStatusResult": {
        "description": "Status of packet capture session.",
        "properties": {
          "captureStartTime": {
            "description": "The start time of the packet capture session.",
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "description": "The ID of the packet capture resource.",
            "type": "string"
          },
          "name": {
            "description": "The name of the packet capture resource.",
            "type": "string"
          },
          "packetCaptureError": {
            "description": "List of errors of packet capture session.",
            "items": {
              "enum": [
                "InternalError",
                "AgentStopped",
                "CaptureFailed",
                "LocalFileFailed",
                "StorageFailed"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PcError"
              }
            },
            "type": "array"
          },
          "packetCaptureStatus": {
            "description": "The status of the packet capture session.",
            "enum": [
              "NotStarted",
              "Running",
              "Stopped",
              "Error",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PcStatus"
            }
          },
          "stopReason": {
            "description": "The reason the current packet capture session was stopped.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PacketCaptureResult": {
        "description": "Information about packet capture session.",
        "properties": {
          "etag": {
            "default": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "id": {
            "description": "ID of the packet capture operation.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the packet capture session.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PacketCaptureResultProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PacketCaptureResultProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PacketCaptureParameters"
          }
        ],
        "description": "Describes the properties of a packet capture session.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state of the packet capture session.",
            "enum": [
              "Succeeded",
              "Updating",
              "Deleting",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          }
        },
        "type": "object"
      },
      "PacketCaptureStorageLocation": {
        "description": "Describes the storage location for a packet capture session.",
        "properties": {
          "filePath": {
            "description": "A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.",
            "type": "string"
          },
          "storageId": {
            "description": "The ID of the storage account to save the packet capture session. Required if no local file path is provided.",
            "type": "string"
          },
          "storagePath": {
            "description": "The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryTroubleshootingParameters": {
        "description": "Parameters that define the resource to query the troubleshooting result.",
        "properties": {
          "targetResourceId": {
            "description": "The target resource ID to query the troubleshooting result.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId"
        ],
        "type": "object"
      },
      "RetentionPolicyParameters": {
        "description": "Parameters that define the retention policy for flow log.",
        "properties": {
          "days": {
            "default": 0,
            "description": "Number of days to retain flow log records.",
            "type": "integer"
          },
          "enabled": {
            "default": false,
            "description": "Flag to enable/disable retention.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SecurityGroupNetworkInterface": {
        "description": "Network interface and all its associated security rules.",
        "properties": {
          "id": {
            "description": "ID of the network interface.",
            "type": "string"
          },
          "securityRuleAssociations": {
            "$ref": "#/components/schemas/SecurityRuleAssociations"
          }
        },
        "type": "object"
      },
      "SecurityGroupViewParameters": {
        "description": "Parameters that define the VM to check security groups for.",
        "properties": {
          "targetResourceId": {
            "description": "ID of the target VM.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId"
        ],
        "type": "object"
      },
      "SecurityGroupViewResult": {
        "description": "The information about security rules applied to the specified VM.",
        "properties": {
          "networkInterfaces": {
            "description": "List of network interfaces on the specified VM.",
            "items": {
              "$ref": "#/components/schemas/SecurityGroupNetworkInterface"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SecurityRuleAssociations": {
        "description": "All security rules associated with the network interface.",
        "properties": {
          "defaultSecurityRules": {
            "description": "Collection of default security rules of the network security group.",
            "items": {
              "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
            },
            "type": "array"
          },
          "effectiveSecurityRules": {
            "description": "Collection of effective security rules.",
            "items": {
              "$ref": "./networkInterface.json#/definitions/EffectiveNetworkSecurityRule"
            },
            "type": "array"
          },
          "networkInterfaceAssociation": {
            "$ref": "#/components/schemas/NetworkInterfaceAssociation"
          },
          "subnetAssociation": {
            "$ref": "#/components/schemas/SubnetAssociation"
          }
        },
        "type": "object"
      },
      "SubnetAssociation": {
        "description": "Network interface and its custom security rules.",
        "properties": {
          "id": {
            "description": "Subnet ID.",
            "readOnly": true,
            "type": "string"
          },
          "securityRules": {
            "description": "Collection of custom security rules.",
            "items": {
              "$ref": "./networkSecurityGroup.json#/definitions/SecurityRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Topology": {
        "description": "Topology of the specified resource group.",
        "properties": {
          "createdDateTime": {
            "description": "The datetime when the topology was initially created for the resource group.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "GUID representing the operation id.",
            "readOnly": true,
            "type": "string"
          },
          "lastModified": {
            "description": "The datetime when the topology was last modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "resources": {
            "items": {
              "$ref": "#/components/schemas/TopologyResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TopologyAssociation": {
        "description": "Resources that have an association with the parent resource.",
        "properties": {
          "associationType": {
            "description": "The association type of the child resource to the parent resource.",
            "enum": [
              "Associated",
              "Contains"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AssociationType"
            }
          },
          "name": {
            "description": "The name of the resource that is associated with the parent resource.",
            "type": "string"
          },
          "resourceId": {
            "description": "The ID of the resource that is associated with the parent resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TopologyParameters": {
        "description": "Parameters that define the representation of topology.",
        "properties": {
          "targetResourceGroupName": {
            "description": "The name of the target resource group to perform topology on.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceGroupName"
        ],
        "type": "object"
      },
      "TopologyResource": {
        "description": "The network resource topology information for the given resource group.",
        "properties": {
          "associations": {
            "description": "Holds the associations the resource has with other resources in the resource group.",
            "items": {
              "$ref": "#/components/schemas/TopologyAssociation"
            },
            "type": "array"
          },
          "id": {
            "description": "ID of the resource.",
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "Name of the resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TroubleshootingDetails": {
        "description": "Information gained from troubleshooting of specified resource.",
        "properties": {
          "detail": {
            "description": "Details on troubleshooting results.",
            "type": "string"
          },
          "id": {
            "description": "The id of the get troubleshoot operation.",
            "type": "string"
          },
          "reasonType": {
            "description": "Reason type of failure.",
            "type": "string"
          },
          "recommendedActions": {
            "description": "List of recommended actions.",
            "items": {
              "$ref": "#/components/schemas/TroubleshootingRecommendedActions"
            },
            "type": "array"
          },
          "summary": {
            "description": "A summary of troubleshooting.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TroubleshootingParameters": {
        "description": "Parameters that define the resource to troubleshoot.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TroubleshootingProperties",
            "x-ms-client-flatten": true
          },
          "targetResourceId": {
            "description": "The target resource to troubleshoot.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId",
          "properties"
        ],
        "type": "object"
      },
      "TroubleshootingProperties": {
        "description": "Storage location provided for troubleshoot.",
        "properties": {
          "storageId": {
            "description": "The ID for the storage account to save the troubleshoot result.",
            "type": "string"
          },
          "storagePath": {
            "description": "The path to the blob to save the troubleshoot result in.",
            "type": "string"
          }
        },
        "required": [
          "storageId",
          "storagePath"
        ],
        "type": "object"
      },
      "TroubleshootingRecommendedActions": {
        "description": "Recommended actions based on discovered issues.",
        "properties": {
          "actionId": {
            "description": "ID of the recommended action.",
            "type": "string"
          },
          "actionText": {
            "description": "Description of recommended actions.",
            "type": "string"
          },
          "actionUri": {
            "description": "The uri linking to a documentation for the recommended troubleshooting actions.",
            "type": "string"
          },
          "actionUriText": {
            "description": "The information from the URI for the recommended troubleshooting actions.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TroubleshootingResult": {
        "description": "Troubleshooting information gained from specified resource.",
        "properties": {
          "code": {
            "description": "The result code of the troubleshooting.",
            "type": "string"
          },
          "endTime": {
            "description": "The end time of the troubleshooting.",
            "format": "date-time",
            "type": "string"
          },
          "results": {
            "description": "Information from troubleshooting.",
            "items": {
              "$ref": "#/components/schemas/TroubleshootingDetails"
            },
            "type": "array"
          },
          "startTime": {
            "description": "The start time of the troubleshooting.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VerificationIPFlowParameters": {
        "description": "Parameters that define the IP flow to be verified.",
        "properties": {
          "direction": {
            "description": "The direction of the packet represented as a 5-tuple.",
            "enum": [
              "Inbound",
              "Outbound"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Direction"
            }
          },
          "localIPAddress": {
            "description": "The local IP address. Acceptable values are valid IPv4 addresses.",
            "type": "string"
          },
          "localPort": {
            "description": "The local port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction.",
            "type": "string"
          },
          "protocol": {
            "description": "Protocol to be verified on.",
            "enum": [
              "TCP",
              "UDP"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Protocol"
            }
          },
          "remoteIPAddress": {
            "description": "The remote IP address. Acceptable values are valid IPv4 addresses.",
            "type": "string"
          },
          "remotePort": {
            "description": "The remote port. Acceptable values are a single integer in the range (0-65535). Support for * for the source port, which depends on the direction.",
            "type": "string"
          },
          "targetNicResourceId": {
            "description": "The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of them, then this parameter must be specified. Otherwise optional).",
            "type": "string"
          },
          "targetResourceId": {
            "description": "The ID of the target resource to perform next-hop on.",
            "type": "string"
          }
        },
        "required": [
          "targetResourceId",
          "direction",
          "protocol",
          "localPort",
          "remotePort",
          "localIPAddress",
          "remoteIPAddress"
        ],
        "type": "object"
      },
      "VerificationIPFlowResult": {
        "description": "Results of IP flow verification on the target resource.",
        "properties": {
          "access": {
            "description": "Indicates whether the traffic is allowed or denied.",
            "enum": [
              "Allow",
              "Deny"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Access"
            }
          },
          "ruleName": {
            "description": "Name of the rule. If input is not matched against any security rule, it is not displayed.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}