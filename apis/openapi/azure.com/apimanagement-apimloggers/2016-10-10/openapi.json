{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.",
    "title": "ApiManagementClient",
    "version": "2016-10-10",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimloggers.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "description": "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| type  | eq                     |                                             |",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggerCollection"
                }
              }
            },
            "description": "Lists a collection of Logger entities."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Loggers"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/azure/mt592020.aspx"
        },
        "description": "Lists a collection of loggers in the specified service instance.",
        "operationId": "Loggers_ListByService",
        "x-ms-odata": "#/components/schemas/LoggerResponse",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/LoggerIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the logger to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The logger was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Loggers"
        ],
        "description": "Deletes the specified logger.",
        "operationId": "Loggers_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/LoggerIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoggerResponse"
                }
              }
            },
            "description": "The response body contains the specified Logger entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Loggers"
        ],
        "description": "Gets the details of the logger specified by its identifier.",
        "operationId": "Loggers_Get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/LoggerIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the logger to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The existing logger was successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Loggers"
        ],
        "description": "Updates an existing logger.",
        "operationId": "Loggers_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggerUpdateParameters"
              }
            }
          },
          "description": "Update parameters.",
          "required": true
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/LoggerIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Logger was successfully created."
          },
          "204": {
            "description": "The existing logger was successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Loggers"
        ],
        "description": "Creates or Updates a logger.",
        "operationId": "Loggers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoggerCreateParameters"
              }
            }
          },
          "description": "Create parameters.",
          "required": true
        }
      }
    }
  },
  "components": {
    "parameters": {
      "LoggerIdParameter": {
        "description": "Logger identifier. Must be unique in the API Management service instance.",
        "in": "path",
        "name": "loggerid",
        "required": true,
        "schema": {
          "maxLength": 256,
          "pattern": "^[^*#&+:<>?]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "LoggerCollection": {
        "description": "Paged Logger list representation.",
        "properties": {
          "count": {
            "description": "Total record count number across all pages.",
            "format": "int64",
            "type": "integer"
          },
          "nextLink": {
            "description": "Next page link if any.",
            "type": "string"
          },
          "value": {
            "description": "Logger values.",
            "items": {
              "$ref": "#/components/schemas/LoggerResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LoggerCreateParameters": {
        "description": "Parameters supplied to the Create Logger operation.",
        "properties": {
          "credentials": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The name and SendRule connection string of the event hub.",
            "example": {
              "connectionString": "Endpoint=endpoint and key from Azure classic portal. This property in credentials is must.",
              "name": "Event hub name. This is optional."
            },
            "type": "object"
          },
          "description": {
            "description": "Logger description.",
            "type": "string"
          },
          "isBuffered": {
            "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true.",
            "type": "boolean"
          },
          "type": {
            "description": "Logger type.",
            "enum": [
              "AzureEventHub"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LoggerTypeContract"
            }
          }
        },
        "required": [
          "type",
          "credentials"
        ],
        "type": "object"
      },
      "LoggerResponse": {
        "description": "The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure Event Hubs.",
        "properties": {
          "credentials": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The name and SendRule connection string of the event hub.",
            "example": {
              "connectionString": "Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...",
              "name": "apim"
            },
            "type": "object"
          },
          "description": {
            "description": "Logger description.",
            "maxLength": 256,
            "type": "string"
          },
          "id": {
            "description": "Uniquely identifies the logger within the current API Management service instance. The value is a valid relative URL in the format of /loggers/{loggerId} where {loggerId} is a logger identifier.",
            "readOnly": true,
            "type": "string"
          },
          "isBuffered": {
            "default": true,
            "description": "Whether records are buffered in the logger before publishing. Default is assumed to be true.",
            "type": "boolean"
          },
          "type": {
            "description": "Logger type.",
            "enum": [
              "AzureEventHub"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LoggerTypeContract"
            }
          }
        },
        "required": [
          "type",
          "credentials"
        ],
        "type": "object"
      },
      "LoggerUpdateParameters": {
        "description": "Parameters supplied to the Update Logger operation.",
        "properties": {
          "credentials": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Logger credentials.",
            "type": "object"
          },
          "description": {
            "description": "Logger description.",
            "type": "string"
          },
          "isBuffered": {
            "description": "whether records are buffered in the logger before publishing. Default is assumed to be true.",
            "type": "boolean"
          },
          "type": {
            "description": "Logger type.",
            "enum": [
              "AzureEventHub"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LoggerTypeContract"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}