openapi: 3.0.0
info:
  description: >-
    Use these REST APIs for performing operations on logger entity Azure API
    Management deployment.The Logger entity in API Management represents an
    event sink that you can use to log API Management events. Currently the
    Logger entity supports logging API Management events to Azure EventHub.
  title: ApiManagementClient
  version: '2017-03-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers':
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - description: >-
            | Field | Supported operators    | Supported
            functions                         |

            |-------|------------------------|---------------------------------------------|

            | id    | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith |

            | type  | eq                    
            |                                             |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/TopQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/SkipQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerCollection'
          description: Lists a collection of Logger entities.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      externalDocs:
        url: >-
          https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-log-event-hubs
      description: Lists a collection of loggers in the specified service instance.
      operationId: Logger_ListByService
      x-ms-examples:
        ApiManagementListLoggers:
          $ref: ./examples/ApiManagementListLoggers.json
      x-ms-odata: '#/components/schemas/LoggerContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/loggers/{loggerid}':
    delete:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/LoggerIdParameter'
        - description: >-
            The entity state (Etag) version of the logger to delete. A value of
            "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '204':
          description: The logger was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      description: Deletes the specified logger.
      operationId: Logger_Delete
      x-ms-examples:
        ApiManagementDeleteLogger:
          $ref: ./examples/ApiManagementDeleteLogger.json
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          description: The response body contains the specified Logger entity.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      description: Gets the details of the logger specified by its identifier.
      operationId: Logger_Get
      x-ms-examples:
        ApiManagementGetLogger:
          $ref: ./examples/ApiManagementGetLogger.json
    head:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          description: >-
            Specified logger entity exists and current entity state version is
            present in the ETag header.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      description: >-
        Gets the entity state (Etag) version of the logger specified by its
        identifier.
      operationId: Logger_GetEntityTag
      x-ms-examples:
        ApiManagementHeadLogger:
          $ref: ./examples/ApiManagementHeadLogger.json
    patch:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/LoggerIdParameter'
        - description: >-
            The entity state (Etag) version of the logger to update. A value of
            "*" can be used for If-Match to unconditionally apply the operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '204':
          description: The existing logger was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      description: Updates an existing logger.
      operationId: Logger_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerUpdateContract'
        description: Update parameters.
        required: true
      x-ms-examples:
        ApiManagementUpdateLogger:
          $ref: ./examples/ApiManagementUpdateLogger.json
    put:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/LoggerIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          description: The existing logger was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoggerContract'
          description: Logger was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Loggers
      description: Creates or Updates a logger.
      operationId: Logger_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoggerContract'
        description: Create parameters.
        required: true
      x-ms-examples:
        ApiManagementCreateAILogger:
          $ref: ./examples/ApiManagementCreateAILogger.json
        ApiManagementCreateEHLogger:
          $ref: ./examples/ApiManagementCreateEHLogger.json
components:
  parameters:
    LoggerIdParameter:
      description: >-
        Logger identifier. Must be unique in the API Management service
        instance.
      in: path
      name: loggerid
      required: true
      schema:
        maxLength: 256
        pattern: '^[^*#&+:<>?]+$'
        type: string
      x-ms-parameter-location: method
  schemas:
    LoggerCollection:
      description: Paged Logger list representation.
      properties:
        count:
          description: Total record count number across all pages.
          format: int64
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Logger values.
          items:
            $ref: '#/components/schemas/LoggerContract'
          type: array
      type: object
    LoggerContract:
      allOf:
        - $ref: ./apimanagement.json#/definitions/Resource
      description: Logger details.
      properties:
        properties:
          $ref: '#/components/schemas/LoggerContractProperties'
          description: Logger entity contract properties.
          x-ms-client-flatten: true
      type: object
    LoggerContractProperties:
      description: >-
        The Logger entity in API Management represents an event sink that you
        can use to log API Management events. Currently the Logger entity
        supports logging API Management events to Azure Event Hubs.
      properties:
        credentials:
          additionalProperties:
            type: string
          description: >-
            The name and SendRule connection string of the event hub for
            azureEventHub logger.

            Instrumentation key for applicationInsights logger.
          example:
            connectionString: >-
              Endpoint=sb://contoso-ns.servicebus.windows.net/;SharedAccessKeyName=Sender;SharedAccessKey=...
            name: apim
          type: object
        description:
          description: Logger description.
          maxLength: 256
          type: string
        isBuffered:
          description: >-
            Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
              - description: Azure Event Hub as log destination.
                value: azureEventHub
              - description: Azure Application Insights as log destination.
                value: applicationInsights
        sampling:
          $ref: '#/components/schemas/LoggerSamplingContract'
          description: Sampling settings for an ApplicationInsights logger.
          example:
            sampling:
              evaluationInterval: PT2M
              samplingType: adaptive
      required:
        - loggerType
        - credentials
      type: object
    LoggerSamplingContract:
      description: Sampling settings contract.
      properties:
        properties:
          $ref: '#/components/schemas/LoggerSamplingProperties'
          description: Sampling settings entity contract properties.
          x-ms-client-flatten: true
      type: object
    LoggerSamplingProperties:
      description: Sampling settings for an ApplicationInsights logger.
      properties:
        evaluationInterval:
          description: Rate re-evaluation interval in ISO8601 format.
          format: duration
          maxLength: 2000
          minLength: 1
          type: string
        initialPercentage:
          description: Initial sampling rate.
          format: double
          type: number
        maxPercentage:
          description: Maximum allowed rate of sampling.
          format: double
          type: number
        maxTelemetryItemsPerSecond:
          description: Target rate of telemetry items per second.
          format: int32
          type: integer
        minPercentage:
          description: Minimum allowed rate of sampling.
          format: double
          type: number
        movingAverageRatio:
          description: Moving average ration assigned to most recent value.
          format: double
          type: number
        percentage:
          description: Rate of sampling for fixed-rate sampling.
          format: double
          type: number
        percentageDecreaseTimeout:
          description: >-
            Duration in ISO8601 format after which it's allowed to lower the
            sampling rate.
          format: duration
          maxLength: 2000
          minLength: 1
          type: string
        percentageIncreaseTimeout:
          description: >-
            Duration in ISO8601 format after which it's allowed to increase the
            sampling rate.
          format: duration
          maxLength: 2000
          minLength: 1
          type: string
        samplingType:
          description: Sampling type.
          enum:
            - fixed
            - adaptive
          type: string
          x-ms-enum:
            modelAsString: true
            name: SamplingType
            values:
              - description: Fixed-rate sampling.
                value: fixed
              - description: Sampling with a dynamically adjustable rate.
                value: adaptive
      type: object
    LoggerUpdateContract:
      description: Logger update contract.
      properties:
        properties:
          $ref: '#/components/schemas/LoggerUpdateParameters'
          description: Logger entity update contract properties.
          x-ms-client-flatten: true
      type: object
    LoggerUpdateParameters:
      description: Parameters supplied to the Update Logger operation.
      properties:
        credentials:
          additionalProperties:
            type: string
          description: Logger credentials.
          type: object
        description:
          description: Logger description.
          type: string
        isBuffered:
          description: >-
            Whether records are buffered in the logger before publishing.
            Default is assumed to be true.
          type: boolean
        loggerType:
          description: Logger type.
          enum:
            - azureEventHub
            - applicationInsights
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoggerType
            values:
              - description: Azure Event Hub as log destination.
                value: azureEventHub
              - description: Azure Application Insights as log destination.
                value: applicationInsights
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

