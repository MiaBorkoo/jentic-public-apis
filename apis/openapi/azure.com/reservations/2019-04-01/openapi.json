{
  "openapi": "3.0.0",
  "info": {
    "description": "This API describe Azure Reservation",
    "title": "Azure Reservation API",
    "version": "2019-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/reservations/resource-manager/Microsoft.Capacity/preview/2019-04-01/reservations.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Capacity/calculatePrice": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalculatePriceResponse"
                }
              }
            },
            "description": "Detailed price info for purchasing `ReservationOrder`"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Calculate"
        ],
        "description": "Calculate price for placing a `ReservationOrder`.",
        "operationId": "ReservationOrder_Calculate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PurchaseRequest"
        },
        "summary": "Calculate price for a `ReservationOrder`.",
        "x-ms-examples": {
          "Purchase": {
            "$ref": "./examples/CalculateReservationOrder.json"
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationList"
                }
              }
            },
            "description": "List all the operations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Operation"
        ],
        "description": "List all the operations.",
        "operationId": "Operation_List",
        "summary": "Get operations.",
        "x-ms-examples": {
          "GetOperations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationOrderList"
                }
              }
            },
            "description": "List of `ReservationOrder`s"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation"
        ],
        "description": "List of all the `ReservationOrder`s that the user has access to in the current tenant.",
        "operationId": "ReservationOrder_List",
        "summary": "Get all `ReservationOrder`s.",
        "x-ms-examples": {
          "ReservationOrderList": {
            "$ref": "./examples/GetReservationOrders.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "May be used to expand the planInformation.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationOrderResponse"
                }
              }
            },
            "description": "Get the details of the `ReservationOrder`."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation"
        ],
        "description": "Get the details of the `ReservationOrder`.",
        "operationId": "ReservationOrder_Get",
        "summary": "Get a specific `ReservationOrder`.",
        "x-ms-examples": {
          "GetReservation": {
            "$ref": "./examples/GetReservationOrderDetails.json"
          },
          "GetReservationWithExpandPayments": {
            "$ref": "./examples/GetReservationOrderDetailsWithExpandPlanInformation.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationOrderResponse"
                }
              }
            },
            "description": "The resource has been created"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationOrderResponse"
                }
              }
            },
            "description": "The request is accepted and is being processed. Operation result link is in location header."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Purchase"
        ],
        "description": "Purchase `ReservationOrder` and create resource under the specified URI.",
        "operationId": "ReservationOrder_Purchase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PurchaseRequest"
              }
            }
          },
          "description": "Information needed for calculate or purchase reservation",
          "required": true
        },
        "summary": "Purchase `ReservationOrder`",
        "x-ms-examples": {
          "Purchase": {
            "$ref": "./examples/PurchaseReservationOrder.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/merge": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ReservationResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Returns the `Reservation` created after the merge."
          },
          "202": {
            "description": "The request is accepted and is being processed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Merge"
        ],
        "description": "Merge the specified `Reservation`s into a new `Reservation`. The two `Reservation`s being merged must have same properties.",
        "operationId": "Reservation_Merge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            }
          },
          "description": "Information needed for commercial request for a reservation",
          "required": true
        },
        "summary": "Merges two `Reservation`s.",
        "x-ms-examples": {
          "Merge": {
            "$ref": "./examples/MergeReservations.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationList"
                }
              }
            },
            "description": "List `Reservation`s within a single `ReservationOrder`."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation"
        ],
        "description": "List `Reservation`s within a single `ReservationOrder`.",
        "operationId": "Reservation_List",
        "summary": "Get `Reservation`s in a given reservation Order",
        "x-ms-examples": {
          "ReservationList": {
            "$ref": "./examples/GetReservations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandRenewPropertiesParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            },
            "description": "Get `Reservation` details."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation"
        ],
        "description": "Get specific `Reservation` details.",
        "operationId": "Reservation_Get",
        "summary": "Get `Reservation` details.",
        "x-ms-examples": {
          "GetReservation": {
            "$ref": "./examples/GetReservationDetails.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationResponse"
                }
              }
            },
            "description": "Returns the updated `Reservation`."
          },
          "202": {
            "description": "The request is accepted and is being processed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation",
          "ApplyScope"
        ],
        "description": "Updates the applied scopes of the `Reservation`.",
        "operationId": "Reservation_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Patch"
              }
            }
          },
          "description": "Information needed to patch a reservation item",
          "required": true
        },
        "summary": "Updates a `Reservation`.",
        "x-ms-examples": {
          "PatchReservation": {
            "$ref": "./examples/UpdateReservation.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/archive": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Archived a reservation."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Archive"
        ],
        "description": "Archiving a `Reservation` moves it to `Archived` state.",
        "operationId": "Reservation_Archive",
        "summary": "Archive a `Reservation`.",
        "x-ms-examples": {
          "Archive": {
            "$ref": "./examples/Archive.json"
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/availableScopes": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Properties"
                }
              }
            },
            "description": "List of `Subscription`s created after the filter."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, AvailableScopes"
        ],
        "description": "Get Available Scopes for `Reservation`.\n",
        "operationId": "Reservation_AvailableScopes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AvailableScopeRequest"
              }
            }
          },
          "description": "Parameter for listing the available scopes",
          "required": true
        },
        "summary": "Get Available Scopes for `Reservation`.",
        "x-ms-examples": {
          "AvailableScopes": {
            "$ref": "./examples/GetAvailableScope.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/revisions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationList"
                }
              }
            },
            "description": "List of all the revisions for the `Reservation`."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation"
        ],
        "description": "List of all the revisions for the `Reservation`.",
        "operationId": "Reservation_ListRevisions",
        "summary": "Get `Reservation` revisions.",
        "x-ms-examples": {
          "ReservationRevisions": {
            "$ref": "./examples/GetReservationRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}/unarchive": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Unarchive complete for the reservation."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Unarchive"
        ],
        "description": "Unarchiving a `Reservation` moves it to the state it was before archiving.\n",
        "operationId": "Reservation_Unarchive",
        "summary": "Unarchive a `Reservation`.",
        "x-ms-examples": {
          "Unarchive": {
            "$ref": "./examples/Unarchive.json"
          }
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/split": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ReservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ReservationResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of `Reservation`s created after the split operation."
          },
          "202": {
            "description": "The request is accepted and is being processed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Reservation, Split"
        ],
        "description": "Split a `Reservation` into two `Reservation`s with specified quantity distribution.",
        "operationId": "Reservation_Split",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitRequest"
              }
            }
          },
          "description": "Information needed to Split a reservation item",
          "required": true
        },
        "summary": "Split the `Reservation`.",
        "x-ms-examples": {
          "Split": {
            "$ref": "./examples/SplitReservation.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/appliedReservations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppliedReservations"
                }
              }
            },
            "description": "Applicable `Reservation`s."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "AppliedReservation"
        ],
        "description": "Get applicable `Reservation`s that are applied to this subscription or a resource group under this subscription.",
        "operationId": "GetAppliedReservationList",
        "summary": "Get list of applicable `Reservation`s.",
        "x-ms-examples": {
          "AppliedReservationList": {
            "$ref": "./examples/GetAppliedReservations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Capacity/catalogs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ReservedResourceTypeIdParameter"
          },
          {
            "$ref": "#/components/parameters/LocationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Catalog"
                  },
                  "type": "array"
                }
              }
            },
            "description": "List of available resources"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unexpected error"
          }
        },
        "tags": [
          "Catalog"
        ],
        "operationId": "GetCatalog",
        "summary": "Get the regions and skus that are available for RI purchase for the specified Azure subscription.",
        "x-ms-examples": {
          "Catalog": {
            "$ref": "./examples/GetCatalog.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Supported version for this document is 2019-04-01",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ExpandRenewPropertiesParameter": {
        "description": "Supported value of this query is renewProperties",
        "in": "query",
        "name": "expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "LocationIdParameter": {
        "description": "Filters the skus based on the location specified in this parameter. This can be an azure region or global",
        "in": "query",
        "name": "location",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ReservationIdParameter": {
        "description": "Id of the Reservation Item",
        "in": "path",
        "name": "reservationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ReservationOrderIdParameter": {
        "description": "Order Id of the reservation",
        "in": "path",
        "name": "reservationOrderId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ReservedResourceTypeIdParameter": {
        "description": "The type of the resource for which the skus should be provided.",
        "in": "query",
        "name": "reservedResourceType",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Id of the subscription",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "PurchaseRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PurchaseRequest"
            }
          }
        },
        "description": "Information needed for calculate or purchase reservation",
        "required": true
      }
    },
    "schemas": {
      "AppliedReservationList": {
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of reservations",
            "type": "string"
          },
          "value": {
            "items": {
              "description": "Reservation resource Id. \"/providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}\"",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AppliedReservations": {
        "properties": {
          "id": {
            "description": "Identifier of the applied reservations",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of resource",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AppliedReservationsProperties",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Type of resource. \"Microsoft.Capacity/AppliedReservations\"",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppliedReservationsProperties": {
        "properties": {
          "reservationOrderIds": {
            "$ref": "#/components/schemas/AppliedReservationList"
          }
        },
        "type": "object"
      },
      "AppliedScopeProperties": {
        "properties": {
          "displayName": {
            "description": "Management group display name",
            "type": "string"
          },
          "managementGroupId": {
            "description": "Management group ID of the format /providers/Microsoft.Management/managementGroups/{managementGroupId}",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant ID of the applied scope type",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AppliedScopeType": {
        "description": "Type of the Applied Scope.",
        "enum": [
          "Single",
          "Shared"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AppliedScopeType"
        }
      },
      "AppliedScopes": {
        "description": "List of the subscriptions that the benefit will be applied. Do not specify if AppliedScopeType is Shared.",
        "items": {
          "maxItems": 1,
          "minItems": 1,
          "type": "string"
        },
        "type": "array"
      },
      "AvailableScopeRequest": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AvailableScopeRequestProperties"
          }
        },
        "type": "object"
      },
      "AvailableScopeRequestProperties": {
        "description": "List of scopes for which availability should be checked",
        "properties": {
          "scopes": {
            "description": "Scopes to be checked for availability",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BillingScopeId": {
        "description": "Subscription that will be charged for purchasing Reservation",
        "type": "string"
      },
      "CalculatePriceResponse": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CalculatePriceResponseProperties"
          }
        },
        "type": "object"
      },
      "CalculatePriceResponseProperties": {
        "properties": {
          "billingCurrencyTotal": {
            "description": "Currency and amount that customer will be charged in customer's local currency. Tax is not included.",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "grandTotal": {
            "description": "Grand Total",
            "type": "number"
          },
          "isBillingPartnerManaged": {
            "description": "True if billing is managed by Microsoft Partner. Used only for CSP accounts.",
            "type": "boolean"
          },
          "netTotal": {
            "description": "Net total",
            "type": "number"
          },
          "paymentSchedule": {
            "items": {
              "$ref": "#/components/schemas/PaymentDetail"
            },
            "type": "array"
          },
          "pricingCurrencyTotal": {
            "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included.",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "reservationOrderId": {
            "description": "GUID that represents reservation order that can be placed after calculating price.",
            "type": "string"
          },
          "skuDescription": {
            "description": "Description of SKU that is being purchased.",
            "type": "string"
          },
          "skuTitle": {
            "description": "Title of SKU that is being purchased.",
            "type": "string"
          },
          "taxTotal": {
            "description": "Tax total",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Catalog": {
        "properties": {
          "billingPlans": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/ReservationBillingPlan"
              },
              "type": "array"
            },
            "description": "The billing plan options available for this SKU.",
            "type": "object"
          },
          "locations": {
            "items": {
              "description": "The set of locations that the SKU is available. If not specified, the SKU is available in all locations.",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "msrp": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/MsrpProperty"
              },
              "type": "object"
            },
            "description": "The sku's MSRP values for each term",
            "type": "object"
          },
          "name": {
            "description": "The name of SKU",
            "readOnly": true,
            "type": "string"
          },
          "resourceType": {
            "description": "The type of resource the SKU applies to.",
            "readOnly": true,
            "type": "string"
          },
          "restrictions": {
            "items": {
              "$ref": "#/components/schemas/SkuRestriction"
            },
            "readOnly": true,
            "type": "array"
          },
          "skuProperties": {
            "items": {
              "$ref": "#/components/schemas/SkuProperty"
            },
            "readOnly": true,
            "type": "array"
          },
          "terms": {
            "description": "Available reservation terms for this resource",
            "items": {
              "$ref": "#/components/schemas/ReservationTerm"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Error": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ExtendedErrorInfo"
          }
        },
        "type": "object"
      },
      "ErrorResponseCode": {
        "enum": [
          "NotSpecified",
          "InternalServerError",
          "ServerTimeout",
          "AuthorizationFailed",
          "BadRequest",
          "ClientCertificateThumbprintNotSet",
          "InvalidRequestContent",
          "OperationFailed",
          "HttpMethodNotSupported",
          "InvalidRequestUri",
          "MissingTenantId",
          "InvalidTenantId",
          "InvalidReservationOrderId",
          "InvalidReservationId",
          "ReservationIdNotInReservationOrder",
          "ReservationOrderNotFound",
          "InvalidSubscriptionId",
          "InvalidAccessToken",
          "InvalidLocationId",
          "UnauthenticatedRequestsThrottled",
          "InvalidHealthCheckType",
          "Forbidden",
          "BillingScopeIdCannotBeChanged",
          "AppliedScopesNotAssociatedWithCommerceAccount",
          "PatchValuesSameAsExisting",
          "RoleAssignmentCreationFailed",
          "ReservationOrderCreationFailed",
          "ReservationOrderNotEnabled",
          "CapacityUpdateScopesFailed",
          "UnsupportedReservationTerm",
          "ReservationOrderIdAlreadyExists",
          "RiskCheckFailed",
          "CreateQuoteFailed",
          "ActivateQuoteFailed",
          "NonsupportedAccountId",
          "PaymentInstrumentNotFound",
          "MissingAppliedScopesForSingle",
          "NoValidReservationsToReRate",
          "ReRateOnlyAllowedForEA",
          "OperationCannotBePerformedInCurrentState",
          "InvalidSingleAppliedScopesCount",
          "InvalidFulfillmentRequestParameters",
          "NotSupportedCountry",
          "InvalidRefundQuantity",
          "PurchaseError",
          "BillingCustomerInputError",
          "BillingPaymentInstrumentSoftError",
          "BillingPaymentInstrumentHardError",
          "BillingTransientError",
          "BillingError",
          "FulfillmentConfigurationError",
          "FulfillmentOutOfStockError",
          "FulfillmentTransientError",
          "FulfillmentError",
          "CalculatePriceFailed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ErrorResponseCode"
        }
      },
      "ExtendedErrorInfo": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorResponseCode"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExtendedStatusInfo": {
        "properties": {
          "message": {
            "description": "The message giving detailed information about the status code.",
            "type": "string"
          },
          "statusCode": {
            "$ref": "#/components/schemas/ReservationStatusCode"
          }
        },
        "type": "object"
      },
      "InstanceFlexibility": {
        "description": "Turning this on will apply the reservation discount to other VMs in the same VM size group. Only specify for VirtualMachines reserved resource type.",
        "enum": [
          "On",
          "Off"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "InstanceFlexibility"
        }
      },
      "MergeProperties": {
        "properties": {
          "sources": {
            "description": "Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MergeRequest": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MergeProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MsrpProperty": {
        "properties": {
          "amount": {
            "description": "Represents the amount of money in the currency.",
            "type": "number"
          },
          "currencyCode": {
            "description": "Represents the currency code - 3 character ISO.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "properties": {
          "description": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "resource": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationList": {
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of items.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/OperationResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationResponse": {
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay"
          },
          "name": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Patch": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PatchProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PatchProperties": {
        "properties": {
          "appliedScopeType": {
            "$ref": "#/components/schemas/AppliedScopeType"
          },
          "appliedScopes": {
            "$ref": "#/components/schemas/AppliedScopes"
          },
          "instanceFlexibility": {
            "$ref": "#/components/schemas/InstanceFlexibility"
          },
          "name": {
            "description": "Name of the Reservation",
            "type": "string"
          },
          "renew": {
            "$ref": "#/components/schemas/Renew"
          },
          "renewProperties": {
            "properties": {
              "purchaseProperties": {
                "$ref": "#/components/schemas/PurchaseRequest"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "PaymentDetail": {
        "description": "Information about payment related to a reservation order.",
        "properties": {
          "billingAccount": {
            "description": "Shows the Account that is charged for this payment.",
            "type": "string"
          },
          "billingCurrencyTotal": {
            "$ref": "#/components/schemas/Price",
            "description": "Amount charged in Billing currency. Tax not included. Is null for future payments"
          },
          "dueDate": {
            "description": "Date when the payment needs to be done.",
            "format": "date",
            "type": "string"
          },
          "extendedStatusInfo": {
            "$ref": "#/components/schemas/ExtendedStatusInfo"
          },
          "paymentDate": {
            "description": "Date when the transaction is completed. Is null when it is scheduled.",
            "format": "date",
            "type": "string"
          },
          "pricingCurrencyTotal": {
            "$ref": "#/components/schemas/Price",
            "description": "Amount in pricing currency. Tax not included."
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        },
        "type": "object"
      },
      "PaymentStatus": {
        "description": "Describes whether the payment is completed, failed, cancelled or scheduled in the future.",
        "enum": [
          "Succeeded",
          "Failed",
          "Scheduled",
          "Cancelled"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "PaymentStatus"
        }
      },
      "Price": {
        "properties": {
          "amount": {
            "format": "double",
            "type": "number"
          },
          "currencyCode": {
            "description": "The ISO 4217 3-letter currency code for the currency used by this purchase record.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Properties": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SubscriptionScopeProperties"
          }
        },
        "type": "object"
      },
      "PurchaseRequest": {
        "properties": {
          "location": {
            "description": "The Azure Region where the reserved resource lives.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PurchaseRequestProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/SkuName"
          }
        },
        "type": "object"
      },
      "PurchaseRequestProperties": {
        "properties": {
          "appliedScopeType": {
            "$ref": "#/components/schemas/AppliedScopeType"
          },
          "appliedScopes": {
            "$ref": "#/components/schemas/AppliedScopes"
          },
          "billingPlan": {
            "$ref": "#/components/schemas/ReservationBillingPlan"
          },
          "billingScopeId": {
            "$ref": "#/components/schemas/BillingScopeId"
          },
          "displayName": {
            "description": "Friendly name of the Reservation",
            "type": "string"
          },
          "instanceFlexibility": {
            "$ref": "#/components/schemas/InstanceFlexibility"
          },
          "quantity": {
            "$ref": "#/components/schemas/ReservationQuantity"
          },
          "renew": {
            "$ref": "#/components/schemas/Renew"
          },
          "reservedResourceProperties": {
            "description": "Properties specific to each reserved resource type. Not required if not applicable.",
            "properties": {
              "instanceFlexibility": {
                "$ref": "#/components/schemas/InstanceFlexibility"
              }
            },
            "type": "object"
          },
          "reservedResourceType": {
            "$ref": "#/components/schemas/ReservedResourceType"
          },
          "term": {
            "$ref": "#/components/schemas/ReservationTerm"
          }
        },
        "type": "object"
      },
      "Renew": {
        "default": false,
        "description": "Setting this to true will automatically purchase a new reservation on the expiration date time.",
        "type": "boolean"
      },
      "RenewPropertiesResponse": {
        "properties": {
          "billingCurrencyTotal": {
            "description": "Currency and amount that customer will be charged in customer's local currency for renewal purchase. Tax is not included.",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "pricingCurrencyTotal": {
            "description": "Amount that Microsoft uses for record. Used during refund for calculating refund limit. Tax is not included. This is locked price 30 days before expiry.",
            "properties": {
              "amount": {
                "type": "number"
              },
              "currencyCode": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "purchaseProperties": {
            "$ref": "#/components/schemas/PurchaseRequest"
          }
        },
        "type": "object"
      },
      "ReservationBillingPlan": {
        "description": "Represent the billing plans.",
        "enum": [
          "Upfront",
          "Monthly"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ReservationBillingPlan"
        }
      },
      "ReservationList": {
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of reservations.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/ReservationResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationMergeProperties": {
        "properties": {
          "mergeDestination": {
            "description": "Reservation Resource Id Created due to the merge. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "type": "string"
          },
          "mergeSources": {
            "description": "Resource Ids of the Source Reservation's merged to form this Reservation. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationOrderBillingPlanInformation": {
        "description": "Information describing the type of billing plan for this reservation.",
        "properties": {
          "nextPaymentDueDate": {
            "description": "For recurring billing plans, indicates the date when next payment will be processed. Null when total is paid off.",
            "format": "date",
            "type": "string"
          },
          "pricingCurrencyTotal": {
            "$ref": "#/components/schemas/Price",
            "description": "Amount of money to be paid for the Order. Tax is not included."
          },
          "startDate": {
            "description": "Date when the billing plan has started.",
            "format": "date",
            "type": "string"
          },
          "transactions": {
            "items": {
              "$ref": "#/components/schemas/PaymentDetail"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationOrderList": {
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of reservationOrders.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/ReservationOrderResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationOrderProperties": {
        "properties": {
          "benefitStartTime": {
            "description": "This is the DateTime when the reservation benefit started.",
            "format": "date-time",
            "type": "string"
          },
          "billingPlan": {
            "$ref": "#/components/schemas/ReservationBillingPlan"
          },
          "createdDateTime": {
            "description": "This is the DateTime when the reservation was created.",
            "format": "date-time",
            "type": "string"
          },
          "displayName": {
            "description": "Friendly name for user to easily identified the reservation.",
            "type": "string"
          },
          "expiryDate": {
            "description": "This is the date when the Reservation will expire.",
            "format": "date",
            "type": "string"
          },
          "originalQuantity": {
            "$ref": "#/components/schemas/ReservationQuantity"
          },
          "planInformation": {
            "$ref": "#/components/schemas/ReservationOrderBillingPlanInformation"
          },
          "provisioningState": {
            "description": "Current state of the reservation.",
            "type": "string"
          },
          "requestDateTime": {
            "description": "This is the DateTime when the reservation was initially requested for purchase.",
            "format": "date-time",
            "type": "string"
          },
          "reservations": {
            "items": {
              "$ref": "#/components/schemas/ReservationResponse"
            },
            "type": "array"
          },
          "term": {
            "$ref": "#/components/schemas/ReservationTerm"
          }
        },
        "type": "object"
      },
      "ReservationOrderResponse": {
        "properties": {
          "etag": {
            "type": "integer"
          },
          "id": {
            "description": "Identifier of the reservation",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the reservation",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ReservationOrderProperties",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Type of resource. \"Microsoft.Capacity/reservations\"",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ReservationProperties": {
        "properties": {
          "appliedScopeProperties": {
            "$ref": "#/components/schemas/AppliedScopeProperties"
          },
          "appliedScopeType": {
            "$ref": "#/components/schemas/AppliedScopeType"
          },
          "appliedScopes": {
            "$ref": "#/components/schemas/AppliedScopes"
          },
          "archived": {
            "description": "Property to determine if a reservation is archived or not",
            "type": "boolean"
          },
          "benefitStartTime": {
            "description": "This is the DateTime when the reservation benefit started.",
            "format": "date-time",
            "type": "string"
          },
          "billingPlan": {
            "$ref": "#/components/schemas/ReservationBillingPlan"
          },
          "billingScopeId": {
            "$ref": "#/components/schemas/BillingScopeId"
          },
          "capabilities": {
            "description": "List the Capabilities of a reservation",
            "type": "string"
          },
          "displayName": {
            "description": "Friendly name for user to easily identify the reservation",
            "type": "string"
          },
          "effectiveDateTime": {
            "description": "DateTime of the Reservation starting when this version is effective from.",
            "format": "date-time",
            "type": "string"
          },
          "expiryDate": {
            "description": "This is the date when the Reservation will expire.",
            "format": "date",
            "type": "string"
          },
          "extendedStatusInfo": {
            "$ref": "#/components/schemas/ExtendedStatusInfo"
          },
          "instanceFlexibility": {
            "$ref": "#/components/schemas/InstanceFlexibility"
          },
          "lastUpdatedDateTime": {
            "description": "DateTime of the last time the Reservation was updated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "mergeProperties": {
            "$ref": "#/components/schemas/ReservationMergeProperties"
          },
          "provisioningState": {
            "description": "Current state of the reservation.",
            "type": "string"
          },
          "quantity": {
            "$ref": "#/components/schemas/ReservationQuantity"
          },
          "renew": {
            "$ref": "#/components/schemas/Renew"
          },
          "renewDestination": {
            "description": "Reservation Id of the reservation which is purchased because of renew. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
            "type": "string"
          },
          "renewProperties": {
            "$ref": "#/components/schemas/RenewPropertiesResponse"
          },
          "renewSource": {
            "description": "Reservation Id of the reservation from which this reservation is renewed. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}.",
            "type": "string"
          },
          "reservedResourceType": {
            "$ref": "#/components/schemas/ReservedResourceType"
          },
          "skuDescription": {
            "description": "Description of the SKU in english.",
            "type": "string"
          },
          "splitProperties": {
            "$ref": "#/components/schemas/ReservationSplitProperties"
          },
          "swapProperties": {
            "$ref": "#/components/schemas/ReservationSwapProperties"
          },
          "term": {
            "$ref": "#/components/schemas/ReservationTerm"
          }
        },
        "type": "object"
      },
      "ReservationQuantity": {
        "description": "Quantity of the SKUs that are part of the Reservation. Must be greater than zero.",
        "format": "int32",
        "type": "integer"
      },
      "ReservationResponse": {
        "properties": {
          "etag": {
            "type": "integer"
          },
          "id": {
            "description": "Identifier of the reservation",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The Azure Region where the reserved resource lives.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the reservation",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ReservationProperties"
          },
          "sku": {
            "$ref": "#/components/schemas/SkuName"
          },
          "type": {
            "description": "Type of resource. \"Microsoft.Capacity/reservationOrders/reservations\"",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ReservationSplitProperties": {
        "properties": {
          "splitDestinations": {
            "description": "List of destination Resource Id that are created due to split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "splitSource": {
            "description": "Resource Id of the Reservation from which this is split. Format of the resource Id is /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationStatusCode": {
        "enum": [
          "None",
          "Pending",
          "Active",
          "PurchaseError",
          "PaymentInstrumentError",
          "Split",
          "Merged",
          "Expired",
          "Succeeded"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ReservationStatusCode"
        }
      },
      "ReservationSwapProperties": {
        "properties": {
          "swapDestination": {
            "description": "Reservation Resource Id that the original resource gets swapped to. Format of the resource Id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "type": "string"
          },
          "swapSource": {
            "description": "Resource Id of the Source Reservation that gets swapped. Format of the resource Id is /providers/microsoft.capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationTerm": {
        "description": "Represent the term of Reservation.",
        "enum": [
          "P1Y",
          "P3Y"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ReservationTerm"
        }
      },
      "ReservedResourceType": {
        "description": "The type of the resource that is being reserved.",
        "enum": [
          "VirtualMachines",
          "SqlDatabases",
          "SuseLinux",
          "CosmosDb",
          "RedHat",
          "SqlDataWarehouse",
          "VMwareCloudSimple",
          "RedHatOsa",
          "Databricks",
          "AppService",
          "ManagedDisk",
          "BlockBlob",
          "RedisCache",
          "AzureDataExplorer",
          "MySql",
          "MariaDb",
          "PostgreSql",
          "DedicatedHost",
          "SapHana",
          "SqlAzureHybridBenefit"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ReservedResourceType"
        }
      },
      "ScopeProperties": {
        "properties": {
          "reason": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SkuName": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SkuProperty": {
        "properties": {
          "name": {
            "description": "An invariant to describe the feature.",
            "type": "string"
          },
          "value": {
            "description": "An invariant if the feature is measured by quantity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SkuRestriction": {
        "properties": {
          "reasonCode": {
            "description": "The reason for restriction.",
            "type": "string"
          },
          "type": {
            "description": "The type of restrictions.",
            "type": "string"
          },
          "values": {
            "description": "The value of restrictions. If the restriction type is set to location. This would be different locations where the SKU is restricted.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SplitProperties": {
        "properties": {
          "quantities": {
            "description": "List of the quantities in the new reservations to create.",
            "items": {
              "maxItems": 2,
              "minItems": 2,
              "type": "integer"
            },
            "type": "array"
          },
          "reservationId": {
            "description": "Resource id of the reservation to be split. Format of the resource id should be /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SplitRequest": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SplitProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SubscriptionScopeProperties": {
        "properties": {
          "scopes": {
            "items": {
              "$ref": "#/components/schemas/ScopeProperties"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": []
    }
  ]
}