{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Resource Graph Query API Reference",
    "title": "Azure Resource Graph Query",
    "version": "2018-09-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/preview/2018-09-01-preview/graphquery.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryListResult"
                }
              }
            },
            "description": "A list containing 0 or more graph queries."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "GraphQuery"
        ],
        "description": "Get all graph queries defined within a specified subscription and resource group.",
        "operationId": "GraphQuery_List",
        "x-ms-examples": {
          "Get a list of Graph Queries": {
            "$ref": "./examples/GraphQueryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceGraph/queries/{resourceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/GraphQueryResourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The graph query has been successfully deleted."
          },
          "204": {
            "description": "The resource doesn't exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "GraphQuery"
        ],
        "description": "Delete a graph query.",
        "operationId": "GraphQuery_Delete",
        "x-ms-examples": {
          "Delete Graph Query": {
            "$ref": "./examples/GraphQueryDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/GraphQueryResourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryResource"
                }
              }
            },
            "description": "A graph query definition."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "GraphQuery"
        ],
        "description": "Get a single graph query by its resourceName.",
        "operationId": "GraphQuery_Get",
        "x-ms-examples": {
          "Get Graph Query": {
            "$ref": "./examples/GraphQueryGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/GraphQueryResourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryResource"
                }
              }
            },
            "description": "The graph query definition updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Updates a graph query that has already been added.",
        "operationId": "GraphQuery_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQueryUpdateParameters"
              }
            }
          },
          "description": "Properties that need to be specified to create a new graph query.",
          "required": true
        },
        "x-ms-examples": {
          "Update Graph Query": {
            "$ref": "./examples/GraphQueryUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/GraphQueryResourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryResource"
                }
              }
            },
            "description": "The newly created graph query."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQueryError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "GraphQuery"
        ],
        "description": "Create a new graph query.",
        "operationId": "GraphQuery_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQueryResource"
              }
            }
          },
          "description": "Properties that need to be specified to create a new graph query.",
          "required": true
        },
        "x-ms-examples": {
          "Create Graph Query": {
            "$ref": "./examples/GraphQueryAdd.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "GraphQueryResourceNameParameter": {
        "description": "The name of the Graph Query resource.",
        "in": "path",
        "name": "resourceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The Azure subscription Id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ErrorFieldContract": {
        "description": "Error Field contract.",
        "properties": {
          "code": {
            "description": "Property level error code.",
            "type": "string"
          },
          "message": {
            "description": "Human-readable representation of property-level error.",
            "type": "string"
          },
          "target": {
            "description": "Property name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GraphQueryError": {
        "description": "Error message body that will indicate why the operation failed.",
        "properties": {
          "code": {
            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
            "type": "string"
          },
          "details": {
            "description": "The list of invalid fields send in request, in case of validation error.",
            "items": {
              "$ref": "#/components/schemas/ErrorFieldContract"
            },
            "type": "array"
          },
          "message": {
            "description": "Human-readable representation of the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GraphQueryListResult": {
        "description": "Graph query list result.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of queries.",
            "type": "string"
          },
          "value": {
            "description": "An array of graph queries.",
            "items": {
              "$ref": "#/components/schemas/GraphQueryResource"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GraphQueryProperties": {
        "description": "Properties that contain a graph query.",
        "properties": {
          "description": {
            "description": "The description of a graph query.",
            "type": "string"
          },
          "query": {
            "description": "KQL query that will be graph.",
            "type": "string"
          },
          "resultKind": {
            "description": "Enum indicating a type of graph query.",
            "enum": [
              "basic"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ResultKind"
            }
          },
          "timeModified": {
            "description": "Date and time in UTC of the last modification that was made to this graph query definition.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "GraphQueryPropertiesUpdateParameters": {
        "description": "Properties that contain a workbook for PATCH operation.",
        "properties": {
          "description": {
            "description": "The description of a graph query.",
            "type": "string"
          },
          "query": {
            "description": "KQL query that will be graph.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GraphQueryResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Graph Query entity definition.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/GraphQueryProperties",
            "description": "Metadata describing a graph query for an Azure resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "GraphQueryUpdateParameters": {
        "description": "The parameters that can be provided when updating workbook properties properties.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "etag": {
            "description": "This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/GraphQueryPropertiesUpdateParameters",
            "description": "Metadata describing a graph query for an Azure resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "An azure resource object",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "etag": {
            "description": "This will be used to handle Optimistic Concurrency. If not present, it will always overwrite the existing resource without checking conflict.",
            "type": "string"
          },
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The location of the resource",
            "readOnly": false,
            "type": "string"
          },
          "name": {
            "description": "Azure resource name. This is GUID value. The display name should be assigned within properties field.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}