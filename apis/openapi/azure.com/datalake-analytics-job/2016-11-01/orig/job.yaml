openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Analytics job client.
  title: DataLakeAnalyticsJobManagementClient
  version: '2016-11-01'
  x-ms-code-generation-settings:
    internalConstructors: true
    useDateTimeOffset: true
servers:
  - url: '{accountName}.{adlaJobDnsSuffix}'
    variables:
      accountName:
        default: ''
        description: The Azure Data Lake Analytics account to execute job operations on.
        x-ms-skip-url-encoding: true
      adlaJobDnsSuffix:
        description: >-
          Gets the DNS suffix used as the base for all Azure Data Lake Analytics
          Job service requests.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /BuildJob:
    post:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully built the job script.
      tags:
        - Job
      description: >-
        Builds (compiles) the specified job in the specified Data Lake Analytics
        account for job correctness and validation.
      operationId: Job_Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildJobParameters'
        description: The parameters to build a job.
        required: true
      x-ms-examples:
        Builds (compiles) the specified job in the specified Data Lake Analytics account for job correctness and validation:
          $ref: ./examples/Adla_Job_Build.json
  /Jobs:
    get:
      parameters:
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoListResult'
          description: Successfully retrieved the list of jobs.
      tags:
        - Job
      description: >-
        Lists the jobs, if any, associated with the specified Data Lake
        Analytics account. The response includes a link to the next page of
        results, if any.
      operationId: Job_List
      x-ms-examples:
        'Lists the jobs, if any, associated with the specified Data Lake Analytics account':
          $ref: ./examples/Adla_Job_List.json
      x-ms-odata: '#/components/schemas/JobInformationBasic'
      x-ms-pageable:
        nextLinkName: nextLink
  '/Jobs/{jobIdentity}':
    get:
      parameters:
        - description: JobInfo ID.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully retrieved details of the specified job.
      tags:
        - Job
      description: Gets the job information for the specified job ID.
      operationId: Job_Get
      x-ms-examples:
        Gets the job information for the specified job ID:
          $ref: ./examples/Adla_Job_Get.json
    put:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully submitted the job.
      tags:
        - Job
      description: Submits a job to the specified Data Lake Analytics account.
      operationId: Job_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobParameters'
        description: The parameters to submit a job.
        required: true
      x-ms-examples:
        Submits a job to the specified Data Lake Analytics account:
          $ref: ./examples/Adla_Job_Create.json
  '/Jobs/{jobIdentity}/CancelJob':
    post:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully cancelled the job.
      tags:
        - Job
      description: Cancels the running job specified by the job ID.
      operationId: Job_Cancel
      x-ms-examples:
        Cancels the running job specified by the job ID:
          $ref: ./examples/Adla_Job_Cancel.json
  '/Jobs/{jobIdentity}/GetDebugDataPath':
    get:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataPath'
          description: Successfully retrieved debug data paths of the specified job.
      tags:
        - Job
      description: Gets the job debug data information specified by the job ID.
      operationId: Job_GetDebugDataPath
      x-ms-examples:
        Gets the job debug data information specified by the job ID:
          $ref: ./examples/Adla_Job_GetDebugDataPath.json
  '/Jobs/{jobIdentity}/GetStatistics':
    get:
      parameters:
        - description: Job Information ID.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatistics'
          description: Successfully retrieved job statistics of the specified job.
      tags:
        - Job
      description: Gets statistics of the specified job.
      operationId: Job_GetStatistics
      x-ms-examples:
        Gets statistics of the specified job:
          $ref: ./examples/Adla_Job_GetStatistics.json
  /pipelines:
    get:
      parameters:
        - description: >-
            The start date for when to get the list of pipelines. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the list of pipelines. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPipelineInformationListResult'
          description: Successfully retrieved the list of pipelines.
      tags:
        - Pipeline
      description: Lists all pipelines.
      operationId: Pipeline_List
      x-ms-examples:
        Lists all pipelines:
          $ref: ./examples/Adla_Pipeline_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/pipelines/{pipelineIdentity}':
    get:
      parameters:
        - description: Pipeline ID.
          in: path
          name: pipelineIdentity
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            The start date for when to get the pipeline and aggregate its data.
            The startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the pipeline and aggregate its data.
            The startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPipelineInformation'
          description: Successfully retrieved details of the specified pipeline.
      tags:
        - Pipeline
      description: Gets the Pipeline information for the specified pipeline ID.
      operationId: Pipeline_Get
      x-ms-examples:
        Gets the Pipeline information for the specified pipeline ID:
          $ref: ./examples/Adla_Pipeline_Get.json
  /recurrences:
    get:
      parameters:
        - description: >-
            The start date for when to get the list of recurrences. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the list of recurrences. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecurrenceInformationListResult'
          description: Successfully retrieved the list of recurrences.
      tags:
        - Recurrence
      description: Lists all recurrences.
      operationId: Recurrence_List
      x-ms-examples:
        Lists all recurrences:
          $ref: ./examples/Adla_Recurrence_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/recurrences/{recurrenceIdentity}':
    get:
      parameters:
        - description: Recurrence ID.
          in: path
          name: recurrenceIdentity
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            The start date for when to get the recurrence and aggregate its
            data. The startDateTime and endDateTime can be no more than 30 days
            apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get recurrence and aggregate its data. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecurrenceInformation'
          description: Successfully retrieved details of the specified pipeline.
      tags:
        - Recurrence
      description: Gets the recurrence information for the specified recurrence ID.
      operationId: Recurrence_Get
      x-ms-examples:
        Gets the recurrence information for the specified recurrence ID:
          $ref: ./examples/Adla_Recurrence_Get.json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    adlaJobDnsSuffixInPath:
      description: >-
        Gets the DNS suffix used as the base for all Azure Data Lake Analytics
        Job service requests.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    BaseJobParameters:
      description: Data Lake Analytics Job Parameters base class for build and submit.
      properties:
        properties:
          $ref: '#/components/schemas/CreateJobProperties'
          description: the job specific properties.
        type:
          description: the job type of the current job (Hive or USql).
          enum:
            - USql
            - Hive
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobType
      required:
        - type
        - properties
      type: object
    BuildJobParameters:
      allOf:
        - $ref: '#/components/schemas/BaseJobParameters'
      description: The parameters used to build a new Data Lake Analytics job.
      properties:
        name:
          description: the friendly name of the job to build.
          type: string
      type: object
    CreateJobParameters:
      allOf:
        - $ref: '#/components/schemas/BaseJobParameters'
      description: The parameters used to submit a new Data Lake Analytics job.
      properties:
        degreeOfParallelism:
          default: 1
          description: >-
            the degree of parallelism used for this job. At most one of
            degreeOfParallelism and degreeOfParallelismPercent should be
            specified. If none, a default value of 1 will be used.
          format: int32
          type: integer
        degreeOfParallelismPercent:
          description: >-
            the degree of parallelism in percentage used for this job. At most
            one of degreeOfParallelism and degreeOfParallelismPercent should be
            specified. If none, a default value of 1 will be used for
            degreeOfParallelism.
          format: double
          type: number
        logFilePatterns:
          description: >-
            the list of log file name patterns to find in the logFolder. '*' is
            the only matching character allowed. Example format:
            jobExecution*.log or *mylog*.txt
          items:
            type: string
          type: array
        name:
          description: the friendly name of the job to submit.
          type: string
        priority:
          description: >-
            the priority value to use for the current job. Lower numbers have a
            higher priority. By default, a job has a priority of 1000. This must
            be greater than 0.
          format: int32
          type: integer
        related:
          $ref: '#/components/schemas/JobRelationshipProperties'
          description: the recurring job relationship information properties.
      required:
        - name
      type: object
    CreateJobProperties:
      description: The common Data Lake Analytics job properties for job submission.
      discriminator:
        propertyName: type
      properties:
        runtimeVersion:
          description: >-
            the runtime version of the Data Lake Analytics engine to use for the
            specific type of job being run.
          type: string
        script:
          description: the script to run. Please note that the maximum script size is 3 MB.
          type: string
        type:
          description: the job type of the current job (i.e. USql).
          type: string
      required:
        - script
        - type
      type: object
    CreateUSqlJobProperties:
      allOf:
        - $ref: '#/components/schemas/CreateJobProperties'
      description: U-SQL job properties used when submitting U-SQL jobs.
      properties:
        compileMode:
          description: >-
            the specific compilation mode for the job used during execution. If
            this is not specified during submission, the server will determine
            the optimal compilation mode.
          enum:
            - Semantic
            - Full
            - SingleBox
          type: string
          x-ms-enum:
            modelAsString: false
            name: CompileMode
      type: object
      x-ms-discriminator-value: USql
    Diagnostics:
      description: Error diagnostic information for failed jobs.
      properties:
        columnNumber:
          description: the column where the error occurred.
          format: int32
          readOnly: true
          type: integer
        end:
          description: the ending index of the error.
          format: int32
          readOnly: true
          type: integer
        lineNumber:
          description: the line number the error occurred on.
          format: int32
          readOnly: true
          type: integer
        message:
          description: the error message.
          readOnly: true
          type: string
        severity:
          description: the severity of the error.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        start:
          description: the starting index of the error.
          format: int32
          readOnly: true
          type: integer
      type: object
    HiveJobProperties:
      allOf:
        - $ref: '#/components/schemas/JobProperties'
      description: Hive job properties used when retrieving Hive jobs.
      properties:
        executedStatementCount:
          description: the number of statements that have been run based on the script
          format: int32
          readOnly: true
          type: integer
        logsLocation:
          description: the Hive logs location
          readOnly: true
          type: string
        outputLocation:
          description: >-
            the location of Hive job output files (both execution output and
            results)
          readOnly: true
          type: string
        statementCount:
          description: the number of statements that will be run based on the script
          format: int32
          readOnly: true
          type: integer
      type: object
      x-ms-discriminator-value: Hive
    JobDataPath:
      description: A Data Lake Analytics job data path item.
      properties:
        paths:
          description: the list of paths to all of the job data.
          items:
            type: string
          readOnly: true
          type: array
        command:
          description: the command that this job data relates to.
          readOnly: true
          type: string
        jobId:
          description: the id of the job this data is for.
          format: uuid
          readOnly: true
          type: string
      type: object
    JobErrorDetails:
      description: The Data Lake Analytics job error details.
      properties:
        description:
          description: the error message description
          readOnly: true
          type: string
        details:
          description: the details of the error message.
          readOnly: true
          type: string
        endOffset:
          description: the end offset in the job where the error was found.
          format: int32
          readOnly: true
          type: integer
        errorId:
          description: >-
            the specific identifier for the type of error encountered in the
            job.
          readOnly: true
          type: string
        filePath:
          description: 'the path to any supplemental error files, if any.'
          readOnly: true
          type: string
        helpLink:
          description: 'the link to MSDN or Azure help for this type of error, if any.'
          readOnly: true
          type: string
        innerError:
          $ref: '#/components/schemas/JobInnerError'
          description: 'the inner error of this specific job error message, if any.'
          readOnly: true
        internalDiagnostics:
          description: >-
            the internal diagnostic stack trace if the user requesting the job
            error details has sufficient permissions it will be retrieved,
            otherwise it will be empty.
          readOnly: true
          type: string
        lineNumber:
          description: the specific line number in the job where the error occurred.
          format: int32
          readOnly: true
          type: integer
        message:
          description: the user friendly error message for the failure.
          readOnly: true
          type: string
        resolution:
          description: 'the recommended resolution for the failure, if any.'
          readOnly: true
          type: string
        severity:
          description: the severity level of the failure.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        source:
          description: the ultimate source of the failure (usually either SYSTEM or USER).
          readOnly: true
          type: string
        startOffset:
          description: the start offset in the job where the error was found
          format: int32
          readOnly: true
          type: integer
      type: object
    JobInfoListResult:
      description: List of JobInfo items.
      properties:
        nextLink:
          description: the link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: the list of JobInfo items.
          items:
            $ref: '#/components/schemas/JobInformationBasic'
          readOnly: true
          type: array
      type: object
    JobInformation:
      allOf:
        - $ref: '#/components/schemas/JobInformationBasic'
      description: >-
        The extended Data Lake Analytics job information properties returned
        when retrieving a specific job.
      properties:
        errorMessage:
          description: 'the error message details for the job, if the job failed.'
          items:
            $ref: '#/components/schemas/JobErrorDetails'
          readOnly: true
          type: array
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: the job specific properties.
        stateAuditRecords:
          description: >-
            the job state audit records, indicating when various operations have
            been performed on this job.
          items:
            $ref: '#/components/schemas/JobStateAuditRecord'
          readOnly: true
          type: array
      required:
        - properties
      type: object
    JobInformationBasic:
      description: The common Data Lake Analytics job information properties.
      properties:
        degreeOfParallelism:
          default: 1
          description: the degree of parallelism used for this job.
          format: int32
          readOnly: true
          type: integer
        degreeOfParallelismPercent:
          description: the degree of parallelism in percentage used for this job.
          format: double
          readOnly: true
          type: number
        endTime:
          description: the completion time of the job.
          format: date-time
          readOnly: true
          type: string
        hierarchyQueueNode:
          description: >-
            the name of hierarchy queue node this job is assigned to, null if
            job has not been assigned yet or the account doesn't have hierarchy
            queue.
          readOnly: true
          type: string
        jobId:
          description: the job's unique identifier (a GUID).
          format: uuid
          readOnly: true
          type: string
        logFilePatterns:
          description: >-
            the list of log file name patterns to find in the logFolder. '*' is
            the only matching character allowed. Example format:
            jobExecution*.log or *mylog*.txt
          items:
            type: string
          readOnly: true
          type: array
        logFolder:
          description: >-
            the log folder path to use in the following format:
            adl://<accountName>.azuredatalakestore.net/system/jobservice/jobs/Usql/2016/03/13/17/18/5fe51957-93bc-4de0-8ddc-c5a4753b068b/logs/.
          readOnly: true
          type: string
        name:
          description: the friendly name of the job.
          type: string
        priority:
          description: >-
            the priority value for the current job. Lower numbers have a higher
            priority. By default, a job has a priority of 1000. This must be
            greater than 0.
          format: int32
          readOnly: true
          type: integer
        related:
          $ref: '#/components/schemas/JobRelationshipProperties'
          description: the recurring job relationship information properties.
        result:
          description: >-
            the result of job execution or the current result of the running
            job.
          enum:
            - None
            - Succeeded
            - Cancelled
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobResult
        startTime:
          description: the start time of the job.
          format: date-time
          readOnly: true
          type: string
        state:
          description: >-
            the job state. When the job is in the Ended state, refer to Result
            and ErrorMessage for details.
          enum:
            - Accepted
            - Compiling
            - Ended
            - New
            - Queued
            - Running
            - Scheduling
            - Starting
            - Paused
            - WaitingForCapacity
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobState
        submitTime:
          description: the time the job was submitted to the service.
          format: date-time
          readOnly: true
          type: string
        submitter:
          description: the user or account that submitted the job.
          readOnly: true
          type: string
        type:
          description: the job type of the current job (Hive or USql).
          enum:
            - USql
            - Hive
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobType
      required:
        - name
        - type
      type: object
    JobInnerError:
      description: The Data Lake Analytics job error details.
      properties:
        component:
          description: the component that failed.
          readOnly: true
          type: string
        description:
          description: the error message description
          readOnly: true
          type: string
        details:
          description: the details of the error message.
          readOnly: true
          type: string
        diagnosticCode:
          description: the diagnostic error code.
          format: int32
          readOnly: true
          type: integer
        errorId:
          description: >-
            the specific identifier for the type of error encountered in the
            job.
          readOnly: true
          type: string
        helpLink:
          description: 'the link to MSDN or Azure help for this type of error, if any.'
          readOnly: true
          type: string
        innerError:
          $ref: '#/components/schemas/JobInnerError'
          description: 'the inner error of this specific job error message, if any.'
          readOnly: true
        internalDiagnostics:
          description: >-
            the internal diagnostic stack trace if the user requesting the job
            error details has sufficient permissions it will be retrieved,
            otherwise it will be empty.
          readOnly: true
          type: string
        message:
          description: the user friendly error message for the failure.
          readOnly: true
          type: string
        resolution:
          description: 'the recommended resolution for the failure, if any.'
          readOnly: true
          type: string
        severity:
          description: the severity level of the failure.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        source:
          description: the ultimate source of the failure (usually either SYSTEM or USER).
          readOnly: true
          type: string
      type: object
    JobPipelineInformation:
      description: >-
        Job Pipeline Information, showing the relationship of jobs and
        recurrences of those jobs in a pipeline.
      properties:
        auHoursCanceled:
          description: the number of job execution hours that resulted in canceled jobs.
          format: double
          readOnly: true
          type: number
        auHoursFailed:
          description: the number of job execution hours that resulted in failed jobs.
          format: double
          readOnly: true
          type: number
        auHoursSucceeded:
          description: the number of job execution hours that resulted in successful jobs.
          format: double
          readOnly: true
          type: number
        lastSubmitTime:
          description: the last time a job in this pipeline was submitted.
          format: date-time
          readOnly: true
          type: string
        numJobsCanceled:
          description: the number of jobs in this pipeline that have been canceled.
          format: int32
          readOnly: true
          type: integer
        numJobsFailed:
          description: the number of jobs in this pipeline that have failed.
          format: int32
          readOnly: true
          type: integer
        numJobsSucceeded:
          description: the number of jobs in this pipeline that have succeeded.
          format: int32
          readOnly: true
          type: integer
        pipelineId:
          description: the job relationship pipeline identifier (a GUID).
          format: uuid
          readOnly: true
          type: string
        pipelineName:
          description: >-
            the friendly name of the job relationship pipeline, which does not
            need to be unique.
          maxLength: 260
          readOnly: true
          type: string
        pipelineUri:
          description: >-
            the pipeline uri, unique, links to the originating service for this
            pipeline.
          readOnly: true
          type: string
        recurrences:
          description: >-
            the list of recurrence identifiers representing each recurrence in
            this pipeline.
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        runs:
          description: the list of run identifiers representing each run of this pipeline.
          items:
            $ref: '#/components/schemas/JobPipelineRunInformation'
          readOnly: true
          type: array
      type: object
    JobPipelineInformationListResult:
      description: List of job pipeline information items.
      properties:
        nextLink:
          description: the link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: the list of job pipeline information items.
          items:
            $ref: '#/components/schemas/JobPipelineInformation'
          readOnly: true
          type: array
      type: object
    JobPipelineRunInformation:
      description: Run info for a specific job pipeline.
      properties:
        lastSubmitTime:
          description: the time this instance was last submitted.
          format: date-time
          readOnly: true
          type: string
        runId:
          description: the run identifier of an instance of pipeline executions (a GUID).
          format: uuid
          readOnly: true
          type: string
      type: object
    JobProperties:
      description: The common Data Lake Analytics job properties.
      discriminator:
        propertyName: type
      properties:
        runtimeVersion:
          description: >-
            the runtime version of the Data Lake Analytics engine to use for the
            specific type of job being run.
          readOnly: true
          type: string
        script:
          description: the script to run. Please note that the maximum script size is 3 MB.
          type: string
        type:
          description: the job type of the current job (i.e. Hive or USql).
          type: string
      required:
        - script
        - type
      type: object
    JobRecurrenceInformation:
      description: Recurrence job information for a specific recurrence.
      properties:
        auHoursCanceled:
          description: the number of job execution hours that resulted in canceled jobs.
          format: double
          readOnly: true
          type: number
        auHoursFailed:
          description: the number of job execution hours that resulted in failed jobs.
          format: double
          readOnly: true
          type: number
        auHoursSucceeded:
          description: the number of job execution hours that resulted in successful jobs.
          format: double
          readOnly: true
          type: number
        lastSubmitTime:
          description: the last time a job in this recurrence was submitted.
          format: date-time
          readOnly: true
          type: string
        numJobsCanceled:
          description: the number of jobs in this recurrence that have been canceled.
          format: int32
          readOnly: true
          type: integer
        numJobsFailed:
          description: the number of jobs in this recurrence that have failed.
          format: int32
          readOnly: true
          type: integer
        numJobsSucceeded:
          description: the number of jobs in this recurrence that have succeeded.
          format: int32
          readOnly: true
          type: integer
        recurrenceId:
          description: >-
            the recurrence identifier (a GUID), unique per activity/script,
            regardless of iterations. This is something to link different
            occurrences of the same job together.
          format: uuid
          readOnly: true
          type: string
        recurrenceName:
          description: >-
            the recurrence name, user friendly name for the correlation between
            jobs.
          readOnly: true
          type: string
      type: object
    JobRecurrenceInformationListResult:
      description: List of job recurrence information items.
      properties:
        nextLink:
          description: the link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: the list of job recurrence information items.
          items:
            $ref: '#/components/schemas/JobRecurrenceInformation'
          readOnly: true
          type: array
      type: object
    JobRelationshipProperties:
      description: >-
        Job relationship information properties including pipeline information,
        correlation information, etc.
      properties:
        pipelineId:
          description: the job relationship pipeline identifier (a GUID).
          format: uuid
          type: string
        pipelineName:
          description: >-
            the friendly name of the job relationship pipeline, which does not
            need to be unique.
          maxLength: 260
          type: string
        pipelineUri:
          description: >-
            the pipeline uri, unique, links to the originating service for this
            pipeline.
          type: string
        recurrenceId:
          description: >-
            the recurrence identifier (a GUID), unique per activity/script,
            regardless of iterations. This is something to link different
            occurrences of the same job together.
          format: uuid
          type: string
        recurrenceName:
          description: >-
            the recurrence name, user friendly name for the correlation between
            jobs.
          maxLength: 260
          type: string
        runId:
          description: >-
            the run identifier (a GUID), unique identifier of the iteration of
            this pipeline.
          format: uuid
          type: string
      required:
        - recurrenceId
      type: object
    JobResource:
      description: The Data Lake Analytics job resources.
      properties:
        name:
          description: the name of the resource.
          type: string
        resourcePath:
          description: the path to the resource.
          type: string
        type:
          description: the job resource type.
          enum:
            - VertexResource
            - JobManagerResource
            - StatisticsResource
            - VertexResourceInUserFolder
            - JobManagerResourceInUserFolder
            - StatisticsResourceInUserFolder
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobResourceType
      type: object
    JobStateAuditRecord:
      description: >-
        The Data Lake Analytics job state audit records for tracking the
        lifecycle of a job.
      properties:
        details:
          description: the details of the audit log.
          readOnly: true
          type: string
        newState:
          description: the new state the job is in.
          readOnly: true
          type: string
        requestedByUser:
          description: the user who requests the change.
          readOnly: true
          type: string
        timeStamp:
          description: the time stamp that the state change took place.
          format: date-time
          readOnly: true
          type: string
      type: object
    JobStatistics:
      description: The Data Lake Analytics job execution statistics.
      properties:
        finalizingTimeUtc:
          description: the job finalizing start time.
          format: date-time
          readOnly: true
          type: string
        lastUpdateTimeUtc:
          description: the last update time for the statistics.
          format: date-time
          readOnly: true
          type: string
        stages:
          description: the list of stages for the job.
          items:
            $ref: '#/components/schemas/JobStatisticsVertexStage'
          readOnly: true
          type: array
      type: object
    JobStatisticsVertexStage:
      description: The Data Lake Analytics job statistics vertex stage information.
      properties:
        dataRead:
          description: 'the amount of data read, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataReadCrossPod:
          description: 'the amount of data read across multiple pods, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataReadIntraPod:
          description: 'the amount of data read in one pod, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataToRead:
          description: 'the amount of data remaining to be read, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataWritten:
          description: 'the amount of data written, in bytes.'
          format: int64
          readOnly: true
          type: integer
        duplicateDiscardCount:
          description: the number of duplicates that were discarded.
          format: int32
          readOnly: true
          type: integer
        failedCount:
          description: the number of failures that occurred in this stage.
          format: int32
          readOnly: true
          type: integer
        maxVertexDataRead:
          description: 'the maximum amount of data read in a single vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        minVertexDataRead:
          description: 'the minimum amount of data read in a single vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        readFailureCount:
          description: the number of read failures in this stage.
          format: int32
          readOnly: true
          type: integer
        revocationCount:
          description: the number of vertices that were revoked during this stage.
          format: int32
          readOnly: true
          type: integer
        runningCount:
          description: the number of currently running vertices in this stage.
          format: int32
          readOnly: true
          type: integer
        scheduledCount:
          description: the number of currently scheduled vertices in this stage
          format: int32
          readOnly: true
          type: integer
        stageName:
          description: the name of this stage in job execution.
          readOnly: true
          type: string
        succeededCount:
          description: the number of vertices that succeeded in this stage.
          format: int32
          readOnly: true
          type: integer
        tempDataWritten:
          description: 'the amount of temporary data written, in bytes.'
          format: int64
          readOnly: true
          type: integer
        totalCount:
          description: the total vertex count for this stage.
          format: int32
          readOnly: true
          type: integer
        totalFailedTime:
          description: the amount of time that failed vertices took up in this stage.
          format: duration
          readOnly: true
          type: string
        totalProgress:
          description: 'the current progress of this stage, as a percentage.'
          format: int32
          readOnly: true
          type: integer
        totalSucceededTime:
          description: the amount of time all successful vertices took in this stage.
          format: duration
          readOnly: true
          type: string
      type: object
    USqlJobProperties:
      allOf:
        - $ref: '#/components/schemas/JobProperties'
      description: U-SQL job properties used when retrieving U-SQL jobs.
      properties:
        algebraFilePath:
          description: the algebra file path after the job has completed
          readOnly: true
          type: string
        compileMode:
          description: >-
            the specific compilation mode for the job used during execution. If
            this is not specified during submission, the server will determine
            the optimal compilation mode.
          enum:
            - Semantic
            - Full
            - SingleBox
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: CompileMode
        debugData:
          $ref: '#/components/schemas/JobDataPath'
          description: the job specific debug data locations.
        diagnostics:
          description: the diagnostics for the job.
          items:
            $ref: '#/components/schemas/Diagnostics'
          readOnly: true
          type: array
        resources:
          description: the list of resources that are required by the job
          items:
            $ref: '#/components/schemas/JobResource'
          readOnly: true
          type: array
        rootProcessNodeId:
          description: >-
            the ID used to identify the job manager coordinating job execution.
            This value should not be set by the user and will be ignored if it
            is.
          readOnly: true
          type: string
        statistics:
          $ref: '#/components/schemas/JobStatistics'
          description: the job specific statistics.
        totalCompilationTime:
          description: >-
            the total time this job spent compiling. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalPauseTime:
          description: >-
            the total time this job spent paused. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalQueuedTime:
          description: >-
            the total time this job spent queued. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalRunningTime:
          description: >-
            the total time this job spent executing. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        yarnApplicationId:
          description: >-
            the ID used to identify the yarn application executing the job. This
            value should not be set by the user and will be ignored if it is.
          readOnly: true
          type: string
        yarnApplicationTimeStamp:
          description: >-
            the timestamp (in ticks) for the yarn application executing the job.
            This value should not be set by the user and will be ignored if it
            is.
          format: int64
          readOnly: true
          type: integer
      type: object
      x-ms-discriminator-value: USql

