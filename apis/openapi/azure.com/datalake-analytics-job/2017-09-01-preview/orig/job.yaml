openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Analytics job client.
  title: DataLakeAnalyticsJobManagementClient
  version: 2017-09-01-preview
  x-ms-code-generation-settings:
    internalConstructors: true
    useDateTimeOffset: true
servers:
  - url: '{accountName}.{adlaJobDnsSuffix}'
    variables:
      accountName:
        default: ''
        description: The Azure Data Lake Analytics account to execute job operations on.
        x-ms-skip-url-encoding: true
      adlaJobDnsSuffix:
        description: >-
          The DNS suffix used as the base for all Azure Data Lake Analytics Job
          service requests.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /buildJob:
    post:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully built the job script.
      tags:
        - Job
      description: >-
        Builds (compiles) the specified job in the specified Data Lake Analytics
        account for job correctness and validation.
      operationId: Job_Build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildJobParameters'
        description: The parameters to build a job.
        required: true
      x-ms-examples:
        Builds (compiles) the specified job in the specified Data Lake Analytics account for job correctness and validation:
          $ref: ./examples/Job_Build.json
  /jobs:
    get:
      parameters:
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfoListResult'
          description: Successfully retrieved the list of jobs.
      tags:
        - Job
      description: >-
        Lists the jobs, if any, associated with the specified Data Lake
        Analytics account. The response includes a link to the next page of
        results, if any.
      operationId: Job_List
      x-ms-examples:
        'Lists the jobs, if any, associated with the specified Data Lake Analytics account':
          $ref: ./examples/Job_List.json
      x-ms-odata: '#/components/schemas/JobInformationBasic'
      x-ms-pageable:
        nextLinkName: nextLink
  '/jobs/{jobIdentity}':
    get:
      parameters:
        - description: JobInfo ID.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully retrieved details of the specified job.
      tags:
        - Job
      description: Gets the job information for the specified job ID.
      operationId: Job_Get
      x-ms-examples:
        Gets the job information for the specified job ID:
          $ref: ./examples/Job_Get.json
    patch:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully updated the details of the specified job.
        '201':
          description: Successfully initiated an update of the specified job.
        '202':
          description: Successfully initiated an update of the specified job.
      tags:
        - Job
      description: >-
        Updates the job information for the specified job ID. (Only for use
        internally with Scope job type.)
      operationId: Job_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobParameters'
        description: The parameters to update a job.
      x-ms-examples:
        Updates the job information for the specified job ID. (Only for use internally with Scope job type.):
          $ref: ./examples/Job_Update.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInformation'
          description: Successfully submitted the job.
      tags:
        - Job
      description: Submits a job to the specified Data Lake Analytics account.
      operationId: Job_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobParameters'
        description: The parameters to submit a job.
        required: true
      x-ms-examples:
        Submits a job to the specified Data Lake Analytics account:
          $ref: ./examples/Job_Create.json
  '/jobs/{jobIdentity}/CancelJob':
    post:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully cancelled the job.
        '202':
          description: Successfully initiated the cancellation of the specified job.
        '204':
          description: The specified job was not found.
      tags:
        - Job
      description: Cancels the running job specified by the job ID.
      operationId: Job_Cancel
      x-ms-examples:
        Cancels the running job specified by the job ID:
          $ref: ./examples/Job_Cancel.json
      x-ms-long-running-operation: true
  '/jobs/{jobIdentity}/GetDebugDataPath':
    get:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDataPath'
          description: Successfully retrieved debug data paths of the specified job.
      tags:
        - Job
      description: Gets the job debug data information specified by the job ID.
      operationId: Job_GetDebugDataPath
      x-ms-examples:
        Gets the job debug data information specified by the job ID:
          $ref: ./examples/Job_GetDebugDataPath.json
  '/jobs/{jobIdentity}/GetStatistics':
    get:
      parameters:
        - description: Job Information ID.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatistics'
          description: Successfully retrieved job statistics of the specified job.
      tags:
        - Job
      description: Gets statistics of the specified job.
      operationId: Job_GetStatistics
      x-ms-examples:
        Gets statistics of the specified job:
          $ref: ./examples/Job_GetStatistics.json
  '/jobs/{jobIdentity}/YieldJob':
    post:
      parameters:
        - description: >-
            Job identifier. Uniquely identifies the job across all jobs
            submitted to the service.
          in: path
          name: jobIdentity
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully yielded the specified job.
        '202':
          description: Successfully initiated the yielding of the specified job.
        '204':
          description: The specified job was not found.
      tags:
        - Job
      description: >-
        Pauses the specified job and places it back in the job queue, behind
        other jobs of equal or higher importance, based on priority. (Only for
        use internally with Scope job type.)
      operationId: Job_Yield
      x-ms-examples:
        'Pauses the specified job and places it back in the job queue, behind other jobs of equal or higher importance, based on priority. (Only for use internally with Scope job type.)':
          $ref: ./examples/Job_Yield.json
      x-ms-long-running-operation: true
  /pipelines:
    get:
      parameters:
        - description: >-
            The start date for when to get the list of pipelines. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the list of pipelines. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPipelineInformationListResult'
          description: Successfully retrieved the list of pipelines.
      tags:
        - Pipeline
      description: Lists all pipelines.
      operationId: Pipeline_List
      x-ms-examples:
        Lists all pipelines:
          $ref: ./examples/Pipeline_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/pipelines/{pipelineIdentity}':
    get:
      parameters:
        - description: Pipeline ID.
          in: path
          name: pipelineIdentity
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            The start date for when to get the pipeline and aggregate its data.
            The startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the pipeline and aggregate its data.
            The startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPipelineInformation'
          description: Successfully retrieved details of the specified pipeline.
      tags:
        - Pipeline
      description: Gets the Pipeline information for the specified pipeline ID.
      operationId: Pipeline_Get
      x-ms-examples:
        Gets the Pipeline information for the specified pipeline ID:
          $ref: ./examples/Pipeline_Get.json
  /recurrences:
    get:
      parameters:
        - description: >-
            The start date for when to get the list of recurrences. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get the list of recurrences. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecurrenceInformationListResult'
          description: Successfully retrieved the list of recurrences.
      tags:
        - Recurrence
      description: Lists all recurrences.
      operationId: Recurrence_List
      x-ms-examples:
        Lists all recurrences:
          $ref: ./examples/Recurrence_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/recurrences/{recurrenceIdentity}':
    get:
      parameters:
        - description: Recurrence ID.
          in: path
          name: recurrenceIdentity
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            The start date for when to get the recurrence and aggregate its
            data. The startDateTime and endDateTime can be no more than 30 days
            apart.
          in: query
          name: startDateTime
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            The end date for when to get recurrence and aggregate its data. The
            startDateTime and endDateTime can be no more than 30 days apart.
          in: query
          name: endDateTime
          required: false
          schema:
            format: date-time
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRecurrenceInformation'
          description: Successfully retrieved details of the specified pipeline.
      tags:
        - Recurrence
      description: Gets the recurrence information for the specified recurrence ID.
      operationId: Recurrence_Get
      x-ms-examples:
        Gets the recurrence information for the specified recurrence ID:
          $ref: ./examples/Recurrence_Get.json
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    adlaJobDnsSuffixInPath:
      description: >-
        The DNS suffix used as the base for all Azure Data Lake Analytics Job
        service requests.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    BaseJobParameters:
      description: Data Lake Analytics Job Parameters base class for build and submit.
      properties:
        properties:
          $ref: '#/components/schemas/CreateJobProperties'
          description: The job specific properties.
        type:
          description: >-
            The job type of the current job (Hive, USql, or Scope (for internal
            use only)).
          enum:
            - USql
            - Hive
            - Scope
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobType
      required:
        - type
        - properties
      type: object
    BuildJobParameters:
      allOf:
        - $ref: '#/components/schemas/BaseJobParameters'
      description: The parameters used to build a new Data Lake Analytics job.
      properties:
        name:
          description: The friendly name of the job to build.
          type: string
      type: object
    CreateJobParameters:
      allOf:
        - $ref: '#/components/schemas/BaseJobParameters'
      description: The parameters used to submit a new Data Lake Analytics job.
      properties:
        degreeOfParallelism:
          default: 1
          description: >-
            The degree of parallelism to use for this job. At most one of
            degreeOfParallelism and degreeOfParallelismPercent should be
            specified. If none, a default value of 1 will be used for
            degreeOfParallelism.
          format: int32
          type: integer
        degreeOfParallelismPercent:
          description: >-
            the degree of parallelism in percentage used for this job. At most
            one of degreeOfParallelism and degreeOfParallelismPercent should be
            specified. If none, a default value of 1 will be used for
            degreeOfParallelism.
          format: double
          type: number
        logFilePatterns:
          description: >-
            The list of log file name patterns to find in the logFolder. '*' is
            the only matching character allowed. Example format:
            jobExecution*.log or *mylog*.txt
          items:
            type: string
          type: array
        name:
          description: The friendly name of the job to submit.
          type: string
        priority:
          description: >-
            The priority value to use for the current job. Lower numbers have a
            higher priority. By default, a job has a priority of 1000. This must
            be greater than 0.
          format: int32
          type: integer
        related:
          $ref: '#/components/schemas/JobRelationshipProperties'
          description: The recurring job relationship information properties.
      required:
        - name
      type: object
    CreateJobProperties:
      description: The common Data Lake Analytics job properties for job submission.
      discriminator:
        propertyName: type
      properties:
        runtimeVersion:
          description: >-
            The runtime version of the Data Lake Analytics engine to use for the
            specific type of job being run.
          type: string
        script:
          description: The script to run. Please note that the maximum script size is 3 MB.
          type: string
        type:
          description: >-
            The job type of the current job (Hive, USql, or Scope (for internal
            use only)).
          type: string
      required:
        - script
        - type
      type: object
    CreateScopeJobParameters:
      allOf:
        - $ref: '#/components/schemas/CreateJobParameters'
      description: >-
        The parameters used to submit a new Data Lake Analytics Scope job. (Only
        for use internally with Scope job type.)
      properties:
        tags:
          additionalProperties:
            type: string
          description: >-
            The key-value pairs used to add additional metadata to the job
            information.
          type: object
      type: object
    CreateScopeJobProperties:
      allOf:
        - $ref: '#/components/schemas/CreateJobProperties'
      description: >-
        Scope job properties used when submitting Scope jobs. (Only for use
        internally with Scope job type.)
      properties:
        notifier:
          description: >-
            The list of email addresses, separated by semi-colons, to notify
            when the job reaches a terminal state.
          type: string
        resources:
          description: The list of resources that are required by the job.
          items:
            $ref: '#/components/schemas/ScopeJobResource'
          type: array
      type: object
      x-ms-discriminator-value: Scope
    CreateUSqlJobProperties:
      allOf:
        - $ref: '#/components/schemas/CreateJobProperties'
      description: U-SQL job properties used when submitting U-SQL jobs.
      properties:
        compileMode:
          description: >-
            The specific compilation mode for the job used during execution. If
            this is not specified during submission, the server will determine
            the optimal compilation mode.
          enum:
            - Semantic
            - Full
            - SingleBox
          type: string
          x-ms-enum:
            modelAsString: false
            name: CompileMode
      type: object
      x-ms-discriminator-value: USql
    Diagnostics:
      description: Error diagnostic information for failed jobs.
      properties:
        columnNumber:
          description: The column where the error occurred.
          format: int32
          readOnly: true
          type: integer
        end:
          description: The ending index of the error.
          format: int32
          readOnly: true
          type: integer
        lineNumber:
          description: The line number the error occurred on.
          format: int32
          readOnly: true
          type: integer
        message:
          description: The error message.
          readOnly: true
          type: string
        severity:
          description: The severity of the error.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        start:
          description: The starting index of the error.
          format: int32
          readOnly: true
          type: integer
      type: object
    HiveJobProperties:
      allOf:
        - $ref: '#/components/schemas/JobProperties'
      description: Hive job properties used when retrieving Hive jobs.
      properties:
        executedStatementCount:
          description: The number of statements that have been run based on the script.
          format: int32
          readOnly: true
          type: integer
        logsLocation:
          description: The Hive logs location.
          readOnly: true
          type: string
        outputLocation:
          description: >-
            The location of Hive job output files (both execution output and
            results).
          readOnly: true
          type: string
        statementCount:
          description: The number of statements that will be run based on the script.
          format: int32
          readOnly: true
          type: integer
      type: object
      x-ms-discriminator-value: Hive
    JobDataPath:
      description: A Data Lake Analytics job data path item.
      properties:
        paths:
          description: The list of paths to all of the job data.
          items:
            type: string
          readOnly: true
          type: array
        command:
          description: The command that this job data relates to.
          readOnly: true
          type: string
        jobId:
          description: The ID of the job this data is for.
          format: uuid
          readOnly: true
          type: string
      type: object
    JobErrorDetails:
      description: The Data Lake Analytics job error details.
      properties:
        description:
          description: The error message description.
          readOnly: true
          type: string
        details:
          description: The details of the error message.
          readOnly: true
          type: string
        endOffset:
          description: The end offset in the job where the error was found.
          format: int32
          readOnly: true
          type: integer
        errorId:
          description: >-
            The specific identifier for the type of error encountered in the
            job.
          readOnly: true
          type: string
        filePath:
          description: 'The path to any supplemental error files, if any.'
          readOnly: true
          type: string
        helpLink:
          description: 'The link to MSDN or Azure help for this type of error, if any.'
          readOnly: true
          type: string
        innerError:
          $ref: '#/components/schemas/JobInnerError'
          description: 'The inner error of this specific job error message, if any.'
          readOnly: true
        internalDiagnostics:
          description: >-
            The internal diagnostic stack trace if the user requesting the job
            error details has sufficient permissions it will be retrieved,
            otherwise it will be empty.
          readOnly: true
          type: string
        lineNumber:
          description: The specific line number in the job where the error occurred.
          format: int32
          readOnly: true
          type: integer
        message:
          description: The user friendly error message for the failure.
          readOnly: true
          type: string
        resolution:
          description: 'The recommended resolution for the failure, if any.'
          readOnly: true
          type: string
        severity:
          description: The severity level of the failure.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        source:
          description: The ultimate source of the failure (usually either SYSTEM or USER).
          readOnly: true
          type: string
        startOffset:
          description: The start offset in the job where the error was found
          format: int32
          readOnly: true
          type: integer
      type: object
    JobInfoListResult:
      description: List of JobInfo items.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The list of JobInfo items.
          items:
            $ref: '#/components/schemas/JobInformationBasic'
          readOnly: true
          type: array
      type: object
    JobInformation:
      allOf:
        - $ref: '#/components/schemas/JobInformationBasic'
      description: >-
        The extended Data Lake Analytics job information properties returned
        when retrieving a specific job.
      properties:
        errorMessage:
          description: 'The error message details for the job, if the job failed.'
          items:
            $ref: '#/components/schemas/JobErrorDetails'
          readOnly: true
          type: array
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: The job specific properties.
        stateAuditRecords:
          description: >-
            The job state audit records, indicating when various operations have
            been performed on this job.
          items:
            $ref: '#/components/schemas/JobStateAuditRecord'
          readOnly: true
          type: array
      required:
        - properties
      type: object
    JobInformationBasic:
      description: The common Data Lake Analytics job information properties.
      properties:
        tags:
          additionalProperties:
            type: string
          description: >-
            The key-value pairs used to add additional metadata to the job
            information. (Only for use internally with Scope job type.)
          type: object
        degreeOfParallelism:
          default: 1
          description: The degree of parallelism used for this job.
          format: int32
          type: integer
        degreeOfParallelismPercent:
          description: the degree of parallelism in percentage used for this job.
          format: double
          readOnly: true
          type: number
        endTime:
          description: The completion time of the job.
          format: date-time
          readOnly: true
          type: string
        hierarchyQueueNode:
          description: >-
            the name of hierarchy queue node this job is assigned to, Null if
            job has not been assigned yet or the account doesn't have hierarchy
            queue.
          readOnly: true
          type: string
        jobId:
          description: The job's unique identifier (a GUID).
          format: uuid
          readOnly: true
          type: string
        logFilePatterns:
          description: >-
            The list of log file name patterns to find in the logFolder. '*' is
            the only matching character allowed. Example format:
            jobExecution*.log or *mylog*.txt
          items:
            type: string
          type: array
        logFolder:
          description: >-
            The log folder path to use in the following format:
            adl://<accountName>.azuredatalakestore.net/system/jobservice/jobs/Usql/2016/03/13/17/18/5fe51957-93bc-4de0-8ddc-c5a4753b068b/logs/.
          readOnly: true
          type: string
        name:
          description: The friendly name of the job.
          type: string
        priority:
          description: >-
            The priority value for the current job. Lower numbers have a higher
            priority. By default, a job has a priority of 1000. This must be
            greater than 0.
          format: int32
          type: integer
        related:
          $ref: '#/components/schemas/JobRelationshipProperties'
          description: The recurring job relationship information properties.
        result:
          description: >-
            The result of job execution or the current result of the running
            job.
          enum:
            - None
            - Succeeded
            - Cancelled
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobResult
        startTime:
          description: The start time of the job.
          format: date-time
          readOnly: true
          type: string
        state:
          description: >-
            The job state. When the job is in the Ended state, refer to Result
            and ErrorMessage for details.
          enum:
            - Accepted
            - Compiling
            - Ended
            - New
            - Queued
            - Running
            - Scheduling
            - Starting
            - Paused
            - WaitingForCapacity
            - Yielded
            - Finalizing
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobState
        submitTime:
          description: The time the job was submitted to the service.
          format: date-time
          readOnly: true
          type: string
        submitter:
          description: The user or account that submitted the job.
          readOnly: true
          type: string
        type:
          description: >-
            The job type of the current job (Hive, USql, or Scope (for internal
            use only)).
          enum:
            - USql
            - Hive
            - Scope
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobType
      required:
        - name
        - type
      type: object
    JobInnerError:
      description: The Data Lake Analytics job error details.
      properties:
        component:
          description: The component that failed.
          readOnly: true
          type: string
        description:
          description: The error message description.
          readOnly: true
          type: string
        details:
          description: The details of the error message.
          readOnly: true
          type: string
        diagnosticCode:
          description: The diagnostic error code.
          format: int32
          readOnly: true
          type: integer
        errorId:
          description: >-
            The specific identifier for the type of error encountered in the
            job.
          readOnly: true
          type: string
        helpLink:
          description: 'The link to MSDN or Azure help for this type of error, if any.'
          readOnly: true
          type: string
        innerError:
          $ref: '#/components/schemas/JobInnerError'
          description: 'The inner error of this specific job error message, if any.'
          readOnly: true
        internalDiagnostics:
          description: >-
            The internal diagnostic stack trace if the user requesting the job
            error details has sufficient permissions it will be retrieved,
            otherwise it will be empty.
          readOnly: true
          type: string
        message:
          description: The user friendly error message for the failure.
          readOnly: true
          type: string
        resolution:
          description: 'The recommended resolution for the failure, if any.'
          readOnly: true
          type: string
        severity:
          description: The severity level of the failure.
          enum:
            - Warning
            - Error
            - Info
            - SevereWarning
            - Deprecated
            - UserWarning
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: SeverityTypes
        source:
          description: The ultimate source of the failure (usually either SYSTEM or USER).
          readOnly: true
          type: string
      type: object
    JobPipelineInformation:
      description: >-
        Job Pipeline Information, showing the relationship of jobs and
        recurrences of those jobs in a pipeline.
      properties:
        auHoursCanceled:
          description: The number of job execution hours that resulted in canceled jobs.
          format: double
          readOnly: true
          type: number
        auHoursFailed:
          description: The number of job execution hours that resulted in failed jobs.
          format: double
          readOnly: true
          type: number
        auHoursSucceeded:
          description: The number of job execution hours that resulted in successful jobs.
          format: double
          readOnly: true
          type: number
        lastSubmitTime:
          description: The last time a job in this pipeline was submitted.
          format: date-time
          readOnly: true
          type: string
        numJobsCanceled:
          description: The number of jobs in this pipeline that have been canceled.
          format: int32
          readOnly: true
          type: integer
        numJobsFailed:
          description: The number of jobs in this pipeline that have failed.
          format: int32
          readOnly: true
          type: integer
        numJobsSucceeded:
          description: The number of jobs in this pipeline that have succeeded.
          format: int32
          readOnly: true
          type: integer
        pipelineId:
          description: The job relationship pipeline identifier (a GUID).
          format: uuid
          readOnly: true
          type: string
        pipelineName:
          description: >-
            The friendly name of the job relationship pipeline, which does not
            need to be unique.
          maxLength: 260
          readOnly: true
          type: string
        pipelineUri:
          description: >-
            The pipeline uri, unique, links to the originating service for this
            pipeline.
          readOnly: true
          type: string
        recurrences:
          description: >-
            The list of recurrence identifiers representing each run of this
            pipeline.
          items:
            format: uuid
            type: string
          readOnly: true
          type: array
        runs:
          description: >-
            The list of recurrence identifiers representing each run of this
            pipeline.
          items:
            $ref: '#/components/schemas/JobPipelineRunInformation'
          readOnly: true
          type: array
      type: object
    JobPipelineInformationListResult:
      description: List of job pipeline information items.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The list of job pipeline information items.
          items:
            $ref: '#/components/schemas/JobPipelineInformation'
          readOnly: true
          type: array
      type: object
    JobPipelineRunInformation:
      description: Run info for a specific job pipeline.
      properties:
        lastSubmitTime:
          description: The time this instance was last submitted.
          format: date-time
          readOnly: true
          type: string
        runId:
          description: The run identifier of an instance of pipeline executions (a GUID).
          format: uuid
          readOnly: true
          type: string
      type: object
    JobProperties:
      description: The common Data Lake Analytics job properties.
      discriminator:
        propertyName: type
      properties:
        runtimeVersion:
          description: >-
            The runtime version of the Data Lake Analytics engine to use for the
            specific type of job being run.
          type: string
        script:
          description: The script to run. Please note that the maximum script size is 3 MB.
          type: string
        type:
          description: >-
            The job type of the current job (Hive, USql, or Scope (for internal
            use only)).
          type: string
      required:
        - script
        - type
      type: object
    JobRecurrenceInformation:
      description: Recurrence job information for a specific recurrence.
      properties:
        auHoursCanceled:
          description: The number of job execution hours that resulted in canceled jobs.
          format: double
          readOnly: true
          type: number
        auHoursFailed:
          description: The number of job execution hours that resulted in failed jobs.
          format: double
          readOnly: true
          type: number
        auHoursSucceeded:
          description: The number of job execution hours that resulted in successful jobs.
          format: double
          readOnly: true
          type: number
        lastSubmitTime:
          description: The last time a job in this recurrence was submitted.
          format: date-time
          readOnly: true
          type: string
        numJobsCanceled:
          description: The number of jobs in this recurrence that have been canceled.
          format: int32
          readOnly: true
          type: integer
        numJobsFailed:
          description: The number of jobs in this recurrence that have failed.
          format: int32
          readOnly: true
          type: integer
        numJobsSucceeded:
          description: The number of jobs in this recurrence that have succeeded.
          format: int32
          readOnly: true
          type: integer
        recurrenceId:
          description: >-
            The recurrence identifier (a GUID), unique per activity/script,
            regardless of iterations. This is something to link different
            occurrences of the same job together.
          format: uuid
          readOnly: true
          type: string
        recurrenceName:
          description: >-
            The recurrence name, user friendly name for the correlation between
            jobs.
          readOnly: true
          type: string
      type: object
    JobRecurrenceInformationListResult:
      description: List of job recurrence information items.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The list of job recurrence information items.
          items:
            $ref: '#/components/schemas/JobRecurrenceInformation'
          readOnly: true
          type: array
      type: object
    JobRelationshipProperties:
      description: >-
        Job relationship information properties including pipeline information,
        correlation information, etc.
      properties:
        pipelineId:
          description: The job relationship pipeline identifier (a GUID).
          format: uuid
          type: string
        pipelineName:
          description: >-
            The friendly name of the job relationship pipeline, which does not
            need to be unique.
          maxLength: 260
          type: string
        pipelineUri:
          description: >-
            The pipeline uri, unique, links to the originating service for this
            pipeline.
          type: string
        recurrenceId:
          description: >-
            The recurrence identifier (a GUID), unique per activity/script,
            regardless of iterations. This is something to link different
            occurrences of the same job together.
          format: uuid
          type: string
        recurrenceName:
          description: >-
            The recurrence name, user friendly name for the correlation between
            jobs.
          maxLength: 260
          type: string
        runId:
          description: >-
            The run identifier (a GUID), unique identifier of the iteration of
            this pipeline.
          format: uuid
          type: string
      required:
        - recurrenceId
      type: object
    JobResource:
      description: The Data Lake Analytics job resources.
      properties:
        name:
          description: The name of the resource.
          type: string
        resourcePath:
          description: The path to the resource.
          type: string
        type:
          description: The job resource type.
          enum:
            - VertexResource
            - JobManagerResource
            - StatisticsResource
            - VertexResourceInUserFolder
            - JobManagerResourceInUserFolder
            - StatisticsResourceInUserFolder
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobResourceType
      type: object
    JobStateAuditRecord:
      description: >-
        The Data Lake Analytics job state audit records for tracking the
        lifecycle of a job.
      properties:
        details:
          description: The details of the audit log.
          readOnly: true
          type: string
        newState:
          description: The new state the job is in.
          readOnly: true
          type: string
        requestedByUser:
          description: The user who requests the change.
          readOnly: true
          type: string
        timeStamp:
          description: The time stamp that the state change took place.
          format: date-time
          readOnly: true
          type: string
      type: object
    JobStatistics:
      description: The Data Lake Analytics job execution statistics.
      properties:
        finalizingTimeUtc:
          description: The job finalizing start time.
          format: date-time
          readOnly: true
          type: string
        lastUpdateTimeUtc:
          description: The last update time for the statistics.
          format: date-time
          readOnly: true
          type: string
        stages:
          description: The list of stages for the job.
          items:
            $ref: '#/components/schemas/JobStatisticsVertexStage'
          readOnly: true
          type: array
      type: object
    JobStatisticsVertex:
      description: The detailed information for a vertex.
      properties:
        dataRead:
          description: 'The amount of data read of the vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        executionTime:
          description: The amount of execution time of the vertex.
          format: duration
          readOnly: true
          type: string
        name:
          description: The name of the vertex.
          readOnly: true
          type: string
        peakMemUsage:
          description: 'The amount of peak memory usage of the vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        vertexId:
          description: The id of the vertex.
          format: uuid
          readOnly: true
          type: string
      type: object
    JobStatisticsVertexStage:
      description: The Data Lake Analytics job statistics vertex stage information.
      properties:
        allocatedContainerCpuCoreCount:
          $ref: '#/components/schemas/ResourceUsageStatistics'
          description: >-
            The statistics information for the allocated container CPU core
            count.
        allocatedContainerMemSize:
          $ref: '#/components/schemas/ResourceUsageStatistics'
          description: The statistics information for the allocated container memory size.
        dataRead:
          description: 'The amount of data read, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataReadCrossPod:
          description: 'The amount of data read across multiple pods, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataReadIntraPod:
          description: 'The amount of data read in one pod, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataToRead:
          description: 'The amount of data remaining to be read, in bytes.'
          format: int64
          readOnly: true
          type: integer
        dataWritten:
          description: 'The amount of data written, in bytes.'
          format: int64
          readOnly: true
          type: integer
        duplicateDiscardCount:
          description: The number of duplicates that were discarded.
          format: int32
          readOnly: true
          type: integer
        estimatedVertexCpuCoreCount:
          description: The estimated vertex CPU core count.
          format: int32
          readOnly: true
          type: integer
        estimatedVertexMemSize:
          description: 'The estimated vertex memory size, in bytes.'
          format: int64
          readOnly: true
          type: integer
        estimatedVertexPeakCpuCoreCount:
          description: The estimated vertex peak CPU core count.
          format: int32
          readOnly: true
          type: integer
        failedCount:
          description: The number of failures that occurred in this stage.
          format: int32
          readOnly: true
          type: integer
        maxDataReadVertex:
          $ref: '#/components/schemas/JobStatisticsVertex'
          description: the vertex with the maximum amount of data read.
        maxExecutionTimeVertex:
          $ref: '#/components/schemas/JobStatisticsVertex'
          description: the vertex with the maximum execution time.
        maxPeakMemUsageVertex:
          $ref: '#/components/schemas/JobStatisticsVertex'
          description: the vertex with the maximum peak memory usage.
        maxVertexDataRead:
          description: 'The maximum amount of data read in a single vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        minVertexDataRead:
          description: 'The minimum amount of data read in a single vertex, in bytes.'
          format: int64
          readOnly: true
          type: integer
        readFailureCount:
          description: The number of read failures in this stage.
          format: int32
          readOnly: true
          type: integer
        revocationCount:
          description: The number of vertices that were revoked during this stage.
          format: int32
          readOnly: true
          type: integer
        runningCount:
          description: The number of currently running vertices in this stage.
          format: int32
          readOnly: true
          type: integer
        scheduledCount:
          description: The number of currently scheduled vertices in this stage.
          format: int32
          readOnly: true
          type: integer
        stageName:
          description: The name of this stage in job execution.
          readOnly: true
          type: string
        succeededCount:
          description: The number of vertices that succeeded in this stage.
          format: int32
          readOnly: true
          type: integer
        tempDataWritten:
          description: 'The amount of temporary data written, in bytes.'
          format: int64
          readOnly: true
          type: integer
        totalCount:
          description: The total vertex count for this stage.
          format: int32
          readOnly: true
          type: integer
        totalExecutionTime:
          description: >-
            The sum of the total execution time of all the vertices in the
            stage.
          format: duration
          readOnly: true
          type: string
        totalFailedTime:
          description: The amount of time that failed vertices took up in this stage.
          format: duration
          readOnly: true
          type: string
        totalPeakMemUsage:
          description: >-
            The sum of the peak memory usage of all the vertices in the stage,
            in bytes.
          format: int64
          readOnly: true
          type: integer
        totalProgress:
          description: 'The current progress of this stage, as a percentage.'
          format: int32
          readOnly: true
          type: integer
        totalSucceededTime:
          description: The amount of time all successful vertices took in this stage.
          format: duration
          readOnly: true
          type: string
        usedVertexCpuCoreCount:
          $ref: '#/components/schemas/ResourceUsageStatistics'
          description: The statistics information for the used vertex CPU core count.
        usedVertexPeakMemSize:
          $ref: '#/components/schemas/ResourceUsageStatistics'
          description: The statistics information for the used vertex peak memory size.
      type: object
    ResourceUsageStatistics:
      description: The statistics information for resource usage.
      properties:
        average:
          description: The average value.
          format: double
          readOnly: true
          type: number
        maximum:
          description: The maximum value.
          format: int64
          readOnly: true
          type: integer
        minimum:
          description: The minimum value.
          format: int64
          readOnly: true
          type: integer
      type: object
    ScopeJobProperties:
      allOf:
        - $ref: '#/components/schemas/JobProperties'
      description: >-
        Scope job properties used when submitting and retrieving Scope jobs.
        (Only for use internally with Scope job type.)
      properties:
        notifier:
          description: >-
            The list of email addresses, separated by semi-colons, to notify
            when the job reaches a terminal state.
          type: string
        resources:
          description: The list of resources that are required by the job.
          items:
            $ref: '#/components/schemas/ScopeJobResource'
          readOnly: true
          type: array
        rootProcessNodeId:
          description: >-
            The ID used to identify the job manager coordinating job execution.
            This value should not be set by the user and will be ignored if it
            is.
          readOnly: true
          type: string
        totalCompilationTime:
          description: >-
            The total time this job spent compiling. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalPausedTime:
          description: >-
            The total time this job spent paused. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalQueuedTime:
          description: >-
            The total time this job spent queued. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalRunningTime:
          description: >-
            The total time this job spent executing. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        userAlgebraPath:
          description: The algebra file path after the job has completed.
          readOnly: true
          type: string
        yarnApplicationId:
          description: >-
            The ID used to identify the yarn application executing the job. This
            value should not be set by the user and will be ignored if it is.
          readOnly: true
          type: string
      type: object
      x-ms-discriminator-value: Scope
    ScopeJobResource:
      description: The Scope job resources. (Only for use internally with Scope job type.)
      properties:
        name:
          description: The name of the resource.
          type: string
        path:
          description: The path to the resource.
          type: string
      type: object
    USqlJobProperties:
      allOf:
        - $ref: '#/components/schemas/JobProperties'
      description: U-SQL job properties used when retrieving U-SQL jobs.
      properties:
        algebraFilePath:
          description: The algebra file path after the job has completed.
          readOnly: true
          type: string
        compileMode:
          description: >-
            The specific compilation mode for the job used during execution. If
            this is not specified during submission, the server will determine
            the optimal compilation mode.
          enum:
            - Semantic
            - Full
            - SingleBox
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: CompileMode
        debugData:
          $ref: '#/components/schemas/JobDataPath'
          description: The job specific debug data locations.
        diagnostics:
          description: The diagnostics for the job.
          items:
            $ref: '#/components/schemas/Diagnostics'
          readOnly: true
          type: array
        resources:
          description: The list of resources that are required by the job.
          items:
            $ref: '#/components/schemas/JobResource'
          readOnly: true
          type: array
        rootProcessNodeId:
          description: >-
            The ID used to identify the job manager coordinating job execution.
            This value should not be set by the user and will be ignored if it
            is.
          readOnly: true
          type: string
        statistics:
          $ref: '#/components/schemas/JobStatistics'
          description: The job specific statistics.
        totalCompilationTime:
          description: >-
            The total time this job spent compiling. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalPausedTime:
          description: >-
            The total time this job spent paused. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalQueuedTime:
          description: >-
            The total time this job spent queued. This value should not be set
            by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        totalRunningTime:
          description: >-
            The total time this job spent executing. This value should not be
            set by the user and will be ignored if it is.
          format: duration
          readOnly: true
          type: string
        yarnApplicationId:
          description: >-
            The ID used to identify the yarn application executing the job. This
            value should not be set by the user and will be ignored if it is.
          readOnly: true
          type: string
        yarnApplicationTimeStamp:
          description: >-
            The timestamp (in ticks) for the yarn application executing the job.
            This value should not be set by the user and will be ignored if it
            is.
          format: int64
          readOnly: true
          type: integer
      type: object
      x-ms-discriminator-value: USql
    UpdateJobParameters:
      description: >-
        The parameters that can be used to update existing Data Lake Analytics
        job information properties. (Only for use internally with Scope job
        type.)
      properties:
        tags:
          additionalProperties:
            type: string
          description: >-
            The key-value pairs used to add additional metadata to the job
            information.
          type: object
        degreeOfParallelism:
          description: The degree of parallelism used for this job.
          format: int32
          type: integer
        degreeOfParallelismPercent:
          description: the degree of parallelism in percentage used for this job.
          format: double
          type: number
        priority:
          description: >-
            The priority value for the current job. Lower numbers have a higher
            priority. By default, a job has a priority of 1000. This must be
            greater than 0.
          format: int32
          type: integer
      type: object

