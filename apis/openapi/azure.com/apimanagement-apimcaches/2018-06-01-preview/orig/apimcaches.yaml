openapi: 3.0.0
info:
  description: >-
    Use these REST APIs for performing operations on Cache entity in your Azure
    API Management deployment. Azure API Management also allows for caching
    responses in an external Azure Cache for Redis. For more information refer
    to [External Redis Cache in
    ApiManagement](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external).
  title: ApiManagementClient
  version: 2018-06-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches':
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/TopQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/SkipQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./definitions.json#/definitions/CacheCollection
          description: Returns a collection of Cache entity.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: >-
        Lists a collection of all external Caches in the specified service
        instance.
      operationId: Cache_ListByService
      x-ms-examples:
        ApiManagementListCaches:
          $ref: ./examples/ApiManagementListCaches.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/caches/{cacheId}':
    delete:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/CacheIdParameter
        - $ref: ./apimanagement.json#/components/parameters/IfMatchRequiredParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          description: The Cache was successfully deleted.
        '204':
          description: The Cache was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Deletes specific Cache.
      operationId: Cache_Delete
      x-ms-examples:
        ApiManagementDeleteCache:
          $ref: ./examples/ApiManagementDeleteCache.json
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/CacheIdParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./definitions.json#/definitions/CacheContract
          description: The response body contains the specified Cache entity.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Gets the details of the Cache specified by its identifier.
      operationId: Cache_Get
      x-ms-examples:
        ApiManagementGetCache:
          $ref: ./examples/ApiManagementGetCache.json
    head:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/CacheIdParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          description: >-
            Specified Cache entity exists and current entity state version is
            present in the ETag header.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: >-
        Gets the entity state (Etag) version of the Cache specified by its
        identifier.
      operationId: Cache_GetEntityTag
      x-ms-examples:
        ApiManagementHeadCache:
          $ref: ./examples/ApiManagementHeadCache.json
    patch:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/CacheIdParameter
        - $ref: ./apimanagement.json#/components/parameters/IfMatchRequiredParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '204':
          description: The cache details were successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Updates the details of the cache specified by its identifier.
      operationId: Cache_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions.json#/definitions/CacheUpdateParameters
        description: Update parameters.
        required: true
      x-ms-examples:
        ApiManagementUpdateCache:
          $ref: ./examples/ApiManagementUpdateCache.json
    put:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: ./apimanagement.json#/components/parameters/CacheIdParameter
        - $ref: ./apimanagement.json#/components/parameters/IfMatchOptionalParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: ./definitions.json#/definitions/CacheContract
          description: The Cache details were successfully updated.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        '201':
          content:
            application/json:
              schema:
                $ref: ./definitions.json#/definitions/CacheContract
          description: The new Cache was successfully added.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Caches
      externalDocs:
        description: Use an external cache in Azure API Management
        url: >-
          https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external
      description: >-
        Creates or updates an External Cache to be used in Api Management
        instance.
      operationId: Cache_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./definitions.json#/definitions/CacheContract
        description: Create or Update parameters.
        required: true
      x-ms-examples:
        ApiManagementCreateCache:
          $ref: ./examples/ApiManagementCreateCache.json
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

