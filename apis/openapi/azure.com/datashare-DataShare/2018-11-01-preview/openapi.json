{
  "openapi": "3.0.0",
  "info": {
    "description": "Creates a Microsoft.DataShare management client.",
    "title": "DataShareManagementClient",
    "version": "2018-11-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datashare/resource-manager/Microsoft.DataShare/preview/2018-11-01-preview/DataShare.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataShare/listInvitations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerInvitationList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ConsumerInvitation"
        ],
        "description": "Lists invitations",
        "operationId": "ConsumerInvitations_ListInvitations",
        "summary": "List the invitations",
        "x-ms-examples": {
          "ConsumerInvitations_ListInvitations": {
            "$ref": "./examples/ConsumerInvitations_ListInvitations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/consumerInvitations/{invitationId}": {
      "get": {
        "parameters": [
          {
            "description": "Location of the invitation",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An invitation id",
            "in": "path",
            "name": "invitationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerInvitation"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ConsumerInvitation"
        ],
        "description": "Get an invitation",
        "operationId": "ConsumerInvitations_Get",
        "summary": "Gets the invitation identified by invitationId",
        "x-ms-examples": {
          "ConsumerInvitations_Get": {
            "$ref": "./examples/ConsumerInvitations_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/locations/{location}/rejectInvitation": {
      "post": {
        "parameters": [
          {
            "description": "Location of the invitation",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerInvitation"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ConsumerInvitation"
        ],
        "description": "Reject an invitation",
        "operationId": "ConsumerInvitations_RejectInvitation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConsumerInvitation"
              }
            }
          },
          "description": "An invitation payload",
          "required": true
        },
        "summary": "Rejects the invitation identified by invitationId",
        "x-ms-examples": {
          "ConsumerInvitations_RejectInvitation": {
            "$ref": "./examples/ConsumerInvitations_RejectInvitation.json"
          }
        }
      }
    },
    "/providers/Microsoft.DataShare/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Operation"
        ],
        "description": "List of available operations",
        "operationId": "Operations_List",
        "summary": "Lists the available operations",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataShare/accounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "List Accounts in Subscription",
        "operationId": "Accounts_ListBySubscription",
        "summary": "List Accounts in a subscription",
        "x-ms-examples": {
          "Accounts_ListBySubscription": {
            "$ref": "./examples/Accounts_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "List Accounts in ResourceGroup",
        "operationId": "Accounts_ListByResourceGroup",
        "summary": "List Accounts in a resource group",
        "x-ms-examples": {
          "Accounts_ListByResourceGroup": {
            "$ref": "./examples/Accounts_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "DeleteAccount",
        "operationId": "Accounts_Delete",
        "summary": "Delete an account",
        "x-ms-examples": {
          "Accounts_Delete": {
            "$ref": "./examples/Accounts_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "Get an account",
        "operationId": "Accounts_Get",
        "summary": "Get an account under a resource group",
        "x-ms-examples": {
          "Accounts_Get": {
            "$ref": "./examples/Accounts_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "Patch an account",
        "operationId": "Accounts_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdateParameters"
              }
            }
          },
          "description": "The account update parameters.",
          "required": true
        },
        "summary": "Patch a given account",
        "x-ms-examples": {
          "Accounts_Update": {
            "$ref": "./examples/Accounts_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Account"
        ],
        "description": "Create an account",
        "operationId": "Accounts_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          },
          "description": "The account payload.",
          "required": true
        },
        "summary": "Create an account in the given resource group",
        "x-ms-examples": {
          "Accounts_Create": {
            "$ref": "./examples/Accounts_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation Token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "List share subscriptions in an account",
        "operationId": "ShareSubscriptions_ListByAccount",
        "summary": "List of available share subscriptions under an account.",
        "x-ms-examples": {
          "ShareSubscriptions_ListByAccount": {
            "$ref": "./examples/ShareSubscriptions_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Delete a shareSubscription in an account",
        "operationId": "ShareSubscriptions_Delete",
        "summary": "Delete shareSubscription in an account.",
        "x-ms-examples": {
          "ShareSubscriptions_Delete": {
            "$ref": "./examples/ShareSubscriptions_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Get a shareSubscription in an account",
        "operationId": "ShareSubscriptions_Get",
        "summary": "Get shareSubscription in an account.",
        "x-ms-examples": {
          "ShareSubscriptions_Get": {
            "$ref": "./examples/ShareSubscriptions_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Create a shareSubscription in an account",
        "operationId": "ShareSubscriptions_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareSubscription"
              }
            }
          },
          "description": "create parameters for shareSubscription",
          "required": true
        },
        "summary": "Create shareSubscription in an account.",
        "x-ms-examples": {
          "ShareSubscriptions_Create": {
            "$ref": "./examples/ShareSubscriptions_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/cancelSynchronization": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
                }
              }
            },
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Request to cancel a synchronization.",
        "operationId": "ShareSubscriptions_CancelSynchronization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
              }
            }
          },
          "description": "Share Subscription Synchronization payload.",
          "required": true
        },
        "summary": "Request cancellation of a data share snapshot",
        "x-ms-examples": {
          "ShareSubscriptions_CancelSynchronization": {
            "$ref": "./examples/ShareSubscriptions_CancelSynchronization.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/consumerSourceDataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerSourceDataSetList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Get source dataSets of a shareSubscription",
        "operationId": "ConsumerSourceDataSets_ListByShareSubscription",
        "summary": "Get source dataSets of a shareSubscription.",
        "x-ms-examples": {
          "ConsumerSourceDataSets_ListByShareSubscription": {
            "$ref": "./examples/ConsumerSourceDataSets_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetMappingList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSetMapping"
        ],
        "description": "List DataSetMappings in a share subscription",
        "operationId": "DataSetMappings_ListByShareSubscription",
        "summary": "List DataSetMappings in a share subscription.",
        "x-ms-examples": {
          "DataSetMappings_ListByShareSubscription": {
            "$ref": "./examples/DataSetMappings_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/dataSetMappings/{dataSetMappingName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the dataSetMapping.",
            "in": "path",
            "name": "dataSetMappingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSetMapping"
        ],
        "description": "Delete a DataSetMapping in a shareSubscription",
        "operationId": "DataSetMappings_Delete",
        "summary": "Delete DataSetMapping in a shareSubscription.",
        "x-ms-examples": {
          "DataSetMappings_Delete": {
            "$ref": "./examples/DataSetMappings_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the dataSetMapping.",
            "in": "path",
            "name": "dataSetMappingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetMapping"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSetMapping"
        ],
        "description": "Get a DataSetMapping in a shareSubscription",
        "operationId": "DataSetMappings_Get",
        "summary": "Get DataSetMapping in a shareSubscription.",
        "x-ms-examples": {
          "DataSetMappings_Get": {
            "$ref": "./examples/DataSetMappings_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription which will hold the data set sink.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the data set mapping to be created.",
            "in": "path",
            "name": "dataSetMappingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetMapping"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetMapping"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSetMapping"
        ],
        "description": "Create a DataSetMapping ",
        "operationId": "DataSetMappings_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSetMapping"
              }
            }
          },
          "description": "Destination data set configuration details.",
          "required": true
        },
        "summary": "Maps a source data set in the source share to a sink data set in the share subscription.\r\nEnables copying the data set from source to destination.",
        "x-ms-examples": {
          "DataSetMappings_Create": {
            "$ref": "./examples/DataSetMappings_Create.json"
          },
          "DataSetMappings_SqlDB_Create": {
            "$ref": "./examples/DataSetMappings_SqlDB_Create.json"
          },
          "DataSetMappings_SqlDWDataSetToAdlsGen2File_Create": {
            "$ref": "./examples/DataSetMappings_SqlDWDataSetToAdlsGen2File_Create.json"
          },
          "DataSetMappings_SqlDW_Create": {
            "$ref": "./examples/DataSetMappings_SqlDW_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSourceShareSynchronizationSettings": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceShareSynchronizationSettingList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Get synchronization settings set on a share",
        "operationId": "ShareSubscriptions_ListSourceShareSynchronizationSettings",
        "summary": "Get source share synchronization settings for a shareSubscription.",
        "x-ms-examples": {
          "ShareSubscriptions_ListSourceShareSynchronizationSettings": {
            "$ref": "./examples/ShareSubscriptions_ListSourceShareSynchronizationSettings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizationDetails": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationDetailsList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "List synchronization details",
        "operationId": "ShareSubscriptions_ListSynchronizationDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
              }
            }
          },
          "description": "Share Subscription Synchronization payload.",
          "required": true
        },
        "summary": "List data set level details for a share subscription synchronization",
        "x-ms-examples": {
          "ShareSubscriptions_ListSynchronizationDetails": {
            "$ref": "./examples/ShareSubscriptions_ListSynchronizationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/listSynchronizations": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionSynchronizationList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "List synchronizations of a share subscription",
        "operationId": "ShareSubscriptions_ListSynchronizations",
        "summary": "List Synchronizations in a share subscription.",
        "x-ms-examples": {
          "ShareSubscriptions_ListSynchronizations": {
            "$ref": "./examples/ShareSubscriptions_ListSynchronizations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/synchronize": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of share subscription",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
                }
              }
            },
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "ShareSubscription"
        ],
        "description": "Initiate a copy",
        "operationId": "ShareSubscriptions_Synchronize",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Synchronize"
              }
            }
          },
          "description": "Synchronize payload",
          "required": true
        },
        "summary": "Initiate an asynchronous data share job",
        "x-ms-examples": {
          "ShareSubscriptions_Synchronize": {
            "$ref": "./examples/ShareSubscriptions_Synchronize.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": "List Triggers in a share subscription",
        "operationId": "Triggers_ListByShareSubscription",
        "summary": "List Triggers in a share subscription.",
        "x-ms-examples": {
          "Triggers_ListByShareSubscription": {
            "$ref": "./examples/Triggers_ListByShareSubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shareSubscriptions/{shareSubscriptionName}/triggers/{triggerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the trigger.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": "Delete a Trigger in a shareSubscription",
        "operationId": "Triggers_Delete",
        "summary": "Delete Trigger in a shareSubscription.",
        "x-ms-examples": {
          "Triggers_Delete": {
            "$ref": "./examples/Triggers_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the shareSubscription.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the trigger.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trigger"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": "Get a Trigger in a shareSubscription",
        "operationId": "Triggers_Get",
        "summary": "Get Trigger in a shareSubscription.",
        "x-ms-examples": {
          "Triggers_Get": {
            "$ref": "./examples/Triggers_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share subscription which will hold the data set sink.",
            "in": "path",
            "name": "shareSubscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the trigger.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trigger"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trigger"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Trigger"
        ],
        "description": "Create a Trigger ",
        "operationId": "Triggers_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trigger"
              }
            }
          },
          "description": "Trigger details.",
          "required": true
        },
        "summary": "This method creates a trigger for a share subscription",
        "x-ms-examples": {
          "Triggers_Create": {
            "$ref": "./examples/Triggers_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation Token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "List shares in an account",
        "operationId": "Shares_ListByAccount",
        "summary": "List of available shares under an account.",
        "x-ms-examples": {
          "Shares_ListByAccount": {
            "$ref": "./examples/Shares_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Delete a share ",
        "operationId": "Shares_Delete",
        "summary": "Deletes a share",
        "x-ms-examples": {
          "Shares_Delete": {
            "$ref": "./examples/Shares_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share to retrieve.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Share"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Get a share ",
        "operationId": "Shares_Get",
        "summary": "Get a specified share",
        "x-ms-examples": {
          "Shares_Get": {
            "$ref": "./examples/Shares_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Share"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Share"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Create a share ",
        "operationId": "Shares_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Share"
              }
            }
          },
          "description": "The share payload",
          "required": true
        },
        "summary": "Create a share in the given account.",
        "x-ms-examples": {
          "Shares_Create": {
            "$ref": "./examples/Shares_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSetList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSet"
        ],
        "description": "List DataSets in a share",
        "operationId": "DataSets_ListByShare",
        "summary": "List DataSets in a share.",
        "x-ms-examples": {
          "DataSets_ListByShare": {
            "$ref": "./examples/DataSets_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/dataSets/{dataSetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the dataSet.",
            "in": "path",
            "name": "dataSetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSet"
        ],
        "description": "Delete a DataSet in a share",
        "operationId": "DataSets_Delete",
        "summary": "Delete DataSet in a share.",
        "x-ms-examples": {
          "DataSets_Delete": {
            "$ref": "./examples/DataSets_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the dataSet.",
            "in": "path",
            "name": "dataSetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSet"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSet"
        ],
        "description": "Get a DataSet in a share",
        "operationId": "DataSets_Get",
        "summary": "Get DataSet in a share.",
        "x-ms-examples": {
          "DataSets_Get": {
            "$ref": "./examples/DataSets_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share to add the data set to.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the dataSet.",
            "in": "path",
            "name": "dataSetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSet"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataSet"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "DataSet"
        ],
        "description": "Create a DataSet ",
        "operationId": "DataSets_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataSet"
              }
            }
          },
          "description": "The new data set information.",
          "required": true
        },
        "summary": "Adds a new data set to an existing share.",
        "x-ms-examples": {
          "DataSets_Create": {
            "$ref": "./examples/DataSets_Create.json"
          },
          "DataSets_KustoCluster_Create": {
            "$ref": "./examples/DataSets_KustoCluster_Create.json"
          },
          "DataSets_KustoDatabase_Create": {
            "$ref": "./examples/DataSets_KustoDatabase_Create.json"
          },
          "DataSets_SqlDBTable_Create": {
            "$ref": "./examples/DataSets_SqlDBTable_Create.json"
          },
          "DataSets_SqlDWTable_Create": {
            "$ref": "./examples/DataSets_SqlDWTable_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Invitation"
        ],
        "description": "List invitations in a share",
        "operationId": "Invitations_ListByShare",
        "summary": "List all Invitations in a share.",
        "x-ms-examples": {
          "Invitations_ListByShare": {
            "$ref": "./examples/Invitations_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/invitations/{invitationName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the invitation.",
            "in": "path",
            "name": "invitationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Invitation"
        ],
        "description": "Delete an invitation in a share",
        "operationId": "Invitations_Delete",
        "summary": "Delete Invitation in a share.",
        "x-ms-examples": {
          "Invitations_Delete": {
            "$ref": "./examples/Invitations_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the invitation.",
            "in": "path",
            "name": "invitationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Invitation"
        ],
        "description": "Get an invitation in a share",
        "operationId": "Invitations_Get",
        "summary": "Get Invitation in a share.",
        "x-ms-examples": {
          "Invitations_Get": {
            "$ref": "./examples/Invitations_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share to send the invitation for.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the invitation.",
            "in": "path",
            "name": "invitationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invitation"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Invitation"
        ],
        "description": "Create an invitation ",
        "operationId": "Invitations_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invitation"
              }
            }
          },
          "description": "Invitation details.",
          "required": true
        },
        "summary": "Sends a new invitation to a recipient to access a share.",
        "x-ms-examples": {
          "Invitations_Create": {
            "$ref": "./examples/Invitations_Create.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizationDetails": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationDetailsList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "List synchronization details",
        "operationId": "Shares_ListSynchronizationDetails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareSynchronization"
              }
            }
          },
          "description": "Share Synchronization payload.",
          "required": true
        },
        "summary": "List data set level details for a share synchronization",
        "x-ms-examples": {
          "Shares_ListSynchronizationDetails": {
            "$ref": "./examples/Shares_ListSynchronizationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/listSynchronizations": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters the results using OData syntax.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sorts the results using OData syntax.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShareSynchronizationList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "List synchronizations of a share",
        "operationId": "Shares_ListSynchronizations",
        "summary": "List Synchronizations in a share",
        "x-ms-examples": {
          "Shares_ListSynchronizations": {
            "$ref": "./examples/Shares_ListSynchronizations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "Continuation Token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderShareSubscriptionList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "List share subscriptions in a provider share",
        "operationId": "ProviderShareSubscriptions_ListByShare",
        "summary": "List of available share subscriptions to a provider share.",
        "x-ms-examples": {
          "ProviderShareSubscriptions_ListByShare": {
            "$ref": "./examples/ProviderShareSubscriptions_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To locate shareSubscription",
            "in": "path",
            "name": "providerShareSubscriptionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Get share subscription in a provider share",
        "operationId": "ProviderShareSubscriptions_GetByShare",
        "summary": "Get share subscription in a provider share.",
        "x-ms-examples": {
          "ProviderShareSubscriptions_GetByShare": {
            "$ref": "./examples/ProviderShareSubscriptions_GetByShare.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/reinstate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To locate shareSubscription",
            "in": "path",
            "name": "providerShareSubscriptionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Reinstate share subscription in a provider share",
        "operationId": "ProviderShareSubscriptions_Reinstate",
        "summary": "Reinstate share subscription in a provider share.",
        "x-ms-examples": {
          "ProviderShareSubscriptions_Reinstate": {
            "$ref": "./examples/ProviderShareSubscriptions_Reinstate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/providerShareSubscriptions/{providerShareSubscriptionId}/revoke": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To locate shareSubscription",
            "in": "path",
            "name": "providerShareSubscriptionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderShareSubscription"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderShareSubscription"
                }
              }
            },
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "Share"
        ],
        "description": "Revoke share subscription in a provider share",
        "operationId": "ProviderShareSubscriptions_Revoke",
        "summary": "Revoke share subscription in a provider share.",
        "x-ms-examples": {
          "ProviderShareSubscriptions_Revoke": {
            "$ref": "./examples/ProviderShareSubscriptions_Revoke.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "continuation token",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationSettingList"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "SynchronizationSetting"
        ],
        "description": "List synchronizationSettings in a share",
        "operationId": "SynchronizationSettings_ListByShare",
        "summary": "List synchronizationSettings in a share.",
        "x-ms-examples": {
          "SynchronizationSettings_ListByShare": {
            "$ref": "./examples/SynchronizationSettings_ListByShare.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataShare/accounts/{accountName}/shares/{shareName}/synchronizationSettings/{synchronizationSettingName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the synchronizationSetting .",
            "in": "path",
            "name": "synchronizationSettingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResponse"
                }
              }
            },
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "SynchronizationSetting"
        ],
        "description": "Delete a synchronizationSetting in a share",
        "operationId": "SynchronizationSettings_Delete",
        "summary": "Delete synchronizationSetting in a share.",
        "x-ms-examples": {
          "SynchronizationSettings_Delete": {
            "$ref": "./examples/SynchronizationSettings_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the synchronizationSetting.",
            "in": "path",
            "name": "synchronizationSettingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationSetting"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "SynchronizationSetting"
        ],
        "description": "Get a synchronizationSetting in a share",
        "operationId": "SynchronizationSettings_Get",
        "summary": "Get synchronizationSetting in a share.",
        "x-ms-examples": {
          "SynchronizationSettings_Get": {
            "$ref": "./examples/SynchronizationSettings_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/accountName"
          },
          {
            "description": "The name of the share to add the synchronization setting to.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the synchronizationSetting.",
            "in": "path",
            "name": "synchronizationSettingName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationSetting"
                }
              }
            },
            "description": "Success"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SynchronizationSetting"
                }
              }
            },
            "description": "Success"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataShareError"
                }
              }
            },
            "description": "An error response received from the Microsoft.DataShare resource provider."
          }
        },
        "tags": [
          "SynchronizationSetting"
        ],
        "description": "Create a synchronizationSetting",
        "operationId": "SynchronizationSettings_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SynchronizationSetting"
              }
            }
          },
          "description": "The new synchronization setting information.",
          "required": true
        },
        "summary": "Adds a new synchronization setting to an existing share.",
        "x-ms-examples": {
          "SynchronizationSettings_Create": {
            "$ref": "./examples/SynchronizationSettings_Create.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "accountName": {
        "description": "The name of the share account.",
        "in": "path",
        "name": "accountName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "api-version": {
        "description": "The api version to use.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resourceGroupName": {
        "description": "The resource group name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "The subscription identifier",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "ShareSubscriptionSynchronization": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
            }
          }
        },
        "description": "Share Subscription Synchronization payload.",
        "required": true
      }
    },
    "schemas": {
      "ADLSGen1FileDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An ADLS Gen 1 file data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen1FileProperties",
            "description": "ADLS Gen 1 file data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen1File"
      },
      "ADLSGen1FileProperties": {
        "description": "Properties of the ADLS Gen1 file data set.",
        "properties": {
          "accountName": {
            "description": "The ADLS account name.",
            "type": "string"
          },
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "fileName": {
            "description": "The file name in the ADLS account.",
            "type": "string"
          },
          "folderPath": {
            "description": "The folder path within the ADLS account.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of ADLS account.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of ADLS account.",
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "resourceGroup",
          "accountName",
          "folderPath",
          "fileName"
        ],
        "type": "object"
      },
      "ADLSGen1FolderDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An ADLS Gen 1 folder data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen1FolderProperties",
            "description": "ADLS Gen 1 folder data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen1Folder"
      },
      "ADLSGen1FolderProperties": {
        "description": "Properties of the ADLS Gen1 folder data set.",
        "properties": {
          "accountName": {
            "description": "The ADLS account name.",
            "type": "string"
          },
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "folderPath": {
            "description": "The folder path within the ADLS account.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of ADLS account.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of ADLS account.",
            "type": "string"
          }
        },
        "required": [
          "subscriptionId",
          "resourceGroup",
          "accountName",
          "folderPath"
        ],
        "type": "object"
      },
      "ADLSGen2FileDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An ADLS Gen 2 file data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FileProperties",
            "description": "ADLS Gen 2 file data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2File"
      },
      "ADLSGen2FileDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "An ADLS Gen2 file data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FileDataSetMappingProperties",
            "description": "ADLS Gen2 file data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2File"
      },
      "ADLSGen2FileDataSetMappingProperties": {
        "description": "ADLS Gen 2 file data set mapping property bag.",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "filePath": {
            "description": "File path within the file system.",
            "type": "string"
          },
          "fileSystem": {
            "description": "File system to which the file belongs.",
            "type": "string"
          },
          "outputType": {
            "description": "Type of output file",
            "enum": [
              "Csv",
              "Parquet"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "outputType"
            }
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "filePath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "ADLSGen2FileProperties": {
        "description": "Properties of the ADLS Gen2 file data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "filePath": {
            "description": "File path within the file system.",
            "type": "string"
          },
          "fileSystem": {
            "description": "File system to which the file belongs.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "filePath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "ADLSGen2FileSystemDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An ADLS Gen 2 file system data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FileSystemProperties",
            "description": "ADLS Gen 2 file system data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2FileSystem"
      },
      "ADLSGen2FileSystemDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "An ADLS Gen2 file system data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FileSystemDataSetMappingProperties",
            "description": "ADLS Gen2 file system data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2FileSystem"
      },
      "ADLSGen2FileSystemDataSetMappingProperties": {
        "description": "ADLS Gen 2 file system data set mapping property bag.",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "fileSystem": {
            "description": "The file system name.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "ADLSGen2FileSystemProperties": {
        "description": "Properties of the ADLS Gen2 file system data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "fileSystem": {
            "description": "The file system name.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "ADLSGen2FolderDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An ADLS Gen 2 folder data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FolderProperties",
            "description": "ADLS Gen 2 folder data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2Folder"
      },
      "ADLSGen2FolderDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "An ADLS Gen2 folder data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ADLSGen2FolderDataSetMappingProperties",
            "description": "ADLS Gen2 folder data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "AdlsGen2Folder"
      },
      "ADLSGen2FolderDataSetMappingProperties": {
        "description": "ADLS Gen 2 folder data set mapping property bag.",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "fileSystem": {
            "description": "File system to which the folder belongs.",
            "type": "string"
          },
          "folderPath": {
            "description": "Folder path within the file system.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "folderPath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "ADLSGen2FolderProperties": {
        "description": "Properties of the ADLS Gen2 folder data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "fileSystem": {
            "description": "File system to which the folder belongs.",
            "type": "string"
          },
          "folderPath": {
            "description": "Folder path within the file system.",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "fileSystem",
          "folderPath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DefaultDto"
          }
        ],
        "description": "An account data transfer object.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "Identity Info on the Account"
          },
          "properties": {
            "$ref": "#/components/schemas/AccountProperties",
            "description": "Properties on the account",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "identity"
        ],
        "type": "object"
      },
      "AccountList": {
        "description": "List response for get Accounts.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/Account"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AccountProperties": {
        "description": "Account property bag.",
        "properties": {
          "createdAt": {
            "description": "Time at which the account was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the Account",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "userEmail": {
            "description": "Email of the user who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountUpdateParameters": {
        "description": "Update parameters for accounts",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags on the azure resource.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "BlobContainerDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An Azure storage blob container data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobContainerProperties",
            "description": "Blob container data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Container"
      },
      "BlobContainerDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A Blob container data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobContainerMappingProperties",
            "description": "Blob container data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Container"
      },
      "BlobContainerMappingProperties": {
        "description": "Azure storage Blob container data set mapping property bag.",
        "properties": {
          "containerName": {
            "description": "BLOB Container name.",
            "type": "string"
          },
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "BlobContainerProperties": {
        "description": "Properties of the BLOB container data set.",
        "properties": {
          "containerName": {
            "description": "BLOB Container name.",
            "type": "string"
          },
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "BlobDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An Azure storage blob data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobProperties",
            "description": "Blob data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Blob"
      },
      "BlobDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A Blob data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobMappingProperties",
            "description": "Blob data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Blob"
      },
      "BlobFolderDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "An Azure storage blob folder data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobFolderProperties",
            "description": "Blob folder data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "BlobFolder"
      },
      "BlobFolderDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A Blob folder data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobFolderMappingProperties",
            "description": "Blob folder data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "BlobFolder"
      },
      "BlobFolderMappingProperties": {
        "description": "Azure storage Blob folder data set mapping property bag.",
        "properties": {
          "containerName": {
            "description": "Container that has the file path.",
            "type": "string"
          },
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "prefix": {
            "description": "Prefix for blob folder",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "prefix",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "BlobFolderProperties": {
        "description": "Properties of the blob folder data set.",
        "properties": {
          "containerName": {
            "description": "Container that has the file path.",
            "type": "string"
          },
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "prefix": {
            "description": "Prefix for blob folder",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "prefix",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "BlobMappingProperties": {
        "description": "Azure storage Blob data set mapping property bag.",
        "properties": {
          "containerName": {
            "description": "Container that has the file path.",
            "type": "string"
          },
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "filePath": {
            "description": "File path within the source data set",
            "type": "string"
          },
          "outputType": {
            "description": "File output type",
            "enum": [
              "Csv",
              "Parquet"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "outputType"
            }
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "resourceGroup": {
            "description": "Resource group of storage account.",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account.",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "filePath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName",
          "dataSetId"
        ],
        "type": "object"
      },
      "BlobProperties": {
        "description": "Properties of the blob data set.",
        "properties": {
          "containerName": {
            "description": "Container that has the file path.",
            "type": "string"
          },
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "filePath": {
            "description": "File path within the source data set",
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource group of storage account",
            "type": "string"
          },
          "storageAccountName": {
            "description": "Storage account name of the source data set",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription id of storage account",
            "type": "string"
          }
        },
        "required": [
          "containerName",
          "filePath",
          "subscriptionId",
          "resourceGroup",
          "storageAccountName"
        ],
        "type": "object"
      },
      "ConsumerInvitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A consumer Invitation data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ConsumerInvitationProperties",
            "description": "Properties on the account",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ConsumerInvitationList": {
        "description": "List response for get InvitationList",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ConsumerInvitation"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ConsumerInvitationProperties": {
        "description": "Properties of consumer invitation",
        "properties": {
          "dataSetCount": {
            "description": "Number of data sets in a share",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "description": {
            "description": "Description shared when the invitation was created",
            "readOnly": true,
            "type": "string"
          },
          "invitationId": {
            "description": "Unique id of the invitation.",
            "type": "string"
          },
          "invitationStatus": {
            "description": "The status of the invitation.",
            "enum": [
              "Pending",
              "Accepted",
              "Rejected",
              "Withdrawn"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "invitationStatus"
            }
          },
          "location": {
            "description": "invitation location",
            "readOnly": true,
            "type": "string"
          },
          "providerEmail": {
            "description": "Email of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Name of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "providerTenantName": {
            "description": "Tenant name of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "respondedAt": {
            "description": "The time the recipient responded to the invitation.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "sentAt": {
            "description": "Gets the time at which the invitation was sent.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "shareName": {
            "description": "Gets the source share Name.",
            "readOnly": true,
            "type": "string"
          },
          "termsOfUse": {
            "description": "Terms of use shared when the invitation was created",
            "readOnly": true,
            "type": "string"
          },
          "userEmail": {
            "description": "Email of the user who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "invitationId"
        ],
        "type": "object"
      },
      "ConsumerSourceDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A consumer side dataSet data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ConsumerSourceDataSetProperties",
            "description": "source dataSet properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ConsumerSourceDataSetList": {
        "description": "A consumer side list of source dataSets",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ConsumerSourceDataSet"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ConsumerSourceDataSetProperties": {
        "description": "Properties of consumer source dataSet",
        "properties": {
          "dataSetId": {
            "description": "DataSet Id",
            "readOnly": true,
            "type": "string"
          },
          "dataSetLocation": {
            "description": "Location of the data set.",
            "readOnly": true,
            "type": "string"
          },
          "dataSetName": {
            "description": "DataSet name",
            "readOnly": true,
            "type": "string"
          },
          "dataSetPath": {
            "description": "DataSet path",
            "readOnly": true,
            "type": "string"
          },
          "dataSetType": {
            "description": "Type of data set",
            "enum": [
              "Blob",
              "Container",
              "BlobFolder",
              "AdlsGen2FileSystem",
              "AdlsGen2Folder",
              "AdlsGen2File",
              "AdlsGen1Folder",
              "AdlsGen1File",
              "KustoCluster",
              "KustoDatabase",
              "SqlDBTable",
              "SqlDWTable"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetType"
            }
          }
        },
        "type": "object"
      },
      "DataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A DataSet data transfer object.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of data set.",
            "enum": [
              "Blob",
              "Container",
              "BlobFolder",
              "AdlsGen2FileSystem",
              "AdlsGen2Folder",
              "AdlsGen2File",
              "AdlsGen1Folder",
              "AdlsGen1File",
              "KustoCluster",
              "KustoDatabase",
              "SqlDBTable",
              "SqlDWTable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DataSetList": {
        "description": "List response for get DataSets",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/DataSet"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A data set mapping data transfer object.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of data set mapping.",
            "enum": [
              "Blob",
              "Container",
              "BlobFolder",
              "AdlsGen2FileSystem",
              "AdlsGen2Folder",
              "AdlsGen2File",
              "KustoCluster",
              "KustoDatabase",
              "SqlDBTable",
              "SqlDWTable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DataSetMappingList": {
        "description": "List response for get DataSetMappings",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/DataSetMapping"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DataShareError": {
        "description": "The data share error model.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/DataShareErrorInfo",
            "description": "The data share error body"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "DataShareErrorInfo": {
        "description": "The data share error body model.",
        "properties": {
          "code": {
            "description": "Code of the error",
            "type": "string"
          },
          "details": {
            "description": "Nested details of the error model",
            "items": {
              "$ref": "#/components/schemas/DataShareErrorInfo"
            },
            "type": "array",
            "uniqueItems": false
          },
          "message": {
            "description": "Message of the error",
            "type": "string"
          },
          "target": {
            "description": "Target of the error",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "DefaultDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "Base data transfer object implementation for default resources.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags on the azure resource.",
            "type": "object"
          },
          "location": {
            "description": "Location of the azure resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensionProperties": {
        "description": "properties for dimension",
        "properties": {
          "displayName": {
            "description": "localized display name of the dimension to customer",
            "type": "string"
          },
          "name": {
            "description": "dimension name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Identity": {
        "description": "Identity of resource",
        "properties": {
          "principalId": {
            "description": "service principal Id",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant Id",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Identity Type",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "type"
            }
          }
        },
        "type": "object"
      },
      "Invitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A Invitation data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/InvitationProperties",
            "description": "Properties on the Invitation",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "InvitationList": {
        "description": "List response for get InvitationList",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/Invitation"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "InvitationProperties": {
        "description": "Invitation property bag.",
        "properties": {
          "invitationId": {
            "description": "unique invitation id",
            "readOnly": true,
            "type": "string"
          },
          "invitationStatus": {
            "description": "The status of the invitation.",
            "enum": [
              "Pending",
              "Accepted",
              "Rejected",
              "Withdrawn"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "invitationStatus"
            }
          },
          "respondedAt": {
            "description": "The time the recipient responded to the invitation.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "sentAt": {
            "description": "Gets the time at which the invitation was sent.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "targetActiveDirectoryId": {
            "description": "The target Azure AD Id. Can't be combined with email.",
            "type": "string"
          },
          "targetEmail": {
            "description": "The email the invitation is directed to.",
            "type": "string"
          },
          "targetObjectId": {
            "description": "The target user or application Id that invitation is being sent to.\r\nMust be specified along TargetActiveDirectoryId. This enables sending\r\ninvitations to specific users or applications in an AD tenant.",
            "type": "string"
          },
          "userEmail": {
            "description": "Email of the user who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "KustoClusterDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "A kusto cluster data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/KustoClusterDataSetProperties",
            "description": "Kusto cluster data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "KustoCluster"
      },
      "KustoClusterDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A Kusto cluster data set mapping",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/KustoClusterDataSetMappingProperties",
            "description": "Kusto cluster data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "KustoCluster"
      },
      "KustoClusterDataSetMappingProperties": {
        "description": "Properties of the Kusto cluster data set mapping",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "kustoClusterResourceId": {
            "description": "Resource id of the sink kusto cluster.",
            "type": "string"
          },
          "location": {
            "description": "Location of the sink kusto cluster.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "required": [
          "kustoClusterResourceId",
          "dataSetId"
        ],
        "type": "object"
      },
      "KustoClusterDataSetProperties": {
        "description": "Properties of the kusto cluster data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "kustoClusterResourceId": {
            "description": "Resource id of the kusto cluster.",
            "type": "string"
          },
          "location": {
            "description": "Location of the kusto cluster.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the kusto cluster data set.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "required": [
          "kustoClusterResourceId"
        ],
        "type": "object"
      },
      "KustoDatabaseDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "A kusto database data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/KustoDatabaseDataSetProperties",
            "description": "Kusto database data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "KustoDatabase"
      },
      "KustoDatabaseDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A Kusto database data set mapping",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/KustoDatabaseDataSetMappingProperties",
            "description": "Kusto database data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "KustoDatabase"
      },
      "KustoDatabaseDataSetMappingProperties": {
        "description": "Properties of the Kusto database data set mapping",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "kustoClusterResourceId": {
            "description": "Resource id of the sink kusto cluster.",
            "type": "string"
          },
          "location": {
            "description": "Location of the sink kusto cluster.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "required": [
          "kustoClusterResourceId",
          "dataSetId"
        ],
        "type": "object"
      },
      "KustoDatabaseDataSetProperties": {
        "description": "Properties of the kusto database data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "kustoDatabaseResourceId": {
            "description": "Resource id of the kusto database.",
            "type": "string"
          },
          "location": {
            "description": "Location of the kusto cluster.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the kusto database data set.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "required": [
          "kustoDatabaseResourceId"
        ],
        "type": "object"
      },
      "OperationList": {
        "description": "List response for get operations.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/OperationModel"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "OperationMetaLogSpecification": {
        "description": "log specifications for operation api",
        "properties": {
          "blobDuration": {
            "description": "blob duration of the log",
            "type": "string"
          },
          "displayName": {
            "description": "localized name of the log category",
            "type": "string"
          },
          "name": {
            "description": "name of the log category",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetaMetricSpecification": {
        "description": "metric specifications for the operation",
        "properties": {
          "aggregationType": {
            "description": "aggregation type of metric",
            "type": "string"
          },
          "dimensions": {
            "description": "properties for dimension",
            "items": {
              "$ref": "#/components/schemas/DimensionProperties"
            },
            "type": "array",
            "uniqueItems": false
          },
          "displayDescription": {
            "description": "description of the metric",
            "type": "string"
          },
          "displayName": {
            "description": "localized name of the metric",
            "type": "string"
          },
          "enableRegionalMdmAccount": {
            "description": "enable regional mdm account",
            "type": "string"
          },
          "fillGapWithZero": {
            "description": "fill gap with zero",
            "type": "boolean"
          },
          "internalMetricName": {
            "description": "internal metric name",
            "type": "string"
          },
          "name": {
            "description": "name of the metric",
            "type": "string"
          },
          "resourceIdDimensionNameOverride": {
            "description": "dimension name use to replace resource id if specified",
            "type": "string"
          },
          "supportedAggregationTypes": {
            "description": "supported aggregation types",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "supportedTimeGrainTypes": {
            "description": "supported time grain types",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "unit": {
            "description": "units for the metric",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetaPropertyInfo": {
        "description": "properties on meta info",
        "properties": {
          "serviceSpecification": {
            "$ref": "#/components/schemas/OperationMetaServiceSpecification",
            "description": "meta service specification"
          }
        },
        "type": "object"
      },
      "OperationMetaServiceSpecification": {
        "description": "The operation meta service specification",
        "properties": {
          "logSpecifications": {
            "description": "log specifications for the operation",
            "items": {
              "$ref": "#/components/schemas/OperationMetaLogSpecification"
            },
            "type": "array",
            "uniqueItems": false
          },
          "metricSpecifications": {
            "description": "metric specifications for the operation",
            "items": {
              "$ref": "#/components/schemas/OperationMetaMetricSpecification"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "OperationModel": {
        "description": "The response model for get operations",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationModelProperties",
            "description": "Properties on the operation"
          },
          "name": {
            "description": "Operation name for display purposes",
            "type": "string"
          },
          "origin": {
            "description": "origin of the operation",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationMetaPropertyInfo",
            "description": "properties for the operation meta info",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "OperationModelProperties": {
        "description": "Properties on operations",
        "properties": {
          "description": {
            "description": "Description of the operation for display purposes",
            "type": "string"
          },
          "operation": {
            "description": "Name of the operation for display purposes",
            "type": "string"
          },
          "provider": {
            "description": "Name of the provider for display purposes",
            "type": "string"
          },
          "resource": {
            "description": "Name of the resource type for display purposes",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationResponse": {
        "description": "Response for long running operation",
        "properties": {
          "endTime": {
            "description": "start time",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/DataShareErrorInfo",
            "description": "The error property when status is failed."
          },
          "startTime": {
            "description": "start time",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Operation state of the long running operation.",
            "enum": [
              "Accepted",
              "InProgress",
              "TransientFailure",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "status"
            }
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "ProviderShareSubscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A provider side share subscription data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProviderShareSubscriptionProperties",
            "description": "properties of providerShareSubscription",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProviderShareSubscriptionList": {
        "description": "List response for get ShareSubscription.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ProviderShareSubscription"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ProviderShareSubscriptionProperties": {
        "description": "Provider share subscription properties",
        "properties": {
          "consumerEmail": {
            "description": "Email of the consumer who created the share subscription",
            "readOnly": true,
            "type": "string"
          },
          "consumerName": {
            "description": "Name of the consumer who created the share subscription",
            "readOnly": true,
            "type": "string"
          },
          "consumerTenantName": {
            "description": "Tenant name of the consumer who created the share subscription",
            "readOnly": true,
            "type": "string"
          },
          "createdAt": {
            "description": "created at",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "providerEmail": {
            "description": "Email of the provider who created the share",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Name of the provider who created the share",
            "readOnly": true,
            "type": "string"
          },
          "shareSubscriptionObjectId": {
            "description": "share Subscription Object Id",
            "readOnly": true,
            "type": "string"
          },
          "shareSubscriptionStatus": {
            "description": "Gets the status of share subscription",
            "enum": [
              "Active",
              "Revoked",
              "SourceDeleted",
              "Revoking"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "shareSubscriptionStatus"
            }
          },
          "sharedAt": {
            "description": "Shared at",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyDto": {
        "description": "Base data transfer object implementation for proxy resources.",
        "properties": {
          "id": {
            "description": "The resource id of the azure resource",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the azure resource",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of the azure resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ScheduledSourceShareSynchronizationSettingProperties": {
        "description": "A Scheduled source synchronization setting data transfer object.",
        "properties": {
          "recurrenceInterval": {
            "description": "Recurrence Interval",
            "enum": [
              "Hour",
              "Day"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "recurrenceInterval"
            }
          },
          "synchronizationTime": {
            "description": "Synchronization time",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ScheduledSourceSynchronizationSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SourceShareSynchronizationSetting"
          }
        ],
        "description": "A type of synchronization setting based on schedule",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ScheduledSourceShareSynchronizationSettingProperties",
            "description": "Properties of scheduled synchronization",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "ScheduleBased"
      },
      "ScheduledSynchronizationSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SynchronizationSetting"
          }
        ],
        "description": "A type of synchronization setting based on schedule",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ScheduledSynchronizationSettingProperties",
            "description": "Properties of scheduled synchronization",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "ScheduleBased"
      },
      "ScheduledSynchronizationSettingProperties": {
        "description": "A Scheduled synchronization setting data transfer object.",
        "properties": {
          "createdAt": {
            "description": "Time at which the synchronization setting was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Gets or sets the provisioning state",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "recurrenceInterval": {
            "description": "Recurrence Interval",
            "enum": [
              "Hour",
              "Day"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "recurrenceInterval"
            }
          },
          "synchronizationTime": {
            "description": "Synchronization time",
            "format": "date-time",
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the synchronization setting.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "recurrenceInterval",
          "synchronizationTime"
        ],
        "type": "object"
      },
      "ScheduledTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Trigger"
          }
        ],
        "description": "A type of trigger based on schedule",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ScheduledTriggerProperties",
            "description": "Properties of scheduled synchronization",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "ScheduleBased"
      },
      "ScheduledTriggerProperties": {
        "description": "A Scheduled trigger data transfer object.",
        "properties": {
          "createdAt": {
            "description": "Time at which the trigger was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Gets the provisioning state",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "recurrenceInterval": {
            "description": "Recurrence Interval",
            "enum": [
              "Hour",
              "Day"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "recurrenceInterval"
            }
          },
          "synchronizationMode": {
            "description": "Synchronization mode",
            "enum": [
              "Incremental",
              "FullSync"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "synchronizationMode"
            }
          },
          "synchronizationTime": {
            "description": "Synchronization time",
            "format": "date-time",
            "type": "string"
          },
          "triggerStatus": {
            "description": "Gets the trigger state",
            "enum": [
              "Active",
              "Inactive",
              "SourceSynchronizationSettingDeleted"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "triggerStatus"
            }
          },
          "userName": {
            "description": "Name of the user who created the trigger.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "recurrenceInterval",
          "synchronizationTime"
        ],
        "type": "object"
      },
      "Share": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A share data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ShareProperties",
            "description": "Properties on the share",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ShareList": {
        "description": "List response for get Shares.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/Share"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ShareProperties": {
        "description": "Share property bag.",
        "properties": {
          "createdAt": {
            "description": "Time at which the share was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Share description.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Gets or sets the provisioning state",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "shareKind": {
            "description": "Share kind.",
            "enum": [
              "CopyBased",
              "InPlace"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "shareKind"
            }
          },
          "terms": {
            "description": "Share terms.",
            "type": "string"
          },
          "userEmail": {
            "description": "Email of the user who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShareSubscription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A share subscription data transfer object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ShareSubscriptionProperties",
            "description": "Properties on the share subscription",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ShareSubscriptionList": {
        "description": "List response for get ShareSubscription.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ShareSubscription"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ShareSubscriptionProperties": {
        "description": "Share subscription property bag.",
        "properties": {
          "createdAt": {
            "description": "Time at which the share subscription was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "invitationId": {
            "description": "The invitation id.",
            "type": "string"
          },
          "providerEmail": {
            "description": "Email of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "providerName": {
            "description": "Name of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "providerTenantName": {
            "description": "Tenant name of the provider who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the share subscription",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "shareDescription": {
            "description": "Description of share",
            "readOnly": true,
            "type": "string"
          },
          "shareKind": {
            "description": "Kind of share",
            "enum": [
              "CopyBased",
              "InPlace"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "shareKind"
            }
          },
          "shareName": {
            "description": "Name of the share",
            "readOnly": true,
            "type": "string"
          },
          "shareSubscriptionStatus": {
            "description": "Gets the current status of share subscription.",
            "enum": [
              "Active",
              "Revoked",
              "SourceDeleted",
              "Revoking"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "shareSubscriptionStatus"
            }
          },
          "shareTerms": {
            "description": "Terms of a share",
            "readOnly": true,
            "type": "string"
          },
          "userEmail": {
            "description": "Email of the user who created the resource",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "Name of the user who created the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "invitationId"
        ],
        "type": "object"
      },
      "ShareSubscriptionSynchronization": {
        "description": "A ShareSubscriptionSynchronization data transfer object.",
        "properties": {
          "durationMs": {
            "description": "Synchronization duration",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "endTime": {
            "description": "End time of synchronization",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "message of Synchronization",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "start time of synchronization",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Raw Status",
            "readOnly": true,
            "type": "string"
          },
          "synchronizationId": {
            "description": "Synchronization id",
            "type": "string"
          },
          "synchronizationMode": {
            "description": "Synchronization Mode",
            "enum": [
              "Incremental",
              "FullSync"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "synchronizationMode"
            }
          }
        },
        "required": [
          "synchronizationId"
        ],
        "type": "object"
      },
      "ShareSubscriptionSynchronizationList": {
        "description": "A consumer side list of share subscription synchronizations",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ShareSubscriptionSynchronization"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ShareSynchronization": {
        "description": "A ShareSynchronization data transfer object.",
        "properties": {
          "consumerEmail": {
            "description": "Email of the user who created the synchronization",
            "type": "string"
          },
          "consumerName": {
            "description": "Name of the user who created the synchronization",
            "type": "string"
          },
          "consumerTenantName": {
            "description": "Tenant name of the consumer who created the synchronization",
            "type": "string"
          },
          "durationMs": {
            "description": "synchronization duration",
            "format": "int32",
            "type": "integer"
          },
          "endTime": {
            "description": "End time of synchronization",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "message of synchronization",
            "type": "string"
          },
          "startTime": {
            "description": "start time of synchronization",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Raw Status",
            "type": "string"
          },
          "synchronizationId": {
            "description": "Synchronization id",
            "type": "string"
          },
          "synchronizationMode": {
            "description": "Synchronization mode",
            "enum": [
              "Incremental",
              "FullSync"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "synchronizationMode"
            }
          }
        },
        "type": "object"
      },
      "ShareSynchronizationList": {
        "description": "List response for get ShareSynchronization.",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/ShareSynchronization"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SourceShareSynchronizationSetting": {
        "description": "A view of synchronization setting added by the provider",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of synchronization setting on share.",
            "enum": [
              "ScheduleBased"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "sourceShareSynchronizationSettingKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "SourceShareSynchronizationSettingList": {
        "description": "List response for get source share Synchronization settings",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/SourceShareSynchronizationSetting"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SqlDBTableDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "A SQL DB table data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SqlDBTableProperties",
            "description": "SQL DB table data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SqlDBTable"
      },
      "SqlDBTableDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A SQL DB Table data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SqlDBTableDataSetMappingProperties",
            "description": "Sql DB data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SqlDBTable"
      },
      "SqlDBTableDataSetMappingProperties": {
        "description": "Properties of the SQL DB table data set mapping.",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "databaseName": {
            "description": "DatabaseName name of the sink data set",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "schemaName": {
            "description": "Schema of the table. Default value is dbo.",
            "type": "string"
          },
          "sqlServerResourceId": {
            "description": "Resource id of SQL server",
            "type": "string"
          },
          "tableName": {
            "description": "SQL DB table name.",
            "type": "string"
          }
        },
        "required": [
          "databaseName",
          "tableName",
          "schemaName",
          "sqlServerResourceId",
          "dataSetId"
        ],
        "type": "object"
      },
      "SqlDBTableProperties": {
        "description": "Properties of the SQL DB table data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "databaseName": {
            "description": "Database name of the source data set",
            "type": "string"
          },
          "schemaName": {
            "description": "Schema of the table. Default value is dbo.",
            "type": "string"
          },
          "sqlServerResourceId": {
            "description": "Resource id of SQL server",
            "type": "string"
          },
          "tableName": {
            "description": "SQL DB table name.",
            "type": "string"
          }
        },
        "required": [
          "databaseName",
          "tableName",
          "schemaName",
          "sqlServerResourceId"
        ],
        "type": "object"
      },
      "SqlDWTableDataSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSet"
          }
        ],
        "description": "A SQL DW table data set.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SqlDWTableProperties",
            "description": "SQL DW table data set properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SqlDWTable"
      },
      "SqlDWTableDataSetMapping": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataSetMapping"
          }
        ],
        "description": "A SQL DW Table data set mapping.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SqlDWTableDataSetMappingProperties",
            "description": "Sql DW data set mapping properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties",
          "kind"
        ],
        "type": "object",
        "x-ms-discriminator-value": "SqlDWTable"
      },
      "SqlDWTableDataSetMappingProperties": {
        "description": "Properties of the SQL DW table data set mapping.",
        "properties": {
          "dataSetId": {
            "description": "The id of the source data set.",
            "type": "string"
          },
          "dataSetMappingStatus": {
            "description": "Gets the status of the data set mapping.",
            "enum": [
              "Ok",
              "Broken"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetMappingStatus"
            }
          },
          "dataWarehouseName": {
            "description": "DataWarehouse name of the source data set",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the data set mapping.",
            "enum": [
              "Succeeded",
              "Creating",
              "Deleting",
              "Moving",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "schemaName": {
            "description": "Schema of the table. Default value is dbo.",
            "type": "string"
          },
          "sqlServerResourceId": {
            "description": "Resource id of SQL server",
            "type": "string"
          },
          "tableName": {
            "description": "SQL DW table name.",
            "type": "string"
          }
        },
        "required": [
          "dataWarehouseName",
          "tableName",
          "schemaName",
          "sqlServerResourceId",
          "dataSetId"
        ],
        "type": "object"
      },
      "SqlDWTableProperties": {
        "description": "Properties of the SQL DW table data set.",
        "properties": {
          "dataSetId": {
            "description": "Unique id for identifying a data set resource",
            "readOnly": true,
            "type": "string"
          },
          "dataWarehouseName": {
            "description": "DataWarehouse name of the source data set",
            "type": "string"
          },
          "schemaName": {
            "description": "Schema of the table. Default value is dbo.",
            "type": "string"
          },
          "sqlServerResourceId": {
            "description": "Resource id of SQL server",
            "type": "string"
          },
          "tableName": {
            "description": "SQL DW table name.",
            "type": "string"
          }
        },
        "required": [
          "dataWarehouseName",
          "tableName",
          "schemaName",
          "sqlServerResourceId"
        ],
        "type": "object"
      },
      "SynchronizationDetails": {
        "description": "Synchronization details at data set level",
        "properties": {
          "dataSetId": {
            "description": "Id of data set",
            "readOnly": true,
            "type": "string"
          },
          "dataSetType": {
            "description": "Type of the data set",
            "enum": [
              "Blob",
              "Container",
              "BlobFolder",
              "AdlsGen2FileSystem",
              "AdlsGen2Folder",
              "AdlsGen2File",
              "AdlsGen1Folder",
              "AdlsGen1File",
              "KustoCluster",
              "KustoDatabase",
              "SqlDBTable",
              "SqlDWTable"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataSetType"
            }
          },
          "durationMs": {
            "description": "Duration of data set level copy",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "endTime": {
            "description": "End time of data set level copy",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "filesRead": {
            "description": "The number of files read from the source data set",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "filesWritten": {
            "description": "The number of files written into the sink data set",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "message": {
            "description": "Error message if any",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Name of the data set",
            "readOnly": true,
            "type": "string"
          },
          "rowsCopied": {
            "description": "The number of files copied into the sink data set",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "rowsRead": {
            "description": "The number of rows read from the source data set.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "sizeRead": {
            "description": "The size of the data read from the source data set in bytes",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "sizeWritten": {
            "description": "The size of the data written into the sink data set in bytes",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "startTime": {
            "description": "Start time of data set level copy",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "Raw Status",
            "readOnly": true,
            "type": "string"
          },
          "vCore": {
            "description": "The vCore units consumed for the data set synchronization",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SynchronizationDetailsList": {
        "description": "details of synchronization",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/SynchronizationDetails"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SynchronizationSetting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A Synchronization Setting data transfer object.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of synchronization setting.",
            "enum": [
              "ScheduleBased"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "synchronizationSettingKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "SynchronizationSettingList": {
        "description": "List response for get Synchronization settings",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/SynchronizationSetting"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Synchronize": {
        "description": "Payload for the synchronizing the data.",
        "properties": {
          "synchronizationMode": {
            "description": "Mode of synchronization used in triggers and snapshot sync. Incremental by default",
            "enum": [
              "Incremental",
              "FullSync"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "synchronizationMode"
            }
          }
        },
        "type": "object"
      },
      "Trigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyDto"
          }
        ],
        "description": "A Trigger data transfer object.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of synchronization on trigger.",
            "enum": [
              "ScheduleBased"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "triggerKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "TriggerList": {
        "description": "List response for get triggers",
        "properties": {
          "nextLink": {
            "description": "The Url of next result page.",
            "type": "string"
          },
          "value": {
            "description": "Collection of items of type DataTransferObjects.",
            "items": {
              "$ref": "#/components/schemas/Trigger"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "tags": []
}