openapi: 3.0.0
info:
  contact:
    email: mlapi@microsoft.com
    name: Microsoft Cognitive Services
    url: >-
      https://azure.microsoft.com/en-us/services/cognitive-services/text-analytics/
  description: >-
    The Text Analytics API is a suite of text analytics web services built with
    best-in-class Microsoft machine learning algorithms. The API can be used to
    analyze unstructured text for tasks such as sentiment analysis, key phrase
    extraction and language detection. No training data is needed to use this
    API; just bring your text data. This API uses advanced natural language
    processing techniques to deliver best in class predictions. Further
    documentation can be found in
    https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview
  title: Text Analytics Client
  version: v3.0-preview.1
servers:
  - url: '{Endpoint}/text/analytics/v3.0-preview.1'
    variables:
      Endpoint:
        description: >-
          Supported Cognitive Services endpoints (protocol and hostname, for
          example: https://westus.api.cognitive.microsoft.com).
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /entities/linking:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityLinkingResult'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityLinkingResult'
          description: >-
            A successful call results in a list of recognized entities with
            links to a well-known knowledge base returned for each valid
            document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >-
        The API returns a list of recognized entities with links to a well-known
        knowledge base. See the <a href="https://aka.ms/talangs">Supported
        languages in Text Analytics API</a> for the list of enabled languages.
      operationId: EntitiesLinking
      requestBody:
        $ref: '#/components/requestBodies/MultiLanguageBatchInput'
      summary: Linked entities from a well-known knowledge base
      x-ms-examples:
        Successful Entity Linking request:
          $ref: .//examples//SuccessfulEntityLinkingRequest.json
  /entities/recognition/general:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          required: false
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesResult'
            text/json:
              schema:
                $ref: '#/components/schemas/EntitiesResult'
          description: >-
            A successful call results in a list of recognized entities returned
            for each valid document.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >-
        The API returns a list of general named entities in a given document.
        For the list of supported entity types, check <a
        href="https://aka.ms/taner">Supported Entity Types in Text Analytics
        API</a>. See the <a href="https://aka.ms/talangs">Supported languages in
        Text Analytics API</a> for the list of enabled languages.
      operationId: EntitiesRecognitionGeneral
      requestBody:
        $ref: '#/components/requestBodies/MultiLanguageBatchInput'
      summary: Named Entity Recognition
      x-ms-examples:
        Successful Entities request:
          $ref: .//examples//SuccessfulEntitiesRequest.json
  /entities/recognition/pii:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesResult'
            text/json:
              schema:
                $ref: '#/components/schemas/EntitiesResult'
          description: >-
            A successful call results in a list of entities containing personal
            information returned for each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >
        The API returns a list of entities with personal information (\"SSN\",
        \"Bank Account\" etc) in the document. For the list of supported entity
        types, check <a href="https://aka.ms/tanerpii">Supported Entity Types in
        Text Analytics API</a>. See the <a
        href="https://aka.ms/talangs">Supported languages in Text Analytics
        API</a> for the list of enabled languages.
      operationId: EntitiesRecognitionPii
      requestBody:
        $ref: '#/components/requestBodies/MultiLanguageBatchInput'
      summary: Entities containing personal information
      x-ms-examples:
        Successful Entity PII request:
          $ref: .//examples//SuccessfulEntityPIIRequest.json
  /keyPhrases:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPhraseResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyPhraseResult'
          description: >-
            A successful response results in 0 or more key phrases identified in
            each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >-
        The API returns a list of strings denoting the key phrases in the input
        text. See the <a href="https://aka.ms/talangs">Supported languages in
        Text Analytics API</a> for the list of enabled languages.
      operationId: KeyPhrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/MultiLanguageBatchInput'
        description: >-
          Collection of documents to analyze. Documents can now contain a
          language field to indicate the text language
        required: true
      summary: Key Phrases
      x-ms-examples:
        Successful Key Phrase request:
          $ref: .//examples//SuccessfulKeyPhrasesRequest.json
  /languages:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LanguageResult'
          description: >-
            A successful call results in the detected language with the highest
            probability for each valid document
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >-
        The API returns the detected language and a numeric score between 0 and
        1. Scores close to 1 indicate 100% certainty that the identified
        language is true. See the <a href="https://aka.ms/talangs">Supported
        languages in Text Analytics API</a> for the list of enabled languages.
      operationId: Languages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LanguageBatchInput'
          text/json:
            schema:
              $ref: '#/components/schemas/LanguageBatchInput'
        description: Collection of documents to analyze.
        required: true
      summary: Detect Language
      x-ms-examples:
        Successful Detect Language request:
          $ref: .//examples//SuccessfulLanguagesRequest.json
  /sentiment:
    post:
      parameters:
        - description: >-
            (Optional) This value indicates which model will be used for
            scoring. If a model-version is not specified, the API should default
            to the latest, non-preview version. 
          in: query
          name: model-version
          schema:
            type: string
        - description: >-
            (Optional) if set to true, response will contain input and document
            level statistics.
          in: query
          name: showStats
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
          description: >-
            A successful call results in a document sentiment prediction, as
            well as sentiment scores for each sentiment class (Positive,
            Negative, and Neutral)
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error Response
      deprecated: false
      description: >-
        The API returns a sentiment prediction, as well as sentiment scores for
        each sentiment class (Positive, Negative, and Neutral) for the document
        and each sentence within it. See the <a
        href="https://aka.ms/talangs">Supported languages in Text Analytics
        API</a> for the list of enabled languages.
      operationId: Sentiment
      requestBody:
        $ref: '#/components/requestBodies/MultiLanguageBatchInput'
      summary: Sentiment
      x-ms-examples:
        Successful Sentiment request:
          $ref: .//examples//SuccessfulSentimentRequest.json
components:
  parameters:
    Endpoint:
      description: >-
        Supported Cognitive Services endpoints (protocol and hostname, for
        example: https://westus.api.cognitive.microsoft.com).
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  requestBodies:
    MultiLanguageBatchInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MultiLanguageBatchInput'
        text/json:
          schema:
            $ref: '#/components/schemas/MultiLanguageBatchInput'
      description: Collection of documents to analyze.
      required: true
  schemas:
    DetectedLanguage:
      properties:
        iso6391Name:
          description: >-
            A two letter representation of the detected language according to
            the ISO 639-1 standard (e.g. en, fr).
          type: string
        name:
          description: 'Long name of a detected language (e.g. English, French).'
          type: string
        score:
          description: >-
            A confidence score between 0 and 1. Scores close to 1 indicate 100%
            certainty that the identified language is true.
          format: double
          type: number
      required:
        - name
        - iso6391Name
        - score
      type: object
    DocumentEntities:
      properties:
        entities:
          description: Recognized entities in the document.
          items:
            $ref: '#/components/schemas/Entity'
          type: array
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
          description: >-
            if showStats=true was specified in the request this field will
            contain information about the document payload.
      required:
        - id
        - entities
      type: object
    DocumentError:
      properties:
        error:
          $ref: '#/components/schemas/TextAnalyticsError'
          description: Document Error.
          type: object
        id:
          description: Document Id.
          type: string
      required:
        - id
        - error
      type: object
    DocumentKeyPhrases:
      properties:
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        keyPhrases:
          description: >-
            A list of representative words or phrases. The number of key phrases
            returned is proportional to the number of words in the input
            document.
          items:
            type: string
          type: array
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
          description: >-
            if showStats=true was specified in the request this field will
            contain information about the document payload.
      required:
        - id
        - keyPhrases
      type: object
    DocumentLanguage:
      properties:
        detectedLanguages:
          description: A list of extracted languages.
          items:
            $ref: '#/components/schemas/DetectedLanguage'
          type: array
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
          description: >-
            if showStats=true was specified in the request this field will
            contain information about the document payload.
      required:
        - id
        - detectedLanguages
      type: object
    DocumentLinkedEntities:
      properties:
        entities:
          description: Recognized well-known entities in the document.
          items:
            $ref: '#/components/schemas/LinkedEntity'
          type: array
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
          description: >-
            if showStats=true was specified in the request this field will
            contain information about the document payload.
      required:
        - id
        - entities
      type: object
    DocumentSentiment:
      properties:
        documentScores:
          $ref: '#/components/schemas/SentimentConfidenceScorePerLabel'
          description: >-
            Document level sentiment confidence scores between 0 and 1 for each
            sentiment class.
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        sentences:
          description: Sentence level sentiment analysis.
          items:
            $ref: '#/components/schemas/SentenceSentiment'
          type: array
        sentiment:
          description: >-
            Predicted sentiment for document (Negative, Neutral, Positive, or
            Mixed).
          enum:
            - positive
            - neutral
            - negative
            - mixed
          type: string
          x-ms-enum:
            modelAsString: false
            name: DocumentSentimentValue
        statistics:
          $ref: '#/components/schemas/DocumentStatistics'
      required:
        - id
        - sentiment
        - documentScores
        - sentences
      type: object
    DocumentStatistics:
      description: >-
        if showStats=true was specified in the request this field will contain
        information about the document payload.
      properties:
        charactersCount:
          description: Number of text elements recognized in the document.
          format: int32
          type: integer
        transactionsCount:
          description: Number of transactions for the document.
          format: int32
          type: integer
      required:
        - charactersCount
        - transactionsCount
      type: object
    EntitiesResult:
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/DocumentEntities'
          type: array
        errors:
          description: Errors by document id.
          items:
            $ref: '#/components/schemas/DocumentError'
          type: array
        modelVersion:
          description: This field indicates which model is used for scoring.
          type: string
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      required:
        - documents
        - errors
        - modelVersion
      type: object
    Entity:
      properties:
        length:
          description: Length (in Unicode characters) for the entity text.
          format: int32
          type: integer
        offset:
          description: Start position (in Unicode characters) for the entity text.
          format: int32
          type: integer
        score:
          description: Confidence score between 0 and 1 of the extracted entity.
          format: double
          type: number
        subtype:
          description: 'Entity sub type, such as Age/Year/TimeRange etc'
          type: string
        text:
          description: Entity text as appears in the request.
          type: string
        type:
          description: 'Entity type, such as Person/Location/Org/SSN etc'
          type: string
      required:
        - text
        - type
        - offset
        - length
        - score
      type: object
    EntityLinkingResult:
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/DocumentLinkedEntities'
          type: array
        errors:
          description: Errors by document id.
          items:
            $ref: '#/components/schemas/DocumentError'
          type: array
        modelVersion:
          description: This field indicates which model is used for scoring.
          type: string
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      required:
        - documents
        - errors
        - modelVersion
      type: object
    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/TextAnalyticsError'
          description: Document Error.
          type: object
      required:
        - error
      type: object
    InnerError:
      properties:
        code:
          description: Error code.
          enum:
            - InvalidParameterValue
            - InvalidRequestBodyFormat
            - EmptyRequest
            - MissingInputRecords
            - InvalidDocument
            - ModelVersionIncorrect
            - InvalidDocumentBatch
            - UnsupportedLanguageCode
            - InvalidCountryHint
          type: string
          x-ms-enum:
            modelAsString: false
            name: InnerErrorCodeValue
        details:
          additionalProperties:
            type: string
          description: Error details.
          type: object
        innerError:
          $ref: '#/components/schemas/InnerError'
          description: Inner error contains more specific information.
        message:
          description: Error message.
          type: string
        target:
          description: Error target.
          type: string
      required:
        - code
        - message
      type: object
    KeyPhraseResult:
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/DocumentKeyPhrases'
          type: array
        errors:
          description: Errors by document id.
          items:
            $ref: '#/components/schemas/DocumentError'
          type: array
        modelVersion:
          description: This field indicates which model is used for scoring.
          type: string
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      required:
        - documents
        - errors
        - modelVersion
      type: object
    LanguageBatchInput:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/LanguageInput'
          type: array
      required:
        - documents
      type: object
    LanguageInput:
      properties:
        countryHint:
          type: string
        id:
          description: 'Unique, non-empty document identifier.'
          type: string
        text:
          type: string
      required:
        - id
        - text
      type: object
    LanguageResult:
      properties:
        documents:
          description: Response by document
          items:
            $ref: '#/components/schemas/DocumentLanguage'
          type: array
        errors:
          description: Errors by document id.
          items:
            $ref: '#/components/schemas/DocumentError'
          type: array
        modelVersion:
          description: This field indicates which model is used for scoring.
          type: string
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      required:
        - documents
        - errors
        - modelVersion
      type: object
    LinkedEntity:
      properties:
        dataSource:
          description: 'Data source used to extract entity linking, such as Wiki/Bing etc.'
          type: string
        id:
          description: Unique identifier of the recognized entity from the data source.
          type: string
        language:
          description: Language used in the data source.
          type: string
        matches:
          description: List of instances this entity appears in the text.
          items:
            $ref: '#/components/schemas/Match'
          type: array
        name:
          description: Entity Linking formal name.
          type: string
        url:
          description: URL for the entity's page from the data source.
          type: string
      required:
        - name
        - matches
        - language
        - url
        - dataSource
      type: object
    Match:
      properties:
        length:
          description: Length (in Unicode characters) for the entity match text.
          format: int32
          type: integer
        offset:
          description: Start position (in Unicode characters) for the entity match text.
          format: int32
          type: integer
        score:
          description: >-
            If a well-known item is recognized, a decimal number denoting the
            confidence level between 0 and 1 will be returned.
          format: double
          type: number
        text:
          description: Entity text as appears in the request.
          type: string
      required:
        - score
        - text
        - offset
        - length
      type: object
    MultiLanguageBatchInput:
      description: Contains a set of input documents to be analyzed by the service.
      properties:
        documents:
          description: The set of documents to process as part of this batch.
          items:
            $ref: '#/components/schemas/MultiLanguageInput'
          type: array
      required:
        - documents
      type: object
    MultiLanguageInput:
      description: Contains an input document to be analyzed by the service.
      properties:
        id:
          description: 'A unique, non-empty document identifier.'
          type: string
        language:
          description: >-
            (Optional) This is the 2 letter ISO 639-1 representation of a
            language. For example, use "en" for English; "es" for Spanish etc.
            If not set, use "en" for English as default.
          type: string
        text:
          description: The input text to process.
          type: string
      required:
        - id
        - text
      type: object
    RequestStatistics:
      description: >-
        if showStats=true was specified in the request this field will contain
        information about the request payload.
      properties:
        documentsCount:
          description: Number of documents submitted in the request.
          format: int32
          type: integer
        erroneousDocumentsCount:
          description: >-
            Number of invalid documents. This includes empty, over-size limit or
            non-supported languages documents.
          format: int32
          type: integer
        transactionsCount:
          description: Number of transactions for the request.
          format: int64
          type: integer
        validDocumentsCount:
          description: >-
            Number of valid documents. This excludes empty, over-size limit or
            non-supported languages documents.
          format: int32
          type: integer
      required:
        - documentsCount
        - validDocumentsCount
        - erroneousDocumentsCount
        - transactionsCount
      type: object
    SentenceSentiment:
      properties:
        length:
          description: The length of the sentence by Unicode standard.
          format: int32
          type: integer
        offset:
          description: The sentence offset from the start of the document.
          format: int32
          type: integer
        sentenceScores:
          $ref: '#/components/schemas/SentimentConfidenceScorePerLabel'
          description: >-
            The sentiment confidence score between 0 and 1 for the sentence for
            all classes.
        sentiment:
          description: The predicted Sentiment for the sentence.
          enum:
            - positive
            - neutral
            - negative
          type: string
          x-ms-enum:
            modelAsString: false
            name: SentenceSentimentValue
        warnings:
          description: The warnings generated for the sentence.
          items:
            type: string
          type: array
      required:
        - sentiment
        - sentenceScores
        - offset
        - length
      type: object
    SentimentConfidenceScorePerLabel:
      description: >-
        Represents the confidence scores between 0 and 1 across all sentiment
        classes: positive, neutral, negative.
      properties:
        negative:
          format: double
          type: number
        neutral:
          format: double
          type: number
        positive:
          format: double
          type: number
      required:
        - positive
        - neutral
        - negative
      type: object
    SentimentResponse:
      properties:
        documents:
          description: Sentiment analysis per document.
          items:
            $ref: '#/components/schemas/DocumentSentiment'
          type: array
        errors:
          description: Errors by document id.
          items:
            $ref: '#/components/schemas/DocumentError'
          type: array
        modelVersion:
          description: This field indicates which model is used for scoring.
          type: string
        statistics:
          $ref: '#/components/schemas/RequestStatistics'
      required:
        - documents
        - errors
        - modelVersion
      type: object
    TextAnalyticsError:
      properties:
        code:
          description: Error code.
          enum:
            - invalidRequest
            - invalidArgument
            - internalServerError
            - serviceUnavailable
          type: string
          x-ms-enum:
            modelAsString: false
            name: ErrorCodeValue
        details:
          description: Details about specific errors that led to this reported error.
          items:
            $ref: '#/components/schemas/TextAnalyticsError'
          type: array
        innerError:
          $ref: '#/components/schemas/InnerError'
          description: Inner error contains more specific information.
        message:
          description: Error message.
          type: string
        target:
          description: Error target.
          type: string
      required:
        - code
        - message
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
security:
  - apim_key: []

