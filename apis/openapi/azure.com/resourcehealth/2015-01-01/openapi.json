{
  "openapi": "3.0.0",
  "info": {
    "description": "The Resource Health Client.",
    "title": "Microsoft.ResourceHealth",
    "version": "2015-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resourcehealth/resource-manager/Microsoft.ResourceHealth/stable/2015-01-01/resourcehealth.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.ResourceHealth/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationListResult"
                }
              }
            },
            "description": "The body contains the list of available operations for the resourcehealth resource provider"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists available operations for the resourcehealth resource provider",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "GetOperationsList": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The body contains the list of the current availability status for all the resources in the subscription"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists the current availability status for all the resources in the subscription. Use the nextLink property in the response to get the next page of availability statuses.",
        "operationId": "AvailabilityStatuses_ListBySubscriptionId",
        "x-ms-examples": {
          "ListHealthBySubscriptionId": {
            "$ref": "./examples/AvailabilityStatuses_ListBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The body contains the list of the current availability status for all the resources in the resource group"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists the current availability status for all the resources in the resource group. Use the nextLink property in the response to get the next page of availability statuses.",
        "operationId": "AvailabilityStatuses_ListByResourceGroup",
        "x-ms-examples": {
          "ListByResourceGroup": {
            "$ref": "./examples/AvailabilityStatuses_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The body contains the list of the historical availability statuses for a single resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists the historical availability statuses for a single resource. Use the nextLink property in the response to get the next page of availability status",
        "operationId": "AvailabilityStatuses_List",
        "x-ms-examples": {
          "GetHealthHistoryByResource": {
            "$ref": "./examples/AvailabilityStatuses_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatus"
                }
              }
            },
            "description": "The body contains the current availability status for a single resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Gets current availability status for a single resource",
        "operationId": "AvailabilityStatuses_GetByResource",
        "x-ms-examples": {
          "GetCurrentHealthByResource": {
            "$ref": "./examples/AvailabilityStatus_GetByResource.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API only support one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The body contains the list of the historical availability statuses for a single child resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "ChildAvailabilityStatuses"
        ],
        "description": "Lists the historical availability statuses for a single child resource. Use the nextLink property in the response to get the next page of availability status",
        "operationId": "ChildAvailabilityStatuses_List",
        "x-ms-examples": {
          "GetHealthHistoryByResource": {
            "$ref": "./examples/ChildAvailabilityStatuses_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/childAvailabilityStatuses/current": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API only support one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatus"
                }
              }
            },
            "description": "The body contains the current availability status for a single resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "ChildAvailabilityStatuses"
        ],
        "description": "Gets current availability status for a single resource",
        "operationId": "ChildAvailabilityStatuses_GetByResource",
        "x-ms-examples": {
          "GetCurrentHealthByResource": {
            "$ref": "./examples/ChildAvailabilityStatus_GetByResource.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/childResources": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API only support not nested parent resource type: /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The body contains the list of the children's current availability statuses for a single resource which contains children"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "ChildResources"
        ],
        "description": "Lists the all the children and its current health status for a parent resource. Use the nextLink property in the response to get the next page of children current health",
        "operationId": "ChildResources_List",
        "x-ms-examples": {
          "GetHealthHistoryByResource": {
            "$ref": "./examples/ChildResources_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ExpandParameter": {
        "description": "Setting $expand=recommendedactions in url query expands the recommendedactions in the response.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "FilterParameter": {
        "description": "The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "description": "Error details.",
        "properties": {
          "code": {
            "description": "The error code.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "The error details.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "availabilityStatus": {
        "description": "availabilityStatus of a resource.",
        "properties": {
          "id": {
            "description": "Azure Resource Manager Identity for the availabilityStatuses resource.",
            "type": "string"
          },
          "location": {
            "description": "Azure Resource Manager geo location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "current.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of availability state.",
            "properties": {
              "articleId": {
                "description": "The Article Id",
                "type": "string"
              },
              "availabilityState": {
                "description": "Availability status of the resource.",
                "enum": [
                  "Available",
                  "Unavailable",
                  "Unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "AvailabilityStateValues"
                }
              },
              "category": {
                "description": "When a context field is set to Platform, this field will reflect if the event was planned or unplanned. If the context field does not have a value of Platform, then this field will be ignored.",
                "type": "string"
              },
              "context": {
                "description": "When an event is created, it can either be triggered by a customer or the platform of the resource and this field will illustrate that. This field is connected to the category field in this object.",
                "type": "string"
              },
              "detailedStatus": {
                "description": "Details of the availability status.",
                "type": "string"
              },
              "isArmResource": {
                "description": "flag to show if child resource need detail health. ",
                "type": "boolean"
              },
              "occuredTime": {
                "description": "Timestamp for when last change in health status occurred.",
                "format": "date-time",
                "type": "string"
              },
              "reasonChronicity": {
                "description": "Chronicity of the availability transition.",
                "enum": [
                  "Transient",
                  "Persistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "reasonChronicityTypes"
                }
              },
              "reasonType": {
                "description": "When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc.",
                "type": "string"
              },
              "recentlyResolvedState": {
                "description": "An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned",
                "properties": {
                  "resolvedTime": {
                    "description": "Timestamp when the availabilityState changes to Available.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "unavailabilitySummary": {
                    "description": "Brief description of cause of the resource becoming unavailable.",
                    "type": "string"
                  },
                  "unavailableOccurredTime": {
                    "description": "Timestamp for when the availabilityState changed to Unavailable",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "recommendedActions": {
                "description": "Lists actions the user can take based on the current availabilityState of the resource.",
                "items": {
                  "$ref": "#/components/schemas/recommendedAction"
                },
                "type": "array"
              },
              "reportedTime": {
                "description": "Timestamp for when the health was last checked. ",
                "format": "date-time",
                "type": "string"
              },
              "resolutionETA": {
                "description": "When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved.",
                "format": "date-time",
                "type": "string"
              },
              "rootCauseAttributionTime": {
                "description": "When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received.",
                "format": "date-time",
                "type": "string"
              },
              "serviceImpactingEvents": {
                "description": "Lists the service impacting events that may be affecting the health of the resource.",
                "items": {
                  "$ref": "#/components/schemas/serviceImpactingEvent"
                },
                "type": "array"
              },
              "summary": {
                "description": "Summary description of the availability state.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Microsoft.ResourceHealth/AvailabilityStatuses.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "availabilityStatusListResult": {
        "description": "The List availabilityStatus operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch the next page of availabilityStatuses.",
            "type": "string"
          },
          "value": {
            "description": "The list of availabilityStatuses.",
            "items": {
              "$ref": "#/components/schemas/availabilityStatus"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "operation": {
        "description": "Operation available in the resourcehealth resource provider.",
        "properties": {
          "display": {
            "description": "Properties of the operation.",
            "properties": {
              "description": {
                "description": "Description of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "Operation name.",
                "type": "string"
              },
              "provider": {
                "description": "Provider name.",
                "type": "string"
              },
              "resource": {
                "description": "Resource name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Name of the operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "operationListResult": {
        "description": "Lists the operations response.",
        "properties": {
          "value": {
            "description": "List of operations available in the resourcehealth resource provider.",
            "items": {
              "$ref": "#/components/schemas/operation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "recommendedAction": {
        "description": "Lists actions the user can take based on the current availabilityState of the resource.",
        "properties": {
          "_ActionUrl.Comment": {
            "description": "the comment for the Action",
            "type": "string"
          },
          "action": {
            "description": "Recommended action.",
            "type": "string"
          },
          "actionUrl": {
            "description": "Link to the action",
            "type": "string"
          },
          "actionUrlText": {
            "description": "Substring of action, it describes which text should host the action url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serviceImpactingEvent": {
        "description": "Lists the service impacting events that may be affecting the health of the resource.",
        "properties": {
          "correlationId": {
            "description": "Correlation id for the event",
            "type": "string"
          },
          "eventStartTime": {
            "description": "Timestamp for when the event started.",
            "format": "date-time",
            "type": "string"
          },
          "eventStatusLastModifiedTime": {
            "description": "Timestamp for when event was submitted/detected.",
            "format": "date-time",
            "type": "string"
          },
          "incidentProperties": {
            "description": "Properties of the service impacting event.",
            "properties": {
              "incidentType": {
                "description": "Type of Event.",
                "type": "string"
              },
              "region": {
                "description": "Region impacted by the event.",
                "type": "string"
              },
              "service": {
                "description": "Service impacted by the event.",
                "type": "string"
              },
              "title": {
                "description": "Title of the incident.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "Status of the service impacting event.",
            "properties": {
              "value": {
                "description": "Current status of the event",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}