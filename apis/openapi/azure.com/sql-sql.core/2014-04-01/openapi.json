{
  "openapi": "3.0.0",
  "info": {
    "description": "Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.",
    "title": "Azure SQL Database",
    "version": "2014-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/sql.core.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTierAdvisorListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ServiceTierAdvisors"
        ],
        "description": "Returns service tier advisors for specified database.",
        "operationId": "ServiceTierAdvisors_ListByDatabase",
        "x-ms-examples": {
          "Get a list of a service tier advisors": {
            "$ref": "./examples/ServiceTierAdvisorList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors/{serviceTierAdvisorName}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of service tier advisor.",
            "in": "path",
            "name": "serviceTierAdvisorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTierAdvisor"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ServiceTierAdvisors"
        ],
        "description": "Gets a service tier advisor.",
        "operationId": "ServiceTierAdvisors_Get",
        "x-ms-examples": {
          "Get a service tier advisor": {
            "$ref": "./examples/ServiceTierAdvisorGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/TransparentDataEncryptionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparentDataEncryption"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ],
        "description": "Gets a database's transparent data encryption configuration.",
        "operationId": "TransparentDataEncryptions_Get",
        "x-ms-examples": {
          "Get a database's transparent data encryption configuration": {
            "$ref": "./examples/DatabaseTransparentDataEncryptionGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which setting the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/TransparentDataEncryptionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparentDataEncryption"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparentDataEncryption"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ],
        "description": "Creates or updates a database's transparent data encryption configuration.",
        "operationId": "TransparentDataEncryptions_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransparentDataEncryption"
              }
            }
          },
          "description": "The required parameters for creating or updating transparent data encryption.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a database's transparent data encryption configuration": {
            "$ref": "./examples/DatabaseTransparentDataEncryptionCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{transparentDataEncryptionName}/operationResults": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/TransparentDataEncryptionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransparentDataEncryptionActivityListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ],
        "description": "Returns a database's transparent data encryption operation result.",
        "operationId": "TransparentDataEncryptionActivities_ListByConfiguration",
        "x-ms-examples": {
          "List a database's transparent data encryption activities": {
            "$ref": "./examples/DatabaseTransparentDataEncryptionActivityList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool for which to get the current activity.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElasticPoolActivityListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Returns elastic pool activities.",
        "operationId": "ElasticPoolActivities_ListByElasticPool",
        "x-ms-examples": {
          "List Elastic pool activity": {
            "$ref": "./examples/ElasticPoolActivityList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElasticPoolDatabaseActivityListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Returns activity on databases inside of an elastic pool.",
        "operationId": "ElasticPoolDatabaseActivities_ListByElasticPool",
        "x-ms-examples": {
          "List elastic pool database activity": {
            "$ref": "./examples/ElasticPoolDatabaseActivityList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "components": {
    "parameters": {
      "DatabaseExpandParameter": {
        "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "TransparentDataEncryptionNameParameter": {
        "description": "The name of the transparent data encryption configuration.",
        "in": "path",
        "name": "transparentDataEncryptionName",
        "required": true,
        "schema": {
          "enum": [
            "current"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TransparentDataEncryptionName"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ElasticPoolActivity": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents the activity on an elastic pool.",
        "properties": {
          "location": {
            "description": "The geo-location where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/ElasticPoolActivityProperties",
            "description": "The properties representing the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ElasticPoolActivityListResult": {
        "description": "Represents the response to a list elastic pool activity request.",
        "properties": {
          "value": {
            "description": "The list of elastic pool activities.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolActivity"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ElasticPoolActivityProperties": {
        "description": "Represents the properties of an elastic pool.",
        "properties": {
          "elasticPoolName": {
            "description": "The name of the elastic pool.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "The time the operation finished (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "errorCode": {
            "description": "The error code if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "errorMessage": {
            "description": "The error message if available.",
            "readOnly": true,
            "type": "string"
          },
          "errorSeverity": {
            "description": "The error severity if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "operation": {
            "description": "The operation name.",
            "readOnly": true,
            "type": "string"
          },
          "operationId": {
            "description": "The unique operation ID.",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          },
          "percentComplete": {
            "description": "The percentage complete if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDatabaseDtuCap": {
            "description": "The requested per database DTU cap.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDatabaseDtuGuarantee": {
            "description": "The requested per database DTU guarantee.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDatabaseDtuMax": {
            "description": "The requested max DTU per database if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDatabaseDtuMin": {
            "description": "The requested min DTU per database if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDtu": {
            "description": "The requested DTU for the pool if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedDtuGuarantee": {
            "description": "The requested DTU guarantee.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedElasticPoolName": {
            "description": "The requested name for the elastic pool if available.",
            "readOnly": true,
            "type": "string"
          },
          "requestedStorageLimitInGB": {
            "description": "The requested storage limit for the pool in GB if available.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "requestedStorageLimitInMB": {
            "description": "The requested storage limit in MB.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "serverName": {
            "description": "The name of the server the elastic pool is in.",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "The time the operation started (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The current state of the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ElasticPoolDatabaseActivity": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents the activity on an elastic pool.",
        "properties": {
          "location": {
            "description": "The geo-location where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/ElasticPoolDatabaseActivityProperties",
            "description": "The properties representing the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ElasticPoolDatabaseActivityListResult": {
        "description": "Represents the response to a list elastic pool database activity request.",
        "properties": {
          "value": {
            "description": "The list of elastic pool database activities.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolDatabaseActivity"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ElasticPoolDatabaseActivityProperties": {
        "description": "Represents the properties of an elastic pool database activity.",
        "properties": {
          "currentElasticPoolName": {
            "description": "The name of the current elastic pool the database is in if available.",
            "readOnly": true,
            "type": "string"
          },
          "currentServiceObjective": {
            "description": "The name of the current service objective if available.",
            "readOnly": true,
            "type": "string"
          },
          "databaseName": {
            "description": "The database name.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "The time the operation finished (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "errorCode": {
            "description": "The error code if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "errorMessage": {
            "description": "The error message if available.",
            "readOnly": true,
            "type": "string"
          },
          "errorSeverity": {
            "description": "The error severity if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "operation": {
            "description": "The operation name.",
            "readOnly": true,
            "type": "string"
          },
          "operationId": {
            "description": "The unique operation ID.",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          },
          "percentComplete": {
            "description": "The percentage complete if available.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "requestedElasticPoolName": {
            "description": "The name for the elastic pool the database is moving into if available.",
            "readOnly": true,
            "type": "string"
          },
          "requestedServiceObjective": {
            "description": "The name of the requested service objective if available.",
            "readOnly": true,
            "type": "string"
          },
          "serverName": {
            "description": "The name of the server the elastic pool is in.",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "The time the operation started (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The current state of the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationImpact": {
        "description": "The impact of an operation, both in absolute and relative terms.",
        "properties": {
          "changeValueAbsolute": {
            "description": "The absolute impact to dimension.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "changeValueRelative": {
            "description": "The relative impact to dimension (null if not applicable)",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "name": {
            "description": "The name of the impact dimension.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "The unit in which estimated impact to dimension is measured.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecommendedIndex": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a database recommended index.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecommendedIndexProperties",
            "description": "The properties representing the resource.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RecommendedIndexProperties": {
        "description": "Represents the properties of a database recommended index.",
        "properties": {
          "action": {
            "description": "The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.",
            "enum": [
              "Create",
              "Drop",
              "Rebuild"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "RecommendedIndexAction"
            }
          },
          "columns": {
            "description": "Columns over which to build index",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "created": {
            "description": "The UTC datetime showing when this resource was created (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "estimatedImpact": {
            "description": "The estimated impact of doing recommended index action.",
            "items": {
              "$ref": "#/components/schemas/OperationImpact"
            },
            "readOnly": true,
            "type": "array"
          },
          "includedColumns": {
            "description": "The list of column names to be included in the index",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "indexScript": {
            "description": "The full build index script",
            "readOnly": true,
            "type": "string"
          },
          "indexType": {
            "description": "The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)",
            "enum": [
              "CLUSTERED",
              "NONCLUSTERED",
              "COLUMNSTORE",
              "CLUSTERED COLUMNSTORE"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "RecommendedIndexType"
            }
          },
          "lastModified": {
            "description": "The UTC datetime of when was this resource last changed (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "reportedImpact": {
            "description": "The values reported after index action is complete.",
            "items": {
              "$ref": "#/components/schemas/OperationImpact"
            },
            "readOnly": true,
            "type": "array"
          },
          "schema": {
            "description": "The schema where table to build index over resides",
            "readOnly": true,
            "type": "string"
          },
          "state": {
            "description": "The current recommendation state.",
            "enum": [
              "Active",
              "Pending",
              "Executing",
              "Verifying",
              "Pending Revert",
              "Reverting",
              "Reverted",
              "Ignored",
              "Expired",
              "Blocked",
              "Success"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "RecommendedIndexState"
            }
          },
          "table": {
            "description": "The table on which to build index.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ServiceTierAdvisor": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a Service Tier Advisor.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ServiceTierAdvisorProperties",
            "description": "The properties representing the resource.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ServiceTierAdvisorListResult": {
        "description": "Represents the response to a list service tier advisor request.",
        "properties": {
          "value": {
            "description": "The list of service tier advisors for specified database.",
            "items": {
              "$ref": "#/components/schemas/ServiceTierAdvisor"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ServiceTierAdvisorProperties": {
        "description": "Represents the properties of a Service Tier Advisor.",
        "properties": {
          "activeTimeRatio": {
            "description": "The activeTimeRatio for service tier advisor.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "avgDtu": {
            "description": "Gets or sets avgDtu for service tier advisor.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "confidence": {
            "description": "Gets or sets confidence for service tier advisor.",
            "format": "double",
            "nullable": false,
            "readOnly": true,
            "type": "number"
          },
          "currentServiceLevelObjective": {
            "description": "Gets or sets currentServiceLevelObjective for service tier advisor.",
            "readOnly": true,
            "type": "string"
          },
          "currentServiceLevelObjectiveId": {
            "description": "Gets or sets currentServiceLevelObjectiveId for service tier advisor.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "databaseSizeBasedRecommendationServiceLevelObjective": {
            "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly": true,
            "type": "string"
          },
          "databaseSizeBasedRecommendationServiceLevelObjectiveId": {
            "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "disasterPlanBasedRecommendationServiceLevelObjective": {
            "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly": true,
            "type": "string"
          },
          "disasterPlanBasedRecommendationServiceLevelObjectiveId": {
            "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "maxDtu": {
            "description": "Gets or sets maxDtu for service tier advisor.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "maxSizeInGB": {
            "description": "Gets or sets maxSizeInGB for service tier advisor.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "minDtu": {
            "description": "Gets or sets minDtu for service tier advisor.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "observationPeriodEnd": {
            "description": "The observation period start (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "observationPeriodStart": {
            "description": "The observation period start (ISO8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "overallRecommendationServiceLevelObjective": {
            "description": "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly": true,
            "type": "string"
          },
          "overallRecommendationServiceLevelObjectiveId": {
            "description": "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "serviceLevelObjectiveUsageMetrics": {
            "description": "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.",
            "items": {
              "$ref": "#/components/schemas/SloUsageMetric"
            },
            "readOnly": true,
            "type": "array"
          },
          "usageBasedRecommendationServiceLevelObjective": {
            "description": "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.",
            "readOnly": true,
            "type": "string"
          },
          "usageBasedRecommendationServiceLevelObjectiveId": {
            "description": "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SloUsageMetric": {
        "description": "A Slo Usage Metric.",
        "properties": {
          "inRangeTimeRatio": {
            "description": "Gets or sets inRangeTimeRatio for SLO usage metric.",
            "format": "double",
            "nullable": false,
            "readOnly": true,
            "type": "number"
          },
          "serviceLevelObjective": {
            "description": "The serviceLevelObjective for SLO usage metric.",
            "enum": [
              "System",
              "System0",
              "System1",
              "System2",
              "System3",
              "System4",
              "System2L",
              "System3L",
              "System4L",
              "Free",
              "Basic",
              "S0",
              "S1",
              "S2",
              "S3",
              "S4",
              "S6",
              "S7",
              "S9",
              "S12",
              "P1",
              "P2",
              "P3",
              "P4",
              "P6",
              "P11",
              "P15",
              "PRS1",
              "PRS2",
              "PRS4",
              "PRS6",
              "DW100",
              "DW200",
              "DW300",
              "DW400",
              "DW500",
              "DW600",
              "DW1000",
              "DW1200",
              "DW1000c",
              "DW1500",
              "DW1500c",
              "DW2000",
              "DW2000c",
              "DW3000",
              "DW2500c",
              "DW3000c",
              "DW6000",
              "DW5000c",
              "DW6000c",
              "DW7500c",
              "DW10000c",
              "DW15000c",
              "DW30000c",
              "DS100",
              "DS200",
              "DS300",
              "DS400",
              "DS500",
              "DS600",
              "DS1000",
              "DS1200",
              "DS1500",
              "DS2000",
              "ElasticPool"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ServiceObjectiveName"
            }
          },
          "serviceLevelObjectiveId": {
            "description": "The serviceLevelObjectiveId for SLO usage metric.",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "TransparentDataEncryption": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a database transparent data encryption configuration.",
        "properties": {
          "location": {
            "description": "Resource location.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/TransparentDataEncryptionProperties",
            "description": "Represents the properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TransparentDataEncryptionActivity": {
        "allOf": [
          {
            "$ref": "../../../common/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Represents a database transparent data encryption Scan.",
        "properties": {
          "location": {
            "description": "Resource location.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/TransparentDataEncryptionActivityProperties",
            "description": "Represents the properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TransparentDataEncryptionActivityListResult": {
        "description": "Represents the response to a list database transparent data encryption activity request.",
        "properties": {
          "value": {
            "description": "The list of database transparent data encryption activities.",
            "items": {
              "$ref": "#/components/schemas/TransparentDataEncryptionActivity"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TransparentDataEncryptionActivityProperties": {
        "description": "Represents the properties of a database transparent data encryption Scan.",
        "properties": {
          "percentComplete": {
            "description": "The percent complete of the transparent data encryption scan for a database.",
            "format": "float",
            "readOnly": true,
            "type": "number"
          },
          "status": {
            "description": "The status of the database.",
            "enum": [
              "Encrypting",
              "Decrypting"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TransparentDataEncryptionActivityStatus"
            }
          }
        },
        "type": "object"
      },
      "TransparentDataEncryptionProperties": {
        "description": "Represents the properties of a database transparent data encryption.",
        "properties": {
          "status": {
            "description": "The status of the database transparent data encryption.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "TransparentDataEncryptionStatus"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}