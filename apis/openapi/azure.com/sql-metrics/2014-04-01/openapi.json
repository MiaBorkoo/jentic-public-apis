{
  "openapi": "3.0.0",
  "info": {
    "description": "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.",
    "title": "Azure SQL Database",
    "version": "2014-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/metrics.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metricDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns database metric definitions.",
        "operationId": "Databases_ListMetricDefinitions",
        "x-ms-examples": {
          "List database usage metrics": {
            "$ref": "./examples/DatabaseMetricsDefinitionsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metrics": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An OData filter expression that describes a subset of metrics to return.",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns database metrics.",
        "operationId": "Databases_ListMetrics",
        "x-ms-examples": {
          "List database usage metrics": {
            "$ref": "./examples/DatabaseMetricsListWithFilter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metricDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Returns elastic pool metric definitions.",
        "operationId": "ElasticPools_ListMetricDefinitions",
        "x-ms-examples": {
          "List database usage metrics": {
            "$ref": "./examples/ElasticPoolMetricsDefinitionsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metrics": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "An OData filter expression that describes a subset of metrics to return.",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "description": "Returns elastic pool  metrics.",
        "operationId": "ElasticPools_ListMetrics",
        "x-ms-examples": {
          "List database usage metrics": {
            "$ref": "./examples/ElasticPoolMetricsListWithFilter.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Metric": {
        "description": "Database metrics.",
        "properties": {
          "endTime": {
            "description": "The end time for the metric (ISO-8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metricValues": {
            "description": "The metric values for the specified time window and timestep.",
            "items": {
              "$ref": "#/components/schemas/MetricValue"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/MetricName",
            "description": "The name information for the metric.",
            "readOnly": true
          },
          "startTime": {
            "description": "The start time for the metric (ISO-8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "timeGrain": {
            "description": "The time step to be used to summarize the metric values.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "The unit of the metric.",
            "enum": [
              "count",
              "bytes",
              "seconds",
              "percent",
              "countPerSecond",
              "bytesPerSecond"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "UnitType"
            }
          }
        },
        "type": "object"
      },
      "MetricAvailability": {
        "description": "A metric availability value.",
        "properties": {
          "retention": {
            "description": "The length of retention for the database metric.",
            "readOnly": true,
            "type": "string"
          },
          "timeGrain": {
            "description": "The granularity of the database metric.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricDefinition": {
        "description": "A database metric definition.",
        "properties": {
          "metricAvailabilities": {
            "description": "The list of database metric availabilities for the metric.",
            "items": {
              "$ref": "#/components/schemas/MetricAvailability"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/MetricName",
            "description": "The name information for the metric.",
            "readOnly": true
          },
          "primaryAggregationType": {
            "description": "The primary aggregation type defining how metric values are displayed.",
            "enum": [
              "None",
              "Average",
              "Count",
              "Minimum",
              "Maximum",
              "Total"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrimaryAggregationType"
            }
          },
          "resourceUri": {
            "description": "The resource uri of the database.",
            "readOnly": true,
            "type": "string"
          },
          "unit": {
            "description": "The unit of the metric.",
            "enum": [
              "Count",
              "Bytes",
              "Seconds",
              "Percent",
              "CountPerSecond",
              "BytesPerSecond"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "UnitDefinitionType"
            }
          }
        },
        "type": "object"
      },
      "MetricDefinitionListResult": {
        "description": "The response to a list database metric definitions request.",
        "properties": {
          "value": {
            "description": "The list of metric definitions for the database.",
            "items": {
              "$ref": "#/components/schemas/MetricDefinition"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "MetricListResult": {
        "description": "The response to a list database metrics request.",
        "properties": {
          "value": {
            "description": "The list of metrics for the database.",
            "items": {
              "$ref": "#/components/schemas/Metric"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "MetricName": {
        "description": "A database metric name.",
        "properties": {
          "localizedValue": {
            "description": "The friendly name of the database metric.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The name of the database metric.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricValue": {
        "description": "Represents database metrics.",
        "properties": {
          "average": {
            "description": "The average value of the metric.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "count": {
            "description": "The number of values for the metric.",
            "format": "int32",
            "readOnly": true,
            "type": "number"
          },
          "maximum": {
            "description": "The max value of the metric.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "minimum": {
            "description": "The min value of the metric.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "timestamp": {
            "description": "The metric timestamp (ISO-8601 format).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "description": "The total value of the metric.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": []
    }
  ]
}