{
  "openapi": "3.0.0",
  "info": {
    "description": "APIs to manage web application firewall rules for Azure CDN",
    "title": "Azure CDN WebApplicationFirewallManagement",
    "version": "2019-06-15-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cdn/resource-manager/Microsoft.Cdn/preview/2019-06-15-preview/cdnwebapplicationfirewall.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Cdn/CdnWebApplicationFirewallManagedRuleSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedRuleSetDefinitionList"
                }
              }
            },
            "description": "Success. The operation returns a list of all available web application firewall managed rule sets."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./cdn.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WebApplicationFirewallManagedRuleSets"
        ],
        "description": "Lists all available managed rule sets.",
        "operationId": "ManagedRuleSets_List",
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/WafListManagedRuleSets.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/CdnWebApplicationFirewallPolicies": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicyList"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./cdn.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Lists all of the protection policies within a resource group.",
        "operationId": "Policies_List",
        "x-ms-examples": {
          "List Policies in a Resource Group": {
            "$ref": "./examples/WafListPolicies.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/CdnWebApplicationFirewallPolicies/{policyName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "204": {
            "description": "No Content. The request has been accepted but the policy was not found."
          }
        },
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Deletes Policy",
        "operationId": "Policies_Delete",
        "x-ms-examples": {
          "Delete protection policy": {
            "$ref": "./examples/WafPolicyDelete.json"
          }
        },
        "x-ms-long-running-operation": false
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./cdn.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Retrieve protection policy with specified name within a resource group.",
        "operationId": "Policies_Get",
        "x-ms-examples": {
          "Get Policy": {
            "$ref": "./examples/WafPolicyGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./cdn.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Update an existing CdnWebApplicationFirewallPolicy with the specified policy name under the specified subscription and resource group",
        "operationId": "Policies_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicyPatchParameters"
              }
            }
          },
          "description": "CdnWebApplicationFirewallPolicy parameters to be patched.",
          "required": true
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/WafPatchPolicy.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/PolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "Created. The request has been fulfilled and a new protection policy has been created."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./cdn.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WebApplicationFirewallPolicies"
        ],
        "description": "Create or update policy with specified rule set name within a resource group.",
        "operationId": "Policies_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
              }
            }
          },
          "description": "Policy to be created.",
          "required": true
        },
        "x-ms-examples": {
          "Creates specific policy": {
            "$ref": "./examples/WafPolicyCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Version of the API to be used with the client request. Current version is 2017-04-02.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "PolicyNameParameter": {
        "description": "The name of the CdnWebApplicationFirewallPolicy.",
        "in": "path",
        "name": "policyName",
        "required": true,
        "schema": {
          "maxLength": 128,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "Name of the Resource group within the Azure subscription.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 80,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ActionType": {
        "description": "Defines the action to take on rule match.",
        "enum": [
          "Allow",
          "Block",
          "Log",
          "Redirect"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ActionType"
        }
      },
      "CdnEndpoint": {
        "description": "Defines the ARM Resource ID for the linked endpoints",
        "properties": {
          "id": {
            "description": "ARM Resource ID string.",
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "CdnWebApplicationFirewallPolicy": {
        "allOf": [
          {
            "$ref": "./cdn.json#/definitions/TrackedResource"
          }
        ],
        "description": "Defines web application firewall policy for Azure CDN.",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicyProperties",
            "description": "Properties of the web application firewall policy.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "./cdn.json#/definitions/Sku",
            "description": "The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy."
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "CdnWebApplicationFirewallPolicyList": {
        "description": "Defines a list of WebApplicationFirewallPolicies for Azure CDN. It contains a list of WebApplicationFirewallPolicy objects and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of WebApplicationFirewallPolicy objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Azure CDN WebApplicationFirewallPolicies within a resource group.",
            "items": {
              "$ref": "#/components/schemas/CdnWebApplicationFirewallPolicy"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CdnWebApplicationFirewallPolicyPatchParameters": {
        "description": "Properties required to update a CdnWebApplicationFirewallPolicy.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "CdnWebApplicationFirewallPolicy tags",
            "type": "object"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "CdnWebApplicationFirewallPolicyProperties": {
        "description": "Defines CDN web application firewall policy properties.",
        "properties": {
          "customRules": {
            "$ref": "#/components/schemas/CustomRuleList",
            "description": "Describes custom rules inside the policy."
          },
          "endpointLinks": {
            "description": "Describes Azure CDN endpoints associated with this Web Application Firewall policy.",
            "items": {
              "$ref": "#/components/schemas/CdnEndpoint"
            },
            "readOnly": true,
            "type": "array"
          },
          "managedRules": {
            "$ref": "#/components/schemas/ManagedRuleSetList",
            "description": "Describes managed rules inside the policy."
          },
          "policySettings": {
            "$ref": "#/components/schemas/policySettings",
            "description": "Describes  policySettings for policy"
          },
          "provisioningState": {
            "description": "Provisioning state of the WebApplicationFirewallPolicy.",
            "enum": [
              "Creating",
              "Succeeded",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "rateLimitRules": {
            "$ref": "#/components/schemas/RateLimitRuleList",
            "description": "Describes rate limit rules inside the policy."
          },
          "resourceState": {
            "enum": [
              "Creating",
              "Enabling",
              "Enabled",
              "Disabling",
              "Disabled",
              "Deleting"
            ],
            "readOnly": true,
            "title": "Resource status of the policy.",
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PolicyResourceState"
            }
          }
        },
        "type": "object"
      },
      "CustomRule": {
        "description": "Defines the common attributes for a custom rule that can be included in a waf policy",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionType",
            "description": "Describes what action to be applied when rule matches"
          },
          "enabledState": {
            "description": "Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CustomRuleEnabledState"
            }
          },
          "matchConditions": {
            "description": "List of match conditions.",
            "items": {
              "$ref": "#/components/schemas/MatchCondition"
            },
            "type": "array"
          },
          "name": {
            "description": "Defines the name of the custom rule",
            "type": "string"
          },
          "priority": {
            "description": "Defines in what order this rule be evaluated in the overall list of custom rules",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 1000,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "priority",
          "matchConditions",
          "action"
        ],
        "type": "object"
      },
      "CustomRuleList": {
        "description": "Defines contents of custom rules",
        "properties": {
          "rules": {
            "description": "List of rules",
            "items": {
              "$ref": "#/components/schemas/CustomRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedRuleDefinition": {
        "description": "Describes a managed rule definition.",
        "properties": {
          "description": {
            "description": "Describes the functionality of the managed rule.",
            "readOnly": true,
            "type": "string"
          },
          "ruleId": {
            "description": "Identifier for the managed rule.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedRuleGroupDefinition": {
        "description": "Describes a managed rule group.",
        "properties": {
          "description": {
            "description": "Description of the managed rule group.",
            "readOnly": true,
            "type": "string"
          },
          "ruleGroupName": {
            "description": "Name of the managed rule group.",
            "readOnly": true,
            "type": "string"
          },
          "rules": {
            "description": "List of rules within the managed rule group.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleDefinition"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedRuleGroupOverride": {
        "description": "Defines a managed rule group override setting.",
        "properties": {
          "ruleGroupName": {
            "description": "Describes the managed rule group within the rule set to override",
            "type": "string"
          },
          "rules": {
            "description": "List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleOverride"
            },
            "type": "array"
          }
        },
        "required": [
          "ruleGroupName"
        ],
        "type": "object"
      },
      "ManagedRuleOverride": {
        "description": "Defines a managed rule group override setting.",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionType",
            "description": "Describes the override action to be applied when rule matches."
          },
          "enabledState": {
            "description": "Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ManagedRuleEnabledState"
            }
          },
          "ruleId": {
            "description": "Identifier for the managed rule.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "ManagedRuleSet": {
        "description": "Defines a managed rule set.",
        "properties": {
          "anomalyScore": {
            "description": "Verizon only : If the rule set supports anomaly detection mode, this describes the threshold for blocking requests.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 20,
            "minimum": 0,
            "type": "integer"
          },
          "ruleGroupOverrides": {
            "description": "Defines the rule overrides to apply to the rule set.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleGroupOverride"
            },
            "type": "array"
          },
          "ruleSetType": {
            "description": "Defines the rule set type to use.",
            "type": "string"
          },
          "ruleSetVersion": {
            "description": "Defines the version of the rule set to use.",
            "type": "string"
          }
        },
        "required": [
          "ruleSetType",
          "ruleSetVersion"
        ],
        "type": "object"
      },
      "ManagedRuleSetDefinition": {
        "allOf": [
          {
            "$ref": "./cdn.json#/definitions/Resource"
          }
        ],
        "description": "Describes a managed rule set definition.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ManagedRuleSetDefinitionProperties",
            "description": "Describes managed rule set definition properties.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "./cdn.json#/definitions/Sku",
            "description": "The pricing tier (defines a CDN provider, feature list and rate) of the CdnWebApplicationFirewallPolicy."
          }
        },
        "type": "object"
      },
      "ManagedRuleSetDefinitionList": {
        "description": "List of managed rule set definitions available for use in a policy.",
        "properties": {
          "nextLink": {
            "description": "URL to retrieve next set of managed rule set definitions.",
            "type": "string"
          },
          "value": {
            "description": "List of managed rule set definitions.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleSetDefinition"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedRuleSetDefinitionProperties": {
        "description": "Properties for a managed rule set definition.",
        "properties": {
          "provisioningState": {
            "description": "Provisioning state of the managed rule set.",
            "readOnly": true,
            "type": "string"
          },
          "ruleGroups": {
            "description": "Rule groups of the managed rule set.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleGroupDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "ruleSetType": {
            "description": "Type of the managed rule set.",
            "readOnly": true,
            "type": "string"
          },
          "ruleSetVersion": {
            "description": "Version of the managed rule set type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedRuleSetList": {
        "description": "Defines the list of managed rule sets for the policy.",
        "properties": {
          "managedRuleSets": {
            "description": "List of rule sets.",
            "items": {
              "$ref": "#/components/schemas/ManagedRuleSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MatchCondition": {
        "description": "Define match conditions",
        "properties": {
          "matchValue": {
            "description": "List of possible match values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "matchVariable": {
            "description": "Match variable to compare against.",
            "enum": [
              "RemoteAddr",
              "SocketAddr",
              "RequestMethod",
              "RequestHeader",
              "RequestUri",
              "QueryString",
              "RequestBody",
              "Cookies",
              "PostArgs"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MatchVariable"
            }
          },
          "negateCondition": {
            "description": "Describes if the result of this condition should be negated.",
            "type": "boolean"
          },
          "operator": {
            "description": "Describes operator to be matched",
            "enum": [
              "Any",
              "IPMatch",
              "GeoMatch",
              "Equal",
              "Contains",
              "LessThan",
              "GreaterThan",
              "LessThanOrEqual",
              "GreaterThanOrEqual",
              "BeginsWith",
              "EndsWith",
              "RegEx"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "operator"
            }
          },
          "selector": {
            "description": "Selector can used to match a specific key for QueryString, Cookies, RequestHeader or PostArgs.",
            "type": "string"
          },
          "transforms": {
            "description": "List of transforms.",
            "items": {
              "$ref": "#/components/schemas/TransformType"
            },
            "type": "array"
          }
        },
        "required": [
          "matchVariable",
          "operator",
          "matchValue"
        ],
        "type": "object"
      },
      "RateLimitRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomRule"
          }
        ],
        "description": "Defines a rate limiting rule that can be included in a waf policy",
        "properties": {
          "rateLimitDurationInMinutes": {
            "description": "Defines rate limit duration. Default is 1 minute.",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "maximum": 60,
            "minimum": 0,
            "type": "integer"
          },
          "rateLimitThreshold": {
            "description": "Defines rate limit threshold.",
            "exclusiveMinimum": false,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "rateLimitThreshold",
          "rateLimitDurationInMinutes"
        ],
        "type": "object"
      },
      "RateLimitRuleList": {
        "description": "Defines contents of rate limit rules",
        "properties": {
          "rules": {
            "description": "List of rules",
            "items": {
              "$ref": "#/components/schemas/RateLimitRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TransformType": {
        "description": "Describes what transforms were applied before matching.",
        "enum": [
          "Lowercase",
          "Uppercase",
          "Trim",
          "UrlDecode",
          "UrlEncode",
          "RemoveNulls"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TransformType"
        }
      },
      "policySettings": {
        "description": "Defines contents of a web application firewall global configuration",
        "properties": {
          "defaultCustomBlockResponseBody": {
            "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding.",
            "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
            "type": "string"
          },
          "defaultCustomBlockResponseStatusCode": {
            "description": "If the action type is block, this field defines the default customer overridable http response status code.",
            "enum": [
              200,
              403,
              405,
              406,
              429
            ],
            "type": "integer"
          },
          "defaultRedirectUrl": {
            "description": "If action type is redirect, this field represents the default redirect URL for the client.",
            "type": "string"
          },
          "enabledState": {
            "description": "describes if the policy is in enabled state or disabled state",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PolicyEnabledState"
            }
          },
          "mode": {
            "description": "Describes if it is in detection mode or prevention mode at policy level.",
            "enum": [
              "Prevention",
              "Detection"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PolicyMode"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}