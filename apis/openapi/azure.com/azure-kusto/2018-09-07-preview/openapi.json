{
  "openapi": "3.0.0",
  "info": {
    "title": "KustoManagementClient",
    "version": "2018-09-07-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azure-kusto/resource-manager/Microsoft.Kusto/preview/2018-09-07-preview/kusto.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Kusto/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "The operation was successful. The response contains the list of available operations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists available operations for the Microsoft.Kusto provider.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "KustoOperationsList": {
            "$ref": "./examples/KustoOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists all Kusto clusters within a subscription.",
        "operationId": "Clusters_List",
        "x-ms-examples": {
          "KustoClustersList": {
            "$ref": "./examples/KustoClustersList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Azure location.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Checks that the cluster name is valid and is not already in use.",
        "operationId": "Clusters_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterCheckNameRequest"
              }
            }
          },
          "description": "The name of the cluster.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersCheckNameAvailability": {
            "$ref": "./examples/KustoClustersCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSkusResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Lists eligible SKUs for Kusto resource provider.",
        "operationId": "Clusters_ListSkus",
        "x-ms-examples": {
          "KustoClustersListSkus": {
            "$ref": "./examples/KustoClustersListSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists all Kusto clusters within a resource group.",
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "KustoClustersListByResourceGroup": {
            "$ref": "./examples/KustoClustersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- cluster deleted successfully."
          },
          "202": {
            "description": "Accepted the delete cluster request."
          },
          "204": {
            "description": "NoContent -- cluster does not exist in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Deletes a Kusto cluster.",
        "operationId": "Clusters_Delete",
        "x-ms-examples": {
          "KustoClustersDelete": {
            "$ref": "./examples/KustoClustersDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "The Kusto cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Gets a Kusto cluster.",
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "KustoClustersGet": {
            "$ref": "./examples/KustoClustersGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the Cluster."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Update a Kusto cluster.",
        "operationId": "Clusters_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterUpdate"
              }
            }
          },
          "description": "The Kusto cluster parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersUpdate": {
            "$ref": "./examples/KustoClustersUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the Cluster."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully created the cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Create or update a Kusto cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cluster"
              }
            }
          },
          "description": "The Kusto cluster parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersCreateOrUpdate": {
            "$ref": "./examples/KustoClustersCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Checks that the database name is valid and is not already in use.",
        "operationId": "Databases_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseCheckNameRequest"
              }
            }
          },
          "description": "The name of the database.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseCheckNameAvailability": {
            "$ref": "./examples/KustoDatabasesCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of databases."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns the list of databases of the given Kusto cluster.",
        "operationId": "Databases_ListByCluster",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoDatabasesListByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified database does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Deletes the database with the given name.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "KustoDatabasesDelete": {
            "$ref": "./examples/KustoDatabasesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully retrieved the specified database."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "KustoDatabasesGet": {
            "$ref": "./examples/KustoDatabasesGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "202": {
            "description": "Accepted the update database request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Updates a database.",
        "operationId": "Databases_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseUpdate"
              }
            }
          },
          "description": "The database parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabasesUpdate": {
            "$ref": "./examples/KustoDatabasesUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully created the database."
          },
          "202": {
            "description": "Accepted the create database request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a database.",
        "operationId": "Databases_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Database"
              }
            }
          },
          "description": "The database parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabasesCreateOrUpdate": {
            "$ref": "./examples/KustoDatabasesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "OK -- Successfully added the list of database principals. Returns the updated list of principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Add Database principals permissions.",
        "operationId": "Databases_AddPrincipals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalListRequest"
              }
            }
          },
          "description": "List of database principals to add.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseAddPrincipals": {
            "$ref": "./examples/KustoDatabaseAddPrincipals.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubConnectionValidation": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnectionValidationListResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Checks that the Event Hub data connection parameters are valid.",
        "operationId": "EventHubConnections_eventhubConnectionValidation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHubConnectionValidation"
              }
            }
          },
          "description": "The Event Hub connection parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDataConnectionValidation": {
            "$ref": "./examples/KustoDataConnectionValidation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubconnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnectionListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Event Hub connections."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Returns the list of Event Hub connections of the given Kusto database.",
        "operationId": "EventHubConnections_ListByDatabase",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoEventHubConnectionsListByDatabase.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/eventhubconnections/{eventHubConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the Event Hub connection."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified Event Hub connection does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Deletes the Event Hub connection with the given name.",
        "operationId": "EventHubConnections_Delete",
        "x-ms-examples": {
          "KustoEventHubConnectionsDelete": {
            "$ref": "./examples/KustoEventHubConnectionsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnection"
                }
              }
            },
            "description": "Successfully retrieved the specified Event Hub connection."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Returns an Event Hub connection.",
        "operationId": "EventHubConnections_Get",
        "x-ms-examples": {
          "KustoEventHubConnectionsGet": {
            "$ref": "./examples/KustoEventHubConnectionsGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnection"
                }
              }
            },
            "description": "Successfully updated the Event Hub connection."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnection"
                }
              }
            },
            "description": "Successfully updated the Event Hub connection."
          },
          "202": {
            "description": "Accepted the update Event Hub connection request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Updates a Event Hub connection.",
        "operationId": "EventHubConnections_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHubConnectionUpdate"
              }
            }
          },
          "description": "The Event Hub connection parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoEventHubConnectionsUpdate": {
            "$ref": "./examples/KustoEventHubConnectionsUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventHubConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnection"
                }
              }
            },
            "description": "Successfully updated the Event Hub connection."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventHubConnection"
                }
              }
            },
            "description": "Successfully created the Event Hub connection."
          },
          "202": {
            "description": "Accepted the create Event Hub connection request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EventHubConnections"
        ],
        "description": "Creates or updates a Event Hub connection.",
        "operationId": "EventHubConnections_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventHubConnection"
              }
            }
          },
          "description": "The Event Hub connection parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoEventHubConnectionsCreateOrUpdate": {
            "$ref": "./examples/KustoEventHubConnectionsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of database principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns a list of database principals of the given Kusto cluster and database.",
        "operationId": "Databases_ListPrincipals",
        "x-ms-examples": {
          "KustoDatabaseListPrincipals": {
            "$ref": "./examples/KustoDatabaseListPrincipals.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "OK -- Successfully removed the list of database principals. Returns the updated list of principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Remove Database principals permissions.",
        "operationId": "Databases_RemovePrincipals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalListRequest"
              }
            }
          },
          "description": "List of database principals to remove.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseRemovePrincipals": {
            "$ref": "./examples/KustoDatabaseRemovePrincipals.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourceSkusResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Returns the SKUs available for the provided resource.",
        "operationId": "Clusters_ListSkusByResource",
        "x-ms-examples": {
          "KustoClustersListResourceSkus": {
            "$ref": "./examples/KustoClustersListResourceSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Starts a Kusto cluster.",
        "operationId": "Clusters_Start",
        "x-ms-examples": {
          "KustoClustersStart": {
            "$ref": "./examples/KustoClustersStart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Stops a Kusto cluster.",
        "operationId": "Clusters_Stop",
        "x-ms-examples": {
          "KustoClustersStop": {
            "$ref": "./examples/KustoClustersStop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ClusterNameParameter": {
        "description": "The name of the Kusto cluster.",
        "in": "path",
        "name": "clusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database in the Kusto cluster.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "EventHubConnectionNameParameter": {
        "description": "The name of the event hub connection.",
        "in": "path",
        "name": "eventHubConnectionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group containing the Kusto cluster.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AzureCapacity": {
        "properties": {
          "default": {
            "description": "The default capacity that would be used.",
            "type": "integer"
          },
          "maximum": {
            "description": "Maximum allowed capacity.",
            "type": "integer"
          },
          "minimum": {
            "description": "Minimum allowed capacity.",
            "type": "integer"
          },
          "scaleType": {
            "description": "Scale type.",
            "enum": [
              "automatic",
              "manual",
              "none"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureScaleType"
            }
          }
        },
        "required": [
          "minimum",
          "maximum",
          "default",
          "scaleType"
        ],
        "type": "object"
      },
      "AzureResourceSku": {
        "properties": {
          "capacity": {
            "$ref": "#/components/schemas/AzureCapacity",
            "description": "The SKU capacity."
          },
          "resourceType": {
            "description": "Resource Namespace and Type.",
            "type": "string"
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU details."
          }
        },
        "type": "object"
      },
      "AzureSku": {
        "properties": {
          "capacity": {
            "description": "SKU capacity.",
            "type": "integer"
          },
          "name": {
            "description": "SKU name.",
            "enum": [
              "KC8",
              "KC16",
              "KS8",
              "KS16",
              "D13_v2",
              "D14_v2",
              "L8",
              "L16"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureSkuName"
            }
          },
          "tier": {
            "description": "SKU tier.",
            "enum": [
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureSkuTier"
            }
          }
        },
        "required": [
          "name",
          "tier"
        ],
        "type": "object"
      },
      "CheckNameResult": {
        "properties": {
          "message": {
            "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.",
            "type": "string"
          },
          "name": {
            "description": "The name that was checked.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Specifies a Boolean value that indicates if the name is available.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "An error response from Kusto.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "An error response from Kusto.",
        "properties": {
          "code": {
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "type": "string"
          },
          "details": {
            "description": "A list of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/CloudErrorBody"
            },
            "type": "array"
          },
          "message": {
            "description": "A message describing the error, intended to be suitable for displaying in a user interface.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error. For example, the name of the property in error.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "Cluster": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Class representing a Kusto cluster.",
        "properties": {
          "etag": {
            "description": "An ETag of the resource created.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU of the cluster."
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "ClusterCheckNameRequest": {
        "properties": {
          "name": {
            "description": "Cluster name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters.",
            "enum": [
              "Microsoft.Kusto/clusters"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ClusterListResult": {
        "description": "The list Kusto clusters operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto clusters.",
            "items": {
              "$ref": "#/components/schemas/Cluster"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterProperties": {
        "description": "Class representing the Kusto cluster properties.",
        "properties": {
          "dataIngestionUri": {
            "description": "The cluster data ingestion URI.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "state": {
            "description": "The state of the resource.",
            "enum": [
              "Creating",
              "Unavailable",
              "Running",
              "Deleting",
              "Deleted",
              "Stopping",
              "Stopped",
              "Starting"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "State"
            }
          },
          "trustedExternalTenants": {
            "description": "The cluster's external tenants.",
            "items": {
              "$ref": "#/components/schemas/TrustedExternalTenant"
            },
            "type": "array"
          },
          "uri": {
            "description": "The cluster URI.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ClusterUpdate": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Class representing an update to a Kusto cluster.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "etag": {
            "description": "An ETag of the resource updated.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU of the cluster."
          }
        },
        "type": "object"
      },
      "Database": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Class representing a Kusto database.",
        "properties": {
          "etag": {
            "description": "An ETag of the resource created.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/DatabaseProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DatabaseCheckNameRequest": {
        "properties": {
          "name": {
            "description": "Database name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters/databases.",
            "enum": [
              "Microsoft.Kusto/clusters/databases"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "DatabaseListResult": {
        "description": "The list Kusto databases operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto databases.",
            "items": {
              "$ref": "#/components/schemas/Database"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipal": {
        "properties": {
          "appId": {
            "description": "Application id - relevant only for application principal type.",
            "type": "string"
          },
          "email": {
            "description": "Database principal email if exists.",
            "type": "string"
          },
          "fqn": {
            "description": "Database principal fully qualified name.",
            "type": "string"
          },
          "name": {
            "description": "Database principal name.",
            "type": "string"
          },
          "role": {
            "description": "Database principal role.",
            "enum": [
              "Admin",
              "Ingestor",
              "Monitor",
              "User",
              "UnrestrictedViewers",
              "Viewer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabasePrincipalRole"
            }
          },
          "type": {
            "description": "Database principal type.",
            "enum": [
              "App",
              "Group",
              "User"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabasePrincipalType"
            }
          }
        },
        "required": [
          "name",
          "role",
          "type"
        ],
        "type": "object"
      },
      "DatabasePrincipalListRequest": {
        "description": "The list Kusto database principals operation request.",
        "properties": {
          "value": {
            "description": "The list of Kusto database principals.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrincipal"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipalListResult": {
        "description": "The list Kusto database principals operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto database principals.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrincipal"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabaseProperties": {
        "description": "Class representing the Kusto database properties.",
        "properties": {
          "hotCachePeriodInDays": {
            "description": "The number of days of data that should be kept in cache for fast queries.",
            "type": "integer"
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "softDeletePeriodInDays": {
            "description": "The number of days data should be kept before it stops being accessible to queries.",
            "type": "integer"
          },
          "statistics": {
            "$ref": "#/components/schemas/DatabaseStatistics",
            "description": "The statistics of the database.",
            "readOnly": true
          }
        },
        "required": [
          "softDeletePeriodInDays"
        ],
        "type": "object"
      },
      "DatabaseStatistics": {
        "properties": {
          "size": {
            "description": "The database size - the total size of compressed data and index in bytes.",
            "type": "number"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "DatabaseUpdate": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Class representing an update to a Kusto database.",
        "properties": {
          "etag": {
            "description": "An ETag of the resource updated.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/DatabaseProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventHubConnection": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing an event hub connection.",
        "properties": {
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/EventHubConnectionProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventHubConnectionListResult": {
        "description": "The list Kusto event hub connections operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto event hub connections.",
            "items": {
              "$ref": "#/components/schemas/EventHubConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventHubConnectionProperties": {
        "description": "Class representing the Kusto event hub connection properties.",
        "properties": {
          "consumerGroup": {
            "description": "The event hub consumer group.",
            "type": "string"
          },
          "dataFormat": {
            "description": "The data format of the message. Optionally the data format can be added to each message.",
            "enum": [
              "MULTIJSON",
              "JSON",
              "CSV"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "dataFormat"
            }
          },
          "eventHubResourceId": {
            "description": "The resource ID of the event hub to be used to create a data connection.",
            "type": "string"
          },
          "mappingRuleName": {
            "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.",
            "type": "string"
          },
          "tableName": {
            "description": "The table where the data should be ingested. Optionally the table information can be added to each message.",
            "type": "string"
          }
        },
        "required": [
          "eventHubResourceId",
          "consumerGroup"
        ],
        "type": "object"
      },
      "EventHubConnectionUpdate": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing an update to event hub connection.",
        "properties": {
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/EventHubConnectionProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventHubConnectionValidation": {
        "description": "Class representing an event hub connection validation.",
        "properties": {
          "eventhubConnectionName": {
            "description": "The name of the event hub connection.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/EventHubConnectionProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventHubConnectionValidationListResult": {
        "description": "The list Kusto event hub connection validation result.",
        "properties": {
          "value": {
            "description": "The list of Kusto event hub connection validation errors.",
            "items": {
              "$ref": "#/components/schemas/EventHubConnectionValidationResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventHubConnectionValidationResult": {
        "properties": {
          "errorMessage": {
            "description": "A message which indicates a problem in event hub connection validation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListResourceSkusResult": {
        "description": "List of available SKUs for an existing Kusto Cluster.",
        "properties": {
          "value": {
            "description": "The collection of available SKUs for an existing resource.",
            "items": {
              "$ref": "#/components/schemas/AzureResourceSku"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListSkusResult": {
        "description": "List of available SKUs for a new Kusto Cluster.",
        "properties": {
          "value": {
            "description": "The collection of available SKUs for new resources.",
            "items": {
              "$ref": "#/components/schemas/AzureSku"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Operation": {
        "properties": {
          "display": {
            "properties": {
              "description": {
                "title": "The friendly name of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "For example: read, write, delete.",
                "title": "The operation type.",
                "type": "string"
              },
              "provider": {
                "title": "Friendly name of the resource provider.",
                "type": "string"
              },
              "resource": {
                "title": "The resource type on which the operation is performed.",
                "type": "string"
              }
            },
            "title": "The object that describes the operation.",
            "type": "object"
          },
          "name": {
            "description": "This is of the format {provider}/{resource}/{operation}.",
            "title": "The operation name.",
            "type": "string"
          },
          "origin": {
            "title": "The intended executor of the operation.",
            "type": "string"
          },
          "properties": {
            "title": "Properties of the operation.",
            "type": "object"
          }
        },
        "title": "A REST API operation",
        "type": "object"
      },
      "OperationListResult": {
        "properties": {
          "nextLink": {
            "title": "The URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "title": "The list of operations supported by the resource provider.",
            "type": "array"
          }
        },
        "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
        "type": "object"
      },
      "TrustedExternalTenant": {
        "properties": {
          "value": {
            "description": "GUID representing an external tenant.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}