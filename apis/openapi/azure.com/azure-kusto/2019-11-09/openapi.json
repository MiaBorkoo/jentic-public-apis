{
  "openapi": "3.0.0",
  "info": {
    "title": "KustoManagementClient",
    "version": "2019-11-09",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azure-kusto/resource-manager/Microsoft.Kusto/stable/2019-11-09/kusto.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Kusto/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "The operation was successful. The response contains the list of available operations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists available operations for the Microsoft.Kusto provider.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "KustoOperationsList": {
            "$ref": "./examples/KustoOperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists all Kusto clusters within a subscription.",
        "operationId": "Clusters_List",
        "x-ms-examples": {
          "KustoClustersList": {
            "$ref": "./examples/KustoClustersList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/locations/{location}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Azure location.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Checks that the cluster name is valid and is not already in use.",
        "operationId": "Clusters_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterCheckNameRequest"
              }
            }
          },
          "description": "The name of the cluster.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersCheckNameAvailability": {
            "$ref": "./examples/KustoClustersCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Kusto/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuDescriptionList"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Lists eligible SKUs for Kusto resource provider.",
        "operationId": "Clusters_ListSkus",
        "x-ms-examples": {
          "KustoClustersListSkus": {
            "$ref": "./examples/KustoClustersListSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Lists all Kusto clusters within a resource group.",
        "operationId": "Clusters_ListByResourceGroup",
        "x-ms-examples": {
          "KustoClustersListByResourceGroup": {
            "$ref": "./examples/KustoClustersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- cluster deleted successfully."
          },
          "202": {
            "description": "Accepted the delete cluster request."
          },
          "204": {
            "description": "NoContent -- cluster does not exist in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Deletes a Kusto cluster.",
        "operationId": "Clusters_Delete",
        "x-ms-examples": {
          "KustoClustersDelete": {
            "$ref": "./examples/KustoClustersDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "The Kusto cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Gets a Kusto cluster.",
        "operationId": "Clusters_Get",
        "x-ms-examples": {
          "KustoClustersGet": {
            "$ref": "./examples/KustoClustersGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the Cluster."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the cluster."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Update a Kusto cluster.",
        "operationId": "Clusters_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterUpdate"
              }
            }
          },
          "description": "The Kusto cluster parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersUpdate": {
            "$ref": "./examples/KustoClustersUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully updated the Cluster."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Successfully created the cluster."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Create or update a Kusto cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Cluster"
              }
            }
          },
          "description": "The Kusto cluster parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClustersCreateOrUpdate": {
            "$ref": "./examples/KustoClustersCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDatabaseConfigurationListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of attached database configurations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Returns the list of attached database configurations of the given Kusto cluster.",
        "operationId": "AttachedDatabaseConfigurations_ListByCluster",
        "x-ms-examples": {
          "KustoAttachedDatabaseConfigurationsListByCluster": {
            "$ref": "./examples/KustoAttachedDatabaseConfigurationsListByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/attachedDatabaseConfigurations/{attachedDatabaseConfigurationName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/AttachedDatabaseConfigurationNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified database does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Deletes the attached database configuration with the given name.",
        "operationId": "AttachedDatabaseConfigurations_Delete",
        "x-ms-examples": {
          "AttachedDatabaseConfigurationsDelete": {
            "$ref": "./examples/KustoAttachedDatabaseConfigurationsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/AttachedDatabaseConfigurationNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
                }
              }
            },
            "description": "Successfully retrieved the specified attached database configuration."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Returns an attached database configuration.",
        "operationId": "AttachedDatabaseConfigurations_Get",
        "x-ms-examples": {
          "AttachedDatabaseConfigurationsGet": {
            "$ref": "./examples/KustoAttachedDatabaseConfigurationsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/AttachedDatabaseConfigurationNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
                }
              }
            },
            "description": "Successfully created the database."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
                }
              }
            },
            "description": "Accepted the create database request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AttachedDatabaseConfigurations"
        ],
        "description": "Creates or updates an attached database configuration.",
        "operationId": "AttachedDatabaseConfigurations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
              }
            }
          },
          "description": "The database parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "AttachedDatabaseConfigurationsCreateOrUpdate": {
            "$ref": "./examples/KustoAttachedDatabaseConfigurationsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Checks that the database name is valid and is not already in use.",
        "operationId": "Databases_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameRequest"
              }
            }
          },
          "description": "The name of the resource.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseCheckNameAvailability": {
            "$ref": "./examples/KustoDatabasesCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/checkPrincipalAssignmentNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "description": "Checks that the principal assignment name is valid and is not already in use.",
        "operationId": "ClusterPrincipalAssignments_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterPrincipalAssignmentCheckNameRequest"
              }
            }
          },
          "description": "The name of the principal assignment.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClusterPrincipalAssignmentsCheckNameAvailability": {
            "$ref": "./examples/KustoClusterPrincipalAssignmentsCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of databases."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns the list of databases of the given Kusto cluster.",
        "operationId": "Databases_ListByCluster",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoDatabasesListByCluster.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the database."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified database does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Deletes the database with the given name.",
        "operationId": "Databases_Delete",
        "x-ms-examples": {
          "KustoDatabasesDelete": {
            "$ref": "./examples/KustoDatabasesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully retrieved the specified database."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns a database.",
        "operationId": "Databases_Get",
        "x-ms-examples": {
          "KustoDatabasesGet": {
            "$ref": "./examples/KustoDatabasesGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Accepted the update database request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Updates a database.",
        "operationId": "Databases_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Database"
              }
            }
          },
          "description": "The database parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabasesUpdate": {
            "$ref": "./examples/KustoDatabasesUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully updated the database."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Successfully created the database."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Database"
                }
              }
            },
            "description": "Accepted the create database request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Creates or updates a database.",
        "operationId": "Databases_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Database"
              }
            }
          },
          "description": "The database parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabasesCreateOrUpdate": {
            "$ref": "./examples/KustoDatabasesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/addPrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "OK -- Successfully added the list of database principals. Returns the updated list of principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Add Database principals permissions.",
        "operationId": "Databases_AddPrincipals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalListRequest"
              }
            }
          },
          "description": "List of database principals to add.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseAddPrincipals": {
            "$ref": "./examples/KustoDatabaseAddPrincipals.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the Kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Checks that the data connection name is valid and is not already in use.",
        "operationId": "DataConnections_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataConnectionCheckNameRequest"
              }
            }
          },
          "description": "The name of the data connection.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDataConnectionsCheckNameAvailability": {
            "$ref": "./examples/KustoDataConnectionsCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/checkPrincipalAssignmentNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "description": "Checks that the database principal assignment is valid and is not already in use.",
        "operationId": "DatabasePrincipalAssignments_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalAssignmentCheckNameRequest"
              }
            }
          },
          "description": "The name of the resource.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseCheckNameAvailability": {
            "$ref": "./examples/KustoDatabasePrincipalAssignmentsCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnectionValidation": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnectionValidationListResult"
                }
              }
            },
            "description": "OK -- Operation to check the kusto resource name availability was successful."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Checks that the data connection parameters are valid.",
        "operationId": "DataConnections_dataConnectionValidation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataConnectionValidation"
              }
            }
          },
          "description": "The data connection parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDataConnectionValidation": {
            "$ref": "./examples/KustoDataConnectionValidation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnectionListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of data connections."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Returns the list of data connections of the given Kusto database.",
        "operationId": "DataConnections_ListByDatabase",
        "x-ms-examples": {
          "KustoDatabasesListByCluster": {
            "$ref": "./examples/KustoDataConnectionsListByDatabase.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/dataConnections/{dataConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the data connection."
          },
          "202": {
            "description": "Accepted."
          },
          "204": {
            "description": "The specified data connection does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Deletes the data connection with the given name.",
        "operationId": "DataConnections_Delete",
        "x-ms-examples": {
          "KustoDataConnectionsDelete": {
            "$ref": "./examples/KustoDataConnectionsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Successfully retrieved the specified data connection."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Returns a data connection.",
        "operationId": "DataConnections_Get",
        "x-ms-examples": {
          "KustoDataConnectionsGet": {
            "$ref": "./examples/KustoDataConnectionsGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Successfully updated the data connection."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Successfully updated the data connection."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Accepted the update data connection request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Updates a data connection.",
        "operationId": "DataConnections_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataConnection"
              }
            }
          },
          "description": "The data connection parameters supplied to the Update operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDataConnectionsUpdate": {
            "$ref": "./examples/KustoDataConnectionsUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/DataConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Successfully updated the data connection."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Successfully created the data connection."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnection"
                }
              }
            },
            "description": "Accepted the create data connection request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DataConnections"
        ],
        "description": "Creates or updates a data connection.",
        "operationId": "DataConnections_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataConnection"
              }
            }
          },
          "description": "The data connection parameters supplied to the CreateOrUpdate operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDataConnectionsCreateOrUpdate": {
            "$ref": "./examples/KustoDataConnectionsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/listPrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of database principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Returns a list of database principals of the given Kusto cluster and database.",
        "operationId": "Databases_ListPrincipals",
        "x-ms-examples": {
          "KustoDatabaseListPrincipals": {
            "$ref": "./examples/KustoDatabaseListPrincipals.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalAssignmentListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "description": "Lists all Kusto cluster database principalAssignments.",
        "operationId": "DatabasePrincipalAssignments_List",
        "x-ms-examples": {
          "KustoPrincipalAssignmentsList": {
            "$ref": "./examples/KustoDatabasePrincipalAssignmentsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/principalAssignments/{principalAssignmentName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- principalAssignments deleted successfully."
          },
          "202": {
            "description": "Accepted the delete principalAssignments request."
          },
          "204": {
            "description": "NoContent -- principalAssignments does not exist in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "description": "Deletes a Kusto principalAssignment.",
        "operationId": "DatabasePrincipalAssignments_Delete",
        "x-ms-examples": {
          "KustoDatabasePrincipalAssignmentsDelete": {
            "$ref": "./examples/KustoDatabasePrincipalAssignmentsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalAssignment"
                }
              }
            },
            "description": "The Kusto cluster database principal assignment object."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "description": "Gets a Kusto cluster database principalAssignment.",
        "operationId": "DatabasePrincipalAssignments_Get",
        "x-ms-examples": {
          "KustoDatabasePrincipalAssignmentsGet": {
            "$ref": "./examples/KustoDatabasePrincipalAssignmentsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalAssignment"
                }
              }
            },
            "description": "Successfully updated the PrincipalAssignments."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalAssignment"
                }
              }
            },
            "description": "Successfully created the principalAssignments."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DatabasePrincipalAssignments"
        ],
        "description": "Creates a Kusto cluster database principalAssignment.",
        "operationId": "DatabasePrincipalAssignments_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalAssignment"
              }
            }
          },
          "description": "The Kusto principalAssignments parameters supplied for the operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabasePrincipalAssignmentsCreateOrUpdate": {
            "$ref": "./examples/KustoDatabasePrincipalAssignmentsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/databases/{databaseName}/removePrincipals": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/DatabaseNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabasePrincipalListResult"
                }
              }
            },
            "description": "OK -- Successfully removed the list of database principals. Returns the updated list of principals."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Databases"
        ],
        "description": "Remove Database principals permissions.",
        "operationId": "Databases_RemovePrincipals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabasePrincipalListRequest"
              }
            }
          },
          "description": "List of database principals to remove.",
          "required": true
        },
        "x-ms-examples": {
          "KustoDatabaseRemovePrincipals": {
            "$ref": "./examples/KustoDatabaseRemovePrincipals.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/detachFollowerDatabases": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Detaches all followers of a database owned by this cluster.",
        "operationId": "Clusters_DetachFollowerDatabases",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FollowerDatabaseDefinition"
              }
            }
          },
          "description": "The follower databases properties to remove.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClusterDetachFollowerDatabases": {
            "$ref": "./examples/KustoClusterDetachFollowerDatabases.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/diagnoseVirtualNetwork": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiagnoseVirtualNetworkResult"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Diagnoses network connectivity status for external resources on which the service is dependent on.",
        "operationId": "Clusters_DiagnoseVirtualNetwork",
        "x-ms-examples": {
          "KustoClusterDiagnoseVirtualNetwork": {
            "$ref": "./examples/KustoClustersDiagnoseVirtualNetwork.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/listFollowerDatabases": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FollowerDatabaseListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of followed databases."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Returns a list of databases that are owned by this cluster and were followed by another cluster.",
        "operationId": "Clusters_ListFollowerDatabases",
        "x-ms-examples": {
          "KustoClusterListFollowerDatabases": {
            "$ref": "./examples/KustoClusterListFollowerDatabases.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/principalAssignments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterPrincipalAssignmentListResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "description": "Lists all Kusto cluster principalAssignments.",
        "operationId": "ClusterPrincipalAssignments_List",
        "x-ms-examples": {
          "KustoPrincipalAssignmentsList": {
            "$ref": "./examples/KustoClusterPrincipalAssignmentsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/principalAssignments/{principalAssignmentName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- principalAssignments deleted successfully."
          },
          "202": {
            "description": "Accepted the delete principalAssignments request."
          },
          "204": {
            "description": "NoContent -- principalAssignments does not exist in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "description": "Deletes a Kusto cluster principalAssignment.",
        "operationId": "ClusterPrincipalAssignments_Delete",
        "x-ms-examples": {
          "KustoClusterPrincipalAssignmentsDelete": {
            "$ref": "./examples/KustoClusterPrincipalAssignmentsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterPrincipalAssignment"
                }
              }
            },
            "description": "The Kusto cluster principal assignment object."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "description": "Gets a Kusto cluster principalAssignment.",
        "operationId": "ClusterPrincipalAssignments_Get",
        "x-ms-examples": {
          "KustoClusterPrincipalAssignmentsGet": {
            "$ref": "./examples/KustoClusterPrincipalAssignmentsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/PrincipalAssignmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterPrincipalAssignment"
                }
              }
            },
            "description": "Successfully updated the PrincipalAssignment."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterPrincipalAssignment"
                }
              }
            },
            "description": "Successfully created the principalAssignment."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ClusterPrincipalAssignments"
        ],
        "description": "Create a Kusto cluster principalAssignment.",
        "operationId": "ClusterPrincipalAssignments_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClusterPrincipalAssignment"
              }
            }
          },
          "description": "The Kusto cluster principalAssignment's parameters supplied for the operation.",
          "required": true
        },
        "x-ms-examples": {
          "KustoClusterPrincipalAssignmentsCreateOrUpdate": {
            "$ref": "./examples/KustoClusterPrincipalAssignmentsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListResourceSkusResult"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Returns the SKUs available for the provided resource.",
        "operationId": "Clusters_ListSkusByResource",
        "x-ms-examples": {
          "KustoClustersListResourceSkus": {
            "$ref": "./examples/KustoClustersListResourceSkus.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Starts a Kusto cluster.",
        "operationId": "Clusters_Start",
        "x-ms-examples": {
          "KustoClustersStart": {
            "$ref": "./examples/KustoClustersStart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ClusterNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Clusters"
        ],
        "description": "Stops a Kusto cluster.",
        "operationId": "Clusters_Stop",
        "x-ms-examples": {
          "KustoClustersStop": {
            "$ref": "./examples/KustoClustersStop.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "AttachedDatabaseConfigurationNameParameter": {
        "description": "The name of the attached database configuration.",
        "in": "path",
        "name": "attachedDatabaseConfigurationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ClusterNameParameter": {
        "description": "The name of the Kusto cluster.",
        "in": "path",
        "name": "clusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DataConnectionNameParameter": {
        "description": "The name of the data connection.",
        "in": "path",
        "name": "dataConnectionName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database in the Kusto cluster.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "PrincipalAssignmentNameParameter": {
        "description": "The name of the Kusto principalAssignment.",
        "in": "path",
        "name": "principalAssignmentName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group containing the Kusto cluster.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AttachedDatabaseConfiguration": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing an attached database configuration.",
        "properties": {
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AttachedDatabaseConfigurationProperties",
            "description": "The properties of the attached database configuration.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AttachedDatabaseConfigurationListResult": {
        "description": "The list attached database configurations operation response.",
        "properties": {
          "value": {
            "description": "The list of attached database configurations.",
            "items": {
              "$ref": "#/components/schemas/AttachedDatabaseConfiguration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AttachedDatabaseConfigurationProperties": {
        "description": "Class representing the an attached database configuration properties of kind specific.",
        "properties": {
          "attachedDatabaseNames": {
            "description": "The list of databases from the clusterResourceId which are currently attached to the cluster.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "clusterResourceId": {
            "description": "The resource id of the cluster where the databases you would like to attach reside.",
            "type": "string"
          },
          "databaseName": {
            "description": "The name of the database which you would like to attach, use * if you want to follow all current and future databases.",
            "type": "string"
          },
          "defaultPrincipalsModificationKind": {
            "description": "The default principals modification kind",
            "enum": [
              "Union",
              "Replace",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DefaultPrincipalsModificationKind"
            }
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          }
        },
        "required": [
          "databaseName",
          "clusterResourceId",
          "defaultPrincipalsModificationKind"
        ],
        "type": "object"
      },
      "AzureCapacity": {
        "description": "Azure capacity definition.",
        "properties": {
          "default": {
            "description": "The default capacity that would be used.",
            "type": "integer"
          },
          "maximum": {
            "description": "Maximum allowed capacity.",
            "type": "integer"
          },
          "minimum": {
            "description": "Minimum allowed capacity.",
            "type": "integer"
          },
          "scaleType": {
            "description": "Scale type.",
            "enum": [
              "automatic",
              "manual",
              "none"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureScaleType"
            }
          }
        },
        "required": [
          "minimum",
          "maximum",
          "default",
          "scaleType"
        ],
        "type": "object"
      },
      "AzureResourceSku": {
        "description": "Azure resource SKU definition.",
        "properties": {
          "capacity": {
            "$ref": "#/components/schemas/AzureCapacity",
            "description": "The number of instances of the cluster."
          },
          "resourceType": {
            "description": "Resource Namespace and Type.",
            "type": "string"
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU details."
          }
        },
        "type": "object"
      },
      "AzureSku": {
        "description": "Azure SKU definition.",
        "properties": {
          "capacity": {
            "description": "The number of instances of the cluster.",
            "type": "integer"
          },
          "name": {
            "description": "SKU name.",
            "enum": [
              "Standard_DS13_v2+1TB_PS",
              "Standard_DS13_v2+2TB_PS",
              "Standard_DS14_v2+3TB_PS",
              "Standard_DS14_v2+4TB_PS",
              "Standard_D13_v2",
              "Standard_D14_v2",
              "Standard_L8s",
              "Standard_L16s",
              "Standard_D11_v2",
              "Standard_D12_v2",
              "Standard_L4s",
              "Dev(No SLA)_Standard_D11_v2"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureSkuName"
            }
          },
          "tier": {
            "description": "SKU tier.",
            "enum": [
              "Basic",
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureSkuTier"
            }
          }
        },
        "required": [
          "name",
          "tier"
        ],
        "type": "object"
      },
      "CheckNameRequest": {
        "description": "The result returned from a database check name availability request.",
        "properties": {
          "name": {
            "description": "Resource name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, for instance Microsoft.Kusto/clusters/databases.",
            "enum": [
              "Microsoft.Kusto/clusters/databases",
              "Microsoft.Kusto/clusters/attachedDatabaseConfigurations"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "CheckNameResult": {
        "description": "The result returned from a check name availability request.",
        "properties": {
          "message": {
            "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.",
            "type": "string"
          },
          "name": {
            "description": "The name that was checked.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Specifies a Boolean value that indicates if the name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "Message providing the reason why the given name is invalid.",
            "enum": [
              "Invalid",
              "AlreadyExists"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "reason"
            }
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "An error response from Kusto.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody",
            "description": "An error response from Kusto."
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "An error response from Kusto.",
        "properties": {
          "code": {
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "type": "string"
          },
          "details": {
            "description": "A list of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/CloudErrorBody"
            },
            "type": "array"
          },
          "message": {
            "description": "A message describing the error, intended to be suitable for displaying in a user interface.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error. For example, the name of the property in error.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "Cluster": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Class representing a Kusto cluster.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the cluster, if configured."
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterProperties",
            "description": "The cluster properties.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU of the cluster."
          },
          "zones": {
            "$ref": "#/components/schemas/Zones",
            "description": "The availability zones of the cluster."
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "ClusterCheckNameRequest": {
        "description": "The result returned from a cluster check name availability request.",
        "properties": {
          "name": {
            "description": "Cluster name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters.",
            "enum": [
              "Microsoft.Kusto/clusters"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ClusterListResult": {
        "description": "The list Kusto clusters operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto clusters.",
            "items": {
              "$ref": "#/components/schemas/Cluster"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterPrincipalAssignment": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing a cluster principal assignment.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ClusterPrincipalProperties",
            "description": "The cluster principal.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ClusterPrincipalAssignmentCheckNameRequest": {
        "description": "A principal assignment check name availability request.",
        "properties": {
          "name": {
            "description": "Principal Assignment resource name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters/principalAssignments.",
            "enum": [
              "Microsoft.Kusto/clusters/principalAssignments"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ClusterPrincipalAssignmentListResult": {
        "description": "The list Kusto cluster principal assignments operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto cluster principal assignments.",
            "items": {
              "$ref": "#/components/schemas/ClusterPrincipalAssignment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ClusterPrincipalProperties": {
        "description": "A class representing cluster principal property.",
        "properties": {
          "principalId": {
            "description": "The principal ID assigned to the cluster principal. It can be a user email, application ID, or security group name.",
            "type": "string"
          },
          "principalName": {
            "description": "The principal name",
            "readOnly": true,
            "type": "string"
          },
          "principalType": {
            "description": "Principal type.",
            "enum": [
              "App",
              "Group",
              "User"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrincipalType"
            }
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "role": {
            "description": "Cluster principal role.",
            "enum": [
              "AllDatabasesAdmin",
              "AllDatabasesViewer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ClusterPrincipalRole"
            }
          },
          "tenantId": {
            "description": "The tenant id of the principal",
            "type": "string"
          },
          "tenantName": {
            "description": "The tenant name of the principal",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "principalId",
          "role",
          "principalType"
        ],
        "type": "object"
      },
      "ClusterProperties": {
        "description": "Class representing the Kusto cluster properties.",
        "properties": {
          "dataIngestionUri": {
            "description": "The cluster data ingestion URI.",
            "readOnly": true,
            "type": "string"
          },
          "enableDiskEncryption": {
            "description": "A boolean value that indicates if the cluster's disks are encrypted.",
            "type": "boolean"
          },
          "enableStreamingIngest": {
            "default": false,
            "description": "A boolean value that indicates if the streaming ingest is enabled.",
            "type": "boolean"
          },
          "keyVaultProperties": {
            "$ref": "#/components/schemas/KeyVaultProperties",
            "description": "KeyVault properties for the cluster encryption.",
            "type": "object"
          },
          "optimizedAutoscale": {
            "$ref": "#/components/schemas/OptimizedAutoscale",
            "description": "Optimized auto scale definition.",
            "type": "object"
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "state": {
            "description": "The state of the resource.",
            "enum": [
              "Creating",
              "Unavailable",
              "Running",
              "Deleting",
              "Deleted",
              "Stopping",
              "Stopped",
              "Starting",
              "Updating"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "State"
            }
          },
          "stateReason": {
            "description": "The reason for the cluster's current state.",
            "readOnly": true,
            "type": "string"
          },
          "trustedExternalTenants": {
            "description": "The cluster's external tenants.",
            "items": {
              "$ref": "#/components/schemas/TrustedExternalTenant"
            },
            "type": "array"
          },
          "uri": {
            "description": "The cluster URI.",
            "readOnly": true,
            "type": "string"
          },
          "virtualNetworkConfiguration": {
            "$ref": "#/components/schemas/VirtualNetworkConfiguration",
            "description": "Virtual network definition.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ClusterUpdate": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Class representing an update to a Kusto cluster.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the cluster, if configured."
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ClusterProperties",
            "description": "The cluster properties.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/AzureSku",
            "description": "The SKU of the cluster."
          }
        },
        "type": "object"
      },
      "Compression": {
        "description": "The compression type",
        "enum": [
          "None",
          "GZip"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "compression"
        }
      },
      "DataConnection": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing an data connection.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of the endpoint for the data connection",
            "enum": [
              "EventHub",
              "EventGrid",
              "IotHub"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Kind"
            }
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DataConnectionCheckNameRequest": {
        "description": "A data connection check name availability request.",
        "properties": {
          "name": {
            "description": "Data Connection name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters/databases/dataConnections.",
            "enum": [
              "Microsoft.Kusto/clusters/databases/dataConnections"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "DataConnectionListResult": {
        "description": "The list Kusto data connections operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto data connections.",
            "items": {
              "$ref": "#/components/schemas/DataConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataConnectionValidation": {
        "description": "Class representing an data connection validation.",
        "properties": {
          "dataConnectionName": {
            "description": "The name of the data connection.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/DataConnection",
            "description": "The data connection properties to validate."
          }
        },
        "type": "object"
      },
      "DataConnectionValidationListResult": {
        "description": "The list Kusto data connection validation result.",
        "properties": {
          "value": {
            "description": "The list of Kusto data connection validation errors.",
            "items": {
              "$ref": "#/components/schemas/DataConnectionValidationResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataConnectionValidationResult": {
        "description": "The result returned from a data connection validation request.",
        "properties": {
          "errorMessage": {
            "description": "A message which indicates a problem in data connection validation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Database": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing a Kusto database.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Kind of the database",
            "enum": [
              "ReadWrite",
              "ReadOnlyFollowing"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Kind"
            }
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DatabaseListResult": {
        "description": "The list Kusto databases operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto databases.",
            "items": {
              "$ref": "#/components/schemas/Database"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipal": {
        "description": "A class representing database principal entity.",
        "properties": {
          "appId": {
            "description": "Application id - relevant only for application principal type.",
            "type": "string"
          },
          "email": {
            "description": "Database principal email if exists.",
            "type": "string"
          },
          "fqn": {
            "description": "Database principal fully qualified name.",
            "type": "string"
          },
          "name": {
            "description": "Database principal name.",
            "type": "string"
          },
          "role": {
            "description": "Database principal role.",
            "enum": [
              "Admin",
              "Ingestor",
              "Monitor",
              "User",
              "UnrestrictedViewers",
              "Viewer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabasePrincipalRole"
            }
          },
          "tenantName": {
            "description": "The tenant name of the principal",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Database principal type.",
            "enum": [
              "App",
              "Group",
              "User"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabasePrincipalType"
            }
          }
        },
        "required": [
          "name",
          "role",
          "type"
        ],
        "type": "object"
      },
      "DatabasePrincipalAssignment": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Class representing a database principal assignment.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DatabasePrincipalProperties",
            "description": "The database principal.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DatabasePrincipalAssignmentCheckNameRequest": {
        "description": "A principal assignment check name availability request.",
        "properties": {
          "name": {
            "description": "Principal Assignment resource name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, Microsoft.Kusto/clusters/databases/principalAssignments.",
            "enum": [
              "Microsoft.Kusto/clusters/databases/principalAssignments"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "DatabasePrincipalAssignmentListResult": {
        "description": "The list Kusto database principal assignments operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto database principal assignments.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrincipalAssignment"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipalListRequest": {
        "description": "The list Kusto database principals operation request.",
        "properties": {
          "value": {
            "description": "The list of Kusto database principals.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrincipal"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipalListResult": {
        "description": "The list Kusto database principals operation response.",
        "properties": {
          "value": {
            "description": "The list of Kusto database principals.",
            "items": {
              "$ref": "#/components/schemas/DatabasePrincipal"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DatabasePrincipalProperties": {
        "description": "A class representing database principal property.",
        "properties": {
          "principalId": {
            "description": "The principal ID assigned to the database principal. It can be a user email, application ID, or security group name.",
            "type": "string"
          },
          "principalName": {
            "description": "The principal name",
            "readOnly": true,
            "type": "string"
          },
          "principalType": {
            "description": "Principal type.",
            "enum": [
              "App",
              "Group",
              "User"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrincipalType"
            }
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "role": {
            "description": "Database principal role.",
            "enum": [
              "Admin",
              "Ingestor",
              "Monitor",
              "User",
              "UnrestrictedViewers",
              "Viewer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabasePrincipalRole"
            }
          },
          "tenantId": {
            "description": "The tenant id of the principal",
            "type": "string"
          },
          "tenantName": {
            "description": "The tenant name of the principal",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "principalId",
          "role",
          "principalType"
        ],
        "type": "object"
      },
      "DatabaseStatistics": {
        "description": "A class that contains database statistics information.",
        "properties": {
          "size": {
            "description": "The database size - the total size of compressed data and index in bytes.",
            "type": "number"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "DiagnoseVirtualNetworkResult": {
        "properties": {
          "findings": {
            "description": "The list of network connectivity diagnostic finding",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventGridConnectionProperties": {
        "description": "Class representing the Kusto event grid connection properties.",
        "properties": {
          "consumerGroup": {
            "description": "The event hub consumer group.",
            "type": "string"
          },
          "dataFormat": {
            "$ref": "#/components/schemas/EventGridDataFormat",
            "description": "The data format of the message. Optionally the data format can be added to each message."
          },
          "eventHubResourceId": {
            "description": "The resource ID where the event grid is configured to send events.",
            "type": "string"
          },
          "mappingRuleName": {
            "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.",
            "type": "string"
          },
          "storageAccountResourceId": {
            "description": "The resource ID of the storage account where the data resides.",
            "type": "string"
          },
          "tableName": {
            "description": "The table where the data should be ingested. Optionally the table information can be added to each message.",
            "type": "string"
          }
        },
        "required": [
          "storageAccountResourceId",
          "eventHubResourceId",
          "consumerGroup",
          "tableName",
          "dataFormat"
        ],
        "type": "object"
      },
      "EventGridDataConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnection"
          }
        ],
        "description": "Class representing an Event Grid data connection.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventGridConnectionProperties",
            "description": "The properties of the Event Grid data connection.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "EventGrid"
      },
      "EventGridDataFormat": {
        "description": "The data format of the message. Optionally the data format can be added to each message.",
        "enum": [
          "MULTIJSON",
          "JSON",
          "CSV",
          "TSV",
          "SCSV",
          "SOHSV",
          "PSV",
          "TXT",
          "RAW",
          "SINGLEJSON",
          "AVRO",
          "TSVE",
          "PARQUET",
          "ORC"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "eventGridDataFormat"
        }
      },
      "EventHubConnectionProperties": {
        "description": "Class representing the Kusto event hub connection properties.",
        "properties": {
          "compression": {
            "$ref": "#/components/schemas/Compression",
            "description": "The event hub messages compression type"
          },
          "consumerGroup": {
            "description": "The event hub consumer group.",
            "type": "string"
          },
          "dataFormat": {
            "$ref": "#/components/schemas/EventHubDataFormat",
            "description": "The data format of the message. Optionally the data format can be added to each message."
          },
          "eventHubResourceId": {
            "description": "The resource ID of the event hub to be used to create a data connection.",
            "type": "string"
          },
          "eventSystemProperties": {
            "description": "System properties of the event hub",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "mappingRuleName": {
            "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.",
            "type": "string"
          },
          "tableName": {
            "description": "The table where the data should be ingested. Optionally the table information can be added to each message.",
            "type": "string"
          }
        },
        "required": [
          "eventHubResourceId",
          "consumerGroup"
        ],
        "type": "object"
      },
      "EventHubDataConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnection"
          }
        ],
        "description": "Class representing an event hub data connection.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubConnectionProperties",
            "description": "The Event Hub data connection properties to validate.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "EventHub"
      },
      "EventHubDataFormat": {
        "description": "The data format of the message. Optionally the data format can be added to each message.",
        "enum": [
          "MULTIJSON",
          "JSON",
          "CSV",
          "TSV",
          "SCSV",
          "SOHSV",
          "PSV",
          "TXT",
          "RAW",
          "SINGLEJSON",
          "AVRO",
          "TSVE",
          "PARQUET",
          "ORC"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "eventHubDataFormat"
        }
      },
      "FollowerDatabaseDefinition": {
        "description": "A class representing follower database request.",
        "properties": {
          "attachedDatabaseConfigurationName": {
            "description": "Resource name of the attached database configuration in the follower cluster.",
            "type": "string"
          },
          "clusterResourceId": {
            "description": "Resource id of the cluster that follows a database owned by this cluster.",
            "type": "string"
          },
          "databaseName": {
            "description": "The database name owned by this cluster that was followed. * in case following all databases.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "clusterResourceId",
          "attachedDatabaseConfigurationName"
        ],
        "type": "object"
      },
      "FollowerDatabaseListResult": {
        "description": "The list Kusto database principals operation response.",
        "properties": {
          "value": {
            "description": "The list of follower database result.",
            "items": {
              "$ref": "#/components/schemas/FollowerDatabaseDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Identity": {
        "description": "Identity for the resource.",
        "properties": {
          "principalId": {
            "description": "The principal ID of resource identity.",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant ID of resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type.",
            "enum": [
              "None",
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "IdentityType"
            }
          },
          "userAssignedIdentities": {
            "additionalProperties": {
              "properties": {
                "clientId": {
                  "description": "The client id of user assigned identity.",
                  "readOnly": true,
                  "type": "string"
                },
                "principalId": {
                  "description": "The principal id of user assigned identity.",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "description": "The list of user identities associated with the Kusto cluster. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
            "type": "object"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "IotHubConnectionProperties": {
        "description": "Class representing the Kusto Iot hub connection properties.",
        "properties": {
          "consumerGroup": {
            "description": "The iot hub consumer group.",
            "type": "string"
          },
          "dataFormat": {
            "$ref": "#/components/schemas/IotHubDataFormat",
            "description": "The data format of the message. Optionally the data format can be added to each message."
          },
          "eventSystemProperties": {
            "description": "System properties of the iot hub",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "iotHubResourceId": {
            "description": "The resource ID of the Iot hub to be used to create a data connection.",
            "type": "string"
          },
          "mappingRuleName": {
            "description": "The mapping rule to be used to ingest the data. Optionally the mapping information can be added to each message.",
            "type": "string"
          },
          "sharedAccessPolicyName": {
            "description": "The name of the share access policy",
            "type": "string"
          },
          "tableName": {
            "description": "The table where the data should be ingested. Optionally the table information can be added to each message.",
            "type": "string"
          }
        },
        "required": [
          "iotHubResourceId",
          "consumerGroup",
          "sharedAccessPolicyName"
        ],
        "type": "object"
      },
      "IotHubDataConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnection"
          }
        ],
        "description": "Class representing an iot hub data connection.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IotHubConnectionProperties",
            "description": "The Iot Hub data connection properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IotHub"
      },
      "IotHubDataFormat": {
        "description": "The data format of the message. Optionally the data format can be added to each message.",
        "enum": [
          "MULTIJSON",
          "JSON",
          "CSV",
          "TSV",
          "SCSV",
          "SOHSV",
          "PSV",
          "TXT",
          "RAW",
          "SINGLEJSON",
          "AVRO",
          "TSVE",
          "PARQUET",
          "ORC"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "iotHubDataFormat"
        }
      },
      "KeyVaultProperties": {
        "description": "Properties of the key vault.",
        "properties": {
          "keyName": {
            "description": "The name of the key vault key.",
            "type": "string",
            "x-ms-client-name": "KeyName"
          },
          "keyVaultUri": {
            "description": "The Uri of the key vault.",
            "type": "string",
            "x-ms-client-name": "KeyVaultUri"
          },
          "keyVersion": {
            "description": "The version of the key vault key.",
            "type": "string",
            "x-ms-client-name": "KeyVersion"
          }
        },
        "required": [
          "keyName",
          "keyVersion",
          "keyVaultUri"
        ],
        "type": "object"
      },
      "ListResourceSkusResult": {
        "description": "List of available SKUs for a Kusto Cluster.",
        "properties": {
          "value": {
            "description": "The collection of available SKUs for an existing resource.",
            "items": {
              "$ref": "#/components/schemas/AzureResourceSku"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Operation": {
        "properties": {
          "display": {
            "properties": {
              "description": {
                "title": "The friendly name of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "For example: read, write, delete.",
                "title": "The operation type.",
                "type": "string"
              },
              "provider": {
                "title": "Friendly name of the resource provider.",
                "type": "string"
              },
              "resource": {
                "title": "The resource type on which the operation is performed.",
                "type": "string"
              }
            },
            "title": "The object that describes the operation.",
            "type": "object"
          },
          "name": {
            "description": "This is of the format {provider}/{resource}/{operation}.",
            "title": "The operation name.",
            "type": "string"
          },
          "origin": {
            "title": "The intended executor of the operation.",
            "type": "string"
          },
          "properties": {
            "title": "Properties of the operation.",
            "type": "object",
            "x-ms-client-flatten": true
          }
        },
        "title": "A REST API operation",
        "type": "object"
      },
      "OperationListResult": {
        "properties": {
          "nextLink": {
            "title": "The URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "title": "The list of operations supported by the resource provider.",
            "type": "array"
          }
        },
        "title": "Result of the request to list REST API operations. It contains a list of operations and a URL nextLink to get the next set of results.",
        "type": "object"
      },
      "OptimizedAutoscale": {
        "description": "A class that contains the optimized auto scale definition.",
        "properties": {
          "isEnabled": {
            "description": "A boolean value that indicate if the optimized autoscale feature is enabled or not.",
            "type": "boolean"
          },
          "maximum": {
            "description": "Maximum allowed instances count.",
            "type": "integer"
          },
          "minimum": {
            "description": "Minimum allowed instances count.",
            "type": "integer"
          },
          "version": {
            "description": "The version of the template defined, for instance 1.",
            "type": "integer"
          }
        },
        "required": [
          "version",
          "isEnabled",
          "minimum",
          "maximum"
        ],
        "type": "object"
      },
      "ReadOnlyFollowingDatabase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Database"
          }
        ],
        "description": "Class representing a read only following database.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReadOnlyFollowingDatabaseProperties",
            "description": "The database properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ReadOnlyFollowing"
      },
      "ReadOnlyFollowingDatabaseProperties": {
        "description": "Class representing the Kusto database properties.",
        "properties": {
          "attachedDatabaseConfigurationName": {
            "description": "The name of the attached database configuration cluster",
            "readOnly": true,
            "type": "string"
          },
          "hotCachePeriod": {
            "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
            "format": "duration",
            "type": "string"
          },
          "leaderClusterResourceId": {
            "description": "The name of the leader cluster",
            "readOnly": true,
            "type": "string"
          },
          "principalsModificationKind": {
            "description": "The principals modification kind of the database",
            "enum": [
              "Union",
              "Replace",
              "None"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PrincipalsModificationKind"
            }
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "softDeletePeriod": {
            "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
            "format": "duration",
            "readOnly": true,
            "type": "string"
          },
          "statistics": {
            "$ref": "#/components/schemas/DatabaseStatistics",
            "description": "The statistics of the database.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ReadWriteDatabase": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Database"
          }
        ],
        "description": "Class representing a read write database.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReadWriteDatabaseProperties",
            "description": "The database properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ReadWrite"
      },
      "ReadWriteDatabaseProperties": {
        "description": "Class representing the Kusto database properties.",
        "properties": {
          "hotCachePeriod": {
            "description": "The time the data should be kept in cache for fast queries in TimeSpan.",
            "format": "duration",
            "type": "string"
          },
          "isFollowed": {
            "description": "Indicates whether the database is followed.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioned state of the resource.",
            "enum": [
              "Running",
              "Creating",
              "Deleting",
              "Succeeded",
              "Failed",
              "Moving"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "softDeletePeriod": {
            "description": "The time the data should be kept before it stops being accessible to queries in TimeSpan.",
            "format": "duration",
            "type": "string"
          },
          "statistics": {
            "$ref": "#/components/schemas/DatabaseStatistics",
            "description": "The statistics of the database.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "SkuDescription": {
        "description": "The Kusto SKU description of given resource type",
        "properties": {
          "locationInfo": {
            "description": "Locations and zones",
            "items": {
              "$ref": "#/components/schemas/SkuLocationInfoItem"
            },
            "readOnly": true,
            "type": "array"
          },
          "locations": {
            "description": "The set of locations that the SKU is available",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "The name of the SKU",
            "readOnly": true,
            "type": "string"
          },
          "resourceType": {
            "description": "The resource type",
            "readOnly": true,
            "type": "string"
          },
          "restrictions": {
            "description": "The restrictions because of which SKU cannot be used",
            "items": {
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "tier": {
            "description": "The tier of the SKU",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SkuDescriptionList": {
        "description": "The list of the EngagementFabric SKU descriptions",
        "properties": {
          "value": {
            "description": "SKU descriptions",
            "items": {
              "$ref": "#/components/schemas/SkuDescription"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SkuLocationInfoItem": {
        "description": "The locations and zones info for SKU.",
        "properties": {
          "location": {
            "description": "The available location of the SKU.",
            "type": "string"
          },
          "zones": {
            "description": "The available zone of the SKU.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "TrustedExternalTenant": {
        "description": "Represents a tenant ID that is trusted by the cluster.",
        "properties": {
          "value": {
            "description": "GUID representing an external tenant.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VirtualNetworkConfiguration": {
        "description": "A class that contains virtual network definition.",
        "properties": {
          "dataManagementPublicIpId": {
            "description": "Data management's service public IP address resource id.",
            "type": "string"
          },
          "enginePublicIpId": {
            "description": "Engine service's public IP address resource id.",
            "type": "string"
          },
          "subnetId": {
            "description": "The subnet resource id.",
            "type": "string"
          }
        },
        "required": [
          "subnetId",
          "enginePublicIpId",
          "dataManagementPublicIpId"
        ],
        "type": "object"
      },
      "Zones": {
        "description": "An array represents the availability zones of the cluster.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}