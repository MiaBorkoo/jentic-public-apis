{
  "openapi": "3.0.0",
  "info": {
    "description": "ARM Databricks",
    "title": "DatabricksClient",
    "version": "2018-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/databricks/resource-manager/Microsoft.Databricks/stable/2018-04-01/databricks.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Databricks/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Resource Provider error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Operations": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Databricks/workspaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResult"
                }
              }
            },
            "description": "OK - Returns an array of workspaces."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Gets all the workspaces within a subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Lists workspaces": {
            "$ref": "./examples/WorkspacesListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceListResult"
                }
              }
            },
            "description": "OK - Returns an array of workspaces."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Gets all the workspaces within a resource group.",
        "operationId": "Workspaces_ListByResourceGroup",
        "x-ms-examples": {
          "Lists workspaces": {
            "$ref": "./examples/WorkspacesListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Databricks/workspaces/{workspaceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Deletes the workspace.",
        "operationId": "Workspaces_Delete",
        "x-ms-examples": {
          "Delete a workspace": {
            "$ref": "./examples/WorkspaceDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "OK - Returns the workspace."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Gets the workspace.",
        "operationId": "Workspaces_Get",
        "x-ms-examples": {
          "Get a workspace": {
            "$ref": "./examples/WorkspaceGet.json"
          },
          "Get a workspace with custom parameters": {
            "$ref": "./examples/WorkspaceGetParameters.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "Successfully updated the workspace."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Updates a workspace.",
        "operationId": "Workspaces_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdate"
              }
            }
          },
          "description": "The update to the workspace.",
          "required": true
        },
        "x-ms-examples": {
          "Update a workspace's tags.": {
            "$ref": "./examples/WorkspaceUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "Created - Returns information about the workspace, including provisioning status."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            },
            "description": "Created - Returns information about the workspace, including provisioning status."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Workspaces"
        ],
        "description": "Creates a new workspace.",
        "operationId": "Workspaces_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              }
            }
          },
          "description": "Parameters supplied to the create or update a workspace.",
          "required": true
        },
        "x-ms-examples": {
          "Create a workspace which is ready for Customer-Managed Key (CMK) encryption": {
            "$ref": "./examples/PrepareEncryption.json"
          },
          "Create or update workspace": {
            "$ref": "./examples/WorkspaceCreate.json"
          },
          "Create or update workspace with custom parameters": {
            "$ref": "./examples/WorkspaceCreateWithParameters.json"
          },
          "Enable Customer-Managed Key (CMK) encryption on a workspace which is prepared for encryption": {
            "$ref": "./examples/EnableEncryption.json"
          },
          "Revert Customer-Managed Key (CMK) encryption to Microsoft Managed Keys encryption on a workspace": {
            "$ref": "./examples/DisableEncryption.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for this operation.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ResourceGroupName": {
        "description": "The name of the resource group. The name is case insensitive.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The ID of the target subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "WorkspaceName": {
        "description": "The name of the workspace.",
        "in": "path",
        "name": "workspaceName",
        "required": true,
        "schema": {
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "CreatedBy": {
        "description": "Provides details of the entity that created/updated the workspace.",
        "properties": {
          "applicationId": {
            "description": "The application ID of the application that initiated the creation of the workspace. For example, Azure Portal.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "oid": {
            "description": "The Object ID that created the workspace.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "puid": {
            "description": "The Personal Object ID corresponding to the object ID above",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreatedDateTime": {
        "description": "The date and time stamp when the workspace was created.",
        "format": "date-time",
        "readOnly": true,
        "type": "string"
      },
      "Encryption": {
        "description": "The object that contains details of encryption used on the workspace.",
        "properties": {
          "KeyName": {
            "description": "The name of KeyVault key.",
            "type": "string"
          },
          "keySource": {
            "default": "Default",
            "description": "The encryption keySource (provider). Possible values (case-insensitive):  Default, Microsoft.Keyvault",
            "enum": [
              "Default",
              "Microsoft.Keyvault"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "KeySource"
            }
          },
          "keyvaulturi": {
            "description": "The Uri of KeyVault.",
            "type": "string",
            "x-ms-client-name": "KeyVaultUri"
          },
          "keyversion": {
            "description": "The version of KeyVault key.",
            "type": "string",
            "x-ms-client-name": "KeyVersion"
          }
        },
        "type": "object"
      },
      "ErrorDetail": {
        "properties": {
          "code": {
            "description": "The error's code.",
            "type": "string"
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          },
          "target": {
            "description": "Indicates which property in the request is responsible for the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "Error details.",
        "type": "object"
      },
      "ErrorInfo": {
        "properties": {
          "code": {
            "description": "A machine readable error code.",
            "type": "string"
          },
          "details": {
            "description": "error details.",
            "items": {
              "$ref": "#/components/schemas/ErrorDetail"
            },
            "type": "array",
            "x-ms-identifiers": [
              "message",
              "target"
            ]
          },
          "innererror": {
            "description": "Inner error details if they exist.",
            "type": "string"
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "The code and message for an error.",
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Contains details when the response code indicates an error.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorInfo",
            "description": "The error details."
          }
        },
        "required": [
          "error"
        ],
        "title": "Error response.",
        "type": "object"
      },
      "ManagedIdentityConfiguration": {
        "description": "The Managed Identity details for storage account.",
        "properties": {
          "principalId": {
            "description": "The objectId of the Managed Identity that is linked to the Managed Storage account.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant Id where the Managed Identity is created.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of Identity created. It can be either SystemAssigned or UserAssigned.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "REST API operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.ResourceProvider",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Resource Provider operations supported by the Resource Provider resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "ProvisioningState": {
        "description": "Provisioning status of the workspace.",
        "enum": [
          "Accepted",
          "Running",
          "Ready",
          "Creating",
          "Created",
          "Deleting",
          "Deleted",
          "Canceled",
          "Failed",
          "Succeeded",
          "Updating"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ProvisioningState"
        }
      },
      "Resource": {
        "description": "The core properties of ARM resources",
        "properties": {
          "id": {
            "description": "Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Sku": {
        "description": "SKU for the resource.",
        "properties": {
          "name": {
            "description": "The SKU name.",
            "type": "string"
          },
          "tier": {
            "description": "The SKU tier.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource model definition for a ARM tracked top level resource",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "location": {
            "description": "The geo-location where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "Workspace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "Information about workspace.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkspaceProperties",
            "description": "The workspace properties.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU of the resource."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "WorkspaceCustomBooleanParameter": {
        "description": "The value which should be used for this field.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WorkspaceCustomParameterType",
            "description": "The type of variable that this is"
          },
          "value": {
            "description": "The value which should be used for this field.",
            "type": "boolean"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WorkspaceCustomObjectParameter": {
        "description": "The value which should be used for this field.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WorkspaceCustomParameterType",
            "description": "The type of variable that this is"
          },
          "value": {
            "description": "The value which should be used for this field.",
            "type": "object"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WorkspaceCustomParameterType": {
        "description": "Provisioning status of the workspace.",
        "enum": [
          "Bool",
          "Object",
          "String"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "CustomParameterType"
        }
      },
      "WorkspaceCustomParameters": {
        "description": "Custom Parameters used for Cluster Creation.",
        "properties": {
          "amlWorkspaceId": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "The ID of a Azure Machine Learning workspace to link with Databricks workspace"
          },
          "customPrivateSubnetName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "The name of the Private Subnet within the Virtual Network"
          },
          "customPublicSubnetName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "The name of a Public Subnet within the Virtual Network"
          },
          "customVirtualNetworkId": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "The ID of a Virtual Network where this Databricks Cluster should be created"
          },
          "enableNoPublicIp": {
            "$ref": "#/components/schemas/WorkspaceCustomBooleanParameter",
            "description": "Should the Public IP be Disabled?"
          },
          "encryption": {
            "$ref": "#/components/schemas/WorkspaceEncryptionParameter",
            "description": "Contains the encryption details for Customer-Managed Key (CMK) enabled workspace."
          },
          "loadBalancerBackendPoolName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Name of the outbound Load Balancer Backend Pool for Secure Cluster Connectivity (No Public IP)."
          },
          "loadBalancerId": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Resource URI of Outbound Load balancer for Secure Cluster Connectivity (No Public IP) workspace."
          },
          "natGatewayName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets."
          },
          "prepareEncryption": {
            "$ref": "#/components/schemas/WorkspaceCustomBooleanParameter",
            "description": "Prepare the workspace for encryption. Enables the Managed Identity for managed storage account."
          },
          "publicIpName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Name of the Public IP for No Public IP workspace with managed vNet."
          },
          "requireInfrastructureEncryption": {
            "$ref": "#/components/schemas/WorkspaceCustomBooleanParameter",
            "description": "A boolean indicating whether or not the DBFS root file system will be enabled with secondary layer of encryption with platform managed keys for data at rest."
          },
          "resourceTags": {
            "$ref": "#/components/schemas/WorkspaceCustomObjectParameter",
            "description": "Tags applied to resources under Managed resource group. These can be updated by updating tags at workspace level.",
            "readOnly": true
          },
          "storageAccountName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Default DBFS storage account name."
          },
          "storageAccountSkuName": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Storage account SKU name, ex: Standard_GRS, Standard_LRS. Refer https://aka.ms/storageskus for valid inputs."
          },
          "vnetAddressPrefix": {
            "$ref": "#/components/schemas/WorkspaceCustomStringParameter",
            "description": "Address prefix for Managed virtual network. Default value for this input is 10.139."
          }
        },
        "type": "object"
      },
      "WorkspaceCustomStringParameter": {
        "description": "The Value.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WorkspaceCustomParameterType",
            "description": "The type of variable that this is"
          },
          "value": {
            "description": "The value which should be used for this field.",
            "type": "string"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WorkspaceEncryptionParameter": {
        "description": "The object that contains details of encryption used on the workspace.",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/WorkspaceCustomParameterType",
            "description": "The type of variable that this is"
          },
          "value": {
            "$ref": "#/components/schemas/Encryption",
            "description": "The value which should be used for this field."
          }
        },
        "type": "object"
      },
      "WorkspaceListResult": {
        "description": "List of workspaces.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The array of workspaces.",
            "items": {
              "$ref": "#/components/schemas/Workspace"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkspaceProperties": {
        "description": "The workspace properties.",
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/WorkspaceCustomParameters",
            "description": "The workspace's custom parameters."
          },
          "authorizations": {
            "description": "The workspace provider authorizations.",
            "items": {
              "$ref": "#/components/schemas/WorkspaceProviderAuthorization"
            },
            "type": "array",
            "x-ms-identifiers": [
              "roleDefinitionId",
              "principalId"
            ]
          },
          "createdBy": {
            "$ref": "#/components/schemas/CreatedBy",
            "description": "Indicates the Object ID, PUID and Application ID of entity that created the workspace."
          },
          "createdDateTime": {
            "$ref": "#/components/schemas/CreatedDateTime",
            "description": "Specifies the date and time when the workspace is created."
          },
          "managedResourceGroupId": {
            "description": "The managed resource group Id.",
            "type": "string"
          },
          "provisioningState": {
            "$ref": "#/components/schemas/ProvisioningState",
            "description": "The workspace provisioning state.",
            "readOnly": true
          },
          "storageAccountIdentity": {
            "$ref": "#/components/schemas/ManagedIdentityConfiguration",
            "description": "The details of Managed Identity of Storage Account"
          },
          "uiDefinitionUri": {
            "description": "The blob URI where the UI definition file is located.",
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/CreatedBy",
            "description": "Indicates the Object ID, PUID and Application ID of entity that last updated the workspace."
          },
          "workspaceId": {
            "description": "The unique identifier of the databricks workspace in databricks control plane.",
            "readOnly": true,
            "type": "string"
          },
          "workspaceUrl": {
            "description": "The workspace URL which is of the format 'adb-{workspaceId}.{random}.azuredatabricks.net'",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "managedResourceGroupId"
        ],
        "type": "object"
      },
      "WorkspaceProviderAuthorization": {
        "description": "The workspace provider authorization.",
        "properties": {
          "principalId": {
            "description": "The provider's principal identifier. This is the identity that the provider will use to call ARM to manage the workspace resources.",
            "format": "uuid",
            "type": "string"
          },
          "roleDefinitionId": {
            "description": "The provider's role definition identifier. This role will define all the permissions that the provider must have on the workspace's container resource group. This role definition cannot have permission to delete the resource group.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "principalId",
          "roleDefinitionId"
        ],
        "type": "object"
      },
      "WorkspaceUpdate": {
        "description": "An update to a workspace.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}