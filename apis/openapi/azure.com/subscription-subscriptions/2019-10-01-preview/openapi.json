{
  "openapi": "3.0.0",
  "info": {
    "description": "Subscription client provides an interface to create and manage Azure subscriptions programmatically.",
    "title": "SubscriptionClient",
    "version": "2019-10-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/subscription/resource-manager/Microsoft.Subscription/preview/2019-10-01-preview/subscriptions.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/providers/Microsoft.Subscription/createSubscription": {
      "post": {
        "parameters": [
          {
            "description": "The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.",
            "in": "path",
            "name": "billingAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the billing profile in the billing account for which you want to create the subscription.",
            "in": "path",
            "name": "billingProfileName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the invoice section in the billing account for which you want to create the subscription.",
            "in": "path",
            "name": "invoiceSectionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreationResult"
                }
              }
            },
            "description": "Normal response for a successful query. The response body will contain the data that matches the filters specified in the query parameters."
          },
          "202": {
            "description": "Accepted. Subscription creation is in progress.",
            "headers": {
              "Location": {
                "description": "GET this URL to retrieve the status of the asynchronous operation.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "The operation to create a new WebDirect or EA Azure subscription.",
        "operationId": "Subscription_CreateSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModernSubscriptionCreationParameters"
              }
            }
          },
          "description": "The subscription creation parameters.",
          "required": true
        },
        "x-ms-examples": {
          "createSubscription": {
            "$ref": "./examples/createSubscription.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/providers/Microsoft.Subscription/createSubscription": {
      "post": {
        "parameters": [
          {
            "description": "The name of the Microsoft Customer Agreement billing account for which you want to create the subscription.",
            "in": "path",
            "name": "billingAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the customer.",
            "in": "path",
            "name": "customerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreationResult"
                }
              }
            },
            "description": "Normal response for a successful query. The response body will contain the data that matches the filters specified in the query parameters."
          },
          "202": {
            "description": "Accepted. Subscription creation is in progress.",
            "headers": {
              "Location": {
                "description": "GET this URL to retrieve the status of the asynchronous operation.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "The operation to create a new CSP subscription.",
        "operationId": "Subscription_CreateCspSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModernCspSubscriptionCreationParameters"
              }
            }
          },
          "description": "The subscription creation parameters.",
          "required": true
        },
        "x-ms-examples": {
          "createSubscription": {
            "$ref": "./examples/createCspSubscription.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountName}/providers/Microsoft.Subscription/createSubscription": {
      "post": {
        "parameters": [
          {
            "description": "The name of the enrollment account to which the subscription will be billed.",
            "in": "path",
            "name": "enrollmentAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreationResult"
                }
              }
            },
            "description": "Normal response for a successful query. The response body will contain the data that matches the filters specified in the query parameters."
          },
          "202": {
            "description": "Accepted. Subscription creation is in progress.",
            "headers": {
              "Location": {
                "description": "GET this URL to retrieve the status of the asynchronous operation.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Creates an Azure subscription",
        "operationId": "Subscription_CreateSubscriptionInEnrollmentAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreationParameters"
              }
            }
          },
          "description": "The subscription creation parameters.",
          "required": true
        },
        "x-ms-examples": {
          "createSubscription": {
            "$ref": "./examples/createLegacySubscription.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Subscription/aliases": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAliasListResult"
                }
              }
            },
            "description": "Subscription details."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get Alias Subscription.",
        "operationId": "Subscription_ListAlias",
        "x-ms-examples": {
          "GetAlias": {
            "$ref": "./examples/listAlias.json"
          }
        }
      }
    },
    "/providers/Microsoft.Subscription/aliases/{aliasName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/aliasNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the alias"
          },
          "204": {
            "description": "Alias does not exist"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Delete Alias.",
        "operationId": "Subscription_DeleteAlias",
        "x-ms-examples": {
          "DeleteAlias": {
            "$ref": "./examples/deleteAlias.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/aliasNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAliasResponse"
                }
              }
            },
            "description": "Subscription details."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Get Alias Subscription.",
        "operationId": "Subscription_GetAlias",
        "x-ms-examples": {
          "GetAlias": {
            "$ref": "./examples/getAlias.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/aliasNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAliasResponse"
                }
              }
            },
            "description": "Normal response for a successful query."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutAliasResponse"
                }
              }
            },
            "description": "Accepted. Subscription creation is in progress."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponseBody"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Create Alias Subscription.",
        "operationId": "Subscription_CreateAlias",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutAliasRequest"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "CreateAlias": {
            "$ref": "./examples/createAlias.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Subscription/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Lists all of the available Microsoft.Subscription API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "getOperations": {
            "$ref": "./examples/getOperations.json"
          }
        }
      }
    },
    "/providers/Microsoft.Subscription/subscriptionOperations/{operationId}": {
      "get": {
        "parameters": [
          {
            "description": "The operation ID, which can be found from the Location field in the generate recommendation response header.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCreationResult"
                }
              }
            },
            "description": "Successful completion of the asynchronous operation"
          },
          "202": {
            "description": "Accepted. Subscription update is in progress.",
            "headers": {
              "Location": {
                "description": "The URL where the status of the asynchronous operation can be checked.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "description": "Get the status of the pending Microsoft.Subscription API operations.",
        "operationId": "SubscriptionOperation_Get",
        "x-ms-examples": {
          "getPendingSubscriptionOperations": {
            "$ref": "./examples/getSubscriptionOperation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CanceledSubscriptionId"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Describes the error if the operation is not successful."
          }
        },
        "description": "The operation to cancel a subscription",
        "operationId": "Subscription_Cancel",
        "x-ms-examples": {
          "cancelSubscription": {
            "$ref": "./examples/cancelSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/enable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnabledSubscriptionId"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Describes the error if the operation is not successful."
          }
        },
        "description": "The operation to enable a subscription",
        "operationId": "Subscription_Enable",
        "x-ms-examples": {
          "enableSubscription": {
            "$ref": "./examples/enableSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Subscription/rename": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenamedSubscriptionId"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Describes the error if the operation is not successful."
          }
        },
        "description": "The operation to rename a subscription",
        "operationId": "Subscription_Rename",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionName"
              }
            }
          },
          "description": "Subscription Name",
          "required": true
        },
        "x-ms-examples": {
          "renameSubscription": {
            "$ref": "./examples/renameSubscription.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "aliasNameParameter": {
        "description": "Name for this subscription creation request also known as alias. Note that this is not the same as subscription name and this doesn\u2019t have any other lifecycle need beyond the request for subscription creation.",
        "in": "path",
        "name": "aliasName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. Current version is 2019-10-01-preview",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subscriptionIdParameter": {
        "description": "Subscription Id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AdPrincipal": {
        "description": "Active Directory Principal who\u2019ll get owner access on the new subscription.",
        "properties": {
          "objectId": {
            "description": "Object id of the Principal",
            "type": "string"
          }
        },
        "required": [
          "objectId"
        ],
        "type": "object"
      },
      "CanceledSubscriptionId": {
        "description": "The ID of the canceled subscription",
        "properties": {
          "value": {
            "description": "The ID of the canceled subscription",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EnabledSubscriptionId": {
        "description": "The ID of the subscriptions that is being enabled",
        "properties": {
          "value": {
            "description": "The ID of the subscriptions that is being enabled",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Describes the format of Error response.",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponseBody": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorResponse",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "ModernCspSubscriptionCreationParameters": {
        "description": "The parameters required to create a new CSP subscription.",
        "properties": {
          "displayName": {
            "description": "The friendly name of the subscription.",
            "type": "string"
          },
          "resellerId": {
            "description": "Reseller ID, basically MPN Id.",
            "type": "string"
          },
          "skuId": {
            "description": "The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "skuId"
        ],
        "type": "object"
      },
      "ModernSubscriptionCreationParameters": {
        "description": "The parameters required to create a new subscription.",
        "properties": {
          "additionalParameters": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Additional, untyped parameters to support custom subscription creation scenarios.",
            "type": "object"
          },
          "costCenter": {
            "description": "If set, the cost center will show up on the Azure usage and charges file.",
            "type": "string"
          },
          "displayName": {
            "description": "The friendly name of the subscription.",
            "type": "string"
          },
          "managementGroupId": {
            "description": "The identifier of the management group to which this subscription will be associated.",
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/AdPrincipal",
            "description": "If specified, the AD principal will get owner access to the subscription, along with the user who is performing the create subscription operation"
          },
          "skuId": {
            "description": "The SKU ID of the Azure plan. Azure plan determines the pricing and service-level agreement of the subscription.  Use 001 for Microsoft Azure Plan and 002 for Microsoft Azure Plan for DevTest.",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "skuId"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "REST API operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Subscription",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PutAliasListResult": {
        "description": "The list of aliases.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of alias.",
            "items": {
              "$ref": "#/components/schemas/PutAliasResponse"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PutAliasRequest": {
        "description": "The parameters required to create a new subscription.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PutAliasRequestProperties",
            "description": "Put alias request properties."
          }
        },
        "type": "object"
      },
      "PutAliasRequestProperties": {
        "description": "Put subscription properties.",
        "properties": {
          "billingScope": {
            "description": "Determines whether subscription is fieldLed, partnerLed or LegacyEA",
            "type": "string"
          },
          "displayName": {
            "description": "The friendly name of the subscription.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "This parameter can be used to create alias for existing subscription Id",
            "type": "string"
          },
          "workload": {
            "description": "The workload type of the subscription. It can be either Production or DevTest.",
            "enum": [
              "Production",
              "DevTest"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "workload"
            }
          }
        },
        "required": [
          "displayName",
          "workload",
          "billingScope"
        ],
        "type": "object"
      },
      "PutAliasResponse": {
        "description": "Subscription Information with the alias.",
        "properties": {
          "id": {
            "description": "Fully qualified ID for the alias resource.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Alias ID.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PutAliasResponseProperties",
            "description": "Put Alias response properties."
          },
          "type": {
            "description": "Resource type, Microsoft.Subscription/aliases.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "PutAliasResponseProperties": {
        "description": "Put subscription creation result properties.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state of the resource.",
            "enum": [
              "Accepted",
              "Succeeded",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProvisioningState"
            }
          },
          "subscriptionId": {
            "description": "Newly created subscription Id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RenamedSubscriptionId": {
        "description": "The ID of the subscriptions that is being renamed",
        "properties": {
          "value": {
            "description": "The ID of the subscriptions that is being renamed",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionCreationParameters": {
        "description": "Subscription Creation Parameters required to create a new Azure subscription.",
        "properties": {
          "additionalParameters": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Additional, untyped parameters to support custom subscription creation scenarios.",
            "type": "object"
          },
          "displayName": {
            "description": "The display name of the subscription.",
            "type": "string"
          },
          "managementGroupId": {
            "description": "The Management Group Id.",
            "type": "string"
          },
          "offerType": {
            "description": "The offer type of the subscription. For example, MS-AZR-0017P (EnterpriseAgreement) and MS-AZR-0148P (EnterpriseAgreement devTest) are available. Only valid when creating a subscription in a enrollment account scope.",
            "enum": [
              "MS-AZR-0017P",
              "MS-AZR-0148P"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "offerType"
            }
          },
          "owners": {
            "description": "The list of principals that should be granted Owner access on the subscription. Principals should be of type User, Service Principal or Security Group.",
            "items": {
              "$ref": "#/components/schemas/AdPrincipal"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubscriptionCreationResult": {
        "description": "The created subscription object.",
        "properties": {
          "subscriptionLink": {
            "description": "The link to the new subscription. Use this link to check the status of subscription creation operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionName": {
        "description": "The new name of the subscription.",
        "properties": {
          "subscriptionName": {
            "description": "New subscription name",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}