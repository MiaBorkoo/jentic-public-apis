{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "title": "SqlManagementClient",
    "version": "2017-03-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/managedInstanceAdministrators.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ManagedInstanceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedInstanceAdministratorListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of managed instance administrators."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "ManagedInstanceAdministrators"
        ],
        "description": "Gets a list of managed instance administrators.",
        "operationId": "ManagedInstanceAdministrators_ListByInstance",
        "x-ms-examples": {
          "List administrators of managed instance": {
            "$ref": "./examples/ManagedInstanceAdministratorListByInstance.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ManagedInstanceNameParameter"
          },
          {
            "description": "The administrator name.",
            "in": "path",
            "name": "administratorName",
            "required": true,
            "schema": {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "AdministratorName"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the managed instance administrator."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidManagedServerAdministratorType - Invalid administrator type specified in properties.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 PrincipalNotFoundInTenant - AzureAD Lookup returned no results for this name.\n\n * 400 ManagedInstanceIsBusy - Managed Instance is busy with another request.\n\n * 400 InvalidPrincipalType - This principal type is not supported in Windows Azure SQL Database.\n\n * 400 TenantNotFoundInActiveDirectory - Tenant is not available in active directory.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActiveDirectoryLookupTimedOut - The operation could not be completed at this time. Please try again later.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "ManagedInstanceAdministrators"
        ],
        "description": "Deletes a managed instance administrator.",
        "operationId": "ManagedInstanceAdministrators_Delete",
        "x-ms-examples": {
          "Delete administrator of managed instance": {
            "$ref": "./examples/ManagedInstanceAdministratorDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ManagedInstanceNameParameter"
          },
          {
            "description": "The administrator name.",
            "in": "path",
            "name": "administratorName",
            "required": true,
            "schema": {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "AdministratorName"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedInstanceAdministrator"
                }
              }
            },
            "description": "Successfully retrieved the specified managed instance administrator."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidManagedServerAdministratorType - Invalid administrator type specified in properties.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "ManagedInstanceAdministrators"
        ],
        "description": "Gets a managed instance administrator.",
        "operationId": "ManagedInstanceAdministrators_Get",
        "x-ms-examples": {
          "Get administrator of managed instance": {
            "$ref": "./examples/ManagedInstanceAdministratorGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/ManagedInstanceNameParameter"
          },
          {
            "description": "The requested administrator name.",
            "in": "path",
            "name": "administratorName",
            "required": true,
            "schema": {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "AdministratorName"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedInstanceAdministrator"
                }
              }
            },
            "description": "Successfully updated the managed instance administrator."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagedInstanceAdministrator"
                }
              }
            },
            "description": "Successfully created the managed instance administrator."
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 SubscriptionNotFound - The requested subscription was not found.\n\n * 400 InvalidManagedServerAdministratorType - Invalid administrator type specified in properties.\n\n * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.\n\n * 400 InvalidParameterValue - An invalid value was given to a parameter.\n\n * 400 InvalidLoginName - The provided login name is invalid.\n\n * 400 PrincipalNotFoundInTenant - AzureAD Lookup returned no results for this name.\n\n * 400 ManagedInstanceIsBusy - Managed Instance is busy with another request.\n\n * 400 InvalidPrincipalType - This principal type is not supported in Windows Azure SQL Database.\n\n * 400 TenantNotFoundInActiveDirectory - Tenant is not available in active directory.\n\n * 400 InvalidUsername - Supplied user name contains invalid characters.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 ManagedInstanceNotInSubscriptionResourceGroup - Specified managed instance does not exist in the specified resource group and subscription.\n\n * 404 OperationIdNotFound - The operation with Id does not exist.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 409 OperationCancelled - The operation has been cancelled by user.\n\n * 409 OperationInterrupted - The operation on the resource could not be completed because it was interrupted by another operation on the same resource.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 OperationTimedOut - The operation timed out and automatically rolled back. Please retry the operation.\n\n * 500 ActiveDirectoryLookupTimedOut - The operation could not be completed at this time. Please try again later.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
          }
        },
        "tags": [
          "ManagedInstanceAdministrators"
        ],
        "description": "Creates or updates a managed instance administrator.",
        "operationId": "ManagedInstanceAdministrators_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagedInstanceAdministrator"
              }
            }
          },
          "description": "The requested administrator parameters.",
          "required": true
        },
        "x-ms-examples": {
          "Create administrator of managed instance": {
            "$ref": "./examples/ManagedInstanceAdministratorCreate.json"
          },
          "Update administrator of managed instance": {
            "$ref": "./examples/ManagedInstanceAdministratorUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "BlobAuditingPolicyNameParameter": {
        "description": "The name of the blob auditing policy.",
        "in": "path",
        "name": "blobAuditingPolicyName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ManagedInstanceNameParameter": {
        "description": "The name of the managed instance.",
        "in": "path",
        "name": "managedInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineContainerNameParameter": {
        "description": "The name of the SqlVirtualMachineContainer.",
        "in": "path",
        "name": "sqlVirtualMachineContainerName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineInstanceNameParameter": {
        "description": "The name of the SqlVirtualMachineInstance.",
        "in": "path",
        "name": "sqlVirtualMachineInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "VirtualClusterNameParameter": {
        "description": "The name of the virtual cluster.",
        "in": "path",
        "name": "virtualClusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "ManagedInstanceAdministrator": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "An Azure SQL managed instance administrator.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ManagedInstanceAdministratorProperties",
            "description": "Resource properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ManagedInstanceAdministratorListResult": {
        "description": "A list of managed instance administrators.",
        "properties": {
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of results.",
            "items": {
              "$ref": "#/components/schemas/ManagedInstanceAdministrator"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedInstanceAdministratorProperties": {
        "description": "The properties of a managed instance administrator.",
        "properties": {
          "administratorType": {
            "description": "Type of the managed instance administrator.",
            "enum": [
              "ActiveDirectory"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ManagedInstanceAdministratorType"
            }
          },
          "login": {
            "description": "Login name of the managed instance administrator.",
            "type": "string"
          },
          "sid": {
            "description": "SID (object ID) of the managed instance administrator.",
            "format": "uuid",
            "type": "string"
          },
          "tenantId": {
            "description": "Tenant ID of the managed instance administrator.",
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "administratorType",
          "login",
          "sid"
        ],
        "type": "object"
      },
      "ProxyResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "ARM proxy resource.",
        "properties": {},
        "type": "object"
      },
      "Resource": {
        "description": "ARM resource.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": []
    }
  ]
}