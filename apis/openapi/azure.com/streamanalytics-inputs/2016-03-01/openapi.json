{
  "openapi": "3.0.0",
  "info": {
    "title": "StreamAnalyticsManagementClient",
    "version": "2016-03-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/streamanalytics/resource-manager/Microsoft.StreamAnalytics/stable/2016-03-01/inputs.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs": {
      "get": {
        "parameters": [
          {
            "description": "The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.",
            "in": "query",
            "name": "$select",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InputListResult"
                }
              }
            },
            "description": "Successfully listed the inputs under the specified streaming job."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Lists all of the inputs under the specified streaming job.",
        "operationId": "Inputs_ListByStreamingJob",
        "x-ms-examples": {
          "List all inputs in a streaming job": {
            "$ref": "./examples/Input_ListByStreamingJob.json"
          },
          "List all inputs in a streaming job and include diagnostic information using the $select OData query parameter": {
            "$ref": "./examples/Input_ListByStreamingJob_Diagnostics.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/components/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The input was successfully deleted."
          },
          "204": {
            "description": "The input does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Deletes an input from the streaming job.",
        "operationId": "Inputs_Delete",
        "x-ms-examples": {
          "Delete an input": {
            "$ref": "./examples/Input_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/components/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Input"
                }
              }
            },
            "description": "Successfully retrieved the specified input.",
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Gets details about the specified input.",
        "operationId": "Inputs_Get",
        "x-ms-examples": {
          "Get a reference blob input with CSV serialization": {
            "$ref": "./examples/Input_Get_Reference_Blob_CSV.json"
          },
          "Get a stream Event Hub input with JSON serialization": {
            "$ref": "./examples/Input_Get_Stream_EventHub_JSON.json"
          },
          "Get a stream IoT Hub input with Avro serialization": {
            "$ref": "./examples/Input_Get_Stream_IoTHub_Avro.json"
          },
          "Get a stream blob input with CSV serialization": {
            "$ref": "./examples/Input_Get_Stream_Blob_CSV.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-client-name": "IfMatch"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/components/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Input"
                }
              }
            },
            "description": "The input was successfully updated.",
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Updates an existing input under an existing streaming job. This can be used to partially update (ie. update one or two properties) an input without affecting the rest the job or input definition.",
        "operationId": "Inputs_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          },
          "description": "An Input object. The properties specified here will overwrite the corresponding properties in the existing input (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing input will remain the same and not change as a result of this PATCH operation.",
          "required": true
        },
        "x-ms-examples": {
          "Update a reference blob input": {
            "$ref": "./examples/Input_Update_Reference_Blob.json"
          },
          "Update a stream Event Hub input": {
            "$ref": "./examples/Input_Update_Stream_EventHub.json"
          },
          "Update a stream IoT Hub input": {
            "$ref": "./examples/Input_Update_Stream_IoTHub.json"
          },
          "Update a stream blob input": {
            "$ref": "./examples/Input_Update_Stream_Blob.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The ETag of the input. Omit this value to always overwrite the current input. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.",
            "in": "header",
            "name": "If-Match",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-client-name": "IfMatch"
          },
          {
            "description": "Set to '*' to allow a new input to be created, but to prevent updating an existing input. Other values will result in a 412 Pre-condition Failed response.",
            "in": "header",
            "name": "If-None-Match",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-client-name": "IfNoneMatch"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/components/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Input"
                }
              }
            },
            "description": "The input was successfully created or replaced.",
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Input"
                }
              }
            },
            "description": "The input was successfully created or replaced.",
            "headers": {
              "ETag": {
                "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Creates an input or replaces an already existing input under an existing streaming job.",
        "operationId": "Inputs_CreateOrReplace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          },
          "description": "The definition of the input that will be used to create a new input or replace the existing one under the streaming job.",
          "required": true
        },
        "x-ms-examples": {
          "Create a reference blob input with CSV serialization": {
            "$ref": "./examples/Input_Create_Reference_Blob_CSV.json"
          },
          "Create a stream Event Hub input with JSON serialization": {
            "$ref": "./examples/Input_Create_Stream_EventHub_JSON.json"
          },
          "Create a stream IoT Hub input with Avro serialization": {
            "$ref": "./examples/Input_Create_Stream_IoTHub_Avro.json"
          },
          "Create a stream blob input with CSV serialization": {
            "$ref": "./examples/Input_Create_Stream_Blob_CSV.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/inputs/{inputName}/test": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/StreamingJobNameParameter"
          },
          {
            "$ref": "#/components/parameters/InputNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceTestStatus"
                }
              }
            },
            "description": "The test operation completed successfully."
          },
          "202": {
            "description": "The test request was successfully initiated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../common/v1/definitions.json#/definitions/Error"
                }
              }
            },
            "description": "Error."
          }
        },
        "tags": [
          "Inputs"
        ],
        "description": "Tests whether an input\u2019s datasource is reachable and usable by the Azure Stream Analytics service.",
        "operationId": "Inputs_Test",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Input"
              }
            }
          },
          "description": "If the input specified does not already exist, this parameter must contain the full input definition intended to be tested. If the input specified already exists, this parameter can be left null to test the existing input as is or if specified, the properties specified will overwrite the corresponding properties in the existing input (exactly like a PATCH operation) and the resulting input will be tested."
        },
        "x-ms-examples": {
          "Test the connection for an input": {
            "$ref": "./examples/Input_Test.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "InputNameParameter": {
        "description": "The name of the input.",
        "in": "path",
        "name": "inputName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "StreamingJobNameParameter": {
        "description": "The name of the streaming job.",
        "in": "path",
        "name": "jobName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AvroSerialization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Serialization"
          }
        ],
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output in Avro format.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AvroSerializationProperties",
            "description": "The properties that are associated with the Avro serialization type. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Avro"
      },
      "AvroSerializationProperties": {
        "description": "The properties that are associated with the Avro serialization type.",
        "properties": {},
        "type": "object"
      },
      "BlobDataSourceProperties": {
        "description": "The properties that are associated with a blob data source.",
        "properties": {
          "container": {
            "description": "The name of a container within the associated Storage account. This container contains either the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "dateFormat": {
            "description": "The date format. Wherever {date} appears in pathPattern, the value of this property is used as the date format instead.",
            "type": "string"
          },
          "pathPattern": {
            "description": "The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more detailed explanation and example.",
            "type": "string"
          },
          "storageAccounts": {
            "description": "A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.",
            "items": {
              "$ref": "#/components/schemas/StorageAccount"
            },
            "type": "array"
          },
          "timeFormat": {
            "description": "The time format. Wherever {time} appears in pathPattern, the value of this property is used as the time format instead.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BlobReferenceInputDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReferenceInputDataSource"
          }
        ],
        "description": "Describes a blob input data source that contains reference data.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobReferenceInputDataSourceProperties",
            "description": "The properties that are associated with a blob input containing reference data. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Storage/Blob"
      },
      "BlobReferenceInputDataSourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BlobDataSourceProperties"
          }
        ],
        "description": "The properties that are associated with a blob input containing reference data.",
        "properties": {},
        "type": "object"
      },
      "BlobStreamInputDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamInputDataSource"
          }
        ],
        "description": "Describes a blob input data source that contains stream data.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BlobStreamInputDataSourceProperties",
            "description": "The properties that are associated with a blob input containing stream data. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Storage/Blob"
      },
      "BlobStreamInputDataSourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BlobDataSourceProperties"
          }
        ],
        "description": "The properties that are associated with a blob input containing stream data.",
        "properties": {
          "sourcePartitionCount": {
            "description": "The partition count of the blob input data source. Range 1 - 1024.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CsvSerialization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Serialization"
          }
        ],
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output in CSV format.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CsvSerializationProperties",
            "description": "The properties that are associated with the CSV serialization type. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Csv"
      },
      "CsvSerializationProperties": {
        "description": "The properties that are associated with the CSV serialization type.",
        "properties": {
          "encoding": {
            "$ref": "#/components/schemas/Encoding",
            "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests."
          },
          "fieldDelimiter": {
            "description": "Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list of supported values. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiagnosticCondition": {
        "description": "Condition applicable to the resource, or to the job overall, that warrant customer attention.",
        "properties": {
          "code": {
            "description": "The opaque diagnostic code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The human-readable message describing the condition in detail. Localized in the Accept-Language of the client request.",
            "readOnly": true,
            "type": "string"
          },
          "since": {
            "description": "The UTC timestamp of when the condition started. Customers should be able to find a corresponding event in the ops log around this time.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Diagnostics": {
        "description": "Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.",
        "properties": {
          "conditions": {
            "description": "A collection of zero or more conditions applicable to the resource, or to the job overall, that warrant customer attention.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticCondition"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Encoding": {
        "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output.",
        "enum": [
          "UTF8"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "Encoding"
        }
      },
      "ErrorResponse": {
        "description": "Describes the error that occurred.",
        "properties": {
          "code": {
            "description": "Error code associated with the error that occurred.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Describes the error in detail.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventHubDataSourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceBusDataSourceProperties"
          }
        ],
        "description": "The common properties that are associated with Event Hub data sources.",
        "properties": {
          "eventHubName": {
            "description": "The name of the Event Hub. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventHubStreamInputDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamInputDataSource"
          }
        ],
        "description": "Describes an Event Hub input data source that contains stream data.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubStreamInputDataSourceProperties",
            "description": "The properties that are associated with an Event Hub input containing stream data. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.ServiceBus/EventHub"
      },
      "EventHubStreamInputDataSourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventHubDataSourceProperties"
          }
        ],
        "description": "The properties that are associated with a Event Hub input containing stream data.",
        "properties": {
          "consumerGroupName": {
            "description": "The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not specified, the input uses the Event Hub\u2019s default consumer group.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventSerializationType": {
        "description": "Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests.",
        "enum": [
          "Csv",
          "Avro",
          "Json"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EventSerializationType"
        }
      },
      "Input": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "An input object, containing all information associated with the named input. All inputs are contained under a streaming job.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/InputProperties",
            "description": "The properties that are associated with an input. Required on PUT (CreateOrReplace) requests."
          }
        },
        "type": "object"
      },
      "InputListResult": {
        "description": "Object containing a list of inputs under a streaming job.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "A list of inputs under a streaming job. Populated by a 'List' operation.",
            "items": {
              "$ref": "#/components/schemas/Input"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "InputProperties": {
        "description": "The properties that are associated with an input.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "diagnostics": {
            "$ref": "#/components/schemas/Diagnostics",
            "description": "Describes conditions applicable to the Input, Output, or the job overall, that warrant customer attention.",
            "readOnly": true
          },
          "etag": {
            "description": "The current entity tag for the input. This is an opaque string. You can use it to detect whether the resource has changed between requests. You can also use it in the If-Match or If-None-Match headers for write operations for optimistic concurrency.",
            "readOnly": true,
            "type": "string"
          },
          "serialization": {
            "$ref": "#/components/schemas/Serialization",
            "description": "Describes how data from an input is serialized or how data is serialized when written to an output. Required on PUT (CreateOrReplace) requests."
          },
          "type": {
            "description": "Indicates whether the input is a source of reference data or stream data. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "IoTHubStreamInputDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamInputDataSource"
          }
        ],
        "description": "Describes an IoT Hub input data source that contains stream data.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IoTHubStreamInputDataSourceProperties",
            "description": "The properties that are associated with an IoT Hub input containing stream data. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Devices/IotHubs"
      },
      "IoTHubStreamInputDataSourceProperties": {
        "description": "The properties that are associated with a IoT Hub input containing stream data.",
        "properties": {
          "consumerGroupName": {
            "description": "The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If not specified, the input uses the Iot Hub\u2019s default consumer group.",
            "type": "string"
          },
          "endpoint": {
            "description": "The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents, etc.).",
            "type": "string"
          },
          "iotHubNamespace": {
            "description": "The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "sharedAccessPolicyKey": {
            "description": "The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "sharedAccessPolicyName": {
            "description": "The shared access policy name for the IoT Hub. This policy must contain at least the Service connect permission. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JsonOutputSerializationFormat": {
        "description": "Specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects.",
        "enum": [
          "LineSeparated",
          "Array"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "JsonOutputSerializationFormat"
        }
      },
      "JsonSerialization": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Serialization"
          }
        ],
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output in JSON format.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/JsonSerializationProperties",
            "description": "The properties that are associated with the JSON serialization type. Required on PUT (CreateOrReplace) requests.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Json"
      },
      "JsonSerializationProperties": {
        "description": "The properties that are associated with the JSON serialization type.",
        "properties": {
          "encoding": {
            "$ref": "#/components/schemas/Encoding",
            "description": "Specifies the encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. Required on PUT (CreateOrReplace) requests."
          },
          "format": {
            "$ref": "#/components/schemas/JsonOutputSerializationFormat",
            "description": "This property only applies to JSON serialization of outputs only. It is not applicable to inputs. This property specifies the format of the JSON the output will be written in. The currently supported values are 'lineSeparated' indicating the output will be formatted by having each JSON object separated by a new line and 'array' indicating the output will be formatted as an array of JSON objects. Default value is 'lineSeparated' if left null."
          }
        },
        "type": "object"
      },
      "ReferenceInputDataSource": {
        "description": "Describes an input data source that contains reference data.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Indicates the type of input data source containing reference data. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ReferenceInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InputProperties"
          }
        ],
        "description": "The properties that are associated with an input containing reference data.",
        "properties": {
          "datasource": {
            "$ref": "#/components/schemas/ReferenceInputDataSource",
            "description": "Describes an input data source that contains reference data. Required on PUT (CreateOrReplace) requests."
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Reference"
      },
      "ResourceTestStatus": {
        "description": "Describes the status of the test operation along with error information, if applicable.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorResponse",
            "description": "Describes the error that occurred.",
            "readOnly": true
          },
          "status": {
            "description": "The status of the test operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Serialization": {
        "description": "Describes how data from an input is serialized or how data is serialized when written to an output.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventSerializationType",
            "description": "Indicates the type of serialization that the input or output uses. Required on PUT (CreateOrReplace) requests."
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ServiceBusDataSourceProperties": {
        "description": "The common properties that are associated with Service Bus data sources (Queues, Topics, Event Hubs, etc.).",
        "properties": {
          "serviceBusNamespace": {
            "description": "The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "sharedAccessPolicyKey": {
            "description": "The shared access policy key for the specified shared access policy. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "sharedAccessPolicyName": {
            "description": "The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageAccount": {
        "description": "The properties that are associated with an Azure Storage account",
        "properties": {
          "accountKey": {
            "description": "The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          },
          "accountName": {
            "description": "The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StreamInputDataSource": {
        "description": "Describes an input data source that contains stream data.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "type": {
            "description": "Indicates the type of input data source containing stream data. Required on PUT (CreateOrReplace) requests.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "StreamInputProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InputProperties"
          }
        ],
        "description": "The properties that are associated with an input containing stream data.",
        "properties": {
          "datasource": {
            "$ref": "#/components/schemas/StreamInputDataSource",
            "description": "Describes an input data source that contains stream data. Required on PUT (CreateOrReplace) requests."
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Stream"
      },
      "SubResource": {
        "description": "The base sub-resource model definition.",
        "properties": {
          "id": {
            "description": "Resource Id",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "type": "string"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}