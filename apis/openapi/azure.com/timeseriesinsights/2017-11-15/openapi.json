{
  "openapi": "3.0.0",
  "info": {
    "description": "Time Series Insights client",
    "title": "TimeSeriesInsightsClient",
    "version": "2017-11-15",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/timeseriesinsights/resource-manager/Microsoft.TimeSeriesInsights/stable/2017-11-15/timeseriesinsights.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.TimeSeriesInsights/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "Successfully listed the available operations."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Time Series Insights related operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List available operations for the Time Series Insights resource provider": {
            "$ref": "./examples/Operation_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.TimeSeriesInsights/environments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentListResponse"
                }
              }
            },
            "description": "Environments returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription could not be found."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Lists all the available environments within a subscription, irrespective of the resource groups.",
        "operationId": "Environments_ListBySubscription",
        "x-ms-examples": {
          "EnvironmentsBySubscription": {
            "$ref": "./examples/EnvironmentsListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentListResponse"
                }
              }
            },
            "description": "Environments returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, or resource group could not be found."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Lists all the available environments associated with the subscription and within the specified resource group.",
        "operationId": "Environments_ListByResourceGroup",
        "x-ms-examples": {
          "EnvironmentsByResourceGroup": {
            "$ref": "./examples/EnvironmentsListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The environment was successfully deleted."
          },
          "204": {
            "description": "The environment was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Deletes the environment with the specified name in the specified subscription and resource group.",
        "operationId": "Environments_Delete",
        "x-ms-examples": {
          "EnvironmentsDelete": {
            "$ref": "./examples/EnvironmentsDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResource"
                }
              }
            },
            "description": "The environment definition was successfully retrieved and is in the response. If you are polling for the completion of a provisioning or scale operation, you can check its status via the provisioningState property."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Gets the environment with the specified name in the specified subscription and resource group.",
        "operationId": "Environments_Get",
        "x-ms-examples": {
          "EnvironmentsGet": {
            "$ref": "./examples/EnvironmentsGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResource"
                }
              }
            },
            "description": "The environment definition was successfully updated and is in the response. If the environment was updated synchronously, the response will include a provisioningState value of \"Succeeded\". If the environment was updated asynchronously, the response will include a provisioningState value of \"Updating\".  You can periodically get your environment definition and monitor progress of the update via the provisioningState property."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Updates the environment with the specified name in the specified subscription and resource group.",
        "operationId": "Environments_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentUpdateParameters"
              }
            }
          },
          "description": "Request object that contains the updated information for the environment.",
          "required": true
        },
        "x-ms-examples": {
          "EnvironmentsUpdate": {
            "$ref": "./examples/EnvironmentsPatchSkuCapacity.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "Name of the environment",
            "in": "path",
            "name": "environmentName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResource"
                }
              }
            },
            "description": "The existing environment definition was successfully updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentResource"
                }
              }
            },
            "description": "The environment create request was accepted. Environment provisioning is an asynchronous operation. You can periodically get your environment definition and monitor progress via the provisioningState property."
          },
          "404": {
            "description": "The subscription or resource group could not be found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 400 (Bad Request): The given environment request body is invalid; See the error code and message in the response for details."
          }
        },
        "tags": [
          "Environments"
        ],
        "description": "Create or update an environment in the specified subscription and resource group.",
        "operationId": "Environments_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters for creating an environment resource.",
          "required": true
        },
        "x-ms-examples": {
          "EnvironmentsCreate": {
            "$ref": "./examples/EnvironmentsCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyListResponse"
                }
              }
            },
            "description": "access policies returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "AccessPolicies"
        ],
        "description": "Lists all the available access policies associated with the environment.",
        "operationId": "AccessPolicies_ListByEnvironment",
        "x-ms-examples": {
          "AccessPoliciesByEnvironment": {
            "$ref": "./examples/AccessPoliciesListByEnvironment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/accessPolicies/{accessPolicyName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccessPolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The access policy was successfully deleted."
          },
          "204": {
            "description": "The access policy was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found."
          }
        },
        "tags": [
          "AccessPolicies"
        ],
        "description": "Deletes the access policy with the specified name in the specified subscription, resource group, and environment",
        "operationId": "AccessPolicies_Delete",
        "x-ms-examples": {
          "AccessPoliciesDelete": {
            "$ref": "./examples/AccessPoliciesDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccessPolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyResource"
                }
              }
            },
            "description": "The access policy definition was successfully retrieved and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found."
          }
        },
        "tags": [
          "AccessPolicies"
        ],
        "description": "Gets the access policy with the specified name in the specified environment.",
        "operationId": "AccessPolicies_Get",
        "x-ms-examples": {
          "AccessPoliciesGet": {
            "$ref": "./examples/AccessPoliciesGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccessPolicyNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyResource"
                }
              }
            },
            "description": "The access policy definition was successfully updated and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or access policy could not be found."
          }
        },
        "tags": [
          "AccessPolicies"
        ],
        "description": "Updates the access policy with the specified name in the specified subscription, resource group, and environment.",
        "operationId": "AccessPolicies_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessPolicyUpdateParameters"
              }
            }
          },
          "description": "Request object that contains the updated information for the access policy.",
          "required": true
        },
        "x-ms-examples": {
          "AccessPoliciesUpdate": {
            "$ref": "./examples/AccessPoliciesPatchRoles.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "description": "Name of the access policy.",
            "in": "path",
            "name": "accessPolicyName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyResource"
                }
              }
            },
            "description": "The existing access policy definition was successfully updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessPolicyResource"
                }
              }
            },
            "description": "The access policy was successfully created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 400 (Bad Request): The given access policy request body is invalid; See the error code and message in the response for details."
          }
        },
        "tags": [
          "AccessPolicies"
        ],
        "description": "Create or update an access policy in the specified environment.",
        "operationId": "AccessPolicies_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessPolicyCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters for creating an access policy.",
          "required": true
        },
        "x-ms-examples": {
          "AccessPoliciesCreate": {
            "$ref": "./examples/AccessPoliciesCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSourceListResponse"
                }
              }
            },
            "description": "Environments returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "EventSources"
        ],
        "description": "Lists all the available event sources associated with the subscription and within the specified resource group and environment.",
        "operationId": "EventSources_ListByEnvironment",
        "x-ms-examples": {
          "ListEventSourcesByEnvironment": {
            "$ref": "./examples/EventSourcesListByEnvironment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/eventSources/{eventSourceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventSourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The event source was successfully deleted."
          },
          "204": {
            "description": "The event source was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found."
          }
        },
        "tags": [
          "EventSources"
        ],
        "description": "Deletes the event source with the specified name in the specified subscription, resource group, and environment",
        "operationId": "EventSources_Delete",
        "x-ms-examples": {
          "DeleteEventSource": {
            "$ref": "./examples/EventSourcesDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventSourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSourceResource"
                }
              }
            },
            "description": "The event source definition was successfully retrieved and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found."
          }
        },
        "tags": [
          "EventSources"
        ],
        "description": "Gets the event source with the specified name in the specified environment.",
        "operationId": "EventSources_Get",
        "x-ms-examples": {
          "GetEventHubEventSource": {
            "$ref": "./examples/EventSourcesGetEventHub.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/EventSourceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSourceResource"
                }
              }
            },
            "description": "The event source definition was successfully updated and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or event source could not be found."
          }
        },
        "tags": [
          "EventSources"
        ],
        "description": "Updates the event source with the specified name in the specified subscription, resource group, and environment.",
        "operationId": "EventSources_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSourceUpdateParameters"
              }
            }
          },
          "description": "Request object that contains the updated information for the event source.",
          "required": true
        },
        "x-ms-examples": {
          "UpdateEventSource": {
            "$ref": "./examples/EventSourcesPatchTags.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "description": "Name of the event source.",
            "in": "path",
            "name": "eventSourceName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSourceResource"
                }
              }
            },
            "description": "The existing event source definition was successfully updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSourceResource"
                }
              }
            },
            "description": "The event source was successfully created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 400 (Bad Request): The given event source request body is invalid; See the error code and message in the response for details."
          }
        },
        "tags": [
          "EventSources"
        ],
        "description": "Create or update an event source under the specified environment.",
        "operationId": "EventSources_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSourceCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters for creating an event source resource.",
          "required": true
        },
        "x-ms-examples": {
          "CreateEventHubEventSource": {
            "$ref": "./examples/EventSourcesCreateEventHub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataSetListResponse"
                }
              }
            },
            "description": "Reference data sets returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, or environment could not be found."
          }
        },
        "tags": [
          "ReferenceDataSets"
        ],
        "description": "Lists all the available reference data sets associated with the subscription and within the specified resource group and environment.",
        "operationId": "ReferenceDataSets_ListByEnvironment",
        "x-ms-examples": {
          "ReferenceDataSetsListByEnvironment": {
            "$ref": "./examples/ReferenceDataSetsListByEnvironment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.TimeSeriesInsights/environments/{environmentName}/referenceDataSets/{referenceDataSetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ReferenceDataSetNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The reference data set was successfully deleted."
          },
          "204": {
            "description": "The reference data set was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found."
          }
        },
        "tags": [
          "ReferenceDataSets"
        ],
        "description": "Deletes the reference data set with the specified name in the specified subscription, resource group, and environment",
        "operationId": "ReferenceDataSets_Delete",
        "x-ms-examples": {
          "ReferenceDataSetsDelete": {
            "$ref": "./examples/ReferenceDataSetsDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ReferenceDataSetNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataSetResource"
                }
              }
            },
            "description": "The reference data set definition was successfully retrieved and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found."
          }
        },
        "tags": [
          "ReferenceDataSets"
        ],
        "description": "Gets the reference data set with the specified name in the specified environment.",
        "operationId": "ReferenceDataSets_Get",
        "x-ms-examples": {
          "ReferenceDataSetsGet": {
            "$ref": "./examples/ReferenceDataSetsGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "$ref": "#/components/parameters/ReferenceDataSetNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataSetResource"
                }
              }
            },
            "description": "The reference data set definition was successfully updated and is in the response."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 404 (Not Found): The subscription, resource group, environment, or reference data set could not be found."
          }
        },
        "tags": [
          "ReferenceDataSets"
        ],
        "description": "Updates the reference data set with the specified name in the specified subscription, resource group, and environment.",
        "operationId": "ReferenceDataSets_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceDataSetUpdateParameters"
              }
            }
          },
          "description": "Request object that contains the updated information for the reference data set.",
          "required": true
        },
        "x-ms-examples": {
          "ReferenceDataSetsUpdate": {
            "$ref": "./examples/ReferenceDataSetsPatchTags.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/EnvironmentNameParameter"
          },
          {
            "description": "Name of the reference data set.",
            "in": "path",
            "name": "referenceDataSetName",
            "required": true,
            "schema": {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[A-Za-z0-9]",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataSetResource"
                }
              }
            },
            "description": "The existing reference data set definition was successfully updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReferenceDataSetResource"
                }
              }
            },
            "description": "The reference data set was successfully created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "HTTP 400 (Bad Request): The given reference data set request body is invalid; See the error code and message in the response for details."
          }
        },
        "tags": [
          "ReferenceDataSets"
        ],
        "description": "Create or update a reference data set in the specified environment.",
        "operationId": "ReferenceDataSets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceDataSetCreateOrUpdateParameters"
              }
            }
          },
          "description": "Parameters for creating a reference data set.",
          "required": true
        },
        "x-ms-examples": {
          "ReferenceDataSetsCreate": {
            "$ref": "./examples/ReferenceDataSetsCreate.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AccessPolicyNameParameter": {
        "description": "The name of the Time Series Insights access policy associated with the specified environment.",
        "in": "path",
        "name": "accessPolicyName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ApiVersionParameter": {
        "description": "Version of the API to be used with the client request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "EnvironmentNameParameter": {
        "description": "The name of the Time Series Insights environment associated with the specified resource group.",
        "in": "path",
        "name": "environmentName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "EventSourceNameParameter": {
        "description": "The name of the Time Series Insights event source associated with the specified environment.",
        "in": "path",
        "name": "eventSourceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ExpandParameter": {
        "description": "Setting $expand=status will include the status of the internal services of the environment in the Time Series Insights service.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ReferenceDataSetNameParameter": {
        "description": "The name of the Time Series Insights reference data set associated with the specified environment.",
        "in": "path",
        "name": "referenceDataSetName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "Name of an Azure Resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AccessPolicyCreateOrUpdateParameters": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AccessPolicyResourceProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AccessPolicyListResponse": {
        "description": "The response of the List access policies operation.",
        "properties": {
          "value": {
            "description": "Result of the List access policies operation.",
            "items": {
              "$ref": "#/components/schemas/AccessPolicyResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccessPolicyMutableProperties": {
        "description": "An object that represents a set of mutable access policy resource properties.",
        "properties": {
          "description": {
            "description": "An description of the access policy.",
            "type": "string"
          },
          "roles": {
            "description": "The list of roles the principal is assigned on the environment.",
            "items": {
              "description": "A role defining the data plane operations that a principal can perform on a Time Series Insights client.",
              "enum": [
                "Reader",
                "Contributor"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "AccessPolicyRole"
              }
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccessPolicyResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An access policy is used to grant users and applications access to the environment. Roles are assigned to service principals in Azure Active Directory. These roles define the actions the principal can perform through the Time Series Insights data plane APIs.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AccessPolicyResourceProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AccessPolicyResourceProperties": {
        "properties": {
          "description": {
            "description": "An description of the access policy.",
            "type": "string"
          },
          "principalObjectId": {
            "description": "The objectId of the principal in Azure Active Directory.",
            "type": "string"
          },
          "roles": {
            "description": "The list of roles the principal is assigned on the environment.",
            "items": {
              "description": "A role defining the data plane operations that a principal can perform on a Time Series Insights client.",
              "enum": [
                "Reader",
                "Contributor"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "AccessPolicyRole"
              }
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccessPolicyUpdateParameters": {
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AccessPolicyMutableProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AzureEventSourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceCommonProperties"
          }
        ],
        "description": "Properties of an event source that reads events from an event broker in Azure.",
        "properties": {
          "eventSourceResourceId": {
            "description": "The resource id of the event source in Azure Resource Manager.",
            "type": "string"
          }
        },
        "required": [
          "eventSourceResourceId"
        ],
        "type": "object"
      },
      "CloudError": {
        "description": "Contains information about an API error.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody",
            "description": "Describes a particular API error with an error code and a message."
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "Describes a particular API error with an error code and a message.",
        "properties": {
          "code": {
            "description": "An error code that describes the error condition more precisely than an HTTP status code. Can be used to programmatically handle specific error cases.",
            "type": "string"
          },
          "details": {
            "description": "Contains nested errors that are related to this error.",
            "items": {
              "$ref": "#/components/schemas/CloudErrorBody",
              "description": "Describes a particular API error with an error code and a message."
            },
            "type": "array"
          },
          "message": {
            "description": "A message that describes the error in detail and provides debugging information.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error (for example, the name of the property in error).",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CreateOrUpdateTrackedResourceProperties": {
        "description": "Properties required to create any resource tracked by Azure Resource Manager.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of additional properties for the resource.",
            "type": "object"
          },
          "location": {
            "description": "The location of the resource.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "EnvironmentCreateOrUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateOrUpdateTrackedResourceProperties"
          }
        ],
        "description": "Parameters supplied to the CreateOrUpdate Environment operation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EnvironmentCreationProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate."
          }
        },
        "required": [
          "sku",
          "properties"
        ],
        "type": "object"
      },
      "EnvironmentCreationProperties": {
        "description": "Properties used to create an environment.",
        "properties": {
          "dataRetentionTime": {
            "description": "ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.",
            "format": "duration",
            "type": "string"
          },
          "partitionKeyProperties": {
            "description": "The list of partition keys according to which the data in the environment will be ordered.",
            "items": {
              "$ref": "#/components/schemas/PartitionKeyProperty"
            },
            "type": "array"
          },
          "storageLimitExceededBehavior": {
            "description": "The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.",
            "enum": [
              "PurgeOldData",
              "PauseIngress"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "StorageLimitExceededBehavior"
            }
          }
        },
        "required": [
          "dataRetentionTime"
        ],
        "type": "object"
      },
      "EnvironmentListResponse": {
        "description": "The response of the List Environments operation.",
        "properties": {
          "value": {
            "description": "Result of the List Environments operation.",
            "items": {
              "$ref": "#/components/schemas/EnvironmentResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EnvironmentMutableProperties": {
        "description": "An object that represents a set of mutable environment resource properties.",
        "properties": {
          "dataRetentionTime": {
            "description": "ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.",
            "format": "duration",
            "type": "string"
          },
          "partitionKeyProperties": {
            "description": "The list of event properties which will be used to partition data in the environment.",
            "items": {
              "$ref": "#/components/schemas/PartitionKeyProperty"
            },
            "type": "array"
          },
          "storageLimitExceededBehavior": {
            "description": "The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If \"PauseIngress\" is specified, new events will not be read from the event source. If \"PurgeOldData\" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.",
            "enum": [
              "PurgeOldData",
              "PauseIngress"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "StorageLimitExceededBehavior"
            }
          }
        },
        "type": "object"
      },
      "EnvironmentResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "An environment is a set of time-series data available for query, and is the top level Azure Time Series Insights resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EnvironmentResourceProperties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate."
          }
        },
        "type": "object"
      },
      "EnvironmentResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EnvironmentCreationProperties"
          },
          {
            "$ref": "#/components/schemas/ResourceProperties"
          }
        ],
        "description": "Properties of the environment.",
        "properties": {
          "dataAccessFqdn": {
            "description": "The fully qualified domain name used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.",
            "readOnly": true,
            "type": "string"
          },
          "dataAccessId": {
            "description": "An id used to access the environment data, e.g. to query the environment's events or upload reference data for the environment.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/EnvironmentStatus",
            "description": "An object that represents the status of the environment, and its internal state in the Time Series Insights service."
          }
        },
        "required": [
          "dataRetentionTime"
        ],
        "type": "object"
      },
      "EnvironmentStateDetails": {
        "description": "An object that contains the details about an environment's state.",
        "properties": {
          "code": {
            "description": "Contains the code that represents the reason of an environment being in a particular state. Can be used to programmatically handle specific cases.",
            "type": "string"
          },
          "message": {
            "description": "A message that describes the state in detail.",
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "EnvironmentStatus": {
        "description": "An object that represents the status of the environment, and its internal state in the Time Series Insights service.",
        "properties": {
          "ingress": {
            "$ref": "#/components/schemas/IngressEnvironmentStatus",
            "description": "An object that represents the status of ingress on an environment."
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "EnvironmentUpdateParameters": {
        "description": "Parameters supplied to the Update Environment operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of additional properties for the environment.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/EnvironmentMutableProperties",
            "description": "Properties of the environment.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the environment."
          }
        },
        "type": "object"
      },
      "EventHubEventSourceCommonProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureEventSourceProperties"
          }
        ],
        "description": "Properties of the EventHub event source.",
        "properties": {
          "consumerGroupName": {
            "description": "The name of the event hub's consumer group that holds the partitions from which events will be read.",
            "type": "string"
          },
          "eventHubName": {
            "description": "The name of the event hub.",
            "type": "string"
          },
          "keyName": {
            "description": "The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.",
            "type": "string"
          },
          "serviceBusNamespace": {
            "description": "The name of the service bus that contains the event hub.",
            "type": "string"
          }
        },
        "required": [
          "serviceBusNamespace",
          "eventHubName",
          "consumerGroupName",
          "keyName"
        ],
        "type": "object"
      },
      "EventHubEventSourceCreateOrUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceCreateOrUpdateParameters"
          }
        ],
        "description": "Parameters supplied to the Create or Update Event Source operation for an EventHub event source.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubEventSourceCreationProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.EventHub"
      },
      "EventHubEventSourceCreationProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventHubEventSourceCommonProperties"
          }
        ],
        "description": "Properties of the EventHub event source that are required on create or update requests.",
        "properties": {
          "sharedAccessKey": {
            "description": "The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.",
            "type": "string"
          }
        },
        "required": [
          "sharedAccessKey"
        ],
        "type": "object"
      },
      "EventHubEventSourceMutableProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceMutableProperties"
          }
        ],
        "description": "An object that represents a set of mutable EventHub event source resource properties.",
        "properties": {
          "sharedAccessKey": {
            "description": "The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventHubEventSourceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceResource"
          }
        ],
        "description": "An event source that receives its data from an Azure EventHub.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubEventSourceResourceProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.EventHub"
      },
      "EventHubEventSourceResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventHubEventSourceCommonProperties"
          }
        ],
        "description": "Properties of the EventHub event source resource."
      },
      "EventHubEventSourceUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceUpdateParameters"
          }
        ],
        "description": "Parameters supplied to the Update Event Source operation to update an EventHub event source.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventHubEventSourceMutableProperties",
            "description": "Properties of the EventHub event source.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "EventSourceCommonProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceProperties"
          }
        ],
        "description": "Properties of the event source.",
        "properties": {
          "timestampPropertyName": {
            "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventSourceCreateOrUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateOrUpdateTrackedResourceProperties"
          }
        ],
        "description": "Parameters supplied to the Create or Update Event Source operation.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "The kind of the event source.",
            "enum": [
              "Microsoft.EventHub",
              "Microsoft.IoTHub"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Kind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EventSourceListResponse": {
        "description": "The response of the List EventSources operation.",
        "properties": {
          "value": {
            "description": "Result of the List EventSources operation.",
            "items": {
              "$ref": "#/components/schemas/EventSourceResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EventSourceMutableProperties": {
        "description": "An object that represents a set of mutable event source resource properties.",
        "properties": {
          "localTimestamp": {
            "$ref": "#/components/schemas/LocalTimestamp",
            "description": "An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events."
          },
          "timestampPropertyName": {
            "description": "The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventSourceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "An environment receives data from one or more event sources. Each event source has associated connection info that allows the Time Series Insights ingress pipeline to connect to and pull data from the event source",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "The kind of the event source.",
            "enum": [
              "Microsoft.EventHub",
              "Microsoft.IoTHub"
            ],
            "type": "string"
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EventSourceUpdateParameters": {
        "description": "Parameters supplied to the Update Event Source operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of additional properties for the event source.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "IngressEnvironmentStatus": {
        "description": "An object that represents the status of ingress on an environment.",
        "properties": {
          "state": {
            "description": "This string represents the state of ingress operations on an environment. It can be \"Disabled\", \"Ready\", \"Running\", \"Paused\" or \"Unknown\"",
            "enum": [
              "Disabled",
              "Ready",
              "Running",
              "Paused",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "IngressState"
            }
          },
          "stateDetails": {
            "$ref": "#/components/schemas/EnvironmentStateDetails",
            "description": "An object that contains the details about an environment's state."
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "IoTHubEventSourceCommonProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureEventSourceProperties"
          }
        ],
        "description": "Properties of the IoTHub event source.",
        "properties": {
          "consumerGroupName": {
            "description": "The name of the iot hub's consumer group that holds the partitions from which events will be read.",
            "type": "string"
          },
          "iotHubName": {
            "description": "The name of the iot hub.",
            "type": "string"
          },
          "keyName": {
            "description": "The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.",
            "type": "string"
          }
        },
        "required": [
          "iotHubName",
          "consumerGroupName",
          "keyName"
        ],
        "type": "object"
      },
      "IoTHubEventSourceCreateOrUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceCreateOrUpdateParameters"
          }
        ],
        "description": "Parameters supplied to the Create or Update Event Source operation for an IoTHub event source.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IoTHubEventSourceCreationProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.IoTHub"
      },
      "IoTHubEventSourceCreationProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IoTHubEventSourceCommonProperties"
          }
        ],
        "description": "Properties of the IoTHub event source that are required on create or update requests.",
        "properties": {
          "sharedAccessKey": {
            "description": "The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.",
            "type": "string"
          }
        },
        "required": [
          "sharedAccessKey"
        ],
        "type": "object"
      },
      "IoTHubEventSourceMutableProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceMutableProperties"
          }
        ],
        "description": "An object that represents a set of mutable IoTHub event source resource properties.",
        "properties": {
          "sharedAccessKey": {
            "description": "The value of the shared access key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IoTHubEventSourceResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceResource"
          }
        ],
        "description": "An event source that receives its data from an Azure IoTHub.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IoTHubEventSourceResourceProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.IotHub"
      },
      "IoTHubEventSourceResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IoTHubEventSourceCommonProperties"
          }
        ],
        "description": "Properties of the IoTHub event source resource."
      },
      "IoTHubEventSourceUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EventSourceUpdateParameters"
          }
        ],
        "description": "Parameters supplied to the Update Event Source operation to update an IoTHub event source.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IoTHubEventSourceMutableProperties",
            "description": "Properties of the IoTHub event source.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "LocalTimestamp": {
        "description": "An object that represents the local timestamp property. It contains the format of local timestamp that needs to be used and the corresponding timezone offset information. If a value isn't specified for localTimestamp, or if null, then the local timestamp will not be ingressed with the events.",
        "properties": {
          "format": {
            "description": "An enum that represents the format of the local timestamp property that needs to be set.",
            "enum": [
              "Embedded",
              "Iana",
              "TimeSpan"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LocalTimestampFormat"
            }
          },
          "timeZoneOffset": {
            "description": "An object that represents the offset information for the local timestamp format specified. Should not be specified for LocalTimestampFormat - Embedded.",
            "properties": {
              "propertyName": {
                "description": "The event property that will be contain the offset information to calculate the local timestamp. When the LocalTimestampFormat is Iana, the property name will contain the name of the column which contains IANA Timezone Name (eg: Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains the name of property which contains values representing the offset (eg: P1D or 1.00:00:00)",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "A Time Series Insights REST API operation",
        "properties": {
          "display": {
            "description": "Contains the localized display information for this particular operation / action.",
            "properties": {
              "description": {
                "description": "The localized friendly description for the operation.",
                "readOnly": true,
                "type": "string"
              },
              "operation": {
                "description": "The localized friendly name for the operation.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "The localized friendly form of the resource provider name.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "The localized friendly form of the resource type related to this action/operation.",
                "readOnly": true,
                "type": "string"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "name": {
            "description": "The name of the operation being performed on this particular object.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Time Series Insights operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of Time Series Insights operations supported by the Microsoft.TimeSeriesInsights resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PartitionKeyProperty": {
        "description": "The structure of the property that a partition key can have. An environment can have multiple such properties.",
        "properties": {
          "name": {
            "description": "The name of the property.",
            "type": "string"
          },
          "type": {
            "description": "The type of the property.",
            "enum": [
              "String"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PropertyType"
            }
          }
        },
        "type": "object"
      },
      "ProvisioningState": {
        "description": "Provisioning state of the resource.",
        "enum": [
          "Accepted",
          "Creating",
          "Updating",
          "Succeeded",
          "Failed",
          "Deleting"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "ProvisioningState"
        }
      },
      "ReferenceDataSetCreateOrUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateOrUpdateTrackedResourceProperties"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReferenceDataSetCreationProperties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ReferenceDataSetCreationProperties": {
        "description": "Properties used to create a reference data set.",
        "properties": {
          "dataStringComparisonBehavior": {
            "description": "The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.",
            "enum": [
              "Ordinal",
              "OrdinalIgnoreCase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataStringComparisonBehavior"
            }
          },
          "keyProperties": {
            "description": "The list of key properties for the reference data set.",
            "items": {
              "$ref": "#/components/schemas/ReferenceDataSetKeyProperty"
            },
            "type": "array"
          }
        },
        "required": [
          "keyProperties"
        ],
        "type": "object"
      },
      "ReferenceDataSetKeyProperty": {
        "description": "A key property for the reference data set. A reference data set can have multiple key properties.",
        "properties": {
          "name": {
            "description": "The name of the key property.",
            "type": "string"
          },
          "type": {
            "description": "The type of the key property.",
            "enum": [
              "String",
              "Double",
              "Bool",
              "DateTime"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ReferenceDataKeyPropertyType"
            }
          }
        },
        "type": "object"
      },
      "ReferenceDataSetListResponse": {
        "description": "The response of the List Reference Data Sets operation.",
        "properties": {
          "value": {
            "description": "Result of the List Reference Data Sets operation.",
            "items": {
              "$ref": "#/components/schemas/ReferenceDataSetResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReferenceDataSetResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "A reference data set provides metadata about the events in an environment. Metadata in the reference data set will be joined with events as they are read from event sources. The metadata that makes up the reference data set is uploaded or modified through the Time Series Insights data plane APIs.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReferenceDataSetResourceProperties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReferenceDataSetResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReferenceDataSetCreationProperties"
          },
          {
            "$ref": "#/components/schemas/ResourceProperties"
          }
        ],
        "description": "Properties of the reference data set.",
        "required": [
          "keyProperties"
        ]
      },
      "ReferenceDataSetUpdateParameters": {
        "description": "Parameters supplied to the Update Reference Data Set operation.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs of additional properties for the reference data set.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "Time Series Insights resource",
        "properties": {
          "id": {
            "description": "Resource Id",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceProperties": {
        "description": "Properties that are common to all tracked resources.",
        "properties": {
          "creationTime": {
            "description": "The time the resource was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "$ref": "#/components/schemas/ProvisioningState",
            "description": "Provisioning state of the resource."
          }
        },
        "type": "object"
      },
      "Sku": {
        "description": "The sku determines the capacity of the environment, the SLA (in queries-per-minute and total capacity), and the billing rate.",
        "properties": {
          "capacity": {
            "description": "The capacity of the sku. This value can be changed to support scale out of environments after they have been created.",
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          },
          "name": {
            "description": "The name of this SKU.",
            "enum": [
              "S1",
              "S2"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuName"
            }
          }
        },
        "required": [
          "name",
          "capacity"
        ],
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Time Series Insights resource that is tracked by Azure Resource Manager.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "location": {
            "description": "Resource location",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}