{
  "openapi": "3.0.0",
  "info": {
    "description": "All resource groups and resources exist within subscriptions. These operation enable you get information about your subscriptions and tenants. A tenant is a dedicated instance of Azure Active Directory (Azure AD) for your organization.",
    "title": "SubscriptionClient",
    "version": "2019-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Resources/stable/2019-06-01/subscriptions.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Resources/checkResourceName": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResourceNameResult"
                }
              }
            },
            "description": "OK - Returns status as allowed or not."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response saying resource name is invalid"
          }
        },
        "tags": [
          "Tenants"
        ],
        "description": "A resource name is valid if it is not a reserved word, does not contains a reserved word and does not start with a reserved word",
        "operationId": "checkResourceName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceName"
              }
            }
          },
          "description": "Resource object with values for resource name and resource type"
        },
        "summary": "Checks resource name validity",
        "x-ms-examples": {
          "Check validity for a resource name.": {
            "$ref": "./examples/CheckResourceName.json"
          }
        }
      }
    },
    "/providers/Microsoft.Resources/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Microsoft.Resources REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionListResult"
                }
              }
            },
            "description": "OK - Returns an array of subscriptions."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Gets all subscriptions for a tenant.",
        "operationId": "Subscriptions_List",
        "x-ms-examples": {
          "Get all subscriptions.": {
            "$ref": "./examples/GetSubscriptions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": "OK - Returns information about the subscription."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Gets details about a specified subscription.",
        "operationId": "Subscriptions_Get",
        "x-ms-examples": {
          "Get a single subscription.": {
            "$ref": "./examples/GetSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationListResult"
                }
              }
            },
            "description": "OK - Returns an array of locations."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "This operation provides all the locations that are available for resource providers; however, each resource provider may support a subset of this list.",
        "operationId": "Subscriptions_ListLocations",
        "summary": "Gets all available geo-locations.",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/checkZonePeers/": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckZonePeersResult"
                }
              }
            },
            "description": "OK - Returns information about the logical availability zone mapping between subscriptions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Compares a subscriptions logical zone mapping",
        "operationId": "Subscriptions_CheckZonePeers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckZonePeersRequest"
              }
            }
          },
          "description": "Parameters for checking zone peers.",
          "required": true
        },
        "x-ms-examples": {
          "GetLogicalZoneMapping": {
            "$ref": "./examples/PostCheckZonePeers.json"
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantListResult"
                }
              }
            },
            "description": "OK - Returns an array of tenants."
          }
        },
        "tags": [
          "Tenants"
        ],
        "description": "Gets the tenants for your account.",
        "operationId": "Tenants_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the operation.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "SubscriptionIdParameter": {
        "description": "The ID of the target subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AvailabilityZonePeers": {
        "description": "List of availability zones shared by the subscriptions.",
        "properties": {
          "availabilityZone": {
            "description": "The availabilityZone.",
            "readOnly": true,
            "type": "string"
          },
          "peers": {
            "description": "Details of shared availability zone.",
            "items": {
              "$ref": "#/components/schemas/Peers"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CheckResourceNameResult": {
        "description": "Resource Name valid if not a reserved word, does not contain a reserved word and does not start with a reserved word",
        "properties": {
          "name": {
            "description": "Name of Resource",
            "type": "string"
          },
          "status": {
            "description": "Is the resource name Allowed or Reserved",
            "enum": [
              "Allowed",
              "Reserved"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ResourceNameStatus"
            }
          },
          "type": {
            "description": "Type of Resource",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CheckZonePeersRequest": {
        "description": "Check zone peers request parameters.",
        "properties": {
          "location": {
            "description": "The Microsoft location.",
            "type": "string"
          },
          "subscriptionIds": {
            "description": "The peer Microsoft Azure subscription ID.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CheckZonePeersResult": {
        "description": "Result of the Check zone peers operation.",
        "properties": {
          "availabilityZonePeers": {
            "description": "The Availability Zones shared by the subscriptions.",
            "items": {
              "$ref": "#/components/schemas/AvailabilityZonePeers"
            },
            "type": "array"
          },
          "location": {
            "description": "the location of the subscription.",
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDefinition": {
        "description": "Error description and code explaining why resource name is invalid.",
        "properties": {
          "code": {
            "description": "Code of the error.",
            "type": "string"
          },
          "message": {
            "description": "Description of the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDefinition",
            "description": "The error details."
          }
        },
        "type": "object"
      },
      "Location": {
        "description": "Location information.",
        "properties": {
          "displayName": {
            "description": "The display name of the location.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "description": "The latitude of the location.",
            "readOnly": true,
            "type": "string"
          },
          "longitude": {
            "description": "The longitude of the location.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The location name.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocationListResult": {
        "description": "Location list operation response.",
        "properties": {
          "value": {
            "description": "An array of locations.",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedByTenant": {
        "description": "Information about a tenant managing the subscription.",
        "properties": {
          "tenantId": {
            "description": "The tenant ID of the managing tenant. This is a GUID.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "Microsoft.Resources operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "description": {
                "description": "Description of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Resources",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Microsoft.Resources operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Microsoft.Resources operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Peers": {
        "description": "Information about shared availability zone.",
        "properties": {
          "availabilityZone": {
            "description": "The availabilityZone.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceName": {
        "description": "Name and Type of the Resource",
        "properties": {
          "name": {
            "description": "Name of the resource",
            "type": "string"
          },
          "type": {
            "description": "The type of the resource",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "Subscription": {
        "description": "Subscription information.",
        "properties": {
          "authorizationSource": {
            "description": "The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.",
            "type": "string"
          },
          "displayName": {
            "description": "The subscription display name.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The fully qualified ID for the subscription. For example, /subscriptions/00000000-0000-0000-0000-000000000000.",
            "readOnly": true,
            "type": "string"
          },
          "managedByTenants": {
            "description": "An array containing the tenants managing the subscription.",
            "items": {
              "$ref": "#/components/schemas/ManagedByTenant"
            },
            "type": "array"
          },
          "state": {
            "description": "The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.",
            "enum": [
              "Enabled",
              "Warned",
              "PastDue",
              "Disabled",
              "Deleted"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SubscriptionState"
            }
          },
          "subscriptionId": {
            "description": "The subscription ID.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionPolicies": {
            "$ref": "#/components/schemas/SubscriptionPolicies",
            "description": "The subscription policies."
          },
          "tenantId": {
            "description": "The subscription tenant ID.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionListResult": {
        "description": "Subscription list operation response.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "An array of subscriptions.",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            },
            "type": "array"
          }
        },
        "required": [
          "nextLink"
        ],
        "type": "object"
      },
      "SubscriptionPolicies": {
        "description": "Subscription policies.",
        "properties": {
          "locationPlacementId": {
            "description": "The subscription location placement ID. The ID indicates which regions are visible for a subscription. For example, a subscription with a location placement Id of Public_2014-09-01 has access to Azure public regions.",
            "readOnly": true,
            "type": "string"
          },
          "quotaId": {
            "description": "The subscription quota ID.",
            "readOnly": true,
            "type": "string"
          },
          "spendingLimit": {
            "description": "The subscription spending limit.",
            "enum": [
              "On",
              "Off",
              "CurrentPeriodOff"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "spendingLimit"
            }
          }
        },
        "type": "object"
      },
      "TenantIdDescription": {
        "description": "Tenant Id information.",
        "properties": {
          "country": {
            "description": "Country/region name of the address for the tenant.",
            "readOnly": true,
            "type": "string"
          },
          "countryCode": {
            "description": "Country/region abbreviation for the tenant.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the tenant.",
            "readOnly": true,
            "type": "string"
          },
          "domains": {
            "description": "The list of domains for the tenant.",
            "items": {
              "description": "The domain name for a tenant.",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "The fully qualified ID of the tenant. For example, /tenants/00000000-0000-0000-0000-000000000000.",
            "readOnly": true,
            "type": "string"
          },
          "tenantCategory": {
            "description": "The tenant category.",
            "enum": [
              "Home",
              "ProjectedBy",
              "ManagedBy"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TenantCategory"
            }
          },
          "tenantId": {
            "description": "The tenant ID. For example, 00000000-0000-0000-0000-000000000000.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "TenantListResult": {
        "description": "Tenant Ids information.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "An array of tenants.",
            "items": {
              "$ref": "#/components/schemas/TenantIdDescription"
            },
            "type": "array"
          }
        },
        "required": [
          "nextLink"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}