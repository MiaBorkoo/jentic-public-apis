openapi: 3.0.0
info:
  description: >-
    The Microsoft Azure Network management API provides a RESTful set of web
    services that interact with Microsoft Azure Networks service to manage your
    network resources. The API has entities that capture the relationship
    between an end user and the Microsoft Azure Networks service.
  title: NetworkManagementClient
  version: '2015-06-15'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Network/loadBalancers':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
          description: >-
            Request successful. The operation returns a list of LoadBalancer
            resources.
      tags:
        - LoadBalancers
      description: Gets all the load balancers in a subscription.
      operationId: LoadBalancers_ListAll
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers':
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancerListResult'
          description: >-
            Request successful. The operation returns a list of LoadBalancer
            resources.
      tags:
        - LoadBalancers
      description: Gets all the load balancers in a resource group.
      operationId: LoadBalancers_List
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}':
    delete:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the load balancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Delete successful.
        '202':
          description: Accepted and the operation will complete asynchronously.
        '204':
          description: Request successful. Resource does not exist.
      tags:
        - LoadBalancers
      description: Deletes the specified load balancer.
      operationId: LoadBalancers_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the load balancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Expands referenced resources.
          in: query
          name: $expand
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: >-
            Request successful. The operation returns the resulting LoadBalancer
            resource.
      tags:
        - LoadBalancers
      description: Gets the specified load balancer.
      operationId: LoadBalancers_Get
    put:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The name of the load balancer.
          in: path
          name: loadBalancerName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: >-
            Update successful. The operation returns the resulting LoadBalancer
            resource.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
            text/json:
              schema:
                $ref: '#/components/schemas/LoadBalancer'
          description: >-
            Create successful. The operation returns the resulting LoadBalancer
            resource.
      tags:
        - LoadBalancers
      description: Creates or updates a load balancer.
      operationId: LoadBalancers_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadBalancer'
          text/json:
            schema:
              $ref: '#/components/schemas/LoadBalancer'
        description: Parameters supplied to the create or update load balancer operation.
        required: true
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: >-
        The subscription credentials which uniquely identify the Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    BackendAddressPool:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: Pool of backend IP addresses.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/BackendAddressPoolPropertiesFormat'
          x-ms-client-flatten: true
      type: object
    BackendAddressPoolPropertiesFormat:
      description: Properties of the backend address pool.
      properties:
        backendIPConfigurations:
          description: >-
            Gets collection of references to IP addresses defined in network
            interfaces.
          items:
            $ref: >-
              ./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration
          type: array
        loadBalancingRules:
          description: Gets load balancing rules that use this backend address pool.
          items:
            $ref: ./network.json#/definitions/SubResource
          readOnly: true
          type: array
        outboundNatRule:
          $ref: ./network.json#/definitions/SubResource
          description: Gets outbound rules that use this backend address pool.
        provisioningState:
          description: >-
            Get provisioning state of the public IP resource. Possible values
            are: 'Updating', 'Deleting', and 'Failed'.
          type: string
      type: object
    FrontendIPConfiguration:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: Frontend IP address of the load balancer.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            The name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/FrontendIPConfigurationPropertiesFormat'
          x-ms-client-flatten: true
      type: object
    FrontendIPConfigurationPropertiesFormat:
      description: Properties of Frontend IP Configuration of the load balancer.
      properties:
        inboundNatPools:
          description: Read only. Inbound pools URIs that use this frontend IP.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        inboundNatRules:
          description: Read only. Inbound rules URIs that use this frontend IP.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        loadBalancingRules:
          description: Gets load balancing rules URIs that use this frontend IP.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        outboundNatRules:
          description: Read only. Outbound rules URIs that use this frontend IP.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        privateIPAddress:
          description: The private IP address of the IP configuration.
          type: string
        privateIPAllocationMethod:
          description: >-
            The Private IP allocation method. Possible values are: 'Static' and
            'Dynamic'.
          enum:
            - Static
            - Dynamic
          type: string
          x-ms-enum:
            modelAsString: true
            name: IPAllocationMethod
        provisioningState:
          description: >-
            Gets the provisioning state of the public IP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
        publicIPAddress:
          $ref: ./publicIpAddress.json#/definitions/PublicIPAddress
          description: The reference of the Public IP resource.
        subnet:
          $ref: ./virtualNetwork.json#/definitions/Subnet
          description: The reference of the subnet resource.
      type: object
    InboundNatPool:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: Inbound NAT pool of the load balancer.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            The name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/InboundNatPoolPropertiesFormat'
          x-ms-client-flatten: true
      type: object
    InboundNatPoolPropertiesFormat:
      description: Properties of Inbound NAT pool.
      properties:
        backendPort:
          description: >-
            The port used for internal connections on the endpoint. Acceptable
            values are between 1 and 65535.
          format: int32
          type: integer
        frontendIPConfiguration:
          $ref: ./network.json#/definitions/SubResource
          description: A reference to frontend IP addresses.
        frontendPortRangeEnd:
          description: >-
            The last port number in the range of external ports that will be
            used to provide Inbound Nat to NICs associated with a load balancer.
            Acceptable values range between 1 and 65535.
          format: int32
          type: integer
        frontendPortRangeStart:
          description: >-
            The first port number in the range of external ports that will be
            used to provide Inbound Nat to NICs associated with a load balancer.
            Acceptable values range between 1 and 65534.
          format: int32
          type: integer
        protocol:
          description: >-
            The transport protocol for the endpoint. Possible values are: 'Udp'
            or 'Tcp'.
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: >-
            Gets the provisioning state of the PublicIP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
      required:
        - protocol
        - frontendPortRangeStart
        - frontendPortRangeEnd
        - backendPort
      type: object
    InboundNatRule:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: Inbound NAT rule of the load balancer.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/InboundNatRulePropertiesFormat'
          x-ms-client-flatten: true
      type: object
    InboundNatRulePropertiesFormat:
      description: Properties of the inbound NAT rule.
      properties:
        backendIPConfiguration:
          $ref: ./networkInterface.json#/definitions/NetworkInterfaceIPConfiguration
          description: >-
            A reference to a private IP address defined on a network interface
            of a VM. Traffic sent to the frontend port of each of the frontend
            IP configurations is forwarded to the backed IP.
        backendPort:
          description: >-
            The port used for the internal endpoint. Acceptable values range
            from 1 to 65535.
          format: int32
          type: integer
        enableFloatingIP:
          description: >-
            Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn Availability Group.
            This setting is required when using the SQL AlwaysOn Availability
            Groups in SQL server. This setting can't be changed after you create
            the endpoint.
          type: boolean
        frontendIPConfiguration:
          $ref: ./network.json#/definitions/SubResource
          description: A reference to frontend IP addresses.
        frontendPort:
          description: >-
            The port for the external endpoint. Port numbers for each rule must
            be unique within the Load Balancer. Acceptable values range from 1
            to 65534.
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: >-
            The timeout for the TCP idle connection. The value can be set
            between 4 and 30 minutes. The default value is 4 minutes. This
            element is only used when the protocol is set to TCP.
          format: int32
          type: integer
        protocol:
          description: >-
            The transport protocol for the endpoint. Possible values are: 'Udp'
            or 'Tcp'
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: >-
            Gets the provisioning state of the public IP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
      type: object
    LoadBalancer:
      allOf:
        - $ref: ./network.json#/definitions/Resource
      description: LoadBalancer resource
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancerPropertiesFormat'
          x-ms-client-flatten: true
      type: object
    LoadBalancerListResult:
      description: Response for ListLoadBalancers API service call.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: A list of load balancers in a resource group.
          items:
            $ref: '#/components/schemas/LoadBalancer'
          type: array
      type: object
    LoadBalancerPropertiesFormat:
      description: Properties of the load balancer.
      properties:
        backendAddressPools:
          description: Collection of backend address pools used by a load balancer
          items:
            $ref: '#/components/schemas/BackendAddressPool'
          type: array
        frontendIPConfigurations:
          description: >-
            Object representing the frontend IPs to be used for the load
            balancer
          items:
            $ref: '#/components/schemas/FrontendIPConfiguration'
          type: array
        inboundNatPools:
          description: >-
            Defines an external port range for inbound NAT to a single backend
            port on NICs associated with a load balancer. Inbound NAT rules are
            created automatically for each NIC associated with the Load Balancer
            using an external port from this range. Defining an Inbound NAT pool
            on your Load Balancer is mutually exclusive with defining inbound
            Nat rules. Inbound NAT pools are referenced from virtual machine
            scale sets. NICs that are associated with individual virtual
            machines cannot reference an inbound NAT pool. They have to
            reference individual inbound NAT rules.
          items:
            $ref: '#/components/schemas/InboundNatPool'
          type: array
        inboundNatRules:
          description: >-
            Collection of inbound NAT Rules used by a load balancer. Defining
            inbound NAT rules on your load balancer is mutually exclusive with
            defining an inbound NAT pool. Inbound NAT pools are referenced from
            virtual machine scale sets. NICs that are associated with individual
            virtual machines cannot reference an Inbound NAT pool. They have to
            reference individual inbound NAT rules.
          items:
            $ref: '#/components/schemas/InboundNatRule'
          type: array
        loadBalancingRules:
          description: >-
            Object collection representing the load balancing rules Gets the
            provisioning 
          items:
            $ref: '#/components/schemas/LoadBalancingRule'
          type: array
        outboundNatRules:
          description: The outbound NAT rules.
          items:
            $ref: '#/components/schemas/OutboundNatRule'
          type: array
        probes:
          description: Collection of probe objects used in the load balancer
          items:
            $ref: '#/components/schemas/Probe'
          type: array
        provisioningState:
          description: >-
            Gets the provisioning state of the PublicIP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
        resourceGuid:
          description: The resource GUID property of the load balancer resource.
          type: string
      type: object
    LoadBalancingRule:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: A load balancing rule for a load balancer.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            The name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/LoadBalancingRulePropertiesFormat'
          x-ms-client-flatten: true
      type: object
    LoadBalancingRulePropertiesFormat:
      description: Properties of the load balancer.
      properties:
        backendAddressPool:
          $ref: ./network.json#/definitions/SubResource
          description: >-
            A reference to a pool of DIPs. Inbound traffic is randomly load
            balanced across IPs in the backend IPs.
        backendPort:
          description: >-
            The port used for internal connections on the endpoint. Acceptable
            values are between 1 and 65535. 
          format: int32
          type: integer
        enableFloatingIP:
          description: >-
            Configures a virtual machine's endpoint for the floating IP
            capability required to configure a SQL AlwaysOn Availability Group.
            This setting is required when using the SQL AlwaysOn Availability
            Groups in SQL server. This setting can't be changed after you create
            the endpoint.
          type: boolean
        frontendIPConfiguration:
          $ref: ./network.json#/definitions/SubResource
          description: A reference to frontend IP addresses.
        frontendPort:
          description: >-
            The port for the external endpoint. Port numbers for each rule must
            be unique within the Load Balancer. Acceptable values are between 1
            and 65534.
          format: int32
          type: integer
        idleTimeoutInMinutes:
          description: >-
            The timeout for the TCP idle connection. The value can be set
            between 4 and 30 minutes. The default value is 4 minutes. This
            element is only used when the protocol is set to TCP.
          format: int32
          type: integer
        loadDistribution:
          description: >-
            The load distribution policy for this rule. Possible values are
            'Default', 'SourceIP', and 'SourceIPProtocol'.
          enum:
            - Default
            - SourceIP
            - SourceIPProtocol
          type: string
          x-ms-enum:
            modelAsString: true
            name: LoadDistribution
        probe:
          $ref: ./network.json#/definitions/SubResource
          description: >-
            The reference of the load balancer probe used by the load balancing
            rule.
        protocol:
          description: >-
            The transport protocol for the external endpoint. Possible values
            are 'Udp' or 'Tcp'
          enum:
            - Udp
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
        provisioningState:
          description: >-
            Gets the provisioning state of the PublicIP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
      required:
        - protocol
        - frontendPort
      type: object
    OutboundNatRule:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: Outbound NAT pool of the load balancer.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            The name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/OutboundNatRulePropertiesFormat'
          x-ms-client-flatten: true
      type: object
    OutboundNatRulePropertiesFormat:
      description: Outbound NAT pool of the load balancer.
      properties:
        allocatedOutboundPorts:
          description: The number of outbound ports to be used for NAT.
          format: int32
          type: integer
        backendAddressPool:
          $ref: ./network.json#/definitions/SubResource
          description: >-
            A reference to a pool of DIPs. Outbound traffic is randomly load
            balanced across IPs in the backend IPs.
        frontendIPConfigurations:
          description: The Frontend IP addresses of the load balancer.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        provisioningState:
          description: >-
            Gets the provisioning state of the PublicIP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
      required:
        - backendAddressPool
      type: object
    Probe:
      allOf:
        - $ref: ./network.json#/definitions/SubResource
      description: A load balancer probe.
      properties:
        etag:
          description: >-
            A unique read-only string that changes whenever the resource is
            updated.
          type: string
        name:
          description: >-
            Gets name of the resource that is unique within a resource group.
            This name can be used to access the resource.
          type: string
        properties:
          $ref: '#/components/schemas/ProbePropertiesFormat'
          x-ms-client-flatten: true
      type: object
    ProbePropertiesFormat:
      properties:
        intervalInSeconds:
          description: >-
            The interval, in seconds, for how frequently to probe the endpoint
            for health status. Typically, the interval is slightly less than
            half the allocated timeout period (in seconds) which allows two full
            probes before taking the instance out of rotation. The default value
            is 15, the minimum value is 5.
          format: int32
          type: integer
        loadBalancingRules:
          description: The load balancer rules that use this probe.
          items:
            $ref: ./network.json#/definitions/SubResource
          type: array
        numberOfProbes:
          description: >-
            The number of probes where if no response, will result in stopping
            further traffic from being delivered to the endpoint. This values
            allows endpoints to be taken out of rotation faster or slower than
            the typical times used in Azure.
          format: int32
          type: integer
        port:
          description: >-
            The port for communicating the probe. Possible values range from 1
            to 65535, inclusive.
          format: int32
          type: integer
        protocol:
          description: >-
            The protocol of the end point. Possible values are: 'Http' or 'Tcp'.
            If 'Tcp' is specified, a received ACK is required for the probe to
            be successful. If 'Http' is specified, a 200 OK response from the
            specifies URI is required for the probe to be successful.
          enum:
            - Http
            - Tcp
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProbeProtocol
        provisioningState:
          description: >-
            Gets the provisioning state of the public IP resource. Possible
            values are: 'Updating', 'Deleting', and 'Failed'.
          type: string
        requestPath:
          description: >-
            The URI used for requesting health status from the VM. Path is
            required if a protocol is set to http. Otherwise, it is not allowed.
            There is no default value.
          type: string
      required:
        - protocol
        - port
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

