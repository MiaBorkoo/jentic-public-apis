{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for performing operations on tenant entity associated with your Azure API Management deployment. Using this entity you can manage properties and configuration that apply to the entire API Management service instance.",
    "title": "ApiManagementClient",
    "version": "2017-03-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/control-plane/Microsoft.ApiManagement/preview/2017-03-01/apimtenant.json"
  },
  "servers": [
    {
      "url": "{apimBaseUrl}",
      "variables": {
        "apimBaseUrl": {
          "default": "",
          "description": "The management endpoint of the API Management service, for example https://myapimservice.management.azure-api.net.",
          "x-ms-skip-url-encoding": true
        }
      }
    }
  ],
  "paths": {
    "/tenant/{accessName}": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessInformationContract"
                }
              }
            },
            "description": "Tenant Access information.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "TenantAccess"
        ],
        "description": "Get tenant access information details.",
        "operationId": "TenantAccess_Get",
        "x-ms-examples": {
          "ApiManagementGetTenant": {
            "$ref": "./examples/ApiManagementGetTenant.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessParameter"
          },
          {
            "description": "The entity state (Etag) version of the property to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Tenant's access information updated successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccess"
        ],
        "description": "Update tenant access information details.",
        "operationId": "TenantAccess_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessInformationUpdateParameters"
              }
            }
          },
          "description": "Parameters supplied to retrieve the Tenant Access Information.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementPatchTenant": {
            "$ref": "./examples/ApiManagementPatchTenant.json"
          }
        }
      }
    },
    "/tenant/{accessName}/git": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessInformationContract"
                }
              }
            },
            "description": "Git Access Information for the Service.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccessGit"
        ],
        "description": "Gets the Git access configuration for the tenant.",
        "operationId": "TenantAccessGit_Get",
        "x-ms-examples": {
          "ApiManagementListTenantGit": {
            "$ref": "./examples/ApiManagementListTenantGit.json"
          }
        }
      }
    },
    "/tenant/{accessName}/git/regeneratePrimaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccessGit"
        ],
        "description": "Regenerate primary access key for GIT.",
        "operationId": "TenantAccessGit_RegeneratePrimaryKey",
        "x-ms-examples": {
          "ApiManagementPostTenantGit": {
            "$ref": "./examples/ApiManagementPostTenantGit.json"
          }
        }
      }
    },
    "/tenant/{accessName}/git/regenerateSecondaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccessGit"
        ],
        "description": "Regenerate secondary access key for GIT.",
        "operationId": "TenantAccessGit_RegenerateSecondaryKey",
        "x-ms-examples": {
          "ApiManagementPostTenantGit": {
            "$ref": "./examples/ApiManagementPostTenantGit.json"
          }
        }
      }
    },
    "/tenant/{accessName}/regeneratePrimaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccess"
        ],
        "description": "Regenerate primary access key.",
        "operationId": "TenantAccess_RegeneratePrimaryKey",
        "x-ms-examples": {
          "ApiManagementPostTenantRegeneratePrimaryKey": {
            "$ref": "./examples/ApiManagementPostTenantRegeneratePrimaryKey.json"
          }
        }
      }
    },
    "/tenant/{accessName}/regenerateSecondaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/AccessParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantAccess"
        ],
        "description": "Regenerate secondary access key.",
        "operationId": "TenantAccess_RegenerateSecondaryKey",
        "x-ms-examples": {
          "ApiManagementPostTenantRegenerateSecondaryKey": {
            "$ref": "./examples/ApiManagementPostTenantRegenerateSecondaryKey.json"
          }
        }
      }
    },
    "/tenant/{configurationName}/deploy": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultContract"
                }
              }
            },
            "description": "Result of applying changes from Git branch to database."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantConfiguration"
        ],
        "externalDocs": {
          "description": "To deploy any service configuration changes to the API Management service instance",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-deploy-any-service-configuration-changes-to-the-api-management-service-instance"
        },
        "description": "This operation applies changes from the specified Git branch to the configuration database. This is a long running operation and could take several minutes to complete.",
        "operationId": "TenantConfiguration_Deploy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployConfigurationParameters"
              }
            }
          },
          "description": "Deploy Configuration parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementPostTenantDeploy": {
            "$ref": "./examples/ApiManagementPostTenantDeploy.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tenant/{configurationName}/save": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultContract"
                }
              }
            },
            "description": "Result of creating a commit in the repository."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantConfiguration"
        ],
        "externalDocs": {
          "description": "To save the service configuration to the Git repository",
          "url": "https://azure.microsoft.com/en-us/documentation/articles/api-management-configuration-repository-git/#to-save-the-service-configuration-to-the-git-repository"
        },
        "description": "This operation creates a commit with the current configuration snapshot to the specified branch in the repository. This is a long running operation and could take several minutes to complete.",
        "operationId": "TenantConfiguration_Save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveConfigurationParameter"
              }
            }
          },
          "description": "Save Configuration parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementPostTenantSave": {
            "$ref": "./examples/ApiManagementPostTenantSave.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/tenant/{configurationName}/syncState": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantConfigurationSyncStateContract"
                }
              }
            },
            "description": "Sync state result."
          }
        },
        "tags": [
          "TenantConfigurationSyncState"
        ],
        "description": "Gets the status of the most recent synchronization between the configuration database and the Git repository.",
        "operationId": "TenantConfiguration_GetSyncState",
        "x-ms-examples": {
          "ApiManagementListTenantSyncState": {
            "$ref": "./examples/ApiManagementListTenantSyncState.json"
          }
        }
      }
    },
    "/tenant/{configurationName}/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ConfigurationParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationResultContract"
                }
              }
            },
            "description": "Result of validating the changes in the specified Git branch."
          },
          "202": {
            "description": "Accepted: Location header contains the URL where the status of the long running operation can be checked."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "TenantConfiguration"
        ],
        "description": "This operation validates the changes in the specified Git branch. This is a long running operation and could take several minutes to complete.",
        "operationId": "TenantConfiguration_Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployConfigurationParameters"
              }
            }
          },
          "description": "Validate Configuration parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementPostTenantValidate": {
            "$ref": "./examples/ApiManagementPostTenantValidate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "AccessParameter": {
        "description": "The identifier of the Access configuration.",
        "in": "path",
        "name": "accessName",
        "required": true,
        "schema": {
          "enum": [
            "access"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AccessIdName"
        },
        "x-ms-parameter-location": "method"
      },
      "ConfigurationParameter": {
        "description": "The identifier of the Git Configuration Operation.",
        "in": "path",
        "name": "configurationName",
        "required": true,
        "schema": {
          "enum": [
            "configuration"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "configurationIdName"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AccessInformationContract": {
        "description": "Tenant access information contract of the API Management service.",
        "properties": {
          "enabled": {
            "description": "Tenant access information of the API Management service.",
            "type": "boolean"
          },
          "id": {
            "description": "Identifier.",
            "type": "string"
          },
          "primaryKey": {
            "description": "Primary access key.",
            "type": "string"
          },
          "secondaryKey": {
            "description": "Secondary access key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccessInformationUpdateParameters": {
        "description": "Tenant access information update parameters of the API Management service.",
        "properties": {
          "enabled": {
            "description": "Tenant access information of the API Management service.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DeployConfigurationParameters": {
        "description": "Parameters supplied to the Deploy Configuration operation.",
        "properties": {
          "branch": {
            "description": "The name of the Git branch from which the configuration is to be deployed to the configuration database.",
            "type": "string"
          },
          "force": {
            "description": "The value enforcing deleting subscriptions to products that are deleted in this update.",
            "type": "boolean"
          }
        },
        "required": [
          "branch"
        ],
        "type": "object"
      },
      "OperationResultContract": {
        "description": "Operation Result.",
        "properties": {
          "actionLog": {
            "description": "This property if only provided as part of the TenantConfiguration_Validate operation. It contains the log the entities which will be updated/created/deleted as part of the TenantConfiguration_Deploy operation.",
            "items": {
              "$ref": "#/components/schemas/OperationResultLogItemContract"
            },
            "readOnly": true,
            "type": "array"
          },
          "error": {
            "$ref": "./apimanagement.json#/definitions/ErrorResponse",
            "description": "Error Body Contract"
          },
          "id": {
            "description": "Operation result identifier.",
            "type": "string"
          },
          "resultInfo": {
            "description": "Optional result info.",
            "type": "string"
          },
          "started": {
            "description": "Start time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of an async operation.",
            "enum": [
              "Started",
              "InProgress",
              "Succeeded",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AsyncOperationStatus"
            }
          },
          "updated": {
            "description": "Last update time of an async operation. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationResultLogItemContract": {
        "description": "Log of the entity being created, updated or deleted.",
        "properties": {
          "action": {
            "description": "Action like create/update/delete.",
            "type": "string"
          },
          "objectKey": {
            "description": "Identifier of the entity being created/updated/deleted.",
            "type": "string"
          },
          "objectType": {
            "description": "The type of entity contract.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SaveConfigurationParameter": {
        "description": "Parameters supplied to the Save Tenant Configuration operation.",
        "properties": {
          "branch": {
            "description": "The name of the Git branch in which to commit the current configuration snapshot.",
            "type": "string"
          },
          "force": {
            "description": "The value if true, the current configuration database is committed to the Git repository, even if the Git repository has newer changes that would be overwritten.",
            "type": "boolean"
          }
        },
        "required": [
          "branch"
        ],
        "type": "object"
      },
      "TenantConfigurationSyncStateContract": {
        "description": "Tenant Configuration Synchronization State.",
        "properties": {
          "branch": {
            "description": "The name of Git branch.",
            "type": "string"
          },
          "commitId": {
            "description": "The latest commit Id.",
            "type": "string"
          },
          "configurationChangeDate": {
            "description": "The date of the latest configuration change. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "isExport": {
            "description": "value indicating if last sync was save (true) or deploy (false) operation.",
            "type": "boolean"
          },
          "isGitEnabled": {
            "description": "value indicating whether Git configuration access is enabled.",
            "type": "boolean"
          },
          "isSynced": {
            "description": "value indicating if last synchronization was later than the configuration change.",
            "type": "boolean"
          },
          "syncDate": {
            "description": "The date of the latest synchronization. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "apim_key": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "apim_key": []
    }
  ]
}