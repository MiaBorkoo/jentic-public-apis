openapi: 3.0.0
info:
  description: >-
    The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2017-03-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgentListResult'
          description: Successfully retrieved the list of job agents.
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobAgents
      description: Gets a list of job agents in a server.
      operationId: JobAgents_ListByServer
      x-ms-examples:
        List job agents in a server:
          $ref: ./examples/ListJobAgentsByServer.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent to be deleted.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the job agent.
        '202':
          description: Accepted
        '204':
          description: The specified job agent does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.
      tags:
        - JobAgents
      description: Deletes a job agent.
      operationId: JobAgents_Delete
      x-ms-examples:
        Delete a job agent:
          $ref: ./examples/DeleteJobAgent.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent to be retrieved.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgent'
          description: Successfully retrieved the specified job agent.
        default:
          description: |-
            *** Error Responses: ***

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.
      tags:
        - JobAgents
      description: Gets a job agent.
      operationId: JobAgents_Get
      x-ms-examples:
        Get a job agent:
          $ref: ./examples/GetJobAgent.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent to be updated.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgent'
          description: Successfully updated the job agent.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 PropertyChangeUnsupported - Property cannot be modified.
      tags:
        - JobAgents
      description: Updates a job agent.
      operationId: JobAgents_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAgentUpdate'
        description: The update to the job agent.
        required: true
      x-ms-examples:
        Update a job agent's tags.:
          $ref: ./examples/UpdateJobAgent.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent to be created or updated.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgent'
          description: Successfully updated the job agent.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAgent'
          description: Successfully created the job agent.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 400 MissingSkuName - Sku name is required.

             * 400 InvalidDatabaseResourceId - Invalid database resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 DatabaseDoesNotExist - The requested database was not found

             * 400 JobAgentExceededQuota - Could not create job agent because it would exceed the quota.

             * 400 JobAgentAlreadyExists - The job agent already exists on the server.

             * 400 JobAgentDatabaseEditionUnsupported - The specified database's service level objective is not supported for use as a job agent database.

             * 400 JobAgentDatabaseSecondary - A job agent cannot be linked to a geo-secondary database.

             * 400 JobAgentDatabaseAlreadyLinked - The specified database is already linked to another job agent.

             * 400 CannotUseReservedDatabaseName - Cannot use reserved database name in this operation.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SubscriptionNotFound - The requested subscription was not found.

             * 404 PropertyChangeUnsupported - Property cannot be modified.
      tags:
        - JobAgents
      description: Creates or updates a job agent.
      operationId: JobAgents_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobAgent'
        description: The requested job agent resource state.
        required: true
      x-ms-examples:
        Create or update a job agent with all properties:
          $ref: ./examples/CreateOrUpdateJobAgentMax.json
        Create or update a job agent with minimum properties:
          $ref: ./examples/CreateOrUpdateJobAgentMin.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCredentialListResult'
          description: Successfully retrieved the list of job credentials.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobCredentials
      description: Gets a list of jobs credentials.
      operationId: JobCredentials_ListByAgent
      x-ms-examples:
        List credentials in a job agent:
          $ref: ./examples/ListJobCredentialsByAgent.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the credential.
        '204':
          description: A credential with the specified name does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobCredentials
      description: Deletes a job credential.
      operationId: JobCredentials_Delete
      x-ms-examples:
        Delete a credential:
          $ref: ./examples/DeleteJobCredential.json
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCredential'
          description: Successfully retrieved the job credential.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobCredentials
      description: Gets a jobs credential.
      operationId: JobCredentials_Get
      x-ms-examples:
        Get a credential:
          $ref: ./examples/GetJobCredential.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the credential.
          in: path
          name: credentialName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCredential'
          description: Successfully updated the credential.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCredential'
          description: Successfully created the credential.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 400 InvalidJobCredentialUsername - Invalid credential username.

             * 403 JobCredentialPermissionError - Azure Resource Manager does not have permission to use or manage the credential.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobCredentials
      description: Creates or updates a job credential.
      operationId: JobCredentials_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCredential'
        description: The requested job credential state.
        required: true
      x-ms-examples:
        Create or update a credential:
          $ref: ./examples/CreateOrUpdateJobCredential.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/executions':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: >-
            If specified, only job executions created at or after the specified
            time are included.
          in: query
          name: createTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions created before the specified time
            are included.
          in: query
          name: createTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed at or after the
            specified time are included.
          in: query
          name: endTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed before the specified
            time are included.
          in: query
          name: endTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only active or only completed job executions are
            included.
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - description: The number of elements in the collection to skip.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The number of elements to return from the collection.
          in: query
          name: $top
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionListResult'
          description: Successfully retrieved job executions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobExecutions
      description: Lists all executions in a job agent.
      operationId: JobExecutions_ListByAgent
      x-ms-examples:
        List all job executions in a job agent with filtering.:
          $ref: ./examples/ListJobExecutionsByAgentWithFilter.json
        List all job executions in a job agent.:
          $ref: ./examples/ListJobExecutionsByAgent.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
          description: Successfully retrieved the list of jobs.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - Jobs
      description: Gets a list of jobs.
      operationId: Jobs_ListByAgent
      x-ms-examples:
        List jobs in a job agent:
          $ref: ./examples/ListJobsByAgent.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to delete.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the job.
        '204':
          description: The specified job does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - Jobs
      description: Deletes a job.
      operationId: Jobs_Delete
      x-ms-examples:
        Delete a job:
          $ref: ./examples/DeleteJob.json
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successfully retrieved the job.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - Jobs
      description: Gets a job.
      operationId: Jobs_Get
      x-ms-examples:
        Get a job:
          $ref: ./examples/GetJob.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successfully updated the job.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Successfully created the job.
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 400 InvalidDuration - Invalid duration.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - Jobs
      description: Creates or updates a job.
      operationId: Jobs_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        description: The requested job state.
        required: true
      x-ms-examples:
        Create a job with all properties specified:
          $ref: ./examples/CreateOrUpdateJobMax.json
        Create a job with default properties:
          $ref: ./examples/CreateOrUpdateJobMin.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: >-
            If specified, only job executions created at or after the specified
            time are included.
          in: query
          name: createTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions created before the specified time
            are included.
          in: query
          name: createTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed at or after the
            specified time are included.
          in: query
          name: endTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed before the specified
            time are included.
          in: query
          name: endTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only active or only completed job executions are
            included.
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - description: The number of elements in the collection to skip.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The number of elements to return from the collection.
          in: query
          name: $top
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionListResult'
          description: Successfully retrieved job executions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobExecutions
      description: Lists a job's executions.
      operationId: JobExecutions_ListByJob
      x-ms-examples:
        List a job's executions.:
          $ref: ./examples/ListJobExecutionsByJob.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: Successfully retrieved the job.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobExecutions
      description: Gets a job execution.
      operationId: JobExecutions_Get
      x-ms-examples:
        Get a job execution.:
          $ref: ./examples/GetJobExecution.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The job execution id to create the job execution under.
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: A job execution for the job with the given id already existed.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: Successfully started an execution for the job.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobExecutions
      description: Creates or updates a job execution.
      operationId: JobExecutions_CreateOrUpdate
      x-ms-examples:
        Create job execution.:
          $ref: ./examples/CreateOrUpdateJobExecution.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The id of the job execution to cancel.
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully requested cancellation of the job execution.
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobExecutions
      description: Requests cancellation of a job execution.
      operationId: JobExecutions_Cancel
      x-ms-examples:
        Cancel a job execution.:
          $ref: ./examples/CancelJobExecution.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            If specified, only job executions created at or after the specified
            time are included.
          in: query
          name: createTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions created before the specified time
            are included.
          in: query
          name: createTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed at or after the
            specified time are included.
          in: query
          name: endTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed before the specified
            time are included.
          in: query
          name: endTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only active or only completed job executions are
            included.
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - description: The number of elements in the collection to skip.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The number of elements to return from the collection.
          in: query
          name: $top
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionListResult'
          description: Successfully retrieved the step executions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobStepExecutions
      description: Lists the step executions of a job execution.
      operationId: JobStepExecutions_ListByJobExecution
      x-ms-examples:
        List job step executions:
          $ref: ./examples/ListJobExecutionSteps.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The unique id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - description: The name of the step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: Successfully retrieved the step execution.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobStepExecutions
      description: Gets a step execution of a job execution.
      operationId: JobStepExecutions_Get
      x-ms-examples:
        Get a job step execution:
          $ref: ./examples/GetJobExecutionStep.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - description: The name of the step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - description: >-
            If specified, only job executions created at or after the specified
            time are included.
          in: query
          name: createTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions created before the specified time
            are included.
          in: query
          name: createTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed at or after the
            specified time are included.
          in: query
          name: endTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed before the specified
            time are included.
          in: query
          name: endTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only active or only completed job executions are
            included.
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - description: The number of elements in the collection to skip.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The number of elements to return from the collection.
          in: query
          name: $top
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionListResult'
          description: Successfully retrieved the target executions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobTargetExecutions
      description: Lists the target executions of a job step execution.
      operationId: JobTargetExecutions_ListByStep
      x-ms-examples:
        List job step target executions:
          $ref: ./examples/ListJobExecutionTargetsByStep.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets/{targetId}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The unique id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - description: The name of the step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - description: The target id.
          in: path
          name: targetId
          required: true
          schema:
            format: uuid
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: Successfully retrieved the target execution.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobTargetExecutions
      description: Gets a target execution.
      operationId: JobTargetExecutions_Get
      x-ms-examples:
        Get a job step target execution:
          $ref: ./examples/GetJobExecutionTarget.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/targets':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The id of the job execution
          in: path
          name: jobExecutionId
          required: true
          schema:
            format: uuid
            type: string
        - description: >-
            If specified, only job executions created at or after the specified
            time are included.
          in: query
          name: createTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions created before the specified time
            are included.
          in: query
          name: createTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed at or after the
            specified time are included.
          in: query
          name: endTimeMin
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only job executions completed before the specified
            time are included.
          in: query
          name: endTimeMax
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            If specified, only active or only completed job executions are
            included.
          in: query
          name: isActive
          required: false
          schema:
            type: boolean
        - description: The number of elements in the collection to skip.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The number of elements to return from the collection.
          in: query
          name: $top
          required: false
          schema:
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecutionListResult'
          description: Successfully retrieved the target executions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobTargetExecutions
      description: Lists target executions for all steps of a job execution.
      operationId: JobTargetExecutions_ListByJobExecution
      x-ms-examples:
        List job step target executions:
          $ref: ./examples/ListJobExecutionTargetsByExecution.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/start':
    post:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExecution'
          description: Successfully started an execution for the job.
        '202':
          description: Accepted
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobExecutions
      description: Starts an elastic job execution.
      operationId: JobExecutions_Create
      x-ms-examples:
        Start a job execution.:
          $ref: ./examples/CreateJobExecution.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStepListResult'
          description: Successfully retrieved the list of job steps.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobSteps
      description: Gets all job steps for a job's current version.
      operationId: JobSteps_ListByJob
      x-ms-examples:
        List job steps for the latest version of a job.:
          $ref: ./examples/ListJobStepsByJob.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The name of the job step to delete.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the job step.
        '204':
          description: The specified job step does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobSteps
      description: Deletes a job step. This will implicitly create a new job version.
      operationId: JobSteps_Delete
      x-ms-examples:
        Delete a job step.:
          $ref: ./examples/DeleteJobStep.json
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The name of the job step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStep'
          description: Successfully retrieved the job step.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobSteps
      description: Gets a job step in a job's current version.
      operationId: JobSteps_Get
      x-ms-examples:
        Get the latest version of a job step.:
          $ref: ./examples/GetJobStepByJob.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The name of the job step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStep'
          description: Successfully updated the job step.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStep'
          description: Successfully added the job step.
        default:
          description: |-
            *** Error Responses: ***

             * 400 JobStepIdMismatch - Step Id in the specified Job Step URI does not match step id in provided Job Step Resource.

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobSteps
      description: >-
        Creates or updates a job step. This will implicitly create a new job
        version.
      operationId: JobSteps_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobStep'
        description: The requested state of the job step.
        required: true
      x-ms-examples:
        Create or update a job step with all properties specified.:
          $ref: ./examples/CreateOrUpdateJobStepMax.json
        Create or update a job step with minimal properties specified.:
          $ref: ./examples/CreateOrUpdateJobStepMin.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobVersionListResult'
          description: Successfully retrieved the list of versions.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobVersions
      description: Gets all versions of a job.
      operationId: JobVersions_ListByJob
      x-ms-examples:
        Get all versions of a job.:
          $ref: ./examples/ListJobVersions.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The version of the job to get.
          in: path
          name: jobVersion
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobVersion'
          description: Successfully retrieved the job version.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobVersions
      description: Gets a job version.
      operationId: JobVersions_Get
      x-ms-examples:
        Get a version of a job.:
          $ref: ./examples/GetJobVersion.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job to get.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The version of the job to get.
          in: path
          name: jobVersion
          required: true
          schema:
            format: int32
            type: integer
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStepListResult'
          description: Successfully retrieved the list of job steps.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobSteps
      description: Gets all job steps in the specified job version.
      operationId: JobSteps_ListByVersion
      x-ms-examples:
        List job steps for the specified version of a job.:
          $ref: ./examples/ListJobStepsByVersion.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps/{stepName}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the job.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - description: The version of the job to get.
          in: path
          name: jobVersion
          required: true
          schema:
            format: int32
            type: integer
        - description: The name of the job step.
          in: path
          name: stepName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStep'
          description: Successfully retrieved the job step.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobSteps
      description: Gets the specified version of a job step.
      operationId: JobSteps_GetByVersion
      x-ms-examples:
        Get the specified version of a job step.:
          $ref: ./examples/GetJobStepByVersion.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTargetGroupListResult'
          description: Successfully retrieved the list of target groups.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobTargetGroups
      description: Gets all target groups in an agent.
      operationId: JobTargetGroups_ListByAgent
      x-ms-examples:
        Get all target groups in an agent.:
          $ref: ./examples/ListJobTargetGroups.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the target group.
          in: path
          name: targetGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the target group.
        '204':
          description: A target group with the specified name does not exist.
        default:
          description: |-
            *** Error Responses: ***

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobTargetGroups
      description: Deletes a target group.
      operationId: JobTargetGroups_Delete
      x-ms-examples:
        Delete a target group.:
          $ref: ./examples/DeleteJobTargetGroup.json
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the target group.
          in: path
          name: targetGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTargetGroup'
          description: Successfully retrieved the target group.
        default:
          description: |-
            *** Error Responses: ***

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - JobTargetGroups
      description: Gets a target group.
      operationId: JobTargetGroups_Get
      x-ms-examples:
        Get a target group.:
          $ref: ./examples/GetJobTargetGroup.json
    put:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the job agent.
          in: path
          name: jobAgentName
          required: true
          schema:
            type: string
        - description: The name of the target group.
          in: path
          name: targetGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTargetGroup'
          description: Successfully updated the target group.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTargetGroup'
          description: Successfully created the target group.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidResourceRequestBody - The resource or resource properties in the request body is empty or invalid.

             * 400 InvalidResourceId - Invalid resource identifier.

             * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.

             * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.

             * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.

             * 400 MismatchingJobAccountNameWithUrl - The provided job account name did not match the name in the Url.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 400 ElasticJobsOperationFailed - Elastic jobs management operation failed.

             * 404 JobAgentNotFound - Specified job agent does not exist in the specified logical server.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - JobTargetGroups
      description: Creates or updates a target group.
      operationId: JobTargetGroups_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobTargetGroup'
        description: The requested state of the target group.
        required: true
      x-ms-examples:
        Create or update a target group with all properties.:
          $ref: ./examples/CreateOrUpdateJobTargetGroupMax.json
        Create or update a target group with minimal properties.:
          $ref: ./examples/CreateOrUpdateJobTargetGroupMin.json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    BlobAuditingPolicyNameParameter:
      description: The name of the blob auditing policy.
      in: path
      name: blobAuditingPolicyName
      required: true
      schema:
        enum:
          - default
        type: string
      x-ms-parameter-location: method
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: >-
        The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
  schemas:
    Job:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: A job.
      properties:
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    JobAgent:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/TrackedResource
      description: An Azure SQL job agent.
      properties:
        properties:
          $ref: '#/components/schemas/JobAgentProperties'
          description: Resource properties.
          x-ms-client-flatten: true
        sku:
          $ref: ../../../common/v1/types.json#/definitions/Sku
          description: The name and tier of the SKU.
      required:
        - location
      type: object
    JobAgentListResult:
      description: A list of Azure SQL job agents.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobAgent'
          readOnly: true
          type: array
      type: object
    JobAgentProperties:
      description: Properties of a job agent.
      properties:
        databaseId:
          description: Resource ID of the database to store job metadata in.
          type: string
          x-ms-mutability:
            - read
            - create
        state:
          description: The state of the job agent.
          enum:
            - Creating
            - Ready
            - Updating
            - Deleting
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobAgentState
      required:
        - databaseId
      type: object
    JobAgentUpdate:
      description: An update to an Azure SQL job agent.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
      type: object
    JobCredential:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: >-
        A stored credential that can be used by a job to connect to target
        databases.
      properties:
        properties:
          $ref: '#/components/schemas/JobCredentialProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    JobCredentialListResult:
      description: A list of job credentials.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobCredential'
          readOnly: true
          type: array
      type: object
    JobCredentialProperties:
      description: Properties of a job credential.
      properties:
        password:
          description: The credential password.
          type: string
          x-ms-mutability:
            - create
            - update
        username:
          description: The credential user name.
          type: string
      required:
        - username
        - password
      type: object
    JobExecution:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: An execution of a job
      properties:
        properties:
          $ref: '#/components/schemas/JobExecutionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    JobExecutionListResult:
      description: A list of job executions.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobExecution'
          readOnly: true
          type: array
      type: object
    JobExecutionProperties:
      description: Properties for an Azure SQL Database Elastic job execution.
      properties:
        createTime:
          description: The time that the job execution was created.
          format: date-time
          readOnly: true
          type: string
        currentAttemptStartTime:
          description: Start time of the current attempt.
          format: date-time
          readOnly: true
          type: string
        currentAttempts:
          description: Number of times the job execution has been attempted.
          format: int32
          type: integer
        endTime:
          description: The time that the job execution completed.
          format: date-time
          readOnly: true
          type: string
        jobExecutionId:
          description: The unique identifier of the job execution.
          format: uuid
          readOnly: true
          type: string
        jobVersion:
          description: The job version number.
          format: int32
          readOnly: true
          type: integer
        lastMessage:
          description: The last status or error message.
          readOnly: true
          type: string
        lifecycle:
          description: The detailed state of the job execution.
          enum:
            - Created
            - InProgress
            - WaitingForChildJobExecutions
            - WaitingForRetry
            - Succeeded
            - SucceededWithSkipped
            - Failed
            - TimedOut
            - Canceled
            - Skipped
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobExecutionLifecycle
        provisioningState:
          description: The ARM provisioning state of the job execution.
          enum:
            - Created
            - InProgress
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        startTime:
          description: The time that the job execution started.
          format: date-time
          readOnly: true
          type: string
        stepId:
          description: The job step id.
          format: int32
          readOnly: true
          type: integer
        stepName:
          description: The job step name.
          readOnly: true
          type: string
        target:
          $ref: '#/components/schemas/JobExecutionTarget'
          description: The target that this execution is executed on.
          readOnly: true
      type: object
    JobExecutionTarget:
      description: The target that a job execution is executed on.
      properties:
        databaseName:
          description: The database name.
          readOnly: true
          type: string
        serverName:
          description: The server name.
          readOnly: true
          type: string
        type:
          description: The type of the target.
          enum:
            - TargetGroup
            - SqlDatabase
            - SqlElasticPool
            - SqlShardMap
            - SqlServer
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobTargetType
      type: object
    JobListResult:
      description: A list of jobs.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/Job'
          readOnly: true
          type: array
      type: object
    JobProperties:
      description: Properties of a job.
      properties:
        description:
          default: ''
          description: User-defined description of the job.
          type: string
        schedule:
          $ref: '#/components/schemas/JobSchedule'
          description: Schedule properties of the job.
        version:
          description: The job version number.
          format: int32
          readOnly: true
          type: integer
      type: object
    JobSchedule:
      description: Scheduling properties of a job.
      properties:
        enabled:
          description: Whether or not the schedule is enabled.
          type: boolean
        endTime:
          default: '9999-12-31T11:59:59Z'
          description: Schedule end time.
          format: date-time
          type: string
        interval:
          description: >-
            Value of the schedule's recurring interval, if the schedule type is
            recurring. ISO8601 duration format.
          type: string
        startTime:
          default: '0001-01-01T00:00:00Z'
          description: Schedule start time.
          format: date-time
          type: string
        type:
          default: Once
          description: Schedule interval type
          enum:
            - Once
            - Recurring
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobScheduleType
      type: object
    JobStep:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: A job step.
      properties:
        properties:
          $ref: '#/components/schemas/JobStepProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    JobStepAction:
      description: The action to be executed by a job step.
      properties:
        source:
          default: Inline
          description: The source of the action to execute.
          enum:
            - Inline
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobStepActionSource
        type:
          default: TSql
          description: Type of action being executed by the job step.
          enum:
            - TSql
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobStepActionType
        value:
          description: >-
            The action value, for example the text of the T-SQL script to
            execute.
          type: string
      required:
        - value
      type: object
    JobStepExecutionOptions:
      description: The execution options of a job step.
      properties:
        initialRetryIntervalSeconds:
          default: 1
          description: Initial delay between retries for job step execution.
          format: int32
          type: integer
        maximumRetryIntervalSeconds:
          default: 120
          description: >-
            The maximum amount of time to wait between retries for job step
            execution.
          format: int32
          type: integer
        retryAttempts:
          default: 10
          description: >-
            Maximum number of times the job step will be reattempted if the
            first attempt fails.
          format: int32
          type: integer
        retryIntervalBackoffMultiplier:
          default: 2
          description: The backoff multiplier for the time between retries.
          format: float
          type: number
        timeoutSeconds:
          default: 43200
          description: Execution timeout for the job step.
          format: int32
          type: integer
      type: object
    JobStepListResult:
      description: A list of job steps.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobStep'
          readOnly: true
          type: array
      type: object
    JobStepOutput:
      description: The output configuration of a job step.
      properties:
        credential:
          description: >-
            The resource ID of the credential to use to connect to the output
            destination.
          type: string
        databaseName:
          description: The output destination database.
          type: string
        resourceGroupName:
          description: The output destination resource group.
          type: string
        schemaName:
          default: dbo
          description: The output destination schema.
          type: string
        serverName:
          description: The output destination server name.
          type: string
        subscriptionId:
          description: The output destination subscription id.
          format: uuid
          type: string
        tableName:
          description: The output destination table.
          type: string
        type:
          default: SqlDatabase
          description: The output destination type.
          enum:
            - SqlDatabase
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobStepOutputType
      required:
        - serverName
        - databaseName
        - tableName
        - credential
      type: object
    JobStepProperties:
      description: Properties of a job step.
      properties:
        action:
          $ref: '#/components/schemas/JobStepAction'
          description: The action payload of the job step.
        credential:
          description: >-
            The resource ID of the job credential that will be used to connect
            to the targets.
          type: string
        executionOptions:
          $ref: '#/components/schemas/JobStepExecutionOptions'
          description: Execution options for the job step.
        output:
          $ref: '#/components/schemas/JobStepOutput'
          description: Output destination properties of the job step.
        stepId:
          description: >-
            The job step's index within the job. If not specified when creating
            the job step, it will be created as the last step. If not specified
            when updating the job step, the step id is not modified.
          format: int32
          type: integer
        targetGroup:
          description: >-
            The resource ID of the target group that the job step will be
            executed on.
          type: string
      required:
        - targetGroup
        - credential
        - action
      type: object
    JobTarget:
      description: >-
        A job target, for example a specific database or a container of
        databases that is evaluated during job execution.
      properties:
        databaseName:
          description: The target database name.
          type: string
        elasticPoolName:
          description: The target elastic pool name.
          type: string
        membershipType:
          default: Include
          description: Whether the target is included or excluded from the group.
          enum:
            - Include
            - Exclude
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobTargetGroupMembershipType
        refreshCredential:
          description: >-
            The resource ID of the credential that is used during job execution
            to connect to the target and determine the list of databases inside
            the target.
          type: string
        serverName:
          description: The target server name.
          type: string
        shardMapName:
          description: The target shard map.
          type: string
        type:
          description: The target type.
          enum:
            - TargetGroup
            - SqlDatabase
            - SqlElasticPool
            - SqlShardMap
            - SqlServer
          type: string
          x-ms-enum:
            modelAsString: true
            name: JobTargetType
      required:
        - type
      type: object
    JobTargetGroup:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: A group of job targets.
      properties:
        properties:
          $ref: '#/components/schemas/JobTargetGroupProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    JobTargetGroupListResult:
      description: A list of target groups.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobTargetGroup'
          readOnly: true
          type: array
      type: object
    JobTargetGroupProperties:
      description: Properties of job target group.
      properties:
        members:
          description: Members of the target group.
          items:
            $ref: '#/components/schemas/JobTarget'
          type: array
      required:
        - members
      type: object
    JobVersion:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: A job version.
      properties: {}
      type: object
    JobVersionListResult:
      description: A list of job versions.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: '#/components/schemas/JobVersion'
          readOnly: true
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

