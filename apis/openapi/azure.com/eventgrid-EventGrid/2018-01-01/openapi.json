{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure EventGrid Client",
    "title": "EventGridClient",
    "version": "2018-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/eventgrid/data-plane/Microsoft.EventGrid/stable/2018-01-01/EventGrid.json"
  },
  "servers": [
    {
      "url": "{topicHostname}",
      "variables": {
        "topicHostname": {
          "default": "",
          "description": "The host name of the topic, e.g. topic1.westus2-1.eventgrid.azure.net",
          "x-ms-skip-url-encoding": true
        }
      }
    }
  ],
  "paths": {},
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Version of the API to be used with the client request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ChannelNameParameter": {
        "description": "Required only when publishing to partner namespaces with partner topic routing mode ChannelNameHeader.",
        "in": "header",
        "name": "aeg-channel-name",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "CloudEventEvent": {
        "additionalProperties": true,
        "description": "Properties of an event published to an Event Grid topic using the CloudEvent 1.0 Schema",
        "properties": {
          "data": {
            "description": "Event data specific to the event type.",
            "type": "object"
          },
          "data_base64": {
            "description": "Event data specific to the event type, encoded as a base64 string.",
            "format": "byte",
            "type": "string"
          },
          "datacontenttype": {
            "description": "Content type of data value.",
            "type": "string"
          },
          "dataschema": {
            "description": "Identifies the schema that data adheres to.",
            "type": "string"
          },
          "id": {
            "description": "An identifier for the event. The combination of id and source must be unique for each distinct event.",
            "type": "string"
          },
          "source": {
            "description": "Identifies the context in which an event happened. The combination of id and source must be unique for each distinct event.",
            "type": "string"
          },
          "specversion": {
            "description": "The version of the CloudEvents specification which the event uses.",
            "type": "string"
          },
          "subject": {
            "description": "This describes the subject of the event in the context of the event producer (identified by source).",
            "type": "string"
          },
          "time": {
            "description": "The time (in UTC) the event was generated, in RFC3339 format.",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "description": "Type of event related to the originating occurrence.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "specversion",
          "source",
          "id"
        ],
        "type": "object"
      },
      "CustomEventEvent": {
        "description": "Properties of an event published to an Event Grid topic using a custom schema",
        "type": "object"
      },
      "EventGridEvent": {
        "description": "Properties of an event published to an Event Grid topic using the EventGrid Schema.",
        "properties": {
          "data": {
            "description": "Event data specific to the event type.",
            "type": "object"
          },
          "dataVersion": {
            "description": "The schema version of the data object.",
            "type": "string"
          },
          "eventTime": {
            "description": "The time (in UTC) the event was generated.",
            "format": "date-time",
            "type": "string"
          },
          "eventType": {
            "description": "The type of the event that occurred.",
            "type": "string"
          },
          "id": {
            "description": "An unique identifier for the event.",
            "type": "string"
          },
          "metadataVersion": {
            "description": "The schema version of the event metadata.",
            "readOnly": true,
            "type": "string"
          },
          "subject": {
            "description": "A resource path relative to the topic path.",
            "type": "string"
          },
          "topic": {
            "description": "The resource path of the event source.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "subject",
          "data",
          "eventType",
          "eventTime",
          "dataVersion"
        ],
        "type": "object"
      }
    }
  },
  "x-ms-paths": {
    "?overload=EventGridEvent": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error.\n\n * 429 Too Many Events\n\n * 404 Not Found."
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Publishes a batch of events to an Azure Event Grid topic.",
        "operationId": "PublishEventGridEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/EventGridEvent"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of events to be published to Event Grid.",
          "required": true
        },
        "x-ms-examples": {
          "PublishEventsToEventGridTopic": {
            "$ref": "./examples/PublishEventsToEventGridTopic.json"
          }
        }
      }
    },
    "?overload=cloudEvent": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ChannelNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error.\n\n * 429 Too Many Events\n\n * 404 Not Found."
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Publishes a batch of events to an Azure Event Grid topic.",
        "operationId": "PublishCloudEventEvents",
        "requestBody": {
          "content": {
            "application/cloudevents-batch+json; charset=utf-8": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CloudEventEvent"
                },
                "type": "array"
              }
            },
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CloudEventEvent"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of events to be published to Event Grid.",
          "required": true
        },
        "x-ms-examples": {
          "PublishEventsToEventGridTopicAsCloudEvents": {
            "$ref": "./examples/PublishEventsToEventGridTopicAsCloudEvents.json"
          }
        }
      }
    },
    "?overload=customEvent": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 Bad Request.\n\n * 500 Internal Server Error.\n\n * 429 Too Many Events\n\n * 404 Not Found."
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Publishes a batch of events to an Azure Event Grid topic.",
        "operationId": "PublishCustomEventEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/CustomEventEvent"
                },
                "type": "array"
              }
            }
          },
          "description": "An array of events to be published to Event Grid.",
          "required": true
        },
        "x-ms-examples": {
          "PublishEventsToEventGridTopicAsCloudEvents": {
            "$ref": "./examples/PublishEventsToEventGridTopicAsCustomSchemaEvents.json"
          }
        }
      }
    }
  }
}