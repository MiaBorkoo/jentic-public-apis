{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "aiapi@microsoft.com",
      "name": "AIAPI Team",
      "url": "https://dev.applicationinsights.io/support"
    },
    "description": "This API exposes AI metric & event information and associated metadata",
    "license": {
      "name": "Microsoft",
      "url": "https://dev.applicationinsights.io/license"
    },
    "termsOfService": "https://dev.applicationinsights.io/tos",
    "title": "Application Insights Data Plane",
    "version": "2018-04-20",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/applicationinsights/data-plane/Microsoft.Insights/preview/2018-04-20/swagger.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/events/$metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/xml;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              },
              "application/xml;charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Gets OData EDMX metadata describing the event data model",
        "operationId": "Events_GetOdataMetadata",
        "summary": "Get OData metadata",
        "x-ms-examples": {
          "eventMetadata": {
            "$ref": "examples/events-get-metadata.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/events/{eventType}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/eventType"
          },
          {
            "$ref": "#/components/parameters/eventsTimespan"
          },
          {
            "$ref": "#/components/parameters/eventsFilter"
          },
          {
            "$ref": "#/components/parameters/eventsSearch"
          },
          {
            "$ref": "#/components/parameters/eventsOrderBy"
          },
          {
            "$ref": "#/components/parameters/eventsSelect"
          },
          {
            "$ref": "#/components/parameters/eventsSkip"
          },
          {
            "$ref": "#/components/parameters/eventsTop"
          },
          {
            "$ref": "#/components/parameters/eventsFormat"
          },
          {
            "$ref": "#/components/parameters/eventsCount"
          },
          {
            "$ref": "#/components/parameters/eventsApply"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventsResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Executes an OData query for events",
        "operationId": "Events_GetByType",
        "summary": "Execute OData query",
        "x-ms-examples": {
          "eventByType": {
            "$ref": "examples/events-get-by-type.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/events/{eventType}/{eventId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/eventType"
          },
          {
            "$ref": "#/components/parameters/eventsTimespan"
          },
          {
            "$ref": "#/components/parameters/eventId"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventsResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Gets the data for a single event",
        "operationId": "Events_Get",
        "summary": "Get an event",
        "x-ms-examples": {
          "eventById": {
            "$ref": "examples/events-get-by-id.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadataResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Retrieve the metadata information for the app, including its schema, etc.",
        "operationId": "Metadata_Get",
        "summary": "Gets metadata information",
        "x-ms-examples": {
          "metadataGet": {
            "$ref": "examples/metadata-get.json"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadataResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Retrieve the metadata information for the app, including its schema, etc.",
        "operationId": "Metadata_Post",
        "summary": "Gets metadata information",
        "x-ms-examples": {
          "metadataPost": {
            "$ref": "examples/metadata-post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/metrics/metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "Successful responses"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Gets metadata describing the available metrics",
        "operationId": "Metrics_GetMetadata",
        "summary": "Retrieve metric metadata",
        "x-ms-examples": {
          "metricMetadata": {
            "$ref": "examples/metrics-get-metadata.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/metrics/{metricId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/metricId"
          },
          {
            "$ref": "#/components/parameters/metricsTimespan"
          },
          {
            "$ref": "#/components/parameters/metricsInterval"
          },
          {
            "$ref": "#/components/parameters/metricsAggregation"
          },
          {
            "$ref": "#/components/parameters/metricsSegment"
          },
          {
            "$ref": "#/components/parameters/metricsTop"
          },
          {
            "$ref": "#/components/parameters/metricsOrderBy"
          },
          {
            "$ref": "#/components/parameters/metricsFilter"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metricsResult"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Gets metric values for a single metric",
        "operationId": "Metrics_Get",
        "summary": "Retrieve metric data",
        "x-ms-examples": {
          "intervaledMetric": {
            "$ref": "examples/metric-get-full.json"
          },
          "segmentedIntervaledMetric": {
            "$ref": "examples/metric-get-segmented.json"
          },
          "simpleMetric": {
            "$ref": "examples/metric-get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/components/{applicationName}/query": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/queryParam"
          },
          {
            "$ref": "#/components/parameters/queryTimespan"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/queryResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Executes an Analytics query for data",
        "operationId": "Query_Get",
        "summary": "Execute an Analytics query",
        "x-ms-examples": {
          "queryGet": {
            "$ref": "examples/query-get.json"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/applicationName"
          },
          {
            "$ref": "#/components/parameters/apiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/queryResults"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errorResponse"
                }
              }
            },
            "description": "An error response object."
          }
        },
        "description": "Executes an Analytics query for data. [Here](https://dev.applicationinsights.io/documentation/Using-the-API/Query) is an example for using POST with an Analytics query.",
        "operationId": "Query_Execute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/queryBody"
              }
            }
          },
          "description": "The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)",
          "required": true
        },
        "summary": "Execute an Analytics query",
        "x-ms-examples": {
          "queryPost": {
            "$ref": "examples/query-post.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersion": {
        "description": "Client API version.",
        "in": "query",
        "name": "apiVersion",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "applicationName": {
        "description": "Name of the Application Insights application.",
        "in": "path",
        "name": "applicationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "applicationsParam": {
        "description": "A list of applications over which to query.",
        "in": "query",
        "name": "applications",
        "required": false,
        "schema": {
          "default": "",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventId": {
        "description": "ID of event.",
        "in": "path",
        "name": "eventId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventType": {
        "description": "The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types.",
        "in": "path",
        "name": "eventType",
        "required": true,
        "schema": {
          "enum": [
            "$all",
            "traces",
            "customEvents",
            "pageViews",
            "browserTimings",
            "requests",
            "dependencies",
            "exceptions",
            "availabilityResults",
            "performanceCounters",
            "customMetrics"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EventType"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsApply": {
        "description": "An expression used for aggregation over returned events",
        "in": "query",
        "name": "$apply",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsCount": {
        "description": "Request a count of matching items included with the returned events",
        "in": "query",
        "name": "$count",
        "schema": {
          "type": "boolean"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsFilter": {
        "description": "An expression used to filter the returned events",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsFormat": {
        "description": "Format for the returned events",
        "in": "query",
        "name": "$format",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsOrderBy": {
        "description": "A comma-separated list of properties with \\\"asc\\\" (the default) or \\\"desc\\\" to control the order of returned events",
        "in": "query",
        "name": "$orderby",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsSearch": {
        "description": "A free-text search expression to match for whether a particular event should be returned",
        "in": "query",
        "name": "$search",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsSelect": {
        "description": "Limits the properties to just those requested on each returned event",
        "in": "query",
        "name": "$select",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsSkip": {
        "description": "The number of items to skip over before returning events",
        "in": "query",
        "name": "$skip",
        "schema": {
          "format": "int32",
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsTimespan": {
        "description": "Optional. The timespan over which to retrieve events. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the Odata expression.",
        "in": "query",
        "name": "timespan",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "eventsTop": {
        "description": "The number of events to return",
        "in": "query",
        "name": "$top",
        "schema": {
          "format": "int32",
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "metricId": {
        "description": "ID of the metric. This is either a standard AI metric, or an application-specific custom metric.",
        "in": "path",
        "name": "metricId",
        "required": true,
        "schema": {
          "enum": [
            "requests/count",
            "requests/duration",
            "requests/failed",
            "users/count",
            "users/authenticated",
            "pageViews/count",
            "pageViews/duration",
            "client/processingDuration",
            "client/receiveDuration",
            "client/networkDuration",
            "client/sendDuration",
            "client/totalDuration",
            "dependencies/count",
            "dependencies/failed",
            "dependencies/duration",
            "exceptions/count",
            "exceptions/browser",
            "exceptions/server",
            "sessions/count",
            "performanceCounters/requestExecutionTime",
            "performanceCounters/requestsPerSecond",
            "performanceCounters/requestsInQueue",
            "performanceCounters/memoryAvailableBytes",
            "performanceCounters/exceptionsPerSecond",
            "performanceCounters/processCpuPercentage",
            "performanceCounters/processIOBytesPerSecond",
            "performanceCounters/processPrivateBytes",
            "performanceCounters/processorCpuPercentage",
            "availabilityResults/availabilityPercentage",
            "availabilityResults/duration",
            "billing/telemetryCount",
            "customEvents/count"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MetricId"
        },
        "x-ms-parameter-location": "method"
      },
      "metricsAggregation": {
        "description": "The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used.",
        "in": "query",
        "name": "aggregation",
        "schema": {
          "items": {
            "enum": [
              "min",
              "max",
              "avg",
              "sum",
              "count",
              "unique"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MetricsAggregation"
            }
          },
          "minItems": 1,
          "type": "array"
        },
        "style": "form",
        "x-ms-parameter-location": "method"
      },
      "metricsFilter": {
        "description": "An expression used to filter the results.  This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving.",
        "in": "query",
        "name": "filter",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricsInterval": {
        "description": "The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response.",
        "in": "query",
        "name": "interval",
        "schema": {
          "format": "duration",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricsOrderBy": {
        "description": "The aggregation function and direction to sort the segments by.  This value is only valid when segment is specified.",
        "in": "query",
        "name": "orderby",
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricsSegment": {
        "description": "The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter.",
        "in": "query",
        "name": "segment",
        "schema": {
          "items": {
            "enum": [
              "applicationBuild",
              "applicationVersion",
              "authenticatedOrAnonymousTraffic",
              "browser",
              "browserVersion",
              "city",
              "cloudRoleName",
              "cloudServiceName",
              "continent",
              "countryOrRegion",
              "deploymentId",
              "deploymentUnit",
              "deviceType",
              "environment",
              "hostingLocation",
              "instanceName"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MetricsSegment"
            }
          },
          "minItems": 1,
          "type": "array"
        },
        "style": "form",
        "x-ms-parameter-location": "method"
      },
      "metricsTimespan": {
        "description": "The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` (\"last 12 hours\") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response.",
        "in": "query",
        "name": "timespan",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricsTop": {
        "description": "The number of segments to return.  This value is only valid when segment is specified.",
        "in": "query",
        "name": "top",
        "schema": {
          "format": "int32",
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "queryParam": {
        "description": "The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)",
        "in": "query",
        "name": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "queryTimespan": {
        "description": "Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression.",
        "in": "query",
        "name": "timespan",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupName": {
        "description": "The name of the resource group to get. The name is case insensitive.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "applicationsParam": {
        "description": "Application IDs to include in cross-application queries.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "column": {
        "description": "A column in a table.",
        "properties": {
          "name": {
            "description": "The name of this column.",
            "type": "string"
          },
          "type": {
            "description": "The data type of this column.",
            "type": "string"
          }
        },
        "title": "A table column.",
        "type": "object"
      },
      "errorDetail": {
        "properties": {
          "additionalProperties": {
            "type": "object"
          },
          "code": {
            "description": "The error's code.",
            "type": "string"
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          },
          "resources": {
            "description": "Indicates resources which were responsible for the error.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "target": {
            "description": "Indicates which property in the request is responsible for the error.",
            "type": "string"
          },
          "value": {
            "description": "Indicates which value in 'target' is responsible for the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "Error details.",
        "type": "object"
      },
      "errorInfo": {
        "properties": {
          "additionalProperties": {
            "type": "object"
          },
          "code": {
            "description": "A machine readable error code.",
            "type": "string"
          },
          "details": {
            "description": "error details.",
            "items": {
              "$ref": "#/components/schemas/errorDetail"
            },
            "type": "array"
          },
          "innererror": {
            "$ref": "#/components/schemas/errorInfo",
            "description": "Inner error details if they exist."
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "The code and message for an error.",
        "type": "object"
      },
      "errorResponse": {
        "description": "Contains details when the response code indicates an error.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/errorInfo",
            "description": "The error details."
          }
        },
        "required": [
          "error"
        ],
        "title": "Error details.",
        "type": "object"
      },
      "eventId": {
        "description": "ID of event.",
        "type": "string"
      },
      "eventType": {
        "description": "The type of events to query; either a standard event type (`traces`, `customEvents`, `pageViews`, `requests`, `dependencies`, `exceptions`, `availabilityResults`) or `$all` to query across all event types.",
        "enum": [
          "$all",
          "traces",
          "customEvents",
          "pageViews",
          "browserTimings",
          "requests",
          "dependencies",
          "exceptions",
          "availabilityResults",
          "performanceCounters",
          "customMetrics"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EventType"
        }
      },
      "eventsAiInfo": {
        "description": "AI related application info for an event result",
        "properties": {
          "appId": {
            "description": "ID of the application",
            "type": "string"
          },
          "appName": {
            "description": "Name of the application",
            "type": "string"
          },
          "iKey": {
            "description": "iKey of the app",
            "type": "string"
          },
          "sdkVersion": {
            "description": "SDK version of the application",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsApplicationInfo": {
        "description": "Application info for an event result",
        "properties": {
          "version": {
            "description": "Version of the application",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsApply": {
        "description": "An expression used for aggregation over returned events",
        "type": "string"
      },
      "eventsAvailabilityResultInfo": {
        "description": "The availability result info",
        "properties": {
          "duration": {
            "description": "The duration of the availability result",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The ID of the availability result",
            "type": "string"
          },
          "location": {
            "description": "The location of the availability result",
            "type": "string"
          },
          "message": {
            "description": "The message of the availability result",
            "type": "string"
          },
          "name": {
            "description": "The name of the availability result",
            "type": "string"
          },
          "performanceBucket": {
            "description": "The performance bucket of the availability result",
            "type": "string"
          },
          "size": {
            "description": "The size of the availability result",
            "type": "string"
          },
          "success": {
            "description": "Indicates if the availability result was successful",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsAvailabilityResultResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "availabilityResult": {
                "$ref": "#/components/schemas/eventsAvailabilityResultInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "An availability result result",
        "x-ms-discriminator-value": "availabilityResult"
      },
      "eventsBrowserTimingInfo": {
        "description": "The browser timing information",
        "properties": {
          "name": {
            "description": "The name of the page",
            "type": "string"
          },
          "networkDuration": {
            "description": "The network duration of the load",
            "format": "int64",
            "type": "integer"
          },
          "performanceBucket": {
            "description": "The performance bucket of the load",
            "type": "string"
          },
          "processingDuration": {
            "description": "The processing duration of the load",
            "format": "int64",
            "type": "integer"
          },
          "receiveDuration": {
            "description": "The receive duration of the load",
            "format": "int64",
            "type": "integer"
          },
          "sendDuration": {
            "description": "The send duration of the load",
            "format": "int64",
            "type": "integer"
          },
          "totalDuration": {
            "description": "The total duration of the load",
            "format": "int64",
            "type": "integer"
          },
          "url": {
            "description": "The url of the page",
            "type": "string"
          },
          "urlHost": {
            "description": "The host of the URL",
            "type": "string"
          },
          "urlPath": {
            "description": "The path of the URL",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsBrowserTimingResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "browserTiming": {
                "$ref": "#/components/schemas/eventsBrowserTimingInfo"
              },
              "clientPerformance": {
                "$ref": "#/components/schemas/eventsClientPerformanceInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A browser timing result",
        "x-ms-discriminator-value": "browserTiming"
      },
      "eventsClientInfo": {
        "description": "Client info for an event result",
        "properties": {
          "browser": {
            "description": "Browser of the client",
            "type": "string"
          },
          "city": {
            "description": "City of the client",
            "type": "string"
          },
          "countryOrRegion": {
            "description": "Country or region of the client",
            "type": "string"
          },
          "ip": {
            "description": "IP address of the client",
            "type": "string"
          },
          "model": {
            "description": "Model of the client",
            "type": "string"
          },
          "os": {
            "description": "Operating system of the client",
            "type": "string"
          },
          "stateOrProvince": {
            "description": "State or province of the client",
            "type": "string"
          },
          "type": {
            "description": "Type of the client",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsClientPerformanceInfo": {
        "description": "Client performance information",
        "properties": {
          "name": {
            "description": "The name of the client performance",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsCloudInfo": {
        "description": "Cloud info for an event result",
        "properties": {
          "roleInstance": {
            "description": "Role instance of the cloud",
            "type": "string"
          },
          "roleName": {
            "description": "Role name of the cloud",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsCount": {
        "description": "Request a count of matching items included with the returned events",
        "type": "boolean"
      },
      "eventsCustomEventInfo": {
        "description": "The custom event information",
        "properties": {
          "name": {
            "description": "The name of the custom event",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsCustomEventResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "customEvent": {
                "$ref": "#/components/schemas/eventsCustomEventInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A custom event result",
        "x-ms-discriminator-value": "customEvent"
      },
      "eventsCustomMetricInfo": {
        "description": "The custom metric info",
        "properties": {
          "name": {
            "description": "The name of the custom metric",
            "type": "string"
          },
          "value": {
            "description": "The value of the custom metric",
            "format": "double",
            "type": "number"
          },
          "valueCount": {
            "description": "The count of the custom metric",
            "format": "int32",
            "type": "integer"
          },
          "valueMax": {
            "description": "The maximum value of the custom metric",
            "format": "double",
            "type": "number"
          },
          "valueMin": {
            "description": "The minimum value of the custom metric",
            "format": "double",
            "type": "number"
          },
          "valueStdDev": {
            "description": "The standard deviation of the custom metric",
            "format": "double",
            "type": "number"
          },
          "valueSum": {
            "description": "The sum of the custom metric",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "eventsCustomMetricResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "customMetric": {
                "$ref": "#/components/schemas/eventsCustomMetricInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A custom metric result",
        "x-ms-discriminator-value": "customMetric"
      },
      "eventsDependencyInfo": {
        "description": "The dependency info",
        "properties": {
          "data": {
            "description": "The data of the dependency",
            "type": "string"
          },
          "duration": {
            "description": "The duration of the dependency",
            "format": "int64",
            "type": "integer"
          },
          "id": {
            "description": "The ID of the dependency",
            "type": "string"
          },
          "name": {
            "description": "The name of the dependency",
            "type": "string"
          },
          "performanceBucket": {
            "description": "The performance bucket of the dependency",
            "type": "string"
          },
          "resultCode": {
            "description": "The result code of the dependency",
            "type": "string"
          },
          "success": {
            "description": "Indicates if the dependency was successful",
            "type": "string"
          },
          "target": {
            "description": "The target of the dependency",
            "type": "string"
          },
          "type": {
            "description": "The type of the dependency",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsDependencyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "dependency": {
                "$ref": "#/components/schemas/eventsDependencyInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A dependency result",
        "x-ms-discriminator-value": "dependency"
      },
      "eventsExceptionDetail": {
        "description": "Exception details",
        "properties": {
          "id": {
            "description": "The ID of the exception detail",
            "type": "string"
          },
          "message": {
            "description": "The message of the exception detail",
            "type": "string"
          },
          "outerId": {
            "description": "The outer ID of the exception detail",
            "type": "string"
          },
          "parsedStack": {
            "description": "The parsed stack",
            "items": {
              "$ref": "#/components/schemas/eventsExceptionDetailsParsedStack"
            },
            "type": "array"
          },
          "severityLevel": {
            "description": "The severity level of the exception detail",
            "type": "string"
          },
          "type": {
            "description": "The type of the exception detail",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsExceptionDetailsParsedStack": {
        "description": "A parsed stack entry",
        "properties": {
          "assembly": {
            "description": "The assembly of the stack entry",
            "type": "string"
          },
          "level": {
            "description": "The level of the stack entry",
            "format": "int64",
            "type": "integer"
          },
          "line": {
            "description": "The line of the stack entry",
            "format": "int64",
            "type": "integer"
          },
          "method": {
            "description": "The method of the stack entry",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsExceptionInfo": {
        "description": "The exception info",
        "properties": {
          "assembly": {
            "description": "The assembly which threw the exception",
            "type": "string"
          },
          "details": {
            "description": "The details of the exception",
            "items": {
              "$ref": "#/components/schemas/eventsExceptionDetail"
            },
            "type": "array"
          },
          "handledAt": {
            "description": "Indicates where the exception was handled at",
            "type": "string"
          },
          "innermostAssembly": {
            "description": "The inner most assembly of the exception",
            "type": "string"
          },
          "innermostMessage": {
            "description": "The inner most message of the exception",
            "type": "string"
          },
          "innermostMethod": {
            "description": "The inner most method of the exception",
            "type": "string"
          },
          "innermostType": {
            "description": "The inner most type of the exception",
            "type": "string"
          },
          "message": {
            "description": "The message of the exception",
            "type": "string"
          },
          "method": {
            "description": "The method that threw the exception",
            "type": "string"
          },
          "outerAssembly": {
            "description": "The outer assembly of the exception",
            "type": "string"
          },
          "outerMessage": {
            "description": "The outer message of the exception",
            "type": "string"
          },
          "outerMethod": {
            "description": "The outer method of the exception",
            "type": "string"
          },
          "outerType": {
            "description": "The outer type of the exception",
            "type": "string"
          },
          "problemId": {
            "description": "The problem ID of the exception",
            "type": "string"
          },
          "severityLevel": {
            "description": "The severity level of the exception",
            "type": "integer"
          },
          "type": {
            "description": "The type of the exception",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsExceptionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "exception": {
                "$ref": "#/components/schemas/eventsExceptionInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "An exception result",
        "x-ms-discriminator-value": "exception"
      },
      "eventsFilter": {
        "description": "An expression used to filter the returned events",
        "type": "string"
      },
      "eventsFormat": {
        "description": "Format for the returned events",
        "type": "string"
      },
      "eventsOperationInfo": {
        "description": "Operation info for an event result",
        "properties": {
          "id": {
            "description": "ID of the operation",
            "type": "string"
          },
          "name": {
            "description": "Name of the operation",
            "type": "string"
          },
          "parentId": {
            "description": "Parent ID of the operation",
            "type": "string"
          },
          "syntheticSource": {
            "description": "Synthetic source of the operation",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsOrderBy": {
        "description": "A comma-separated list of properties with \\\"asc\\\" (the default) or \\\"desc\\\" to control the order of returned events",
        "type": "string"
      },
      "eventsPageViewInfo": {
        "description": "The page view information",
        "properties": {
          "duration": {
            "description": "The duration of the page view",
            "type": "string"
          },
          "name": {
            "description": "The name of the page",
            "type": "string"
          },
          "performanceBucket": {
            "description": "The performance bucket of the page view",
            "type": "string"
          },
          "url": {
            "description": "The URL of the page",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsPageViewResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "pageView": {
                "$ref": "#/components/schemas/eventsPageViewInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A page view result",
        "x-ms-discriminator-value": "pageView"
      },
      "eventsPerformanceCounterInfo": {
        "description": "The performance counter info",
        "properties": {
          "category": {
            "description": "The category of the performance counter",
            "type": "string"
          },
          "counter": {
            "description": "The counter of the performance counter",
            "type": "string"
          },
          "instance": {
            "description": "The instance of the performance counter",
            "type": "string"
          },
          "instanceName": {
            "description": "The instance name of the performance counter",
            "type": "string"
          },
          "name": {
            "description": "The name of the performance counter",
            "type": "string"
          },
          "value": {
            "description": "The value of the performance counter",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "eventsPerformanceCounterResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "performanceCounter": {
                "$ref": "#/components/schemas/eventsPerformanceCounterInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A performance counter result",
        "x-ms-discriminator-value": "performanceCounter"
      },
      "eventsRequestInfo": {
        "description": "The request info",
        "properties": {
          "duration": {
            "description": "The duration of the request",
            "format": "double",
            "type": "number"
          },
          "id": {
            "description": "The ID of the request",
            "type": "string"
          },
          "name": {
            "description": "The name of the request",
            "type": "string"
          },
          "performanceBucket": {
            "description": "The performance bucket of the request",
            "type": "string"
          },
          "resultCode": {
            "description": "The result code of the request",
            "type": "string"
          },
          "source": {
            "description": "The source of the request",
            "type": "string"
          },
          "success": {
            "description": "Indicates if the request was successful",
            "type": "string"
          },
          "url": {
            "description": "The URL of the request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsRequestResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "request": {
                "$ref": "#/components/schemas/eventsRequestInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A request result",
        "x-ms-discriminator-value": "request"
      },
      "eventsResult": {
        "description": "An event query result.",
        "properties": {
          "@ai.messages": {
            "description": "OData messages for this response.",
            "items": {
              "$ref": "#/components/schemas/errorInfo"
            },
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/eventsResultData"
          }
        },
        "type": "object"
      },
      "eventsResultData": {
        "description": "Events query result data.",
        "discriminator": {
          "propertyName": "type"
        },
        "properties": {
          "ai": {
            "$ref": "#/components/schemas/eventsAiInfo",
            "description": "AI info of the event"
          },
          "application": {
            "$ref": "#/components/schemas/eventsApplicationInfo",
            "description": "Application info of the event"
          },
          "client": {
            "$ref": "#/components/schemas/eventsClientInfo",
            "description": "Client info of the event"
          },
          "cloud": {
            "$ref": "#/components/schemas/eventsCloudInfo",
            "description": "Cloud info of the event"
          },
          "count": {
            "description": "Count of the event",
            "format": "int64",
            "type": "integer"
          },
          "customDimensions": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Custom dimensions of the event",
            "properties": {
              "additionalProperties": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "customMeasurements": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "Custom measurements of the event",
            "properties": {
              "additionalProperties": {
                "type": "object"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "The unique ID for this event.",
            "type": "string"
          },
          "operation": {
            "$ref": "#/components/schemas/eventsOperationInfo",
            "description": "Operation info of the event"
          },
          "session": {
            "$ref": "#/components/schemas/eventsSessionInfo",
            "description": "Session info of the event"
          },
          "timestamp": {
            "description": "Timestamp of the event",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/eventType",
            "description": "The type of event."
          },
          "user": {
            "$ref": "#/components/schemas/eventsUserInfo",
            "description": "User info of the event"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "eventsResults": {
        "description": "An events query result.",
        "properties": {
          "@ai.messages": {
            "description": "OData messages for this response.",
            "items": {
              "$ref": "#/components/schemas/errorInfo"
            },
            "type": "array"
          },
          "@odata.context": {
            "description": "OData context metadata endpoint for this response",
            "type": "string"
          },
          "value": {
            "description": "Contents of the events query result.",
            "items": {
              "$ref": "#/components/schemas/eventsResultData"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "eventsSearch": {
        "description": "A free-text search expression to match for whether a particular event should be returned",
        "type": "string"
      },
      "eventsSelect": {
        "description": "Limits the properties to just those requested on each returned event",
        "type": "string"
      },
      "eventsSessionInfo": {
        "description": "Session info for an event result",
        "properties": {
          "id": {
            "description": "ID of the session",
            "type": "string"
          }
        },
        "type": "object"
      },
      "eventsSkip": {
        "description": "The number of items to skip over before returning events",
        "format": "int32",
        "type": "integer"
      },
      "eventsTimespan": {
        "description": "Optional. The timespan over which to retrieve events. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the Odata expression.",
        "type": "string"
      },
      "eventsTop": {
        "description": "The number of events to return",
        "format": "int32",
        "type": "integer"
      },
      "eventsTraceInfo": {
        "description": "The trace information",
        "properties": {
          "message": {
            "description": "The trace message",
            "type": "string"
          },
          "severityLevel": {
            "description": "The trace severity level",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "eventsTraceResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/eventsResultData"
          },
          {
            "properties": {
              "trace": {
                "$ref": "#/components/schemas/eventsTraceInfo"
              }
            },
            "type": "object"
          }
        ],
        "description": "A trace result",
        "x-ms-discriminator-value": "trace"
      },
      "eventsUserInfo": {
        "description": "User info for an event result",
        "properties": {
          "accountId": {
            "description": "Account ID of the user",
            "type": "string"
          },
          "authenticatedId": {
            "description": "Authenticated ID of the user",
            "type": "string"
          },
          "id": {
            "description": "ID of the user",
            "type": "string"
          }
        },
        "type": "object"
      },
      "metadataApplication": {
        "description": "Application Insights apps that were part of the metadata request and that the user has access to.",
        "properties": {
          "functions": {
            "description": "The list of stored functions on the Application Insights app",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "The ID of the Application Insights app.",
            "type": "string"
          },
          "name": {
            "description": "The name of the Application Insights app.",
            "type": "string"
          },
          "region": {
            "description": "The Azure region of the Application Insights app.",
            "type": "string"
          },
          "resourceId": {
            "description": "The ARM resource ID of the Application Insights app.",
            "type": "string"
          },
          "tableGroups": {
            "description": "The list of table groups on the Application Insights app",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tables": {
            "description": "The list of custom tables for the Application Insights app.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "resourceId",
          "name",
          "region"
        ],
        "title": "An Application Insights application.",
        "type": "object"
      },
      "metadataFunction": {
        "description": "Functions are stored Kusto queries that can be specified as part of queries by using their name.",
        "properties": {
          "parameters": {
            "description": "The parameters/arguments of the function, if any.",
            "type": "string"
          },
          "body": {
            "description": "The KQL body of the function.",
            "type": "string"
          },
          "description": {
            "description": "The description of the function.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the function.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the function.",
            "type": "string"
          },
          "name": {
            "description": "The name of the function, to be used in queries.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "body"
        ],
        "title": "A stored function.",
        "type": "object"
      },
      "metadataResults": {
        "description": "The metadata result for the app, including available tables, etc.",
        "properties": {
          "applications": {
            "description": "The list of Application Insights apps that were referenced in the metadata request.",
            "items": {
              "$ref": "#/components/schemas/metadataApplication"
            },
            "type": "array",
            "uniqueItems": true
          },
          "functions": {
            "description": "The list of functions stored on the app.",
            "items": {
              "$ref": "#/components/schemas/metadataFunction"
            },
            "type": "array",
            "uniqueItems": true
          },
          "tableGroups": {
            "description": "The list of groups of tables on the app.",
            "items": {
              "$ref": "#/components/schemas/metadataTableGroup"
            },
            "type": "array",
            "uniqueItems": true
          },
          "tables": {
            "description": "The list of tables and columns that comprise the schema of the app.",
            "items": {
              "$ref": "#/components/schemas/metadataTable"
            },
            "type": "array",
            "uniqueItems": true
          }
        },
        "title": "A metadata response.",
        "type": "object"
      },
      "metadataTable": {
        "description": "Tables are part of the app schema, and contain a list of columns and a reference to other relevant metadata items.",
        "properties": {
          "columns": {
            "description": "The list of columns defined on the table",
            "items": {
              "properties": {
                "description": {
                  "description": "The description of the column",
                  "type": "string"
                },
                "isPreferredFacet": {
                  "description": "A flag indicating this column is a preferred facet",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the column",
                  "type": "string"
                },
                "source": {
                  "description": "an indication of the source of the column, used only when multiple apps have conflicting definition for the column",
                  "type": "object"
                },
                "type": {
                  "description": "The data type of the column",
                  "enum": [
                    "bool",
                    "datetime",
                    "dynamic",
                    "int",
                    "long",
                    "real",
                    "string"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "MetadataColumnDataType"
                  }
                }
              },
              "required": [
                "name",
                "type"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "description": {
            "description": "The description of the table",
            "type": "string"
          },
          "id": {
            "description": "The ID of the table",
            "type": "string"
          },
          "name": {
            "description": "The name of the table",
            "type": "string"
          },
          "timespanColumn": {
            "description": "The column associated with the timespan query parameter for the table",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "A data table that takes part in a schema of an Application Insights app.",
        "type": "object"
      },
      "metadataTableGroup": {
        "description": "The table grouping can be either an Application Insights schema or a Log Analytics solution.",
        "properties": {
          "description": {
            "description": "The description of the table group",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the table group",
            "type": "string"
          },
          "id": {
            "description": "The ID of the table group",
            "type": "string"
          },
          "name": {
            "description": "The name of the table group",
            "type": "string"
          },
          "source": {
            "description": "The source of the table group, can be either AI or OMS for Log Analytics workspaces",
            "type": "string"
          },
          "tables": {
            "description": "The list of tables contained in the table group",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "A group of tables.",
        "type": "object"
      },
      "metricId": {
        "description": "ID of the metric. This is either a standard AI metric, or an application-specific custom metric.",
        "enum": [
          "requests/count",
          "requests/duration",
          "requests/failed",
          "users/count",
          "users/authenticated",
          "pageViews/count",
          "pageViews/duration",
          "client/processingDuration",
          "client/receiveDuration",
          "client/networkDuration",
          "client/sendDuration",
          "client/totalDuration",
          "dependencies/count",
          "dependencies/failed",
          "dependencies/duration",
          "exceptions/count",
          "exceptions/browser",
          "exceptions/server",
          "sessions/count",
          "performanceCounters/requestExecutionTime",
          "performanceCounters/requestsPerSecond",
          "performanceCounters/requestsInQueue",
          "performanceCounters/memoryAvailableBytes",
          "performanceCounters/exceptionsPerSecond",
          "performanceCounters/processCpuPercentage",
          "performanceCounters/processIOBytesPerSecond",
          "performanceCounters/processPrivateBytes",
          "performanceCounters/processorCpuPercentage",
          "availabilityResults/availabilityPercentage",
          "availabilityResults/duration",
          "billing/telemetryCount",
          "customEvents/count"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MetricId"
        }
      },
      "metricsAggregation": {
        "description": "The aggregation to use when computing the metric values. To retrieve more than one aggregation at a time, separate them with a comma. If no aggregation is specified, then the default aggregation for the metric is used.",
        "items": {
          "enum": [
            "min",
            "max",
            "avg",
            "sum",
            "count",
            "unique"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "MetricsAggregation"
          }
        },
        "minItems": 1,
        "type": "array"
      },
      "metricsFilter": {
        "description": "An expression used to filter the results.  This value should be a valid OData filter expression where the keys of each clause should be applicable dimensions for the metric you are retrieving.",
        "type": "string"
      },
      "metricsInterval": {
        "description": "The time interval to use when retrieving metric values. This is an ISO8601 duration. If interval is omitted, the metric value is aggregated across the entire timespan. If interval is supplied, the server may adjust the interval to a more appropriate size based on the timespan used for the query. In all cases, the actual interval used for the query is included in the response.",
        "format": "duration",
        "type": "string"
      },
      "metricsOrderBy": {
        "description": "The aggregation function and direction to sort the segments by.  This value is only valid when segment is specified.",
        "type": "string"
      },
      "metricsPostBody": {
        "description": "Metrics request body",
        "items": {
          "$ref": "#/components/schemas/metricsPostBodySchema"
        },
        "type": "array"
      },
      "metricsPostBodySchema": {
        "description": "A metric request",
        "properties": {
          "parameters": {
            "description": "The parameters for a single metrics query",
            "properties": {
              "aggregation": {
                "$ref": "#/components/schemas/metricsAggregation"
              },
              "filter": {
                "$ref": "#/components/schemas/metricsFilter"
              },
              "interval": {
                "$ref": "#/components/schemas/metricsInterval"
              },
              "metricId": {
                "$ref": "#/components/schemas/metricId"
              },
              "orderby": {
                "$ref": "#/components/schemas/metricsOrderBy"
              },
              "segment": {
                "$ref": "#/components/schemas/metricsSegment"
              },
              "timespan": {
                "$ref": "#/components/schemas/metricsTimespan"
              },
              "top": {
                "$ref": "#/components/schemas/metricsTop"
              }
            },
            "required": [
              "metricId"
            ],
            "type": "object"
          },
          "id": {
            "description": "An identifier for this query.  Must be unique within the post body of the request.  This identifier will be the 'id' property of the response object representing this query.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "parameters"
        ],
        "type": "object"
      },
      "metricsResult": {
        "description": "A metric result.",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/metricsResultInfo"
          }
        },
        "type": "object"
      },
      "metricsResultInfo": {
        "additionalProperties": {
          "description": "Additional properties that can be provided on the metric result info",
          "type": "object"
        },
        "description": "A metric result data.",
        "properties": {
          "end": {
            "description": "Start time of the metric.",
            "format": "date_time",
            "type": "string"
          },
          "interval": {
            "description": "The interval used to segment the metric data.",
            "format": "duration",
            "type": "string"
          },
          "segments": {
            "description": "Segmented metric data (if segmented).",
            "items": {
              "$ref": "#/components/schemas/metricsSegmentInfo"
            },
            "type": "array"
          },
          "start": {
            "description": "Start time of the metric.",
            "format": "date_time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "metricsResults": {
        "description": "A set of metric results.",
        "items": {
          "properties": {
            "body": {
              "$ref": "#/components/schemas/metricsResult",
              "description": "The results of this metric query."
            },
            "id": {
              "description": "The specified ID for this metric.",
              "type": "string"
            },
            "status": {
              "description": "The HTTP status code of this metric query.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "id",
            "status",
            "body"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "metricsSegment": {
        "description": "The name of the dimension to segment the metric values by. This dimension must be applicable to the metric you are retrieving. To segment by more than one dimension at a time, separate them with a comma (,). In this case, the metric data will be segmented in the order the dimensions are listed in the parameter.",
        "items": {
          "enum": [
            "applicationBuild",
            "applicationVersion",
            "authenticatedOrAnonymousTraffic",
            "browser",
            "browserVersion",
            "city",
            "cloudRoleName",
            "cloudServiceName",
            "continent",
            "countryOrRegion",
            "deploymentId",
            "deploymentUnit",
            "deviceType",
            "environment",
            "hostingLocation",
            "instanceName"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "MetricsSegment"
          }
        },
        "minItems": 1,
        "type": "array"
      },
      "metricsSegmentInfo": {
        "additionalProperties": true,
        "description": "A metric segment",
        "properties": {
          "end": {
            "description": "Start time of the metric segment (only when an interval was specified).",
            "format": "date_time",
            "type": "string"
          },
          "segments": {
            "description": "Segmented metric data (if further segmented).",
            "items": {
              "$ref": "#/components/schemas/metricsSegmentInfo"
            },
            "type": "array"
          },
          "start": {
            "description": "Start time of the metric segment (only when an interval was specified).",
            "format": "date_time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "metricsTimespan": {
        "description": "The timespan over which to retrieve metric values. This is an ISO8601 time period value. If timespan is omitted, a default time range of `PT12H` (\"last 12 hours\") is used. The actual timespan that is queried may be adjusted by the server based. In all cases, the actual time span used for the query is included in the response.",
        "type": "string"
      },
      "metricsTop": {
        "description": "The number of segments to return.  This value is only valid when segment is specified.",
        "format": "int32",
        "type": "integer"
      },
      "queryBody": {
        "description": "The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)",
        "properties": {
          "applications": {
            "$ref": "#/components/schemas/applicationsParam",
            "description": "A list of Application IDs for cross-application queries."
          },
          "query": {
            "$ref": "#/components/schemas/queryParam",
            "description": "The query to execute."
          },
          "timespan": {
            "$ref": "#/components/schemas/queryTimespan",
            "description": "Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression."
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      },
      "queryParam": {
        "description": "The Analytics query. Learn more about the [Analytics query syntax](https://azure.microsoft.com/documentation/articles/app-insights-analytics-reference/)",
        "type": "string"
      },
      "queryResults": {
        "description": "Contains the tables, columns & rows resulting from a query.",
        "properties": {
          "tables": {
            "description": "The list of tables, columns and rows.",
            "items": {
              "$ref": "#/components/schemas/table"
            },
            "type": "array"
          }
        },
        "required": [
          "tables"
        ],
        "title": "A query response.",
        "type": "object"
      },
      "queryTimespan": {
        "description": "Optional. The timespan over which to query data. This is an ISO8601 time period value.  This timespan is applied in addition to any that are specified in the query expression.",
        "type": "string"
      },
      "table": {
        "description": "Contains the columns and rows for one table in a query response.",
        "properties": {
          "columns": {
            "description": "The list of columns in this table.",
            "items": {
              "$ref": "#/components/schemas/column"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the table.",
            "type": "string"
          },
          "rows": {
            "description": "The resulting rows from this query.",
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "columns",
          "rows"
        ],
        "title": "A query response table.",
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}