{
  "openapi": "3.0.0",
  "info": {
    "title": "ResourceManagementClient",
    "version": "2016-07-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Resources/stable/2016-07-01/resources.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Resources/calculateTemplateHash": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateHashResult"
                }
              }
            },
            "description": "OK - Returns the hash."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Calculate the hash of the given template.",
        "operationId": "Deployments_CalculateTemplateHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "The template provided to calculate hash.",
          "required": true
        },
        "x-ms-examples": {
          "Calculate template hash": {
            "$ref": "./examples/CalculateTemplateHash.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers": {
      "get": {
        "parameters": [
          {
            "description": "Query parameters. If null is passed returns all deployments.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The $expand query parameter. e.g. To include property aliases in response, use $expand=resourceTypes/aliases.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProviderListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Gets a list of resource providers.",
        "operationId": "Providers_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}": {
      "get": {
        "parameters": [
          {
            "description": "The $expand query parameter. e.g. To include property aliases in response, use $expand=resourceTypes/aliases.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Gets a resource provider.",
        "operationId": "Providers_Get"
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/register": {
      "post": {
        "parameters": [
          {
            "description": "Namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Registers provider to be used with a subscription.",
        "operationId": "Providers_Register"
      }
    },
    "/subscriptions/{subscriptionId}/providers/{resourceProviderNamespace}/unregister": {
      "post": {
        "parameters": [
          {
            "description": "Namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Provider"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Unregisters provider from a subscription.",
        "operationId": "Providers_Unregister"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/resources": {
      "get": {
        "parameters": [
          {
            "description": "Query parameters. If null is passed returns all resource groups.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query parameters. If null is passed returns all resource groups.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Get all of the resources under a subscription.",
        "operationId": "ResourceGroups_ListResources",
        "x-ms-odata": "#/components/schemas/GenericResourceFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{sourceResourceGroupName}/moveResources": {
      "post": {
        "parameters": [
          {
            "description": "Source resource group name.",
            "in": "path",
            "name": "sourceResourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Move resources from one resource group to another. The resources being moved should all be in the same resource group.",
        "operationId": "Resources_MoveResources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesMoveInfo"
              }
            }
          },
          "description": "move resources' parameters.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "parameters": [
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query parameters. If null is passed returns all resource groups.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Gets a collection of resource groups.",
        "operationId": "ResourceGroups_List",
        "x-ms-odata": "#/components/schemas/ResourceGroupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group to be deleted. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Delete resource group.",
        "operationId": "ResourceGroups_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group to get. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Get a resource group.",
        "operationId": "ResourceGroups_Get"
      },
      "head": {
        "parameters": [
          {
            "description": "The name of the resource group to check. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Checks whether resource group exists.",
        "operationId": "ResourceGroups_CheckExistence"
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group to be created or updated. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroup"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Resource groups can be updated through a simple PATCH operation to a group address. The format of the request is the same as that for creating a resource groups, though if a field is unspecified current value will be carried over. ",
        "operationId": "ResourceGroups_Patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroup"
              }
            }
          },
          "description": "Parameters supplied to the update state resource group service operation.",
          "required": true
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group to be created or updated.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroup"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroup"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Create a resource group.",
        "operationId": "ResourceGroups_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceGroup"
              }
            }
          },
          "description": "Parameters supplied to the create or update resource group service operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query parameters.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperationsListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "DeploymentOperations"
        ],
        "description": "Gets a list of deployments operations.",
        "operationId": "DeploymentOperations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operation Id.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentOperation"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "DeploymentOperations"
        ],
        "description": "Get a list of deployments operations.",
        "operationId": "DeploymentOperations_Get"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/exportTemplate": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group to be created or updated.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceGroupExportResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ResourceGroups"
        ],
        "description": "Captures the specified resource group as a template.",
        "operationId": "ResourceGroups_ExportTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportTemplateRequest"
              }
            }
          },
          "description": "Parameters supplied to the export template resource group operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group to filter by. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query parameters. If null is passed returns all deployments.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Get a list of deployments.",
        "operationId": "Deployments_List",
        "x-ms-odata": "#/components/schemas/DeploymentExtendedFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment to be deleted.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Delete deployment.",
        "operationId": "Deployments_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group to get. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Get a deployment.",
        "operationId": "Deployments_Get"
      },
      "head": {
        "parameters": [
          {
            "description": "The name of the resource group to check. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Checks whether deployment exists.",
        "operationId": "Deployments_CheckExistence"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExtended"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Create a named template deployment using a template.",
        "operationId": "Deployments_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "description": "Additional parameters supplied to the operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/cancel": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Cancel a currently running template deployment.",
        "operationId": "Deployments_Cancel"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/exportTemplate": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentExportResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Exports a deployment template.",
        "operationId": "Deployments_ExportTemplate"
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Resources/deployments/{deploymentName}/validate": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The name of the deployment.",
            "in": "path",
            "name": "deploymentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentValidateResult"
                }
              }
            },
            "description": "Bad Request"
          }
        },
        "tags": [
          "Deployments"
        ],
        "description": "Validate a deployment template.",
        "operationId": "Deployments_Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "description": "Deployment to validate.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Api version to use.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Delete resource and all of its resources. ",
        "operationId": "Resources_Delete"
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Api version to use.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Returns a resource belonging to a resource group.",
        "operationId": "Resources_Get"
      },
      "head": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Api version to use.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Checks whether resource exists.",
        "operationId": "Resources_CheckExistence"
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group for the resource. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "The namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "The parent resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "The resource type of the resource to update.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The name of the resource to update.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The API version to use for the operation.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResource"
                }
              }
            },
            "description": "OK - Returns information about the resource."
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Updates a resource.",
        "operationId": "Resources_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericResource"
              }
            }
          },
          "description": "Parameters for updating the resource.",
          "required": true
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group. The name is case insensitive.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            }
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "parentResourcePath",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "allowReserved": true,
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "Resource identity.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Api version to use.",
            "in": "query",
            "name": "api-version",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResource"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResource"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Create a resource.",
        "operationId": "Resources_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericResource"
              }
            }
          },
          "description": "Create or update resource parameters.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resources": {
      "get": {
        "parameters": [
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Comma-separated list of additional properties to be included in the response. Valid values include `createdTime`, `changedTime` and `provisioningState`. For example, `$expand=createdTime,changedTime`.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to return. If null is passed, returns all resources.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Resources"
        ],
        "description": "Get all of the resources under a subscription.",
        "operationId": "Resources_List",
        "x-ms-odata": "#/components/schemas/GenericResourceFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Get a list of subscription resource tags.",
        "operationId": "Tags_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the tag.",
            "in": "path",
            "name": "tagName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Delete a subscription resource tag.",
        "operationId": "Tags_Delete"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the tag.",
            "in": "path",
            "name": "tagName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDetails"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDetails"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Create a subscription resource tag.",
        "operationId": "Tags_CreateOrUpdate"
      }
    },
    "/subscriptions/{subscriptionId}/tagNames/{tagName}/tagValues/{tagValue}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the tag.",
            "in": "path",
            "name": "tagName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The value of the tag.",
            "in": "path",
            "name": "tagValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Delete a subscription resource tag value.",
        "operationId": "Tags_DeleteValue"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the tag.",
            "in": "path",
            "name": "tagName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The value of the tag.",
            "in": "path",
            "name": "tagValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagValue"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagValue"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Create a subscription resource tag value.",
        "operationId": "Tags_CreateOrUpdateValue"
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AliasPathType": {
        "description": "The type of the paths for alias. ",
        "properties": {
          "apiVersions": {
            "description": "The api versions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "path": {
            "description": "The path of an alias.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AliasType": {
        "description": "The alias type. ",
        "properties": {
          "paths": {
            "description": "The paths for an alias.",
            "items": {
              "$ref": "#/components/schemas/AliasPathType"
            },
            "type": "array"
          },
          "name": {
            "description": "The alias name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BasicDependency": {
        "description": "Deployment dependency information.",
        "properties": {
          "id": {
            "description": "The ID of the dependency.",
            "type": "string"
          },
          "resourceName": {
            "description": "The dependency resource name.",
            "type": "string"
          },
          "resourceType": {
            "description": "The dependency resource type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "An error response for a resource management request.",
        "properties": {
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "DebugSetting": {
        "properties": {
          "detailLevel": {
            "description": "The debug detail level.",
            "type": "string",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Dependency": {
        "description": "Deployment dependency information.",
        "properties": {
          "dependsOn": {
            "description": "The list of dependencies.",
            "items": {
              "$ref": "#/components/schemas/BasicDependency"
            },
            "type": "array"
          },
          "id": {
            "description": "The ID of the dependency.",
            "type": "string"
          },
          "resourceName": {
            "description": "The dependency resource name.",
            "type": "string"
          },
          "resourceType": {
            "description": "The dependency resource type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Deployment": {
        "description": "Deployment operation parameters.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DeploymentProperties",
            "description": "The deployment properties."
          }
        },
        "type": "object"
      },
      "DeploymentExportResult": {
        "description": "The deployment export result. ",
        "properties": {
          "template": {
            "description": "The template content.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "DeploymentExtended": {
        "description": "Deployment information.",
        "properties": {
          "id": {
            "description": "The ID of the deployment.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the deployment.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentPropertiesExtended",
            "description": "Deployment properties."
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "DeploymentExtendedFilter": {
        "description": "Deployment filter.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeploymentListResult": {
        "description": "List of deployments.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of deployments.",
            "items": {
              "$ref": "#/components/schemas/DeploymentExtended"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeploymentOperation": {
        "description": "Deployment operation information.",
        "properties": {
          "id": {
            "description": "Full deployment operation id.",
            "type": "string"
          },
          "operationId": {
            "description": "Deployment operation id.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentOperationProperties",
            "description": "Deployment properties."
          }
        },
        "type": "object"
      },
      "DeploymentOperationProperties": {
        "description": "Deployment operation properties.",
        "properties": {
          "provisioningState": {
            "description": "The state of the provisioning.",
            "type": "string"
          },
          "request": {
            "$ref": "#/components/schemas/HttpMessage",
            "description": "The HTTP request message."
          },
          "response": {
            "$ref": "#/components/schemas/HttpMessage",
            "description": "The HTTP response message."
          },
          "serviceRequestId": {
            "description": "Deployment operation service request id.",
            "type": "string"
          },
          "statusCode": {
            "description": "Operation status code.",
            "type": "string"
          },
          "statusMessage": {
            "description": "Operation status message."
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResource",
            "description": "The target resource."
          },
          "timestamp": {
            "description": "The date and time of the operation.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeploymentOperationsListResult": {
        "description": "List of deployment operations.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of deployments.",
            "items": {
              "$ref": "#/components/schemas/DeploymentOperation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DeploymentProperties": {
        "description": "Deployment properties.",
        "properties": {
          "parameters": {
            "description": "Deployment parameters. It can be a JObject or a well formed JSON string. Use only one of Parameters or ParametersLink.",
            "type": "object"
          },
          "debugSetting": {
            "$ref": "#/components/schemas/DebugSetting",
            "description": "The debug setting of the deployment."
          },
          "mode": {
            "description": "The deployment mode.",
            "enum": [
              "Incremental",
              "Complete"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeploymentMode"
            }
          },
          "parametersLink": {
            "$ref": "#/components/schemas/ParametersLink",
            "description": "The parameters URI. Use only one of Parameters or ParametersLink."
          },
          "template": {
            "description": "The template content. It can be a JObject or a well formed JSON string. Use only one of Template or TemplateLink.",
            "type": "object"
          },
          "templateLink": {
            "$ref": "#/components/schemas/TemplateLink",
            "description": "The template URI. Use only one of Template or TemplateLink."
          }
        },
        "required": [
          "mode"
        ],
        "type": "object"
      },
      "DeploymentPropertiesExtended": {
        "description": "Deployment properties with additional details.",
        "properties": {
          "parameters": {
            "description": "Deployment parameters. Use only one of Parameters or ParametersLink.",
            "type": "object"
          },
          "correlationId": {
            "description": "The correlation ID of the deployment.",
            "type": "string"
          },
          "debugSetting": {
            "$ref": "#/components/schemas/DebugSetting",
            "description": "The debug setting of the deployment."
          },
          "dependencies": {
            "description": "The list of deployment dependencies.",
            "items": {
              "$ref": "#/components/schemas/Dependency"
            },
            "type": "array"
          },
          "error": {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorResponse",
            "description": "The deployment error.",
            "readOnly": true
          },
          "mode": {
            "description": "The deployment mode.",
            "enum": [
              "Incremental",
              "Complete"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeploymentMode"
            }
          },
          "outputs": {
            "description": "Key/value pairs that represent deployment output.",
            "type": "object"
          },
          "parametersLink": {
            "$ref": "#/components/schemas/ParametersLink",
            "description": "The URI referencing the parameters. Use only one of Parameters or ParametersLink."
          },
          "providers": {
            "description": "The list of resource providers needed for the deployment.",
            "items": {
              "$ref": "#/components/schemas/Provider"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "The state of the provisioning.",
            "type": "string"
          },
          "template": {
            "description": "The template content. Use only one of Template or TemplateLink.",
            "type": "object"
          },
          "templateLink": {
            "$ref": "#/components/schemas/TemplateLink",
            "description": "The URI referencing the template. Use only one of Template or TemplateLink."
          },
          "timestamp": {
            "description": "The timestamp of the template deployment.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeploymentValidateResult": {
        "description": "Information from validate template deployment response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ResourceManagementErrorWithDetails",
            "description": "Validation error."
          },
          "properties": {
            "$ref": "#/components/schemas/DeploymentPropertiesExtended",
            "description": "The template deployment properties."
          }
        },
        "type": "object"
      },
      "ExportTemplateRequest": {
        "description": "Export resource group template request parameters.",
        "properties": {
          "options": {
            "description": "The export template options. A CSV-formatted list containing zero or more of the following: 'IncludeParameterDefaultValue', 'IncludeComments', 'SkipResourceNameParameterization', 'SkipAllParameterization'",
            "type": "string"
          },
          "resources": {
            "description": "The IDs of the resources to filter the export by. To export all resources, supply an array with single entry '*'.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GenericResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Resource information.",
        "properties": {
          "identity": {
            "$ref": "#/components/schemas/Identity",
            "description": "The identity of the resource."
          },
          "kind": {
            "description": "The kind of the resource.",
            "type": "string"
          },
          "managedBy": {
            "description": "Id of the resource that manages this resource.",
            "type": "string"
          },
          "plan": {
            "$ref": "#/components/schemas/Plan",
            "description": "The plan of the resource."
          },
          "properties": {
            "description": "The resource properties.",
            "type": "object"
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku of the resource."
          }
        },
        "type": "object"
      },
      "GenericResourceExpanded": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GenericResource"
          }
        ],
        "description": "Resource information.",
        "properties": {
          "changedTime": {
            "description": "The changed time of the resource. This is only present if requested via the $expand query parameter.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "The created time of the resource. This is only present if requested via the $expand query parameter.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. This is only present if requested via the $expand query parameter.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GenericResourceFilter": {
        "description": "Resource filter.",
        "properties": {
          "resourceType": {
            "description": "The resource type.",
            "type": "string"
          },
          "tagname": {
            "description": "The tag name.",
            "type": "string"
          },
          "tagvalue": {
            "description": "The tag value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HttpMessage": {
        "properties": {
          "content": {
            "description": "HTTP message content.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Identity": {
        "description": "Identity for the resource.",
        "properties": {
          "principalId": {
            "description": "The principal id of resource identity.",
            "readOnly": true,
            "type": "string"
          },
          "tenantId": {
            "description": "The tenant id of resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The identity type.",
            "enum": [
              "SystemAssigned"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ResourceIdentityType"
            }
          }
        },
        "type": "object"
      },
      "ParametersLink": {
        "description": "Entity representing the reference to the deployment parameters.",
        "properties": {
          "contentVersion": {
            "description": "If included it must match the ContentVersion in the template.",
            "type": "string"
          },
          "uri": {
            "description": "URI referencing the template.",
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "type": "object"
      },
      "Plan": {
        "description": "Plan for the resource.",
        "properties": {
          "name": {
            "description": "The plan ID.",
            "type": "string"
          },
          "product": {
            "description": "The offer ID.",
            "type": "string"
          },
          "promotionCode": {
            "description": "The promotion code.",
            "type": "string"
          },
          "publisher": {
            "description": "The publisher ID.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Provider": {
        "description": "Resource provider information.",
        "properties": {
          "id": {
            "description": "The provider id.",
            "type": "string"
          },
          "namespace": {
            "description": "The namespace of the provider.",
            "type": "string"
          },
          "registrationState": {
            "description": "The registration state of the provider.",
            "type": "string"
          },
          "resourceTypes": {
            "description": "The collection of provider resource types.",
            "items": {
              "$ref": "#/components/schemas/ProviderResourceType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProviderListResult": {
        "description": "List of resource providers.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of resource providers.",
            "items": {
              "$ref": "#/components/schemas/Provider"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProviderResourceType": {
        "description": "Resource type managed by the resource provider.",
        "properties": {
          "aliases": {
            "description": "The aliases that are supported by this resource type.",
            "items": {
              "$ref": "#/components/schemas/AliasType"
            },
            "type": "array"
          },
          "apiVersions": {
            "description": "The api version.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "locations": {
            "description": "The collection of locations where this resource type can be created in.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "properties": {
            "additionalProperties": {
              "description": "The additional properties. ",
              "type": "string"
            },
            "description": "The properties.",
            "type": "object"
          },
          "resourceType": {
            "description": "The resource type.",
            "type": "string"
          },
          "zoneMappings": {
            "items": {
              "$ref": "#/components/schemas/ZoneMapping"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Resource": {
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "id": {
            "description": "Resource Id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "type": "string"
          },
          "name": {
            "description": "Resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceGroup": {
        "description": "Resource group information.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "description": "The additional properties. ",
              "type": "string"
            },
            "description": "The tags attached to the resource group.",
            "type": "object"
          },
          "id": {
            "description": "The ID of the resource group.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The location of the resource group. It cannot be changed after the resource group has been created. Has to be one of the supported Azure Locations, such as West US, East US, West Europe, East Asia, etc.",
            "type": "string"
          },
          "name": {
            "description": "The Name of the resource group.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ResourceGroupProperties"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceGroupExportResult": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ResourceManagementErrorWithDetails",
            "description": "The error."
          },
          "template": {
            "description": "The template content.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ResourceGroupFilter": {
        "description": "Resource group filter.",
        "properties": {
          "tagName": {
            "description": "The tag name.",
            "type": "string"
          },
          "tagValue": {
            "description": "The tag value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceGroupListResult": {
        "description": "List of resource groups.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of resource groups.",
            "items": {
              "$ref": "#/components/schemas/ResourceGroup"
            },
            "type": "array"
          }
        },
        "required": [
          "nextLink"
        ],
        "type": "object"
      },
      "ResourceGroupProperties": {
        "description": "The resource group properties.",
        "properties": {
          "provisioningState": {
            "description": "The provisioning state. ",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceListResult": {
        "description": "List of resource groups.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of resources.",
            "items": {
              "$ref": "#/components/schemas/GenericResourceExpanded"
            },
            "type": "array"
          }
        },
        "required": [
          "nextLink"
        ],
        "type": "object"
      },
      "ResourceManagementErrorWithDetails": {
        "properties": {
          "code": {
            "description": "The error code returned from the server.",
            "type": "string"
          },
          "details": {
            "description": "Validation error.",
            "items": {
              "$ref": "#/components/schemas/ResourceManagementErrorWithDetails"
            },
            "type": "array"
          },
          "message": {
            "description": "The error message returned from the server.",
            "type": "string"
          },
          "target": {
            "description": "The target of the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "ResourceProviderOperationDisplayProperties": {
        "description": "Resource provider operation's display properties.",
        "properties": {
          "description": {
            "description": "Operation description.",
            "type": "string"
          },
          "operation": {
            "description": "Operation.",
            "type": "string"
          },
          "provider": {
            "description": "Operation provider.",
            "type": "string"
          },
          "publisher": {
            "description": "Operation description.",
            "type": "string"
          },
          "resource": {
            "description": "Operation resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourcesMoveInfo": {
        "description": "Parameters of move resources.",
        "properties": {
          "resources": {
            "description": "The ids of the resources.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetResourceGroup": {
            "description": "The target resource group.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Sku": {
        "description": "Sku for the resource.",
        "properties": {
          "capacity": {
            "description": "The sku capacity.",
            "format": "int32",
            "type": "integer"
          },
          "family": {
            "description": "The sku family.",
            "type": "string"
          },
          "model": {
            "description": "The sku model.",
            "type": "string"
          },
          "name": {
            "description": "The sku name.",
            "type": "string"
          },
          "size": {
            "description": "The sku size.",
            "type": "string"
          },
          "tier": {
            "description": "The sku tier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubResource": {
        "properties": {
          "id": {
            "description": "Resource Id",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "TagCount": {
        "description": "Tag count.",
        "properties": {
          "type": {
            "description": "Type of count.",
            "type": "string"
          },
          "value": {
            "description": "Value of count.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagDetails": {
        "description": "Tag details.",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/TagCount",
            "description": "The tag count."
          },
          "id": {
            "description": "The tag ID.",
            "readOnly": true,
            "type": "string"
          },
          "tagName": {
            "description": "The tag name.",
            "type": "string"
          },
          "values": {
            "description": "The list of tag values.",
            "items": {
              "$ref": "#/components/schemas/TagValue"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TagValue": {
        "description": "Tag information.",
        "properties": {
          "count": {
            "$ref": "#/components/schemas/TagCount",
            "description": "The tag value count."
          },
          "id": {
            "description": "The tag ID.",
            "readOnly": true,
            "type": "string"
          },
          "tagValue": {
            "description": "The tag value.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "TagsListResult": {
        "description": "List of subscription tags.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of tags.",
            "items": {
              "$ref": "#/components/schemas/TagDetails"
            },
            "type": "array"
          }
        },
        "required": [
          "nextLink"
        ],
        "type": "object"
      },
      "TargetResource": {
        "description": "Target resource.",
        "properties": {
          "id": {
            "description": "The ID of the resource.",
            "type": "string"
          },
          "resourceName": {
            "description": "The name of the resource.",
            "type": "string"
          },
          "resourceType": {
            "description": "The type of the resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateHashResult": {
        "description": "Result of the request to calculate template hash. It contains a string of minified template and its hash.",
        "properties": {
          "minifiedTemplate": {
            "description": "The minified template string.",
            "type": "string"
          },
          "templateHash": {
            "description": "The template hash.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplateLink": {
        "description": "Entity representing the reference to the template.",
        "properties": {
          "contentVersion": {
            "description": "If included it must match the ContentVersion in the template.",
            "type": "string"
          },
          "uri": {
            "description": "URI referencing the template.",
            "type": "string"
          }
        },
        "required": [
          "uri"
        ],
        "type": "object"
      },
      "ZoneMapping": {
        "properties": {
          "location": {
            "description": "The location of the zone mapping.",
            "type": "string"
          },
          "zones": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}