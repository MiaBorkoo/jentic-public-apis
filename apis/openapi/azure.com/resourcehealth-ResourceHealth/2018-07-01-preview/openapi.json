{
  "openapi": "3.0.0",
  "info": {
    "description": "The Resource Health Client.",
    "title": "Microsoft.ResourceHealth",
    "version": "2018-07-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resourcehealth/resource-manager/Microsoft.ResourceHealth/preview/2018-08-01/ResourceHealth.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.ResourceHealth/emergingIssues": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/emergingIssueListResult"
                }
              }
            },
            "description": "The body contains a list of azure emerging issues."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "EmergingIssues"
        ],
        "description": "Lists Azure services' emerging issues.",
        "operationId": "EmergingIssues_List",
        "x-ms-examples": {
          "GetEmergingIssues": {
            "$ref": "./examples/EmergingIssues_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/IssueNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/emergingIssuesGetResult"
                }
              }
            },
            "description": "The body contains properties of azure emerging issues, which includes a list of status banner and status active events."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "EmergingIssues"
        ],
        "description": "Gets Azure services' emerging issues.",
        "operationId": "EmergingIssues_Get",
        "x-ms-examples": {
          "GetEmergingIssues": {
            "$ref": "./examples/EmergingIssues_Get.json"
          }
        }
      }
    },
    "/providers/Microsoft.ResourceHealth/metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataEntityListResult"
                }
              }
            },
            "description": "OK. Successfully retrieved metadata entities"
          }
        },
        "tags": [
          "Metadata"
        ],
        "deprecated": false,
        "operationId": "Metadata_List",
        "summary": "Gets the list of metadata entities.",
        "x-ms-examples": {
          "GetMetadata": {
            "$ref": "./examples/Metadata_ListMetadata.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.ResourceHealth/metadata/{name}": {
      "get": {
        "parameters": [
          {
            "description": "Name of metadata entity.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataEntity"
                }
              }
            },
            "description": "OK. Successfully retrieved metadata entities"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Client sent unknown metadata name"
          }
        },
        "tags": [
          "Metadata"
        ],
        "deprecated": false,
        "operationId": "Metadata_Get",
        "summary": "Gets the metadata entity.",
        "x-ms-examples": {
          "GetMetadata": {
            "$ref": "./examples/Metadata_GetMetadataEntity.json"
          }
        }
      }
    },
    "/providers/Microsoft.ResourceHealth/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationListResult"
                }
              }
            },
            "description": "The list of available operations for the resourcehealth resource provider"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists available operations for the resourcehealth resource provider",
        "operationId": "Operations_List"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The list of current availability status for all the resources in the subscription"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists the current availability status for all the resources in the subscription.",
        "operationId": "AvailabilityStatuses_ListBySubscriptionId",
        "x-ms-examples": {
          "ListHealthBySubscriptionId": {
            "$ref": "./examples/AvailabilityStatuses_ListBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            },
            "description": "The list of current service health events in the subscription"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Lists current service health events in the subscription.",
        "operationId": "Events_ListBySubscriptionId",
        "x-ms-examples": {
          "ListEventsBySubscriptionId": {
            "$ref": "./examples/Events_ListBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/impactedResources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/impactedResourceListResult"
                }
              }
            },
            "description": "The list of current availability status for impacted resources in the subscription"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "ImpactedResources"
        ],
        "description": "Lists the current availability status for impacted resources in the subscription.",
        "operationId": "ImpactedResources_ListBySubscriptionId",
        "x-ms-examples": {
          "ListHealthBySubscriptionId": {
            "$ref": "./examples/ImpactedResources_ListBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The list of current availability status for all the resources in the resource group"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists the current availability status for all the resources in the resource group.",
        "operationId": "AvailabilityStatuses_ListByResourceGroup",
        "x-ms-examples": {
          "ListByResourceGroup": {
            "$ref": "./examples/AvailabilityStatuses_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatusListResult"
                }
              }
            },
            "description": "The list of historical availability statuses for a single resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Lists all historical availability transitions and impacting events for a single resource.",
        "operationId": "AvailabilityStatuses_List",
        "x-ms-examples": {
          "GetHealthHistoryByResource": {
            "$ref": "./examples/AvailabilityStatuses_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/availabilityStatuses/current": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "#/components/parameters/ExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/availabilityStatus"
                }
              }
            },
            "description": "The current availability status for a single resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "AvailabilityStatuses"
        ],
        "description": "Gets current availability status for a single resource",
        "operationId": "AvailabilityStatuses_GetByResource",
        "x-ms-examples": {
          "GetCurrentHealthByResource": {
            "$ref": "./examples/AvailabilityStatus_GetByResource.json"
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ResourceHealth/events": {
      "get": {
        "parameters": [
          {
            "allowReserved": true,
            "description": "The fully qualified ID of the resource, including the resource name and resource type. Currently the API support not nested and one nesting level resource types : /subscriptions/{subscriptionId}/resourceGroups/{resource-group-name}/providers/{resource-provider-name}/{resource-type}/{resource-name} and /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}",
            "in": "path",
            "name": "resourceUri",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/events"
                }
              }
            },
            "description": "The list of current service health events for given resource"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "DefaultErrorResponse"
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Lists current service health events for given resource.",
        "operationId": "Events_ListBySingleResource",
        "x-ms-examples": {
          "ListEventsBySingleResource": {
            "$ref": "./examples/Events_ListBySingleResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "EventIdParameter": {
        "description": "EventId for the Service health event",
        "in": "path",
        "name": "eventId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ExpandParameter": {
        "description": "Setting $expand=recommendedactions in url query expands the recommendedactions in the response.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "FilterParameter": {
        "description": "The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "IssueNameParameter": {
        "description": "The name of the emerging issue.",
        "in": "path",
        "name": "issueName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "description": "Error details.",
        "properties": {
          "code": {
            "description": "The error code.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "The error details.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetadataEntity": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "The metadata entity contract.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MetadataEntityProperties",
            "description": "The metadata entity properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MetadataEntityListResult": {
        "description": "The list of metadata entities",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of metadata.",
            "type": "string"
          },
          "value": {
            "description": "The list of metadata entities.",
            "items": {
              "$ref": "#/components/schemas/MetadataEntity"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MetadataEntityProperties": {
        "description": "The metadata entity properties",
        "properties": {
          "applicableScenarios": {
            "description": "The list of scenarios applicable to this metadata entity.",
            "items": {
              "enum": [
                "Alerts"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "Scenario"
              }
            },
            "type": "array"
          },
          "dependsOn": {
            "description": "The list of keys on which this entity depends on.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The display name.",
            "type": "string"
          },
          "supportedValues": {
            "description": "The list of supported values.",
            "items": {
              "$ref": "#/components/schemas/MetadataSupportedValueDetail"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MetadataSupportedValueDetail": {
        "description": "The metadata supported value detail.",
        "properties": {
          "displayName": {
            "description": "The display name.",
            "type": "string"
          },
          "id": {
            "description": "The id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "availabilityStatus": {
        "description": "availabilityStatus of a resource.",
        "properties": {
          "id": {
            "description": "Azure Resource Manager Identity for the availabilityStatuses resource.",
            "type": "string"
          },
          "location": {
            "description": "Azure Resource Manager geo location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "current.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of availability state.",
            "properties": {
              "availabilityState": {
                "description": "Availability status of the resource. When it is null, this availabilityStatus object represents an availability impacting event",
                "enum": [
                  "Available",
                  "Unavailable",
                  "Degraded",
                  "Unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AvailabilityStateValues"
                }
              },
              "detailedStatus": {
                "description": "Details of the availability status.",
                "type": "string"
              },
              "healthEventCategory": {
                "description": "In case of an availability impacting event, it describes the category of a PlatformInitiated health impacting event. Examples are Planned, Unplanned etc.",
                "type": "string"
              },
              "healthEventCause": {
                "description": "In case of an availability impacting event, it describes where the health impacting event was originated. Examples are PlatformInitiated, UserInitiated etc.",
                "type": "string"
              },
              "healthEventId": {
                "description": "It is a unique Id that identifies the event",
                "type": "string"
              },
              "healthEventType": {
                "description": "In case of an availability impacting event, it describes when the health impacting event was originated. Examples are Lifecycle, Downtime, Fault Analysis etc.",
                "type": "string"
              },
              "occuredTime": {
                "description": "Timestamp for when last change in health status occurred.",
                "format": "date-time",
                "type": "string"
              },
              "reasonChronicity": {
                "description": "Chronicity of the availability transition.",
                "enum": [
                  "Transient",
                  "Persistent"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "reasonChronicityTypes"
                }
              },
              "reasonType": {
                "description": "When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated. Examples are planned, unplanned, user initiated or an outage etc.",
                "type": "string"
              },
              "recentlyResolved": {
                "description": "An annotation describing a change in the availabilityState to Available from Unavailable with a reasonType of type Unplanned",
                "properties": {
                  "resolvedTime": {
                    "description": "Timestamp when the availabilityState changes to Available.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "unavailabilitySummary": {
                    "description": "Brief description of cause of the resource becoming unavailable.",
                    "type": "string"
                  },
                  "unavailableOccurredTime": {
                    "description": "Timestamp for when the availabilityState changed to Unavailable",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "recommendedActions": {
                "description": "Lists actions the user can take based on the current availabilityState of the resource.",
                "items": {
                  "$ref": "#/components/schemas/recommendedAction"
                },
                "type": "array"
              },
              "reportedTime": {
                "description": "Timestamp for when the health was last checked. ",
                "format": "date-time",
                "type": "string"
              },
              "resolutionETA": {
                "description": "When the resource's availabilityState is Unavailable and the reasonType is not User Initiated, it provides the date and time for when the issue is expected to be resolved.",
                "format": "date-time",
                "type": "string"
              },
              "rootCauseAttributionTime": {
                "description": "When the resource's availabilityState is Unavailable, it provides the Timestamp for when the health impacting event was received.",
                "format": "date-time",
                "type": "string"
              },
              "serviceImpactingEvents": {
                "description": "Lists the service impacting events that may be affecting the health of the resource.",
                "items": {
                  "$ref": "#/components/schemas/serviceImpactingEvent"
                },
                "type": "array"
              },
              "summary": {
                "description": "Summary description of the availability status.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": {
            "description": "Microsoft.ResourceHealth/AvailabilityStatuses.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "availabilityStatusListResult": {
        "description": "The List availabilityStatus operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch the next page of availabilityStatuses.",
            "type": "string"
          },
          "value": {
            "description": "The list of availabilityStatuses.",
            "items": {
              "$ref": "#/components/schemas/availabilityStatus"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "emergingIssue": {
        "description": "On-going emerging issue from azure status.",
        "properties": {
          "refreshTimestamp": {
            "description": "Timestamp for when last time refreshed for ongoing emerging issue.",
            "format": "date-time",
            "type": "string"
          },
          "statusActiveEvents": {
            "description": "The list of emerging issues of active event type.",
            "items": {
              "$ref": "#/components/schemas/statusActiveEvent"
            },
            "type": "array"
          },
          "statusBanners": {
            "description": "The list of emerging issues of banner type.",
            "items": {
              "$ref": "#/components/schemas/statusBanner"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "emergingIssueImpact": {
        "description": "Object of the emerging issue impact on services and regions.",
        "properties": {
          "id": {
            "description": "The impacted service id.",
            "type": "string"
          },
          "name": {
            "description": "The impacted service name.",
            "type": "string"
          },
          "regions": {
            "description": "The list of impacted regions for corresponding emerging issues.",
            "items": {
              "$ref": "#/components/schemas/impactedRegion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "emergingIssueListResult": {
        "description": "The list of emerging issues.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of emerging issues.",
            "type": "string"
          },
          "value": {
            "description": "The list of emerging issues.",
            "items": {
              "$ref": "#/components/schemas/emergingIssuesGetResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "emergingIssuesGetResult": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "The Get EmergingIssues operation response.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/emergingIssue",
            "description": "The emerging issue entity properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "event": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Service health event",
        "properties": {
          "properties": {
            "description": "Properties of event.",
            "properties": {
              "article": {
                "description": "Article of event.",
                "properties": {
                  "articleContent": {
                    "description": "Article content of event.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": {
                "description": "Contains the communication message for the event, that could include summary, root cause and other details.",
                "type": "string"
              },
              "enableChatWithUs": {
                "description": "Tells if we want to enable or disable Microsoft Support for this event.",
                "type": "boolean"
              },
              "enableMicrosoftSupport": {
                "description": "Tells if we want to enable or disable Microsoft Support for this event.",
                "type": "boolean"
              },
              "eventLevel": {
                "description": "Level of event.",
                "enum": [
                  "Critical",
                  "Error",
                  "Warning",
                  "Informational"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "EventLevelValues"
                }
              },
              "eventSource": {
                "description": "Source of event.",
                "enum": [
                  "ResourceHealth",
                  "ServiceHealth"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "EventSourceValues"
                }
              },
              "eventType": {
                "description": "Type of event.",
                "enum": [
                  "ServiceIssue",
                  "PlannedMaintenance",
                  "HealthAdvisory",
                  "RCA",
                  "EmergingIssues",
                  "SecurityAdvisory"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "EventTypeValues"
                }
              },
              "faqs": {
                "description": "Frequently asked questions for the service health event.",
                "items": {
                  "$ref": "#/components/schemas/faq"
                },
                "type": "array"
              },
              "header": {
                "description": "Header text of event.",
                "type": "string"
              },
              "hirStage": {
                "description": "Stage for HIR Document",
                "type": "string"
              },
              "impact": {
                "description": "List services impacted by the service health event.",
                "items": {
                  "$ref": "#/components/schemas/impact"
                },
                "type": "array"
              },
              "impactMitigationTime": {
                "description": "It provides the Timestamp for when the health impacting event resolved.",
                "format": "date-time",
                "type": "string"
              },
              "impactStartTime": {
                "description": "It provides the Timestamp for when the health impacting event started.",
                "format": "date-time",
                "type": "string"
              },
              "isHIR": {
                "description": "It provides information if the event is High incident rate event or not.",
                "type": "boolean"
              },
              "lastUpdateTime": {
                "description": "It provides the Timestamp for when the health impacting event was last updated.",
                "format": "date-time",
                "type": "string"
              },
              "level": {
                "description": "Level of insight.",
                "enum": [
                  "Critical",
                  "Warning"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "LevelValues"
                }
              },
              "links": {
                "description": "Useful links of event.",
                "items": {
                  "$ref": "#/components/schemas/link"
                },
                "type": "array"
              },
              "platformInitiated": {
                "description": "Is true if the event is platform initiated.",
                "type": "boolean"
              },
              "priority": {
                "description": "Priority level of the event. Has value from 0 to 23. 0 is the highest priority. Service issue events have higher priority followed by planned maintenance and health advisory. Critical events have higher priority followed by error, warning and informational. Furthermore, active events have higher priority than resolved.",
                "type": "integer"
              },
              "recommendedActions": {
                "description": "Recommended actions of event.",
                "properties": {
                  "actions": {
                    "description": "Recommended actions for the service health event.",
                    "items": {
                      "description": "Recommended action for the service health event.",
                      "properties": {
                        "actionText": {
                          "description": "Recommended action text",
                          "type": "string"
                        },
                        "groupId": {
                          "description": "Recommended action group Id for the service health event.",
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "localeCode": {
                    "description": "Recommended action locale for the service health event.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Recommended action title for the service health event.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "status": {
                "description": "Current status of event.",
                "enum": [
                  "Active",
                  "Resolved"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "EventStatusValues"
                }
              },
              "summary": {
                "description": "Summary text of event.",
                "type": "string"
              },
              "title": {
                "description": "Title text of event.",
                "type": "string"
              }
            },
            "type": "object",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "events": {
        "description": "The List events operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of events. Call ListNext() with this URI to fetch the next page of events.",
            "type": "string"
          },
          "value": {
            "description": "The list of event.",
            "items": {
              "$ref": "#/components/schemas/event"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "faq": {
        "description": "Frequently asked question for the service health event",
        "properties": {
          "answer": {
            "description": "FAQ answer for the service health event.",
            "type": "string"
          },
          "localeCode": {
            "description": "FAQ locale for the service health event.",
            "type": "string"
          },
          "question": {
            "description": "FAQ question for the service health event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "impact": {
        "description": "Azure service impacted by the service health event.",
        "properties": {
          "impactedRegions": {
            "description": "List regions impacted by the service health event.",
            "items": {
              "$ref": "#/components/schemas/impactedServiceRegion"
            },
            "type": "array"
          },
          "impactedService": {
            "description": "Impacted service name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "impactedRegion": {
        "description": "Object of impacted region.",
        "properties": {
          "id": {
            "description": "The impacted region id.",
            "type": "string"
          },
          "name": {
            "description": "The impacted region name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "impactedResourceListResult": {
        "description": "The List impactedResourceStatus operation response.",
        "properties": {
          "nextLink": {
            "description": "The URI to fetch the next page of impactedResourceStatus.",
            "type": "string"
          },
          "value": {
            "description": "The list of impactedResourceStatus.",
            "items": {
              "$ref": "#/components/schemas/impactedResourceStatus"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "impactedResourceStatus": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "impactedResource with health status",
        "properties": {
          "properties": {
            "description": "Properties of impacted resource status.",
            "properties": {
              "availabilityState": {
                "description": "Impacted resource status of the resource.",
                "enum": [
                  "Available",
                  "Unavailable",
                  "Degraded",
                  "Unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AvailabilityStateValues"
                }
              },
              "occuredTime": {
                "description": "Timestamp for when last change in health status occurred.",
                "format": "date-time",
                "type": "string"
              },
              "reasonType": {
                "description": "When the resource's availabilityState is Unavailable, it describes where the health impacting event was originated.",
                "enum": [
                  "Unplanned",
                  "Planned",
                  "UserInitiated"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ReasonTypeValues"
                }
              },
              "summary": {
                "description": "Summary description of the impacted resource status.",
                "type": "string"
              },
              "title": {
                "description": "Title description of the impacted resource status.",
                "type": "string"
              }
            },
            "type": "object",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "impactedServiceRegion": {
        "description": "Azure region impacted by the service health event.",
        "properties": {
          "impactedRegion": {
            "description": "Impacted region name.",
            "type": "string"
          },
          "impactedSubscriptions": {
            "description": "List subscription impacted by the service health event.",
            "items": {
              "description": "Subscription impacted by the service health event.",
              "type": "string"
            },
            "type": "array"
          },
          "lastUpdateTime": {
            "description": "It provides the Timestamp for when the last update for the service health event.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Current status of event in the region.",
            "enum": [
              "Active",
              "Resolved"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EventStatusValues"
            }
          },
          "updates": {
            "description": "List of updates for given service health event.",
            "items": {
              "$ref": "#/components/schemas/update"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "link": {
        "description": "Useful links for service health event.",
        "properties": {
          "parameters": {
            "description": "It provides a map of parameter name and value for portal extension blade to produce lik for given service health event.",
            "type": "object"
          },
          "bladeName": {
            "description": "It provides the name of portal extension blade to produce link for given service health event.",
            "type": "string"
          },
          "displayText": {
            "description": "Display text of link.",
            "properties": {
              "localizedValue": {
                "description": "Localized display text of link.",
                "type": "string"
              },
              "value": {
                "description": "Display text of link.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "extensionName": {
            "description": "It provides the name of portal extension to produce link for given service health event.",
            "type": "string"
          },
          "type": {
            "description": "Type of link.",
            "enum": [
              "Button",
              "Hyperlink"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "LinkTypeValues"
            }
          }
        },
        "type": "object"
      },
      "operation": {
        "description": "Operation available in the resourcehealth resource provider.",
        "properties": {
          "display": {
            "description": "Properties of the operation.",
            "properties": {
              "description": {
                "description": "Description of the operation.",
                "type": "string"
              },
              "operation": {
                "description": "Operation name.",
                "type": "string"
              },
              "provider": {
                "description": "Provider name.",
                "type": "string"
              },
              "resource": {
                "description": "Resource name.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Name of the operation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "operationListResult": {
        "description": "Lists the operations response.",
        "properties": {
          "value": {
            "description": "List of operations available in the resourcehealth resource provider.",
            "items": {
              "$ref": "#/components/schemas/operation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "recommendedAction": {
        "description": "Lists actions the user can take based on the current availabilityState of the resource.",
        "properties": {
          "action": {
            "description": "Recommended action.",
            "type": "string"
          },
          "actionUrl": {
            "description": "Link to the action",
            "type": "string"
          },
          "actionUrlText": {
            "description": "Substring of action, it describes which text should host the action url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serviceImpactingEvent": {
        "description": "Lists the service impacting events that may be affecting the health of the resource.",
        "properties": {
          "correlationId": {
            "description": "Correlation id for the event",
            "type": "string"
          },
          "eventStartTime": {
            "description": "Timestamp for when the event started.",
            "format": "date-time",
            "type": "string"
          },
          "eventStatusLastModifiedTime": {
            "description": "Timestamp for when event was submitted/detected.",
            "format": "date-time",
            "type": "string"
          },
          "incidentProperties": {
            "description": "Properties of the service impacting event.",
            "properties": {
              "incidentType": {
                "description": "Type of Event.",
                "type": "string"
              },
              "region": {
                "description": "Region impacted by the event.",
                "type": "string"
              },
              "service": {
                "description": "Service impacted by the event.",
                "type": "string"
              },
              "title": {
                "description": "Title of the incident.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "status": {
            "description": "Status of the service impacting event.",
            "properties": {
              "value": {
                "description": "Current status of the event",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "statusActiveEvent": {
        "description": "Active event type of emerging issue.",
        "properties": {
          "cloud": {
            "description": "The cloud type of this active event.",
            "type": "string"
          },
          "description": {
            "description": "The details of active event.",
            "type": "string"
          },
          "impacts": {
            "description": "The list of emerging issues impacts.",
            "items": {
              "$ref": "#/components/schemas/emergingIssueImpact"
            },
            "type": "array"
          },
          "lastModifiedTime": {
            "description": "The last time modified on this banner.",
            "format": "date-time",
            "type": "string"
          },
          "published": {
            "description": "The boolean value of this active event if published or not.",
            "type": "boolean"
          },
          "severity": {
            "description": "The severity level of this active event.",
            "enum": [
              "Information",
              "Warning",
              "Error"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SeverityValues"
            }
          },
          "stage": {
            "description": "The stage of this active event.",
            "enum": [
              "Active",
              "Resolve",
              "Archived"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StageValues"
            }
          },
          "startTime": {
            "description": "The impact start time on this active event.",
            "format": "date-time",
            "type": "string"
          },
          "title": {
            "description": "The active event title.",
            "type": "string"
          },
          "trackingId": {
            "description": "The tracking id of this active event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "statusBanner": {
        "description": "Banner type of emerging issue.",
        "properties": {
          "cloud": {
            "description": "The cloud type of this banner.",
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "The last time modified on this banner.",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "The details of banner.",
            "type": "string"
          },
          "title": {
            "description": "The banner title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "update": {
        "description": "Update for service health event.",
        "properties": {
          "summary": {
            "description": "Summary text for the given update for the service health event.",
            "type": "string"
          },
          "updateDateTime": {
            "description": "It provides the Timestamp for the given update for the service health event.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}