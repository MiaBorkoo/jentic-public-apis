{
  "openapi": "3.0.0",
  "info": {
    "description": "These are the Network Experiment APIs.\n",
    "title": "NetworkExperiments",
    "version": "2019-11-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/frontdoor/resource-manager/Microsoft.Network/stable/2019-11-01/networkexperiment.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/NetworkExperimentProfiles": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileList"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "operationId": "NetworkExperimentProfiles_List",
        "summary": "Gets a list of Network Experiment Profiles under a subscription",
        "x-ms-examples": {
          "List NetworkExperiment Profiles in a Resource Group": {
            "$ref": "./examples/NetworkExperimentListProfiles.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileList"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "operationId": "NetworkExperimentProfiles_ListByResourceGroup",
        "summary": "Gets a list of Network Experiment Profiles within a resource group under a subscription",
        "x-ms-examples": {
          "List NetworkExperiment Profiles in a Resource Group": {
            "$ref": "./examples/NetworkExperimentListProfiles.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content. The request has been accepted but the profile was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "operationId": "NetworkExperimentProfiles_Delete",
        "summary": "Deletes an NetworkExperiment Profile by ProfileName",
        "x-ms-examples": {
          "Deletes an NetworkExperiment Profile by ProfileName": {
            "$ref": "./examples/NetworkExperimentDeleteProfile.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "operationId": "NetworkExperimentProfiles_Get",
        "summary": "Gets an NetworkExperiment Profile by ProfileName",
        "x-ms-examples": {
          "Gets an NetworkExperiment Profile by Profile Id": {
            "$ref": "./examples/NetworkExperimentGetProfile.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "OK. successful operation"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "description": "Updates an NetworkExperimentProfiles",
        "operationId": "NetworkExperimentProfiles_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateModel"
              }
            }
          },
          "description": "The Profile Update Model",
          "required": true
        },
        "summary": "Updates an NetworkExperimentProfiles by NetworkExperimentProfile name",
        "x-ms-examples": {
          "Updates an Experiment": {
            "$ref": "./examples/NetworkExperimentUpdateProfile.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "Created. The request has been fulfilled and a new protection policy has been created."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profile"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "NetworkExperimentProfiles"
        ],
        "operationId": "NetworkExperimentProfiles_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          },
          "description": "An Network Experiment Profile",
          "required": true
        },
        "summary": "Creates an NetworkExperiment Profile",
        "x-ms-examples": {
          "Creates an NetworkExperiment Profile in a Resource Group": {
            "$ref": "./examples/NetworkExperimentCreateProfile.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentList"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Experiments"
        ],
        "operationId": "Experiments_ListByProfile",
        "summary": "Gets a list of Experiments",
        "x-ms-examples": {
          "Gets a list of Experiments": {
            "$ref": "./examples/NetworkExperimentListExperiments.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content. The request has been accepted but the policy was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Experiments"
        ],
        "operationId": "Experiments_Delete",
        "summary": "Deletes an Experiment",
        "x-ms-examples": {
          "Deletes an Experiment": {
            "$ref": "./examples/NetworkExperimentDeleteExperiment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Experiments"
        ],
        "operationId": "Experiments_Get",
        "summary": "Gets an Experiment by ExperimentName",
        "x-ms-examples": {
          "Gets an Experiment by ExperimentName": {
            "$ref": "./examples/NetworkExperimentGetExperiment.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "OK. successful operation"
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Experiments"
        ],
        "description": "Updates an Experiment",
        "operationId": "Experiments_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentUpdateModel"
              }
            }
          },
          "description": "The Experiment Update Model",
          "required": true
        },
        "summary": "Updates an Experiment by Experiment id",
        "x-ms-examples": {
          "Updates an Experiment": {
            "$ref": "./examples/NetworkExperimentUpdateExperiment.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "Created. The request has been fulfilled and a new experiment has been created."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            },
            "description": "Accepted. The request has been accepted for processing and the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Experiments"
        ],
        "operationId": "Experiments_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Experiment"
              }
            }
          },
          "description": "The Experiment resource",
          "required": true
        },
        "summary": "Creates or updates an Experiment",
        "x-ms-examples": {
          "Creates an Experiment": {
            "$ref": "./examples/NetworkExperimentCreateExperiment.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/LatencyScorecard": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          },
          {
            "description": "The end DateTime of the Latency Scorecard in UTC",
            "in": "query",
            "name": "endDateTimeUTC",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "in": "query",
            "name": "country",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The aggregation interval of the Latency Scorecard",
            "in": "query",
            "name": "aggregationInterval",
            "required": true,
            "schema": {
              "enum": [
                "Daily",
                "Weekly",
                "Monthly"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "latencyScorecardAggregationInterval"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LatencyScorecard"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetLatencyScorecards",
        "summary": "Gets a Latency Scorecard for a given Experiment",
        "x-ms-examples": {
          "Gets a Latency Scorecard for a given Experiment": {
            "$ref": "./examples/NetworkExperimentGetLatencyScorecard.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/Experiments/{experimentName}/Timeseries": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          },
          {
            "$ref": "#/components/parameters/ExperimentNameParameter"
          },
          {
            "description": "The start DateTime of the Timeseries in UTC",
            "in": "query",
            "name": "startDateTimeUTC",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The end DateTime of the Timeseries in UTC",
            "in": "query",
            "name": "endDateTimeUTC",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The aggregation interval of the Timeseries",
            "in": "query",
            "name": "aggregationInterval",
            "required": true,
            "schema": {
              "enum": [
                "Hourly",
                "Daily"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "timeseriesAggregationInterval"
            }
          },
          {
            "description": "The type of Timeseries",
            "in": "query",
            "name": "timeseriesType",
            "required": true,
            "schema": {
              "enum": [
                "MeasurementCounts",
                "LatencyP50",
                "LatencyP75",
                "LatencyP95"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "timeseriesType"
            }
          },
          {
            "description": "The specific endpoint",
            "in": "query",
            "name": "endpoint",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "in": "query",
            "name": "country",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Timeseries"
                }
              }
            },
            "description": "successful operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Reports"
        ],
        "operationId": "Reports_GetTimeseries",
        "summary": "Gets a Timeseries for a given Experiment",
        "x-ms-examples": {
          "Gets a Timeseries for a given Experiment": {
            "$ref": "./examples/NetworkExperimentGetTimeseries.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/NetworkExperimentProfiles/{profileName}/PreconfiguredEndpoints": {
      "get": {
        "parameters": [
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ProfileNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreconfiguredEndpointList"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PreconfiguredEndpoints"
        ],
        "operationId": "PreconfiguredEndpoints_List",
        "summary": "Gets a list of Preconfigured Endpoints",
        "x-ms-examples": {
          "Gets a list of Preconfigured Endpoints": {
            "$ref": "./examples/NetworkExperimentGetPreconfiguredEndpoints.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ExperimentNameParameter": {
        "description": "The Experiment identifier associated with the Experiment",
        "in": "path",
        "name": "experimentName",
        "required": true,
        "schema": {
          "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ProfileNameParameter": {
        "description": "The Profile identifier associated with the Tenant and Partner",
        "in": "path",
        "name": "profileName",
        "required": true,
        "schema": {
          "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupNameParameter": {
        "description": "Name of the Resource group within the Azure subscription.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 80,
          "minLength": 1,
          "pattern": "^[a-zA-Z0-9_\\-\\(\\)\\.]*[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Endpoint": {
        "description": "Defines the endpoint properties",
        "properties": {
          "endpoint": {
            "description": "The endpoint URL",
            "type": "string"
          },
          "name": {
            "description": "The name of the endpoint",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates Front Door service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Experiment": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Defines the properties of an Experiment",
        "properties": {
          "name": {
            "description": "The name of the Experiment",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ExperimentProperties",
            "description": "The properties of an Experiment",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ExperimentList": {
        "description": "Defines a list of Experiments. It contains a list of Experiment objects and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of Experiment objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Experiments within a resource group.",
            "items": {
              "$ref": "#/components/schemas/Experiment"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExperimentProperties": {
        "description": "Defines the properties of an experiment",
        "properties": {
          "description": {
            "description": "The description of the details or intents of the Experiment",
            "type": "string"
          },
          "enabledState": {
            "description": "The state of the Experiment",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "state"
            }
          },
          "endpointA": {
            "$ref": "#/components/schemas/Endpoint",
            "description": "The endpoint A of an experiment"
          },
          "endpointB": {
            "$ref": "#/components/schemas/Endpoint",
            "description": "The endpoint B of an experiment"
          },
          "resourceState": {
            "$ref": "#/components/schemas/NetworkExperimentResourceState",
            "description": "Resource status."
          },
          "scriptFileUri": {
            "description": "The uri to the Script used in the Experiment",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The description of Experiment status from the server side",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExperimentUpdateModel": {
        "description": "Defines modifiable attributes of an Experiment",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/ExperimentUpdateProperties",
            "description": "The properties of a Profile",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ExperimentUpdateProperties": {
        "description": "Defines the properties of an experiment",
        "properties": {
          "description": {
            "description": "The description of the intent or details of the Experiment",
            "type": "string"
          },
          "enabledState": {
            "description": "The state of the Experiment",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "state"
            }
          }
        },
        "type": "object"
      },
      "LatencyMetric": {
        "description": "Defines the properties of a latency metric used in the latency scorecard",
        "properties": {
          "aCLower95CI": {
            "description": "The lower end of the 95% confidence interval for endpoint A",
            "readOnly": true,
            "type": "number"
          },
          "aHUpper95CI": {
            "description": "The upper end of the 95% confidence interval for endpoint A",
            "readOnly": true,
            "type": "number"
          },
          "aValue": {
            "description": "The metric value of the A endpoint",
            "readOnly": true,
            "type": "number"
          },
          "bCLower95CI": {
            "description": "The lower end of the 95% confidence interval for endpoint B",
            "readOnly": true,
            "type": "number"
          },
          "bUpper95CI": {
            "description": "The upper end of the 95% confidence interval for endpoint B",
            "readOnly": true,
            "type": "number"
          },
          "bValue": {
            "description": "The metric value of the B endpoint",
            "readOnly": true,
            "type": "number"
          },
          "delta": {
            "description": "The difference in value between endpoint A and B",
            "readOnly": true,
            "type": "number"
          },
          "deltaPercent": {
            "description": "The percent difference between endpoint A and B",
            "readOnly": true,
            "type": "number"
          },
          "endDateTimeUTC": {
            "description": "The end time of the Latency Scorecard in UTC",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the Latency Metric",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LatencyScorecard": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Defines the LatencyScorecard",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LatencyScorecardProperties",
            "description": "The properties of a latency scorecard",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "LatencyScorecardProperties": {
        "description": "Defines a the properties of a Latency Scorecard",
        "properties": {
          "country": {
            "description": "The country associated with the Latency Scorecard. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the Latency Scorecard",
            "readOnly": true,
            "type": "string"
          },
          "endDateTimeUTC": {
            "description": "The end time of the Latency Scorecard in UTC",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endpointA": {
            "description": "The A endpoint in the scorecard",
            "readOnly": true,
            "type": "string"
          },
          "endpointB": {
            "description": "The B endpoint in the scorecard",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The unique identifier of the Latency Scorecard",
            "readOnly": true,
            "type": "string"
          },
          "latencyMetrics": {
            "description": "The latency metrics of the Latency Scorecard",
            "items": {
              "$ref": "#/components/schemas/LatencyMetric"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the Latency Scorecard",
            "readOnly": true,
            "type": "string"
          },
          "startDateTimeUTC": {
            "description": "The start time of the Latency Scorecard in UTC",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkExperimentResourceState": {
        "description": "Defines the server side resource status",
        "enum": [
          "Creating",
          "Enabling",
          "Enabled",
          "Disabling",
          "Disabled",
          "Deleting"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "NetworkExperimentResourceState"
        }
      },
      "PreconfiguredEndpoint": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Defines the properties of a preconfigured endpoint",
        "properties": {
          "name": {
            "description": "The name of the endpoint",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PreconfiguredEndpointProperties",
            "description": "The properties of a preconfiguredEndpoint",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PreconfiguredEndpointList": {
        "description": "Defines a list of preconfigured endpoints.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of PreconfiguredEndpoints if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of PreconfiguredEndpoints supported by NetworkExperiment.",
            "items": {
              "$ref": "#/components/schemas/PreconfiguredEndpoint"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PreconfiguredEndpointProperties": {
        "description": "Defines the properties of a preconfigured endpoint",
        "properties": {
          "backend": {
            "description": "The preconfigured endpoint backend",
            "type": "string"
          },
          "description": {
            "description": "The description of the endpoint",
            "type": "string"
          },
          "endpoint": {
            "description": "The endpoint that is preconfigured",
            "type": "string"
          },
          "endpointType": {
            "description": "The type of endpoint",
            "enum": [
              "AFD",
              "AzureRegion",
              "CDN",
              "ATM"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "endpointType"
            }
          }
        },
        "type": "object"
      },
      "Profile": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Defines an Network Experiment Profile and lists of Experiments",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the Profile",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ProfileProperties",
            "description": "The properties of a Profile",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProfileList": {
        "description": "Defines a list of Profiles. It contains a list of Profile objects and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of Profile objects if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Profiles within a resource group.",
            "items": {
              "$ref": "#/components/schemas/Profile"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProfileProperties": {
        "description": "Defines the properties of an experiment",
        "properties": {
          "enabledState": {
            "description": "The state of the Experiment",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "state"
            }
          },
          "resourceState": {
            "$ref": "#/components/schemas/NetworkExperimentResourceState",
            "description": "Resource status."
          }
        },
        "type": "object"
      },
      "ProfileUpdateModel": {
        "description": "Defines modifiable attributes of a Profile",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/ProfileUpdateProperties",
            "description": "The properties of a Profile",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProfileUpdateProperties": {
        "description": "Defines the properties of an experiment",
        "properties": {
          "enabledState": {
            "description": "The enabled state of the Profile",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "state"
            }
          }
        },
        "type": "object"
      },
      "Timeseries": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Defines the Timeseries",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TimeseriesProperties",
            "description": "The properties of a Timeseries",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TimeseriesDataPoint": {
        "description": "Defines a timeseries datapoint used in a timeseries",
        "properties": {
          "dateTimeUTC": {
            "description": "The DateTime of the Timeseries data point in UTC",
            "type": "string"
          },
          "value": {
            "description": "The Value of the Timeseries data point",
            "type": "number"
          }
        },
        "type": "object"
      },
      "TimeseriesProperties": {
        "description": "Defines the properties of a timeseries",
        "properties": {
          "aggregationInterval": {
            "description": "The aggregation interval of the Timeseries",
            "enum": [
              "Hourly",
              "Daily"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "aggregationInterval"
            }
          },
          "country": {
            "description": "The country associated with the Timeseries. Values are country ISO codes as specified here- https://www.iso.org/iso-3166-country-codes.html",
            "type": "string"
          },
          "endDateTimeUTC": {
            "description": "The end DateTime of the Timeseries in UTC",
            "type": "string"
          },
          "endpoint": {
            "description": "The endpoint associated with the Timeseries data point",
            "type": "string"
          },
          "startDateTimeUTC": {
            "description": "The start DateTime of the Timeseries in UTC",
            "type": "string"
          },
          "timeseriesData": {
            "description": "The set of data points for the timeseries",
            "items": {
              "$ref": "#/components/schemas/TimeseriesDataPoint"
            },
            "type": "array"
          },
          "timeseriesType": {
            "description": "The type of Timeseries",
            "enum": [
              "MeasurementCounts",
              "LatencyP50",
              "LatencyP75",
              "LatencyP95"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "timeseriesType"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "tags": [
    {
      "description": "The configuration of Network Experiment profiles",
      "name": "NetworkExperimentProfiles"
    },
    {
      "description": "The configuration of the Network Experiment experiments",
      "name": "Experiments"
    },
    {
      "description": "The preconfigured endpoints and details",
      "name": "PreconfiguredEndpoints"
    },
    {
      "description": "The analysis and results of the experiments",
      "name": "Reports"
    }
  ]
}