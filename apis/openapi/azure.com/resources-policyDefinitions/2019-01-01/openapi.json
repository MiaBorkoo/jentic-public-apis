{
  "openapi": "3.0.0",
  "info": {
    "description": "To manage and control access to your resources, you can define customized policies and assign them at a scope.",
    "title": "PolicyClient",
    "version": "2019-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Authorization/stable/2019-01-01/policyDefinitions.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Authorization/policyDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinitionListResult"
                }
              }
            },
            "description": "OK - Returns an array of built-in policy definitions."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves a list of all the built-in policy definitions.",
        "operationId": "PolicyDefinitions_ListBuiltIn",
        "summary": "Retrieve built-in policy definitions",
        "x-ms-examples": {
          "List built-in policy definitions": {
            "$ref": "./examples/listBuiltInPolicyDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}": {
      "get": {
        "parameters": [
          {
            "description": "The name of the built-in policy definition to get.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description": "OK - Returns information about the built-in policy definition."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves the built-in policy definition with the given name.",
        "operationId": "PolicyDefinitions_GetBuiltIn",
        "summary": "Retrieves a built-in policy definition.",
        "x-ms-examples": {
          "Retrieve a built-in policy definition": {
            "$ref": "./examples/getBuiltinPolicyDefinition.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ManagementGroupIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinitionListResult"
                }
              }
            },
            "description": "OK - Returns an array of policy definitions."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves a list of all the policy definitions in a given management group.",
        "operationId": "PolicyDefinitions_ListByManagementGroup",
        "summary": "Retrieve policy definitions in a management group",
        "x-ms-examples": {
          "List policy definitions by management group": {
            "$ref": "./examples/listPolicyDefinitionsByManagementGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementgroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the policy definition to delete.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ManagementGroupIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation deletes the policy definition in the given management group with the given name.",
        "operationId": "PolicyDefinitions_DeleteAtManagementGroup",
        "summary": "Deletes a policy definition in a management group.",
        "x-ms-examples": {
          "Delete a policy definition at management group level": {
            "$ref": "./examples/deletePolicyDefinitionAtManagementGroup.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the policy definition to get.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ManagementGroupIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description": "OK - Returns information about the policy definition."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves the policy definition in the given management group with the given name.",
        "operationId": "PolicyDefinitions_GetAtManagementGroup",
        "summary": "Retrieve a policy definition in a management group.",
        "x-ms-examples": {
          "Retrieve a policy definition at management group level": {
            "$ref": "./examples/getPolicyDefinitionAtManagementGroup.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the policy definition to create.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/ManagementGroupIdParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description": "Created - Returns information about the policy definition."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation creates or updates a policy definition in the given management group with the given name.",
        "operationId": "PolicyDefinitions_CreateOrUpdateAtManagementGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyDefinition"
              }
            }
          },
          "description": "The policy definition properties.",
          "required": true
        },
        "summary": "Creates or updates a policy definition in a management group.",
        "x-ms-examples": {
          "Create or update a policy definition at management group level": {
            "$ref": "./examples/createOrUpdatePolicyDefinitionAtManagementGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinitionListResult"
                }
              }
            },
            "description": "OK - Returns an array of policy definitions."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves a list of all the policy definitions in a given subscription.",
        "operationId": "PolicyDefinitions_List",
        "summary": "Retrieves policy definitions in a subscription",
        "x-ms-examples": {
          "List policy definitions by subscription": {
            "$ref": "./examples/listPolicyDefinitions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the policy definition to delete.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation deletes the policy definition in the given subscription with the given name.",
        "operationId": "PolicyDefinitions_Delete",
        "summary": "Deletes a policy definition in a subscription.",
        "x-ms-examples": {
          "Delete a policy definition": {
            "$ref": "./examples/deletePolicyDefinition.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the policy definition to get.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description": "OK - Returns information about the policy definition."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation retrieves the policy definition in the given subscription with the given name.",
        "operationId": "PolicyDefinitions_Get",
        "summary": "Retrieves a policy definition in a subscription.",
        "x-ms-examples": {
          "Retrieve a policy definition": {
            "$ref": "./examples/getPolicyDefinition.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the policy definition to create.",
            "in": "path",
            "name": "policyDefinitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyDefinition"
                }
              }
            },
            "description": "Created - Returns information about the policy definition."
          }
        },
        "tags": [
          "PolicyDefinitions"
        ],
        "description": "This operation creates or updates a policy definition in the given subscription with the given name.",
        "operationId": "PolicyDefinitions_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyDefinition"
              }
            }
          },
          "description": "The policy definition properties.",
          "required": true
        },
        "summary": "Creates or updates a policy definition in a subscription.",
        "x-ms-examples": {
          "Create or update a policy definition": {
            "$ref": "./examples/createOrUpdatePolicyDefinition.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the operation.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ManagementGroupIdParameter": {
        "description": "The ID of the management group.",
        "in": "path",
        "name": "managementGroupId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The ID of the target subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "PolicyDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PolicyDefinition"
            }
          }
        },
        "description": "The policy definition properties.",
        "required": true
      }
    },
    "schemas": {
      "PolicyDefinition": {
        "description": "The policy definition.",
        "properties": {
          "id": {
            "description": "The ID of the policy definition.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the policy definition.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/PolicyDefinitionProperties",
            "description": "The policy definition properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The type of the resource (Microsoft.Authorization/policyDefinitions).",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "PolicyDefinitionListResult": {
        "description": "List of policy definitions.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "An array of policy definitions.",
            "items": {
              "$ref": "#/components/schemas/PolicyDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PolicyDefinitionProperties": {
        "description": "The policy definition properties.",
        "properties": {
          "parameters": {
            "description": "Required if a parameter is used in policy rule.",
            "type": "object"
          },
          "description": {
            "description": "The policy definition description.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the policy definition.",
            "type": "string"
          },
          "metadata": {
            "description": "The policy definition metadata.",
            "type": "object"
          },
          "mode": {
            "description": "The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.",
            "type": "string"
          },
          "policyRule": {
            "description": "The policy rule.",
            "type": "object"
          },
          "policyType": {
            "description": "The type of policy definition. Possible values are NotSpecified, BuiltIn, and Custom.",
            "enum": [
              "NotSpecified",
              "BuiltIn",
              "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "policyType"
            }
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}