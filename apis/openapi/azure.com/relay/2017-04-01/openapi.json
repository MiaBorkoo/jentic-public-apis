{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these API to manage Azure Relay resources through Azure Resource Manager.",
    "title": "Relay API",
    "version": "2017-04-01",
    "x-ms-code-generation-settings": {
      "name": "RelayManagementClient"
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/relay/resource-manager/Microsoft.Relay/stable/2017-04-01/relay.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Relay/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all available Relay REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "RelayOperationsList": {
            "$ref": "./examples/RelayOperations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Relay/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameAvailabilityResult"
                }
              }
            },
            "description": "Check availability returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Check the specified namespace name availability.",
        "operationId": "Namespaces_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameAvailability"
              }
            }
          },
          "description": "Parameters to check availability of the specified namespace name.",
          "required": true
        },
        "x-ms-examples": {
          "RelayCheckNameAvailability": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceCheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Relay/namespaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespaceListResult"
                }
              }
            },
            "description": "Namespaces returned successfully"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Lists all the available namespaces within the subscription regardless of the resourceGroups.",
        "operationId": "Namespaces_List",
        "x-ms-examples": {
          "RelayNameSpaceListBySubscription": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespaceListResult"
                }
              }
            },
            "description": "Namespaces by resource group returned successfully"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Lists all the available namespaces within the ResourceGroup.",
        "operationId": "Namespaces_ListByResourceGroup",
        "x-ms-examples": {
          "RelayNameSpaceListByResourceGroup": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Namespace delete request succeeded."
          },
          "202": {
            "description": "Namespace delete request has been accepted for processing and the operation will complete asynchronously."
          },
          "204": {
            "description": "Namespace delete request has been accepted, but the namespace was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes an existing namespace. This operation also removes all associated resources under the namespace.",
        "operationId": "Namespaces_Delete",
        "x-ms-examples": {
          "RelayNameSpaceDelete": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description": "Namespace description returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Returns the description for the specified namespace.",
        "operationId": "Namespaces_Get",
        "x-ms-examples": {
          "RelayNameSpaceGet": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description": "Namespace successfuly updated."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description": "Namespace update request accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates a namespace. Once created, this namespace's resource manifest is immutable. This operation is idempotent.",
        "operationId": "Namespaces_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayUpdateParameters"
              }
            }
          },
          "description": "Parameters for updating a namespace resource.",
          "required": true
        },
        "x-ms-examples": {
          "RelayNameSpaceUpdate": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description": "Namespace create request succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayNamespace"
                }
              }
            },
            "description": "Namespace create request accepted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Create Azure Relay namespace.",
        "operationId": "Namespaces_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayNamespace"
              }
            }
          },
          "description": "Parameters supplied to create a namespace resource.",
          "required": true
        },
        "x-ms-examples": {
          "RelayNamespaceCreate": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            },
            "description": "Namespace authorization rule returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Authorization rules for a namespace.",
        "operationId": "Namespaces_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleListAll": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAutorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete namespace authorization rule succeeded."
          },
          "204": {
            "description": "No content. The request has been accepted but the namespace authorization rule was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Deletes a namespace authorization rule.",
        "operationId": "Namespaces_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleDelete": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAutorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "Namespace Authorization rule returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Authorization rule for a namespace by name.",
        "operationId": "Namespaces_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayNameSpaceAutorizationRuleGet": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAutorizationRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "Request to create namespace authorization rule succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Creates or updates an authorization rule for a namespace.",
        "operationId": "Namespaces_CreateOrUpdateAuthorizationRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRule"
              }
            }
          },
          "description": "The authorization rule parameters.",
          "required": true
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleCreate": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Primary and secondary connection strings to the namespace.",
        "operationId": "Namespaces_ListKeys",
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleListKey": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "Namespaces"
        ],
        "description": "Regenerates the primary or secondary connection strings to the namespace.",
        "operationId": "Namespaces_RegenerateKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateAccessKeyParameters"
              }
            }
          },
          "description": "Parameters supplied to regenerate authorization rule.",
          "required": true
        },
        "x-ms-examples": {
          "RelayNameSpaceAuthorizationRuleRegenrateKey": {
            "$ref": "./examples/NameSpaces/RelayNameSpaceAuthorizationRuleRegenrateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridConnectionListResult"
                }
              }
            },
            "description": "Request to retrieve hybrid connections by namespace succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Lists the hybrid connection within the namespace.",
        "operationId": "HybridConnections_ListByNamespace",
        "x-ms-examples": {
          "RelayHybridConnectionListAll": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete hybrid connection succeeded."
          },
          "204": {
            "description": "No content. The request has been accepted but the hybrid connection was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Deletes a hybrid connection.",
        "operationId": "HybridConnections_Delete",
        "x-ms-examples": {
          "RelayHybridconnectionDelete": {
            "$ref": "./examples/HybridConnection/RelayHybridconnectionDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridConnection"
                }
              }
            },
            "description": "Successfully retrieved description for the hybrid connection."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Returns the description for the specified hybrid connection.",
        "operationId": "HybridConnections_Get",
        "x-ms-examples": {
          "RelayHybridConnectionGet": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridConnection"
                }
              }
            },
            "description": "Request to create hybrid connections succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Creates or updates a service hybrid connection. This operation is idempotent.",
        "operationId": "HybridConnections_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HybridConnection"
              }
            }
          },
          "description": "Parameters supplied to create a hybrid connection.",
          "required": true
        },
        "x-ms-examples": {
          "RelayHybridConnectionCreate": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            },
            "description": "Authorization rules successfully returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Authorization rules for a hybrid connection.",
        "operationId": "HybridConnections_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleListAll": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAutorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Hybrid connection authorization rule deleted."
          },
          "204": {
            "description": "Authorization rule does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Deletes a hybrid connection authorization rule.",
        "operationId": "HybridConnections_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleDelete": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAutorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "Hybrid connection authorization rule returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Hybrid connection authorization rule for a hybrid connection by name.",
        "operationId": "HybridConnections_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayHybridConnectionAutorizationRuleGet": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAutorizationRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "Hybrid connection authorization rule created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Creates or updates an authorization rule for a hybrid connection.",
        "operationId": "HybridConnections_CreateOrUpdateAuthorizationRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRule"
              }
            }
          },
          "description": "The authorization rule parameters.",
          "required": true
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleCreate": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Request to retirve connection strings to the hybrid connection succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Primary and secondary connection strings to the hybrid connection.",
        "operationId": "HybridConnections_ListKeys",
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleListKey": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/hybridConnections/{hybridConnectionName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/hybridConnectionNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Request to regenerate connection strings to hybrid connection succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "HybridConnections"
        ],
        "description": "Regenerates the primary or secondary connection strings to the hybrid connection.",
        "operationId": "HybridConnections_RegenerateKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateAccessKeyParameters"
              }
            }
          },
          "description": "Parameters supplied to regenerate authorization rule.",
          "required": true
        },
        "x-ms-examples": {
          "RelayHybridConnectionAuthorizationRuleRegenrateKey": {
            "$ref": "./examples/HybridConnection/RelayHybridConnectionAuthorizationRuleRegenrateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WcfRelaysListResult"
                }
              }
            },
            "description": "WCF relays returned successfully."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Lists the WCF relays within the namespace.",
        "operationId": "WCFRelays_ListByNamespace",
        "x-ms-examples": {
          "RelayListAll": {
            "$ref": "./examples/Relay/RelayListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "WCF relay deleted."
          },
          "204": {
            "description": "No content."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Deletes a WCF relay.",
        "operationId": "WCFRelays_Delete",
        "x-ms-examples": {
          "RelayDelete": {
            "$ref": "./examples/Relay/RelayDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WcfRelay"
                }
              }
            },
            "description": "Successfully retrieved WCF relay description."
          },
          "204": {
            "description": "WCF relay not found"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Returns the description for the specified WCF relay.",
        "operationId": "WCFRelays_Get",
        "x-ms-examples": {
          "RelayGet": {
            "$ref": "./examples/Relay/RelayGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WcfRelay"
                }
              }
            },
            "description": "Request to create WCF relay succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Creates or updates a WCF relay. This operation is idempotent.",
        "operationId": "WCFRelays_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WcfRelay"
              }
            }
          },
          "description": "Parameters supplied to create a WCF relay.",
          "required": true
        },
        "x-ms-examples": {
          "RelayCreate": {
            "$ref": "./examples/Relay/RelayCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRuleListResult"
                }
              }
            },
            "description": "Authorization rules successfully returned."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Authorization rules for a WCF relay.",
        "operationId": "WCFRelays_ListAuthorizationRules",
        "x-ms-examples": {
          "RelayAutorizationRuleListAll": {
            "$ref": "./examples/Relay/RelayAutorizationRuleListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request to delete WCF relay authorization rule succeeded."
          },
          "204": {
            "description": "Request accepted butthe authorization rule does not exist."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Deletes a WCF relay authorization rule.",
        "operationId": "WCFRelays_DeleteAuthorizationRule",
        "x-ms-examples": {
          "RelayAutorizationRuleDelete": {
            "$ref": "./examples/Relay/RelayAutorizationRuleDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "Request for WCF relay authorization rule succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Get authorizationRule for a WCF relay by name.",
        "operationId": "WCFRelays_GetAuthorizationRule",
        "x-ms-examples": {
          "RelayAutorizationRuleGet": {
            "$ref": "./examples/Relay/RelayAutorizationRuleGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRule"
                }
              }
            },
            "description": "WCF relay authorization rule created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Creates or updates an authorization rule for a WCF relay.",
        "operationId": "WCFRelays_CreateOrUpdateAuthorizationRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRule"
              }
            }
          },
          "description": "The authorization rule parameters.",
          "required": true
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleCreate": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Primary and secondary connection strings to the WCF relay.",
        "operationId": "WCFRelays_ListKeys",
        "x-ms-examples": {
          "RelayAuthorizationRuleListKey.json": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleListKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Relay/namespaces/{namespaceName}/wcfRelays/{relayName}/authorizationRules/{authorizationRuleName}/regenerateKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/namespaceNameParameter"
          },
          {
            "$ref": "#/components/parameters/relayNameParameter"
          },
          {
            "$ref": "#/components/parameters/authorizationRuleNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessKeys"
                }
              }
            },
            "description": "Successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Relay error response describing why the operation failed."
          }
        },
        "tags": [
          "WCFRelays"
        ],
        "description": "Regenerates the primary or secondary connection strings to the WCF relay.",
        "operationId": "WCFRelays_RegenerateKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateAccessKeyParameters"
              }
            }
          },
          "description": "Parameters supplied to regenerate authorization rule.",
          "required": true
        },
        "x-ms-examples": {
          "RelayAuthorizationRuleRegenrateKey.json": {
            "$ref": "./examples/Relay/RelayAuthorizationRuleRegenrateKey.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "Subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "authorizationRuleNameParameter": {
        "description": "The authorization rule name.",
        "in": "path",
        "name": "authorizationRuleName",
        "required": true,
        "schema": {
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "hybridConnectionNameParameter": {
        "description": "The hybrid connection name.",
        "in": "path",
        "name": "hybridConnectionName",
        "required": true,
        "schema": {
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "namespaceNameParameter": {
        "description": "The namespace name",
        "in": "path",
        "name": "namespaceName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 6,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "relayNameParameter": {
        "description": "The relay name.",
        "in": "path",
        "name": "relayName",
        "required": true,
        "schema": {
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Name of the Resource group within the Azure subscription.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "AuthorizationRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AuthorizationRule"
            }
          }
        },
        "description": "The authorization rule parameters.",
        "required": true
      },
      "RegenerateAccessKeyParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegenerateAccessKeyParameters"
            }
          }
        },
        "description": "Parameters supplied to regenerate authorization rule.",
        "required": true
      }
    },
    "schemas": {
      "AccessKeys": {
        "description": "Namespace/Relay Connection String",
        "properties": {
          "keyName": {
            "description": "A string that describes the authorization rule.",
            "type": "string"
          },
          "primaryConnectionString": {
            "description": "Primary connection string of the created namespace authorization rule.",
            "type": "string"
          },
          "primaryKey": {
            "description": "A base64-encoded 256-bit primary key for signing and validating the SAS token.",
            "type": "string"
          },
          "secondaryConnectionString": {
            "description": "Secondary connection string of the created namespace authorization rule.",
            "type": "string"
          },
          "secondaryKey": {
            "description": "A base64-encoded 256-bit secondary key for signing and validating the SAS token.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AuthorizationRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Description of a namespace authorization rule.",
        "properties": {
          "properties": {
            "description": "Authorization rule properties.",
            "properties": {
              "rights": {
                "description": "The rights associated with the rule.",
                "items": {
                  "enum": [
                    "Manage",
                    "Send",
                    "Listen"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": false,
                    "name": "AccessRights"
                  }
                },
                "type": "array",
                "uniqueItems": true
              }
            },
            "required": [
              "rights"
            ],
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AuthorizationRuleListResult": {
        "description": "The response from the list namespace operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if value contains incomplete list of authorization rules.",
            "type": "string"
          },
          "value": {
            "description": "Result of the list authorization rules operation.",
            "items": {
              "$ref": "#/components/schemas/AuthorizationRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CheckNameAvailability": {
        "description": "Description of the check name availability request properties.",
        "properties": {
          "name": {
            "description": "The namespace name to check for availability. The namespace name can contain only letters, numbers, and hyphens. The namespace must start with a letter, and it must end with a letter or number.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CheckNameAvailabilityResult": {
        "description": "Description of the check name availability request properties.",
        "properties": {
          "message": {
            "description": "The detailed info regarding the reason associated with the namespace.",
            "readOnly": true,
            "type": "string"
          },
          "nameAvailable": {
            "description": "Value indicating namespace is available. Returns true if the namespace is available; otherwise, false.",
            "type": "boolean"
          },
          "reason": {
            "$ref": "#/components/schemas/UnavailableReason",
            "description": "The reason for unavailability of a namespace."
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error reponse indicates Relay service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HybridConnection": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Description of hybrid connection resource.",
        "properties": {
          "properties": {
            "description": "Properties of the HybridConnection.",
            "properties": {
              "createdAt": {
                "description": "The time the hybrid connection was created.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "listenerCount": {
                "description": "The number of listeners for this hybrid connection. Note that min : 1 and max:25 are supported.",
                "format": "int32",
                "maximum": 25,
                "minimum": 0,
                "readOnly": true,
                "type": "integer"
              },
              "requiresClientAuthorization": {
                "description": "Returns true if client authorization is needed for this hybrid connection; otherwise, false.",
                "type": "boolean"
              },
              "updatedAt": {
                "description": "The time the namespace was updated.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userMetadata": {
                "description": "The usermetadata is a placeholder to store user-defined string data for the hybrid connection endpoint. For example, it can be used to store descriptive data, such as a list of teams and their contact information. Also, user-defined configuration settings can be stored.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "HybridConnectionListResult": {
        "description": "The response of the list hybrid connection operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if value contains incomplete list hybrid connection operation.",
            "type": "string"
          },
          "value": {
            "description": "Result of the list hybrid connections.",
            "items": {
              "$ref": "#/components/schemas/HybridConnection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "A Relay REST API operation.",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Relay.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Invoice, etc.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Relay operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of Relay operations supported by resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "RegenerateAccessKeyParameters": {
        "description": "Parameters supplied to the regenerate authorization rule operation, specifies which key neeeds to be reset.",
        "properties": {
          "key": {
            "description": "Optional. If the key value is provided, this is set to key type, or autogenerated key value set for key type.",
            "type": "string"
          },
          "keyType": {
            "description": "The access key to regenerate.",
            "enum": [
              "PrimaryKey",
              "SecondaryKey"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "KeyType"
            }
          }
        },
        "required": [
          "keyType"
        ],
        "type": "object"
      },
      "RelayNamespace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "Description of a namespace resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RelayNamespaceProperties",
            "description": "Description of Relay namespace",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "SKU of the namespace."
          }
        },
        "type": "object"
      },
      "RelayNamespaceListResult": {
        "description": "The response from the list namespace operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if value contains incomplete list of namespaces.",
            "type": "string"
          },
          "value": {
            "description": "Result of the list namespace operation.",
            "items": {
              "$ref": "#/components/schemas/RelayNamespace"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RelayNamespaceProperties": {
        "description": "Properties of the namespace.",
        "properties": {
          "createdAt": {
            "description": "The time the namespace was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metricId": {
            "description": "Identifier for Azure Insights metrics.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "enum": [
              "Created",
              "Succeeded",
              "Deleted",
              "Failed",
              "Updating",
              "Unknown"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "provisioningStateEnum"
            }
          },
          "serviceBusEndpoint": {
            "description": "Endpoint you can use to perform Service Bus operations.",
            "readOnly": true,
            "type": "string"
          },
          "updatedAt": {
            "description": "The time the namespace was updated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RelayUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceNamespacePatch"
          }
        ],
        "description": "Description of a namespace resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RelayNamespaceProperties",
            "description": "Description of Relay namespace.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "SKU of the namespace."
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The resource definition.",
        "properties": {
          "id": {
            "description": "Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceNamespacePatch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Definition of resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Sku": {
        "description": "SKU of the namespace.",
        "properties": {
          "name": {
            "description": "Name of this SKU.",
            "enum": [
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuName"
            }
          },
          "tier": {
            "description": "The tier of this SKU.",
            "enum": [
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SkuTier"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Definition of resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "location": {
            "description": "Resource location.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "UnavailableReason": {
        "description": "Specifies the reason for the unavailability of the service.",
        "enum": [
          "None",
          "InvalidName",
          "SubscriptionIsDisabled",
          "NameInUse",
          "NameInLockdown",
          "TooManyNamespaceInCurrentSubscription"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "UnavailableReason"
        }
      },
      "WcfRelay": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Description of the WCF relay resource.",
        "properties": {
          "properties": {
            "description": "Properties of the WCF relay.",
            "properties": {
              "createdAt": {
                "description": "The time the WCF relay was created.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "isDynamic": {
                "description": "Returns true if the relay is dynamic; otherwise, false.",
                "readOnly": true,
                "type": "boolean"
              },
              "listenerCount": {
                "description": "The number of listeners for this relay. Note that min :1 and max:25 are supported.",
                "format": "int32",
                "maximum": 25,
                "minimum": 0,
                "readOnly": true,
                "type": "integer"
              },
              "relayType": {
                "description": "WCF relay type.",
                "enum": [
                  "NetTcp",
                  "Http"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "Relaytype"
                }
              },
              "requiresClientAuthorization": {
                "description": "Returns true if client authorization is needed for this relay; otherwise, false.",
                "type": "boolean"
              },
              "requiresTransportSecurity": {
                "description": "Returns true if transport security is needed for this relay; otherwise, false.",
                "type": "boolean"
              },
              "updatedAt": {
                "description": "The time the namespace was updated.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "userMetadata": {
                "description": "The usermetadata is a placeholder to store user-defined string data for the WCF Relay endpoint. For example, it can be used to store descriptive data, such as list of teams and their contact information. Also, user-defined configuration settings can be stored.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WcfRelaysListResult": {
        "description": "The response of the list WCF relay operation.",
        "properties": {
          "nextLink": {
            "description": "Link to the next set of results. Not empty if value contains incomplete list of WCF relays.",
            "type": "string"
          },
          "value": {
            "description": "Result of the list WCF relay operation.",
            "items": {
              "$ref": "#/components/schemas/WcfRelay"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}