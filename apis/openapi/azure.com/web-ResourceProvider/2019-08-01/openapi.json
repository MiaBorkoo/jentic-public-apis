{
  "openapi": "3.0.0",
  "info": {
    "title": " API Client",
    "version": "2019-08-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/web/resource-manager/Microsoft.Web/stable/2019-08-01/ResourceProvider.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Web/publishingUsers/web": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/User"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Gets publishing user",
        "operationId": "GetPublishingUser",
        "summary": "Gets publishing user"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/User"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Updates publishing user",
        "operationId": "UpdatePublishingUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./CommonDefinitions.json#/definitions/User"
              }
            }
          },
          "description": "Details of publishing user",
          "required": true
        },
        "summary": "Updates publishing user"
      }
    },
    "/providers/Microsoft.Web/sourcecontrols": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControlCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Gets the source controls available for Azure websites.",
        "operationId": "ListSourceControls",
        "summary": "Gets the source controls available for Azure websites.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Web/sourcecontrols/{sourceControlType}": {
      "get": {
        "parameters": [
          {
            "description": "Type of source control",
            "in": "path",
            "name": "sourceControlType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControl"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Gets source control token",
        "operationId": "GetSourceControl",
        "summary": "Gets source control token"
      },
      "put": {
        "parameters": [
          {
            "description": "Type of source control",
            "in": "path",
            "name": "sourceControlType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourceControl"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Updates source control token",
        "operationId": "UpdateSourceControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SourceControl"
              }
            }
          },
          "description": "Source control token information",
          "required": true
        },
        "summary": "Updates source control token"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/billingMeters": {
      "get": {
        "parameters": [
          {
            "description": "Azure Location of billable resource",
            "in": "query",
            "name": "billingLocation",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "App Service OS type meters used for",
            "in": "query",
            "name": "osType",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingMeterCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Gets a list of meters for a given location.",
        "operationId": "ListBillingMeters",
        "summary": "Gets a list of meters for a given location.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/checknameavailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNameAvailability"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Check if a resource name is available.",
        "operationId": "CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceNameAvailabilityRequest"
              }
            }
          },
          "description": "Name availability request.",
          "required": true
        },
        "summary": "Check if a resource name is available."
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/deploymentLocations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentLocations"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Gets list of available geo regions plus ministamps",
        "operationId": "GetSubscriptionDeploymentLocations",
        "summary": "Gets list of available geo regions plus ministamps"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/geoRegions": {
      "get": {
        "parameters": [
          {
            "description": "Name of SKU used to filter the regions.",
            "in": "query",
            "name": "sku",
            "schema": {
              "enum": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium",
                "Dynamic",
                "Isolated",
                "PremiumV2",
                "ElasticPremium",
                "ElasticIsolated"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuName"
            }
          },
          {
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux workers.",
            "in": "query",
            "name": "linuxWorkersEnabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify <code>true</code> if you want to filter to only regions that support Xenon workers.",
            "in": "query",
            "name": "xenonWorkersEnabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify <code>true</code> if you want to filter to only regions that support Linux Consumption Workers.",
            "in": "query",
            "name": "linuxDynamicWorkersEnabled",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeoRegionCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Get a list of available geographical regions.",
        "operationId": "ListGeoRegions",
        "summary": "Get a list of available geographical regions.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/listSitesAssignedToHostName": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/IdentifierCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "List all apps that are assigned to a hostname.",
        "operationId": "ListSiteIdentifiersAssignedToHostName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./CommonDefinitions.json#/definitions/NameIdentifier"
              }
            }
          },
          "description": "Hostname information.",
          "required": true
        },
        "summary": "List all apps that are assigned to a hostname.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/premieraddonoffers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOnOfferCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "List all premier add-on offers.",
        "operationId": "ListPremierAddOnOffers",
        "summary": "List all premier add-on offers.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/skus": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkuInfos"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "List all SKUs.",
        "operationId": "ListSkus",
        "summary": "List all SKUs."
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/verifyHostingEnvironmentVnet": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VnetValidationFailureDetails"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "operationId": "VerifyHostingEnvironmentVnet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VnetParameters"
              }
            }
          },
          "description": "VNET information",
          "required": true
        },
        "summary": "Verifies if this VNET is compatible with an App Service Environment by analyzing the Network Security Group rules.",
        "x-ms-examples": {
          "VerifyHostingEnvironmentVnet": {
            "$ref": "./examples/VerifyHostingEnvironmentVnet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/moveResources": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Move resources between resource groups.",
        "operationId": "Move",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmMoveResourceEnvelope"
              }
            }
          },
          "description": "Object that represents the resource to move.",
          "required": true
        },
        "summary": "Move resources between resource groups."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResponse"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Validate if a resource can be created.",
        "operationId": "Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateRequest"
              }
            }
          },
          "description": "Request with the resources to validate.",
          "required": true
        },
        "summary": "Validate if a resource can be created."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/validateMoveResources": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "description": "Validate whether a resource can be moved.",
        "operationId": "ValidateMove",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmMoveResourceEnvelope"
              }
            }
          },
          "description": "Object that represents the resource to move.",
          "required": true
        },
        "summary": "Validate whether a resource can be moved."
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "API Version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resourceGroupNameParameter": {
        "description": "Name of the resource group to which the resource belongs.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "CsmMoveResourceEnvelope": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CsmMoveResourceEnvelope"
            }
          }
        },
        "description": "Object that represents the resource to move.",
        "required": true
      }
    },
    "schemas": {
      "BillingMeter": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "App Service billing entity that contains information about meter which the Azure billing system utilizes to charge users for services.",
        "properties": {
          "properties": {
            "description": "BillingMeter resource specific properties",
            "properties": {
              "billingLocation": {
                "description": "Azure Location of billable resource",
                "type": "string"
              },
              "friendlyName": {
                "description": "Friendly name of the meter",
                "type": "string"
              },
              "meterId": {
                "description": "Meter GUID onboarded in Commerce",
                "type": "string"
              },
              "osType": {
                "description": "App Service OS type meter used for",
                "type": "string"
              },
              "resourceType": {
                "description": "App Service ResourceType meter used for",
                "type": "string"
              },
              "shortName": {
                "description": "Short Name from App Service Azure pricing Page",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BillingMeterCollection": {
        "description": "Collection of Billing Meters",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/BillingMeter"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "CsmMoveResourceEnvelope": {
        "description": "Object with a list of the resources that need to be moved and the resource group they should be moved to.",
        "properties": {
          "resources": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "targetResourceGroup": {
            "maxLength": 90,
            "minLength": 1,
            "pattern": " ^[-\\w\\._\\(\\)]+[^\\.]$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeploymentLocations": {
        "description": "List of available locations (regions or App Service Environments) for\ndeployment of App Service resources.",
        "properties": {
          "hostingEnvironmentDeploymentInfos": {
            "description": "Available App Service Environments with basic information.",
            "items": {
              "$ref": "#/components/schemas/HostingEnvironmentDeploymentInfo"
            },
            "type": "array"
          },
          "hostingEnvironments": {
            "description": "Available App Service Environments with full descriptions of the environments.",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/AppServiceEnvironment"
            },
            "type": "array"
          },
          "locations": {
            "description": "Available regions.",
            "items": {
              "$ref": "#/components/schemas/GeoRegion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GeoRegion": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Geographical region.",
        "properties": {
          "properties": {
            "description": "GeoRegion resource specific properties",
            "properties": {
              "description": {
                "description": "Region description.",
                "readOnly": true,
                "type": "string"
              },
              "displayName": {
                "description": "Display name for region.",
                "readOnly": true,
                "type": "string"
              },
              "orgDomain": {
                "description": "Display name for region.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "GeoRegionCollection": {
        "description": "Collection of geographical regions.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/GeoRegion"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "GlobalCsmSkuDescription": {
        "description": "A Global SKU Description.",
        "properties": {
          "capabilities": {
            "description": "Capabilities of the SKU, e.g., is traffic manager enabled?",
            "items": {
              "$ref": "./CommonDefinitions.json#/definitions/Capability"
            },
            "type": "array"
          },
          "capacity": {
            "$ref": "./CommonDefinitions.json#/definitions/SkuCapacity",
            "description": "Min, max, and default scale values of the SKU."
          },
          "family": {
            "description": "Family code of the resource SKU.",
            "type": "string"
          },
          "locations": {
            "description": "Locations of the SKU.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the resource SKU.",
            "type": "string"
          },
          "size": {
            "description": "Size specifier of the resource SKU.",
            "type": "string"
          },
          "tier": {
            "description": "Service Tier of the resource SKU.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HostingEnvironmentDeploymentInfo": {
        "description": "Information needed to create resources on an App Service Environment.",
        "properties": {
          "location": {
            "description": "Location of the App Service Environment.",
            "type": "string"
          },
          "name": {
            "description": "Name of the App Service Environment.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PremierAddOnOffer": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Premier add-on offer.",
        "properties": {
          "properties": {
            "description": "PremierAddOnOffer resource specific properties",
            "properties": {
              "legalTermsUrl": {
                "description": "Legal terms URL.",
                "type": "string"
              },
              "marketplaceOffer": {
                "description": "Marketplace offer.",
                "type": "string"
              },
              "marketplacePublisher": {
                "description": "Marketplace publisher.",
                "type": "string"
              },
              "privacyPolicyUrl": {
                "description": "Privacy policy URL.",
                "type": "string"
              },
              "product": {
                "description": "Premier add on offer Product.",
                "type": "string"
              },
              "promoCodeRequired": {
                "description": "<code>true</code> if promotion code is required; otherwise, <code>false</code>.",
                "type": "boolean"
              },
              "quota": {
                "description": "Premier add on offer Quota.",
                "format": "int32",
                "type": "integer"
              },
              "sku": {
                "description": "Premier add on SKU.",
                "type": "string"
              },
              "vendor": {
                "description": "Premier add on offer Vendor.",
                "type": "string"
              },
              "webHostingPlanRestrictions": {
                "description": "App Service plans this offer is restricted to.",
                "enum": [
                  "None",
                  "Free",
                  "Shared",
                  "Basic",
                  "Standard",
                  "Premium"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "AppServicePlanRestrictions"
                }
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PremierAddOnOfferCollection": {
        "description": "Collection of premier add-on offers.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/PremierAddOnOffer"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ResourceNameAvailability": {
        "description": "Information regarding availability of a resource name.",
        "properties": {
          "message": {
            "description": "If reason == invalid, provide the user with the reason why the given name is invalid, and provide the resource naming requirements so that the user can select a valid name. If reason == AlreadyExists, explain that resource name is already in use, and direct them to select a different name.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "<code>true</code> indicates name is valid and available. <code>false</code> indicates the name is invalid, unavailable, or both.",
            "type": "boolean"
          },
          "reason": {
            "description": "<code>Invalid</code> indicates the name provided does not match Azure App Service naming requirements. <code>AlreadyExists</code> indicates that the name is already in use and is therefore unavailable.",
            "enum": [
              "Invalid",
              "AlreadyExists"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "InAvailabilityReasonType"
            }
          }
        },
        "type": "object"
      },
      "ResourceNameAvailabilityRequest": {
        "description": "Resource name availability request content.",
        "properties": {
          "isFqdn": {
            "description": "Is fully qualified domain name.",
            "type": "boolean"
          },
          "name": {
            "description": "Resource name to verify.",
            "type": "string"
          },
          "type": {
            "description": "Resource type used for verification.",
            "enum": [
              "Site",
              "Slot",
              "HostingEnvironment",
              "PublishingUser",
              "Microsoft.Web/sites",
              "Microsoft.Web/sites/slots",
              "Microsoft.Web/hostingEnvironments",
              "Microsoft.Web/publishingUsers"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CheckNameResourceTypes"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "SkuInfos": {
        "description": "Collection of SKU information.",
        "properties": {
          "resourceType": {
            "description": "Resource type that this SKU applies to.",
            "type": "string"
          },
          "skus": {
            "description": "List of SKUs the subscription is able to use.",
            "items": {
              "$ref": "#/components/schemas/GlobalCsmSkuDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SourceControl": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "The source control OAuth token.",
        "properties": {
          "properties": {
            "description": "SourceControl resource specific properties",
            "properties": {
              "expirationTime": {
                "description": "OAuth token expiration.",
                "format": "date-time",
                "type": "string"
              },
              "refreshToken": {
                "description": "OAuth refresh token.",
                "type": "string"
              },
              "token": {
                "description": "OAuth access token.",
                "type": "string"
              },
              "tokenSecret": {
                "description": "OAuth access token secret.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SourceControlCollection": {
        "description": "Collection of source controls.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SourceControl"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ValidateProperties": {
        "description": "App properties used for validation.",
        "properties": {
          "capacity": {
            "description": "Target capacity of the App Service plan (number of VMs).",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "containerImagePlatform": {
            "description": "Platform (windows or linux)",
            "type": "string"
          },
          "containerImageRepository": {
            "description": "Repository name (image name)",
            "type": "string"
          },
          "containerImageTag": {
            "description": "Image tag",
            "type": "string"
          },
          "containerRegistryBaseUrl": {
            "description": "Base URL of the container registry",
            "type": "string"
          },
          "containerRegistryPassword": {
            "description": "Password for to access the container registry",
            "type": "string"
          },
          "containerRegistryUsername": {
            "description": "Username for to access the container registry",
            "type": "string"
          },
          "hostingEnvironment": {
            "description": "Name of App Service Environment where app or App Service plan should be created.",
            "type": "string"
          },
          "isSpot": {
            "description": "<code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.",
            "type": "boolean"
          },
          "isXenon": {
            "description": "<code>true</code> if App Service plan is running as a windows container",
            "type": "boolean"
          },
          "needLinuxWorkers": {
            "description": "<code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.",
            "type": "boolean"
          },
          "serverFarmId": {
            "description": "ARM resource ID of an App Service plan that would host the app.",
            "type": "string"
          },
          "skuName": {
            "description": "Name of the target SKU for the App Service plan.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidateRequest": {
        "description": "Resource validation request content.",
        "properties": {
          "location": {
            "description": "Expected location of the resource.",
            "type": "string"
          },
          "name": {
            "description": "Resource name to verify.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ValidateProperties",
            "description": "Properties of the resource to validate.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Resource type used for verification.",
            "enum": [
              "ServerFarm",
              "Site"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ValidateResourceTypes"
            }
          }
        },
        "required": [
          "name",
          "type",
          "location",
          "properties"
        ],
        "type": "object"
      },
      "ValidateResponse": {
        "description": "Describes the result of resource validation.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ValidateResponseError",
            "description": "Error details for the case when validation fails."
          },
          "status": {
            "description": "Result of validation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ValidateResponseError": {
        "description": "Error details for when validation fails.",
        "properties": {
          "code": {
            "description": "Validation error code.",
            "type": "string"
          },
          "message": {
            "description": "Validation error message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VnetParameters": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "The required set of inputs to validate a VNET",
        "properties": {
          "properties": {
            "description": "VnetParameters resource specific properties",
            "properties": {
              "vnetName": {
                "description": "The name of the VNET to be validated",
                "type": "string"
              },
              "vnetResourceGroup": {
                "description": "The Resource Group of the VNET to be validated",
                "type": "string"
              },
              "vnetSubnetName": {
                "description": "The subnet name to be validated",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "VnetValidationFailureDetails": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A class that describes the reason for a validation failure.",
        "properties": {
          "properties": {
            "description": "VnetValidationFailureDetails resource specific properties",
            "properties": {
              "failed": {
                "description": "A flag describing whether or not validation failed.",
                "type": "boolean"
              },
              "failedTests": {
                "description": "A list of tests that failed in the validation.",
                "items": {
                  "$ref": "#/components/schemas/VnetValidationTestFailure"
                },
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "VnetValidationTestFailure": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A class that describes a test that failed during NSG and UDR validation.",
        "properties": {
          "properties": {
            "description": "VnetValidationTestFailure resource specific properties",
            "properties": {
              "details": {
                "description": "The details of what caused the failure, e.g. the blocking rule name, etc.",
                "type": "string"
              },
              "testName": {
                "description": "The name of the test that failed.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}