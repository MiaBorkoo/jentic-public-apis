{
  "openapi": "3.0.0",
  "info": {
    "description": "Creates an Azure Data Lake Analytics account management client.",
    "title": "DataLakeAnalyticsAccountManagementClient",
    "version": "2016-11-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datalake-analytics/resource-manager/Microsoft.DataLakeAnalytics/stable/2016-11-01/account.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DataLakeAnalytics/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "Successfully listed the available operations for Data Lake Analytics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Data Lake Analytics REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Lists all of the available Data Lake Analytics REST API operations": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "OData filter. Optional.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of items to return. Optional.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items to skip over before returning elements. Optional.",
            "in": "query",
            "name": "$skip",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.",
            "in": "query",
            "name": "$select",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.",
            "in": "query",
            "name": "$count",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccountListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Azure Data Lake Analytics accounts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any.",
        "operationId": "Accounts_List",
        "x-ms-examples": {
          "Gets the first page of Data Lake Analytics accounts, if any, within the current subscription. This includes a link to the next page, if any.": {
            "$ref": "./examples/Accounts_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/DataLakeAnalyticsAccountBasic",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/locations/{location}/capability": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "The resource location without whitespace.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapabilityInformation"
                }
              }
            },
            "description": "Successfully retrieved the subscription-level properties and limits for Data Lake Analytics specified by resource location."
          },
          "404": {
            "description": "Subscription not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "Gets subscription-level properties and limits for Data Lake Analytics specified by resource location.",
        "operationId": "Locations_GetCapability",
        "x-ms-examples": {
          "Gets subscription-level properties and limits for Data Lake Analytics specified by resource location": {
            "$ref": "./examples/Locations_GetCapability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeAnalytics/locations/{location}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "The resource location without whitespace.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NameAvailabilityInformation"
                }
              }
            },
            "description": "Successfully retrieved the Data Lake Analytics account name availability information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Checks whether the specified account name is available or taken.",
        "operationId": "Accounts_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameAvailabilityParameters"
              }
            }
          },
          "description": "Parameters supplied to check the Data Lake Analytics account name availability.",
          "required": true
        },
        "x-ms-examples": {
          "Checks whether the specified account name is available or taken": {
            "$ref": "./examples/Accounts_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "OData filter. Optional.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of items to return. Optional.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items to skip over before returning elements. Optional.",
            "in": "query",
            "name": "$skip",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.",
            "in": "query",
            "name": "$select",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.",
            "in": "query",
            "name": "$count",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccountListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of accounts in the specified resource group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any.",
        "operationId": "Accounts_ListByResourceGroup",
        "x-ms-examples": {
          "Gets the first page of Data Lake Analytics accounts, if any, within a specific resource group. This includes a link to the next page, if any.": {
            "$ref": "./examples/Accounts_ListByResourceGroup.json"
          }
        },
        "x-ms-odata": "#/components/schemas/DataLakeAnalyticsAccountBasic",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified account."
          },
          "202": {
            "description": "Successfully initiated the deletion of the specified account."
          },
          "204": {
            "description": "The specified account was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Begins the delete process for the Data Lake Analytics account object specified by the account name.",
        "operationId": "Accounts_Delete",
        "x-ms-examples": {
          "Begins the delete process for the Data Lake Analytics account object specified by the account name.": {
            "$ref": "./examples/Accounts_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully retrieved the details of the specified account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Gets details of the specified Data Lake Analytics account.",
        "operationId": "Accounts_Get",
        "x-ms-examples": {
          "Gets details of the specified Data Lake Analytics account.": {
            "$ref": "./examples/Accounts_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully updated the specified account."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully initiated an update of the specified account."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully initiated an update of the specified account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.",
        "operationId": "Accounts_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataLakeAnalyticsAccountParameters"
              }
            }
          },
          "description": "Parameters supplied to the update Data Lake Analytics account operation."
        },
        "x-ms-examples": {
          "Updates the Data Lake Analytics account object specified by the accountName with the contents of the account object.": {
            "$ref": "./examples/Accounts_Update.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully created the specified account."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeAnalyticsAccount"
                }
              }
            },
            "description": "Successfully initiated creation of the specified account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Creates the specified Data Lake Analytics account. This supplies the user with computation services for Data Lake Analytics workloads.",
        "operationId": "Accounts_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataLakeAnalyticsAccountParameters"
              }
            }
          },
          "description": "Parameters supplied to create a new Data Lake Analytics account.",
          "required": true
        },
        "x-ms-examples": {
          "Creates the specified Data Lake Analytics account. This supplies the user with computation services for Data Lake Analytics workloads.": {
            "$ref": "./examples/Accounts_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputePolicyListResult"
                }
              }
            },
            "description": "Successfully listed the compute policies."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "ComputePolicies"
        ],
        "description": "Lists the Data Lake Analytics compute policies within the specified Data Lake Analytics account. An account supports, at most, 50 policies",
        "operationId": "ComputePolicies_ListByAccount",
        "x-ms-examples": {
          "Lists the compute policies within the adla account": {
            "$ref": "./examples/ComputePolicies_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/computePolicies/{computePolicyName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the compute policy to delete.",
            "in": "path",
            "name": "computePolicyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified compute policy"
          },
          "204": {
            "description": "The specified compute policy does not exist or was already deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "ComputePolicies"
        ],
        "description": "Deletes the specified compute policy from the specified Data Lake Analytics account",
        "operationId": "ComputePolicies_Delete",
        "x-ms-examples": {
          "Deletes the specified compute policy from the adla account": {
            "$ref": "./examples/ComputePolicies_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the compute policy to retrieve.",
            "in": "path",
            "name": "computePolicyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputePolicy"
                }
              }
            },
            "description": "Successfully retrieved the specified compute policy."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "ComputePolicies"
        ],
        "description": "Gets the specified Data Lake Analytics compute policy.",
        "operationId": "ComputePolicies_Get",
        "x-ms-examples": {
          "Gets the specified compute policy": {
            "$ref": "./examples/ComputePolicies_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the compute policy to update.",
            "in": "path",
            "name": "computePolicyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputePolicy"
                }
              }
            },
            "description": "Successfully updated the specified compute policy"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "ComputePolicies"
        ],
        "description": "Updates the specified compute policy.",
        "operationId": "ComputePolicies_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateComputePolicyParameters"
              }
            }
          },
          "description": "Parameters supplied to update the compute policy."
        },
        "x-ms-examples": {
          "Updates the specified compute policy": {
            "$ref": "./examples/ComputePolicies_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the compute policy to create or update.",
            "in": "path",
            "name": "computePolicyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputePolicy"
                }
              }
            },
            "description": "Successfully created or updated the specified compute policy"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "ComputePolicies"
        ],
        "description": "Creates or updates the specified compute policy. During update, the compute policy with the specified name will be replaced with this new compute policy. An account supports, at most, 50 policies",
        "operationId": "ComputePolicies_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateComputePolicyParameters"
              }
            }
          },
          "description": "Parameters supplied to create or update the compute policy. The max degree of parallelism per job property, min priority per job property, or both must be present.",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates the specified compute policy": {
            "$ref": "./examples/ComputePolicies_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "OData filter. Optional.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of items to return. Optional.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items to skip over before returning elements. Optional.",
            "in": "query",
            "name": "$skip",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.",
            "in": "query",
            "name": "$select",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.",
            "in": "query",
            "name": "$count",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeStoreAccountInformationListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Data Lake Store accounts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "description": "Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.",
        "operationId": "DataLakeStoreAccounts_ListByAccount",
        "x-ms-examples": {
          "Gets the first page of Data Lake Store accounts linked to the specified Data Lake Analytics account": {
            "$ref": "./examples/DataLakeStoreAccounts_ListByAccount.json"
          }
        },
        "x-ms-odata": "#/components/schemas/DataLakeStoreAccountInformation",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/dataLakeStoreAccounts/{dataLakeStoreAccountName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Data Lake Store account to remove",
            "in": "path",
            "name": "dataLakeStoreAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully removed the specified Azure Data Lake Store account information from the specified Azure Data Lake Analytics account."
          },
          "204": {
            "description": "The specified datalake storage account does not exist or was already deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "description": "Updates the Data Lake Analytics account specified to remove the specified Data Lake Store account.",
        "operationId": "DataLakeStoreAccounts_Delete",
        "x-ms-examples": {
          "Removes the specified Data Lake Store account": {
            "$ref": "./examples/DataLakeStoreAccounts_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Data Lake Store account to retrieve",
            "in": "path",
            "name": "dataLakeStoreAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataLakeStoreAccountInformation"
                }
              }
            },
            "description": "Successfully retrieved the specified Azure Data Lake Store account information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "description": "Gets the specified Data Lake Store account details in the specified Data Lake Analytics account.",
        "operationId": "DataLakeStoreAccounts_Get",
        "x-ms-examples": {
          "Gets the specified Data Lake Store account details": {
            "$ref": "./examples/DataLakeStoreAccounts_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Data Lake Store account to add.",
            "in": "path",
            "name": "dataLakeStoreAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added the specified Azure Data Lake Store account information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "DataLakeStoreAccounts"
        ],
        "description": "Updates the specified Data Lake Analytics account to include the additional Data Lake Store account.",
        "operationId": "DataLakeStoreAccounts_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDataLakeStoreParameters"
              }
            }
          },
          "description": "The details of the Data Lake Store account."
        },
        "x-ms-examples": {
          "Adds a Data Lake Store account": {
            "$ref": "./examples/DataLakeStoreAccounts_Add.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRuleListResult"
                }
              }
            },
            "description": "Successfully listed the firewall rules."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Lists the Data Lake Analytics firewall rules within the specified Data Lake Analytics account.",
        "operationId": "FirewallRules_ListByAccount",
        "x-ms-examples": {
          "Lists the Data Lake Analytics firewall rules": {
            "$ref": "./examples/FirewallRules_ListByAccount.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/firewallRules/{firewallRuleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the firewall rule to delete.",
            "in": "path",
            "name": "firewallRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified firewall rule"
          },
          "204": {
            "description": "The specified firewall rule does not exist or was already deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Deletes the specified firewall rule from the specified Data Lake Analytics account",
        "operationId": "FirewallRules_Delete",
        "x-ms-examples": {
          "Deletes the specified firewall rule": {
            "$ref": "./examples/FirewallRules_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the firewall rule to retrieve.",
            "in": "path",
            "name": "firewallRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "Successfully retrieved the specified firewall rule."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Gets the specified Data Lake Analytics firewall rule.",
        "operationId": "FirewallRules_Get",
        "x-ms-examples": {
          "Gets the specified Data Lake Analytics firewall rule": {
            "$ref": "./examples/FirewallRules_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the firewall rule to update.",
            "in": "path",
            "name": "firewallRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "Successfully updated the specified firewall rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Updates the specified firewall rule.",
        "operationId": "FirewallRules_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFirewallRuleParameters"
              }
            }
          },
          "description": "Parameters supplied to update the firewall rule."
        },
        "x-ms-examples": {
          "Updates the specified firewall rule": {
            "$ref": "./examples/FirewallRules_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the firewall rule to create or update.",
            "in": "path",
            "name": "firewallRuleName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRule"
                }
              }
            },
            "description": "Successfully created or updated the specified firewall rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "FirewallRules"
        ],
        "description": "Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule.",
        "operationId": "FirewallRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateFirewallRuleParameters"
              }
            }
          },
          "description": "Parameters supplied to create or update the firewall rule.",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates the specified firewall rule": {
            "$ref": "./examples/FirewallRules_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The OData filter. Optional.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of items to return. Optional.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "The number of items to skip over before returning elements. Optional.",
            "in": "query",
            "name": "$skip",
            "required": false,
            "schema": {
              "format": "int32",
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.",
            "in": "query",
            "name": "$select",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.",
            "in": "query",
            "name": "$orderby",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.",
            "in": "query",
            "name": "$count",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageAccountInformationListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Azure Storage accounts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.",
        "operationId": "StorageAccounts_ListByAccount",
        "x-ms-examples": {
          "Gets the first page of Azure Storage accounts linked to the specified Data Lake Analytics account": {
            "$ref": "./examples/StorageAccounts_ListByAccount.json"
          }
        },
        "x-ms-odata": "#/components/schemas/StorageAccountInformation",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure Storage account to remove",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the specified Azure Storage account information from the Azure Data Lake Analytics account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Updates the specified Data Lake Analytics account to remove an Azure Storage account.",
        "operationId": "StorageAccounts_Delete",
        "x-ms-examples": {
          "Removes an Azure Storage account": {
            "$ref": "./examples/StorageAccounts_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure Storage account for which to retrieve the details.",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageAccountInformation"
                }
              }
            },
            "description": "Successfully retrieved the specified Azure Storage account information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Gets the specified Azure Storage account linked to the given Data Lake Analytics account.",
        "operationId": "StorageAccounts_Get",
        "x-ms-examples": {
          "Gets the specified Azure Storage account": {
            "$ref": "./examples/StorageAccounts_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The Azure Storage account to modify",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully update the specified Azure Storage account information for the specified Azure Data Lake Analytics account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.",
        "operationId": "StorageAccounts_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStorageAccountParameters"
              }
            }
          },
          "description": "The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change."
        },
        "x-ms-examples": {
          "Replaces Azure Storage blob account details": {
            "$ref": "./examples/StorageAccounts_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure Storage account to add",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully added the specified Azure Storage account information to the specified Azure Data Lake Analytics account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Updates the specified Data Lake Analytics account to add an Azure Storage account.",
        "operationId": "StorageAccounts_Add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStorageAccountParameters"
              }
            }
          },
          "description": "The parameters containing the access key and optional suffix for the Azure Storage Account.",
          "required": true
        },
        "x-ms-examples": {
          "Adds an Azure Storage account": {
            "$ref": "./examples/StorageAccounts_Add.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure storage account from which to list blob containers.",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageContainerListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Azure Storage containers under the specified Azure Data Lake Analytics account."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.",
        "operationId": "StorageAccounts_ListStorageContainers",
        "x-ms-examples": {
          "Lists the Azure Storage containers": {
            "$ref": "./examples/StorageAccounts_ListStorageContainers.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure storage account from which to retrieve the blob container.",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Azure storage container to retrieve",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageContainer"
                }
              }
            },
            "description": "Successfully retrieved the specified Azure Storage container information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.",
        "operationId": "StorageAccounts_GetStorageContainer",
        "x-ms-examples": {
          "Gets the specified Azure Storage container": {
            "$ref": "./examples/StorageAccounts_GetStorageContainer.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}/listSasTokens": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/AccountNameParameter"
          },
          {
            "description": "The name of the Azure storage account for which the SAS token is being requested.",
            "in": "path",
            "name": "storageAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Azure storage container for which the SAS token is being requested.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SasTokenInformationListResult"
                }
              }
            },
            "description": "Successfully retrieved the list of Storage Account SAS tokens for the specified Azure Storage account container."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Default response"
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "description": "Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.",
        "operationId": "StorageAccounts_ListSasTokens",
        "x-ms-examples": {
          "Gets the SAS token": {
            "$ref": "./examples/StorageAccounts_ListSasTokens.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AccountNameParameter": {
        "description": "The name of the Data Lake Analytics account.",
        "in": "path",
        "name": "accountName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ApiVersionParameter": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ResourceGroupNameParameter": {
        "description": "The name of the Azure resource group.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AddDataLakeStoreParameters": {
        "description": "The parameters used to add a new Data Lake Store account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AddDataLakeStoreProperties",
            "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AddDataLakeStoreProperties": {
        "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account.",
        "properties": {
          "suffix": {
            "description": "The optional suffix for the Data Lake Store account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AddDataLakeStoreWithAccountParameters": {
        "description": "The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the Data Lake Store account to add.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AddDataLakeStoreProperties",
            "description": "The Data Lake Store account properties to use when adding a new Data Lake Store account.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "AddStorageAccountParameters": {
        "description": "The parameters used to add a new Azure Storage account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AddStorageAccountProperties",
            "description": "The Azure Storage account properties to use when adding a new Azure Storage account.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AddStorageAccountProperties": {
        "description": "The Azure Storage account properties to use when adding a new Azure Storage account.",
        "properties": {
          "accessKey": {
            "description": "The access key associated with this Azure Storage account that will be used to connect to it.",
            "type": "string"
          },
          "suffix": {
            "default": "azuredatalakestore.net",
            "description": "The optional suffix for the storage account.",
            "type": "string"
          }
        },
        "required": [
          "accessKey"
        ],
        "type": "object"
      },
      "AddStorageAccountWithAccountParameters": {
        "description": "The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the Azure Storage account to add.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AddStorageAccountProperties",
            "description": "The Azure Storage account properties to use when adding a new Azure Storage account.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name",
          "properties"
        ],
        "type": "object"
      },
      "CapabilityInformation": {
        "description": "Subscription-level properties and limits for Data Lake Analytics.",
        "properties": {
          "accountCount": {
            "description": "The current number of accounts under this subscription.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "maxAccountCount": {
            "description": "The maximum supported number of accounts under this subscription.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "migrationState": {
            "description": "The Boolean value of true or false to indicate the maintenance state.",
            "readOnly": true,
            "type": "boolean"
          },
          "state": {
            "description": "The subscription state.",
            "enum": [
              "Registered",
              "Suspended",
              "Deleted",
              "Unregistered",
              "Warned"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SubscriptionState"
            }
          },
          "subscriptionId": {
            "description": "The subscription credentials that uniquely identifies the subscription.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CheckNameAvailabilityParameters": {
        "description": "Data Lake Analytics account name availability check parameters.",
        "properties": {
          "name": {
            "description": "The Data Lake Analytics name to check availability for.",
            "type": "string"
          },
          "type": {
            "description": "The resource type. Note: This should not be set by the user, as the constant value is Microsoft.DataLakeAnalytics/accounts",
            "enum": [
              "Microsoft.DataLakeAnalytics/accounts"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ComputePolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Data Lake Analytics compute policy information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ComputePolicyProperties",
            "description": "The compute policy properties.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ComputePolicyListResult": {
        "description": "The list of compute policies in the account.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/ComputePolicy"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ComputePolicyProperties": {
        "description": "The compute policy properties.",
        "properties": {
          "maxDegreeOfParallelismPerJob": {
            "description": "The maximum degree of parallelism per job this user can use to submit jobs.",
            "format": "int32",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum priority per job this user can use to submit jobs.",
            "format": "int32",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "objectId": {
            "description": "The AAD object identifier for the entity to create a policy for.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "objectType": {
            "description": "The type of AAD object the object identifier refers to.",
            "enum": [
              "User",
              "Group",
              "ServicePrincipal"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AADObjectType"
            }
          }
        },
        "type": "object"
      },
      "CreateComputePolicyWithAccountParameters": {
        "description": "The parameters used to create a new compute policy while creating a new Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the compute policy to create.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/CreateOrUpdateComputePolicyProperties",
            "description": "The compute policy properties to use when creating a new compute policy.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name",
          "properties"
        ],
        "type": "object"
      },
      "CreateDataLakeAnalyticsAccountParameters": {
        "description": "The parameters to use for creating a Data Lake Analytics account.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "location": {
            "description": "The resource location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/CreateDataLakeAnalyticsAccountProperties",
            "description": "The Data Lake Analytics account properties to use for creating.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "location",
          "properties"
        ],
        "type": "object"
      },
      "CreateDataLakeAnalyticsAccountProperties": {
        "properties": {
          "computePolicies": {
            "description": "The list of compute policies associated with this account.",
            "items": {
              "$ref": "#/components/schemas/CreateComputePolicyWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "dataLakeStoreAccounts": {
            "description": "The list of Data Lake Store accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/AddDataLakeStoreWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "defaultDataLakeStoreAccount": {
            "description": "The default Data Lake Store account associated with this account.",
            "type": "string"
          },
          "firewallAllowAzureIps": {
            "default": "Disabled",
            "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallAllowAzureIpsState"
            }
          },
          "firewallRules": {
            "description": "The list of firewall rules associated with this account.",
            "items": {
              "$ref": "#/components/schemas/CreateFirewallRuleWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "firewallState": {
            "default": "Disabled",
            "description": "The current state of the IP address firewall for this account.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallState"
            }
          },
          "maxDegreeOfParallelism": {
            "default": 30,
            "description": "The maximum supported degree of parallelism for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxDegreeOfParallelismPerJob": {
            "default": 32,
            "description": "The maximum supported degree of parallelism per job for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxJobCount": {
            "default": 3,
            "description": "The maximum supported jobs running under the account at the same time.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum supported priority per job for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "newTier": {
            "default": "Consumption",
            "description": "The commitment tier for the next month.",
            "enum": [
              "Consumption",
              "Commitment_100AUHours",
              "Commitment_500AUHours",
              "Commitment_1000AUHours",
              "Commitment_5000AUHours",
              "Commitment_10000AUHours",
              "Commitment_50000AUHours",
              "Commitment_100000AUHours",
              "Commitment_500000AUHours"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TierType"
            }
          },
          "queryStoreRetention": {
            "default": 30,
            "description": "The number of days that job metadata is retained.",
            "format": "int32",
            "maximum": 180,
            "minimum": 1,
            "type": "integer"
          },
          "storageAccounts": {
            "description": "The list of Azure Blob Storage accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/AddStorageAccountWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "required": [
          "defaultDataLakeStoreAccount",
          "dataLakeStoreAccounts"
        ],
        "type": "object"
      },
      "CreateFirewallRuleWithAccountParameters": {
        "description": "The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the firewall rule to create.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/CreateOrUpdateFirewallRuleProperties",
            "description": "The firewall rule properties to use when creating a new firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name",
          "properties"
        ],
        "type": "object"
      },
      "CreateOrUpdateComputePolicyParameters": {
        "description": "The parameters used to create a new compute policy.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CreateOrUpdateComputePolicyProperties",
            "description": "The compute policy properties to use when creating a new compute policy.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "CreateOrUpdateComputePolicyProperties": {
        "description": "The compute policy properties to use when creating a new compute policy.",
        "properties": {
          "maxDegreeOfParallelismPerJob": {
            "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "objectId": {
            "description": "The AAD object identifier for the entity to create a policy for.",
            "format": "uuid",
            "type": "string"
          },
          "objectType": {
            "description": "The type of AAD object the object identifier refers to.",
            "enum": [
              "User",
              "Group",
              "ServicePrincipal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AADObjectType"
            }
          }
        },
        "required": [
          "objectId",
          "objectType"
        ],
        "type": "object"
      },
      "CreateOrUpdateFirewallRuleParameters": {
        "description": "The parameters used to create a new firewall rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CreateOrUpdateFirewallRuleProperties",
            "description": "The firewall rule properties to use when creating a new firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "CreateOrUpdateFirewallRuleProperties": {
        "description": "The firewall rule properties to use when creating a new firewall rule.",
        "properties": {
          "endIpAddress": {
            "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "type": "string"
          },
          "startIpAddress": {
            "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "type": "string"
          }
        },
        "required": [
          "startIpAddress",
          "endIpAddress"
        ],
        "type": "object"
      },
      "DataLakeAnalyticsAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DataLakeAnalyticsAccountProperties",
            "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DataLakeAnalyticsAccountBasic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A Data Lake Analytics account object, containing all information associated with the named Data Lake Analytics account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DataLakeAnalyticsAccountPropertiesBasic",
            "description": "The properties defined by Data Lake Analytics all properties are specific to each resource provider.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DataLakeAnalyticsAccountListResult": {
        "description": "Data Lake Analytics account list information.",
        "properties": {
          "count": {
            "description": "The current number of data lake analytics accounts under this subscription.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/DataLakeAnalyticsAccountBasic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataLakeAnalyticsAccountProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataLakeAnalyticsAccountPropertiesBasic"
          }
        ],
        "description": "The account specific properties that are associated with an underlying Data Lake Analytics account. Returned only when retrieving a specific account.",
        "properties": {
          "computePolicies": {
            "description": "The list of compute policies associated with this account.",
            "items": {
              "$ref": "#/components/schemas/ComputePolicy"
            },
            "readOnly": true,
            "type": "array"
          },
          "currentTier": {
            "description": "The commitment tier in use for the current month.",
            "enum": [
              "Consumption",
              "Commitment_100AUHours",
              "Commitment_500AUHours",
              "Commitment_1000AUHours",
              "Commitment_5000AUHours",
              "Commitment_10000AUHours",
              "Commitment_50000AUHours",
              "Commitment_100000AUHours",
              "Commitment_500000AUHours"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TierType"
            }
          },
          "dataLakeStoreAccounts": {
            "description": "The list of Data Lake Store accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/DataLakeStoreAccountInformation"
            },
            "readOnly": true,
            "type": "array"
          },
          "debugDataAccessLevel": {
            "description": "The current state of the DebugDataAccessLevel for this account.",
            "enum": [
              "All",
              "Customer",
              "None"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DebugDataAccessLevel"
            }
          },
          "defaultDataLakeStoreAccount": {
            "description": "The default Data Lake Store account associated with this account.",
            "readOnly": true,
            "type": "string"
          },
          "firewallAllowAzureIps": {
            "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallAllowAzureIpsState"
            }
          },
          "firewallRules": {
            "description": "The list of firewall rules associated with this account.",
            "items": {
              "$ref": "#/components/schemas/FirewallRule"
            },
            "readOnly": true,
            "type": "array"
          },
          "firewallState": {
            "description": "The current state of the IP address firewall for this account.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallState"
            }
          },
          "hiveMetastores": {
            "description": "The list of hiveMetastores associated with this account.",
            "items": {
              "$ref": "#/components/schemas/HiveMetastore"
            },
            "readOnly": true,
            "type": "array"
          },
          "maxActiveJobCountPerUser": {
            "description": "The maximum supported active jobs under the account at the same time.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "maxDegreeOfParallelism": {
            "default": 30,
            "description": "The maximum supported degree of parallelism for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxDegreeOfParallelismPerJob": {
            "description": "The maximum supported degree of parallelism per job for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxJobCount": {
            "default": 3,
            "description": "The maximum supported jobs running under the account at the same time.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxJobRunningTimeInMin": {
            "description": "The maximum supported active jobs under the account at the same time.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "maxQueuedJobCountPerUser": {
            "description": "The maximum supported jobs queued under the account at the same time.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum supported priority per job for this account.",
            "format": "int32",
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "newTier": {
            "description": "The commitment tier for the next month.",
            "enum": [
              "Consumption",
              "Commitment_100AUHours",
              "Commitment_500AUHours",
              "Commitment_1000AUHours",
              "Commitment_5000AUHours",
              "Commitment_10000AUHours",
              "Commitment_50000AUHours",
              "Commitment_100000AUHours",
              "Commitment_500000AUHours"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TierType"
            }
          },
          "publicDataLakeStoreAccounts": {
            "description": "The list of Data Lake Store accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/DataLakeStoreAccountInformation"
            },
            "type": "array"
          },
          "queryStoreRetention": {
            "default": 30,
            "description": "The number of days that job metadata is retained.",
            "format": "int32",
            "maximum": 180,
            "minimum": 1,
            "type": "integer"
          },
          "storageAccounts": {
            "description": "The list of Azure Blob Storage accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/StorageAccountInformation"
            },
            "readOnly": true,
            "type": "array"
          },
          "systemMaxDegreeOfParallelism": {
            "description": "The system defined maximum supported degree of parallelism for this account, which restricts the maximum value of parallelism the user can set for the account.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "systemMaxJobCount": {
            "description": "The system defined maximum supported jobs running under the account at the same time, which restricts the maximum number of running jobs the user can set for the account.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "virtualNetworkRules": {
            "description": "The list of virtualNetwork rules associated with this account.",
            "items": {
              "$ref": "#/components/schemas/VirtualNetworkRule"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataLakeAnalyticsAccountPropertiesBasic": {
        "description": "The basic account specific properties that are associated with an underlying Data Lake Analytics account.",
        "properties": {
          "accountId": {
            "description": "The unique identifier associated with this Data Lake Analytics account.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "creationTime": {
            "description": "The account creation time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endpoint": {
            "description": "The full CName endpoint for this account.",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTime": {
            "description": "The account last modified time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning status of the Data Lake Analytics account.",
            "enum": [
              "Failed",
              "Creating",
              "Running",
              "Succeeded",
              "Patching",
              "Suspending",
              "Resuming",
              "Deleting",
              "Deleted",
              "Undeleting",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataLakeAnalyticsAccountStatus"
            }
          },
          "state": {
            "description": "The state of the Data Lake Analytics account.",
            "enum": [
              "Active",
              "Suspended"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataLakeAnalyticsAccountState"
            }
          }
        },
        "type": "object"
      },
      "DataLakeStoreAccountInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Data Lake Store account information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DataLakeStoreAccountInformationProperties",
            "description": "The Data Lake Store account properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DataLakeStoreAccountInformationListResult": {
        "description": "Data Lake Store account list information.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/DataLakeStoreAccountInformation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataLakeStoreAccountInformationProperties": {
        "description": "The Data Lake Store account properties.",
        "properties": {
          "suffix": {
            "description": "The optional suffix for the Data Lake Store account.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FirewallRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Data Lake Analytics firewall rule information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FirewallRuleProperties",
            "description": "The firewall rule properties.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "FirewallRuleListResult": {
        "description": "Data Lake Analytics firewall rule list information.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/FirewallRule"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "FirewallRuleProperties": {
        "description": "The firewall rule properties.",
        "properties": {
          "endIpAddress": {
            "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "readOnly": true,
            "type": "string"
          },
          "startIpAddress": {
            "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HiveMetastore": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/HiveMetastoreProperties",
            "description": "The  HiveMetastoreProperties rule properties.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "HiveMetastoreListResult": {
        "description": "Data Lake Analytics HiveMetastore list information.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/HiveMetastore"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HiveMetastoreProperties": {
        "description": "The HiveMetastore  properties.",
        "properties": {
          "databaseName": {
            "description": "The databaseName for the Hive MetaStore",
            "readOnly": true,
            "type": "string"
          },
          "nestedResourceProvisioningState": {
            "$ref": "#/components/schemas/NestedResourceProvisioningState",
            "description": "The current state of the NestedResource",
            "readOnly": true
          },
          "password": {
            "description": "The password for the Hive MetaStore",
            "readOnly": true,
            "type": "string"
          },
          "runtimeVersion": {
            "description": "The runtimeVersion for the Hive MetaStore",
            "readOnly": true,
            "type": "string"
          },
          "serverUri": {
            "description": "The serverUri for the Hive MetaStore",
            "readOnly": true,
            "type": "string"
          },
          "userName": {
            "description": "The userName for the Hive MetaStore",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameAvailabilityInformation": {
        "description": "Data Lake Analytics account name availability result information.",
        "properties": {
          "message": {
            "description": "The message describing why the Data Lake Analytics account name is not available, if nameAvailable is false.",
            "readOnly": true,
            "type": "string"
          },
          "nameAvailable": {
            "description": "The Boolean value of true or false to indicate whether the Data Lake Analytics account name is available or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "reason": {
            "description": "The reason why the Data Lake Analytics account name is not available, if nameAvailable is false.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "NestedResourceProvisioningState": {
        "description": "The current state of the NestedResourceProvisioning for this account.",
        "enum": [
          "Succeeded",
          "Canceled",
          "Failed"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "NestedResourceProvisioningState"
        }
      },
      "Operation": {
        "description": "An available operation for Data Lake Analytics.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "The display information for the operation.",
            "readOnly": true
          },
          "name": {
            "description": "The name of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "The intended executor of the operation.",
            "enum": [
              "user",
              "system",
              "user,system"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationOrigin"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/OperationMetaPropertyInfo",
            "description": "The OperationMetaPropertyInfo for the operation.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "The display information for a particular operation.",
        "properties": {
          "description": {
            "description": "A friendly description of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "A friendly name of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "The resource provider of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "The resource type of the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "The list of available operations for Data Lake Analytics.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "OperationMetaLogSpecification": {
        "properties": {
          "blobDuration": {
            "description": "The blobDuration for OperationMetaLogSpecification.",
            "type": "string"
          },
          "displayName": {
            "description": "The displayName for OperationMetaLogSpecification.",
            "type": "string"
          },
          "name": {
            "description": "The name for OperationMetaLogSpecification.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetaMetricAvailabilitiesSpecification": {
        "properties": {
          "blobDuration": {
            "description": "The blobDuration for OperationMetaMetricAvailabilitiesSpecification.",
            "type": "string"
          },
          "timeGrain": {
            "description": "The timegrain for OperationMetaMetricAvailabilitiesSpecification.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetaMetricSpecification": {
        "properties": {
          "aggregationType": {
            "description": "The aggregationType for OperationMetaMetricSpecification.",
            "type": "string"
          },
          "availabilities": {
            "description": "The availabilities for OperationMetaMetricSpecification.",
            "items": {
              "$ref": "#/components/schemas/OperationMetaMetricAvailabilitiesSpecification"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "displayDescription": {
            "description": "The displayName for OperationMetaMetricSpecification.",
            "type": "string"
          },
          "displayName": {
            "description": "The displayName for OperationMetaMetricSpecification.",
            "type": "string"
          },
          "name": {
            "description": "The name for OperationMetaMetricSpecification.",
            "type": "string"
          },
          "unit": {
            "description": "The unit for OperationMetaMetricSpecification.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationMetaPropertyInfo": {
        "properties": {
          "serviceSpecification": {
            "$ref": "#/components/schemas/OperationMetaServiceSpecification",
            "description": "The operations OperationMetaServiceSpecification."
          }
        },
        "type": "object"
      },
      "OperationMetaServiceSpecification": {
        "properties": {
          "logSpecifications": {
            "description": "The logSpecifications for OperationMetaServiceSpecification.",
            "items": {
              "$ref": "#/components/schemas/OperationMetaLogSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "metricSpecifications": {
            "description": "The metricSpecifications for OperationMetaServiceSpecification.",
            "items": {
              "$ref": "#/components/schemas/OperationMetaMetricSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The resource location.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "SasTokenInformation": {
        "description": "SAS token information.",
        "properties": {
          "accessToken": {
            "description": "The access token for the associated Azure Storage Container.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SasTokenInformationListResult": {
        "description": "The SAS response that contains the storage account, container and associated SAS token for connection use.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/SasTokenInformation"
            },
            "readOnly": true,
            "type": "array",
            "x-ms-identifiers": [
              "accessToken"
            ]
          }
        },
        "type": "object"
      },
      "StorageAccountInformation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Azure Storage account information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/StorageAccountInformationProperties",
            "description": "The Azure Storage account properties.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "StorageAccountInformationListResult": {
        "description": "Azure Storage account list information.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/StorageAccountInformation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StorageAccountInformationProperties": {
        "description": "The Azure Storage account properties.",
        "properties": {
          "suffix": {
            "description": "The optional suffix for the storage account.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "StorageContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Azure Storage blob container information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/StorageContainerProperties",
            "description": "The properties of the blob container.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "StorageContainerListResult": {
        "description": "The list of blob containers associated with the storage account attached to the Data Lake Analytics account.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/StorageContainer"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StorageContainerProperties": {
        "description": "Azure Storage blob container properties information.",
        "properties": {
          "lastModifiedTime": {
            "description": "The last modified time of the blob container.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubResource": {
        "description": "The resource model definition for a nested resource.",
        "properties": {
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "UpdateComputePolicyParameters": {
        "description": "The parameters used to update a compute policy.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UpdateComputePolicyProperties",
            "description": "The compute policy properties to use when updating a compute policy.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UpdateComputePolicyProperties": {
        "description": "The compute policy properties to use when updating a compute policy.",
        "properties": {
          "maxDegreeOfParallelismPerJob": {
            "description": "The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "objectId": {
            "description": "The AAD object identifier for the entity to create a policy for.",
            "format": "uuid",
            "type": "string"
          },
          "objectType": {
            "description": "The type of AAD object the object identifier refers to.",
            "enum": [
              "User",
              "Group",
              "ServicePrincipal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AADObjectType"
            }
          }
        },
        "type": "object"
      },
      "UpdateComputePolicyWithAccountParameters": {
        "description": "The parameters used to update a compute policy while updating a Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the compute policy to update.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UpdateComputePolicyProperties",
            "description": "The compute policy properties to use when updating a compute policy.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UpdateDataLakeAnalyticsAccountParameters": {
        "description": "The parameters that can be used to update an existing Data Lake Analytics account.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/UpdateDataLakeAnalyticsAccountProperties",
            "description": "The properties that can be updated in an existing Data Lake Analytics account.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UpdateDataLakeAnalyticsAccountProperties": {
        "description": "The properties to update that are associated with an underlying Data Lake Analytics account.",
        "properties": {
          "computePolicies": {
            "description": "The list of compute policies associated with this account.",
            "items": {
              "$ref": "#/components/schemas/UpdateComputePolicyWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "dataLakeStoreAccounts": {
            "description": "The list of Data Lake Store accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/UpdateDataLakeStoreWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "firewallAllowAzureIps": {
            "description": "The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallAllowAzureIpsState"
            }
          },
          "firewallRules": {
            "description": "The list of firewall rules associated with this account.",
            "items": {
              "$ref": "#/components/schemas/UpdateFirewallRuleWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "firewallState": {
            "description": "The current state of the IP address firewall for this account. Disabling the firewall does not remove existing rules, they will just be ignored until the firewall is re-enabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FirewallState"
            }
          },
          "maxDegreeOfParallelism": {
            "description": "The maximum supported degree of parallelism for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxDegreeOfParallelismPerJob": {
            "description": "The maximum supported degree of parallelism per job for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "maxJobCount": {
            "description": "The maximum supported jobs running under the account at the same time.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "minPriorityPerJob": {
            "description": "The minimum supported priority per job for this account.",
            "format": "int32",
            "minimum": 1,
            "type": "integer"
          },
          "newTier": {
            "description": "The commitment tier to use for next month.",
            "enum": [
              "Consumption",
              "Commitment_100AUHours",
              "Commitment_500AUHours",
              "Commitment_1000AUHours",
              "Commitment_5000AUHours",
              "Commitment_10000AUHours",
              "Commitment_50000AUHours",
              "Commitment_100000AUHours",
              "Commitment_500000AUHours"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TierType"
            }
          },
          "queryStoreRetention": {
            "description": "The number of days that job metadata is retained.",
            "format": "int32",
            "maximum": 180,
            "minimum": 1,
            "type": "integer"
          },
          "storageAccounts": {
            "description": "The list of Azure Blob storage accounts associated with this account.",
            "items": {
              "$ref": "#/components/schemas/UpdateStorageAccountWithAccountParameters"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "UpdateDataLakeStoreProperties": {
        "description": "The Data Lake Store account properties to use when updating a Data Lake Store account.",
        "properties": {
          "suffix": {
            "description": "The optional suffix for the Data Lake Store account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDataLakeStoreWithAccountParameters": {
        "description": "The parameters used to update a Data Lake Store account while updating a Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the Data Lake Store account to update.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UpdateDataLakeStoreProperties",
            "description": "The Data Lake Store account properties to use when updating a Data Lake Store account.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UpdateFirewallRuleParameters": {
        "description": "The parameters used to update a firewall rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UpdateFirewallRuleProperties",
            "description": "The firewall rule properties to use when updating a firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UpdateFirewallRuleProperties": {
        "description": "The firewall rule properties to use when updating a firewall rule.",
        "properties": {
          "endIpAddress": {
            "description": "The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "type": "string"
          },
          "startIpAddress": {
            "description": "The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateFirewallRuleWithAccountParameters": {
        "description": "The parameters used to update a firewall rule while updating a Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the firewall rule to update.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UpdateFirewallRuleProperties",
            "description": "The firewall rule properties to use when updating a firewall rule.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "UpdateStorageAccountParameters": {
        "description": "The parameters used to update an Azure Storage account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UpdateStorageAccountProperties",
            "description": "The Azure Storage account properties to use when updating an Azure Storage account.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UpdateStorageAccountProperties": {
        "description": "The Azure Storage account properties to use when updating an Azure Storage account.",
        "properties": {
          "accessKey": {
            "description": "The updated access key associated with this Azure Storage account that will be used to connect to it.",
            "type": "string"
          },
          "suffix": {
            "description": "The optional suffix for the storage account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateStorageAccountWithAccountParameters": {
        "description": "The parameters used to update an Azure Storage account while updating a Data Lake Analytics account.",
        "properties": {
          "name": {
            "description": "The unique name of the Azure Storage account to update.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/UpdateStorageAccountProperties",
            "description": "The Azure Storage account properties to use when updating an Azure Storage account.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "VirtualNetworkRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "Data Lake Analytics  VirtualNetwork Rule information.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/VirtualNetworkRuleProperties",
            "description": "The  VirtualNetwork rule properties.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleListResult": {
        "description": "Data Lake Analytics VirtualNetwork rule list information.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The results of the list operation.",
            "items": {
              "$ref": "#/components/schemas/VirtualNetworkRule"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleProperties": {
        "description": "The VirtualNetwork Rule properties.",
        "properties": {
          "subnetId": {
            "description": "The resource identifier for the subnet",
            "readOnly": true,
            "type": "string"
          },
          "virtualNetworkRuleState": {
            "$ref": "#/components/schemas/VirtualNetworkRuleState",
            "description": "The current state of the VirtualNetwork Rule",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "VirtualNetworkRuleState": {
        "description": "The current state of the VirtualNetworkRule for this account.",
        "enum": [
          "Active",
          "NetworkSourceDeleted",
          "Failed"
        ],
        "readOnly": true,
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "VirtualNetworkRuleState"
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}