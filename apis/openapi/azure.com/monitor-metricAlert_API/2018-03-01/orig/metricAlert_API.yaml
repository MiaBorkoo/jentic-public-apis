openapi: 3.0.0
info:
  description: Azure Monitor client to create/update/delete metric based alerts.
  title: MonitorManagementClient
  version: '2018-03-01'
  x-ms-code-generation-settings:
    name: MonitorManagementClient
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Insights/metricAlerts':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResourceCollection'
          description: Successful request for a list of metric alerts
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Retrieve alert rule definitions in a subscription.
      operationId: MetricAlerts_ListBySubscription
      x-ms-examples:
        List metric alert rules:
          $ref: ./examples/listMetricAlert.json
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResourceCollection'
          description: Successful request for a list of metric alerts
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Retrieve alert rule definitions in a resource group.
      operationId: MetricAlerts_ListByResourceGroup
      x-ms-examples:
        List metric alert rules:
          $ref: ./examples/listMetricAlert.json
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}':
    delete:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          description: Successful request to delete an metric alert rule
        '204':
          description: 'No content: the request was successful, but the response is empty'
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Delete an alert rule definition.
      operationId: MetricAlerts_Delete
      x-ms-examples:
        Delete an alert rule:
          $ref: ./examples/deleteMetricAlert.json
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
          description: Successful request for a list of metric alerts
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Retrieve an alert rule definition.
      operationId: MetricAlerts_Get
      x-ms-examples:
        Get a dynamic alert rule for multiple resources:
          $ref: ./examples/getDynamicMetricAlertMultipleResource.json
        Get a dynamic alert rule for single resource:
          $ref: ./examples/getDynamicMetricAlertSingleResource.json
        Get a web test alert rule:
          $ref: ./examples/getWebTestMetricAlert.json
        Get an alert rule for multiple resources:
          $ref: ./examples/getMetricAlertMultipleResource.json
        Get an alert rule for single resource:
          $ref: ./examples/getMetricAlertSingleResource.json
        Get an alert rule on resource group(s):
          $ref: ./examples/getMetricAlertResourceGroup.json
        Get an alert rule on subscription:
          $ref: ./examples/getMetricAlertSubscription.json
    patch:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Update an metric alert definition.
      operationId: MetricAlerts_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricAlertResourcePatch'
        description: The parameters of the rule to update.
        required: true
      x-ms-examples:
        Create or update an alert rule:
          $ref: ./examples/UpdateMetricAlert.json
    put:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertResource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlerts
      description: Create or update an metric alert definition.
      operationId: MetricAlerts_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricAlertResource'
        description: The parameters of the rule to create or update.
        required: true
      x-ms-examples:
        Create or update a dynamic alert rule for Multiple Resources:
          $ref: ./examples/createOrUpdateDynamicMetricAlertMultipleResource.json
        Create or update a dynamic alert rule for Single Resource:
          $ref: ./examples/createOrUpdateDynamicMetricAlertSingleResource.json
        Create or update a web test alert rule:
          $ref: ./examples/createOrUpdateWebTestMetricAlert.json
        Create or update an alert rule for Multiple Resource:
          $ref: ./examples/createOrUpdateMetricAlertMultipleResource.json
        Create or update an alert rule for Single Resource:
          $ref: ./examples/createOrUpdateMetricAlertSingleResource.json
        Create or update an alert rule on Resource group(s):
          $ref: ./examples/createOrUpdateMetricAlertResourceGroup.json
        'Create or update an alert rule on Subscription ':
          $ref: ./examples/createOrUpdateMetricAlertSubscription.json
        Create or update an alert rules with dimensions:
          $ref: ./examples/createOrUpdateMetricAlertWithDimensions.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}/status':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertStatusCollection'
          description: Successful request for a list of metric alerts
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlertsStatus
      description: Retrieve an alert rule status.
      operationId: MetricAlertsStatus_List
      x-ms-examples:
        Get an alert rule status:
          $ref: ./examples/getMetricAlertStatus.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/metricAlerts/{ruleName}/status/{statusName}':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/RuleNameParameter'
        - $ref: '#/components/parameters/StatusNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricAlertStatusCollection'
          description: Successful request for a list of metric alerts
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../stable/2016-03-01/alertRules_API.json#/definitions/ErrorResponse
          description: BadRequest
      tags:
        - MetricAlertsStatus
      description: Retrieve an alert rule status.
      operationId: MetricAlertsStatus_ListByName
      x-ms-examples:
        Get an alert rule status:
          $ref: ./examples/getMetricAlertStatusByName.json
components:
  parameters:
    RuleNameParameter:
      description: The name of the rule.
      in: path
      name: ruleName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    StatusNameParameter:
      description: The name of the status.
      in: path
      name: statusName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
  schemas:
    DynamicMetricCriteria:
      allOf:
        - $ref: '#/components/schemas/MultiMetricCriteria'
      description: Criterion for dynamic threshold.
      properties:
        alertSensitivity:
          description: >-
            The extent of deviation required to trigger an alert. This will
            affect how tight the threshold is to the metric series pattern.
          enum:
            - Low
            - Medium
            - High
          type: string
          x-ms-enum:
            modelAsString: true
            name: DynamicThresholdSensitivity
        failingPeriods:
          $ref: '#/components/schemas/DynamicThresholdFailingPeriods'
          description: >-
            The minimum number of violations required within the selected
            lookback time window required to raise an alert.
          type: object
        ignoreDataBefore:
          description: >-
            Use this option to set the date from which to start learning the
            metric historical data and calculate the dynamic thresholds (in
            ISO8601 format)
          format: date-time
          type: string
        operator:
          description: The operator used to compare the metric value against the threshold.
          enum:
            - GreaterThan
            - LessThan
            - GreaterOrLessThan
          type: string
          x-ms-enum:
            modelAsString: true
            name: DynamicThresholdOperator
      required:
        - operator
        - alertSensitivity
        - failingPeriods
      type: object
      x-ms-discriminator-value: DynamicThresholdCriterion
    DynamicThresholdFailingPeriods:
      description: >-
        The minimum number of violations required within the selected lookback
        time window required to raise an alert.
      properties:
        minFailingPeriodsToAlert:
          description: >-
            The number of violations to trigger an alert. Should be smaller or
            equal to numberOfEvaluationPeriods.
          type: number
        numberOfEvaluationPeriods:
          description: >-
            The number of aggregated lookback points. The lookback time window
            is calculated based on the aggregation granularity (windowSize) and
            the selected number of aggregated points.
          type: number
      required:
        - numberOfEvaluationPeriods
        - minFailingPeriodsToAlert
      type: object
    MetricAlertAction:
      description: An alert action.
      properties:
        actionGroupId:
          description: the id of the action group to use.
          type: string
        webHookProperties:
          additionalProperties:
            description: >-
              the dictionary of custom properties to include with the post
              operation. These data are appended to the webhook payload.
            type: string
          description: >-
            This field allows specifying custom properties, which would be
            appended to the alert payload sent as input to the webhook.
          type: object
      type: object
    MetricAlertCriteria:
      additionalProperties:
        type: object
      description: The rule criteria that defines the conditions of the alert rule.
      discriminator:
        propertyName: odata.type
      properties:
        odata.type:
          description: specifies the type of the alert criteria.
          enum:
            - Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria
            - Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria
            - Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria
          type: string
          x-ms-enum:
            modelAsString: true
            name: odatatype
      required:
        - odata.type
      type: object
    MetricAlertMultipleResourceMultipleMetricCriteria:
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      description: >-
        Specifies the metric alert criteria for multiple resource that has
        multiple metric criteria.
      properties:
        allOf:
          description: 'the list of multiple metric criteria for this ''all of'' operation. '
          items:
            $ref: '#/components/schemas/MultiMetricCriteria'
          type: array
          x-ms-identifiers:
            - name
      type: object
      x-ms-discriminator-value: Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria
    MetricAlertProperties:
      description: An alert rule.
      properties:
        actions:
          description: >-
            the array of actions that are performed when the alert rule becomes
            active, and when an alert condition is resolved.
          items:
            $ref: '#/components/schemas/MetricAlertAction'
          type: array
          x-ms-identifiers:
            - actionGroupId
        autoMitigate:
          description: >-
            the flag that indicates whether the alert should be auto resolved or
            not. The default is true.
          type: boolean
        criteria:
          $ref: '#/components/schemas/MetricAlertCriteria'
          description: defines the specific alert criteria information.
        description:
          description: >-
            the description of the metric alert that will be included in the
            alert email.
          type: string
        enabled:
          description: the flag that indicates whether the metric alert is enabled.
          type: boolean
        evaluationFrequency:
          description: >-
            how often the metric alert is evaluated represented in ISO 8601
            duration format.
          format: duration
          type: string
        isMigrated:
          description: the value indicating whether this alert rule is migrated.
          readOnly: true
          type: boolean
        lastUpdatedTime:
          description: Last time the rule was updated in ISO8601 format.
          format: date-time
          readOnly: true
          type: string
        scopes:
          description: the list of resource id's that this metric alert is scoped to.
          items:
            type: string
          type: array
        severity:
          description: 'Alert severity {0, 1, 2, 3, 4}'
          format: int32
          type: integer
        targetResourceRegion:
          description: >-
            the region of the target resource(s) on which the alert is
            created/updated. Mandatory if the scope contains a subscription,
            resource group, or more than one resource.
          type: string
        targetResourceType:
          description: >-
            the resource type of the target resource(s) on which the alert is
            created/updated. Mandatory if the scope contains a subscription,
            resource group, or more than one resource.
          type: string
        windowSize:
          description: >-
            the period of time (in ISO 8601 duration format) that is used to
            monitor alert activity based on the threshold.
          format: duration
          type: string
      required:
        - enabled
        - severity
        - evaluationFrequency
        - windowSize
        - criteria
        - scopes
      type: object
    MetricAlertPropertiesPatch:
      description: An alert rule properties for patch.
      properties:
        actions:
          description: >-
            the array of actions that are performed when the alert rule becomes
            active, and when an alert condition is resolved.
          items:
            $ref: '#/components/schemas/MetricAlertAction'
          type: array
          x-ms-identifiers:
            - actionGroupId
        autoMitigate:
          description: >-
            the flag that indicates whether the alert should be auto resolved or
            not. The default is true.
          type: boolean
        criteria:
          $ref: '#/components/schemas/MetricAlertCriteria'
          description: defines the specific alert criteria information.
        description:
          description: >-
            the description of the metric alert that will be included in the
            alert email.
          type: string
        enabled:
          description: the flag that indicates whether the metric alert is enabled.
          type: boolean
        evaluationFrequency:
          description: >-
            how often the metric alert is evaluated represented in ISO 8601
            duration format.
          format: duration
          type: string
        isMigrated:
          description: the value indicating whether this alert rule is migrated.
          readOnly: true
          type: boolean
        lastUpdatedTime:
          description: Last time the rule was updated in ISO8601 format.
          format: date-time
          readOnly: true
          type: string
        scopes:
          description: the list of resource id's that this metric alert is scoped to.
          items:
            type: string
          type: array
        severity:
          description: 'Alert severity {0, 1, 2, 3, 4}'
          format: int32
          type: integer
        targetResourceRegion:
          description: >-
            the region of the target resource(s) on which the alert is
            created/updated. Mandatory for
            MultipleResourceMultipleMetricCriteria.
          type: string
        targetResourceType:
          description: >-
            the resource type of the target resource(s) on which the alert is
            created/updated. Mandatory for
            MultipleResourceMultipleMetricCriteria.
          type: string
        windowSize:
          description: >-
            the period of time (in ISO 8601 duration format) that is used to
            monitor alert activity based on the threshold.
          format: duration
          type: string
      type: object
    MetricAlertResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The metric alert resource.
      properties:
        properties:
          $ref: '#/components/schemas/MetricAlertProperties'
          description: The alert rule properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    MetricAlertResourceCollection:
      description: Represents a collection of alert rule resources.
      properties:
        value:
          description: the values for the alert rule resources.
          items:
            $ref: '#/components/schemas/MetricAlertResource'
          type: array
      type: object
    MetricAlertResourcePatch:
      description: The metric alert resource for patch operations.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
        properties:
          $ref: '#/components/schemas/MetricAlertPropertiesPatch'
          description: The alert rule properties of the resource.
          x-ms-client-flatten: true
      type: object
    MetricAlertSingleResourceMultipleMetricCriteria:
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      description: >-
        Specifies the metric alert criteria for a single resource that has
        multiple metric criteria.
      properties:
        allOf:
          description: 'The list of metric criteria for this ''all of'' operation. '
          items:
            $ref: '#/components/schemas/MetricCriteria'
          type: array
          x-ms-identifiers:
            - name
      type: object
      x-ms-discriminator-value: Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria
    MetricAlertStatus:
      description: An alert status.
      properties:
        id:
          description: The alert rule arm id.
          type: string
        name:
          description: The status name.
          type: string
        properties:
          $ref: '#/components/schemas/MetricAlertStatusProperties'
          description: The alert status properties of the metric alert status.
          x-ms-client-flatten: false
        type:
          description: The extended resource type name.
          type: string
      type: object
    MetricAlertStatusCollection:
      description: Represents a collection of alert rule resources.
      properties:
        value:
          description: the values for the alert rule resources.
          items:
            $ref: '#/components/schemas/MetricAlertStatus'
          type: array
      type: object
    MetricAlertStatusProperties:
      description: An alert status properties.
      properties:
        dimensions:
          additionalProperties:
            type: string
          description: An object describing the type of the dimensions.
          type: object
        status:
          description: status value
          type: string
        timestamp:
          description: UTC time when the status was checked.
          format: date-time
          type: string
      type: object
    MetricCriteria:
      allOf:
        - $ref: '#/components/schemas/MultiMetricCriteria'
      description: Criterion to filter metrics.
      properties:
        operator:
          description: the criteria operator.
          enum:
            - Equals
            - GreaterThan
            - GreaterThanOrEqual
            - LessThan
            - LessThanOrEqual
          type: string
          x-ms-enum:
            modelAsString: true
            name: Operator
        threshold:
          description: the criteria threshold value that activates the alert.
          format: double
          type: number
      required:
        - operator
        - threshold
      type: object
      x-ms-discriminator-value: StaticThresholdCriterion
    MetricDimension:
      description: Specifies a metric dimension.
      properties:
        name:
          description: Name of the dimension.
          type: string
        operator:
          description: the dimension operator. Only 'Include' and 'Exclude' are supported
          type: string
        values:
          description: list of dimension values.
          items:
            type: string
          type: array
      required:
        - name
        - operator
        - values
      type: object
    MultiMetricCriteria:
      additionalProperties:
        type: object
      description: The types of conditions for a multi resource alert.
      discriminator:
        propertyName: criterionType
      properties:
        criterionType:
          description: Specifies the type of threshold criteria
          enum:
            - StaticThresholdCriterion
            - DynamicThresholdCriterion
          type: string
          x-ms-enum:
            modelAsString: true
            name: criterionType
        dimensions:
          description: List of dimension conditions.
          items:
            $ref: '#/components/schemas/MetricDimension'
          type: array
          x-ms-identifiers:
            - name
        metricName:
          description: Name of the metric.
          type: string
        metricNamespace:
          description: Namespace of the metric.
          type: string
        name:
          description: Name of the criteria.
          type: string
        skipMetricValidation:
          description: >-
            Allows creating an alert rule on a custom metric that isn't yet
            emitted, by causing the metric validation to be skipped.
          type: boolean
        timeAggregation:
          description: the criteria time aggregation types.
          enum:
            - Average
            - Count
            - Minimum
            - Maximum
            - Total
          type: string
          x-ms-enum:
            modelAsString: true
            name: AggregationTypeEnum
      required:
        - criterionType
        - name
        - metricName
        - timeAggregation
      type: object
    Resource:
      description: An azure resource object
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
        id:
          description: Azure resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
          x-ms-mutability:
            - create
            - read
        name:
          description: Azure resource name
          readOnly: true
          type: string
        type:
          description: Azure resource type
          readOnly: true
          type: string
      required:
        - location
      type: object
      x-ms-azure-resource: true
    WebtestLocationAvailabilityCriteria:
      allOf:
        - $ref: '#/components/schemas/MetricAlertCriteria'
      description: Specifies the metric alert rule criteria for a web test resource.
      properties:
        componentId:
          description: The Application Insights resource Id.
          type: string
        failedLocationCount:
          description: The number of failed locations.
          type: number
        webTestId:
          description: The Application Insights web test Id.
          type: string
      required:
        - webTestId
        - componentId
        - failedLocationCount
      type: object
      x-ms-discriminator-value: Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

