openapi: 3.0.0
info:
  title: LUIS Runtime Client
  version: '2.0'
servers:
  - url: '{Endpoint}/luis/v2.0'
    variables:
      Endpoint:
        description: >-
          Supported Cognitive Services endpoints (protocol and hostname, for
          example: https://westus.api.cognitive.microsoft.com).
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  '/apps/{appId}':
    get:
      parameters:
        - description: The LUIS application ID (guid).
          in: path
          name: appId
          required: true
          schema:
            format: uuid
            type: string
        - description: The utterance to predict.
          in: query
          name: q
          required: true
          schema:
            maxLength: 500
            type: string
          x-ms-client-name: query
        - description: The timezone offset for the location of the request.
          in: query
          name: timezoneOffset
          schema:
            type: number
        - description: 'If true, return all intents instead of just the top scoring intent.'
          in: query
          name: verbose
          schema:
            type: boolean
        - description: Use the staging endpoint slot.
          in: query
          name: staging
          schema:
            type: boolean
        - description: Enable spell checking.
          in: query
          name: spellCheck
          schema:
            type: boolean
        - description: The subscription key to use when enabling Bing spell check
          in: query
          name: bing-spell-check-subscription-key
          schema:
            type: string
        - description: Log query (default is true)
          in: query
          name: log
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LuisResult'
          description: >-
            Prediction, based on the input query, containing intent(s) and
            entities.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      description: >-
        Gets predictions for a given utterance, in the form of intents and
        entities. The current maximum query size is 500 characters.
      operationId: Prediction_Resolve2
      x-ms-examples:
        Successful Get Predictions From Endpoint Via Get request:
          $ref: >-
            ./examples/prediction/SuccessfulGetPredictionsFromEndpointViaGetRequest.json
    post:
      parameters:
        - description: The LUIS application ID (Guid).
          in: path
          name: appId
          required: true
          schema:
            format: uuid
            type: string
        - description: The timezone offset for the location of the request.
          in: query
          name: timezoneOffset
          schema:
            type: number
        - description: 'If true, return all intents instead of just the top scoring intent.'
          in: query
          name: verbose
          schema:
            type: boolean
        - description: Use the staging endpoint slot.
          in: query
          name: staging
          schema:
            type: boolean
        - description: Enable spell checking.
          in: query
          name: spellCheck
          schema:
            type: boolean
        - description: The subscription key to use when enabling Bing spell check
          in: query
          name: bing-spell-check-subscription-key
          schema:
            type: string
        - description: Log query (default is true)
          in: query
          name: log
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LuisResult'
          description: >-
            Prediction, based on the input query, containing intent(s) and
            entities.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Error response.
      description: >-
        Gets predictions for a given utterance, in the form of intents and
        entities. The current maximum query size is 500 characters.
      operationId: Prediction_Resolve
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Q'
        description: The utterance to predict.
        required: true
      x-ms-examples:
        Successful Get Predictions From Endpoint Via Post request:
          $ref: >-
            ./examples/prediction/SuccessfulGetPredictionsFromEndpointViaPostRequest.json
components:
  parameters:
    Endpoint:
      description: >-
        Supported Cognitive Services endpoints (protocol and hostname, for
        example: https://westus.api.cognitive.microsoft.com).
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    APIError:
      description: Error information returned by the API
      properties:
        message:
          description: Cause of the error.
          type: string
        statusCode:
          description: HTTP Status code
          type: string
      type: object
    CompositeChildModel:
      description: Child entity in a LUIS Composite Entity.
      properties:
        type:
          description: Type of child entity.
          type: string
        value:
          description: Value extracted by LUIS.
          type: string
      required:
        - type
        - value
      type: object
    CompositeEntityModel:
      description: LUIS Composite Entity.
      properties:
        children:
          description: Child entities.
          items:
            $ref: '#/components/schemas/CompositeChildModel'
          type: array
        parentType:
          description: Type/name of parent entity.
          type: string
        value:
          description: Value for composite entity extracted by LUIS.
          type: string
      required:
        - parentType
        - value
        - children
      type: object
    EntityModel:
      additionalProperties:
        description: >-
          List of additional properties. For example, score and resolution
          values for pre-built LUIS entities.
        type: object
      description: An entity extracted from the utterance.
      properties:
        endIndex:
          description: >-
            The position of the last character of the matched entity within the
            utterance.
          type: integer
        entity:
          description: 'Name of the entity, as defined in LUIS.'
          type: string
        startIndex:
          description: >-
            The position of the first character of the matched entity within the
            utterance.
          type: integer
        type:
          description: 'Type of the entity, as defined in LUIS.'
          type: string
      required:
        - entity
        - type
        - startIndex
        - endIndex
      type: object
    EntityWithResolution:
      allOf:
        - $ref: '#/components/schemas/EntityModel'
        - properties:
            resolution:
              description: Resolution values for pre-built LUIS entities.
              type: object
          required:
            - resolution
          type: object
    EntityWithScore:
      allOf:
        - $ref: '#/components/schemas/EntityModel'
        - properties:
            score:
              description: Associated prediction score for the intent (float).
              maximum: 1
              minimum: 0
              type: number
          required:
            - score
          type: object
    IntentModel:
      description: An intent detected from the utterance.
      properties:
        intent:
          description: 'Name of the intent, as defined in LUIS.'
          type: string
        score:
          description: Associated prediction score for the intent (float).
          maximum: 1
          minimum: 0
          type: number
      type: object
    LuisResult:
      description: 'Prediction, based on the input query, containing intent(s) and entities.'
      properties:
        alteredQuery:
          description: The corrected utterance (when spell checking was enabled).
          type: string
        compositeEntities:
          description: The composite entities extracted from the utterance.
          items:
            $ref: '#/components/schemas/CompositeEntityModel'
          type: array
        connectedServiceResult:
          $ref: '#/components/schemas/LuisResult'
        entities:
          description: The entities extracted from the utterance.
          items:
            $ref: '#/components/schemas/EntityModel'
          type: array
        intents:
          description: All the intents (and their score) that were detected from utterance.
          items:
            $ref: '#/components/schemas/IntentModel'
          type: array
        query:
          description: The input utterance that was analyzed.
          type: string
        sentimentAnalysis:
          $ref: '#/components/schemas/Sentiment'
        topScoringIntent:
          $ref: '#/components/schemas/IntentModel'
      type: object
    Q:
      description: The utterance to predict.
      example: '"forward to frank 30 dollars through HSBC"'
      maxLength: 500
      type: string
    Sentiment:
      description: Sentiment of the input utterance.
      properties:
        label:
          description: 'The polarity of the sentiment, can be positive, neutral or negative.'
          type: string
        score:
          description: >-
            Score of the sentiment, ranges from 0 (most negative) to 1 (most
            positive).
          type: number
      type: object
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
security:
  - apiKeyHeader: []

