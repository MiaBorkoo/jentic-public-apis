{
  "openapi": "3.0.0",
  "info": {
    "description": "APIs to manage Peering resources through the Azure Resource Manager.",
    "title": "PeeringManagementClient",
    "version": "2019-08-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/peering/resource-manager/Microsoft.Peering/preview/2019-08-01-preview/peering.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Peering/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available API operations for peering resources.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List peering operations": {
            "$ref": "./examples/ListPeeringOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/CheckServiceProviderAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "enum": [
                    "Available",
                    "UnAvailable"
                  ],
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "CheckServiceProviderAvailability"
        ],
        "description": "Checks if the peering service provider is present within 1000 miles of customer's location",
        "operationId": "CheckServiceProviderAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckServiceProviderAvailabilityInput"
              }
            }
          },
          "description": "The CheckServiceProviderAvailabilityInput\r\n            indicating customer location and service provider.",
          "required": true
        },
        "x-ms-examples": {
          "Check if peering service provider is available in customer location": {
            "$ref": "./examples/CheckServiceProviderAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/legacyPeerings": {
      "get": {
        "parameters": [
          {
            "description": "The location of the peering.",
            "in": "query",
            "name": "peeringLocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The kind of the peering.",
            "in": "query",
            "name": "kind",
            "required": true,
            "schema": {
              "enum": [
                "Direct",
                "Exchange"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "LegacyPeerings"
        ],
        "description": "Lists all of the legacy peerings under the given subscription matching the specified kind and location.",
        "operationId": "LegacyPeerings_List",
        "x-ms-examples": {
          "List legacy peerings": {
            "$ref": "./examples/ListLegacyPeerings.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerAsnListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeerAsns"
        ],
        "description": "Lists all of the peer ASNs under the given subscription.",
        "operationId": "PeerAsns_ListBySubscription",
        "x-ms-examples": {
          "List peer ASNs in a subscription": {
            "$ref": "./examples/ListPeerAsnsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerAsns/{peerAsnName}": {
      "delete": {
        "parameters": [
          {
            "description": "The peer ASN name.",
            "in": "path",
            "name": "peerAsnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeerAsns"
        ],
        "description": "Deletes an existing peer ASN with the specified name under the given subscription.",
        "operationId": "PeerAsns_Delete",
        "x-ms-examples": {
          "Delete a peer ASN": {
            "$ref": "./examples/DeletePeerAsn.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The peer ASN name.",
            "in": "path",
            "name": "peerAsnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerAsn"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeerAsns"
        ],
        "description": "Gets the peer ASN with the specified name under the given subscription.",
        "operationId": "PeerAsns_Get",
        "x-ms-examples": {
          "Get a peer ASN": {
            "$ref": "./examples/GetPeerAsn.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The peer ASN name.",
            "in": "path",
            "name": "peerAsnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerAsn"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeerAsn"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeerAsns"
        ],
        "description": "Creates a new peer ASN or updates an existing peer ASN with the specified name under the given subscription.",
        "operationId": "PeerAsns_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeerAsn"
              }
            }
          },
          "description": "The peer ASN.",
          "required": true
        },
        "x-ms-examples": {
          "Create a peer ASN": {
            "$ref": "./examples/CreatePeerAsn.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringLocations": {
      "get": {
        "parameters": [
          {
            "description": "The kind of the peering.",
            "in": "query",
            "name": "kind",
            "required": true,
            "schema": {
              "enum": [
                "Direct",
                "Exchange"
              ],
              "type": "string"
            }
          },
          {
            "description": "The type of direct peering.",
            "in": "query",
            "name": "directPeeringType",
            "required": false,
            "schema": {
              "enum": [
                "Edge",
                "Transit",
                "Cdn",
                "Internal"
              ],
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringLocationListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringLocations"
        ],
        "description": "Lists all of the available peering locations for the specified kind of peering.",
        "operationId": "PeeringLocations_List",
        "x-ms-examples": {
          "List direct peering locations": {
            "$ref": "./examples/ListDirectPeeringLocations.json"
          },
          "List exchange peering locations": {
            "$ref": "./examples/ListExchangePeeringLocations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceLocations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServiceLocationListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServiceLocations"
        ],
        "description": "Lists all of the available peering service locations for the specified kind of peering.",
        "operationId": "PeeringServiceLocations_List",
        "x-ms-examples": {
          "List peering service locations": {
            "$ref": "./examples/ListPeeringServiceLocations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServiceProviders": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServiceProviderListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServiceProviders"
        ],
        "description": "Lists all of the available peering service locations for the specified kind of peering.",
        "operationId": "PeeringServiceProviders_List",
        "x-ms-examples": {
          "List peering service providers": {
            "$ref": "./examples/ListPeeringServiceProviders.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peeringServices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServiceListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Lists all of the peerings under the given subscription.",
        "operationId": "PeeringServices_ListBySubscription",
        "x-ms-examples": {
          "List peering services in a subscription": {
            "$ref": "./examples/ListPeeringServicesBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Peering/peerings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Lists all of the peerings under the given subscription.",
        "operationId": "Peerings_ListBySubscription",
        "x-ms-examples": {
          "List peerings in a subscription": {
            "$ref": "./examples/ListPeeringsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServiceListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Lists all of the peering services under the given subscription and resource group.",
        "operationId": "PeeringServices_ListByResourceGroup",
        "x-ms-examples": {
          "List peering services in a resource group": {
            "$ref": "./examples/ListPeeringServicesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering service.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Deletes an existing peering service with the specified name under the given subscription and resource group.",
        "operationId": "PeeringServices_Delete",
        "x-ms-examples": {
          "Delete a peering service": {
            "$ref": "./examples/DeletePeeringService.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringService"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Gets an existing peering service with the specified name under the given subscription and resource group.",
        "operationId": "PeeringServices_Get",
        "x-ms-examples": {
          "Get a peering service": {
            "$ref": "./examples/GetPeeringService.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering service.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringService"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Updates tags for a peering service with the specified name under the given subscription and resource group.",
        "operationId": "PeeringServices_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceTags"
              }
            }
          },
          "description": "The resource tags.",
          "required": true
        },
        "x-ms-examples": {
          "Update peering service tags": {
            "$ref": "./examples/UpdatePeeringServiceTags.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering service.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringService"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringService"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServices"
        ],
        "description": "Creates a new peering service or updates an existing peering with the specified name under the given subscription and resource group.",
        "operationId": "PeeringServices_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeeringService"
              }
            }
          },
          "description": "The properties needed to create or update a peering service.",
          "required": true
        },
        "x-ms-examples": {
          "Create a  peering service": {
            "$ref": "./examples/CreatePeeringService.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes": {
      "get": {
        "parameters": [
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The peering service name.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServicePrefixListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServicePrefixes"
        ],
        "description": "Lists the peerings prefix in the resource group.",
        "operationId": "Prefixes_ListByPeeringService",
        "x-ms-examples": {
          "List all the prefixes associated with the peering service": {
            "$ref": "./examples/ListPrefixesByPeeringService.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peeringServices/{peeringServiceName}/prefixes/{prefixName}": {
      "delete": {
        "parameters": [
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The peering service name.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The prefix name",
            "in": "path",
            "name": "prefixName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServicePrefixes"
        ],
        "description": "removes the peering prefix.",
        "operationId": "PeeringServicePrefixes_Delete",
        "x-ms-examples": {
          "Delete a prefix associated with the peering service": {
            "$ref": "./examples/DeletePeeringServicePrefix.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The peering service name.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The prefix name.",
            "in": "path",
            "name": "prefixName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServicePrefix"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServicePrefixes"
        ],
        "description": "Gets the peering service prefix.",
        "operationId": "PeeringServicePrefixes_Get",
        "x-ms-examples": {
          "Get a prefix associated with the peering service": {
            "$ref": "./examples/GetPeeringServicePrefix.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The peering service name.",
            "in": "path",
            "name": "peeringServiceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The prefix name",
            "in": "path",
            "name": "prefixName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServicePrefix"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringServicePrefix"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "PeeringServicePrefixes"
        ],
        "description": "Creates or updates the peering prefix.",
        "operationId": "PeeringServicePrefixes_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeeringServicePrefix"
              }
            }
          },
          "description": "The IP prefix for an peering",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a prefix for the peering service": {
            "$ref": "./examples/CreatePeeringServicePrefix.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeeringListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Lists all of the peerings under the given subscription and resource group.",
        "operationId": "Peerings_ListByResourceGroup",
        "x-ms-examples": {
          "List peerings in a resource group": {
            "$ref": "./examples/ListPeeringsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Peering/peerings/{peeringName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Deletes an existing peering with the specified name under the given subscription and resource group.",
        "operationId": "Peerings_Delete",
        "x-ms-examples": {
          "Delete a peering": {
            "$ref": "./examples/DeletePeering.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peering"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Gets an existing peering with the specified name under the given subscription and resource group.",
        "operationId": "Peerings_Get",
        "x-ms-examples": {
          "Get a peering": {
            "$ref": "./examples/GetPeering.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peering"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Updates tags for a peering with the specified name under the given subscription and resource group.",
        "operationId": "Peerings_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourceTags"
              }
            }
          },
          "description": "The resource tags.",
          "required": true
        },
        "x-ms-examples": {
          "Update peering tags": {
            "$ref": "./examples/UpdatePeeringTags.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peering"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Peering"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation has failed."
          }
        },
        "tags": [
          "Peerings"
        ],
        "description": "Creates a new peering or updates an existing peering with the specified name under the given subscription and resource group.",
        "operationId": "Peerings_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Peering"
              }
            }
          },
          "description": "The properties needed to create or update a peering.",
          "required": true
        },
        "x-ms-examples": {
          "Create a direct peering": {
            "$ref": "./examples/CreateDirectPeering.json"
          },
          "Create an exchange peering": {
            "$ref": "./examples/CreateExchangePeering.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The Azure subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "ResourceTags": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ResourceTags"
            }
          }
        },
        "description": "The resource tags.",
        "required": true
      }
    },
    "schemas": {
      "BgpSession": {
        "description": "The properties that define a BGP session.",
        "properties": {
          "maxPrefixesAdvertisedV4": {
            "description": "The maximum number of prefixes advertised over the IPv4 session.",
            "format": "int32",
            "type": "integer"
          },
          "maxPrefixesAdvertisedV6": {
            "description": "The maximum number of prefixes advertised over the IPv6 session.",
            "format": "int32",
            "type": "integer"
          },
          "md5AuthenticationKey": {
            "description": "The MD5 authentication key of the session.",
            "type": "string"
          },
          "microsoftSessionIPv4Address": {
            "description": "The IPv4 session address on Microsoft's end.",
            "readOnly": true,
            "type": "string"
          },
          "microsoftSessionIPv6Address": {
            "description": "The IPv6 session address on Microsoft's end.",
            "readOnly": true,
            "type": "string"
          },
          "peerSessionIPv4Address": {
            "description": "The IPv4 session address on peer's end.",
            "type": "string"
          },
          "peerSessionIPv6Address": {
            "description": "The IPv6 session address on peer's end.",
            "type": "string"
          },
          "sessionPrefixV4": {
            "description": "The IPv4 prefix that contains both ends' IPv4 addresses.",
            "type": "string"
          },
          "sessionPrefixV6": {
            "description": "The IPv6 prefix that contains both ends' IPv6 addresses.",
            "type": "string"
          },
          "sessionStateV4": {
            "description": "The state of the IPv4 session.",
            "enum": [
              "None",
              "Idle",
              "Connect",
              "Active",
              "OpenSent",
              "OpenConfirm",
              "OpenReceived",
              "Established",
              "PendingAdd",
              "PendingUpdate",
              "PendingRemove"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "sessionStateV4"
            }
          },
          "sessionStateV6": {
            "description": "The state of the IPv6 session.",
            "enum": [
              "None",
              "Idle",
              "Connect",
              "Active",
              "OpenSent",
              "OpenConfirm",
              "OpenReceived",
              "Established",
              "PendingAdd",
              "PendingUpdate",
              "PendingRemove"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "sessionStateV6"
            }
          }
        },
        "type": "object"
      },
      "CheckServiceProviderAvailabilityInput": {
        "description": "Class for CheckServiceProviderAvailabilityInput",
        "properties": {
          "peeringServiceLocation": {
            "description": "Gets or sets the PeeringServiceLocation",
            "type": "string"
          },
          "peeringServiceProvider": {
            "description": "Gets or sets the PeeringServiceProvider",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContactInfo": {
        "description": "The contact information of the peer.",
        "properties": {
          "emails": {
            "description": "The list of email addresses.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "phone": {
            "description": "The list of contact numbers.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DirectConnection": {
        "description": "The properties that define a direct connection.",
        "properties": {
          "bandwidthInMbps": {
            "description": "The bandwidth of the connection.",
            "format": "int32",
            "type": "integer"
          },
          "bgpSession": {
            "$ref": "#/components/schemas/BgpSession",
            "description": "The BGP session associated with the connection."
          },
          "connectionIdentifier": {
            "description": "The unique identifier (GUID) for the connection.",
            "type": "string"
          },
          "connectionState": {
            "description": "The state of the connection.",
            "enum": [
              "None",
              "PendingApproval",
              "Approved",
              "ProvisioningStarted",
              "ProvisioningFailed",
              "ProvisioningCompleted",
              "Validating",
              "Active"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "connectionState"
            }
          },
          "peeringDBFacilityId": {
            "description": "The PeeringDB.com ID of the facility at which the connection has to be set up.",
            "format": "int32",
            "type": "integer"
          },
          "provisionedBandwidthInMbps": {
            "description": "The bandwidth that is actually provisioned.",
            "format": "int32",
            "type": "integer"
          },
          "sessionAddressProvider": {
            "description": "The field indicating if Microsoft provides session ip addresses.",
            "enum": [
              "Microsoft",
              "Peer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "sessionAddressProvider"
            }
          },
          "useForPeeringService": {
            "description": "The flag that indicates whether or not the connection is used for peering service.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DirectPeeringFacility": {
        "description": "The properties that define a direct peering facility.",
        "properties": {
          "address": {
            "description": "The address of the direct peering facility.",
            "type": "string"
          },
          "directPeeringType": {
            "description": "The type of the direct peering.",
            "enum": [
              "Edge",
              "Transit",
              "Cdn",
              "Internal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "directPeeringType"
            }
          },
          "peeringDBFacilityId": {
            "description": "The PeeringDB.com ID of the facility.",
            "format": "int32",
            "type": "integer"
          },
          "peeringDBFacilityLink": {
            "description": "The PeeringDB.com URL of the facility.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "The error response that indicates why an operation has failed.",
        "properties": {
          "code": {
            "description": "The error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExchangeConnection": {
        "description": "The properties that define an exchange connection.",
        "properties": {
          "bgpSession": {
            "$ref": "#/components/schemas/BgpSession",
            "description": "The BGP session associated with the connection."
          },
          "connectionIdentifier": {
            "description": "The unique identifier (GUID) for the connection.",
            "type": "string"
          },
          "connectionState": {
            "description": "The state of the connection.",
            "enum": [
              "None",
              "PendingApproval",
              "Approved",
              "ProvisioningStarted",
              "ProvisioningFailed",
              "ProvisioningCompleted",
              "Validating",
              "Active"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "connectionState"
            }
          },
          "peeringDBFacilityId": {
            "description": "The PeeringDB.com ID of the facility at which the connection has to be set up.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExchangePeeringFacility": {
        "description": "The properties that define an exchange peering facility.",
        "properties": {
          "bandwidthInMbps": {
            "description": "The bandwidth of the connection between Microsoft and the exchange peering facility.",
            "format": "int32",
            "type": "integer"
          },
          "exchangeName": {
            "description": "The name of the exchange peering facility.",
            "type": "string"
          },
          "facilityIPv4Prefix": {
            "description": "The IPv4 prefixes associated with the exchange peering facility.",
            "type": "string"
          },
          "facilityIPv6Prefix": {
            "description": "The IPv6 prefixes associated with the exchange peering facility.",
            "type": "string"
          },
          "microsoftIPv4Address": {
            "description": "The IPv4 address of Microsoft at the exchange peering facility.",
            "type": "string"
          },
          "microsoftIPv6Address": {
            "description": "The IPv6 address of Microsoft at the exchange peering facility.",
            "type": "string"
          },
          "peeringDBFacilityId": {
            "description": "The PeeringDB.com ID of the facility.",
            "format": "int32",
            "type": "integer"
          },
          "peeringDBFacilityLink": {
            "description": "The PeeringDB.com URL of the facility.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "The peering API operation.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplayInfo",
            "description": "The information related to the operation.",
            "readOnly": true
          },
          "isDataAction": {
            "description": "The flag that indicates whether the operation applies to data plane.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "The name of the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDisplayInfo": {
        "description": "The information related to the operation.",
        "properties": {
          "description": {
            "description": "The description of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "The name of the operation.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "The name of the resource provider.",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "The paginated list of peering API operations.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peering API operations.",
            "type": "string"
          },
          "value": {
            "description": "The list of peering API operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeerAsn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The essential information related to the peer's ASN.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PeerAsnProperties",
            "description": "The properties that define a peer's ASN.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PeerAsnListResult": {
        "description": "The paginated list of peer ASNs.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peer ASNs.",
            "type": "string"
          },
          "value": {
            "description": "The list of peer ASNs.",
            "items": {
              "$ref": "#/components/schemas/PeerAsn"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeerAsnProperties": {
        "description": "The properties that define a peer's ASN.",
        "properties": {
          "peerAsn": {
            "description": "The Autonomous System Number (ASN) of the peer.",
            "format": "int32",
            "type": "integer"
          },
          "peerContactInfo": {
            "$ref": "#/components/schemas/ContactInfo",
            "description": "The contact information of the peer."
          },
          "peerName": {
            "description": "The name of the peer.",
            "type": "string"
          },
          "validationState": {
            "description": "The validation state of the ASN associated with the peer.",
            "enum": [
              "None",
              "Pending",
              "Approved",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "validationState"
            }
          }
        },
        "type": "object"
      },
      "Peering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Peering is a logical representation of a set of connections to the Microsoft Cloud Edge at a location.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "kind": {
            "description": "The kind of the peering.",
            "enum": [
              "Direct",
              "Exchange"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "kind"
            }
          },
          "location": {
            "description": "The location of the resource.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/PeeringProperties",
            "description": "The properties that define a peering.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/PeeringSku",
            "description": "The SKU that defines the tier and kind of the peering."
          }
        },
        "required": [
          "sku",
          "kind",
          "location"
        ],
        "type": "object"
      },
      "PeeringBandwidthOffer": {
        "description": "The properties that define a peering bandwidth offer.",
        "properties": {
          "offerName": {
            "description": "The name of the bandwidth offer.",
            "type": "string"
          },
          "valueInMbps": {
            "description": "The value of the bandwidth offer in Mbps.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PeeringListResult": {
        "description": "The paginated list of peerings.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peerings.",
            "type": "string"
          },
          "value": {
            "description": "The list of peerings.",
            "items": {
              "$ref": "#/components/schemas/Peering"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Peering location is where connectivity could be established to the Microsoft Cloud Edge.",
        "properties": {
          "kind": {
            "description": "The kind of peering that the peering location supports.",
            "enum": [
              "Direct",
              "Exchange"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "kind"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/PeeringLocationProperties",
            "description": "The properties that define a peering location.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PeeringLocationListResult": {
        "description": "The paginated list of peering locations.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peering locations.",
            "type": "string"
          },
          "value": {
            "description": "The list of peering locations.",
            "items": {
              "$ref": "#/components/schemas/PeeringLocation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringLocationProperties": {
        "description": "The properties that define a peering location.",
        "properties": {
          "azureRegion": {
            "description": "The Azure region associated with the peering location.",
            "type": "string"
          },
          "country": {
            "description": "The country in which the peering location exists.",
            "type": "string"
          },
          "direct": {
            "$ref": "#/components/schemas/PeeringLocationPropertiesDirect",
            "description": "The properties that define a direct peering location."
          },
          "exchange": {
            "$ref": "#/components/schemas/PeeringLocationPropertiesExchange",
            "description": "The properties that define an exchange peering location."
          },
          "peeringLocation": {
            "description": "The name of the peering location.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PeeringLocationPropertiesDirect": {
        "description": "The properties that define a direct peering location.",
        "properties": {
          "bandwidthOffers": {
            "description": "The list of bandwidth offers available at the peering location.",
            "items": {
              "$ref": "#/components/schemas/PeeringBandwidthOffer"
            },
            "type": "array"
          },
          "peeringFacilities": {
            "description": "The list of direct peering facilities at the peering location.",
            "items": {
              "$ref": "#/components/schemas/DirectPeeringFacility"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringLocationPropertiesExchange": {
        "description": "The properties that define an exchange peering location.",
        "properties": {
          "peeringFacilities": {
            "description": "The list of exchange peering facilities at the peering location.",
            "items": {
              "$ref": "#/components/schemas/ExchangePeeringFacility"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringProperties": {
        "description": "The properties that define connectivity to the Microsoft Cloud Edge.",
        "properties": {
          "direct": {
            "$ref": "#/components/schemas/PeeringPropertiesDirect",
            "description": "The properties that define a direct peering."
          },
          "exchange": {
            "$ref": "#/components/schemas/PeeringPropertiesExchange",
            "description": "The properties that define an exchange peering."
          },
          "peeringLocation": {
            "description": "The location of the peering.",
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource.",
            "enum": [
              "Succeeded",
              "Updating",
              "Deleting",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "type": "object"
      },
      "PeeringPropertiesDirect": {
        "description": "The properties that define a direct peering.",
        "properties": {
          "connections": {
            "description": "The set of connections that constitute a direct peering.",
            "items": {
              "$ref": "#/components/schemas/DirectConnection"
            },
            "type": "array"
          },
          "directPeeringType": {
            "description": "The type of direct peering.",
            "enum": [
              "Edge",
              "Transit",
              "Cdn",
              "Internal"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "directPeeringType"
            }
          },
          "peerAsn": {
            "$ref": "#/components/schemas/SubResource",
            "description": "The reference of the peer ASN."
          },
          "useForPeeringService": {
            "description": "The flag that indicates whether or not the peering is used for peering service.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "PeeringPropertiesExchange": {
        "description": "The properties that define an exchange peering.",
        "properties": {
          "connections": {
            "description": "The set of connections that constitute an exchange peering.",
            "items": {
              "$ref": "#/components/schemas/ExchangeConnection"
            },
            "type": "array"
          },
          "peerAsn": {
            "$ref": "#/components/schemas/SubResource",
            "description": "The reference of the peer ASN."
          }
        },
        "type": "object"
      },
      "PeeringService": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Peering Service",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "location": {
            "description": "The location of the resource.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/PeeringServiceProperties",
            "description": "The properties that define a peering service.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "PeeringServiceListResult": {
        "description": "The paginated list of peering services.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peering services.",
            "type": "string"
          },
          "value": {
            "description": "The list of peering services.",
            "items": {
              "$ref": "#/components/schemas/PeeringService"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringServiceLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "PeeringService location",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PeeringServiceLocationProperties",
            "description": "The properties that define a peering service location.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PeeringServiceLocationListResult": {
        "description": "The paginated list of peering service locations.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peering service locations.",
            "type": "string"
          },
          "value": {
            "description": "The list of peering service locations.",
            "items": {
              "$ref": "#/components/schemas/PeeringServiceLocation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringServiceLocationProperties": {
        "description": "The properties that define connectivity to the Peering Service Location.",
        "properties": {
          "azureRegion": {
            "description": "Azure region for the location",
            "type": "string"
          },
          "country": {
            "description": "Country of the customer",
            "type": "string"
          },
          "state": {
            "description": "State of the customer",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PeeringServicePrefix": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The peering service prefix class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PeeringServicePrefixProperties",
            "description": "Gets or sets the peering prefix properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PeeringServicePrefixListResult": {
        "description": "The paginated list of [T].",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of [T].",
            "type": "string"
          },
          "value": {
            "description": "The list of [T].",
            "items": {
              "$ref": "#/components/schemas/PeeringServicePrefix"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringServicePrefixProperties": {
        "description": "The peering service prefix properties class.",
        "properties": {
          "learnedType": {
            "description": "The prefix learned type",
            "enum": [
              "None",
              "ViaPartner",
              "ViaSession"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "learnedType"
            }
          },
          "prefix": {
            "description": "Valid route prefix",
            "type": "string"
          },
          "prefixValidationState": {
            "description": "The prefix validation state",
            "enum": [
              "None",
              "Invalid",
              "Verified",
              "Failed",
              "Pending",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "prefixValidationState"
            }
          },
          "provisioningState": {
            "description": "The provisioning state of the resource.",
            "enum": [
              "Succeeded",
              "Updating",
              "Deleting",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "type": "object"
      },
      "PeeringServiceProperties": {
        "description": "The properties that define connectivity to the Peering Service.",
        "properties": {
          "peeringServiceLocation": {
            "description": "The PeeringServiceLocation of the Customer.",
            "type": "string"
          },
          "peeringServiceProvider": {
            "description": "The MAPS Provider Name.",
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource.",
            "enum": [
              "Succeeded",
              "Updating",
              "Deleting",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "type": "object"
      },
      "PeeringServiceProvider": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "PeeringService provider",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PeeringServiceProviderProperties",
            "description": "The properties that define a peering service provider.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PeeringServiceProviderListResult": {
        "description": "The paginated list of peering service providers.",
        "properties": {
          "nextLink": {
            "description": "The link to fetch the next page of peering service providers.",
            "type": "string"
          },
          "value": {
            "description": "The list of peering service providers.",
            "items": {
              "$ref": "#/components/schemas/PeeringServiceProvider"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PeeringServiceProviderProperties": {
        "description": "The properties that define connectivity to the Peering Service Provider.",
        "properties": {
          "serviceProviderName": {
            "description": "The name of the service provider.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PeeringSku": {
        "description": "The SKU that defines the tier and kind of the peering.",
        "properties": {
          "family": {
            "description": "The family of the peering SKU.",
            "enum": [
              "Direct",
              "Exchange"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "family"
            }
          },
          "name": {
            "description": "The name of the peering SKU.",
            "enum": [
              "Basic_Exchange_Free",
              "Basic_Direct_Free",
              "Premium_Direct_Free",
              "Premium_Exchange_Metered",
              "Premium_Direct_Metered",
              "Premium_Direct_Unlimited"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "name"
            }
          },
          "size": {
            "description": "The size of the peering SKU.",
            "enum": [
              "Free",
              "Metered",
              "Unlimited"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "size"
            }
          },
          "tier": {
            "description": "The tier of the peering SKU.",
            "enum": [
              "Basic",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "tier"
            }
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The ARM resource class.",
        "properties": {
          "id": {
            "description": "The ID of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceTags": {
        "description": "The resource tags.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Gets or sets the tags, a dictionary of descriptors arm object",
            "type": "object"
          }
        },
        "type": "object"
      },
      "SubResource": {
        "description": "The sub resource.",
        "properties": {
          "id": {
            "description": "The identifier of the referenced resource.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}