{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for performing operations on Backend entity in Azure API Management deployment. The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication.",
    "title": "ApiManagementClient",
    "version": "2016-10-10",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2016-10-10/apimbackends.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "description": "| Field | Supported operators    | Supported functions                         |\n|-------|------------------------|---------------------------------------------|\n| id    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| host  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendCollection"
                }
              }
            },
            "description": "Lists a collection of Backend entities."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Backends"
        ],
        "externalDocs": {
          "url": "https://msdn.microsoft.com/en-us/library/dn935030.aspx"
        },
        "description": "Lists a collection of backends in the specified service instance.",
        "operationId": "Backends_ListByService",
        "x-ms-odata": "#/components/schemas/BackendResponse",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/backends/{backendid}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/BackendIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the backend to delete. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The backend was successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Backends"
        ],
        "description": "Deletes the specified backend.",
        "operationId": "Backends_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/BackendIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackendResponse"
                }
              }
            },
            "description": "The response body contains the specified Backend entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Backends"
        ],
        "description": "Gets the details of the backend specified by its identifier.",
        "operationId": "Backends_Get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/BackendIdParameter"
          },
          {
            "description": "The entity state (Etag) version of the backend to update. A value of \"*\" can be used for If-Match to unconditionally apply the operation.",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The existing backend was successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Backends"
        ],
        "description": "Updates an existing backend.",
        "operationId": "Backends_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackendUpdateParameters"
              }
            }
          },
          "description": "Update parameters.",
          "required": true
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/BackendIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Backend was successfully created."
          },
          "204": {
            "description": "The existing backend was successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorBodyContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Backends"
        ],
        "description": "Creates or Updates a backend.",
        "operationId": "Backends_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackendContract"
              }
            }
          },
          "description": "Create parameters.",
          "required": true
        }
      }
    }
  },
  "components": {
    "parameters": {
      "BackendIdParameter": {
        "description": "Identifier of the Backend entity. Must be unique in the current API Management service instance.",
        "in": "path",
        "name": "backendid",
        "required": true,
        "schema": {
          "maxLength": 255,
          "minLength": 1,
          "pattern": "^[^*#&+:<>?]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "BackendAuthorizationHeaderCredentials": {
        "description": "Authorization header information.",
        "properties": {
          "parameter": {
            "description": "Authentication Parameter value.",
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          },
          "scheme": {
            "description": "Authentication Scheme name.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "scheme",
          "parameter"
        ],
        "type": "object"
      },
      "BackendBaseParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackendCredentialsContract"
          },
          {
            "$ref": "#/components/schemas/BackendProxyContract"
          }
        ],
        "description": "Backend entity base Parameter set.",
        "properties": {
          "description": {
            "description": "Backend Description.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/BackendProperties",
            "x-ms-client-flatten": true
          },
          "resourceId": {
            "description": "Management Uri of the Resource in External System. This url can be the Arm Resource Id of Logic Apps, Function Apps or Api Apps.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "description": "Backend Title.",
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackendCollection": {
        "description": "Paged Backend list representation.",
        "properties": {
          "count": {
            "description": "Total record count number across all pages.",
            "format": "int64",
            "type": "integer"
          },
          "nextLink": {
            "description": "Next page link if any.",
            "type": "string"
          },
          "value": {
            "description": "Backend values.",
            "items": {
              "$ref": "#/components/schemas/BackendResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BackendContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackendBaseParameters"
          }
        ],
        "description": "Parameters supplied to the Create Backend operation.",
        "properties": {
          "id": {
            "description": "Uniquely identifies the backend within the current API Management service instance. The value is a valid relative URL in the format of /backends/{backendId} where {backendId} is a backend identifier.",
            "readOnly": true,
            "type": "string"
          },
          "protocol": {
            "description": "Backend communication protocol.",
            "enum": [
              "http",
              "soap"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackendProtocol"
            }
          },
          "url": {
            "description": "Runtime Url of the Backend.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "url",
          "protocol"
        ],
        "type": "object"
      },
      "BackendCredentialsContract": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackendAuthorizationHeaderCredentials"
          }
        ],
        "description": "Details of the Credentials used to connect to Backend.",
        "properties": {
          "certificate": {
            "description": "List of Client Certificate Thumbprint.",
            "items": {
              "type": "string"
            },
            "maxItems": 32,
            "type": "array"
          },
          "header": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Header Parameter description.",
            "type": "object"
          },
          "query": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "Query Parameter description.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "BackendProperties": {
        "description": "Properties specific to a Backend.",
        "properties": {
          "skipCertificateChainValidation": {
            "default": false,
            "description": "Flag indicating whether SSL certificate chain validation should be skipped when using self-signed certificates for this backend host.",
            "type": "boolean"
          },
          "skipCertificateNameValidation": {
            "default": false,
            "description": "Flag indicating whether SSL certificate name validation should be skipped when using self-signed certificates for this backend host.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "BackendProxyContract": {
        "externalDocs": {
          "description": "Backend entity uses these details to connect to a WebProxy.",
          "url": "https://msdn.microsoft.com/en-us/library/system.net.webproxy(v=vs.110).aspx"
        },
        "description": "Details of the Backend WebProxy Server to use in the Request to Backend.",
        "properties": {
          "password": {
            "description": "Password to connect to the WebProxy Server",
            "type": "string"
          },
          "url": {
            "description": "WebProxy Server AbsoluteUri property which includes the entire URI stored in the Uri instance, including all fragments and query strings.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "description": "Username to connect to the WebProxy server",
            "type": "string"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "BackendResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackendContract"
          }
        ],
        "description": "The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication.",
        "properties": {
          "id": {
            "description": "Uniquely identifies the backend within the current API Management service instance. The value is a valid relative URL in the format of /backends/{backendId} where {backendId} is a backend identifier.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackendUpdateParameters": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackendBaseParameters"
          }
        ],
        "description": "Parameters supplied to the Update Backend operation.",
        "properties": {
          "protocol": {
            "description": "Backend communication protocol.",
            "enum": [
              "http",
              "soap"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackendProtocol"
            }
          },
          "url": {
            "description": "Runtime Url of the Backend.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}