{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "title": "SqlManagementClient",
    "version": "2018-06-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2018-06-01-preview/capabilities.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities": {
      "get": {
        "parameters": [
          {
            "description": "The location name whose capabilities are retrieved.",
            "in": "path",
            "name": "locationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If specified, restricts the response to only include the selected item.",
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "enum": [
                "supportedEditions",
                "supportedElasticPoolEditions",
                "supportedManagedInstanceVersions",
                "supportedInstancePoolEditions",
                "supportedManagedInstanceEditions"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CapabilityGroup"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCapabilities"
                }
              }
            },
            "description": "Successfully retrieved the subscription location capabilities."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 SubscriptionNotFound - The requested subscription was not found."
          }
        },
        "tags": [
          "LocationCapabilities"
        ],
        "description": "Gets the subscription capabilities available for the specified location.",
        "operationId": "Capabilities_ListByLocation",
        "x-ms-examples": {
          "List subscription capabilities in the given location.": {
            "$ref": "./examples/LocationCapabilityListByLocation.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "BlobAuditingPolicyNameParameter": {
        "description": "The name of the blob auditing policy.",
        "in": "path",
        "name": "blobAuditingPolicyName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ManagedInstanceNameParameter": {
        "description": "The name of the managed instance.",
        "in": "path",
        "name": "managedInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineContainerNameParameter": {
        "description": "The name of the SqlVirtualMachineContainer.",
        "in": "path",
        "name": "sqlVirtualMachineContainerName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineInstanceNameParameter": {
        "description": "The name of the SqlVirtualMachineInstance.",
        "in": "path",
        "name": "sqlVirtualMachineInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "VirtualClusterNameParameter": {
        "description": "The name of the virtual cluster.",
        "in": "path",
        "name": "virtualClusterName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AutoPauseDelayTimeRange": {
        "description": "Supported auto pause delay time range",
        "properties": {
          "default": {
            "description": "Default value is no value is provided",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "doNotPauseValue": {
            "description": "Value that is used to not pause (infinite delay before pause)",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "maxValue": {
            "description": "Maximum value",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "minValue": {
            "description": "Minimum value",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "stepSize": {
            "description": "Step value for discrete values between the minimum value and the maximum value.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "unit": {
            "description": "Unit of time that delay is expressed in",
            "enum": [
              "Minutes"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PauseDelayTimeUnit"
            }
          }
        },
        "type": "object"
      },
      "EditionCapability": {
        "description": "The edition capability.",
        "properties": {
          "name": {
            "description": "The database edition name.",
            "readOnly": true,
            "type": "string"
          },
          "readScale": {
            "$ref": "#/components/schemas/ReadScaleCapability",
            "description": "The read scale capability for the edition.",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedServiceLevelObjectives": {
            "description": "The list of supported service objectives for the edition.",
            "items": {
              "$ref": "#/components/schemas/ServiceObjectiveCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedStorageCapabilities": {
            "description": "The list of supported storage capabilities for this edition",
            "items": {
              "$ref": "#/components/schemas/StorageCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the edition.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ElasticPoolEditionCapability": {
        "description": "The elastic pool edition capability.",
        "properties": {
          "name": {
            "description": "The elastic pool edition name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedElasticPoolPerformanceLevels": {
            "description": "The list of supported elastic pool DTU levels for the edition.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerformanceLevelCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the edition.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMaxPerformanceLevelCapability": {
        "description": "The max per-database performance level capability.",
        "properties": {
          "limit": {
            "description": "The maximum performance level per database.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedPerDatabaseMinPerformanceLevels": {
            "description": "The list of supported min database performance levels.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMinPerformanceLevelCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "unit": {
            "description": "Unit type used to measure performance level.",
            "enum": [
              "DTU",
              "VCores"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PerformanceLevelUnit"
            }
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMinPerformanceLevelCapability": {
        "description": "The minimum per-database performance level capability.",
        "properties": {
          "limit": {
            "description": "The minimum performance level per database.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "unit": {
            "description": "Unit type used to measure performance level.",
            "enum": [
              "DTU",
              "VCores"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PerformanceLevelUnit"
            }
          }
        },
        "type": "object"
      },
      "ElasticPoolPerformanceLevelCapability": {
        "description": "The Elastic Pool performance level capability.",
        "properties": {
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size for this performance level.",
            "readOnly": true
          },
          "maxDatabaseCount": {
            "description": "The maximum number of databases supported.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/PerformanceLevelCapability",
            "description": "The performance level for the pool.",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "sku": {
            "$ref": "../../../common/v1/types.json#/definitions/Sku",
            "description": "The sku.",
            "readOnly": true
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedLicenseTypes": {
            "description": "List of supported license types.",
            "items": {
              "$ref": "#/components/schemas/LicenseTypeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedMaxSizes": {
            "description": "The list of supported max sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeRangeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxPerformanceLevels": {
            "description": "The list of supported per database max performance levels.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxSizes": {
            "description": "The list of supported per database max sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeRangeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the performance level.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "InstancePoolEditionCapability": {
        "description": "The instance pool capability",
        "properties": {
          "name": {
            "description": "The instance pool version name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedFamilies": {
            "description": "The supported families.",
            "items": {
              "$ref": "#/components/schemas/InstancePoolFamilyCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstancePoolFamilyCapability": {
        "description": "The instance pool family capability.",
        "properties": {
          "name": {
            "description": "Family name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedLicenseTypes": {
            "description": "List of supported license types.",
            "items": {
              "$ref": "#/components/schemas/LicenseTypeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedVcoresValues": {
            "description": "List of supported virtual cores values.",
            "items": {
              "$ref": "#/components/schemas/InstancePoolVcoresCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "InstancePoolVcoresCapability": {
        "description": "The managed instance virtual cores capability.",
        "properties": {
          "name": {
            "description": "The virtual cores identifier.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "storageLimit": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "Storage limit.",
            "readOnly": true
          },
          "value": {
            "description": "The virtual cores value.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "LicenseTypeCapability": {
        "description": "The license type capability",
        "properties": {
          "name": {
            "description": "License type identifier.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          }
        },
        "type": "object"
      },
      "LocationCapabilities": {
        "description": "The location capability.",
        "properties": {
          "name": {
            "description": "The location name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedManagedInstanceVersions": {
            "description": "The list of supported managed instance versions.",
            "items": {
              "$ref": "#/components/schemas/ManagedInstanceVersionCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedServerVersions": {
            "description": "The list of supported server versions.",
            "items": {
              "$ref": "#/components/schemas/ServerVersionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "LogSizeCapability": {
        "description": "The log size capability.",
        "properties": {
          "limit": {
            "description": "The log size limit (see 'unit' for the units).",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "unit": {
            "description": "The units that the limit is expressed in.",
            "enum": [
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Petabytes",
              "Percent"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "LogSizeUnit"
            }
          }
        },
        "type": "object"
      },
      "ManagedInstanceEditionCapability": {
        "description": "The managed server capability",
        "properties": {
          "name": {
            "description": "The managed server version name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedFamilies": {
            "description": "The supported families.",
            "items": {
              "$ref": "#/components/schemas/ManagedInstanceFamilyCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedInstanceFamilyCapability": {
        "description": "The managed server family capability.",
        "properties": {
          "name": {
            "description": "Family name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "sku": {
            "description": "SKU name.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedLicenseTypes": {
            "description": "List of supported license types.",
            "items": {
              "$ref": "#/components/schemas/LicenseTypeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedVcoresValues": {
            "description": "List of supported virtual cores values.",
            "items": {
              "$ref": "#/components/schemas/ManagedInstanceVcoresCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagedInstanceVcoresCapability": {
        "description": "The managed instance virtual cores capability.",
        "properties": {
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "Included size.",
            "readOnly": true
          },
          "instancePoolSupported": {
            "description": "True if this service objective is supported for managed instances in an instance pool.",
            "readOnly": true,
            "type": "boolean"
          },
          "name": {
            "description": "The virtual cores identifier.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "standaloneSupported": {
            "description": "True if this service objective is supported for standalone managed instances.",
            "readOnly": true,
            "type": "boolean"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedStorageSizes": {
            "description": "Storage size ranges.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeRangeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "value": {
            "description": "The virtual cores value.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ManagedInstanceVersionCapability": {
        "description": "The managed instance capability",
        "properties": {
          "name": {
            "description": "The server version name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedEditions": {
            "description": "The list of supported managed instance editions.",
            "items": {
              "$ref": "#/components/schemas/ManagedInstanceEditionCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedInstancePoolEditions": {
            "description": "The list of supported instance pool editions.",
            "items": {
              "$ref": "#/components/schemas/InstancePoolEditionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MaxSizeCapability": {
        "description": "The maximum size capability.",
        "properties": {
          "limit": {
            "description": "The maximum size limit (see 'unit' for the units).",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "unit": {
            "description": "The units that the limit is expressed in.",
            "enum": [
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Petabytes"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MaxSizeUnit"
            }
          }
        },
        "type": "object"
      },
      "MaxSizeRangeCapability": {
        "description": "The maximum size range capability.",
        "properties": {
          "logSize": {
            "$ref": "#/components/schemas/LogSizeCapability",
            "description": "Size of transaction log.",
            "readOnly": true
          },
          "maxValue": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "Maximum value.",
            "readOnly": true
          },
          "minValue": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "Minimum value.",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "scaleSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "Scale/step size for discrete values between the minimum value and the maximum value.",
            "readOnly": true
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          }
        },
        "type": "object"
      },
      "MinCapacityCapability": {
        "description": "The min capacity capability",
        "properties": {
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "value": {
            "description": "Min capacity value",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "PerformanceLevelCapability": {
        "description": "The performance level capability.",
        "properties": {
          "unit": {
            "description": "Unit type used to measure performance level.",
            "enum": [
              "DTU",
              "VCores"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PerformanceLevelUnit"
            }
          },
          "value": {
            "description": "Performance level value.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReadScaleCapability": {
        "description": "The read scale capability.",
        "properties": {
          "maxNumberOfReplicas": {
            "description": "The maximum number of read scale replicas.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          }
        },
        "type": "object"
      },
      "ServerVersionCapability": {
        "description": "The server capability",
        "properties": {
          "name": {
            "description": "The server version name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedEditions": {
            "description": "The list of supported database editions.",
            "items": {
              "$ref": "#/components/schemas/EditionCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedElasticPoolEditions": {
            "description": "The list of supported elastic pool editions.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolEditionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceObjectiveCapability": {
        "description": "The service objectives capability.",
        "properties": {
          "computeModel": {
            "description": "The compute model",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The unique ID of the service objective.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size.",
            "readOnly": true
          },
          "name": {
            "description": "The service objective name.",
            "readOnly": true,
            "type": "string"
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/PerformanceLevelCapability",
            "description": "The performance level.",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "sku": {
            "$ref": "../../../common/v1/types.json#/definitions/Sku",
            "description": "The sku.",
            "readOnly": true
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedAutoPauseDelay": {
            "$ref": "#/components/schemas/AutoPauseDelayTimeRange",
            "description": "Supported time range for auto pause delay",
            "readOnly": true
          },
          "supportedLicenseTypes": {
            "description": "List of supported license types.",
            "items": {
              "$ref": "#/components/schemas/LicenseTypeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedMaxSizes": {
            "description": "The list of supported maximum database sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeRangeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedMinCapacities": {
            "description": "List of supported min capacities",
            "items": {
              "$ref": "#/components/schemas/MinCapacityCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the service objective.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "StorageCapability": {
        "description": "The storage account type capability.",
        "properties": {
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "storageAccountType": {
            "description": "The storage account type for the database's backups.",
            "enum": [
              "GRS",
              "LRS",
              "ZRS"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}