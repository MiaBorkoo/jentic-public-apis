{
  "openapi": "3.0.0",
  "info": {
    "description": "Describes the Azure SQL capabilities available to a subscription for a given location.",
    "title": "Azure SQL Database capabilities",
    "version": "2014-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/capabilities.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationId}/capabilities": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../common/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "The location id whose capabilities are retrieved.",
            "in": "path",
            "name": "locationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCapabilities"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Capabilities"
        ],
        "description": "Gets the capabilities available for the specified location.",
        "operationId": "Capabilities_ListByLocation",
        "x-ms-examples": {
          "Get location capabilities": {
            "$ref": "./examples/CapabilitiesList.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "CapabilityStatus": {
        "description": "The availability status of the capability",
        "enum": [
          "Visible",
          "Available",
          "Default",
          "Disabled"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "CapabilityStatus"
        }
      },
      "EditionCapability": {
        "description": "The database edition capabilities.",
        "properties": {
          "name": {
            "description": "The edition name.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the edition.",
            "readOnly": true,
            "type": "string"
          },
          "supportedServiceLevelObjectives": {
            "description": "The list of supported service objectives for the edition.",
            "items": {
              "$ref": "#/components/schemas/ServiceObjectiveCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the edition.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ElasticPoolDtuCapability": {
        "description": "The Elastic Pool DTU capability.",
        "properties": {
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size for this service level objective.",
            "readOnly": true
          },
          "limit": {
            "description": "The maximum size of the database (see 'unit' for the units).",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "maxDatabaseCount": {
            "description": "The maximum number of databases supported.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the capability.",
            "readOnly": true,
            "type": "string"
          },
          "supportedMaxSizes": {
            "description": "The list of supported max sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxDtus": {
            "description": "The list of supported max database DTUs.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMaxDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxSizes": {
            "description": "The list of supported max database sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolEditionCapability": {
        "description": "The elastic pool edition capabilities.",
        "properties": {
          "name": {
            "description": "The elastic pool edition name.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the elastic pool edition.",
            "readOnly": true,
            "type": "string"
          },
          "supportedElasticPoolDtus": {
            "description": "The list of supported elastic pool DTU levels for the edition.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "zoneRedundant": {
            "description": "Whether or not zone redundancy is supported for the edition.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMaxDtuCapability": {
        "description": "The max per-database DTU capability.",
        "properties": {
          "limit": {
            "description": "The maximum DTUs per database.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the capability.",
            "readOnly": true
          },
          "supportedPerDatabaseMinDtus": {
            "description": "The list of supported min database DTUs.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMinDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMinDtuCapability": {
        "description": "The minimum per-database DTU capability.",
        "properties": {
          "limit": {
            "description": "The maximum DTUs per database.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the capability.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "LocationCapabilities": {
        "description": "The capabilities for a location.",
        "properties": {
          "name": {
            "description": "The location name.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "Azure SQL Database's status for the location.",
            "readOnly": true,
            "type": "string"
          },
          "supportedServerVersions": {
            "description": "The list of supported server versions.",
            "items": {
              "$ref": "#/components/schemas/ServerVersionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MaxSizeCapability": {
        "description": "The maximum size limits for a database.",
        "properties": {
          "limit": {
            "description": "The maximum size of the database (see 'unit' for the units).",
            "format": "int64",
            "nullable": false,
            "readOnly": true,
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the maximum size capability.",
            "readOnly": true
          },
          "unit": {
            "description": "The units that the limit is expressed in.",
            "enum": [
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Petabytes"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "MaxSizeUnits"
            }
          }
        },
        "type": "object"
      },
      "PerformanceLevel": {
        "description": "A possible performance level of a service objective capability.",
        "properties": {
          "unit": {
            "description": "Unit type used to measure service objective performance level.",
            "enum": [
              "DTU"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "name": "PerformanceLevelUnit"
            }
          },
          "value": {
            "description": "Performance level value.",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServerVersionCapability": {
        "description": "The server capabilities.",
        "properties": {
          "name": {
            "description": "The server version name.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the server version.",
            "readOnly": true,
            "type": "string"
          },
          "supportedEditions": {
            "description": "The list of supported database editions.",
            "items": {
              "$ref": "#/components/schemas/EditionCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedElasticPoolEditions": {
            "description": "The list of supported elastic pool editions.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolEditionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceObjectiveCapability": {
        "description": "The service objectives capability.",
        "properties": {
          "id": {
            "description": "The unique ID of the service objective.",
            "format": "uuid",
            "nullable": false,
            "readOnly": true,
            "type": "string"
          },
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size for this service level objective.",
            "readOnly": true
          },
          "name": {
            "description": "The service objective name.",
            "readOnly": true,
            "type": "string"
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/PerformanceLevel",
            "description": "The performance level of the service objective capability.",
            "readOnly": true,
            "x-ms-client-flatten": true
          },
          "status": {
            "$ref": "#/components/schemas/CapabilityStatus",
            "description": "The status of the service objective.",
            "readOnly": true,
            "type": "string"
          },
          "supportedMaxSizes": {
            "description": "The list of supported maximum database sizes for this service objective.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}