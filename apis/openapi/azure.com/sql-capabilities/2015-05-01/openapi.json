{
  "openapi": "3.0.0",
  "info": {
    "description": "The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.",
    "title": "SqlManagementClient",
    "version": "2015-05-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/stable/2015-05-01/capabilities.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities": {
      "get": {
        "parameters": [
          {
            "description": "The location name whose capabilities are retrieved.",
            "in": "path",
            "name": "locationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationCapabilities"
                }
              }
            },
            "description": "Successfully retrieved the subscription location capabilities."
          },
          "default": {
            "description": "*** Error Responses: ***\n\n * 400 InvalidLocation - An invalid location was specified.\n\n * 400 SubscriptionNotFound - The requested subscription was not found."
          }
        },
        "tags": [
          "LocationCapabilities"
        ],
        "description": "Gets the subscription capabilities available for the specified location.",
        "operationId": "Capabilities_ListByLocation",
        "x-ms-examples": {
          "List subscription capabilities in the given location.": {
            "$ref": "./examples/LocationCapabilityListByLocation.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for the request.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "DatabaseNameParameter": {
        "description": "The name of the database.",
        "in": "path",
        "name": "databaseName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServerNameParameter": {
        "description": "The name of the server.",
        "in": "path",
        "name": "serverName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineContainerNameParameter": {
        "description": "The name of the SqlVirtualMachineContainer.",
        "in": "path",
        "name": "sqlVirtualMachineContainerName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SqlVirtualMachineInstanceNameParameter": {
        "description": "The name of the SqlVirtualMachineInstance.",
        "in": "path",
        "name": "sqlVirtualMachineInstanceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The subscription ID that identifies an Azure subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      }
    },
    "schemas": {
      "EditionCapability": {
        "description": "The edition capability.",
        "properties": {
          "name": {
            "description": "The database edition name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedServiceLevelObjectives": {
            "description": "The list of supported service objectives for the edition.",
            "items": {
              "$ref": "#/components/schemas/ServiceLevelObjectiveCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolDtuCapability": {
        "description": "The Elastic Pool DTU capability.",
        "properties": {
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size for this DTU.",
            "readOnly": true
          },
          "limit": {
            "description": "The DTU limit for the pool.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "maxDatabaseCount": {
            "description": "The maximum number of databases supported.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedMaxSizes": {
            "description": "The list of supported max sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxDtus": {
            "description": "The list of supported per database max DTUs.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMaxDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedPerDatabaseMaxSizes": {
            "description": "The list of supported per database max sizes.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolEditionCapability": {
        "description": "The elastic pool edition capability.",
        "properties": {
          "name": {
            "description": "The elastic pool edition name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedElasticPoolDtus": {
            "description": "The list of supported elastic pool DTU levels for the edition.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMaxDtuCapability": {
        "description": "The max per-database DTU capability.",
        "properties": {
          "limit": {
            "description": "The maximum DTUs per database.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedPerDatabaseMinDtus": {
            "description": "The list of supported min database DTUs.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolPerDatabaseMinDtuCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ElasticPoolPerDatabaseMinDtuCapability": {
        "description": "The minimum per-database DTU capability.",
        "properties": {
          "limit": {
            "description": "The minimum DTUs per database.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          }
        },
        "type": "object"
      },
      "LocationCapabilities": {
        "description": "The location capability.",
        "properties": {
          "name": {
            "description": "The location name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedServerVersions": {
            "description": "The list of supported server versions.",
            "items": {
              "$ref": "#/components/schemas/ServerVersionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MaxSizeCapability": {
        "description": "The maximum size capability.",
        "properties": {
          "limit": {
            "description": "The maximum size limit (see 'unit' for the units).",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "unit": {
            "description": "The units that the limit is expressed in.",
            "enum": [
              "Megabytes",
              "Gigabytes",
              "Terabytes",
              "Petabytes"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MaxSizeUnits"
            }
          }
        },
        "type": "object"
      },
      "PerformanceLevelCapability": {
        "description": "The performance level capability.",
        "properties": {
          "unit": {
            "description": "Unit type used to measure service objective performance level.",
            "enum": [
              "DTU"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "PerformanceLevelUnit"
            }
          },
          "value": {
            "description": "Performance level value.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ServerVersionCapability": {
        "description": "The server capability",
        "properties": {
          "name": {
            "description": "The server version name.",
            "readOnly": true,
            "type": "string"
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedEditions": {
            "description": "The list of supported database editions.",
            "items": {
              "$ref": "#/components/schemas/EditionCapability"
            },
            "readOnly": true,
            "type": "array"
          },
          "supportedElasticPoolEditions": {
            "description": "The list of supported elastic pool editions.",
            "items": {
              "$ref": "#/components/schemas/ElasticPoolEditionCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceLevelObjectiveCapability": {
        "description": "The service objectives capability.",
        "properties": {
          "id": {
            "description": "The unique ID of the service objective.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "includedMaxSize": {
            "$ref": "#/components/schemas/MaxSizeCapability",
            "description": "The included (free) max size for this service level objective.",
            "readOnly": true
          },
          "name": {
            "description": "The service objective name.",
            "readOnly": true,
            "type": "string"
          },
          "performanceLevel": {
            "$ref": "#/components/schemas/PerformanceLevelCapability",
            "description": "The performance level of the service objective capability.",
            "readOnly": true
          },
          "reason": {
            "description": "The reason for the capability not being available.",
            "type": "string"
          },
          "status": {
            "description": "The status of the capability.",
            "enum": [
              "Visible",
              "Available",
              "Default",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CapabilityStatus"
            }
          },
          "supportedMaxSizes": {
            "description": "The list of supported maximum database sizes for this service objective.",
            "items": {
              "$ref": "#/components/schemas/MaxSizeCapability"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  }
}