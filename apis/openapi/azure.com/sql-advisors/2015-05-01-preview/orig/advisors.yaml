openapi: 3.0.0
info:
  description: >-
    The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2015-05-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Advisor'
                type: array
          description: Successfully retrieved the list of server advisors.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - ServerAdvisors
      description: Gets a list of server advisors.
      operationId: ServerAdvisors_ListByServer
      x-ms-examples:
        List of server advisors:
          $ref: ./examples/ServerAdvisorList.json
        List of server recommended actions for all advisors:
          $ref: ./examples/ServerRecommendedActionListExpand.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the Server Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
          description: Successfully retrieved details of specified server advisor.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - ServerAdvisors
      description: Gets a server advisor.
      operationId: ServerAdvisors_Get
      x-ms-examples:
        Get server advisor:
          $ref: ./examples/ServerAdvisorGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - description: The name of the Server Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
          description: Successfully updated the specified server advisor.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 400 InvalidAdvisorUpsertRequest - The update advisor request body does not exist or has no properties object.

             * 400 InvalidAdvisorAutoExecuteStatus - Specified auto-execute status for the advisor is not allowed.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - ServerAdvisors
      description: Updates a server advisor.
      operationId: ServerAdvisors_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advisor'
        description: The requested advisor resource state.
        required: true
      x-ms-examples:
        Update server advisor:
          $ref: ./examples/ServerAdvisorUpdate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Advisor'
                type: array
          description: Successfully retrieved the list of database advisors.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseAdvisors
      description: Gets a list of database advisors.
      operationId: DatabaseAdvisors_ListByDatabase
      x-ms-examples:
        List of database advisors:
          $ref: ./examples/DatabaseAdvisorList.json
        List of database recommended actions for all advisors:
          $ref: ./examples/DatabaseRecommendedActionListExpand.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - description: The name of the Database Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
          description: Successfully retrieved details of specified database advisor.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseAdvisors
      description: Gets a database advisor.
      operationId: DatabaseAdvisors_Get
      x-ms-examples:
        Get database advisor:
          $ref: ./examples/DatabaseAdvisorGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - description: The name of the Database Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advisor'
          description: Successfully updated the specified database advisor.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 400 InvalidAdvisorUpsertRequest - The update advisor request body does not exist or has no properties object.

             * 400 InvalidAdvisorAutoExecuteStatus - Specified auto-execute status for the advisor is not allowed.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseAdvisors
      description: Updates a database advisor.
      operationId: DatabaseAdvisors_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advisor'
        description: The requested advisor resource state.
        required: true
      x-ms-examples:
        Update database advisor:
          $ref: ./examples/DatabaseAdvisorUpdate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - description: The name of the Database Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RecommendedAction'
                type: array
          description: Successfully retrieved the list of database recommended actions.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseRecommendedActions
      description: Gets list of Database Recommended Actions.
      operationId: DatabaseRecommendedActions_ListByDatabaseAdvisor
      x-ms-examples:
        List of database recommended actions:
          $ref: ./examples/DatabaseRecommendedActionList.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}':
    get:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - description: The name of the Database Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - description: The name of Database Recommended Action.
          in: path
          name: recommendedActionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedAction'
          description: >-
            Successfully retrieved details of specified database recommended
            action.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseRecommendedActions
      description: Gets a database recommended action.
      operationId: DatabaseRecommendedActions_Get
      x-ms-examples:
        Get database recommended action:
          $ref: ./examples/DatabaseRecommendedActionGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/ServerNameParameter'
        - $ref: '#/components/parameters/DatabaseNameParameter'
        - description: The name of the Database Advisor.
          in: path
          name: advisorName
          required: true
          schema:
            type: string
        - description: The name of Database Recommended Action.
          in: path
          name: recommendedActionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedAction'
          description: Successfully updated the specified database recommended action.
        default:
          description: |-
            *** Error Responses: ***

             * 400 InvalidIdentifier - The identifier contains NULL or an invalid unicode character.

             * 400 InvalidRecommendedActionUpsertRequest - The update recommended action request body does not exist or has no properties or state object.

             * 400 InvalidRecommendedActionState - The specified state for recommended action is invalid

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 DatabaseDoesNotExist - The requested database was not found

             * 404 SubscriptionDoesNotHaveElasticPool - The requested elastic pool was not found

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 404 AdvisorNotFound - The requested advisor was not found.

             * 404 RecommendedActionNotFound - The requested recommended action was not found.

             * 405 NotSupported - This functionality is not supported.

             * 409 Conflict - Request could not be processed because of conflict in the request.

             * 503 ServiceTemporarilyUnavailable - Feature temporarily unavailable.
      tags:
        - DatabaseRecommendedActions
      description: Updates a database recommended action.
      operationId: DatabaseRecommendedActions_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendedAction'
        description: The requested recommended action resource state.
        required: true
      x-ms-examples:
        Update database recommended action:
          $ref: ./examples/DatabaseRecommendedActionUpdate.json
components:
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: >-
        The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
  requestBodies:
    Advisor:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Advisor'
      description: The requested advisor resource state.
      required: true
  schemas:
    Advisor:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: 'Database, Server or Elastic Pool Advisor.'
      properties:
        kind:
          description: Resource kind.
          readOnly: true
          type: string
        location:
          description: Resource location.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/AdvisorProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    AdvisorProperties:
      description: 'Properties for a Database, Server or Elastic Pool Advisor.'
      properties:
        advisorStatus:
          description: >-
            Gets the status of availability of this advisor to customers.
            Possible values are 'GA', 'PublicPreview', 'LimitedPublicPreview'
            and 'PrivatePreview'.
          enum:
            - GA
            - PublicPreview
            - LimitedPublicPreview
            - PrivatePreview
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: AdvisorStatus
        autoExecuteStatus:
          description: >-
            Gets the auto-execute status (whether to let the system execute the
            recommendations) of this advisor. Possible values are 'Enabled' and
            'Disabled'
          enum:
            - Enabled
            - Disabled
            - Default
          type: string
          x-ms-enum:
            modelAsString: false
            name: AutoExecuteStatus
        autoExecuteStatusInheritedFrom:
          description: >-
            Gets the resource from which current value of auto-execute status is
            inherited. Auto-execute status can be set on (and inherited from)
            different levels in the resource hierarchy. Possible values are
            'Subscription', 'Server', 'ElasticPool', 'Database' and 'Default'
            (when status is not explicitly set on any level).
          enum:
            - Default
            - Subscription
            - Server
            - ElasticPool
            - Database
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: AutoExecuteStatusInheritedFrom
        lastChecked:
          description: >-
            Gets the time when the current resource was analyzed for
            recommendations by this advisor.
          format: date-time
          readOnly: true
          type: string
        recommendationsStatus:
          description: >-
            Gets that status of recommendations for this advisor and reason for
            not having any recommendations. Possible values include, but are not
            limited to, 'Ok' (Recommendations available),LowActivity (not enough
            workload to analyze), 'DbSeemsTuned' (Database is doing well), etc.
          readOnly: true
          type: string
        recommendedActions:
          description: Gets the recommended actions for this advisor.
          items:
            $ref: '#/components/schemas/RecommendedAction'
          readOnly: true
          type: array
      required:
        - autoExecuteStatus
      type: object
    RecommendedAction:
      allOf:
        - $ref: ../../../common/v1/types.json#/definitions/ProxyResource
      description: 'Database, Server or Elastic Pool Recommended Action.'
      properties:
        kind:
          description: Resource kind.
          readOnly: true
          type: string
        location:
          description: Resource location.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/RecommendedActionProperties'
          description: Resource properties.
          x-ms-client-flatten: true
      type: object
    RecommendedActionErrorInfo:
      description: >-
        Contains error information for an Azure SQL Database, Server or Elastic
        Pool Recommended Action.
      properties:
        errorCode:
          description: >-
            Gets the reason why the recommended action was put to error state.
            e.g., DatabaseHasQdsOff, IndexAlreadyExists
          readOnly: true
          type: string
        isRetryable:
          description: >-
            Gets whether the error could be ignored and recommended action could
            be retried. Possible values are: Yes/No
          enum:
            - 'Yes'
            - 'No'
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: IsRetryable
      type: object
    RecommendedActionImpactRecord:
      description: >-
        Contains information of estimated or observed impact on various metrics
        for an Azure SQL Database, Server or Elastic Pool Recommended Action.
      properties:
        absoluteValue:
          description: >-
            Gets the absolute value of this dimension if applicable. e.g.,
            Number of Queries affected
          format: double
          readOnly: true
          type: number
        changeValueAbsolute:
          description: >-
            Gets the absolute change in the value of this dimension. e.g.,
            Absolute Disk space change in Megabytes
          format: double
          readOnly: true
          type: number
        changeValueRelative:
          description: >-
            Gets the relative change in the value of this dimension. e.g.,
            Relative Disk space change in Percentage
          format: double
          readOnly: true
          type: number
        dimensionName:
          description: >-
            Gets the name of the impact dimension. e.g., CPUChange,
            DiskSpaceChange, NumberOfQueriesAffected.
          readOnly: true
          type: string
        unit:
          description: >-
            Gets the name of the impact dimension. e.g., CPUChange,
            DiskSpaceChange, NumberOfQueriesAffected.
          readOnly: true
          type: string
      type: object
    RecommendedActionImplementationInfo:
      description: >-
        Contains information for manual implementation for an Azure SQL
        Database, Server or Elastic Pool Recommended Action.
      properties:
        method:
          description: >-
            Gets the method in which this recommended action can be manually
            implemented. e.g., TSql, AzurePowerShell.
          enum:
            - TSql
            - AzurePowerShell
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: ImplementationMethod
        script:
          description: >-
            Gets the manual implementation script. e.g., T-SQL script that could
            be executed on the database.
          readOnly: true
          type: string
      type: object
    RecommendedActionMetricInfo:
      description: >-
        Contains time series of various impacted metrics for an Azure SQL
        Database, Server or Elastic Pool Recommended Action.
      properties:
        metricName:
          description: 'Gets the name of the metric. e.g., CPU, Number of Queries.'
          readOnly: true
          type: string
        startTime:
          description: Gets the start time of time interval given by this MetricInfo.
          format: date-time
          readOnly: true
          type: string
        timeGrain:
          description: >-
            Gets the duration of time interval for the value given by this
            MetricInfo. e.g., PT1H (1 hour)
          readOnly: true
          type: string
        unit:
          description: 'Gets the unit in which metric is measured. e.g., DTU, Frequency'
          readOnly: true
          type: string
        value:
          description: >-
            Gets the value of the metric in the time interval given by this
            MetricInfo.
          format: double
          readOnly: true
          type: number
      type: object
    RecommendedActionProperties:
      description: 'Properties for a Database, Server or Elastic Pool Recommended Action.'
      properties:
        details:
          additionalProperties:
            type: object
          description: Gets additional details specific to this recommended action.
          readOnly: true
          type: object
        errorDetails:
          $ref: '#/components/schemas/RecommendedActionErrorInfo'
          description: >-
            Gets the error details if and why this recommended action is put to
            error state.
          readOnly: true
        estimatedImpact:
          description: >-
            Gets the estimated impact info for this recommended action e.g.,
            Estimated CPU gain, Estimated Disk Space change
          items:
            $ref: '#/components/schemas/RecommendedActionImpactRecord'
          readOnly: true
          type: array
        executeActionDuration:
          description: >-
            Gets the time taken for applying this recommended action on user
            resource. e.g., time taken for index creation
          readOnly: true
          type: string
        executeActionInitiatedBy:
          description: >-
            Gets if approval for applying this recommended action was given by
            user/system.
          enum:
            - User
            - System
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecommendedActionInitiatedBy
        executeActionInitiatedTime:
          description: >-
            Gets the time when this recommended action was approved for
            execution.
          format: date-time
          readOnly: true
          type: string
        executeActionStartTime:
          description: >-
            Gets the time when system started applying this recommended action
            on the user resource. e.g., index creation start time
          format: date-time
          readOnly: true
          type: string
        implementationDetails:
          $ref: '#/components/schemas/RecommendedActionImplementationInfo'
          description: >-
            Gets the implementation details of this recommended action for user
            to apply it manually.
          readOnly: true
        isArchivedAction:
          description: >-
            Gets if this recommended action was suggested some time ago but user
            chose to ignore this and system added a new recommended action
            again.
          readOnly: true
          type: boolean
        isExecutableAction:
          description: Gets if this recommended action is actionable by user
          readOnly: true
          type: boolean
        isRevertableAction:
          description: >-
            Gets if changes applied by this recommended action can be reverted
            by user
          readOnly: true
          type: boolean
        lastRefresh:
          description: Gets time when this recommended action was last refreshed.
          format: date-time
          readOnly: true
          type: string
        linkedObjects:
          description: 'Gets the linked objects, if any.'
          items:
            type: string
          readOnly: true
          type: array
        observedImpact:
          description: >-
            Gets the observed/actual impact info for this recommended action
            e.g., Actual CPU gain, Actual Disk Space change
          items:
            $ref: '#/components/schemas/RecommendedActionImpactRecord'
          readOnly: true
          type: array
        recommendationReason:
          description: 'Gets the reason for recommending this action. e.g., DuplicateIndex'
          readOnly: true
          type: string
        revertActionDuration:
          description: >-
            Gets the time taken for reverting changes of this recommended action
            on user resource. e.g., time taken for dropping the created index.
          readOnly: true
          type: string
        revertActionInitiatedBy:
          description: >-
            Gets if approval for reverting this recommended action was given by
            user/system.
          enum:
            - User
            - System
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecommendedActionInitiatedBy
        revertActionInitiatedTime:
          description: Gets the time when this recommended action was approved for revert.
          format: date-time
          readOnly: true
          type: string
        revertActionStartTime:
          description: >-
            Gets the time when system started reverting changes of this
            recommended action on user resource. e.g., time when index drop is
            executed.
          format: date-time
          readOnly: true
          type: string
        score:
          description: >-
            Gets the impact of this recommended action. Possible values are 1 -
            Low impact, 2 - Medium Impact and 3 - High Impact
          format: int32
          readOnly: true
          type: integer
        state:
          $ref: '#/components/schemas/RecommendedActionStateInfo'
          description: Gets the info of the current state the recommended action is in.
        timeSeries:
          description: >-
            Gets the time series info of metrics for this recommended action
            e.g., CPU consumption time series
          items:
            $ref: '#/components/schemas/RecommendedActionMetricInfo'
          readOnly: true
          type: array
        validSince:
          description: Gets the time since when this recommended action is valid.
          format: date-time
          readOnly: true
          type: string
      required:
        - state
      type: object
    RecommendedActionStateInfo:
      description: >-
        Contains information of current state for an Azure SQL Database, Server
        or Elastic Pool Recommended Action.
      properties:
        actionInitiatedBy:
          description: >-
            Gets who initiated the execution of this recommended action.
            Possible Value are: User    -> When user explicitly notified system
            to apply the recommended action. System  -> When auto-execute status
            of this advisor was set to 'Enabled', in which case the system
            applied it.
          enum:
            - User
            - System
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecommendedActionInitiatedBy
        currentValue:
          description: >-
            Current state the recommended action is in. Some commonly used
            states are: Active      -> recommended action is active and no
            action has been taken yet. Pending     -> recommended action is
            approved for and is awaiting execution. Executing   -> recommended
            action is being applied on the user database. Verifying   ->
            recommended action was applied and is being verified of its
            usefulness by the system. Success     -> recommended action was
            applied and improvement found during verification. Pending Revert 
            -> verification found little or no improvement so recommended action
            is queued for revert or user has manually reverted. Reverting   ->
            changes made while applying recommended action are being reverted on
            the user database. Reverted    -> successfully reverted the changes
            made by recommended action on user database. Ignored     -> user
            explicitly ignored/discarded the recommended action. 
          enum:
            - Active
            - Pending
            - Executing
            - Verifying
            - PendingRevert
            - RevertCancelled
            - Reverting
            - Reverted
            - Ignored
            - Expired
            - Monitoring
            - Resolved
            - Success
            - Error
          type: string
          x-ms-enum:
            modelAsString: true
            name: RecommendedActionCurrentState
        lastModified:
          description: Gets the time when the state was last modified
          format: date-time
          readOnly: true
          type: string
      required:
        - currentValue
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

