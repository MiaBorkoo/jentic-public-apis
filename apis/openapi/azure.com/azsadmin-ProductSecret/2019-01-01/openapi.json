{
  "openapi": "3.0.0",
  "info": {
    "description": "Deployment Admin Client.",
    "title": "DeploymentAdminClient",
    "version": "2019-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azsadmin/resource-manager/deployment/Microsoft.Deployment.Admin/preview/2019-01-01/ProductSecret.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets": {
      "get": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSecretsList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductSecrets"
        ],
        "description": "Returns an array of product secrets.",
        "operationId": "ProductSecrets_List",
        "x-ms-examples": {
          "Return product secrets list.": {
            "$ref": "./examples/ProductSecret/List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}": {
      "get": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "#/components/parameters/SecretNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSecret"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductSecrets"
        ],
        "description": "Returns the specific product secret.",
        "operationId": "ProductSecrets_GET",
        "x-ms-examples": {
          "Return product secrets list.": {
            "$ref": "./examples/ProductSecret/Get.Json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}/import": {
      "post": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "#/components/parameters/SecretNameParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductSecrets"
        ],
        "description": "Imports a product secret.",
        "operationId": "ProductSecrets_Set",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecretParameters"
              }
            }
          },
          "description": "The parameters required for creating/updating a product secret.",
          "required": true
        },
        "x-ms-examples": {
          "Imports a product secret.": {
            "$ref": "./examples/ProductSecret/Import.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}/secrets/{secretName}/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "#/components/parameters/SecretNameParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductSecrets"
        ],
        "description": "Validates a product secret.",
        "operationId": "ProductSecrets_Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecretParameters"
              }
            }
          },
          "description": "The parameters required for creating/updating a product secret.",
          "required": true
        },
        "x-ms-examples": {
          "Validates a product secret.": {
            "$ref": "./examples/ProductSecret/Validate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "SecretNameParameter": {
        "description": "The secret name.",
        "in": "path",
        "name": "secretName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "SecretParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SecretParameters"
            }
          }
        },
        "description": "The parameters required for creating/updating a product secret.",
        "required": true
      }
    },
    "schemas": {
      "AlternativeDnsNames": {
        "description": "List of alternative DNS names.",
        "type": "string"
      },
      "AlternativeIpAddresses": {
        "description": "List of alternative IP Addresses.",
        "type": "string"
      },
      "ProductSecret": {
        "allOf": [
          {
            "$ref": "Deployment.json#/definitions/Resource"
          }
        ],
        "description": "Properties for a product secret.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProductSecretProperties",
            "description": "Properties of a product secret.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProductSecretProperties": {
        "description": "Properties of product secret.",
        "properties": {
          "description": {
            "description": "The secret description.",
            "type": "string"
          },
          "expiresAfter": {
            "description": "The expiration period of the secret (in ISO8601 format).",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the resource.",
            "type": "string"
          },
          "secretDescriptor": {
            "$ref": "#/components/schemas/SecretDescriptor",
            "description": "The secret type-specific descriptor."
          },
          "secretKind": {
            "description": "Specifies the secret kind.",
            "enum": [
              "AdHoc",
              "Certificate",
              "Password",
              "StorageAccount",
              "SymmetricKey"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecretKind"
            }
          },
          "secretState": {
            "$ref": "#/components/schemas/SecretState",
            "description": "The secret state."
          }
        },
        "type": "object"
      },
      "ProductSecretsList": {
        "description": "List of product secrets.",
        "properties": {
          "nextLink": {
            "description": "URI to the next page.",
            "type": "string"
          },
          "value": {
            "description": "List of product secrets.",
            "items": {
              "$ref": "#/components/schemas/ProductSecret"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SecretDescriptor": {
        "description": "The secret type-specific descriptor.",
        "properties": {
          "allowedCharacters": {
            "description": "The allowed characters in the password",
            "type": "string"
          },
          "alternativeDnsNames": {
            "description": "Alternative DNS Names.",
            "items": {
              "$ref": "#/components/schemas/AlternativeDnsNames"
            },
            "type": "array"
          },
          "alternativeIpAddresses": {
            "description": "The list of alternative IP addresses.",
            "items": {
              "$ref": "#/components/schemas/AlternativeIpAddresses"
            },
            "type": "array"
          },
          "keyLength": {
            "description": "The key length.",
            "type": "integer"
          },
          "passwordLength": {
            "description": "The minimum password length is 8 characters, and the maximum password length is 128 characters.",
            "type": "integer"
          },
          "passwordValidationRegex": {
            "description": "Password validation regular expression.",
            "type": "string"
          },
          "rotationStatus": {
            "description": "The storage account key secret rotation status.",
            "enum": [
              "None",
              "PlantNewSak",
              "RotateInactiveSak",
              "Complete"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RotationStatus"
            }
          },
          "secondaryKeyIsActive": {
            "description": "A value indicating whether the secondary or primary storage account key is active as a secret.",
            "type": "boolean"
          },
          "subject": {
            "description": "Certificate's subject",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecretParameters": {
        "description": "Parameters required for creating/updating a product secret.",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/data",
            "description": "The pfx certificate converted Base64 data."
          },
          "key": {
            "$ref": "#/components/schemas/key",
            "description": "The symmetric key."
          },
          "password": {
            "$ref": "#/components/schemas/password",
            "description": "The pfx certificate file password."
          },
          "value": {
            "$ref": "#/components/schemas/value",
            "description": "The secret value in a secure string format."
          }
        },
        "type": "object"
      },
      "SecretRotationStatus": {
        "description": "Specifies the secret rotation status.",
        "enum": [
          "None",
          "InProgress",
          "Complete"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SecretRotationStatus"
        }
      },
      "SecretState": {
        "description": "Represents the secret state.",
        "properties": {
          "expirationDate": {
            "description": "The secret expiration date.",
            "format": "date-time",
            "type": "string"
          },
          "rotationStatus": {
            "$ref": "#/components/schemas/SecretRotationStatus",
            "description": "the secret rotation status."
          },
          "status": {
            "$ref": "#/components/schemas/SecretStatus",
            "description": "The secret status."
          }
        },
        "type": "object"
      },
      "SecretStatus": {
        "description": "Specifies the secret status.",
        "enum": [
          "NotUploaded",
          "Uploaded",
          "Deployed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SecretStatus"
        }
      },
      "data": {
        "description": "The converted Base64 String from a certificate pfx file.",
        "type": "string"
      },
      "key": {
        "description": "The symmetric key as a secure string.",
        "type": "string"
      },
      "password": {
        "description": "The password as a secure string.",
        "type": "string"
      },
      "value": {
        "description": "The secret value in a secure string format.",
        "type": "string"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}