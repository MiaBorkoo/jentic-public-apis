openapi: 3.0.0
info:
  description: >-
    Use these REST APIs for performing operations on Certificate entity in your
    Azure API Management deployment. Certificates can be used to setup mutual
    authentication with your Backend in API Management. For more information
    refer to [How to secure backend using Mutual Auth
    Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).
  title: ApiManagementClient
  version: '2017-03-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates':
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - description: >-
            | Field          | Supported operators    | Supported
            functions                         |

            |----------------|------------------------|---------------------------------------------|

            | id             | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith |

            | subject        | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith |

            | thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith |

            | expirationDate | ge, le, eq, ne, gt, lt |
            N/A                                         |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/TopQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/SkipQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateCollection'
          description: Returns a collection of Certificate entity.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Certificates
      description: >-
        Lists a collection of all certificates in the specified service
        instance.
      operationId: Certificate_ListByService
      x-ms-examples:
        ApiManagementListCertificates:
          $ref: ./examples/ApiManagementListCertificates.json
      x-ms-odata: '#/components/schemas/CertificateContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/certificates/{certificateId}':
    delete:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/CertificateIdParameter'
        - description: >-
            The entity state (Etag) version of the certificate to delete. A
            value of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '204':
          description: The certificate was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Certificates
      description: Deletes specific certificate.
      operationId: Certificate_Delete
      x-ms-examples:
        ApiManagementDeleteCertificate:
          $ref: ./examples/ApiManagementDeleteCertificate.json
    get:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          description: The response body contains the specified Certificate entity.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Certificates
      description: Gets the details of the certificate specified by its identifier.
      operationId: Certificate_Get
      x-ms-examples:
        ApiManagementGetCertificate:
          $ref: ./examples/ApiManagementGetCertificate.json
    head:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/CertificateIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          description: >-
            Specified certificate entity exists and current entity state version
            is present in the ETag header.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Certificates
      description: >-
        Gets the entity state (Etag) version of the certificate specified by its
        identifier.
      operationId: Certificate_GetEntityTag
      x-ms-examples:
        ApiManagementHeadCertificate:
          $ref: ./examples/ApiManagementHeadCertificate.json
    put:
      parameters:
        - $ref: >-
            ./apimanagement.json#/components/parameters/ResourceGroupNameParameter
        - $ref: ./apimanagement.json#/components/parameters/ServiceNameParameter
        - $ref: '#/components/parameters/CertificateIdParameter'
        - description: >-
            The entity state (Etag) version of the certificate to update. A
            value of "*" can be used for If-Match to unconditionally apply the
            operation..
          in: header
          name: If-Match
          required: false
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
        - $ref: ./apimanagement.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          description: The certificate details were successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateContract'
          description: The new certificate was successfully added.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Certificates
      externalDocs:
        description: >-
          How to secure back-end services using client certificate
          authentication in Azure API Management
        url: >-
          https://azure.microsoft.com/en-us/documentation/articles/api-management-howto-mutual-certificates/
      description: >-
        Creates or updates the certificate being used for authentication with
        the backend.
      operationId: Certificate_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertificateCreateOrUpdateParameters'
        description: Create or Update parameters.
        required: true
      x-ms-examples:
        ApiManagementCreateCertificate:
          $ref: ./examples/ApiManagementCreateCertificate.json
components:
  parameters:
    CertificateIdParameter:
      description: >-
        Identifier of the certificate entity. Must be unique in the current API
        Management service instance.
      in: path
      name: certificateId
      required: true
      schema:
        maxLength: 256
        minLength: 1
        pattern: '^[^*#&+:<>?]+$'
        type: string
      x-ms-parameter-location: method
  schemas:
    CertificateCollection:
      description: Paged Certificates list representation.
      properties:
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: '#/components/schemas/CertificateContract'
          type: array
      type: object
    CertificateContract:
      allOf:
        - $ref: ./apimanagement.json#/definitions/Resource
      description: Certificate details.
      properties:
        properties:
          $ref: '#/components/schemas/CertificateContractProperties'
          description: Certificate properties details.
          x-ms-client-flatten: true
      type: object
    CertificateContractProperties:
      description: Properties of the Certificate contract.
      properties:
        expirationDate:
          description: >
            Expiration date of the certificate. The date conforms to the
            following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO
            8601 standard.
          format: date-time
          type: string
        subject:
          description: Subject attribute of the certificate.
          type: string
        thumbprint:
          description: Thumbprint of the certificate.
          type: string
      required:
        - subject
        - thumbprint
        - expirationDate
      type: object
    CertificateCreateOrUpdateParameters:
      description: Certificate create or update details.
      properties:
        properties:
          $ref: '#/components/schemas/CertificateCreateOrUpdateProperties'
          description: Certificate create or update properties details.
          x-ms-client-flatten: true
      type: object
    CertificateCreateOrUpdateProperties:
      description: Parameters supplied to the CreateOrUpdate certificate operation.
      properties:
        data:
          description: >-
            Base 64 encoded certificate using the application/x-pkcs12
            representation.
          type: string
        password:
          description: Password for the Certificate
          type: string
      required:
        - data
        - password
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow.
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

