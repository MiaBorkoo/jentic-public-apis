openapi: 3.0.0
info:
  description: Cognitive Services Management Client
  title: CognitiveServicesManagementClient
  version: '2017-04-18'
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.CognitiveServices/operations:
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationEntityListResult'
          description: OK.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - Operations
      deprecated: false
      description: Lists all the available Cognitive Services account operations.
      operationId: Operations_List
      x-ms-examples:
        Get Operations:
          $ref: ./examples/GetOperations.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/accounts':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccountListResult'
          description: >-
            The resource provider should return 200 (OK) to indicate that the
            operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.

            The nextLink field is expected to point to the URL the client should
            use to fetch the next page (per server side paging). This matches
            the OData guidelines for paged responses. If a resource provider
            does not support paging, it should return the same body but leave
            nextLink empty for future compatibility.

            For a detailed explanation of each field in the response body,
            please refer to the request body description in the PUT resource
            section. 
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
        - CognitiveServicesAccounts
      description: >-
        Returns all the resources of a particular type belonging to a
        subscription.
      operationId: Accounts_List
      x-ms-examples:
        List Accounts by Subscription:
          $ref: ./examples/ListAccountsBySubscription.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/checkDomainAvailability':
    post:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckDomainAvailabilityResult'
          description: OK.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - CognitiveServicesAccounts
      description: Check whether a domain is available.
      operationId: CheckDomainAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDomainAvailabilityParameter'
        description: Check Domain Availability parameter.
        required: true
      x-ms-examples:
        Check SKU Availability:
          $ref: ./examples/CheckDomainAvailability.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/locations/{location}/checkSkuAvailability':
    post:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: '#/components/parameters/locationParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSkuAvailabilityResultList'
          description: OK.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - CognitiveServicesAccounts
      description: Check available SKUs.
      operationId: CheckSkuAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSkuAvailabilityParameter'
        description: Check SKU Availability POST body.
        required: true
      x-ms-examples:
        Check SKU Availability:
          $ref: ./examples/CheckSkuAvailability.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.CognitiveServices/skus':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkusResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - Skus
        - CognitiveServicesAccounts
      description: >-
        Gets the list of Microsoft.CognitiveServices SKUs available for your
        Subscription.
      operationId: ResourceSkus_List
      x-ms-examples:
        Regenerate Keys:
          $ref: ./examples/GetSkus.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccountListResult'
          description: >-
            The resource provider should return 200 (OK) to indicate that the
            operation completed successfully. For other errors (e.g. internal
            errors) use the appropriate HTTP error code.

            The nextLink field is expected to point to the URL the client should
            use to fetch the next page (per server side paging). This matches
            the OData guidelines for paged responses here. If a resource
            provider does not support paging, it should return the same body
            (JSON object with "value" property) but omit nextLink entirely (or
            set to null, *not* empty string) for future compatibility.

            The nextLink should be implemented using following query parameters:

            路 skipToken: opaque token that allows the resource provider to skip
            resources already enumerated. This value is defined and returned by
            the RP after first request via nextLink.

            路 top: the optional client query parameter which defines the maximum
            number of records to be returned by the server.

            Implementation details:

            路 NextLink may include all the query parameters (specifically OData
            $filter) used by the client in the first query. 

            路 Server may return less records than requested with nextLink.
            Returning zero records with NextLink is an acceptable response. 

            Clients must fetch records until the nextLink is not returned back /
            null. Clients should never rely on number of returned records to
            determinate if pagination is completed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Error response describing why the operation failed. If the resource
            group does not exist, 404 (NotFound) will be returned.
      tags:
        - CognitiveServicesAccounts
      description: >-
        Returns all the resources of a particular type belonging to a resource
        group
      operationId: Accounts_ListByResourceGroup
      x-ms-examples:
        List Accounts by Resource Group:
          $ref: ./examples/ListAccountsByResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}':
    delete:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          description: >-
            A 200 (OK) should be returned if the object exists and was deleted
            successfully;
        '202':
          description: >-
            HTTP 202 (Accepted) if the operation was successfully started and
            will complete asynchronously.
        '204':
          description: >-
            a 204 (NoContent) should be used if the resource does not exist and
            the request is well formed.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
        - CognitiveServicesAccounts
      description: 'Deletes a Cognitive Services account from the resource group. '
      operationId: Accounts_Delete
      x-ms-examples:
        Delete Account:
          $ref: ./examples/DeleteAccount.json
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nKind\trequired.  String.\n\tThe API set for this API account. It can be \n\t路 a single API, for example: Face API, Vision API, Speech API. \n\ta bundle of APIs:  Face + Speech, Vision + Emotion, etc.\nsku.name\tRequired.\n\tThe pricing tier/plan of this API. Could be: \n\tF0 - Free\n\tB0 - Basic\n\tS0 - Standard\n\tP0 - Premium\n"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Error response describing why the operation failed. If the resource
            does not exist, 404 (NotFound) should be returned.
      tags:
        - CognitiveServicesAccounts
      description: Returns a Cognitive Services account specified by the parameters.
      operationId: Accounts_GetProperties
      x-ms-examples:
        Get Account:
          $ref: ./examples/GetAccount.json
    patch:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: >-
            The resource provider should return 200 (OK) to indicate that the
            operation completed successfully. 
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: >-
            HTTP 202 (Accepted) if the operation was successfully started and
            will complete asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Error response describing why the operation failed. If the resource
            group *or* resource does not exist, 404 (NotFound) should be
            returned.
      tags:
        - CognitiveServicesAccounts
      description: Updates a Cognitive Services account
      operationId: Accounts_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CognitiveServicesAccount'
        description: The parameters to provide for the created account.
        required: true
      x-ms-examples:
        Update Account:
          $ref: ./examples/UpdateAccount.json
    put:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: >-
            If resource is created successfully or already existed, the service
            should return 200 (OK).
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: >-
            If resource is created successfully, the service should return 201
            (OK).
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccount'
          description: >-
            HTTP 202 (Accepted) if the operation was successfully started and
            will complete asynchronously.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
        - CognitiveServicesAccounts
      description: >-
        Create Cognitive Services Account. Accounts is a resource group wide
        resource type. It holds the keys for developer to access intelligent
        APIs. It's also the resource type for billing.
      operationId: Accounts_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CognitiveServicesAccount'
        description: The parameters to provide for the created account.
        required: true
      x-ms-examples:
        Create Account:
          $ref: ./examples/CreateAccount.json
        Create Account Min:
          $ref: ./examples/CreateAccountMin.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/listKeys':
    post:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccountKeys'
          description: >-
            Returns with a response body containing the subscription keys for
            the resource: key1

            The first API key for authentication when client calls the API
            endpoint.


            key2

            The second API key for authentication when client calls the API
            endpoint.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
        - CognitiveServicesAccounts
      description: Lists the account keys for the specified Cognitive Services account.
      operationId: Accounts_ListKeys
      x-ms-examples:
        List Keys:
          $ref: ./examples/ListKeys.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnectionListResult'
          description: Successfully retrieved private endpoint connections.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - PrivateEndpointConnections
      description: >-
        Gets the private endpoint connections associated with the Cognitive
        Services account.
      operationId: PrivateEndpointConnections_List
      x-ms-examples:
        GetPrivateEndpointConnection:
          $ref: ./examples/ListPrivateEndpointConnections.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}':
    delete:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          description: OK -- Delete the private endpoint connection successfully.
        '204':
          description: No Content -- The private endpoint connection does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - PrivateEndpointConnections
      description: >-
        Deletes the specified private endpoint connection associated with the
        Cognitive Services account.
      operationId: PrivateEndpointConnections_Delete
      x-ms-examples:
        DeletePrivateEndpointConnection:
          $ref: ./examples/DeletePrivateEndpointConnection.json
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          description: OK -- Get the private endpoint connection properties successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - PrivateEndpointConnections
      description: >-
        Gets the specified private endpoint connection associated with the
        Cognitive Services account.
      operationId: PrivateEndpointConnections_Get
      x-ms-examples:
        GetPrivateEndpointConnection:
          $ref: ./examples/GetPrivateEndpointConnection.json
    put:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: '#/components/parameters/privateEndpointConnectionName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateEndpointConnection'
          description: >-
            OK -- Update the private endpoint connection properties
            successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - PrivateEndpointConnections
      description: >-
        Update the state of specified private endpoint connection associated
        with the Cognitive Services account.
      operationId: PrivateEndpointConnections_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateEndpointConnection'
        description: The private endpoint connection properties.
        required: true
      x-ms-examples:
        PutPrivateEndpointConnection:
          $ref: ./examples/PutPrivateEndpointConnection.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/privateLinkResources':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateLinkResourceListResult'
          description: Successfully retrieved private link resources.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed.
      tags:
        - PrivateLinkResources
      description: >-
        Gets the private link resources that need to be created for a Cognitive
        Services account.
      operationId: PrivateLinkResources_List
      x-ms-examples:
        ListPrivateLinkResources:
          $ref: ./examples/ListPrivateLinkResources.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/regenerateKey':
    post:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitiveServicesAccountKeys'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Error response describing why the operation failed
      tags:
        - CognitiveServicesAccounts
      description: >-
        Regenerates the specified account key for the specified Cognitive
        Services account.
      operationId: Accounts_RegenerateKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeyParameters'
        description: regenerate key parameters.
        required: true
      x-ms-examples:
        Regenerate Keys:
          $ref: ./examples/RegenerateKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/skus':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CognitiveServicesAccountEnumerateSkusResult
          description: "The resource provider should return 200 (OK) to indicate that the operation completed successfully.\nFor a detailed explanation of each field in the response body, please refer to the request body description in the PUT resource section. The only GET specific properties are \"name,\" \"type\" and \"id.\"\nField\tDescription\nsku\tRequired, object\n\tThe exact set of keys that define this sku. This matches the fields on the respective resource.\nsku.name\tRequired, string\n\tThe name of the SKU. This is typically a letter + number code, such as A0 or P3\nsku.tier\tRequired, string\n\tThe tier of this particular SKU. Typically one of:\n\t路 Free\n\t路 Basic\n\t路 Standard\n\t路 Premium\n"
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Error response describing why the operation failed. If the resource
            does not exist, 404 (NotFound) will be returned.
      tags:
        - CognitiveServicesAccounts
      description: List available SKUs for the requested Cognitive Services account
      operationId: Accounts_ListSkus
      x-ms-examples:
        List SKUs:
          $ref: ./examples/ListSkus.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CognitiveServices/accounts/{accountName}/usages':
    get:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter
        - $ref: '#/components/parameters/accountNameParameter'
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter
        - $ref: '#/components/parameters/usageFilterParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsagesResult'
          description: >-
            The usages for Cognitive Services account were retrieved
            successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: >-
            Error response describing why the operation failed. If the resource
            does not exist, 404 (NotFound) will be returned.
      tags:
        - CognitiveServicesAccounts
      description: Get usages for the requested Cognitive Services account
      operationId: Accounts_GetUsages
      x-ms-examples:
        Get Usages:
          $ref: ./examples/GetUsages.json
components:
  parameters:
    accountNameParameter:
      description: The name of Cognitive Services account.
      in: path
      name: accountName
      required: true
      schema:
        maxLength: 64
        minLength: 2
        pattern: '^[a-zA-Z0-9][a-zA-Z0-9_.-]*$'
        type: string
      x-ms-parameter-location: method
    locationParameter:
      description: Resource location.
      in: path
      name: location
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    privateEndpointConnectionName:
      description: >-
        The name of the private endpoint connection associated with the
        Cognitive Services Account
      in: path
      name: privateEndpointConnectionName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    usageFilterParameter:
      description: >-
        An OData filter expression that describes a subset of usages to return.
        The supported parameter is name.value (name of the metric, can have an
        or of multiple names).
      in: query
      name: $filter
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
  requestBodies:
    CognitiveServicesAccount:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CognitiveServicesAccount'
      description: The parameters to provide for the created account.
      required: true
  schemas:
    CheckDomainAvailabilityParameter:
      description: Check Domain availability parameter.
      properties:
        subdomainName:
          description: The subdomain name to use.
          type: string
        type:
          description: The Type of the resource.
          type: string
      required:
        - subdomainName
        - type
      type: object
    CheckDomainAvailabilityResult:
      description: Check Domain availability result.
      properties:
        isSubdomainAvailable:
          description: Indicates the given SKU is available or not.
          type: boolean
        reason:
          description: Reason why the SKU is not available.
          type: string
        subdomainName:
          description: The subdomain name to use.
          type: string
        type:
          description: The Type of the resource.
          type: string
      type: object
    CheckSkuAvailabilityParameter:
      description: Check SKU availability parameter.
      properties:
        kind:
          $ref: '#/components/schemas/CognitiveServicesAccountKind'
          description: The Kind of the resource.
        skus:
          description: The SKU of the resource.
          items:
            $ref: '#/components/schemas/SkuName'
          type: array
        type:
          description: The Type of the resource.
          type: string
      required:
        - skus
        - kind
        - type
      type: object
    CheckSkuAvailabilityResult:
      description: Check SKU availability result.
      properties:
        kind:
          $ref: '#/components/schemas/CognitiveServicesAccountKind'
          description: The Kind of the resource.
        message:
          description: Additional error message.
          type: string
        reason:
          description: Reason why the SKU is not available.
          type: string
        skuAvailable:
          description: Indicates the given SKU is available or not.
          type: boolean
        skuName:
          $ref: '#/components/schemas/SkuName'
          description: The SKU of Cognitive Services account.
        type:
          description: The Type of the resource.
          type: string
      type: object
    CheckSkuAvailabilityResultList:
      description: Check SKU availability result list.
      properties:
        value:
          description: Check SKU availability result list.
          items:
            $ref: '#/components/schemas/CheckSkuAvailabilityResult'
          type: array
      type: object
    CognitiveServicesAccount:
      description: >-
        Cognitive Services Account is an Azure resource representing the
        provisioned account, its type, location and SKU.
      properties:
        tags:
          additionalProperties:
            type: string
          description: >-
            Gets or sets a list of key value pairs that describe the resource.
            These tags can be used in viewing and grouping this resource (across
            resource groups). A maximum of 15 tags can be provided for a
            resource. Each tag must have a key no greater than 128 characters
            and value no greater than 256 characters.
          type: object
        etag:
          description: Entity Tag
          readOnly: true
          type: string
        id:
          description: The id of the created account
          readOnly: true
          type: string
        identity:
          $ref: '#/components/schemas/Identity'
          description: The identity of Cognitive Services account.
        kind:
          $ref: '#/components/schemas/CognitiveServicesAccountKind'
          description: The Kind of the resource.
        location:
          description: The location of the resource
          type: string
        name:
          description: The name of the created account
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/CognitiveServicesAccountProperties'
          description: Properties of Cognitive Services account.
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of Cognitive Services account.
        type:
          description: Resource type
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    CognitiveServicesAccountApiProperties:
      description: The api properties for special APIs.
      properties:
        aadClientId:
          description: (Metrics Advisor Only) The Azure AD Client Id (Application Id).
          maxLength: 500
          type: string
        aadTenantId:
          description: (Metrics Advisor Only) The Azure AD Tenant Id.
          maxLength: 500
          type: string
        eventHubConnectionString:
          description: (Personalization Only) The flag to enable statistics of Bing Search.
          maxLength: 1000
          pattern: >-
            ^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);(
            *)SharedAccessKey=(.*)$
          type: string
        qnaAzureSearchEndpointId:
          description: (QnAMaker Only) The Azure Search endpoint id of QnAMaker.
          type: string
        qnaAzureSearchEndpointKey:
          description: (QnAMaker Only) The Azure Search endpoint key of QnAMaker.
          type: string
        qnaRuntimeEndpoint:
          description: (QnAMaker Only) The runtime endpoint of QnAMaker.
          type: string
        statisticsEnabled:
          description: (Bing Search Only) The flag to enable statistics of Bing Search.
          type: boolean
        storageAccountConnectionString:
          description: (Personalization Only) The storage account connection string.
          maxLength: 1000
          pattern: >-
            ^(( *)DefaultEndpointsProtocol=(http|https)( *);(
            *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$
          type: string
        superUser:
          description: (Metrics Advisor Only) The super user of Metrics Advisor.
          maxLength: 500
          type: string
        websiteName:
          description: (Metrics Advisor Only) The website name of Metrics Advisor.
          maxLength: 500
          type: string
      type: object
    CognitiveServicesAccountEnumerateSkusResult:
      description: The list of cognitive services accounts operation response.
      properties:
        value:
          description: Gets the list of Cognitive Services accounts and their properties.
          items:
            $ref: '#/components/schemas/CognitiveServicesResourceAndSku'
          readOnly: true
          type: array
      type: object
    CognitiveServicesAccountKeys:
      description: The access keys for the cognitive services account.
      properties:
        key1:
          description: Gets the value of key 1.
          type: string
        key2:
          description: Gets the value of key 2.
          type: string
      type: object
    CognitiveServicesAccountKind:
      description: Required. Indicates the type of cognitive service account.
      type: string
    CognitiveServicesAccountListResult:
      description: The list of cognitive services accounts operation response.
      properties:
        nextLink:
          description: The link used to get the next page of accounts.
          type: string
        value:
          description: Gets the list of Cognitive Services accounts and their properties.
          items:
            $ref: '#/components/schemas/CognitiveServicesAccount'
          readOnly: true
          type: array
      type: object
    CognitiveServicesAccountProperties:
      description: Properties of Cognitive Services account.
      properties:
        apiProperties:
          $ref: '#/components/schemas/CognitiveServicesAccountApiProperties'
          description: The api properties for special APIs.
        capabilities:
          description: >-
            Gets the capabilities of the cognitive services account. Each item
            indicates the capability of a specific feature. The values are
            read-only and for reference only.
          items:
            $ref: '#/components/schemas/SkuCapability'
          readOnly: true
          type: array
        customSubDomainName:
          description: Optional subdomain name used for token-based authentication.
          type: string
        dateCreated:
          description: Gets the date of cognitive services account creation.
          readOnly: true
          type: string
        encryption:
          $ref: '#/components/schemas/Encryption'
          description: The encryption properties for this resource.
        endpoint:
          description: Endpoint of the created account.
          readOnly: true
          type: string
        internalId:
          description: The internal identifier.
          readOnly: true
          type: string
        isMigrated:
          description: If the resource is migrated from an existing key.
          readOnly: true
          type: boolean
        networkAcls:
          $ref: '#/components/schemas/NetworkRuleSet'
          description: >-
            A collection of rules governing the accessibility from specific
            network locations.
        privateEndpointConnections:
          description: >-
            The private endpoint connection associated with the Cognitive
            Services account.
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          type: array
        provisioningState:
          description: >-
            Gets the status of the cognitive services account at the time the
            operation was called.
          enum:
            - Creating
            - ResolvingDNS
            - Moving
            - Deleting
            - Succeeded
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        publicNetworkAccess:
          description: >-
            Whether or not public endpoint access is allowed for this account.
            Value is optional but if passed in, must be 'Enabled' or 'Disabled'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: PublicNetworkAccess
        skuChangeInfo:
          $ref: '#/components/schemas/CognitiveServicesAccountSkuChangeInfo'
          description: Sku change info of account.
          readOnly: true
        userOwnedStorage:
          description: The storage accounts for this resource.
          items:
            $ref: '#/components/schemas/UserOwnedStorage'
          type: array
      type: object
    CognitiveServicesAccountSkuChangeInfo:
      description: Sku change info of account.
      properties:
        countOfDowngrades:
          description: Gets the count of downgrades.
          readOnly: true
          type: number
        countOfUpgradesAfterDowngrades:
          description: Gets the count of upgrades after downgrades.
          readOnly: true
          type: number
        lastChangeDate:
          description: Gets the last change date.
          readOnly: true
          type: string
      type: object
    CognitiveServicesResourceAndSku:
      description: Cognitive Services resource type and SKU.
      properties:
        resourceType:
          description: Resource Namespace and Type
          type: string
        sku:
          $ref: '#/components/schemas/Sku'
          description: The SKU of Cognitive Services account.
      type: object
    Encryption:
      description: Properties to configure Encryption
      properties:
        keySource:
          default: Microsoft.KeyVault
          description: Enumerates the possible value of keySource for Encryption
          enum:
            - Microsoft.CognitiveServices
            - Microsoft.KeyVault
          type: string
          x-ms-enum:
            modelAsString: true
            name: keySource
        keyVaultProperties:
          $ref: '#/components/schemas/KeyVaultProperties'
          description: Properties of KeyVault
      type: object
    Error:
      description: Cognitive Services error object.
      properties:
        error:
          $ref: '#/components/schemas/ErrorBody'
          description: The error body.
      type: object
    ErrorBody:
      description: Cognitive Services error body.
      properties:
        code:
          description: error code
          type: string
        message:
          description: error message
          type: string
      required:
        - code
        - message
      type: object
    Identity:
      description: Managed service identity.
      properties:
        principalId:
          description: Principal Id of managed service identity.
          readOnly: true
          type: string
        tenantId:
          description: Tenant of managed service identity.
          readOnly: true
          type: string
        type:
          description: Type of managed service identity.
          enum:
            - None
            - SystemAssigned
            - UserAssigned
          type: string
          x-ms-enum:
            modelAsString: false
            name: IdentityType
        userAssignedIdentities:
          additionalProperties:
            $ref: '#/components/schemas/UserAssignedIdentity'
            description: User-assigned managed identity.
          description: >-
            The list of user assigned identities associated with the resource.
            The user identity dictionary key references will be ARM resource ids
            in the form:
            '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}
          type: object
      type: object
    IpRule:
      description: >-
        A rule governing the accessibility from a specific ip address or ip
        range.
      properties:
        value:
          description: >-
            An IPv4 address range in CIDR notation, such as '124.56.78.91'
            (simple IP address) or '124.56.78.0/24' (all addresses that start
            with 124.56.78).
          type: string
      required:
        - value
      type: object
    KeyVaultProperties:
      description: Properties to configure keyVault Properties
      properties:
        keyName:
          description: Name of the Key from KeyVault
          type: string
        keyVaultUri:
          description: Uri of KeyVault
          type: string
        keyVersion:
          description: Version of the Key from KeyVault
          type: string
      type: object
    MetricName:
      description: A metric name.
      properties:
        localizedValue:
          description: The friendly name of the metric.
          readOnly: true
          type: string
        value:
          description: The name of the metric.
          readOnly: true
          type: string
      type: object
    NetworkRuleSet:
      description: A set of rules governing the network accessibility.
      properties:
        defaultAction:
          description: >-
            The default action when no rule from ipRules and from
            virtualNetworkRules match. This is only used after the bypass
            property has been evaluated.
          enum:
            - Allow
            - Deny
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetworkRuleAction
        ipRules:
          description: The list of IP address rules.
          items:
            $ref: '#/components/schemas/IpRule'
          type: array
        virtualNetworkRules:
          description: The list of virtual network rules.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          type: array
      type: object
    OperationDisplayInfo:
      description: The operation supported by Cognitive Services.
      properties:
        description:
          description: The description of the operation.
          type: string
        operation:
          description: 'The action that users can perform, based on their permission level.'
          type: string
        provider:
          description: 'Service provider: Microsoft Cognitive Services.'
          type: string
        resource:
          description: Resource on which the operation is performed.
          type: string
      type: object
    OperationEntity:
      description: The operation supported by Cognitive Services.
      properties:
        display:
          $ref: '#/components/schemas/OperationDisplayInfo'
          description: The operation supported by Cognitive Services.
        name:
          description: 'Operation name: {provider}/{resource}/{operation}.'
          type: string
        origin:
          description: The origin of the operation.
          type: string
        properties:
          description: Additional properties.
          type: object
      type: object
    OperationEntityListResult:
      description: The list of cognitive services accounts operation response.
      properties:
        nextLink:
          description: The link used to get the next page of operations.
          type: string
        value:
          description: The list of operations.
          items:
            $ref: '#/components/schemas/OperationEntity'
          type: array
      type: object
    PrivateEndpoint:
      description: The Private Endpoint resource.
      properties:
        id:
          description: The ARM identifier for Private Endpoint
          readOnly: true
          type: string
      type: object
    PrivateEndpointConnection:
      allOf:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/definitions/Resource
      description: The Private Endpoint Connection resource.
      properties:
        etag:
          description: Entity Tag
          readOnly: true
          type: string
        location:
          description: The location of the private endpoint connection
          type: string
        properties:
          $ref: '#/components/schemas/PrivateEndpointConnectionProperties'
          description: Resource properties.
      type: object
    PrivateEndpointConnectionListResult:
      description: A list of private endpoint connections
      properties:
        value:
          description: Array of private endpoint connections
          items:
            $ref: '#/components/schemas/PrivateEndpointConnection'
          type: array
      type: object
    PrivateEndpointConnectionProperties:
      description: Properties of the PrivateEndpointConnectProperties.
      properties:
        groupIds:
          description: The private link resource group ids.
          items:
            type: string
          type: array
        privateEndpoint:
          $ref: '#/components/schemas/PrivateEndpoint'
          description: The resource of private end point.
        privateLinkServiceConnectionState:
          $ref: '#/components/schemas/PrivateLinkServiceConnectionState'
          description: >-
            A collection of information about the state of the connection
            between service consumer and provider.
      required:
        - privateLinkServiceConnectionState
      type: object
    PrivateEndpointServiceConnectionStatus:
      description: The private endpoint connection status.
      enum:
        - Pending
        - Approved
        - Rejected
        - Disconnected
      type: string
      x-ms-enum:
        modelAsString: true
        name: PrivateEndpointServiceConnectionStatus
    PrivateLinkResource:
      allOf:
        - $ref: >-
            ../../../../../common-types/resource-management/v1/types.json#/definitions/Resource
      description: A private link resource
      properties:
        properties:
          $ref: '#/components/schemas/PrivateLinkResourceProperties'
          description: Resource properties.
      type: object
    PrivateLinkResourceListResult:
      description: A list of private link resources
      properties:
        value:
          description: Array of private link resources
          items:
            $ref: '#/components/schemas/PrivateLinkResource'
          type: array
      type: object
    PrivateLinkResourceProperties:
      description: Properties of a private link resource.
      properties:
        displayName:
          description: The private link resource display name.
          readOnly: true
          type: string
        groupId:
          description: The private link resource group id.
          readOnly: true
          type: string
        requiredMembers:
          description: The private link resource required member names.
          items:
            type: string
          readOnly: true
          type: array
        requiredZoneNames:
          description: The private link resource Private link DNS zone name.
          items:
            type: string
          type: array
      type: object
    PrivateLinkServiceConnectionState:
      description: >-
        A collection of information about the state of the connection between
        service consumer and provider.
      properties:
        actionsRequired:
          description: >-
            A message indicating if changes on the service provider require any
            updates on the consumer.
          type: string
        description:
          description: The reason for approval/rejection of the connection.
          type: string
        status:
          $ref: '#/components/schemas/PrivateEndpointServiceConnectionStatus'
          description: >-
            Indicates whether the connection has been Approved/Rejected/Removed
            by the owner of the service.
      type: object
    RegenerateKeyParameters:
      description: Regenerate key parameters.
      properties:
        keyName:
          description: key name to generate (Key1|Key2)
          enum:
            - Key1
            - Key2
          type: string
          x-ms-enum:
            modelAsString: false
            name: KeyName
      required:
        - keyName
      type: object
    ResourceSku:
      description: Describes an available Cognitive Services SKU.
      properties:
        kind:
          description: The Kind of resources that are supported in this SKU.
          readOnly: true
          type: string
        locations:
          description: The set of locations that the SKU is available.
          items:
            type: string
          readOnly: true
          type: array
        name:
          description: The name of SKU.
          readOnly: true
          type: string
        resourceType:
          description: The type of resource the SKU applies to.
          readOnly: true
          type: string
        restrictions:
          description: >-
            The restrictions because of which SKU cannot be used. This is empty
            if there are no restrictions.
          items:
            $ref: '#/components/schemas/ResourceSkuRestrictions'
          readOnly: true
          type: array
        tier:
          description: Specifies the tier of Cognitive Services account.
          readOnly: true
          type: string
      type: object
    ResourceSkuRestrictionInfo:
      properties:
        locations:
          description: Locations where the SKU is restricted
          items:
            type: string
          readOnly: true
          type: array
        zones:
          description: List of availability zones where the SKU is restricted.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ResourceSkuRestrictions:
      description: Describes restrictions of a SKU.
      properties:
        reasonCode:
          description: The reason for restriction.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ResourceSkuRestrictionsReasonCode
        restrictionInfo:
          $ref: '#/components/schemas/ResourceSkuRestrictionInfo'
          description: The information about the restriction where the SKU cannot be used.
          readOnly: true
        type:
          description: The type of restrictions.
          enum:
            - Location
            - Zone
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: ResourceSkuRestrictionsType
        values:
          description: >-
            The value of restrictions. If the restriction type is set to
            location. This would be different locations where the SKU is
            restricted.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ResourceSkusResult:
      description: The Get Skus operation response.
      properties:
        nextLink:
          description: The uri to fetch the next page of Skus.
          type: string
        value:
          description: The list of skus available for the subscription.
          items:
            $ref: '#/components/schemas/ResourceSku'
          type: array
      required:
        - value
      type: object
    Sku:
      description: The SKU of the cognitive services account.
      properties:
        name:
          $ref: '#/components/schemas/SkuName'
          description: >-
            Gets or sets the sku name. Required for account creation, optional
            for update.
        tier:
          description: Gets the sku tier. This is based on the SKU name.
          enum:
            - Free
            - Standard
            - Premium
            - Enterprise
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuTier
      required:
        - name
      type: object
    SkuCapability:
      description: SkuCapability indicates the capability of a certain feature.
      properties:
        name:
          description: The name of the SkuCapability.
          type: string
        value:
          description: The value of the SkuCapability.
          type: string
      type: object
    SkuName:
      description: The name of SKU.
      type: string
    UnitType:
      description: The unit of the metric.
      enum:
        - Count
        - Bytes
        - Seconds
        - Percent
        - CountPerSecond
        - BytesPerSecond
        - Milliseconds
      readOnly: true
      type: string
      x-ms-enum:
        modelAsString: true
        name: UnitType
    Usage:
      description: The usage data for a usage request.
      properties:
        currentValue:
          description: Current value for this metric.
          format: double
          readOnly: true
          type: number
        limit:
          description: Maximum value for this metric.
          format: double
          readOnly: true
          type: number
        name:
          $ref: '#/components/schemas/MetricName'
          description: The name information for the metric.
          readOnly: true
        nextResetTime:
          description: Next reset time for current quota.
          readOnly: true
          type: string
        quotaPeriod:
          description: The quota period used to summarize the usage values.
          readOnly: true
          type: string
        status:
          description: Cognitive Services account quota usage status.
          enum:
            - Included
            - Blocked
            - InOverage
            - Unknown
          type: string
          x-ms-enum:
            modelAsString: true
            name: QuotaUsageStatus
        unit:
          $ref: '#/components/schemas/UnitType'
          description: The unit of the metric.
      type: object
    UsagesResult:
      description: The response to a list usage request.
      properties:
        value:
          description: The list of usages for Cognitive Service account.
          items:
            $ref: '#/components/schemas/Usage'
          readOnly: true
          type: array
      type: object
    UserAssignedIdentity:
      description: User-assigned managed identity.
      properties:
        clientId:
          description: Client App Id associated with this identity.
          type: string
        principalId:
          description: Azure Active Directory principal ID associated with this Identity.
          type: string
      type: object
    UserOwnedStorage:
      description: The user owned storage for Cognitive Services account.
      properties:
        resourceId:
          description: Full resource id of a Microsoft.Storage resource.
          type: string
      type: object
    VirtualNetworkRule:
      description: A rule governing the accessibility from a specific virtual network.
      properties:
        id:
          description: >-
            Full resource id of a vnet subnet, such as
            '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.
          type: string
        ignoreMissingVnetServiceEndpoint:
          description: Ignore missing vnet service endpoint or not.
          type: boolean
        state:
          description: Gets the state of virtual network rule.
          type: string
      required:
        - id
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2

