{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.",
    "title": "ApiManagementClient",
    "version": "2018-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2018-01-01/apimtagresources.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/tagResources": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "description": "| Field       | Supported operators    | Supported functions                         |\n|-------------|------------------------|---------------------------------------------|\n| id          | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| aid         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| apiName     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| apiRevision | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| path        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| description | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| serviceUrl  | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| method      | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| urlTemplate | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| terms       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| isCurrent   | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResourceCollection"
                }
              }
            },
            "description": "Lists a collection of TagResource entities."
          }
        },
        "tags": [
          "TagResources"
        ],
        "description": "Lists a collection of resources associated with tags.",
        "operationId": "TagResource_ListByService",
        "x-ms-examples": {
          "ApiManagementListTagResources": {
            "$ref": "./examples/ApiManagementListTagResources.json"
          }
        },
        "x-ms-odata": "#/components/schemas/TagResourceContract",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiTagResourceContractProperties": {
        "allOf": [
          {
            "$ref": "./apimapis.json#/definitions/ApiEntityBaseContract"
          }
        ],
        "description": "API contract properties for the Tag Resources.",
        "properties": {
          "id": {
            "description": "API identifier in the form /apis/{apiId}.",
            "type": "string"
          },
          "name": {
            "description": "API name.",
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          },
          "path": {
            "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API.",
            "maxLength": 400,
            "minLength": 0,
            "type": "string"
          },
          "protocols": {
            "description": "Describes on which protocols the operations in this API can be invoked.",
            "items": {
              "enum": [
                "http",
                "https"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "Protocol"
              }
            },
            "type": "array"
          },
          "serviceUrl": {
            "description": "Absolute URL of the backend service implementing this API.",
            "maxLength": 2000,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationTagResourceContractProperties": {
        "description": "Operation Entity contract Properties.",
        "properties": {
          "apiName": {
            "description": "Api Name.",
            "readOnly": true,
            "type": "string"
          },
          "apiRevision": {
            "description": "Api Revision.",
            "readOnly": true,
            "type": "string"
          },
          "apiVersion": {
            "description": "Api Version.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "Operation Description.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Identifier of the operation in form /operations/{operationId}.",
            "type": "string"
          },
          "method": {
            "externalDocs": {
              "description": "As defined by RFC.",
              "url": "http://www.rfc-editor.org/rfc/rfc7230.txt"
            },
            "description": "A Valid HTTP Operation Method. Typical Http Methods like GET, PUT, POST but not limited by only them.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Operation name.",
            "readOnly": true,
            "type": "string"
          },
          "urlTemplate": {
            "description": "Relative URL template identifying the target resource for this operation. May include parameters. Example: /customers/{cid}/orders/{oid}/?date={date}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductTagResourceContractProperties": {
        "allOf": [
          {
            "$ref": "./apimproducts.json#/definitions/ProductEntityBaseParameters"
          }
        ],
        "description": "Product profile.",
        "properties": {
          "id": {
            "description": "Identifier of the product in the form of /products/{productId}",
            "type": "string"
          },
          "name": {
            "description": "Product name.",
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "TagResourceCollection": {
        "description": "Paged Tag list representation.",
        "properties": {
          "count": {
            "description": "Total record count number across all pages.",
            "format": "int64",
            "type": "integer"
          },
          "nextLink": {
            "description": "Next page link if any.",
            "type": "string"
          },
          "value": {
            "description": "Page values.",
            "items": {
              "$ref": "#/components/schemas/TagResourceContract"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TagResourceContract": {
        "description": "TagResource contract properties.",
        "properties": {
          "api": {
            "$ref": "#/components/schemas/ApiTagResourceContractProperties",
            "description": "Api associated with the tag."
          },
          "operation": {
            "$ref": "#/components/schemas/OperationTagResourceContractProperties",
            "description": "Operation associated with the tag."
          },
          "product": {
            "$ref": "#/components/schemas/ProductTagResourceContractProperties",
            "description": "Product associated with the tag."
          },
          "tag": {
            "$ref": "#/components/schemas/TagTagResourceContractProperties",
            "description": "Tag associated with the resource."
          }
        },
        "required": [
          "tag"
        ],
        "type": "object"
      },
      "TagTagResourceContractProperties": {
        "description": "Contract defining the Tag property in the Tag Resource Contract",
        "properties": {
          "id": {
            "description": "Tag identifier",
            "type": "string"
          },
          "name": {
            "description": "Tag Name",
            "maxLength": 160,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}