{
  "openapi": "3.0.0",
  "info": {
    "description": "APIs to deploy and manage resources to SeaBreeze.",
    "title": "SeaBreezeManagementClient",
    "version": "2018-07-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabricmesh/resource-manager/Microsoft.ServiceFabricMesh/preview/2018-07-01-preview/servicefabricmesh.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.ServiceFabricMesh/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all the available operations provided by Service Fabric SeaBreeze resource provider.",
        "operationId": "Operations_List",
        "summary": "Lists all of the available operations.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Gets the information about all application resources in a given subscription. The information includes the information about the application's services and other runtime properties.",
        "operationId": "Application_ListBySubscription",
        "summary": "Gets all the application resources in a given subscription.",
        "x-ms-examples": {
          "ApplicationList": {
            "$ref": "./examples/ApplicationsBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Networks"
        ],
        "description": "Gets the information about all network resources in a given subscription. The information includes the network description and other runtime properties.",
        "operationId": "Network_ListBySubscription",
        "summary": "Gets all the network resources in a given subscription.",
        "x-ms-examples": {
          "NetworksList": {
            "$ref": "./examples/NetworksBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Volumes"
        ],
        "description": "Gets the information about all volume resources in a given subscription. The information includes the volume description and other runtime information.\n",
        "operationId": "Volume_ListBySubscription",
        "summary": "Gets all the volume resources in a given subscription.",
        "x-ms-examples": {
          "VolumesList": {
            "$ref": "./examples/VolumesBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Gets the information about all application resources in a given resource group. The information includes the information about the application's services and other runtime properties.",
        "operationId": "Application_ListByResourceGroup",
        "summary": "Gets all the application resources in a given resource group.",
        "x-ms-examples": {
          "ApplicationList": {
            "$ref": "./examples/ApplicationsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content - the specified application was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Deletes the application resource identified by the name.",
        "operationId": "Application_Delete",
        "summary": "Deletes the application resource.",
        "x-ms-examples": {
          "ApplicationDelete": {
            "$ref": "./examples/ApplicationDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResourceDescription"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Gets the information about the application resource with a given name. The information includes the information about the application's services and other runtime properties.",
        "operationId": "Application_Get",
        "summary": "Gets the application resource.",
        "x-ms-examples": {
          "ApplicationGet": {
            "$ref": "./examples/ApplicationGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResourceDescription"
                }
              }
            },
            "description": "Ok"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationResourceDescription"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Applications"
        ],
        "description": "Creates an application resource with the specified name and description. If an application with the same name already exists, then its description is updated to the one indicated in this request.\n\nUse network resources to provide public connectivity to the services of an application.\n",
        "operationId": "Application_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationResourceDescription"
              }
            }
          },
          "description": "Description for creating an application resource.",
          "required": true
        },
        "summary": "Creates or updates an application resource.",
        "x-ms-examples": {
          "ApplicationCreateOrUpdate": {
            "$ref": "./examples/ApplicationCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Services"
        ],
        "description": "Gets the information about all services of a given service of an application. The information includes the runtime properties of the service instance.",
        "operationId": "Service_ListByApplicationName",
        "summary": "Gets services of a given application.",
        "x-ms-examples": {
          "ServiceGetAll": {
            "$ref": "./examples/ServiceList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ServiceNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResourceDescription"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Services"
        ],
        "description": "The operation returns the properties of the service.",
        "operationId": "Service_Get",
        "summary": "Gets the properties of the service.",
        "x-ms-examples": {
          "ServiceGet": {
            "$ref": "./examples/ServiceGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ServiceNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceReplicaList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Replicas"
        ],
        "description": "Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.",
        "operationId": "Replica_ListByServiceName",
        "summary": "Gets replicas of a given service.",
        "x-ms-examples": {
          "ReplicasGetAll": {
            "$ref": "./examples/ReplicasGetAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ServiceNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ReplicaNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceReplicaDescription"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Replicas"
        ],
        "description": "Gets the information about the specified replica of a given service of an application. The information includes the runtime properties of the replica instance.",
        "operationId": "Replica_Get",
        "summary": "Gets a specific replica of a given service.",
        "x-ms-examples": {
          "ReplicaGet": {
            "$ref": "./examples/ReplicaGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ApplicationNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ServiceNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/ReplicaNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/CodePackageNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/TailOptionalQueryParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContainerLogs"
                }
              }
            },
            "description": "Successful response"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "ContainerLogs"
        ],
        "description": "Get the logs for the container of a given code package of an application.",
        "operationId": "CodePackage_GetContainerLog",
        "summary": "Gets the logs for the container.",
        "x-ms-examples": {
          "ContainerLogsList": {
            "$ref": "./examples/ContainerLogsList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Networks"
        ],
        "description": "Gets the information about all network resources in a given resource group. The information includes the network description and other runtime properties.\n",
        "operationId": "Network_ListByResourceGroup",
        "summary": "Gets all the network resources in a given resource group.",
        "x-ms-examples": {
          "NetworksList": {
            "$ref": "./examples/NetworksByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/NetworkNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified network was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Networks"
        ],
        "description": "Deletes the network resource identified by the name.",
        "operationId": "Network_Delete",
        "summary": "Deletes the network resource.",
        "x-ms-examples": {
          "NetworkDelete": {
            "$ref": "./examples/NetworkDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/NetworkNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkResourceDescription"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Networks"
        ],
        "description": "Gets the information about the network resource with a given name. This information includes the network description and other runtime information.\n",
        "operationId": "Network_Get",
        "summary": "Gets the network resource.",
        "x-ms-examples": {
          "NetworkGet": {
            "$ref": "./examples/NetworkGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/NetworkNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkResourceDescription"
                }
              }
            },
            "description": "Ok"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkResourceDescription"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Networks"
        ],
        "description": "Creates a network resource with the specified name and description. If a network with the same name already exists, then its description is updated to the one indicated in this request.\n\nUse network resources to create private network and configure public connectivity for services within your application. \n",
        "operationId": "Network_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetworkResourceDescription"
              }
            }
          },
          "description": "Description for creating a network resource.",
          "required": true
        },
        "summary": "Creates or updates a network resource.",
        "x-ms-examples": {
          "Network_Create": {
            "$ref": "./examples/NetworkCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResourceDescriptionList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Volumes"
        ],
        "description": "Gets the information about all volume resources in a given resource group. The information includes the volume description and other runtime information.\n",
        "operationId": "Volume_ListByResourceGroup",
        "summary": "Gets all the volume resources in a given resource group.",
        "x-ms-examples": {
          "VolumesList": {
            "$ref": "./examples/VolumesByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/VolumeNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content - the specified volume was not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Volumes"
        ],
        "description": "Deletes the volume identified by the name.",
        "operationId": "Volume_Delete",
        "summary": "Deletes the volume resource.",
        "x-ms-examples": {
          "VolumeDelete": {
            "$ref": "./examples/VolumeDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/VolumeNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResourceDescription"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Volumes"
        ],
        "description": "Gets the information about the volume resource with a given name. This information includes the volume description and other runtime information.\n",
        "operationId": "Volume_Get",
        "summary": "Gets the volume resource.",
        "x-ms-examples": {
          "VolumeGet": {
            "$ref": "./examples/VolumeGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/api-versionRequiredQueryParam"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupNameRequiredPathParam"
          },
          {
            "$ref": "#/components/parameters/VolumeNameRequiredPathParam"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResourceDescription"
                }
              }
            },
            "description": "Ok"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VolumeResourceDescription"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": [
          "Volumes"
        ],
        "description": "Creates a volume resource with the specified name and description. If a volume with the same name already exists, then its description is updated to the one indicated in this request.\n",
        "operationId": "Volume_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VolumeResourceDescription"
              }
            }
          },
          "description": "Description for creating a volume resource.",
          "required": true
        },
        "summary": "Creates or updates a volume resource.",
        "x-ms-examples": {
          "VolumeCreate": {
            "$ref": "./examples/VolumeCreate.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApplicationNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The identity of the application.",
        "in": "path",
        "name": "applicationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "CodePackageNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The name of the code package.",
        "in": "path",
        "name": "codePackageName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "NetworkNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The identity of the network.",
        "in": "path",
        "name": "networkName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "ReplicaNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The identity of the service replica.",
        "in": "path",
        "name": "replicaName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "ResourceGroupNameRequiredPathParam": {
        "description": "Azure resource group name",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ServiceNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The identity of the service.",
        "in": "path",
        "name": "serviceName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "TailOptionalQueryParam": {
        "description": "Number of lines to show from the end of the logs. Default is 100.",
        "in": "query",
        "name": "tail",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "VolumeNameRequiredPathParam": {
        "allowReserved": true,
        "description": "The identity of the volume.",
        "in": "path",
        "name": "volumeName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "api-versionRequiredQueryParam": {
        "description": "The version of the API. This parameter is required and its value must be `2018-07-01-preview`.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "default": "2018-07-01-preview",
          "enum": [
            "2018-07-01-preview"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "2018-07-01-preview",
          "values": [
            {
              "description": "The `2018-07-01-preview` version of the API.",
              "value": "2018-07-01-preview"
            }
          ]
        }
      },
      "subscriptionIdRequiredPathParam": {
        "description": "The customer subscription identifier",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "ApplicationProperties": {
        "description": "This type describes properties of an application resource.",
        "properties": {
          "debugParams": {
            "description": "Internal use.",
            "type": "string"
          },
          "description": {
            "description": "User readable description of the application.",
            "type": "string"
          },
          "diagnostics": {
            "$ref": "#/components/schemas/DiagnosticsDescription",
            "description": "Describes the diagnostics definition and usage for an application resource."
          },
          "healthState": {
            "$ref": "#/components/schemas/HealthState",
            "description": "Describes the health state of an application resource.",
            "readOnly": true
          },
          "serviceNames": {
            "description": "Names of the services in the application.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "services": {
            "description": "describes the services in the application.",
            "items": {
              "$ref": "#/components/schemas/ServiceResourceDescription"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of the application resource.",
            "enum": [
              "Invalid",
              "Ready",
              "Upgrading",
              "Creating",
              "Deleting",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ApplicationResourceStatus"
            }
          },
          "statusDetails": {
            "description": "Gives additional information about the current status of the application deployment.",
            "readOnly": true,
            "type": "string"
          },
          "unhealthyEvaluation": {
            "description": "When the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ApplicationResourceDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "This type describes an application resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ApplicationResourceProperties",
            "description": "This type describes properties of an application resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ApplicationResourceDescriptionList": {
        "description": "A pageable list of application resources.",
        "properties": {
          "nextLink": {
            "description": "URI to fetch the next page of the list.",
            "type": "string"
          },
          "value": {
            "description": "One page of the list.",
            "items": {
              "$ref": "#/components/schemas/ApplicationResourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ApplicationResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProvisionedResourceProperties"
          },
          {
            "$ref": "#/components/schemas/ApplicationProperties"
          }
        ],
        "description": "This type describes properties of an application resource."
      },
      "AvailableOperationDescriptionProperties": {
        "description": "Properties available for a Microsoft.Web resource provider operation.",
        "properties": {
          "serviceSpecification": {
            "$ref": "#/components/schemas/ServiceSpecification"
          }
        },
        "type": "object"
      },
      "AvailableOperationDisplay": {
        "description": "An operation available at the listed Azure resource provider.",
        "properties": {
          "description": {
            "description": "Description of the available operation.",
            "type": "string"
          },
          "operation": {
            "description": "Name of the available operation.",
            "type": "string"
          },
          "provider": {
            "description": "Name of the operation provider.",
            "type": "string"
          },
          "resource": {
            "description": "Name of the resource on which the operation is available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureInternalMonitoringPipelineSinkDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DiagnosticsSinkProperties"
          }
        ],
        "description": "Diagnostics settings for Geneva.",
        "properties": {
          "accountName": {
            "description": "Azure Internal monitoring pipeline account.",
            "type": "string"
          },
          "autoKeyConfigUrl": {
            "description": "Azure Internal monitoring pipeline autokey associated with the certificate.",
            "type": "string"
          },
          "fluentdConfigUrl": {
            "description": "Azure Internal monitoring agent fluentd configuration."
          },
          "maConfigUrl": {
            "description": "Azure Internal monitoring agent configuration.",
            "type": "string"
          },
          "namespace": {
            "description": "Azure Internal monitoring pipeline account namespace.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureInternalMonitoringPipeline"
      },
      "ContainerCodePackageProperties": {
        "description": "Describes a container and its runtime properties.",
        "properties": {
          "commands": {
            "description": "Command array to execute within the container in exec form.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "diagnostics": {
            "$ref": "#/components/schemas/DiagnosticsRef",
            "description": "Reference to sinks in DiagnosticsDescription."
          },
          "endpoints": {
            "description": "The endpoints exposed by this container.",
            "items": {
              "$ref": "#/components/schemas/EndpointProperties"
            },
            "type": "array"
          },
          "entrypoint": {
            "description": "Override for the default entry point in the container.",
            "type": "string"
          },
          "environmentVariables": {
            "description": "The environment variables to set in this container",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariable"
            },
            "type": "array"
          },
          "image": {
            "description": "The Container image to use.",
            "type": "string"
          },
          "imageRegistryCredential": {
            "$ref": "#/components/schemas/ImageRegistryCredential",
            "description": "Image registry credential."
          },
          "instanceView": {
            "$ref": "#/components/schemas/ContainerInstanceView",
            "description": "Runtime information of a container instance.",
            "readOnly": true
          },
          "labels": {
            "description": "The labels to set in this container.",
            "items": {
              "$ref": "#/components/schemas/ContainerLabel"
            },
            "type": "array"
          },
          "name": {
            "description": "The name of the code package.",
            "type": "string"
          },
          "resources": {
            "$ref": "#/components/schemas/ResourceRequirements",
            "description": "This type describes the resource requirements for a container or a service."
          },
          "settings": {
            "description": "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\".",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "type": "array"
          },
          "volumeRefs": {
            "description": "The volumes to be attached to the container.",
            "items": {
              "$ref": "#/components/schemas/ContainerVolume"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "image",
          "resources"
        ],
        "type": "object"
      },
      "ContainerEvent": {
        "description": "A container event.",
        "properties": {
          "count": {
            "description": "The count of the event.",
            "type": "integer"
          },
          "firstTimestamp": {
            "description": "Date/time of the first event.",
            "type": "string"
          },
          "lastTimestamp": {
            "description": "Date/time of the last event.",
            "type": "string"
          },
          "message": {
            "description": "The event message",
            "type": "string"
          },
          "name": {
            "description": "The name of the container event.",
            "type": "string"
          },
          "type": {
            "description": "The event type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerInstanceView": {
        "description": "Runtime information of a container instance.",
        "properties": {
          "currentState": {
            "$ref": "#/components/schemas/ContainerState",
            "description": "Current container instance state."
          },
          "events": {
            "description": "The events of this container instance.",
            "items": {
              "$ref": "#/components/schemas/ContainerEvent"
            },
            "type": "array"
          },
          "previousState": {
            "$ref": "#/components/schemas/ContainerState",
            "description": "Previous container instance state."
          },
          "restartCount": {
            "description": "The number of times the container has been restarted.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ContainerLabel": {
        "description": "Describes a container label.",
        "properties": {
          "name": {
            "description": "The name of the container label.",
            "type": "string"
          },
          "value": {
            "description": "The value of the container label.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "ContainerLogs": {
        "description": "The logs of the container.",
        "properties": {
          "content": {
            "description": "content of the log.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerState": {
        "description": "The container state.",
        "properties": {
          "detailStatus": {
            "description": "Human-readable status of this state.",
            "type": "string"
          },
          "exitCode": {
            "description": "The container exit code.",
            "type": "string"
          },
          "finishTime": {
            "description": "Date/time when the container state finished.",
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "description": "Date/time when the container state started.",
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "description": "The state of this container",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerVolume": {
        "description": "Describes how a volume is attached to a container.",
        "properties": {
          "destinationPath": {
            "description": "The path within the container at which the volume should be mounted. Only valid path characters are allowed.",
            "type": "string"
          },
          "name": {
            "description": "Name of the volume.",
            "type": "string"
          },
          "readOnly": {
            "description": "The flag indicating whether the volume is read only. Default is 'false'.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "destinationPath"
        ],
        "type": "object"
      },
      "DiagnosticsDescription": {
        "description": "Describes the diagnostics options available",
        "properties": {
          "defaultSinkRefs": {
            "description": "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Status of whether or not sinks are enabled.",
            "type": "boolean"
          },
          "sinks": {
            "description": "List of supported sinks that can be referenced.",
            "items": {
              "$ref": "#/components/schemas/DiagnosticsSinkProperties"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiagnosticsRef": {
        "description": "Reference to sinks in DiagnosticsDescription.",
        "properties": {
          "enabled": {
            "description": "Status of whether or not sinks are enabled.",
            "type": "boolean"
          },
          "sinkRefs": {
            "description": "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiagnosticsSinkKind": {
        "description": "The kind of DiagnosticsSink.",
        "enum": [
          "Invalid",
          "AzureInternalMonitoringPipeline"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "DiagnosticsSinkKind",
          "values": [
            {
              "description": "Indicates an invalid sink kind. All Service Fabric enumerations have the invalid type.",
              "value": "Invalid"
            },
            {
              "description": "Diagnostics settings for Geneva.",
              "value": "AzureInternalMonitoringPipeline"
            }
          ]
        }
      },
      "DiagnosticsSinkProperties": {
        "description": "Properties of a DiagnosticsSink.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "description": {
            "description": "A description of the sink.",
            "type": "string"
          },
          "kind": {
            "$ref": "#/components/schemas/DiagnosticsSinkKind",
            "description": "The kind of DiagnosticsSink."
          },
          "name": {
            "description": "Name of the sink. This value is referenced by DiagnosticsReferenceDescription",
            "type": "string"
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "Dimension": {
        "description": "Dimension of a resource metric. For e.g. instance specific HTTP requests for a web app, \nwhere instance name is dimension of the metric HTTP request",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "internalName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "toBeExportedForShoebox": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EndpointProperties": {
        "description": "Describes a container endpoint.",
        "properties": {
          "name": {
            "description": "The name of the endpoint.",
            "type": "string"
          },
          "port": {
            "description": "Port used by the container.",
            "type": "integer"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "EnvironmentVariable": {
        "description": "Describes an environment variable for the container.",
        "properties": {
          "name": {
            "description": "The name of the environment variable.",
            "type": "string"
          },
          "value": {
            "description": "The value of the environment variable.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDetailsModel": {
        "description": "Error model details information",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "ErrorErrorModel": {
        "description": "Error model information",
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "description": "List of error message details.",
            "items": {
              "$ref": "#/components/schemas/ErrorDetailsModel"
            },
            "type": "array"
          },
          "innerError": {
            "type": "string"
          },
          "message": {
            "description": "Error message.",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "type": "object"
      },
      "ErrorModel": {
        "description": "The error details.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorErrorModel",
            "description": "Error model information"
          }
        },
        "required": [
          "error"
        ],
        "type": "object"
      },
      "HealthState": {
        "description": "The health state of a resource such as Application, Service, or Network.",
        "enum": [
          "Invalid",
          "Ok",
          "Warning",
          "Error",
          "Unknown"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "HealthState",
          "values": [
            {
              "description": "Indicates an invalid health state. All Service Fabric enumerations have the invalid type. The value is zero.",
              "value": "Invalid"
            },
            {
              "description": "Indicates the health state is okay. The value is 1.",
              "value": "Ok"
            },
            {
              "description": "Indicates the health state is at a warning level. The value is 2.",
              "value": "Warning"
            },
            {
              "description": "Indicates the health state is at an error level. Error health state should be investigated, as they can impact the correct functionality of the cluster. The value is 3.",
              "value": "Error"
            },
            {
              "description": "Indicates an unknown health status. The value is 65535.",
              "value": "Unknown"
            }
          ]
        }
      },
      "ImageRegistryCredential": {
        "description": "Image registry credential.",
        "properties": {
          "password": {
            "description": "The password for the private registry.",
            "type": "string"
          },
          "server": {
            "description": "Docker image registry server, without protocol such as `http` and `https`.",
            "type": "string"
          },
          "username": {
            "description": "The username for the private registry.",
            "type": "string"
          }
        },
        "required": [
          "server",
          "username"
        ],
        "type": "object"
      },
      "IngressConfig": {
        "description": "Describes public connectivity configuration for the network.",
        "properties": {
          "layer4": {
            "description": "Configuration for layer4 public connectivity for this network.",
            "items": {
              "$ref": "#/components/schemas/Layer4IngressConfig"
            },
            "type": "array"
          },
          "publicIPAddress": {
            "description": "The public IP address for reaching this network.",
            "readOnly": true,
            "type": "string"
          },
          "qosLevel": {
            "description": "The QoS tier for ingress.",
            "enum": [
              "Bronze"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IngressQoSLevel"
            }
          }
        },
        "type": "object"
      },
      "Layer4IngressConfig": {
        "description": "Describes the layer4 configuration for public connectivity for this network.",
        "properties": {
          "applicationName": {
            "description": "The application name which contains the service to be exposed.",
            "type": "string"
          },
          "endpointName": {
            "description": "The service endpoint that needs to be exposed.",
            "type": "string"
          },
          "name": {
            "description": "Layer4 ingress config name.",
            "type": "string"
          },
          "publicPort": {
            "description": "Specifies the public port at which the service endpoint below needs to be exposed.",
            "type": "integer"
          },
          "serviceName": {
            "description": "The service whose endpoint needs to be exposed at the public port.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogSpecification": {
        "description": "Log Definition of a single resource metric.",
        "properties": {
          "blobDuration": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "logFilterPattern": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagedProxyResource": {
        "description": "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags. This proxy resource is explicitly created or updated by including it in the parent resource.",
        "properties": {
          "id": {
            "description": "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly": true,
            "type": "string",
            "x-ms-mutability": [
              "read"
            ]
          },
          "name": {
            "description": "The name of the resource",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "type": {
            "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly": true,
            "type": "string",
            "x-ms-mutability": [
              "read"
            ]
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "MetricAvailability": {
        "description": "Retention policy of a resource metric.",
        "properties": {
          "blobDuration": {
            "type": "string"
          },
          "timeGrain": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricSpecification": {
        "description": "Definition of a single resource metric.",
        "properties": {
          "aggregationType": {
            "type": "string"
          },
          "availabilities": {
            "items": {
              "$ref": "#/components/schemas/MetricAvailability"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "category": {
            "type": "string"
          },
          "dimensions": {
            "items": {
              "$ref": "#/components/schemas/Dimension"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "displayDescription": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "enableRegionalMdmAccount": {
            "type": "boolean"
          },
          "fillGapWithZero": {
            "type": "boolean"
          },
          "isInternal": {
            "type": "boolean"
          },
          "metricFilterPattern": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sourceMdmAccount": {
            "type": "string"
          },
          "sourceMdmNamespace": {
            "type": "string"
          },
          "supportedAggregationTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "supportedTimeGrainTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "supportsInstanceLevelAggregation": {
            "type": "boolean"
          },
          "unit": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkProperties": {
        "description": "Describes a network.",
        "properties": {
          "addressPrefix": {
            "description": "the address prefix for this network.",
            "type": "string"
          },
          "description": {
            "description": "User readable description of the network.",
            "type": "string"
          },
          "ingressConfig": {
            "$ref": "#/components/schemas/IngressConfig",
            "description": "Configuration for public connectivity for this network."
          }
        },
        "required": [
          "addressPrefix"
        ],
        "type": "object"
      },
      "NetworkRef": {
        "description": "Describes a network reference in a service.",
        "properties": {
          "name": {
            "description": "Name of the network.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NetworkResourceDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "This type describes a network resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/NetworkResourceProperties",
            "description": "Describes properties of a network resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "NetworkResourceDescriptionList": {
        "description": "A pageable list of network resources.",
        "properties": {
          "nextLink": {
            "description": "URI to fetch the next page of the list.",
            "type": "string"
          },
          "value": {
            "description": "One page of the list.",
            "items": {
              "$ref": "#/components/schemas/NetworkResourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "NetworkResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProvisionedResourceProperties"
          },
          {
            "$ref": "#/components/schemas/NetworkProperties"
          }
        ],
        "description": "Describes properties of a network resource."
      },
      "OperationListResult": {
        "description": "Describes the result of the request to list Service Fabric operations.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of Service Fabric operations supported by the Microsoft.ServiceFabric resource provider.",
            "items": {
              "$ref": "#/components/schemas/OperationResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationResult": {
        "description": "List of operations available at the listed Azure resource provider.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/AvailableOperationDisplay",
            "description": "The object that represents the operation."
          },
          "name": {
            "description": "The name of the operation.",
            "type": "string"
          },
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "origin": {
            "description": "Origin result",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AvailableOperationDescriptionProperties",
            "description": "Properties of the operation"
          }
        },
        "type": "object"
      },
      "ProvisionedResourceProperties": {
        "description": "Describes common properties of a provisioned resource.",
        "properties": {
          "provisioningState": {
            "description": "State of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource model definition for Azure Resource Manager proxy resource. It will have everything other than required location and tags."
      },
      "Resource": {
        "description": "The resource model definition for Azure Resource Manager resource.",
        "properties": {
          "id": {
            "description": "Fully qualified identifier for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly": true,
            "type": "string",
            "x-ms-mutability": [
              "read"
            ]
          },
          "location": {
            "description": "The geo-location where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "name": {
            "description": "The name of the resource",
            "readOnly": true,
            "type": "string",
            "x-ms-mutability": [
              "read"
            ]
          },
          "type": {
            "description": "The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
            "readOnly": true,
            "type": "string",
            "x-ms-mutability": [
              "read"
            ]
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceLimits": {
        "description": "This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted.",
        "properties": {
          "cpu": {
            "description": "CPU limits in cores. At present, only full cores are supported.",
            "format": "double",
            "type": "number"
          },
          "memoryInGB": {
            "description": "The memory limit in GB.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ResourceRequests": {
        "description": "This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits.\n",
        "properties": {
          "cpu": {
            "description": "Requested number of CPU cores. At present, only full cores are supported.",
            "format": "double",
            "type": "number"
          },
          "memoryInGB": {
            "description": "The memory request in GB for this container.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "memoryInGB",
          "cpu"
        ],
        "type": "object"
      },
      "ResourceRequirements": {
        "description": "This type describes the resource requirements for a container or a service.",
        "properties": {
          "limits": {
            "$ref": "#/components/schemas/ResourceLimits",
            "description": "Describes the maximum limits on the resources for a given container."
          },
          "requests": {
            "$ref": "#/components/schemas/ResourceRequests",
            "description": "Describes the requested resources for a given container."
          }
        },
        "required": [
          "requests"
        ],
        "type": "object"
      },
      "ServiceList": {
        "description": "A pageable list of all services in an application.\n",
        "properties": {
          "nextLink": {
            "description": "URI to fetch the next page of the list.",
            "type": "string"
          },
          "value": {
            "description": "One page of the list.",
            "items": {
              "$ref": "#/components/schemas/ServiceResourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceReplicaDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceReplicaProperties"
          },
          {
            "properties": {
              "replicaName": {
                "description": "Name of the replica.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "This type describes a replica of a service resource.",
        "type": "object"
      },
      "ServiceReplicaList": {
        "description": "A pageable list of replicas of a service resource.\n",
        "properties": {
          "nextLink": {
            "description": "URI to fetch the next page of the list.",
            "type": "string"
          },
          "value": {
            "description": "One page of the list.",
            "items": {
              "$ref": "#/components/schemas/ServiceReplicaDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceReplicaProperties": {
        "description": "Describes the properties of a service replica.",
        "properties": {
          "codePackages": {
            "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).\n",
            "items": {
              "$ref": "#/components/schemas/ContainerCodePackageProperties"
            },
            "type": "array"
          },
          "diagnostics": {
            "$ref": "#/components/schemas/DiagnosticsRef",
            "description": "Reference to sinks in DiagnosticsDescription."
          },
          "networkRefs": {
            "description": "The names of the private networks that this service needs to be part of.",
            "items": {
              "$ref": "#/components/schemas/NetworkRef"
            },
            "type": "array"
          },
          "osType": {
            "description": "The Operating system type required by the code in service.\n",
            "enum": [
              "Linux",
              "Windows"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatingSystemTypes"
            }
          }
        },
        "required": [
          "osType",
          "codePackages"
        ],
        "type": "object"
      },
      "ServiceResourceDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ManagedProxyResource"
          }
        ],
        "description": "This type describes a service resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ServiceResourceProperties",
            "description": "This type describes properties of a service resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ServiceResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ServiceReplicaProperties"
          },
          {
            "properties": {
              "description": {
                "description": "User readable description of the service.",
                "type": "string"
              },
              "healthState": {
                "$ref": "#/components/schemas/HealthState",
                "description": "The health state of a resource such as Application, Service, or Network."
              },
              "replicaCount": {
                "description": "The number of replicas of the service to create. Defaults to 1 if not specified.",
                "type": "integer"
              },
              "status": {
                "description": "Represents the status of the service.",
                "enum": [
                  "Unknown",
                  "Active",
                  "Upgrading",
                  "Deleting",
                  "Creating",
                  "Failed"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ServiceResourceStatus"
                }
              }
            },
            "type": "object"
          }
        ],
        "description": "This type describes properties of a service resource."
      },
      "ServiceSpecification": {
        "description": "Resource metrics service provided by Microsoft.Insights resource provider.",
        "properties": {
          "logSpecifications": {
            "items": {
              "$ref": "#/components/schemas/LogSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "metricSpecifications": {
            "items": {
              "$ref": "#/components/schemas/MetricSpecification"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "Setting": {
        "description": "Describes a setting for the container.",
        "properties": {
          "name": {
            "description": "The name of the setting.",
            "type": "string"
          },
          "value": {
            "description": "The value of the setting.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TrackedResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource model definition for Azure Resource Manager tracked top-level resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object",
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ]
          },
          "location": {
            "description": "The geo-location where the resource lives",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "VolumeProperties": {
        "description": "This type describes properties of a volume resource.",
        "properties": {
          "azureFileParameters": {
            "$ref": "#/components/schemas/VolumeProviderParametersAzureFile",
            "description": "This type describes a volume provided by an Azure Files file share."
          },
          "description": {
            "description": "User readable description of the volume.",
            "type": "string"
          },
          "provider": {
            "description": "Provider of the volume.",
            "enum": [
              "SFAzureFile"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "VolumeProvider"
            }
          }
        },
        "required": [
          "provider"
        ],
        "type": "object"
      },
      "VolumeProviderParametersAzureFile": {
        "description": "This type describes a volume provided by an Azure Files file share.",
        "properties": {
          "accountKey": {
            "description": "Access key of the Azure storage account for the File Share.",
            "type": "string"
          },
          "accountName": {
            "description": "Name of the Azure storage account for the File Share.",
            "type": "string"
          },
          "shareName": {
            "description": "Name of the Azure Files file share that provides storage for the volume.",
            "type": "string"
          }
        },
        "required": [
          "accountName",
          "shareName"
        ],
        "type": "object"
      },
      "VolumeResourceDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TrackedResource"
          }
        ],
        "description": "This type describes a volume resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/VolumeResourceProperties",
            "description": "Describes properties of a volume resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "VolumeResourceDescriptionList": {
        "description": "A pageable list of volume resources.",
        "properties": {
          "nextLink": {
            "description": "URI to fetch the next page of the list.",
            "type": "string"
          },
          "value": {
            "description": "One page of the list.",
            "items": {
              "$ref": "#/components/schemas/VolumeResourceDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VolumeResourceProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProvisionedResourceProperties"
          },
          {
            "$ref": "#/components/schemas/VolumeProperties"
          }
        ],
        "description": "Describes properties of a volume resource."
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}