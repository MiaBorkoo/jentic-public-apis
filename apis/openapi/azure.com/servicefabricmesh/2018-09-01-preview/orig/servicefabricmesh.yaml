openapi: 3.0.0
info:
  description: APIs to deploy and manage resources to SeaBreeze.
  title: SeaBreezeManagementClient
  version: 2018-09-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.ServiceFabricMesh/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error response describing why the operation failed.
      tags:
        - Operations
      description: >-
        Lists all the available operations provided by Service Fabric SeaBreeze
        resource provider.
      operationId: Operations_List
      summary: Lists all of the available operations.
      x-ms-examples:
        ListAllOperations:
          $ref: ./examples/listAllOperations.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Applications
      description: >-
        Gets the information about all application resources in a given resource
        group. The information include the description and other properties of
        the application.
      operationId: Application_ListBySubscription
      summary: Gets all the application resources in a given subscription.
      x-ms-examples:
        ListApplicationsBySubscriptionId:
          $ref: ./examples/applications/list_bySubscriptionId.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/gateways':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Gateways
      description: >-
        Gets the information about all gateway resources in a given resource
        group. The information include the description and other properties of
        the gateway.
      operationId: Gateway_ListBySubscription
      summary: Gets all the gateway resources in a given subscription.
      x-ms-examples:
        ListGatewaysBySubscriptionId:
          $ref: ./examples/gateways/list_bySubscriptionId.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Networks
      description: >-
        Gets the information about all network resources in a given resource
        group. The information include the description and other properties of
        the network.
      operationId: Network_ListBySubscription
      summary: Gets all the network resources in a given subscription.
      x-ms-examples:
        ListNetworksBySubscriptionId:
          $ref: ./examples/networks/list_bySubscriptionId.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/secrets':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Secrets
      description: >-
        Gets the information about all secret resources in a given resource
        group. The information include the description and other properties of
        the secret.
      operationId: Secret_ListBySubscription
      summary: Gets all the secret resources in a given subscription.
      x-ms-examples:
        ListSecretsBySubscriptionId:
          $ref: ./examples/secrets/list_bySubscriptionId.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Volumes
      description: >-
        Gets the information about all volume resources in a given resource
        group. The information include the description and other properties of
        the volume.
      operationId: Volume_ListBySubscription
      summary: Gets all the volume resources in a given subscription.
      x-ms-examples:
        ListVolumesBySubscriptionId:
          $ref: ./examples/volumes/list_bySubscriptionId.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Applications
      description: >-
        Gets the information about all application resources in a given resource
        group. The information include the description and other properties of
        the Application.
      operationId: Application_ListByResourceGroup
      summary: Gets all the application resources in a given resource group.
      x-ms-examples:
        ListApplicationsByResourceGroup:
          $ref: ./examples/applications/list_byResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified application was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Applications
      description: Deletes the application resource identified by the name.
      operationId: Application_Delete
      summary: Deletes the application resource.
      x-ms-examples:
        DeleteApplication:
          $ref: ./examples/applications/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Applications
      description: >-
        Gets the information about the application resource with the given name.
        The information include the description and other properties of the
        application.
      operationId: Application_Get
      summary: Gets the application resource with the given name.
      x-ms-examples:
        GetApplication:
          $ref: ./examples/applications/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Applications
      description: >-
        Creates an application resource with the specified name, description and
        properties. If an application resource with the same name exists, then
        it is updated with the specified description and properties.
      operationId: Application_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationResourceDescription'
        description: Description for creating a Application resource.
        required: true
      summary: Creates or updates an application resource.
      x-ms-examples:
        CreateOrUpdateApplication:
          $ref: ./examples/applications/create_update.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Services
      description: >-
        Gets the information about all services of an application resource. The
        information include the description and other properties of the Service.
      operationId: Service_List
      summary: Lists all the service resources.
      x-ms-examples:
        ListServices:
          $ref: ./examples/applications/services/list.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Services
      description: >-
        Gets the information about the service resource with the given name. The
        information include the description and other properties of the service.
      operationId: Service_Get
      summary: Gets the service resource with the given name.
      x-ms-examples:
        GetService:
          $ref: ./examples/applications/services/get.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceReplicaDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - ServiceReplicas
      description: >-
        Gets the information about all replicas of a given service of an
        application. The information includes the runtime properties of the
        replica instance.
      operationId: ServiceReplica_List
      summary: Gets replicas of a given service.
      x-ms-examples:
        ReplicasGetAll:
          $ref: ./examples/applications/services/replicas/list.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ReplicaNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceReplicaDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - ServiceReplicas
      description: >-
        Gets the information about the service replica with the given name. The
        information include the description and other properties of the service
        replica.
      operationId: ServiceReplica_Get
      summary: Gets the given replica of the service of an application.
      x-ms-examples:
        ReplicaGet:
          $ref: ./examples/applications/services/replicas/get.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ApplicationResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ServiceResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/ReplicaNameRequiredPathParam'
        - $ref: '#/components/parameters/CodePackageNameRequiredPathParam'
        - $ref: '#/components/parameters/TailOptionalQueryParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerLogs'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - CodePackages
      description: >-
        Gets the logs for the container of the specified code package of the
        service replica.
      operationId: CodePackage_GetContainerLogs
      summary: Gets the logs from the container.
      x-ms-examples:
        GetContainerLogs:
          $ref: ./examples/applications/services/replicas/codepackages/get_logs.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Gateways
      description: >-
        Gets the information about all gateway resources in a given resource
        group. The information include the description and other properties of
        the Gateway.
      operationId: Gateway_ListByResourceGroup
      summary: Gets all the gateway resources in a given resource group.
      x-ms-examples:
        ListGatewaysByResourceGroup:
          $ref: ./examples/gateways/list_byResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/gateways/{gatewayResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified gateway was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Gateways
      description: Deletes the gateway resource identified by the name.
      operationId: Gateway_Delete
      summary: Deletes the gateway resource.
      x-ms-examples:
        DeleteGateway:
          $ref: ./examples/gateways/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Gateways
      description: >-
        Gets the information about the gateway resource with the given name. The
        information include the description and other properties of the gateway.
      operationId: Gateway_Get
      summary: Gets the gateway resource with the given name.
      x-ms-examples:
        GetGateway:
          $ref: ./examples/gateways/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/GatewayResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Gateways
      description: >-
        Creates a gateway resource with the specified name, description and
        properties. If a gateway resource with the same name exists, then it is
        updated with the specified description and properties. Use gateway
        resources to create a gateway for public connectivity for services
        within your application.
      operationId: Gateway_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GatewayResourceDescription'
        description: Description for creating a Gateway resource.
        required: true
      summary: Creates or updates a gateway resource.
      x-ms-examples:
        CreateOrUpdateGateway:
          $ref: ./examples/gateways/create_update.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Networks
      description: >-
        Gets the information about all network resources in a given resource
        group. The information include the description and other properties of
        the Network.
      operationId: Network_ListByResourceGroup
      summary: Gets all the network resources in a given resource group.
      x-ms-examples:
        ListNetworksByResourceGroup:
          $ref: ./examples/networks/list_byResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified network was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Networks
      description: Deletes the network resource identified by the name.
      operationId: Network_Delete
      summary: Deletes the network resource.
      x-ms-examples:
        DeleteNetwork:
          $ref: ./examples/networks/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Networks
      description: >-
        Gets the information about the network resource with the given name. The
        information include the description and other properties of the network.
      operationId: Network_Get
      summary: Gets the network resource with the given name.
      x-ms-examples:
        GetNetwork:
          $ref: ./examples/networks/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/NetworkResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Networks
      description: >-
        Creates a network resource with the specified name, description and
        properties. If a network resource with the same name exists, then it is
        updated with the specified description and properties.
      operationId: Network_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkResourceDescription'
        description: Description for creating a Network resource.
        required: true
      summary: Creates or updates a network resource.
      x-ms-examples:
        CreateOrUpdateNetwork:
          $ref: ./examples/networks/create_update.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Secrets
      description: >-
        Gets the information about all secret resources in a given resource
        group. The information include the description and other properties of
        the Secret.
      operationId: Secret_ListByResourceGroup
      summary: Gets all the secret resources in a given resource group.
      x-ms-examples:
        ListSecretsByResourceGroup:
          $ref: ./examples/secrets/list_byResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified secret was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Secrets
      description: Deletes the secret resource identified by the name.
      operationId: Secret_Delete
      summary: Deletes the secret resource.
      x-ms-examples:
        DeleteSecret:
          $ref: ./examples/secrets/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Secrets
      description: >-
        Gets the information about the secret resource with the given name. The
        information include the description and other properties of the secret.
      operationId: Secret_Get
      summary: Gets the secret resource with the given name.
      x-ms-examples:
        GetSecret:
          $ref: ./examples/secrets/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Secrets
      description: >-
        Creates a secret resource with the specified name, description and
        properties. If a secret resource with the same name exists, then it is
        updated with the specified description and properties.
      operationId: Secret_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretResourceDescription'
        description: Description for creating a secret resource.
        required: true
      summary: Creates or updates a secret resource.
      x-ms-examples:
        CreateOrUpdateSecret:
          $ref: ./examples/secrets/create_update.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - SecretValues
      description: >-
        Gets information about all secret value resources of the specified
        secret resource. The information includes the names of the secret value
        resources, but not the actual values.
      operationId: SecretValue_List
      summary: List names of all values of the specified secret resource.
      x-ms-examples:
        ListSecretValues:
          $ref: ./examples/secrets/values/list.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified named secret value was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - SecretValues
      description: >-
        Deletes the secret value resource identified by the name. The name of
        the resource is typically the version associated with that value.
        Deletion will fail if the specified value is in use.
      operationId: SecretValue_Delete
      summary: Deletes the specified  value of the named secret resource.
      x-ms-examples:
        DeleteSecretValue:
          $ref: ./examples/secrets/values/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - SecretValues
      description: >-
        Get the information about the specified named secret value resources.
        The information does not include the actual value of the secret.
      operationId: SecretValue_Get
      summary: Gets the specified secret value resource.
      x-ms-examples:
        GetSecretValue:
          $ref: ./examples/secrets/values/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValueResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - SecretValues
      description: >-
        Creates a new value of the specified secret resource. The name of the
        value is typically the version identifier. Once created the value cannot
        be changed.
      operationId: SecretValue_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretValueResourceDescription'
        description: Description for creating a value of a secret resource.
        required: true
      summary: >-
        Adds the specified value as a new version of the specified secret
        resource.
      x-ms-examples:
        CreateSecretValue:
          $ref: ./examples/secrets/values/create.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/secrets/{secretResourceName}/values/{secretValueResourceName}/list_value':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretResourceNameRequiredPathParam'
        - $ref: '#/components/parameters/SecretValueResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretValue'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - SecretValues
      description: >-
        Lists the decrypted value of the specified named value of the secret
        resource. This is a privileged operation.
      operationId: SecretValue_ListValue
      summary: Lists the specified value of the secret resource.
      x-ms-examples:
        ListSecretValue:
          $ref: ./examples/secrets/values/list_value.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescriptionList'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Volumes
      description: >-
        Gets the information about all volume resources in a given resource
        group. The information include the description and other properties of
        the Volume.
      operationId: Volume_ListByResourceGroup
      summary: Gets all the volume resources in a given resource group.
      x-ms-examples:
        ListVolumesByResourceGroup:
          $ref: ./examples/volumes/list_byResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeResourceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        '204':
          description: No Content - the specified volume was not found.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Volumes
      description: Deletes the volume resource identified by the name.
      operationId: Volume_Delete
      summary: Deletes the volume resource.
      x-ms-examples:
        DeleteVolume:
          $ref: ./examples/volumes/delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Volumes
      description: >-
        Gets the information about the volume resource with the given name. The
        information include the description and other properties of the volume.
      operationId: Volume_Get
      summary: Gets the volume resource with the given name.
      x-ms-examples:
        GetVolume:
          $ref: ./examples/volumes/get.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdRequiredPathParam'
        - $ref: '#/components/parameters/api-versionRequiredQueryParam'
        - $ref: '#/components/parameters/ResourceGroupNameRequiredPathParam'
        - $ref: '#/components/parameters/VolumeResourceNameRequiredPathParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResourceDescription'
          description: Created
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
          description: Error
      tags:
        - Volumes
      description: >-
        Creates a volume resource with the specified name, description and
        properties. If a volume resource with the same name exists, then it is
        updated with the specified description and properties.
      operationId: Volume_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolumeResourceDescription'
        description: Description for creating a Volume resource.
        required: true
      summary: Creates or updates a volume resource.
      x-ms-examples:
        CreateOrUpdateVolume:
          $ref: ./examples/volumes/create_update.json
      x-sf-codegen:
        Powershell:
          skipGeneration: 'true'
components:
  parameters:
    ApplicationResourceNameRequiredPathParam:
      allowReserved: true
      description: The identity of the application.
      in: path
      name: applicationResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    CodePackageNameRequiredPathParam:
      description: The name of code package of the service.
      in: path
      name: codePackageName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    GatewayResourceNameRequiredPathParam:
      allowReserved: true
      description: The identity of the gateway.
      in: path
      name: gatewayResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    NetworkResourceNameRequiredPathParam:
      allowReserved: true
      description: The identity of the network.
      in: path
      name: networkResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ReplicaNameRequiredPathParam:
      allowReserved: true
      description: Service Fabric replica name.
      in: path
      name: replicaName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ResourceGroupNameRequiredPathParam:
      description: Azure resource group name
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SecretResourceNameRequiredPathParam:
      allowReserved: true
      description: The name of the secret resource.
      in: path
      name: secretResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    SecretValueResourceNameRequiredPathParam:
      allowReserved: true
      description: >-
        The name of the secret resource value which is typically the version
        identifier for the value.
      in: path
      name: secretValueResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    ServiceResourceNameRequiredPathParam:
      allowReserved: true
      description: The identity of the service.
      in: path
      name: serviceResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    TailOptionalQueryParam:
      description: Number of lines to show from the end of the logs. Default is 100.
      in: query
      name: tail
      required: false
      schema:
        type: integer
      x-ms-parameter-location: method
    VolumeResourceNameRequiredPathParam:
      allowReserved: true
      description: The identity of the volume.
      in: path
      name: volumeResourceName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    api-versionRequiredQueryParam:
      description: >-
        The version of the API. This parameter is required and its value must be
        `2018-09-01-preview`.
      in: query
      name: api-version
      required: true
      schema:
        default: 2018-09-01-preview
        enum:
          - 2018-09-01-preview
        type: string
      x-ms-enum:
        modelAsString: true
        name: 2018-09-01-preview
        values:
          - description: The `2018-09-01-preview` version of the API.
            value: 2018-09-01-preview
    subscriptionIdRequiredPathParam:
      description: The customer subscription identifier
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    AddRemoveReplicaScalingMechanism:
      allOf:
        - $ref: '#/components/schemas/AutoScalingMechanism'
        - type: object
      description: >-
        Describes the horizontal auto scaling mechanism that adds or removes
        replicas (containers or container groups).
      properties:
        maxCount:
          description: >-
            Maximum number of containers (scale up won't be performed above this
            number).
          type: integer
        minCount:
          description: >-
            Minimum number of containers (scale down won't be performed below
            this number).
          type: integer
        scaleIncrement:
          description: >-
            Each time auto scaling is performed, this number of containers will
            be added or removed.
          type: integer
      required:
        - minCount
        - maxCount
        - scaleIncrement
      type: object
      x-ms-discriminator-value: AddRemoveReplica
    ApplicationProperties:
      description: Describes properties of a application resource.
      properties:
        debugParams:
          description: >-
            Internal - used by Visual Studio to setup the debugging session on
            the local development environment.
          type: string
        description:
          description: User readable description of the application.
          type: string
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsDescription'
          description: >-
            Describes the diagnostics definition and usage for an application
            resource.
        healthState:
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
          readOnly: true
        serviceNames:
          description: Names of the services in the application.
          items:
            type: string
          readOnly: true
          type: array
        services:
          description: >-
            Describes the services in the application. This property is used to
            create or modify services of the application. On get only the name
            of the service is returned. The service description can be obtained
            by querying for the service resource.
          items:
            $ref: '#/components/schemas/ServiceResourceDescription'
          type: array
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the application.
          readOnly: true
        statusDetails:
          description: >-
            Gives additional information about the current status of the
            application.
          readOnly: true
          type: string
        unhealthyEvaluation:
          description: >-
            When the application's health state is not 'Ok', this additional
            details from service fabric Health Manager for the user to know why
            the application is marked unhealthy.
          readOnly: true
          type: string
      type: object
    ApplicationResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: This type describes an application resource.
      properties:
        properties:
          $ref: '#/components/schemas/ApplicationResourceProperties'
          description: This type describes properties of an application resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ApplicationResourceDescriptionList:
      description: A pageable list of application resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/ApplicationResourceDescription'
          type: array
      type: object
    ApplicationResourceProperties:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
        - $ref: '#/components/schemas/ApplicationProperties'
      description: This type describes properties of an application resource.
    ApplicationScopedVolume:
      allOf:
        - $ref: '#/components/schemas/VolumeReference'
      description: >-
        Describes a volume whose lifetime is scoped to the application's
        lifetime.
      properties:
        creationParameters:
          $ref: '#/components/schemas/ApplicationScopedVolumeCreationParameters'
          description: Describes parameters for creating application-scoped volumes.
      required:
        - creationParameters
      type: object
    ApplicationScopedVolumeCreationParameters:
      description: Describes parameters for creating application-scoped volumes.
      discriminator:
        propertyName: kind
      properties:
        description:
          description: User readable description of the volume.
          type: string
        kind:
          $ref: '#/components/schemas/ApplicationScopedVolumeKind'
          description: Specifies the application-scoped volume kind.
      required:
        - kind
      type: object
    ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk:
      allOf:
        - $ref: '#/components/schemas/ApplicationScopedVolumeCreationParameters'
      description: >-
        Describes parameters for creating application-scoped volumes provided by
        Service Fabric Volume Disks
      properties:
        sizeDisk:
          description: Volume size
          enum:
            - Small
            - Medium
            - Large
          type: string
          x-ms-enum:
            modelAsString: true
            name: SizeTypes
      required:
        - sizeDisk
      type: object
      x-ms-discriminator-value: ServiceFabricVolumeDisk
    ApplicationScopedVolumeKind:
      description: Specifies the application-scoped volume kind.
      enum:
        - ServiceFabricVolumeDisk
      type: string
      x-ms-enum:
        modelAsString: true
        name: ApplicationScopedVolumeKind
        values:
          - description: Provides Service Fabric High Availability Volume Disk
            value: ServiceFabricVolumeDisk
    AutoScalingMechanism:
      description: >-
        Describes the mechanism for performing auto scaling operation. Derived
        classes will describe the actual mechanism.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMechanismKind'
          description: The type of auto scaling mechanism.
      required:
        - kind
      type: object
    AutoScalingMechanismKind:
      description: Enumerates the mechanisms for auto scaling.
      enum:
        - AddRemoveReplica
      type: string
      x-ms-enum:
        modelAsString: true
        name: AutoScalingMechanismKind
        values:
          - description: >-
              Indicates that scaling should be performed by adding or removing
              replicas.
            value: AddRemoveReplica
    AutoScalingMetric:
      description: >-
        Describes the metric that is used for triggering auto scaling operation.
        Derived classes will describe resources or metrics.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingMetricKind'
          description: The type of auto scaling metric
      required:
        - kind
      type: object
    AutoScalingMetricKind:
      description: Enumerates the metrics that are used for triggering auto scaling.
      enum:
        - Resource
      type: string
      x-ms-enum:
        modelAsString: true
        name: AutoScalingMetricKind
        values:
          - description: 'Indicates that the metric is one of resources, like cpu or memory.'
            value: Resource
    AutoScalingPolicy:
      description: Describes the auto scaling policy
      properties:
        mechanism:
          $ref: '#/components/schemas/AutoScalingMechanism'
          description: >-
            The mechanism that is used to scale when auto scaling operation is
            invoked.
        name:
          description: The name of the auto scaling policy.
          type: string
        trigger:
          $ref: '#/components/schemas/AutoScalingTrigger'
          description: Determines when auto scaling operation will be invoked.
      required:
        - name
        - trigger
        - mechanism
      type: object
    AutoScalingResourceMetric:
      allOf:
        - $ref: '#/components/schemas/AutoScalingMetric'
        - type: object
      description: Describes the resource that is used for triggering auto scaling.
      properties:
        name:
          $ref: '#/components/schemas/AutoScalingResourceMetricName'
          description: Name of the resource.
      required:
        - name
      type: object
      x-ms-discriminator-value: Resource
    AutoScalingResourceMetricName:
      description: Enumerates the resources that are used for triggering auto scaling.
      enum:
        - cpu
        - memoryInGB
      type: string
      x-ms-enum:
        modelAsString: true
        name: AutoScalingResourceMetricName
        values:
          - description: Indicates that the resource is CPU cores.
            value: cpu
          - description: Indicates that the resource is memory in GB.
            value: memoryInGB
    AutoScalingTrigger:
      description: Describes the trigger for performing auto scaling operation.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/AutoScalingTriggerKind'
          description: The type of auto scaling trigger
      required:
        - kind
      type: object
    AutoScalingTriggerKind:
      description: Enumerates the triggers for auto scaling.
      enum:
        - AverageLoad
      type: string
      x-ms-enum:
        modelAsString: true
        name: AutoScalingTriggerKind
        values:
          - description: >-
              Indicates that scaling should be performed based on average load
              of all replicas in the service.
            value: AverageLoad
    AvailableOperationDescriptionProperties:
      description: Properties available for a Microsoft.Web resource provider operation.
      properties:
        serviceSpecification:
          $ref: '#/components/schemas/ServiceSpecification'
      type: object
    AvailableOperationDisplay:
      description: An operation available at the listed Azure resource provider.
      properties:
        description:
          description: Description of the available operation.
          type: string
        operation:
          description: Name of the available operation.
          type: string
        provider:
          description: Name of the operation provider.
          type: string
        resource:
          description: Name of the resource on which the operation is available.
          type: string
      type: object
    AverageLoadScalingTrigger:
      allOf:
        - $ref: '#/components/schemas/AutoScalingTrigger'
        - type: object
      description: Describes the average load trigger used for auto scaling.
      properties:
        lowerLoadThreshold:
          description: >-
            Lower load threshold (if average load is below this threshold,
            service will scale down).
          format: double
          type: number
        metric:
          $ref: '#/components/schemas/AutoScalingMetric'
          description: Description of the metric that is used for scaling.
        scaleIntervalInSeconds:
          description: >-
            Scale interval that indicates how often will this trigger be
            checked.
          minimum: 60
          type: integer
        upperLoadThreshold:
          description: >-
            Upper load threshold (if average load is above this threshold,
            service will scale up).
          format: double
          type: number
      required:
        - metric
        - lowerLoadThreshold
        - upperLoadThreshold
        - scaleIntervalInSeconds
      type: object
      x-ms-discriminator-value: AverageLoad
    AzureInternalMonitoringPipelineSinkDescription:
      allOf:
        - $ref: '#/components/schemas/DiagnosticsSinkProperties'
      description: Diagnostics settings for Geneva.
      properties:
        accountName:
          description: Azure Internal monitoring pipeline account.
          type: string
        autoKeyConfigUrl:
          description: >-
            Azure Internal monitoring pipeline autokey associated with the
            certificate.
          type: string
        fluentdConfigUrl:
          description: Azure Internal monitoring agent fluentd configuration.
        maConfigUrl:
          description: Azure Internal monitoring agent configuration.
          type: string
        namespace:
          description: Azure Internal monitoring pipeline account namespace.
          type: string
      type: object
      x-ms-discriminator-value: AzureInternalMonitoringPipeline
    ContainerCodePackageProperties:
      description: Describes a container and its runtime properties.
      properties:
        commands:
          description: Command array to execute within the container in exec form.
          items:
            type: string
          type: array
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
        endpoints:
          description: The endpoints exposed by this container.
          items:
            $ref: '#/components/schemas/EndpointProperties'
          type: array
        entrypoint:
          description: Override for the default entry point in the container.
          type: string
        environmentVariables:
          description: The environment variables to set in this container
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
          type: array
        image:
          description: The Container image to use.
          type: string
        imageRegistryCredential:
          $ref: '#/components/schemas/ImageRegistryCredential'
          description: Image registry credential.
        instanceView:
          $ref: '#/components/schemas/ContainerInstanceView'
          description: Runtime information of a container instance.
          readOnly: true
        labels:
          description: The labels to set in this container.
          items:
            $ref: '#/components/schemas/ContainerLabel'
          type: array
        name:
          description: The name of the code package.
          type: string
        reliableCollectionsRefs:
          description: >-
            A list of ReliableCollection resources used by this particular code
            package. Please refer to ReliableCollectionsRef for more details.
          items:
            $ref: '#/components/schemas/ReliableCollectionsRef'
          type: array
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
          description: The resources required by this container.
        settings:
          description: >-
            The settings to set in this container. The setting file path can be
            fetched from environment variable "Fabric_SettingPath". The path for
            Windows container is "C:\\secrets". The path for Linux container is
            "/var/secrets".
          items:
            $ref: '#/components/schemas/Setting'
          type: array
        volumeRefs:
          description: >-
            Volumes to be attached to the container. The lifetime of these
            volumes is independent of the application's lifetime.
          items:
            $ref: '#/components/schemas/VolumeReference'
          type: array
        volumes:
          description: >-
            Volumes to be attached to the container. The lifetime of these
            volumes is scoped to the application's lifetime.
          items:
            $ref: '#/components/schemas/ApplicationScopedVolume'
          type: array
      required:
        - name
        - image
        - resources
      type: object
    ContainerEvent:
      description: A container event.
      properties:
        count:
          description: The count of the event.
          type: integer
        firstTimestamp:
          description: Date/time of the first event.
          type: string
        lastTimestamp:
          description: Date/time of the last event.
          type: string
        message:
          description: The event message
          type: string
        name:
          description: The name of the container event.
          type: string
        type:
          description: The event type.
          type: string
      type: object
    ContainerInstanceView:
      description: Runtime information of a container instance.
      properties:
        currentState:
          $ref: '#/components/schemas/ContainerState'
          description: Current container instance state.
        events:
          description: The events of this container instance.
          items:
            $ref: '#/components/schemas/ContainerEvent'
          type: array
        previousState:
          $ref: '#/components/schemas/ContainerState'
          description: Previous container instance state.
        restartCount:
          description: The number of times the container has been restarted.
          type: integer
      type: object
    ContainerLabel:
      description: Describes a container label.
      properties:
        name:
          description: The name of the container label.
          type: string
        value:
          description: The value of the container label.
          type: string
      required:
        - name
        - value
      type: object
    ContainerLogs:
      description: Container logs.
      properties:
        content:
          description: Container logs.
          type: string
      type: object
    ContainerState:
      description: The container state.
      properties:
        detailStatus:
          description: Human-readable status of this state.
          type: string
        exitCode:
          description: The container exit code.
          type: string
        finishTime:
          description: Date/time when the container state finished.
          format: date-time
          type: string
        startTime:
          description: Date/time when the container state started.
          format: date-time
          type: string
        state:
          description: The state of this container
          type: string
      type: object
    DiagnosticsDescription:
      description: Describes the diagnostics options available
      properties:
        defaultSinkRefs:
          description: >-
            The sinks to be used if diagnostics is enabled. Sink choices can be
            overridden at the service and code package level.
          items:
            type: string
          type: array
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        sinks:
          description: List of supported sinks that can be referenced.
          items:
            $ref: '#/components/schemas/DiagnosticsSinkProperties'
          type: array
      type: object
    DiagnosticsRef:
      description: Reference to sinks in DiagnosticsDescription.
      properties:
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        sinkRefs:
          description: >-
            List of sinks to be used if enabled. References the list of sinks in
            DiagnosticsDescription.
          items:
            type: string
          type: array
      type: object
    DiagnosticsSinkKind:
      description: The kind of DiagnosticsSink.
      enum:
        - Invalid
        - AzureInternalMonitoringPipeline
      type: string
      x-ms-enum:
        modelAsString: true
        name: DiagnosticsSinkKind
        values:
          - description: >-
              Indicates an invalid sink kind. All Service Fabric enumerations
              have the invalid type.
            value: Invalid
          - description: Diagnostics settings for Geneva.
            value: AzureInternalMonitoringPipeline
    DiagnosticsSinkProperties:
      description: Properties of a DiagnosticsSink.
      discriminator:
        propertyName: kind
      properties:
        description:
          description: A description of the sink.
          type: string
        kind:
          $ref: '#/components/schemas/DiagnosticsSinkKind'
          description: The kind of DiagnosticsSink.
        name:
          description: >-
            Name of the sink. This value is referenced by
            DiagnosticsReferenceDescription
          type: string
      required:
        - kind
      type: object
    Dimension:
      description: >-
        Dimension of a resource metric. For e.g. instance specific HTTP requests
        for a web app, 

        where instance name is dimension of the metric HTTP request
      properties:
        displayName:
          type: string
        internalName:
          type: string
        name:
          type: string
        toBeExportedForShoebox:
          type: boolean
      type: object
    EndpointProperties:
      description: Describes a container endpoint.
      properties:
        name:
          description: The name of the endpoint.
          type: string
        port:
          description: Port used by the container.
          type: integer
      required:
        - name
      type: object
    EndpointRef:
      description: Describes a reference to a service endpoint.
      properties:
        name:
          description: Name of the endpoint.
          type: string
      type: object
    EnvironmentVariable:
      description: Describes an environment variable for the container.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
      type: object
    ErrorDetailsModel:
      description: Error model details information
      properties:
        code:
          type: string
        message:
          description: Error message.
          type: string
      required:
        - code
        - message
      type: object
    ErrorErrorModel:
      description: Error model information
      properties:
        code:
          type: string
        details:
          description: List of error message details.
          items:
            $ref: '#/components/schemas/ErrorDetailsModel'
          type: array
        innerError:
          type: string
        message:
          description: Error message.
          type: string
      required:
        - code
      type: object
    ErrorModel:
      description: The error details.
      properties:
        error:
          $ref: '#/components/schemas/ErrorErrorModel'
          description: Error model information
      required:
        - error
      type: object
    GatewayDestination:
      description: Describes destination endpoint for routing traffic.
      properties:
        applicationName:
          description: Name of the service fabric Mesh application.
          type: string
        endpointName:
          description: name of the endpoint in the service.
          type: string
        serviceName:
          description: service that contains the endpoint.
          type: string
      required:
        - applicationName
        - endpointName
        - serviceName
      type: object
    GatewayProperties:
      description: Describes properties of a gateway resource.
      properties:
        description:
          description: User readable description of the gateway.
          type: string
        destinationNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network that the Application is using.
        http:
          description: Configuration for http connectivity for this gateway.
          items:
            $ref: '#/components/schemas/HttpConfig'
          type: array
        ipAddress:
          description: >-
            IP address of the gateway. This is populated in the response and is
            ignored for incoming requests.
          readOnly: true
          type: string
        sourceNetwork:
          $ref: '#/components/schemas/NetworkRef'
          description: Network the gateway should listen on for requests.
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
          readOnly: true
        statusDetails:
          description: >-
            Gives additional information about the current status of the
            gateway.
          readOnly: true
          type: string
        tcp:
          description: Configuration for tcp connectivity for this gateway.
          items:
            $ref: '#/components/schemas/TcpConfig'
          type: array
      required:
        - destinationNetwork
        - sourceNetwork
      type: object
    GatewayResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: This type describes a gateway resource.
      properties:
        properties:
          $ref: '#/components/schemas/GatewayResourceProperties'
          description: This type describes properties of a gateway resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    GatewayResourceDescriptionList:
      description: A pageable list of gateway resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/GatewayResourceDescription'
          type: array
      type: object
    GatewayResourceProperties:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
        - $ref: '#/components/schemas/GatewayProperties'
      description: This type describes properties of a gateway resource.
    HealthState:
      description: >-
        The health state of a Service Fabric entity such as Cluster, Node,
        Application, Service, Partition, Replica etc.
      enum:
        - Invalid
        - Ok
        - Warning
        - Error
        - Unknown
      type: string
      x-ms-enum:
        modelAsString: true
        name: HealthState
        values:
          - description: >-
              Indicates an invalid health state. All Service Fabric enumerations
              have the invalid type. The value is zero.
            value: Invalid
          - description: Indicates the health state is okay. The value is 1.
            value: Ok
          - description: Indicates the health state is at a warning level. The value is 2.
            value: Warning
          - description: >-
              Indicates the health state is at an error level. Error health
              state should be investigated, as they can impact the correct
              functionality of the cluster. The value is 3.
            value: Error
          - description: Indicates an unknown health status. The value is 65535.
            value: Unknown
    HttpConfig:
      description: >-
        Describes the http configuration for external connectivity for this
        network.
      properties:
        hosts:
          description: description for routing.
          items:
            $ref: '#/components/schemas/HttpHostConfig'
          type: array
        name:
          description: http gateway config name.
          type: string
        port:
          description: >-
            Specifies the port at which the service endpoint below needs to be
            exposed.
          type: integer
      required:
        - hosts
        - name
        - port
      type: object
    HttpHostConfig:
      description: Describes the hostname properties for http routing.
      properties:
        name:
          description: http hostname config name.
          type: string
        routes:
          description: >-
            Route information to use for routing. Routes are processed in the
            order they are specified. Specify routes that are more specific
            before routes that can handle general cases.
          items:
            $ref: '#/components/schemas/HttpRouteConfig'
          type: array
      required:
        - name
        - routes
      type: object
    HttpRouteConfig:
      description: Describes the hostname properties for http routing.
      properties:
        destination:
          $ref: '#/components/schemas/GatewayDestination'
          description: Describes destination endpoint for routing traffic.
        match:
          $ref: '#/components/schemas/HttpRouteMatchRule'
          description: Describes a rule for http route matching.
        name:
          description: http route name.
          type: string
      required:
        - destination
        - match
        - name
      type: object
    HttpRouteMatchHeader:
      description: Describes header information for http route matching.
      properties:
        name:
          description: Name of header to match in request.
          type: string
        type:
          description: how to match header value
          enum:
            - exact
          type: string
          x-ms-enum:
            modelAsString: true
            name: HeaderMatchType
        value:
          description: Value of header to match in request.
          type: string
      required:
        - name
      type: object
    HttpRouteMatchPath:
      description: Path to match for routing.
      properties:
        rewrite:
          description: replacement string for matched part of the Uri.
          type: string
        type:
          description: how to match value in the Uri
          enum:
            - prefix
          type: string
          x-ms-enum:
            modelAsString: true
            name: PathMatchType
        value:
          description: Uri path to match for request.
          type: string
      required:
        - type
        - value
      type: object
    HttpRouteMatchRule:
      description: Describes a rule for http route matching.
      properties:
        headers:
          description: headers and their values to match in request.
          items:
            $ref: '#/components/schemas/HttpRouteMatchHeader'
          type: array
        path:
          $ref: '#/components/schemas/HttpRouteMatchPath'
          description: Path to match for routing.
      required:
        - path
      type: object
    ImageRegistryCredential:
      description: Image registry credential.
      properties:
        password:
          description: >-
            The password for the private registry. The password is required for
            create or update operations, however it is not returned in the get
            or list operations.
          type: string
        server:
          description: >-
            Docker image registry server, without protocol such as `http` and
            `https`.
          type: string
        username:
          description: The username for the private registry.
          type: string
      required:
        - server
        - username
      type: object
    InlinedValueSecretResourceProperties:
      allOf:
        - $ref: '#/components/schemas/SecretResourceProperties'
      description: >-
        Describes the properties of a secret resource whose value is provided
        explicitly as plaintext. The secret resource may have multiple values,
        each being uniquely versioned. The secret value of each version is
        stored encrypted, and delivered as plaintext into the context of
        applications referencing it.
      x-ms-discriminator-value: inlinedValue
    LocalNetworkResourceProperties:
      allOf:
        - $ref: '#/components/schemas/NetworkResourceProperties'
      description: >-
        Information about a Service Fabric container network local to a single
        Service Fabric cluster.
      properties:
        networkAddressPrefix:
          $ref: '#/components/schemas/NetworkAddressPrefix'
          description: Address space for the local container network.
      type: object
      x-ms-discriminator-value: Local
    LogSpecification:
      description: Log Definition of a single resource metric.
      properties:
        blobDuration:
          type: string
        displayName:
          type: string
        logFilterPattern:
          type: string
        name:
          type: string
      type: object
    ManagedProxyResource:
      description: >-
        The resource model definition for Azure Resource Manager proxy resource.
        It will have everything other than required location and tags. This
        proxy resource is explicitly created or updated by including it in the
        parent resource.
      properties:
        id:
          description: >-
            Fully qualified identifier for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        name:
          description: The name of the resource
          type: string
          x-ms-mutability:
            - read
            - create
            - update
        type:
          description: >-
            The type of the resource. Ex- Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts.
          readOnly: true
          type: string
          x-ms-mutability:
            - read
      type: object
      x-ms-azure-resource: true
    MetricAvailability:
      description: Retention policy of a resource metric.
      properties:
        blobDuration:
          type: string
        timeGrain:
          type: string
      type: object
    MetricSpecification:
      description: Definition of a single resource metric.
      properties:
        aggregationType:
          type: string
        availabilities:
          items:
            $ref: '#/components/schemas/MetricAvailability'
          type: array
          x-ms-identifiers: []
        category:
          type: string
        dimensions:
          items:
            $ref: '#/components/schemas/Dimension'
          type: array
          x-ms-identifiers:
            - name
        displayDescription:
          type: string
        displayName:
          type: string
        enableRegionalMdmAccount:
          type: boolean
        fillGapWithZero:
          type: boolean
        isInternal:
          type: boolean
        metricFilterPattern:
          type: string
        name:
          type: string
        sourceMdmAccount:
          type: string
        sourceMdmNamespace:
          type: string
        supportedAggregationTypes:
          items:
            type: string
          type: array
        supportedTimeGrainTypes:
          items:
            type: string
          type: array
        supportsInstanceLevelAggregation:
          type: boolean
        unit:
          type: string
      type: object
    NetworkAddressPrefix:
      description: >-
        Address space for a container network. This is expressed in CIDR
        notation.
      type: string
    NetworkKind:
      description: The type of a Service Fabric container network.
      enum:
        - Local
      type: string
      x-ms-enum:
        modelAsString: true
        name: NetworkKind
        values:
          - description: >-
              Indicates a container network local to a single Service Fabric
              cluster. The value is 1.
            value: Local
    NetworkRef:
      description: Describes a network reference in a service.
      properties:
        endpointRefs:
          description: A list of endpoints that are exposed on this network.
          items:
            $ref: '#/components/schemas/EndpointRef'
          type: array
        name:
          description: Name of the network
          type: string
      type: object
    NetworkResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: This type describes a network resource.
      properties:
        properties:
          $ref: '#/components/schemas/NetworkResourceProperties'
          description: Describes properties of a network resource.
      required:
        - properties
      type: object
    NetworkResourceDescriptionList:
      description: A pageable list of network resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/NetworkResourceDescription'
          type: array
      type: object
    NetworkResourceProperties:
      allOf:
        - $ref: '#/components/schemas/NetworkResourcePropertiesBase'
      description: Describes properties of a network resource.
      properties:
        description:
          description: User readable description of the network.
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the network.
          readOnly: true
        statusDetails:
          description: >-
            Gives additional information about the current status of the
            network.
          readOnly: true
          type: string
      type: object
    NetworkResourcePropertiesBase:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
      description: >-
        This type describes the properties of a network resource, including its
        kind.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/NetworkKind'
          description: The type of a Service Fabric container network.
      required:
        - kind
      type: object
    OperatingSystemType:
      description: The operation system required by the code in service.
      enum:
        - Linux
        - Windows
      type: string
      x-ms-enum:
        modelAsString: true
        name: OperatingSystemType
        values:
          - description: The required operating system is Linux.
            value: Linux
          - description: The required operating system is Windows.
            value: Windows
    OperationListResult:
      description: Describes the result of the request to list Service Fabric operations.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: >-
            List of Service Fabric operations supported by the
            Microsoft.ServiceFabric resource provider.
          items:
            $ref: '#/components/schemas/OperationResult'
          type: array
      type: object
    OperationResult:
      description: List of operations available at the listed Azure resource provider.
      properties:
        display:
          $ref: '#/components/schemas/AvailableOperationDisplay'
          description: The object that represents the operation.
        name:
          description: The name of the operation.
          type: string
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        origin:
          description: Origin result
          type: string
        properties:
          $ref: '#/components/schemas/AvailableOperationDescriptionProperties'
          description: Properties of the operation
      type: object
    ProvisionedResourceProperties:
      description: Describes common properties of a provisioned resource.
      properties:
        provisioningState:
          description: State of the resource.
          readOnly: true
          type: string
      type: object
    ProxyResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: >-
        The resource model definition for Azure Resource Manager proxy resource.
        It will have everything other than required location and tags.
    ReliableCollectionsRef:
      description: Specifying this parameter adds support for reliable collections
      properties:
        doNotPersistState:
          description: >-
            False (the default) if ReliableCollections state is persisted to
            disk as usual. True if you do not want to persist state, in which
            case replication is still enabled and you can use
            ReliableCollections as distributed cache.
          type: boolean
        name:
          description: >-
            Name of ReliableCollection resource. Right now it's not used and you
            can use any string.
          type: string
      required:
        - name
      type: object
    Resource:
      description: The resource model definition for Azure Resource Manager resource.
      properties:
        id:
          description: >-
            Fully qualified identifier for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        name:
          description: The name of the resource
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        type:
          description: >-
            The type of the resource. Ex- Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts.
          readOnly: true
          type: string
          x-ms-mutability:
            - read
      type: object
      x-ms-azure-resource: true
    ResourceLimits:
      description: >-
        This type describes the resource limits for a given container. It
        describes the most amount of resources a container is allowed to use
        before being restarted.
      properties:
        cpu:
          description: 'CPU limits in cores. At present, only full cores are supported.'
          format: double
          type: number
        memoryInGB:
          description: The memory limit in GB.
          format: double
          type: number
      type: object
    ResourceRequests:
      description: >-
        This type describes the requested resources for a given container. It
        describes the least amount of resources required for the container. A
        container can consume more than requested resources up to the specified
        limits before being restarted. Currently, the requested resources are
        treated as limits.
      properties:
        cpu:
          description: >-
            Requested number of CPU cores. At present, only full cores are
            supported.
          format: double
          type: number
        memoryInGB:
          description: The memory request in GB for this container.
          format: double
          type: number
      required:
        - memoryInGB
        - cpu
      type: object
    ResourceRequirements:
      description: >-
        This type describes the resource requirements for a container or a
        service.
      properties:
        limits:
          $ref: '#/components/schemas/ResourceLimits'
          description: Describes the maximum limits on the resources for a given container.
        requests:
          $ref: '#/components/schemas/ResourceRequests'
          description: Describes the requested resources for a given container.
      required:
        - requests
      type: object
    ResourceStatus:
      description: Status of the resource.
      enum:
        - Unknown
        - Ready
        - Upgrading
        - Creating
        - Deleting
        - Failed
      type: string
      x-ms-enum:
        modelAsString: true
        name: ResourceStatus
        values:
          - description: Indicates the resource status is unknown. The value is zero.
            value: Unknown
          - description: Indicates the resource is ready. The value is 1.
            value: Ready
          - description: Indicates the resource is upgrading. The value is 2.
            value: Upgrading
          - description: Indicates the resource is being created. The value is 3.
            value: Creating
          - description: Indicates the resource is being deleted. The value is 4.
            value: Deleting
          - description: >-
              Indicates the resource is not functional due to persistent
              failures. See statusDetails property for more details. The value
              is 5.
            value: Failed
    SecretKind:
      description: Describes the kind of secret.
      enum:
        - inlinedValue
      type: string
      x-ms-enum:
        modelAsString: true
        name: SecretKind
        values:
          - description: >-
              A simple secret resource whose plaintext value is provided by the
              user.
            value: inlinedValue
    SecretResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: This type describes a secret resource.
      properties:
        properties:
          $ref: '#/components/schemas/SecretResourceProperties'
          description: Describes the properties of a secret resource.
      required:
        - properties
      type: object
    SecretResourceDescriptionList:
      description: A pageable list of secret resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/SecretResourceDescription'
          type: array
      type: object
    SecretResourceProperties:
      allOf:
        - $ref: '#/components/schemas/SecretResourcePropertiesBase'
      description: Describes the properties of a secret resource.
      properties:
        contentType:
          description: >-
            The type of the content stored in the secret value. The value of
            this property is opaque to Service Fabric. Once set, the value of
            this property cannot be changed.
          type: string
        description:
          description: User readable description of the secret.
          type: string
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the resource.
          readOnly: true
        statusDetails:
          description: Gives additional information about the current status of the secret.
          readOnly: true
          type: string
      type: object
    SecretResourcePropertiesBase:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
      description: >-
        This type describes the properties of a secret resource, including its
        kind.
      discriminator:
        propertyName: kind
      properties:
        kind:
          $ref: '#/components/schemas/SecretKind'
          description: Describes the kind of secret.
      required:
        - kind
      type: object
    SecretValue:
      description: This type represents the unencrypted value of the secret.
      properties:
        value:
          description: The actual value of the secret.
          type: string
      type: object
    SecretValueProperties:
      description: This type describes properties of secret value resource.
      properties:
        value:
          description: The actual value of the secret.
          type: string
      type: object
    SecretValueResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: >-
        This type describes a value of a secret resource. The name of this
        resource is the version identifier corresponding to this secret value.
      properties:
        properties:
          $ref: '#/components/schemas/SecretValueResourceProperties'
          description: This type describes properties of a secret value resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    SecretValueResourceDescriptionList:
      description: >-
        A pageable list of values of a secret resource. The information does not
        include only the name of the value and not the actual unencrypted value.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/SecretValueResourceDescription'
          type: array
      type: object
    SecretValueResourceProperties:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
        - $ref: '#/components/schemas/SecretValueProperties'
      description: This type describes properties of a secret value resource.
    ServiceProperties:
      description: Describes properties of a service resource.
      properties:
        autoScalingPolicies:
          description: Auto scaling policies
          items:
            $ref: '#/components/schemas/AutoScalingPolicy'
          type: array
        description:
          description: User readable description of the service.
          type: string
        healthState:
          $ref: '#/components/schemas/HealthState'
          description: Describes the health state of an application resource.
          readOnly: true
        replicaCount:
          description: >-
            The number of replicas of the service to create. Defaults to 1 if
            not specified.
          type: integer
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the service.
          readOnly: true
        statusDetails:
          description: >-
            Gives additional information about the current status of the
            service.
          readOnly: true
          type: string
        unhealthyEvaluation:
          description: >-
            When the service's health state is not 'Ok', this additional details
            from service fabric Health Manager for the user to know why the
            service is marked unhealthy.
          readOnly: true
          type: string
      type: object
    ServiceReplicaDescription:
      allOf:
        - $ref: '#/components/schemas/ServiceReplicaProperties'
      description: Describes a replica of a service resource.
      properties:
        replicaName:
          description: Name of the replica.
          type: string
      required:
        - replicaName
      type: object
    ServiceReplicaDescriptionList:
      description: A pageable list of service replicas.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/ServiceReplicaDescription'
          type: array
      type: object
    ServiceReplicaProperties:
      description: Describes the properties of a service replica.
      properties:
        codePackages:
          description: >-
            Describes the set of code packages that forms the service. A code
            package describes the container and the properties for running it.
            All the code packages are started together on the same host and
            share the same context (network, process etc.).
          items:
            $ref: '#/components/schemas/ContainerCodePackageProperties'
          type: array
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsRef'
          description: Reference to sinks in DiagnosticsDescription.
        networkRefs:
          description: >-
            The names of the private networks that this service needs to be part
            of.
          items:
            $ref: '#/components/schemas/NetworkRef'
          type: array
        osType:
          $ref: '#/components/schemas/OperatingSystemType'
          description: The operation system required by the code in service.
      required:
        - osType
        - codePackages
      type: object
    ServiceResourceDescription:
      allOf:
        - $ref: '#/components/schemas/ManagedProxyResource'
      description: This type describes a service resource.
      properties:
        properties:
          $ref: '#/components/schemas/ServiceResourceProperties'
          description: This type describes properties of a service resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ServiceResourceDescriptionList:
      description: A pageable list of service resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/ServiceResourceDescription'
          type: array
      type: object
    ServiceResourceProperties:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
        - $ref: '#/components/schemas/ServiceReplicaProperties'
        - $ref: '#/components/schemas/ServiceProperties'
      description: This type describes properties of a service resource.
    ServiceSpecification:
      description: >-
        Resource metrics service provided by Microsoft.Insights resource
        provider.
      properties:
        logSpecifications:
          items:
            $ref: '#/components/schemas/LogSpecification'
          type: array
          x-ms-identifiers:
            - name
        metricSpecifications:
          items:
            $ref: '#/components/schemas/MetricSpecification'
          type: array
          x-ms-identifiers:
            - name
      type: object
    Setting:
      description: >-
        Describes a setting for the container. The setting file path can be
        fetched from environment variable "Fabric_SettingPath". The path for
        Windows container is "C:\\secrets". The path for Linux container is
        "/var/secrets".
      properties:
        name:
          description: The name of the setting.
          type: string
        value:
          description: The value of the setting.
          type: string
      type: object
    TcpConfig:
      description: >-
        Describes the tcp configuration for external connectivity for this
        network.
      properties:
        destination:
          $ref: '#/components/schemas/GatewayDestination'
          description: Describes destination endpoint for routing traffic.
        name:
          description: tcp gateway config name.
          type: string
        port:
          description: >-
            Specifies the port at which the service endpoint below needs to be
            exposed.
          type: integer
      required:
        - destination
        - name
        - port
      type: object
    TrackedResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: >-
        The resource model definition for Azure Resource Manager tracked
        top-level resource.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
          x-ms-mutability:
            - read
            - create
            - update
        location:
          description: The geo-location where the resource lives
          type: string
          x-ms-mutability:
            - read
            - create
      required:
        - location
      type: object
    VolumeProperties:
      description: Describes properties of a volume resource.
      properties:
        azureFileParameters:
          $ref: '#/components/schemas/VolumeProviderParametersAzureFile'
          description: This type describes a volume provided by an Azure Files file share.
        description:
          description: User readable description of the volume.
          type: string
        provider:
          $ref: '#/components/schemas/VolumeProvider'
          description: Provider of the volume.
        status:
          $ref: '#/components/schemas/ResourceStatus'
          description: Status of the volume.
          readOnly: true
        statusDetails:
          description: Gives additional information about the current status of the volume.
          readOnly: true
          type: string
      required:
        - provider
      type: object
    VolumeProvider:
      description: Describes the provider of the volume resource.
      enum:
        - SFAzureFile
      type: string
      x-ms-enum:
        modelAsString: true
        name: VolumeProvider
        values:
          - description: Provides volumes that are backed by Azure Files.
            value: SFAzureFile
    VolumeProviderParametersAzureFile:
      description: This type describes a volume provided by an Azure Files file share.
      properties:
        accountKey:
          description: Access key of the Azure storage account for the File Share.
          type: string
        accountName:
          description: Name of the Azure storage account for the File Share.
          type: string
        shareName:
          description: >-
            Name of the Azure Files file share that provides storage for the
            volume.
          type: string
      required:
        - accountName
        - shareName
      type: object
    VolumeReference:
      description: Describes a reference to a volume resource.
      properties:
        destinationPath:
          description: >-
            The path within the container at which the volume should be mounted.
            Only valid path characters are allowed.
          type: string
        name:
          description: Name of the volume being referenced.
          type: string
        readOnly:
          description: >-
            The flag indicating whether the volume is read only. Default is
            'false'.
          type: boolean
      required:
        - name
        - destinationPath
      type: object
    VolumeResourceDescription:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: This type describes a volume resource.
      properties:
        properties:
          $ref: '#/components/schemas/VolumeResourceProperties'
          description: This type describes properties of a volume resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    VolumeResourceDescriptionList:
      description: A pageable list of volume resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: '#/components/schemas/VolumeResourceDescription'
          type: array
      type: object
    VolumeResourceProperties:
      allOf:
        - $ref: '#/components/schemas/ProvisionedResourceProperties'
        - $ref: '#/components/schemas/VolumeProperties'
      description: This type describes properties of a volume resource.
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

