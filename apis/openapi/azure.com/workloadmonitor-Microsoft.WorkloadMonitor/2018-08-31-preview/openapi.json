{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "wlmengg@microsoft.com",
      "name": "Microsoft"
    },
    "description": "APIs for workload monitoring",
    "title": "Workload Monitor API",
    "version": "2018-08-31-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/workloadmonitor/resource-manager/Microsoft.WorkloadMonitor/preview/2018-08-31-preview/Microsoft.WorkloadMonitor.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.WorkloadMonitor/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WorkloadInsights"
        ],
        "operationId": "Operations_List",
        "summary": "Gets the details of all operations possible on the resource provider.",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.WorkloadMonitor/componentsSummary": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_apply"
          },
          {
            "$ref": "#/components/parameters/_orderby"
          },
          {
            "$ref": "#/components/parameters/_expand"
          },
          {
            "$ref": "#/components/parameters/_top"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentsCollection"
                }
              }
            },
            "description": "OK. At least one component found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkloadInsights"
        ],
        "operationId": "ComponentsSummary_List",
        "summary": "Get subscription wide details of components.",
        "x-ms-examples": {
          "ComponentsSummary_List": {
            "$ref": "./examples/ComponentsSummary_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.WorkloadMonitor/monitorInstancesSummary": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_apply"
          },
          {
            "$ref": "#/components/parameters/_orderby"
          },
          {
            "$ref": "#/components/parameters/_expand"
          },
          {
            "$ref": "#/components/parameters/_top"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorInstancesCollection"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkloadInsights"
        ],
        "operationId": "MonitorInstancesSummary_List",
        "summary": "Get subscription wide health instances.",
        "x-ms-examples": {
          "MonitorInstancesSummary_List": {
            "$ref": "./examples/MonitorInstancesSummary_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/components": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_apply"
          },
          {
            "$ref": "#/components/parameters/_orderby"
          },
          {
            "$ref": "#/components/parameters/_expand"
          },
          {
            "$ref": "#/components/parameters/_top"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentsCollection"
                }
              }
            },
            "description": "OK. At least one component found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "Components_ListByResource",
        "summary": "Get list of components for a resource.",
        "x-ms-examples": {
          "Components_ListByResource": {
            "$ref": "./examples/Components_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/components/{componentId}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/componentId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_expand"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            },
            "description": "OK. component is found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "Components_Get",
        "summary": "Get details of a component.",
        "x-ms-examples": {
          "Components_Get": {
            "$ref": "./examples/Components_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitorInstances": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_apply"
          },
          {
            "$ref": "#/components/parameters/_orderby"
          },
          {
            "$ref": "#/components/parameters/_expand"
          },
          {
            "$ref": "#/components/parameters/_top"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorInstancesCollection"
                }
              }
            },
            "description": "OK."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "MonitorInstances_ListByResource",
        "summary": "Get list of monitor instances for a resource.",
        "x-ms-examples": {
          "MonitorInstances_ListByResource": {
            "$ref": "./examples/MonitorInstances_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitorInstances/{monitorInstanceId}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/monitorInstanceId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_select"
          },
          {
            "$ref": "#/components/parameters/_expand"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorInstance"
                }
              }
            },
            "description": "OK. monitorInstance is found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "MonitorInstances_Get",
        "summary": "Get details of a monitorInstance.",
        "x-ms-examples": {
          "MonitorInstances_Get": {
            "$ref": "./examples/MonitorInstances_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_filter"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorsCollection"
                }
              }
            },
            "description": "OK. At least one monitor is found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "Monitors_ListByResource",
        "summary": "Get list of a monitors of a resource.",
        "x-ms-examples": {
          "Monitors_ListByResource": {
            "$ref": "./examples/Monitors_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/monitors/{monitorId}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Monitor Id.",
            "in": "path",
            "name": "monitorId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Monitor"
                }
              }
            },
            "description": "OK. monitor is found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "Monitors_Get",
        "summary": "Get details of a single monitor.",
        "x-ms-examples": {
          "Monitors_Get": {
            "$ref": "./examples/Monitors_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Monitor Id.",
            "in": "path",
            "name": "monitorId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Monitor"
                }
              }
            },
            "description": "OK. Existing monitor is updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "Monitors_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Monitor"
              }
            }
          },
          "description": "Body of the Monitor PATCH object.",
          "required": true
        },
        "summary": "Update a Monitor's configuration.",
        "x-ms-examples": {
          "Monitors_Update": {
            "$ref": "./examples/Monitors_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/notificationSettings": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/_skiptoken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsCollection"
                }
              }
            },
            "description": "OK. At least one component found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "NotificationSettings_ListByResource",
        "summary": "Get list of notification settings for a resource.",
        "x-ms-examples": {
          "NotificationSettings_ListByResource": {
            "$ref": "./examples/NotificationSettings_ListByResource.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceNamespace}/{resourceType}/{resourceName}/providers/Microsoft.WorkloadMonitor/notificationSettings/{notificationSettingName}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/notificationSettingName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSetting"
                }
              }
            },
            "description": "OK. At least one component found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "NotificationSettings_Get",
        "summary": "Get a of notification setting for a resource.",
        "x-ms-examples": {
          "NotificationSettings_Get": {
            "$ref": "./examples/NotificationSettings_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The Namespace of the resource.",
            "in": "path",
            "name": "resourceNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of the resource.",
            "in": "path",
            "name": "resourceType",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the resource.",
            "in": "path",
            "name": "resourceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/notificationSettingName"
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSetting"
                }
              }
            },
            "description": "OK. At least one component found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WLIExtension"
        ],
        "operationId": "NotificationSettings_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSetting"
              }
            }
          },
          "description": "Body of the NotificationSetting PUT object.",
          "required": true
        },
        "summary": "Update notification settings for a resource.",
        "x-ms-examples": {
          "NotificationSettings_Update": {
            "$ref": "./examples/NotificationSettings_Update.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "_apply": {
        "description": "Apply aggregation.",
        "in": "query",
        "name": "$apply",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_expand": {
        "description": "Include properties inline in the response.",
        "in": "query",
        "name": "$expand",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_filter": {
        "description": "Filter to be applied on the operation.",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_orderby": {
        "description": "Sort the result on one or more properties.",
        "in": "query",
        "name": "$orderby",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_select": {
        "description": "Properties to be returned in the response.",
        "in": "query",
        "name": "$select",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_skiptoken": {
        "description": "The page-continuation token to use with a paged version of this API.",
        "in": "query",
        "name": "$skiptoken",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "_top": {
        "description": "Limit the result to the specified number of rows.",
        "in": "query",
        "name": "$top",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "api-version": {
        "description": "The API version to use for this operation.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2018-08-31-preview"
          ],
          "type": "string"
        }
      },
      "componentId": {
        "description": "Component Id.",
        "in": "path",
        "name": "componentId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "monitorId": {
        "description": "Id of the Monitor.",
        "in": "path",
        "name": "monitorId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "monitorInstanceId": {
        "description": "MonitorInstance Id.",
        "in": "path",
        "name": "monitorInstanceId",
        "required": true,
        "schema": {
          "format": "uuid",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "notificationSettingName": {
        "description": "Default string modeled as parameter for URL to work correctly.",
        "in": "path",
        "name": "notificationSettingName",
        "required": true,
        "schema": {
          "enum": [
            "default"
          ],
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Component": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Model for component.",
        "properties": {
          "etag": {
            "description": "For optimistic concurrency control.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ComponentProperties",
            "description": "Properties of the component.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ComponentProperties": {
        "description": "Model for properties of a component.",
        "properties": {
          "aggregateProperties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Properties requested in aggregation queries.",
            "readOnly": true,
            "type": "object"
          },
          "children": {
            "description": "component children.",
            "items": {
              "$ref": "#/components/schemas/Component"
            },
            "readOnly": true,
            "type": "array"
          },
          "componentName": {
            "description": "Name of the component.",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeGroupCategory": {
            "description": "Component type group category. Classification of component type groups into a logical category. e.g. Network, Disk, Memory, CPU.",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeId": {
            "description": "ID of the component type.",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeName": {
            "description": "Name of the component type. Qualifies the type of component such as whether it is a SQL database, logical disk, website, etc.",
            "readOnly": true,
            "type": "string"
          },
          "healthState": {
            "description": "Health state of the component.",
            "enum": [
              "Error",
              "Warning",
              "Success",
              "Unknown",
              "Uninitialized"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HealthState"
            }
          },
          "healthStateCategory": {
            "description": "Category of component's health state.",
            "enum": [
              "Identity",
              "CustomGroup"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "HealthStateCategory"
            }
          },
          "healthStateChangesEndTime": {
            "description": "End time for health state changes.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "healthStateChangesStartTime": {
            "description": "Start time for health state changes.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastHealthStateChangeTime": {
            "description": "Time of last health state change.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "solutionId": {
            "description": "ID of the OMS solution this component belong to.",
            "readOnly": true,
            "type": "string"
          },
          "vmId": {
            "description": "ID of the VM this component belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "vmName": {
            "description": "Name of the VM this component belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "vmTags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags on the VM this component belongs to.",
            "readOnly": true,
            "type": "object"
          },
          "workloadType": {
            "description": "Type of the workload.",
            "enum": [
              "BaseOS",
              "SQL",
              "IIS",
              "Apache"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          },
          "workspaceId": {
            "description": "ID of the workspace.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ComponentsCollection": {
        "description": "Model for collection of components.",
        "properties": {
          "nextLink": {
            "description": "URL to the next set of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of components.",
            "items": {
              "$ref": "#/components/schemas/Component"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ErrorFieldContract": {
        "description": "Error field contract.",
        "properties": {
          "code": {
            "description": "Property level error code.",
            "type": "string"
          },
          "message": {
            "description": "Human-readable representation of property-level error.",
            "type": "string"
          },
          "target": {
            "description": "Property name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error body contract.",
        "properties": {
          "code": {
            "description": "Service-defined error code. This code serves as a sub-status for the HTTP error code specified in the response.",
            "type": "string"
          },
          "details": {
            "description": "The list of invalid fields send in request, in case of validation error.",
            "items": {
              "$ref": "#/components/schemas/ErrorFieldContract"
            },
            "type": "array"
          },
          "message": {
            "description": "Human-readable representation of the error.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HealthStateChange": {
        "description": "Model for health state change",
        "properties": {
          "healthState": {
            "description": "Health state of monitor instance.",
            "enum": [
              "Error",
              "Warning",
              "Success",
              "Unknown",
              "Uninitialized"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HealthState"
            }
          },
          "healthStateChangeTime": {
            "description": "Time at which this Health state was reached.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Monitor": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Model for Monitor",
        "properties": {
          "etag": {
            "description": "For optimistic concurrency control.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/MonitorProperties",
            "description": "Properties of monitor instance",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MonitorCriteria": {
        "description": "Criteria for monitor configuration",
        "properties": {
          "comparisonOperator": {
            "description": "Comparison enum on threshold of this criteria",
            "enum": [
              "Equals",
              "GreaterThan",
              "GreaterThanOrEqual",
              "LessThan",
              "LessThanOrEqual",
              "NotEquals"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Operator"
            }
          },
          "healthState": {
            "description": "Target health state of the criteria",
            "enum": [
              "Error",
              "Warning",
              "Success",
              "Unknown",
              "Uninitialized"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HealthState"
            }
          },
          "threshold": {
            "description": "Threshold value for this criteria",
            "format": "double",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "MonitorInstance": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Model for monitor instance.",
        "properties": {
          "etag": {
            "description": "For optimistic concurrency control.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/MonitorInstanceProperties",
            "description": "Properties of the monitor instance.",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MonitorInstanceProperties": {
        "description": "Model for properties of a monitor instance.",
        "properties": {
          "aggregateProperties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Properties requested in aggregation queries.",
            "readOnly": true,
            "type": "object"
          },
          "alertGeneration": {
            "description": "Generates alert or not.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertGeneration"
            }
          },
          "children": {
            "description": "Health instance children.",
            "items": {
              "$ref": "#/components/schemas/MonitorInstance"
            },
            "readOnly": true,
            "type": "array"
          },
          "componentId": {
            "description": "ID of the component.",
            "readOnly": true,
            "type": "string"
          },
          "componentName": {
            "description": "Name of the component.",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeId": {
            "description": "ID of the component type.",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeName": {
            "description": "Name of the component type. Qualifies the type of component such as whether it is a SQL database, logical disk, website, etc.",
            "readOnly": true,
            "type": "string"
          },
          "healthState": {
            "description": "Health state of monitor instance.",
            "enum": [
              "Error",
              "Warning",
              "Success",
              "Unknown",
              "Uninitialized"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "HealthState"
            }
          },
          "healthStateCategory": {
            "description": "Category of monitor instance's health state.",
            "enum": [
              "Identity",
              "CustomGroup"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "HealthStateCategory"
            }
          },
          "healthStateChanges": {
            "description": "Health state changes.",
            "items": {
              "$ref": "#/components/schemas/HealthStateChange"
            },
            "readOnly": true,
            "type": "array"
          },
          "healthStateChangesEndTime": {
            "description": "End time for health state changes.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "healthStateChangesStartTime": {
            "description": "Start time for health state changes.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastHealthStateChangeTime": {
            "description": "Time of last health state change.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "monitorCategory": {
            "description": "Monitor type category. Indicates the attribute of the component that the health criteria monitors such as Performance, Availability, etc.",
            "enum": [
              "AvailabilityHealth",
              "Configuration",
              "EntityHealth",
              "PerformanceHealth",
              "Security"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitorCategory"
            }
          },
          "monitorId": {
            "description": "ID of the monitor instance.",
            "readOnly": true,
            "type": "string"
          },
          "monitorName": {
            "description": "Name of the monitor.",
            "readOnly": true,
            "type": "string"
          },
          "monitorType": {
            "description": "Type of the monitor. The qualifier for the health criteria depending on the functionality it performs such as Unit, Aggregate, Dependency.",
            "enum": [
              "Aggregate",
              "Dependency",
              "Unit"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitorType"
            }
          },
          "solutionId": {
            "description": "ID of the OMS solution this health instance belong to.",
            "readOnly": true,
            "type": "string"
          },
          "workloadType": {
            "description": "Type of the workload.",
            "enum": [
              "BaseOS",
              "SQL",
              "IIS",
              "Apache"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          },
          "workspaceId": {
            "description": "ID of the workspace.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MonitorInstancesCollection": {
        "description": "Model for collection of health instances.",
        "properties": {
          "nextLink": {
            "description": "URL to the next set of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of health instances.",
            "items": {
              "$ref": "#/components/schemas/MonitorInstance"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MonitorProperties": {
        "description": "Model for properties of a Monitor.",
        "properties": {
          "alertGeneration": {
            "description": "Generates alerts or not",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertGeneration"
            }
          },
          "componentTypeDisplayName": {
            "description": "Component Type Display Name of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeId": {
            "description": "Component Type Id of monitor",
            "readOnly": true,
            "type": "string"
          },
          "componentTypeName": {
            "description": "Component Type Name of monitor",
            "readOnly": true,
            "type": "string"
          },
          "criteria": {
            "description": "Collection of MonitorCriteria. For PATCH calls, instead of partial list, complete list of expected criteria should be passed for proper updating.",
            "items": {
              "$ref": "#/components/schemas/MonitorCriteria"
            },
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "description": "Description of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "documentationURL": {
            "description": "URL pointing to the documentation of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "frequency": {
            "description": "Frequency at which monitor condition is evaluated",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "lookbackDuration": {
            "description": "The duration in minutes in the past during which the monitor is evaluated",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "monitorCategory": {
            "description": "Category of the monitor",
            "enum": [
              "AvailabilityHealth",
              "Configuration",
              "EntityHealth",
              "PerformanceHealth",
              "Security"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitorCategory"
            }
          },
          "monitorDisplayName": {
            "description": "User friendly display name of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "monitorId": {
            "description": "ID of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "monitorName": {
            "description": "Name of the monitor",
            "readOnly": true,
            "type": "string"
          },
          "monitorState": {
            "description": "Is the monitor state enabled or disabled",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitorState"
            }
          },
          "monitorType": {
            "description": "Type of the monitor",
            "enum": [
              "Aggregate",
              "Dependency",
              "Unit"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitorType"
            }
          },
          "parentMonitorDisplayName": {
            "description": "User friendly display name of the parent monitor",
            "readOnly": true,
            "type": "string"
          },
          "parentMonitorName": {
            "description": "Name of the parent monitor",
            "readOnly": true,
            "type": "string"
          },
          "signalName": {
            "description": "Name of the signal on which this monitor is configured.",
            "readOnly": true,
            "type": "string"
          },
          "signalType": {
            "description": "Type of the signal on which this monitor is configured.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MonitorsCollection": {
        "description": "Model for collection of Monitor.",
        "properties": {
          "nextLink": {
            "description": "URL for next set of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of Monitor.",
            "items": {
              "$ref": "#/components/schemas/Monitor"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NotificationSetting": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ProxyResource"
          }
        ],
        "description": "Model for NotificationSetting.",
        "properties": {
          "etag": {
            "description": "For optimistic concurrency control.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/NotificationSettingProperties",
            "description": "Properties of Notification Settings",
            "readOnly": true,
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NotificationSettingProperties": {
        "description": "Model for properties of a NotificationSetting.",
        "properties": {
          "actionGroupResourceIds": {
            "description": "List of action group resource ids to be notified",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "NotificationSettingsCollection": {
        "description": "Model for collection of notificationSettings.",
        "properties": {
          "nextLink": {
            "description": "URL to the next set of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/NotificationSetting"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Operation": {
        "description": "Operation supported by the resource provider.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationProperties",
            "description": "The properties of the resource operation.",
            "readOnly": true
          },
          "name": {
            "description": "The name of the resource operation.",
            "readOnly": true,
            "type": "string"
          },
          "origin": {
            "description": "The origin of the operation.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Container for a list of operations supported by the resource provider.",
        "properties": {
          "nextLink": {
            "description": "URL to the next set of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationProperties": {
        "description": "Properties of an operation supported by the resource provider.",
        "properties": {
          "description": {
            "description": "The description of the resource provider.",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "This operation name.",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "The provider name.",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "The resource name.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}