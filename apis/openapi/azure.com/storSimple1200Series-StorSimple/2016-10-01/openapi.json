{
  "openapi": "3.0.0",
  "info": {
    "title": "StorSimpleManagementClient",
    "version": "2016-10-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/storSimple1200Series/resource-manager/Microsoft.StorSimple/stable/2016-10-01/StorSimple.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.StorSimple/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableProviderOperations"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "AvailableProviderOperations"
        ],
        "deprecated": false,
        "description": "List of AvailableProviderOperations",
        "operationId": "AvailableProviderOperations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerList"
                }
              }
            },
            "description": "The collection of StorSimple managers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Retrieves all the managers in a subscription.",
        "operationId": "Managers_List",
        "x-ms-examples": {
          "ManagersList": {
            "$ref": "./examples/ManagersList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerList"
                }
              }
            },
            "description": "The collection of StorSimple managers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Retrieves all the managers in a resource group.",
        "operationId": "Managers_ListByResourceGroup",
        "x-ms-examples": {
          "ManagersListByResourceGroup": {
            "$ref": "./examples/ManagersListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The StorSimple manager has been successfully deleted"
          },
          "204": {
            "description": "The StorSimple manager is already in a deleted state"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Deletes the manager.",
        "operationId": "Managers_Delete",
        "x-ms-examples": {
          "ManagersDelete": {
            "$ref": "./examples/ManagersDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager"
                }
              }
            },
            "description": "The StorSimple manager."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified manager name.",
        "operationId": "Managers_Get",
        "x-ms-examples": {
          "ManagersGet": {
            "$ref": "./examples/ManagersGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager"
                }
              }
            },
            "description": "The StorSimple manager has been successfully updated"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Updates the StorSimple Manager.",
        "operationId": "Managers_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerPatch"
              }
            }
          },
          "description": "The manager update parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ManagersUpdate": {
            "$ref": "./examples/ManagersUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager"
                }
              }
            },
            "description": "The StorSimple manager has been successfully updated"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manager"
                }
              }
            },
            "description": "The StorSimple manager has been successfully created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Creates or updates the manager.",
        "operationId": "Managers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Manager"
              }
            }
          },
          "description": "The manager.",
          "required": true
        },
        "x-ms-examples": {
          "ManagersCreateOrUpdate": {
            "$ref": "./examples/ManagersCreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlRecordList"
                }
              }
            },
            "description": "The collection of access control records."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "AccessControlRecords"
        ],
        "deprecated": false,
        "description": "Retrieves all the access control records in a manager.",
        "operationId": "AccessControlRecords_ListByManager",
        "x-ms-examples": {
          "AccessControlRecordsListByManager": {
            "$ref": "./examples/AccessControlRecordsListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/accessControlRecords/{accessControlRecordName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the access control record to delete.",
            "in": "path",
            "name": "accessControlRecordName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the access control record."
          },
          "204": {
            "description": "Successfully deleted the access control record."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "AccessControlRecords"
        ],
        "deprecated": false,
        "description": "Deletes the access control record.",
        "operationId": "AccessControlRecords_Delete",
        "x-ms-examples": {
          "AccessControlRecordsDelete": {
            "$ref": "./examples/AccessControlRecordsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "Name of access control record to be fetched.",
            "in": "path",
            "name": "accessControlRecordName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlRecord"
                }
              }
            },
            "description": "The access control record."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "AccessControlRecords"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified access control record name.",
        "operationId": "AccessControlRecords_Get",
        "x-ms-examples": {
          "AccessControlRecordsGet": {
            "$ref": "./examples/AccessControlRecordsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the access control record.",
            "in": "path",
            "name": "accessControlRecordName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlRecord"
                }
              }
            },
            "description": "Successfully created or updated the access control record."
          },
          "202": {
            "description": "Accepted the request to create or update the access control record."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "AccessControlRecords"
        ],
        "deprecated": false,
        "description": "Creates or Updates an access control record.",
        "operationId": "AccessControlRecords_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlRecord"
              }
            }
          },
          "description": "The access control record to be added or updated.",
          "required": true
        },
        "x-ms-examples": {
          "AccessControlRecordsCreateOrUpdate": {
            "$ref": "./examples/AccessControlRecordsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/alerts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertList"
                }
              }
            },
            "description": "The collection of alerts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Retrieves all the alerts in a manager.",
        "operationId": "Alerts_ListByManager",
        "x-ms-examples": {
          "AlertsListByManager": {
            "$ref": "./examples/AlertsListByManager.json"
          }
        },
        "x-ms-odata": "#/components/schemas/AlertFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/backups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupList"
                }
              }
            },
            "description": "The collection of backups."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Backups"
        ],
        "deprecated": false,
        "description": "Retrieves all the backups in a manager.",
        "operationId": "Backups_ListByManager",
        "x-ms-examples": {
          "BackupsListByManager": {
            "$ref": "./examples/BackupsListByManager.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/certificates/{certificateName}": {
      "put": {
        "parameters": [
          {
            "description": "Certificate Name",
            "in": "path",
            "name": "certificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadCertificateResponse"
                }
              }
            },
            "description": "Upload Vault Certificate"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Upload Vault Cred Certificate.\r\nReturns UploadCertificateResponse",
        "operationId": "Managers_UploadRegistrationCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadCertificateRequest"
              }
            }
          },
          "description": "UploadCertificateRequest Request",
          "required": true
        },
        "x-ms-examples": {
          "ManagersUploadRegistrationCertificate": {
            "$ref": "./examples/ManagersUploadRegistrationCertificate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/clearAlerts": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully cleared the alerts."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Clear the alerts.",
        "operationId": "Alerts_Clear",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearAlertRequest"
              }
            }
          },
          "description": "The clear alert request.",
          "required": true
        },
        "x-ms-examples": {
          "AlertsClear": {
            "$ref": "./examples/AlertsClear.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceList"
                }
              }
            },
            "description": "The collection of devices."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Retrieves all the devices in a manager.",
        "operationId": "Devices_ListByManager",
        "x-ms-examples": {
          "DevicesListByManager": {
            "$ref": "./examples/DevicesListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the device."
          },
          "204": {
            "description": "Successfully deleted the device."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Deletes the device.",
        "operationId": "Devices_Delete",
        "x-ms-examples": {
          "DevicesDelete": {
            "$ref": "./examples/DevicesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "The device."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified device name.",
        "operationId": "Devices_Get",
        "x-ms-examples": {
          "DevicesGet": {
            "$ref": "./examples/DevicesGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The device Name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            },
            "description": "Successfully patched the device."
          },
          "202": {
            "description": "Accepted the request to patch the device."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Patches the device.",
        "operationId": "Devices_Patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePatch"
              }
            }
          },
          "description": "Patch representation of the device.",
          "required": true
        },
        "x-ms-examples": {
          "DevicesPatch": {
            "$ref": "./examples/DevicesPatch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/alertSettings/default": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertSettings"
                }
              }
            },
            "description": "The alert settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Returns the alert settings of the specified device name.",
        "operationId": "Devices_GetAlertSettings",
        "x-ms-examples": {
          "DevicesGetAlertSettings": {
            "$ref": "./examples/DevicesGetAlertSettings.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertSettings"
                }
              }
            },
            "description": "Successfully created or updated the network settings."
          },
          "202": {
            "description": "Accepted the request to create or update the network settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Creates or updates the alert settings",
        "operationId": "Devices_CreateOrUpdateAlertSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertSettings"
              }
            }
          },
          "description": "The alert settings.",
          "required": true
        },
        "x-ms-examples": {
          "DevicesCreateOrUpdateAlertSettings": {
            "$ref": "./examples/DevicesCreateOrUpdateAlertSettings.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups": {
      "get": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupScheduleGroupList"
                }
              }
            },
            "description": "The collection of backup schedule groups."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "BackupScheduleGroups"
        ],
        "deprecated": false,
        "description": "Retrieves all the backup schedule groups in a device.",
        "operationId": "BackupScheduleGroups_ListByDevice",
        "x-ms-examples": {
          "BackupScheduleGroupsListByDevice": {
            "$ref": "./examples/BackupScheduleGroupsListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backupScheduleGroups/{scheduleGroupName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the schedule group.",
            "in": "path",
            "name": "scheduleGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup schedule group."
          },
          "204": {
            "description": "Successfully deleted the backup schedule group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "BackupScheduleGroups"
        ],
        "deprecated": false,
        "description": "Deletes the backup schedule group.",
        "operationId": "BackupScheduleGroups_Delete",
        "x-ms-examples": {
          "BackupScheduleGroupsDelete": {
            "$ref": "./examples/BackupScheduleGroupsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the schedule group.",
            "in": "path",
            "name": "scheduleGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupScheduleGroup"
                }
              }
            },
            "description": "The backup schedule group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "BackupScheduleGroups"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified backup schedule group name.",
        "operationId": "BackupScheduleGroups_Get",
        "x-ms-examples": {
          "BackupScheduleGroupsGet": {
            "$ref": "./examples/BackupScheduleGroupsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the schedule group.",
            "in": "path",
            "name": "scheduleGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupScheduleGroup"
                }
              }
            },
            "description": "Successfully created or updated the backup schedule group."
          },
          "202": {
            "description": "Accepted the request to create or update the backup schedule group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "BackupScheduleGroups"
        ],
        "deprecated": false,
        "description": "Creates or Updates the backup schedule Group.",
        "operationId": "BackupScheduleGroups_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupScheduleGroup"
              }
            }
          },
          "description": "The schedule group to be created",
          "required": true
        },
        "x-ms-examples": {
          "BackupScheduleGroupsCreateOrUpdate": {
            "$ref": "./examples/BackupScheduleGroupsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Set to true if you need backups which can be used for failover.",
            "in": "query",
            "name": "forFailover",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupList"
                }
              }
            },
            "description": "The collection of backups."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Backups"
        ],
        "deprecated": false,
        "description": "Retrieves all the backups in a device. Can be used to get the backups for failover also.",
        "operationId": "Backups_ListByDevice",
        "x-ms-examples": {
          "BackupsListByDevice": {
            "$ref": "./examples/BackupsListByDevice.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BackupFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The backup name.",
            "in": "path",
            "name": "backupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the backup."
          },
          "204": {
            "description": "Successfully deleted the backup."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Backups"
        ],
        "deprecated": false,
        "description": "Deletes the backup.",
        "operationId": "Backups_Delete",
        "x-ms-examples": {
          "BackupsDelete": {
            "$ref": "./examples/BackupsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/backups/{backupName}/elements/{elementName}/clone": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The backup name.",
            "in": "path",
            "name": "backupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The backup element name.",
            "in": "path",
            "name": "elementName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cloned."
          },
          "202": {
            "description": "Accepted the request to clone."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Backups"
        ],
        "deprecated": false,
        "description": "Clones the given backup element to a new disk or share with given details.",
        "operationId": "Backups_Clone",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloneRequest"
              }
            }
          },
          "description": "The clone request.",
          "required": true
        },
        "x-ms-examples": {
          "BackupsClone": {
            "$ref": "./examples/BackupsClone.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings": {
      "get": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapSettingsList"
                }
              }
            },
            "description": "The collection of chap settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "ChapSettings"
        ],
        "deprecated": false,
        "description": "Retrieves all the chap settings in a device.",
        "operationId": "ChapSettings_ListByDevice",
        "x-ms-examples": {
          "ChapSettingsListByDevice": {
            "$ref": "./examples/ChapSettingsListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/chapSettings/{chapUserName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The chap user name.",
            "in": "path",
            "name": "chapUserName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the chap setting."
          },
          "204": {
            "description": "Successfully deleted the chap setting."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "ChapSettings"
        ],
        "deprecated": false,
        "description": "Deletes the chap setting.",
        "operationId": "ChapSettings_Delete",
        "x-ms-examples": {
          "ChapSettingsDelete": {
            "$ref": "./examples/ChapSettingsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The user name of chap to be fetched.",
            "in": "path",
            "name": "chapUserName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapSettings"
                }
              }
            },
            "description": "The chap setting."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "ChapSettings"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified chap setting name.",
        "operationId": "ChapSettings_Get",
        "x-ms-examples": {
          "ChapSettingsGet": {
            "$ref": "./examples/ChapSettingsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The chap user name.",
            "in": "path",
            "name": "chapUserName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapSettings"
                }
              }
            },
            "description": "Successfully created or updated the chap setting."
          },
          "202": {
            "description": "Accepted the request to create or update the chap setting."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "ChapSettings"
        ],
        "deprecated": false,
        "description": "Creates or updates the chap setting.",
        "operationId": "ChapSettings_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChapSettings"
              }
            }
          },
          "description": "The chap setting to be added or updated.",
          "required": true
        },
        "x-ms-examples": {
          "ChapSettingsCreateOrUpdate": {
            "$ref": "./examples/ChapSettingsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/deactivate": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to deactivate the device."
          },
          "204": {
            "description": "Successfully deactivated the device."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Deactivates the device.",
        "operationId": "Devices_Deactivate",
        "x-ms-examples": {
          "DevicesDeactivate": {
            "$ref": "./examples/DevicesDeactivate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/disks": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIDiskList"
                }
              }
            },
            "description": "The collection of iSCSI disks."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Retrieves all the iSCSI disks in a device.",
        "operationId": "IscsiDisks_ListByDevice",
        "x-ms-examples": {
          "IscsiDisksListByDevice": {
            "$ref": "./examples/IscsiDisksListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/download": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to download updates."
          },
          "204": {
            "description": "Successfully downloaded updates."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Downloads updates on the device.",
        "operationId": "Devices_DownloadUpdates",
        "x-ms-examples": {
          "DevicesDownloadUpdates": {
            "$ref": "./examples/DevicesDownloadUpdates.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failover": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to failover the device."
          },
          "204": {
            "description": "Successfully completed failover of the device."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Fails over the device to another device.",
        "operationId": "Devices_Failover",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FailoverRequest"
              }
            }
          },
          "description": "The failover request.",
          "required": true
        },
        "x-ms-examples": {
          "DevicesFailover": {
            "$ref": "./examples/DevicesFailover.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/failoverTargets": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "Specify $expand=details to populate additional fields related to the device.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceList"
                }
              }
            },
            "description": "The collection of devices for failover."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Retrieves all the devices which can be used as failover targets for the given device.",
        "operationId": "Devices_ListFailoverTarget",
        "x-ms-examples": {
          "DevicesListFailoverTarget": {
            "$ref": "./examples/DevicesListFailoverTarget.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServerList"
                }
              }
            },
            "description": "The collection of file servers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Retrieves all the file servers in a device.",
        "operationId": "FileServers_ListByDevice",
        "x-ms-examples": {
          "FileServersListByDevice": {
            "$ref": "./examples/FileServersListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the file server."
          },
          "204": {
            "description": "Successfully deleted the file server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Deletes the file server.",
        "operationId": "FileServers_Delete",
        "x-ms-examples": {
          "FileServersDelete": {
            "$ref": "./examples/FileServersDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServer"
                }
              }
            },
            "description": "The file server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified file server name.",
        "operationId": "FileServers_Get",
        "x-ms-examples": {
          "FileServersGet": {
            "$ref": "./examples/FileServersGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServer"
                }
              }
            },
            "description": "Successfully created or updated the file server."
          },
          "202": {
            "description": "Accepted the request to create or update the file server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Creates or updates the file server.",
        "operationId": "FileServers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileServer"
              }
            }
          },
          "description": "The file server.",
          "required": true
        },
        "x-ms-examples": {
          "FileServersCreateOrUpdate": {
            "$ref": "./examples/FileServersCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/backup": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to backup the file server."
          },
          "204": {
            "description": "Successfully completed backup of the file server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Backup the file server now.",
        "operationId": "FileServers_BackupNow",
        "x-ms-examples": {
          "FileServersBackupNow": {
            "$ref": "./examples/FileServersBackupNow.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metrics": {
      "get": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Gets the file server metrics.",
        "operationId": "FileServers_ListMetrics",
        "x-ms-examples": {
          "FileServersListMetrics": {
            "$ref": "./examples/FileServersListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The name of the device.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the file server.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Retrieves metric definitions of all metrics aggregated at the file server.",
        "operationId": "FileServers_ListMetricDefinition",
        "x-ms-examples": {
          "FileServersListMetricDefinition": {
            "$ref": "./examples/FileServersListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareList"
                }
              }
            },
            "description": "The collection of file shares."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Retrieves all the file shares in a file server.",
        "operationId": "FileShares_ListByFileServer",
        "x-ms-examples": {
          "FileSharesListByFileServer": {
            "$ref": "./examples/FileSharesListByFileServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file share Name",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the file share."
          },
          "204": {
            "description": "Successfully deleted the file share."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Deletes the file share.",
        "operationId": "FileShares_Delete",
        "x-ms-examples": {
          "FileSharesDelete": {
            "$ref": "./examples/FileSharesDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file share name.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShare"
                }
              }
            },
            "description": "The file share."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified file share name.",
        "operationId": "FileShares_Get",
        "x-ms-examples": {
          "FileSharesGet": {
            "$ref": "./examples/FileSharesGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file share name.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShare"
                }
              }
            },
            "description": "Successfully created or updated the file share."
          },
          "202": {
            "description": "Accepted the request to create or update the file share."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Creates or updates the file share.",
        "operationId": "FileShares_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileShare"
              }
            }
          },
          "description": "The file share.",
          "required": true
        },
        "x-ms-examples": {
          "FileSharesCreateOrUpdate": {
            "$ref": "./examples/FileSharesCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metrics": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file share name.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Gets the file share metrics",
        "operationId": "FileShares_ListMetrics",
        "x-ms-examples": {
          "FileSharesListMetrics": {
            "$ref": "./examples/FileSharesListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/fileservers/{fileServerName}/shares/{shareName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file server name.",
            "in": "path",
            "name": "fileServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The file share name.",
            "in": "path",
            "name": "shareName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Retrieves metric definitions of all metrics aggregated at the file share.",
        "operationId": "FileShares_ListMetricDefinition",
        "x-ms-examples": {
          "FileSharesListMetricDefinition": {
            "$ref": "./examples/FileSharesListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/install": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to install updates."
          },
          "204": {
            "description": "Successfully installed updates."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Installs the updates on the device.",
        "operationId": "Devices_InstallUpdates",
        "x-ms-examples": {
          "DevicesInstallUpdates": {
            "$ref": "./examples/DevicesInstallUpdates.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIServerList"
                }
              }
            },
            "description": "The collection of iSCSI servers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Retrieves all the iSCSI in a device.",
        "operationId": "IscsiServers_ListByDevice",
        "x-ms-examples": {
          "IscsiServersListByDevice": {
            "$ref": "./examples/IscsiServersListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the iSCSI server."
          },
          "204": {
            "description": "Successfully deleted the iSCSI server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Deletes the iSCSI server.",
        "operationId": "IscsiServers_Delete",
        "x-ms-examples": {
          "IscsiServersDelete": {
            "$ref": "./examples/IscsiServersDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIServer"
                }
              }
            },
            "description": "The iSCSI server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified iSCSI server name.",
        "operationId": "IscsiServers_Get",
        "x-ms-examples": {
          "IscsiServersGet": {
            "$ref": "./examples/IscsiServersGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIServer"
                }
              }
            },
            "description": "Successfully created or updated the iSCSI server."
          },
          "202": {
            "description": "Accepted the request to create or update the iSCSI server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Creates or updates the iSCSI server.",
        "operationId": "IscsiServers_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISCSIServer"
              }
            }
          },
          "description": "The iSCSI server.",
          "required": true
        },
        "x-ms-examples": {
          "IscsiServersCreateOrUpdate": {
            "$ref": "./examples/IscsiServersCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/backup": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to backup the iSCSI server."
          },
          "204": {
            "description": "Successfully completed backup of the iSCSI server."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Backup the iSCSI server now.",
        "operationId": "IscsiServers_BackupNow",
        "x-ms-examples": {
          "IscsiServersBackupNow": {
            "$ref": "./examples/IscsiServersBackupNow.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIDiskList"
                }
              }
            },
            "description": "The collection of iSCSI disks."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Retrieves all the disks in a iSCSI server.",
        "operationId": "IscsiDisks_ListByIscsiServer",
        "x-ms-examples": {
          "IscsiDisksListByIscsiServer": {
            "$ref": "./examples/IscsiDisksListByIscsiServer.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}": {
      "delete": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The disk name.",
            "in": "path",
            "name": "diskName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the iSCSI disk."
          },
          "204": {
            "description": "Successfully deleted the iSCSI disk."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Deletes the iSCSI disk.",
        "operationId": "IscsiDisks_Delete",
        "x-ms-examples": {
          "IscsiDisksDelete": {
            "$ref": "./examples/IscsiDisksDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The disk name.",
            "in": "path",
            "name": "diskName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIDisk"
                }
              }
            },
            "description": "The iSCSI disk."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified iSCSI disk name.",
        "operationId": "IscsiDisks_Get",
        "x-ms-examples": {
          "IscsiDisksGet": {
            "$ref": "./examples/IscsiDisksGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The disk name.",
            "in": "path",
            "name": "diskName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIDisk"
                }
              }
            },
            "description": "Successfully created or updated the iSCSI disk."
          },
          "202": {
            "description": "Accepted the request to create or update the iSCSI disk."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Creates or updates the iSCSI disk.",
        "operationId": "IscsiDisks_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISCSIDisk"
              }
            }
          },
          "description": "The iSCSI disk.",
          "required": true
        },
        "x-ms-examples": {
          "IscsiDisksCreateOrUpdate": {
            "$ref": "./examples/IscsiDisksCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metrics": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI disk name.",
            "in": "path",
            "name": "diskName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Gets the iSCSI disk metrics",
        "operationId": "IscsiDisks_ListMetrics",
        "x-ms-examples": {
          "IscsiDisksListMetrics": {
            "$ref": "./examples/IscsiDisksListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/disks/{diskName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI disk name.",
            "in": "path",
            "name": "diskName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiDisks"
        ],
        "deprecated": false,
        "description": "Retrieves metric definitions for all metric aggregated at the iSCSI disk.",
        "operationId": "IscsiDisks_ListMetricDefinition",
        "x-ms-examples": {
          "IscsiDisksListMetricDefinition": {
            "$ref": "./examples/IscsiDisksListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metrics": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Gets the iSCSI server metrics",
        "operationId": "IscsiServers_ListMetrics",
        "x-ms-examples": {
          "IscsiServersListMetrics": {
            "$ref": "./examples/IscsiServersListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/iscsiservers/{iscsiServerName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The iSCSI server name.",
            "in": "path",
            "name": "iscsiServerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Retrieves metric definitions for all metrics aggregated at iSCSI server.",
        "operationId": "IscsiServers_ListMetricDefinition",
        "x-ms-examples": {
          "IscsiServersListMetricDefinition": {
            "$ref": "./examples/IscsiServersListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            },
            "description": "The collection of jobs."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Retrieves all the jobs in a device.",
        "operationId": "Jobs_ListByDevice",
        "x-ms-examples": {
          "JobsListByDevice": {
            "$ref": "./examples/JobsListByDevice.json"
          }
        },
        "x-ms-odata": "#/components/schemas/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/jobs/{jobName}": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The job name.",
            "in": "path",
            "name": "jobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            },
            "description": "The job."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified job name.",
        "operationId": "Jobs_Get",
        "x-ms-examples": {
          "JobsGet": {
            "$ref": "./examples/JobsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metrics": {
      "get": {
        "parameters": [
          {
            "description": "The name of the appliance.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Retrieves the device metrics.",
        "operationId": "Devices_ListMetrics",
        "x-ms-examples": {
          "DevicesListMetrics": {
            "$ref": "./examples/DevicesListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "description": "The name of the appliance.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Retrieves metric definition of all metrics aggregated at device.",
        "operationId": "Devices_ListMetricDefinition",
        "x-ms-examples": {
          "DevicesListMetricDefinition": {
            "$ref": "./examples/DevicesListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/networkSettings/default": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkSettings"
                }
              }
            },
            "description": "The network settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Returns the network settings of the specified device name.",
        "operationId": "Devices_GetNetworkSettings",
        "x-ms-examples": {
          "DevicesGetNetworkSettings": {
            "$ref": "./examples/DevicesGetNetworkSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/scanForUpdates": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to scan for updates."
          },
          "204": {
            "description": "Successfully scanned for updates."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Scans for updates on the device.",
        "operationId": "Devices_ScanForUpdates",
        "x-ms-examples": {
          "DevicesScanForUpdates": {
            "$ref": "./examples/DevicesScanForUpdates.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/securitySettings/default/update": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to create or update the security settings."
          },
          "204": {
            "description": "Successfully updated security settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Creates or updates the security settings.",
        "operationId": "Devices_CreateOrUpdateSecuritySettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SecuritySettings"
              }
            }
          },
          "description": "The security settings.",
          "required": true
        },
        "x-ms-examples": {
          "DevicesCreateOrUpdateSecuritySettings": {
            "$ref": "./examples/DevicesCreateOrUpdateSecuritySettings.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/sendTestAlertEmail": {
      "post": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully sent the test email."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Alerts"
        ],
        "deprecated": false,
        "description": "Sends a test alert email.",
        "operationId": "Alerts_SendTestEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestAlertEmailRequest"
              }
            }
          },
          "description": "The send test alert email request.",
          "required": true
        },
        "x-ms-examples": {
          "AlertsSendTestEmail": {
            "$ref": "./examples/AlertsSendTestEmail.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/shares": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileShareList"
                }
              }
            },
            "description": "The collection of file shares."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileShares"
        ],
        "deprecated": false,
        "description": "Retrieves all the file shares in a device.",
        "operationId": "FileShares_ListByDevice",
        "x-ms-examples": {
          "FileSharesListByDevice": {
            "$ref": "./examples/FileSharesListByDevice.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/timeSettings/default": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSettings"
                }
              }
            },
            "description": "The time settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Returns the time settings of the specified device name.",
        "operationId": "Devices_GetTimeSettings",
        "x-ms-examples": {
          "DevicesGetTimeSettings": {
            "$ref": "./examples/DevicesGetTimeSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/devices/{deviceName}/updateSummary/default": {
      "get": {
        "parameters": [
          {
            "description": "The device name.",
            "in": "path",
            "name": "deviceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Updates"
                }
              }
            },
            "description": "The update summary."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Devices"
        ],
        "deprecated": false,
        "description": "Returns the update summary of the specified device name.",
        "operationId": "Devices_GetUpdateSummary",
        "x-ms-examples": {
          "DevicesGetUpdateSummary": {
            "$ref": "./examples/DevicesGetUpdateSummary.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/encryptionSettings/default": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EncryptionSettings"
                }
              }
            },
            "description": "The encryption settings."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Returns the encryption settings of the manager.",
        "operationId": "Managers_GetEncryptionSettings",
        "x-ms-examples": {
          "ManagersGetEncryptionSettings": {
            "$ref": "./examples/ManagersGetEncryptionSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/extendedInformation/vaultExtendedInfo": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The extended information on the manager has been successfully deleted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Deletes the extended info of the manager.",
        "operationId": "Managers_DeleteExtendedInfo",
        "x-ms-examples": {
          "ManagersDeleteExtendedInfo": {
            "$ref": "./examples/ManagersDeleteExtendedInfo.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerExtendedInfo"
                }
              }
            },
            "description": "The manager extended information."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Returns the extended information of the specified manager name.",
        "operationId": "Managers_GetExtendedInfo",
        "x-ms-examples": {
          "ManagersGetExtendedInfo": {
            "$ref": "./examples/ManagersGetExtendedInfo.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "Pass the ETag of ExtendedInfo fetched from GET call",
            "in": "header",
            "name": "If-Match",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerExtendedInfo"
                }
              }
            },
            "description": "The extended information on the manager has been successfully created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Updates the extended info of the manager.",
        "operationId": "Managers_UpdateExtendedInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerExtendedInfo"
              }
            }
          },
          "description": "The manager extended information.",
          "required": true
        },
        "x-ms-examples": {
          "ManagersUpdateExtendedInfo": {
            "$ref": "./examples/ManagersUpdateExtendedInfo.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagerExtendedInfo"
                }
              }
            },
            "description": "The extended information on the manager has been successfully created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Creates the extended info of the manager.",
        "operationId": "Managers_CreateExtendedInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagerExtendedInfo"
              }
            }
          },
          "description": "The manager extended information.",
          "required": true
        },
        "x-ms-examples": {
          "ManagersCreateExtendedInfo": {
            "$ref": "./examples/ManagersCreateExtendedInfo.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/fileservers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileServerList"
                }
              }
            },
            "description": "The collection of file servers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "FileServers"
        ],
        "deprecated": false,
        "description": "Retrieves all the file servers in a manager.",
        "operationId": "FileServers_ListByManager",
        "x-ms-examples": {
          "FileServersListByManager": {
            "$ref": "./examples/FileServersListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/getEncryptionKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SymmetricEncryptedSecret"
                }
              }
            },
            "description": "The encryption key."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Returns the symmetric encryption key of the manager.",
        "operationId": "Managers_GetEncryptionKey",
        "x-ms-examples": {
          "ManagersGetEncryptionKey": {
            "$ref": "./examples/ManagersGetEncryptionKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/iscsiservers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISCSIServerList"
                }
              }
            },
            "description": "The collection of iSCSI servers."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "IscsiServers"
        ],
        "deprecated": false,
        "description": "Retrieves all the iSCSI servers in a manager.",
        "operationId": "IscsiServers_ListByManager",
        "x-ms-examples": {
          "IscsiServersListByManager": {
            "$ref": "./examples/IscsiServersListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/jobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            },
            "description": "The collection of jobs."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Jobs"
        ],
        "deprecated": false,
        "description": "Retrieves all the jobs in a manager.",
        "operationId": "Jobs_ListByManager",
        "x-ms-examples": {
          "JobsListByManager": {
            "$ref": "./examples/JobsListByManager.json"
          }
        },
        "x-ms-odata": "#/components/schemas/JobFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metrics": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "OData Filter options",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            },
            "description": "The collection of metrics."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Gets the  manager metrics",
        "operationId": "Managers_ListMetrics",
        "x-ms-examples": {
          "ManagersListMetrics": {
            "$ref": "./examples/ManagersListMetrics.json"
          }
        },
        "x-ms-odata": "#/components/schemas/MetricFilter",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/metricsDefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricDefinitionList"
                }
              }
            },
            "description": "The collection of metric definitions."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "Managers"
        ],
        "deprecated": false,
        "description": "Retrieves metric definition of all metrics aggregated at manager.",
        "operationId": "Managers_ListMetricDefinition",
        "x-ms-examples": {
          "ManagersListMetricDefinition": {
            "$ref": "./examples/ManagersListMetricDefinition.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageAccountCredentialList"
                }
              }
            },
            "description": "The collection of storage account credentials."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageAccountCredentials"
        ],
        "deprecated": false,
        "description": "Retrieves all the storage account credentials in a manager.",
        "operationId": "StorageAccountCredentials_ListByManager",
        "x-ms-examples": {
          "StorageAccountCredentialsListByManager": {
            "$ref": "./examples/StorageAccountCredentialsListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageAccountCredentials/{credentialName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the storage account credential.",
            "in": "path",
            "name": "credentialName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage account credential."
          },
          "204": {
            "description": "Successfully deleted the storage account credential."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageAccountCredentials"
        ],
        "deprecated": false,
        "description": "Deletes the storage account credential",
        "operationId": "StorageAccountCredentials_Delete",
        "x-ms-examples": {
          "StorageAccountCredentialsDelete": {
            "$ref": "./examples/StorageAccountCredentialsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of storage account credential to be fetched.",
            "in": "path",
            "name": "credentialName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageAccountCredential"
                }
              }
            },
            "description": "The storage account credential."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageAccountCredentials"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified storage account credential name.",
        "operationId": "StorageAccountCredentials_Get",
        "x-ms-examples": {
          "StorageAccountCredentialsGet": {
            "$ref": "./examples/StorageAccountCredentialsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The credential name.",
            "in": "path",
            "name": "credentialName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageAccountCredential"
                }
              }
            },
            "description": "Successfully created or updated the storage account credential."
          },
          "202": {
            "description": "Accepted the request to create or update the storage account credential."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageAccountCredentials"
        ],
        "deprecated": false,
        "description": "Creates or updates the storage account credential",
        "operationId": "StorageAccountCredentials_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageAccountCredential"
              }
            }
          },
          "description": "The storage account credential to be added or updated.",
          "required": true
        },
        "x-ms-examples": {
          "StorageAccountCredentialsCreateOrUpdate": {
            "$ref": "./examples/StorageAccountCredentialsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDomainList"
                }
              }
            },
            "description": "The collection of storage domains."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageDomains"
        ],
        "deprecated": false,
        "description": "Retrieves all the storage domains in a manager.",
        "operationId": "StorageDomains_ListByManager",
        "x-ms-examples": {
          "StorageDomainsListByManager": {
            "$ref": "./examples/StorageDomainsListByManager.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.StorSimple/managers/{managerName}/storageDomains/{storageDomainName}": {
      "delete": {
        "parameters": [
          {
            "description": "The storage domain name.",
            "in": "path",
            "name": "storageDomainName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted the request to delete the storage domain."
          },
          "204": {
            "description": "Successfully deleted the storage domain."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageDomains"
        ],
        "deprecated": false,
        "description": "Deletes the storage domain.",
        "operationId": "StorageDomains_Delete",
        "x-ms-examples": {
          "StorageDomainsDelete": {
            "$ref": "./examples/StorageDomainsDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The storage domain name.",
            "in": "path",
            "name": "storageDomainName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDomain"
                }
              }
            },
            "description": "The storage domain."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageDomains"
        ],
        "deprecated": false,
        "description": "Returns the properties of the specified storage domain name.",
        "operationId": "StorageDomains_Get",
        "x-ms-examples": {
          "StorageDomainsGet": {
            "$ref": "./examples/StorageDomainsGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The storage domain name.",
            "in": "path",
            "name": "storageDomainName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/managerNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageDomain"
                }
              }
            },
            "description": "Successfully created or updated the storage domain."
          },
          "202": {
            "description": "Accepted the request to create or update the storage domain."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Default Response. It will be deserialized as per the Error definition specified in the schema. Exception will be thrown."
          }
        },
        "tags": [
          "StorageDomains"
        ],
        "deprecated": false,
        "description": "Creates or updates the storage domain.",
        "operationId": "StorageDomains_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageDomain"
              }
            }
          },
          "description": "The storageDomain.",
          "required": true
        },
        "x-ms-examples": {
          "StorageDomainsCreateOrUpdate": {
            "$ref": "./examples/StorageDomainsCreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "The api version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "managerNameParameter": {
        "description": "The manager name",
        "in": "path",
        "name": "managerName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 2,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "The resource group name",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "The subscription id",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "ManagerExtendedInfo": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ManagerExtendedInfo"
            }
          }
        },
        "description": "The manager extended information.",
        "required": true
      }
    },
    "schemas": {
      "AccessControlRecord": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The access control record",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AccessControlRecordProperties",
            "description": "Properties of AccessControlRecord",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AccessControlRecordList": {
        "description": "Collection of AccessControlRecords",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/AccessControlRecord"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AccessControlRecordProperties": {
        "description": "Properties of access control record",
        "properties": {
          "initiatorName": {
            "description": "The Iscsi initiator name (IQN)",
            "type": "string"
          }
        },
        "required": [
          "initiatorName"
        ],
        "type": "object"
      },
      "Alert": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "Alert class",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AlertProperties",
            "description": "Properties of alert",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AlertErrorDetails": {
        "description": "Error details for the alert",
        "properties": {
          "errorCode": {
            "description": "Error code.",
            "type": "string"
          },
          "errorMessage": {
            "description": "Error Message",
            "type": "string"
          },
          "occurences": {
            "description": "Number of occurrences.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AlertFilter": {
        "description": "Filters that can be specified on the alert",
        "properties": {
          "appearedOnTime": {
            "description": "UTC time on which the alert appeared",
            "format": "date-time",
            "type": "string"
          },
          "severity": {
            "description": "Severity of the alert",
            "enum": [
              "Informational",
              "Warning",
              "Critical"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertSeverity"
            }
          },
          "sourceName": {
            "description": "Source name of the alert",
            "type": "string"
          },
          "sourceType": {
            "description": "Source of the alert",
            "enum": [
              "Resource",
              "Device"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertSourceType"
            }
          },
          "status": {
            "description": "Status of the alert",
            "enum": [
              "Active",
              "Cleared"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertStatus"
            }
          }
        },
        "type": "object"
      },
      "AlertList": {
        "description": "Collection of Alerts",
        "properties": {
          "nextLink": {
            "description": "Id of the next page of alerts",
            "type": "string"
          },
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AlertProperties": {
        "description": "Properties of alert",
        "properties": {
          "alertType": {
            "description": "Type of the alert",
            "type": "string"
          },
          "appearedAtSourceTime": {
            "description": "UTC time at which the alert appeared on the source",
            "format": "date-time",
            "type": "string"
          },
          "appearedAtTime": {
            "description": "UTC time at which the alert appeared",
            "format": "date-time",
            "type": "string"
          },
          "clearedAtSourceTime": {
            "description": "UTC time at which the alert was cleared on the source",
            "format": "date-time",
            "type": "string"
          },
          "clearedAtTime": {
            "description": "UTC time at which the alert got cleared",
            "format": "date-time",
            "type": "string"
          },
          "detailedInformation": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Other information about the alert",
            "type": "object"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/AlertErrorDetails",
            "description": "ErrorDetails of the alert"
          },
          "recommendation": {
            "description": "Recommendation for acting on the alert",
            "type": "string"
          },
          "resolutionReason": {
            "description": "Reason for resolving the alert",
            "type": "string"
          },
          "scope": {
            "description": "Device or Resource alert",
            "enum": [
              "Resource",
              "Device"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertScope"
            }
          },
          "severity": {
            "description": "Severity of the alert",
            "enum": [
              "Informational",
              "Warning",
              "Critical"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertSeverity"
            }
          },
          "source": {
            "$ref": "#/components/schemas/AlertSource",
            "description": "Source at which the alert was cleared"
          },
          "status": {
            "description": "Current status of the alert",
            "enum": [
              "Active",
              "Cleared"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertStatus"
            }
          },
          "title": {
            "description": "Title of the alert",
            "type": "string"
          }
        },
        "required": [
          "title",
          "scope",
          "alertType",
          "appearedAtTime",
          "appearedAtSourceTime",
          "source",
          "severity",
          "status"
        ],
        "type": "object"
      },
      "AlertSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "AlertSettings on the device which represents how alerts will be processed",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AlertSettingsProperties",
            "description": "Properties of AlertSettings",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AlertSettingsProperties": {
        "description": "Class containing the properties of AlertSettings",
        "properties": {
          "additionalRecipientEmailList": {
            "description": "List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "alertNotificationCulture": {
            "description": "Culture setting to be used while building alert emails. For eg: \"en-US\"",
            "type": "string"
          },
          "emailNotification": {
            "description": "Value indicating whether user/admins will receive emails when an alert condition occurs on the system",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertEmailNotificationStatus"
            }
          },
          "notificationToServiceOwners": {
            "description": "Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ServiceOwnersAlertNotificationStatus"
            }
          }
        },
        "required": [
          "emailNotification",
          "notificationToServiceOwners",
          "alertNotificationCulture"
        ],
        "type": "object"
      },
      "AlertSource": {
        "description": "source at which the alert can be raised",
        "properties": {
          "alertSourceType": {
            "description": "Source type of the alert.",
            "enum": [
              "Resource",
              "Device"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AlertSourceType"
            }
          },
          "name": {
            "description": "Name of the source.",
            "type": "string"
          },
          "timeZone": {
            "description": "The time zone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsymmetricEncryptedSecret": {
        "description": "This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "properties": {
          "encryptionAlgorithm": {
            "description": "Algorithm used to encrypt \"Value\"",
            "enum": [
              "None",
              "AES256",
              "RSAES_PKCS1_v_1_5"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "EncryptionAlgorithm"
            }
          },
          "encryptionCertificateThumbprint": {
            "description": "Thumbprint certificate that was used to encrypt \"Value\"",
            "type": "string"
          },
          "value": {
            "description": "The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.",
            "type": "string"
          }
        },
        "required": [
          "value",
          "encryptionAlgorithm"
        ],
        "type": "object"
      },
      "AvailableProviderOperation": {
        "description": "Class represents provider operation",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/AvailableProviderOperationDisplay",
            "description": "Gets or sets Display information\r\nContains the localized display information for this particular operation/action"
          },
          "name": {
            "description": "Gets or sets the name of the operation being performed on this particular object\r\nReturn value format: \"{resourceProviderNamespace}/{resourceType}/{read|write|deletion|action}\"\r\nEg: Microsoft.StorSimple/managers/devices/fileServers/read\r\n    Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action",
            "type": "string"
          },
          "origin": {
            "description": "Gets or sets Origin\r\nThe intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.\r\nDefault value is \u201cuser,system\u201d",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AvailableProviderOperationProperties",
            "description": "Gets or sets Properties\r\nReserved for future use",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AvailableProviderOperationDisplay": {
        "description": "Contains the localized display information for this particular operation / action. \r\nThese value will be used by several clients for \r\n(1) custom role definitions for RBAC; \r\n(2) complex query filters for the event service; and (3) audit history / records for management operations.",
        "properties": {
          "description": {
            "description": "Gets or sets Description\r\nThe localized friendly description for the operation, as it should be shown to the user. \r\nIt should be thorough, yet concise \u2013 it will be used in tool tips and detailed views.",
            "type": "string"
          },
          "operation": {
            "description": "Gets or sets Operation\r\nThe localized friendly name for the operation, as it should be shown to the user. \r\nIt should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing and include the entity/resource to which it applies.",
            "type": "string"
          },
          "provider": {
            "description": "Gets or sets Provider\r\nThe localized friendly form of the resource provider name \u2013 it is expected to also include the publisher/company responsible. \r\nIt should use Title Casing and begin with \u201cMicrosoft\u201d for 1st party services.",
            "type": "string"
          },
          "resource": {
            "description": "Gets or sets Resource\r\nThe localized friendly form of the resource type related to this action/operation \u2013 it should match the public documentation for the resource provider. \r\nIt should use Title Casing \u2013 for examples, please refer to the \u201cname\u201d section.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AvailableProviderOperationProperties": {
        "description": "Class represents Properties in AvailableProviderOperations",
        "properties": {},
        "type": "object"
      },
      "AvailableProviderOperations": {
        "description": "Class for set of operations used for discovery of available provider operations.",
        "properties": {
          "nextLink": {
            "description": "The NextLink.",
            "type": "string"
          },
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/AvailableProviderOperation"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Backup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The backup.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupProperties",
            "description": "Properties of backup",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "BackupElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "Class represents BackupElement",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupElementProperties",
            "description": "The Properties of backup element",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "BackupElementProperties": {
        "description": "The backup element properties",
        "properties": {
          "dataPolicy": {
            "description": "The data policy of backed up endpoint.",
            "enum": [
              "Invalid",
              "Local",
              "Tiered",
              "Cloud"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataPolicy"
            }
          },
          "endpointName": {
            "description": "The name of the endpoint.",
            "type": "string"
          },
          "sizeInBytes": {
            "description": "The size in bytes.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "sizeInBytes",
          "endpointName",
          "dataPolicy"
        ],
        "type": "object"
      },
      "BackupFilter": {
        "description": "Backup OData filter class",
        "properties": {
          "createdTime": {
            "description": "Gets or sets CreatedTime",
            "format": "date-time",
            "type": "string"
          },
          "initiatedBy": {
            "description": "Gets or sets InitiatedBy",
            "enum": [
              "Manual",
              "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "InitiatedBy"
            }
          }
        },
        "type": "object"
      },
      "BackupList": {
        "description": "Collection of backups",
        "properties": {
          "nextLink": {
            "description": "The NextLink.",
            "type": "string"
          },
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/Backup"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "BackupProperties": {
        "description": "Class represents Backup properties",
        "properties": {
          "createdTime": {
            "description": "The time when the backup was created.",
            "format": "date-time",
            "type": "string"
          },
          "deviceId": {
            "description": "The Device Identifier.",
            "type": "string"
          },
          "elements": {
            "description": "The backup elements.",
            "items": {
              "$ref": "#/components/schemas/BackupElement"
            },
            "type": "array"
          },
          "expirationTime": {
            "description": "The time when the backup will expire.",
            "format": "date-time",
            "type": "string"
          },
          "initiatedBy": {
            "description": "Indicates how the backup was initiated \"Manual | Scheduled\".",
            "enum": [
              "Manual",
              "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "InitiatedBy"
            }
          },
          "sizeInBytes": {
            "description": "The backup size in bytes.",
            "format": "int64",
            "type": "integer"
          },
          "targetId": {
            "description": "The path id of the target FileServer or IscsiServer for which the backup was taken.",
            "type": "string"
          },
          "targetType": {
            "description": "Type of target, FileServer or IscsiServer",
            "type": "string"
          }
        },
        "required": [
          "sizeInBytes",
          "initiatedBy",
          "deviceId",
          "elements"
        ],
        "type": "object"
      },
      "BackupScheduleGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The Backup Schedule Group",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupScheduleGroupProperties",
            "description": "Properties of BackupScheduleGroup",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "BackupScheduleGroupList": {
        "description": "The list response of backup schedule groups",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/BackupScheduleGroup"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "BackupScheduleGroupProperties": {
        "description": "The Backup Schedule Group Properties",
        "properties": {
          "startTime": {
            "$ref": "#/components/schemas/Time",
            "description": "The start time. When this field is specified we will generate Default GrandFather Father Son Backup Schedules."
          }
        },
        "required": [
          "startTime"
        ],
        "type": "object"
      },
      "BaseModel": {
        "description": "Base class for models",
        "properties": {
          "id": {
            "description": "The identifier.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChapProperties": {
        "description": "Chap properties",
        "properties": {
          "password": {
            "$ref": "#/components/schemas/AsymmetricEncryptedSecret",
            "description": "The chap password."
          }
        },
        "required": [
          "password"
        ],
        "type": "object"
      },
      "ChapSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "Challenge-Handshake Authentication Protocol (CHAP) setting",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ChapProperties",
            "description": "Chap properties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ChapSettingsList": {
        "description": "Collection of Chap setting entities",
        "properties": {
          "value": {
            "description": "The chap settings entity collection",
            "items": {
              "$ref": "#/components/schemas/ChapSettings"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ClearAlertRequest": {
        "description": "Request for clearing the alert",
        "properties": {
          "alerts": {
            "description": "List of alert Ids to be cleared",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "resolutionMessage": {
            "description": "Resolution message while clearing the request",
            "type": "string"
          }
        },
        "required": [
          "alerts"
        ],
        "type": "object"
      },
      "CloneRequest": {
        "description": "Clone Job Request Model.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CloneRequestProperties",
            "description": "CloneJob Properties are encapsulated in this object.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "CloneRequestProperties": {
        "description": "Properties of CloneRequest",
        "properties": {
          "disk": {
            "$ref": "#/components/schemas/ISCSIDisk",
            "description": "Disk Object"
          },
          "newEndpointName": {
            "description": "Name of new endpoint which will created as part of clone job.",
            "type": "string"
          },
          "share": {
            "$ref": "#/components/schemas/FileShare",
            "description": "Share Object."
          },
          "targetAccessPointId": {
            "description": "Access point Id on which clone job will performed.",
            "type": "string"
          },
          "targetDeviceId": {
            "description": "DeviceId of the device which will act as the Clone target",
            "type": "string"
          }
        },
        "required": [
          "targetDeviceId",
          "targetAccessPointId",
          "newEndpointName"
        ],
        "type": "object"
      },
      "Device": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "Represents a StorSimple device object along with its properties",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DeviceProperties",
            "description": "Collection of properties for the device",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DeviceDetails": {
        "description": "Class containing more granular details about the device",
        "properties": {
          "availableLocalStorageInBytes": {
            "description": "Local pending storage available on the device in bytes",
            "format": "int64",
            "type": "integer"
          },
          "availableStorageInBytes": {
            "description": "Total pending available storage on the device in bytes",
            "format": "int64",
            "type": "integer"
          },
          "endpointCount": {
            "description": "Total number of endpoints that are currently on the device ( i.e. number of shares on FileServer or number of volumes on IscsiServer)",
            "format": "int32",
            "type": "integer"
          },
          "provisionedLocalStorageInBytes": {
            "description": "Storage in bytes that has been provisioned locally on the device",
            "format": "int64",
            "type": "integer"
          },
          "provisionedStorageInBytes": {
            "description": "Storage in bytes that has been provisioned on the device including both local and cloud",
            "format": "int64",
            "type": "integer"
          },
          "totalBackupSizeInBytes": {
            "description": "Total size taken up by backups in bytes",
            "format": "int64",
            "type": "integer"
          },
          "totalLocalStorageInBytes": {
            "description": "Total local storage capacity in device in bytes.",
            "format": "int64",
            "type": "integer"
          },
          "totalStorageInBytes": {
            "description": "Total storage available on the device in bytes.",
            "format": "int64",
            "type": "integer"
          },
          "usingLocalStorageInBytes": {
            "description": "Local Storage that is being currently used in bytes",
            "format": "int64",
            "type": "integer"
          },
          "usingStorageInBytes": {
            "description": "Storage that is being currently used in bytes including both local and cloud",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DeviceList": {
        "description": "Collection of Devices",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/Device"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DevicePatch": {
        "description": "Class that represents the Input for the PATCH call on Device. Currently the only patchable property on device is \"DeviceDescription\"",
        "properties": {
          "deviceDescription": {
            "description": "Short description given for the device",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DeviceProperties": {
        "description": "Encases all the properties of the Device",
        "properties": {
          "activationTime": {
            "description": "The UTC time at which the device was activated",
            "format": "date-time",
            "type": "string"
          },
          "allowedDeviceOperations": {
            "description": "Operations that are allowed on the device based on its current state",
            "items": {
              "enum": [
                "None",
                "Delete",
                "DeleteWithWarning",
                "DRSource",
                "DRTarget",
                "Browsable",
                "ReadOnlyForDR",
                "Deactivate"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DeviceOperation"
              }
            },
            "type": "array"
          },
          "culture": {
            "description": "Language culture setting on the device. For eg: \"en-US\"",
            "type": "string"
          },
          "details": {
            "$ref": "#/components/schemas/DeviceDetails",
            "description": "subclass containing more storage-related information about the device. This field will be populated only if the get call is made with $expand = details."
          },
          "deviceCapabilities": {
            "description": "Device can be configured either as FileServer or IscsiServer",
            "items": {
              "enum": [
                "Invalid",
                "FileServer",
                "IscsiServer"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "SupportedDeviceCapabilities"
              }
            },
            "type": "array"
          },
          "deviceConfigurationStatus": {
            "description": "\"Complete\" if the device has been successfully registered as File/IscsiServer and the creation of share/volume is complete, \"Pending\" if the device is only registered but the creation of share/volume is complete is still pending",
            "enum": [
              "Complete",
              "Pending"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeviceConfigurationStatus"
            }
          },
          "deviceDescription": {
            "description": "Short description given for the device",
            "type": "string"
          },
          "deviceSoftwareVersion": {
            "description": "Version number of the software running on the device",
            "type": "string"
          },
          "domainName": {
            "description": "Fully qualified name of the domain to which the device is attached",
            "type": "string"
          },
          "friendlySoftwareName": {
            "description": "Friendly name for the software version",
            "type": "string"
          },
          "modelDescription": {
            "description": "Name of the device model",
            "type": "string"
          },
          "status": {
            "description": "Current status of the device",
            "enum": [
              "Unknown",
              "Online",
              "Offline",
              "RequiresAttention",
              "MaintenanceMode",
              "Creating",
              "Provisioning",
              "Deleted",
              "ReadyToSetup",
              "Deactivated",
              "Deactivating"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeviceStatus"
            }
          },
          "type": {
            "description": "Type of the device",
            "enum": [
              "Invalid",
              "Appliance",
              "VirtualAppliance",
              "Series9000OnPremVirtualAppliance",
              "Series9000VirtualAppliance",
              "Series9000PhysicalAppliance"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeviceType"
            }
          }
        },
        "type": "object"
      },
      "EncryptionSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The EncryptionSettings",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EncryptionSettingsProperties",
            "description": "Properties of the EncryptionSettings.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "EncryptionSettingsProperties": {
        "description": "The properties of EncryptionSettings",
        "properties": {
          "encryptionStatus": {
            "description": "The encryption status which indicates if encryption is enabled or not.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "EncryptionStatus"
            }
          },
          "keyRolloverStatus": {
            "description": "The key rollover status which indicates if key rollover is required or not. If secrets encryption has been upgraded, then it requires key rollover.",
            "enum": [
              "Required",
              "NotRequired"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "KeyRolloverStatus"
            }
          }
        },
        "required": [
          "encryptionStatus",
          "keyRolloverStatus"
        ],
        "type": "object"
      },
      "Error": {
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/Message"
          },
          "values": {
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "type": "array",
            "x-ms-identifiers": [
              "key"
            ]
          }
        },
        "required": [
          "errorCode",
          "message"
        ],
        "type": "object"
      },
      "FailoverRequest": {
        "description": "The Failover request object.",
        "properties": {
          "accesspointIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "keepSourceDevice": {
            "type": "boolean"
          },
          "skipValidation": {
            "type": "boolean"
          },
          "targetDeviceId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The file server.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FileServerProperties",
            "description": "The properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "FileServerList": {
        "description": "Collection of file servers",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/FileServer"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "FileServerProperties": {
        "description": "The file server properties.",
        "properties": {
          "backupScheduleGroupId": {
            "description": "The backup policy id.",
            "type": "string"
          },
          "description": {
            "description": "The description of the file server",
            "type": "string"
          },
          "domainName": {
            "description": "Domain of the file server",
            "type": "string"
          },
          "storageDomainId": {
            "description": "The storage domain id.",
            "type": "string"
          }
        },
        "required": [
          "domainName",
          "storageDomainId",
          "backupScheduleGroupId"
        ],
        "type": "object"
      },
      "FileShare": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The File Share.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FileShareProperties",
            "description": "The properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "FileShareList": {
        "description": "Collection of file shares",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/FileShare"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "FileShareProperties": {
        "description": "The File Share.",
        "properties": {
          "adminUser": {
            "description": "The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\\xyz.",
            "type": "string"
          },
          "dataPolicy": {
            "description": "The data policy",
            "enum": [
              "Invalid",
              "Local",
              "Tiered",
              "Cloud"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataPolicy"
            }
          },
          "description": {
            "description": "Description for file share",
            "type": "string"
          },
          "localUsedCapacityInBytes": {
            "description": "The local used capacity in Bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "monitoringStatus": {
            "description": "The monitoring status",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitoringStatus"
            }
          },
          "provisionedCapacityInBytes": {
            "description": "The total provisioned capacity in Bytes",
            "format": "int64",
            "type": "integer"
          },
          "shareStatus": {
            "description": "The Share Status",
            "enum": [
              "Online",
              "Offline"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ShareStatus"
            }
          },
          "usedCapacityInBytes": {
            "description": "The used capacity in Bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "shareStatus",
          "dataPolicy",
          "adminUser",
          "provisionedCapacityInBytes",
          "monitoringStatus"
        ],
        "type": "object"
      },
      "IPConfig": {
        "description": "Details related to the IP address configuration",
        "properties": {
          "gateway": {
            "description": "The gateway of the network adapter.",
            "type": "string"
          },
          "ipAddress": {
            "description": "The IP address of the network adapter, either ipv4 or ipv6.",
            "type": "string"
          },
          "prefixLength": {
            "description": "The prefix length of the network adapter.",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "ipAddress",
          "gateway"
        ],
        "type": "object"
      },
      "ISCSIDisk": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The iSCSI disk.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ISCSIDiskProperties",
            "description": "The properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ISCSIDiskList": {
        "description": "Collection of Iscsi disk",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/ISCSIDisk"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ISCSIDiskProperties": {
        "description": "The iSCSI disk properties.",
        "properties": {
          "accessControlRecords": {
            "description": "The access control records.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataPolicy": {
            "description": "The data policy.",
            "enum": [
              "Invalid",
              "Local",
              "Tiered",
              "Cloud"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DataPolicy"
            }
          },
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "diskStatus": {
            "description": "The disk status.",
            "enum": [
              "Online",
              "Offline"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DiskStatus"
            }
          },
          "localUsedCapacityInBytes": {
            "description": "The local used capacity in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "monitoringStatus": {
            "description": "The monitoring.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonitoringStatus"
            }
          },
          "provisionedCapacityInBytes": {
            "description": "The provisioned capacity in bytes.",
            "format": "int64",
            "type": "integer"
          },
          "usedCapacityInBytes": {
            "description": "The used capacity in bytes.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          }
        },
        "required": [
          "diskStatus",
          "accessControlRecords",
          "dataPolicy",
          "provisionedCapacityInBytes",
          "monitoringStatus"
        ],
        "type": "object"
      },
      "ISCSIServer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The iSCSI server.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ISCSIServerProperties",
            "description": "The properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ISCSIServerList": {
        "description": "Collection of Iscsi servers",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/ISCSIServer"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ISCSIServerProperties": {
        "description": "The iSCSI server properties.",
        "properties": {
          "backupScheduleGroupId": {
            "description": "The backup policy id.",
            "type": "string"
          },
          "chapId": {
            "description": "The chap id.",
            "type": "string"
          },
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "reverseChapId": {
            "description": "The reverse chap id.",
            "type": "string"
          },
          "storageDomainId": {
            "description": "The storage domain id.",
            "type": "string"
          }
        },
        "required": [
          "storageDomainId",
          "backupScheduleGroupId"
        ],
        "type": "object"
      },
      "Item": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "key",
          "value"
        ],
        "type": "object"
      },
      "Job": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The Job.",
        "properties": {
          "endTime": {
            "description": "The UTC time at which the job completed",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/JobErrorDetails",
            "description": "The Error details."
          },
          "percentComplete": {
            "description": "The percentage of the job that is already complete",
            "format": "int32",
            "type": "integer"
          },
          "properties": {
            "$ref": "#/components/schemas/JobProperties",
            "description": "Other properties of the job",
            "x-ms-client-flatten": true
          },
          "startTime": {
            "description": "The UTC time at which the job was started",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Current status of the job",
            "enum": [
              "Invalid",
              "Running",
              "Succeeded",
              "Failed",
              "Canceled",
              "Paused",
              "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobStatus"
            }
          }
        },
        "required": [
          "status",
          "percentComplete"
        ],
        "type": "object"
      },
      "JobErrorDetails": {
        "description": "The job error information containing List of JobErrorItem.",
        "properties": {
          "code": {
            "description": "The code intended for programmatic access",
            "type": "string"
          },
          "errorDetails": {
            "description": "The error details.",
            "items": {
              "$ref": "#/components/schemas/JobErrorItem"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "message": {
            "description": "The message intended to describe the error in detail",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "JobErrorItem": {
        "description": "The job error items.",
        "properties": {
          "code": {
            "description": "The code intended for programmatic access",
            "type": "string"
          },
          "message": {
            "description": "The message intended to describe the error in detail",
            "type": "string"
          },
          "recommendations": {
            "description": "The recommended actions.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "JobFilter": {
        "description": "Filters that can be specified for the job",
        "properties": {
          "jobType": {
            "description": "The job type.",
            "enum": [
              "Backup",
              "Clone",
              "Failover",
              "DownloadUpdates",
              "InstallUpdates"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobType"
            }
          },
          "startTime": {
            "description": "The start time of the job.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "The job status.",
            "enum": [
              "Invalid",
              "Running",
              "Succeeded",
              "Failed",
              "Canceled",
              "Paused",
              "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobStatus"
            }
          }
        },
        "required": [
          "jobType",
          "status"
        ],
        "type": "object"
      },
      "JobList": {
        "description": "Collection of jobs",
        "properties": {
          "nextLink": {
            "description": "The NextLink.",
            "type": "string"
          },
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "JobProperties": {
        "description": "properties for the job",
        "properties": {
          "backupPointInTime": {
            "description": "The time of the backup used for the failover.",
            "format": "date-time",
            "type": "string"
          },
          "deviceId": {
            "description": "The device id in which the job is currently running",
            "type": "string"
          },
          "downloadProgress": {
            "$ref": "#/components/schemas/UpdateDownloadProgress",
            "description": "The download progress."
          },
          "entityId": {
            "description": "The entity identifier for which the job ran.",
            "type": "string"
          },
          "entityType": {
            "description": "The entity type for which the job ran.",
            "type": "string"
          },
          "installProgress": {
            "$ref": "#/components/schemas/UpdateInstallProgress",
            "description": "The install progress."
          },
          "isCancellable": {
            "description": "Represents whether the job is cancellable or not",
            "type": "boolean"
          },
          "jobStages": {
            "description": "The job stages.",
            "items": {
              "$ref": "#/components/schemas/JobStage"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "jobType": {
            "description": "Type of the job",
            "enum": [
              "Backup",
              "Clone",
              "Failover",
              "DownloadUpdates",
              "InstallUpdates"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobType"
            }
          },
          "sourceDeviceId": {
            "description": "The source device identifier of the failover job.",
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/JobStats",
            "description": "stats properties for the job"
          },
          "targetId": {
            "description": "Id of the object that is created by the job",
            "type": "string"
          },
          "targetType": {
            "description": "The target type of the backup.",
            "enum": [
              "FileServer",
              "DiskServer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "TargetType"
            }
          }
        },
        "required": [
          "jobType"
        ],
        "type": "object"
      },
      "JobStage": {
        "description": "Contains details about the multiple job stages of a job",
        "properties": {
          "detail": {
            "description": "The details of the stage.",
            "type": "string"
          },
          "errorCode": {
            "description": "The error code of the stage if any.",
            "type": "string"
          },
          "message": {
            "description": "The message of the job stage.",
            "type": "string"
          },
          "stageStatus": {
            "description": "The stage status.",
            "enum": [
              "Invalid",
              "Running",
              "Succeeded",
              "Failed",
              "Canceled",
              "Paused",
              "Scheduled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobStatus"
            }
          }
        },
        "required": [
          "stageStatus"
        ],
        "type": "object"
      },
      "JobStats": {
        "description": "Stats that are available for all jobs in common",
        "properties": {
          "completedWorkItemCount": {
            "description": "Completed work item count.",
            "format": "int32",
            "type": "integer"
          },
          "estimatedTimeRemaining": {
            "description": "The estimated time remaining.",
            "format": "int32",
            "type": "integer"
          },
          "totalWorkItemCount": {
            "description": "Total work item count.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Manager": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The StorSimple Manager",
        "properties": {
          "etag": {
            "description": "ETag of the Manager",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ManagerProperties",
            "description": "List of properties of the Manager",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ManagerExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The extended info of the manager.",
        "properties": {
          "etag": {
            "description": "ETag of the Resource",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ManagerExtendedInfoProperties",
            "description": "The extended info properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ManagerExtendedInfoProperties": {
        "description": "Properties of the ManagerExtendedInfo",
        "properties": {
          "algorithm": {
            "description": "Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used",
            "type": "string"
          },
          "encryptionKey": {
            "description": "Represents the CEK of the resource",
            "type": "string"
          },
          "encryptionKeyThumbprint": {
            "description": "Represents the Cert thumbprint that was used to encrypt the CEK",
            "type": "string"
          },
          "integrityKey": {
            "description": "Represents the CIK of the resource",
            "type": "string"
          },
          "portalCertificateThumbprint": {
            "description": "Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.",
            "type": "string"
          },
          "version": {
            "description": "Represents the version of the ExtendedInfo object being persisted",
            "type": "string"
          }
        },
        "required": [
          "integrityKey",
          "algorithm"
        ],
        "type": "object"
      },
      "ManagerIntrinsicSettings": {
        "description": "Intrinsic settings which refers to the type of the StorSimple manager",
        "properties": {
          "type": {
            "description": "Refers to the type of the StorSimple Manager",
            "enum": [
              "GardaV1",
              "HelsinkiV1"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ManagerType"
            }
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "ManagerList": {
        "description": "List of StorSimple Managers under a particular resourceGroup",
        "properties": {
          "value": {
            "description": "List of Managers",
            "items": {
              "$ref": "#/components/schemas/Manager"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ManagerPatch": {
        "description": "The StorSimple Manager patch.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags attached to the StorSimple Manager.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ManagerProperties": {
        "description": "The properties of the Manager",
        "properties": {
          "cisIntrinsicSettings": {
            "$ref": "#/components/schemas/ManagerIntrinsicSettings",
            "description": "Specifies if the Manager is Garda or Helsinki"
          },
          "provisioningState": {
            "description": "Specifies the state of the resource as it is getting provisioned. Value of \"Succeeded\" means the Manager was successfully created",
            "readOnly": true,
            "type": "string"
          },
          "sku": {
            "$ref": "#/components/schemas/ManagerSku",
            "description": "Specifies the Sku"
          }
        },
        "type": "object"
      },
      "ManagerSku": {
        "description": "The Sku.",
        "properties": {
          "name": {
            "description": "Refers to the sku name which should be \"Standard\"",
            "enum": [
              "Standard"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ManagerSkuType"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Message": {
        "properties": {
          "language": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricAvailablity": {
        "description": "Metric availability specifies the time grain (aggregation interval or frequency) and the retention period for that time grain",
        "properties": {
          "retention": {
            "description": "The retention period for the metric at the specified timegrain",
            "type": "string"
          },
          "timeGrain": {
            "description": "The time grain, specifies the aggregation interval for the metric.",
            "type": "string"
          }
        },
        "required": [
          "timeGrain",
          "retention"
        ],
        "type": "object"
      },
      "MetricData": {
        "description": "The metric data.",
        "properties": {
          "average": {
            "description": "The average of all sample for the given instance",
            "format": "double",
            "type": "number"
          },
          "count": {
            "description": "The count of samples of the metric data available for the given instance",
            "format": "int32",
            "type": "integer"
          },
          "maximum": {
            "description": "The maximum of all samples available",
            "format": "double",
            "type": "number"
          },
          "minimum": {
            "description": "The minimum of all samples available",
            "format": "double",
            "type": "number"
          },
          "sum": {
            "description": "The sum of all the samples available in the given instance of time for the specific metric data",
            "format": "double",
            "type": "number"
          },
          "timeStamp": {
            "description": "The time when the metric data is fetched",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "timeStamp",
          "sum",
          "count",
          "average",
          "minimum",
          "maximum"
        ],
        "type": "object"
      },
      "MetricDefinition": {
        "description": "Monitoring metric definition represents the metadata of the metrics.",
        "properties": {
          "dimensions": {
            "description": "The supported dimensions",
            "items": {
              "$ref": "#/components/schemas/MetricDimension"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "metricAvailabilities": {
            "description": "The available metric granularities",
            "items": {
              "$ref": "#/components/schemas/MetricAvailablity"
            },
            "type": "array",
            "x-ms-identifiers": [
              "timeGrain"
            ]
          },
          "name": {
            "$ref": "#/components/schemas/MetricName",
            "description": "The metric name"
          },
          "primaryAggregationType": {
            "description": "The metric aggregation type",
            "enum": [
              "Average",
              "Last",
              "Maximum",
              "Minimum",
              "None",
              "Total"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MetricAggregationType"
            }
          },
          "resourceId": {
            "description": "The metric source id",
            "type": "string"
          },
          "type": {
            "description": "The metric definition type",
            "type": "string"
          },
          "unit": {
            "description": "The metric unit",
            "enum": [
              "Bytes",
              "BytesPerSecond",
              "Count",
              "CountPerSecond",
              "Percent",
              "Seconds"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MetricUnit"
            }
          }
        },
        "required": [
          "name",
          "unit",
          "primaryAggregationType",
          "resourceId",
          "metricAvailabilities",
          "dimensions",
          "type"
        ],
        "type": "object"
      },
      "MetricDefinitionList": {
        "description": "List of metric definition",
        "properties": {
          "value": {
            "description": "The list of metric definition",
            "items": {
              "$ref": "#/components/schemas/MetricDefinition"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "MetricDimension": {
        "description": "Metric dimension",
        "properties": {
          "name": {
            "description": "Metric dimension name",
            "type": "string"
          },
          "value": {
            "description": "Metric dimension values",
            "type": "string"
          }
        },
        "required": [
          "name",
          "value"
        ],
        "type": "object"
      },
      "MetricFilter": {
        "description": "class representing the filters to be passed while fetching metrics",
        "properties": {
          "endTime": {
            "description": "endtime for fetching metrics",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/MetricNameFilter",
            "description": "filter for name property"
          },
          "startTime": {
            "description": "starttime for fetching metrics",
            "format": "date-time",
            "type": "string"
          },
          "timeGrain": {
            "description": "timegrain of the metrics",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetricList": {
        "description": "Collection of metrics",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/Metrics"
            },
            "type": "array",
            "x-ms-identifiers": []
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "MetricName": {
        "description": "The name of the metric",
        "properties": {
          "localizedValue": {
            "description": "Localized name of the metric",
            "type": "string"
          },
          "value": {
            "description": "Name of the metric",
            "type": "string"
          }
        },
        "required": [
          "value",
          "localizedValue"
        ],
        "type": "object"
      },
      "MetricNameFilter": {
        "description": "Class representing the name filter to be passed while fetching metrics",
        "properties": {
          "value": {
            "description": "The value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Metrics": {
        "description": "Monitoring metric",
        "properties": {
          "dimensions": {
            "description": "The Metric dimension which indicates the source of the metric",
            "items": {
              "$ref": "#/components/schemas/MetricDimension"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "endTime": {
            "description": "The metric end time",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/MetricName",
            "description": "The name of the metrics"
          },
          "primaryAggregation": {
            "description": "The metric aggregation type",
            "enum": [
              "Average",
              "Last",
              "Maximum",
              "Minimum",
              "None",
              "Total"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MetricAggregationType"
            }
          },
          "resourceId": {
            "description": "The id of metric source",
            "type": "string"
          },
          "startTime": {
            "description": "The metric start time",
            "format": "date-time",
            "type": "string"
          },
          "timeGrain": {
            "description": "The time grain, time grain indicates frequency of the metric data",
            "type": "string"
          },
          "type": {
            "description": "The Type of the metric data",
            "type": "string"
          },
          "unit": {
            "description": "The unit of the metric data",
            "enum": [
              "Bytes",
              "BytesPerSecond",
              "Count",
              "CountPerSecond",
              "Percent",
              "Seconds"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MetricUnit"
            }
          },
          "values": {
            "description": "The metric data",
            "items": {
              "$ref": "#/components/schemas/MetricData"
            },
            "type": "array",
            "x-ms-identifiers": [
              "timeStamp"
            ]
          }
        },
        "required": [
          "resourceId",
          "startTime",
          "endTime",
          "timeGrain",
          "primaryAggregation",
          "name",
          "dimensions",
          "unit",
          "type",
          "values"
        ],
        "type": "object"
      },
      "NetworkAdapter": {
        "description": "Represents a networkAdapter in a particular node.",
        "properties": {
          "dhcpStatus": {
            "description": "Represents state of DHCP.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DhcpStatus"
            }
          },
          "iPv4Info": {
            "$ref": "#/components/schemas/IPConfig",
            "description": "The ipv4 configuration of the network adapter."
          },
          "iPv6Info": {
            "$ref": "#/components/schemas/IPConfig",
            "description": "The ipv6 configuration of the network adapter."
          },
          "linkSpeed": {
            "description": "The speed of the network adapter.",
            "format": "int64",
            "type": "integer"
          },
          "networkAdapterName": {
            "description": "The name of the network adapter.",
            "type": "string"
          }
        },
        "required": [
          "networkAdapterName",
          "dhcpStatus"
        ],
        "type": "object"
      },
      "NetworkSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The NetworkSettings of a device",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/NetworkSettingsProperties",
            "description": "Properties of the given NetworkSettings.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "NetworkSettingsProperties": {
        "description": "The properties of NetworkSettings",
        "properties": {
          "nodeNetworks": {
            "description": "The NetworkAdapters under each node of the device.",
            "items": {
              "$ref": "#/components/schemas/NodeNetwork"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "primaryDnsServer": {
            "description": "The Primary DNS server for the device",
            "type": "string"
          },
          "secondaryDnsServer": {
            "description": "The secondary DNS server for the device",
            "type": "string"
          }
        },
        "required": [
          "primaryDnsServer",
          "nodeNetworks"
        ],
        "type": "object"
      },
      "NodeNetwork": {
        "description": "Represents a single node in a device.",
        "properties": {
          "networkAdapters": {
            "description": "The array of network adapters in the node.",
            "items": {
              "$ref": "#/components/schemas/NetworkAdapter"
            },
            "type": "array",
            "x-ms-identifiers": [
              "networkAdapterName"
            ]
          }
        },
        "required": [
          "networkAdapters"
        ],
        "type": "object"
      },
      "RawCertificateData": {
        "description": "Raw Certificate Data From IDM",
        "properties": {
          "authType": {
            "description": "Specify the Authentication type",
            "enum": [
              "Invalid",
              "AccessControlService",
              "AzureActiveDirectory"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AuthType"
            }
          },
          "certificate": {
            "description": "Gets or sets the base64 encoded certificate raw data string",
            "type": "string"
          }
        },
        "required": [
          "certificate"
        ],
        "type": "object"
      },
      "Resource": {
        "description": "The Azure Resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Tags attached to the Manager",
            "type": "object"
          },
          "id": {
            "description": "The Resource Id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The Geo location of the Manager",
            "type": "string"
          },
          "name": {
            "description": "The Resource Name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The Resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceCertificateAndAADDetails": {
        "description": "Resource Certificate And AAD Details from IDM",
        "properties": {
          "aadAuthority": {
            "description": "AAD tenant authority",
            "type": "string"
          },
          "aadTenantId": {
            "description": "AAD tenant Id",
            "type": "string"
          },
          "authType": {
            "description": "Specify the Authentication type",
            "enum": [
              "Invalid",
              "AccessControlService",
              "AzureActiveDirectory"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "AuthType"
            }
          },
          "azureManagementEndpointAudience": {
            "description": "Azure Management Endpoint Audience",
            "type": "string"
          },
          "certificate": {
            "description": "Gets or sets the base64 encoded certificate raw data string",
            "type": "string"
          },
          "friendlyName": {
            "description": "Certificate friendly name",
            "type": "string"
          },
          "issuer": {
            "description": "Certificate issuer",
            "type": "string"
          },
          "resourceId": {
            "description": "Gets or Sets the ResourceId",
            "format": "int64",
            "type": "integer"
          },
          "servicePrincipalClientId": {
            "description": "AAD service principal clientId",
            "type": "string"
          },
          "servicePrincipalObjectId": {
            "description": "AAD service principal ObjectId",
            "type": "string"
          },
          "subject": {
            "description": "Certificate Subject Name",
            "type": "string"
          },
          "thumbprint": {
            "description": "Certificate thumbprint",
            "type": "string"
          },
          "validFrom": {
            "description": "Certificate Validity start Date time",
            "format": "date-time",
            "type": "string"
          },
          "validTo": {
            "description": "Certificate Validity End Date time",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "certificate",
          "resourceId",
          "aadAuthority",
          "aadTenantId",
          "servicePrincipalClientId",
          "servicePrincipalObjectId",
          "azureManagementEndpointAudience",
          "subject",
          "validFrom",
          "validTo",
          "thumbprint",
          "friendlyName",
          "issuer"
        ],
        "type": "object"
      },
      "SecuritySettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The SecuritySettings of a device",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SecuritySettingsProperties",
            "description": "Properties of the SecuritySettings.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "SecuritySettingsProperties": {
        "description": "The properties of SecuritySettings",
        "properties": {
          "deviceAdminPassword": {
            "$ref": "#/components/schemas/AsymmetricEncryptedSecret",
            "description": "Device administrator password as an encrypted string (encrypted using RSA PKCS #1) is used to log into the  local web UI of the device. Actual password could have at least 8 characters that are a combination of  uppercase, lowercase, numeric, and special characters"
          }
        },
        "required": [
          "deviceAdminPassword"
        ],
        "type": "object"
      },
      "SendTestAlertEmailRequest": {
        "description": "Request for sending test alert email",
        "properties": {
          "emailList": {
            "description": "List of emails to send the test alerts",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "emailList"
        ],
        "type": "object"
      },
      "StorageAccountCredential": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The storage account credential",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/StorageAccountCredentialProperties",
            "description": "Credential properties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "StorageAccountCredentialList": {
        "description": "Collection of Storage account credential entities",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/StorageAccountCredential"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "StorageAccountCredentialProperties": {
        "description": "Storage account properties",
        "properties": {
          "accessKey": {
            "$ref": "#/components/schemas/AsymmetricEncryptedSecret",
            "description": "The details of the storage account password"
          },
          "cloudType": {
            "description": "The cloud service provider",
            "enum": [
              "Azure",
              "S3",
              "S3_RRS",
              "OpenStack",
              "HP"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CloudType"
            }
          },
          "enableSSL": {
            "description": "SSL needs to be enabled or not",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SslStatus"
            }
          },
          "endPoint": {
            "description": "The storage endpoint",
            "type": "string"
          },
          "location": {
            "description": "The storage account's geo location",
            "type": "string"
          },
          "login": {
            "description": "The storage account login",
            "type": "string"
          }
        },
        "required": [
          "cloudType",
          "endPoint",
          "login",
          "enableSSL"
        ],
        "type": "object"
      },
      "StorageDomain": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The storage domain.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/StorageDomainProperties",
            "description": "The properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "StorageDomainList": {
        "description": "Collection of storage domains",
        "properties": {
          "value": {
            "description": "The value.",
            "items": {
              "$ref": "#/components/schemas/StorageDomain"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "StorageDomainProperties": {
        "description": "The storage domain properties.",
        "properties": {
          "encryptionKey": {
            "$ref": "#/components/schemas/AsymmetricEncryptedSecret",
            "description": "The encryption key used to encrypt the data. This is a user secret."
          },
          "encryptionStatus": {
            "description": "The encryption status \"Enabled | Disabled\".",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "EncryptionStatus"
            }
          },
          "storageAccountCredentialIds": {
            "description": "The storage account credentials.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "storageAccountCredentialIds",
          "encryptionStatus"
        ],
        "type": "object"
      },
      "SymmetricEncryptedSecret": {
        "description": "This class can be used as the Type for any secret entity represented as Value, ValueCertificateThumbprint, EncryptionAlgorithm. In this case, \"Value\" is a secret and the \"valueThumbprint\" represents the certificate thumbprint of the value. The algorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.",
        "properties": {
          "encryptionAlgorithm": {
            "description": "Algorithm used to encrypt \"Value\"",
            "enum": [
              "None",
              "AES256",
              "RSAES_PKCS1_v_1_5"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "EncryptionAlgorithm"
            }
          },
          "value": {
            "description": "The value of the secret itself. If the secret is in plaintext or null then EncryptionAlgorithm will be none",
            "type": "string"
          },
          "valueCertificateThumbprint": {
            "description": "Thumbprint cert that was used to encrypt \"Value\"",
            "type": "string"
          }
        },
        "required": [
          "value",
          "encryptionAlgorithm"
        ],
        "type": "object"
      },
      "Time": {
        "description": "The Time.",
        "properties": {
          "hour": {
            "description": "The hour.",
            "format": "int32",
            "maximum": 23,
            "minimum": 0,
            "type": "integer"
          },
          "minute": {
            "description": "The minute.",
            "format": "int32",
            "maximum": 59,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "hour",
          "minute"
        ],
        "type": "object"
      },
      "TimeSettings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The TimeSettings of a device",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TimeSettingsProperties",
            "description": "Properties of the TimeSettings.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "TimeSettingsProperties": {
        "description": "The properties of TimeSettings",
        "properties": {
          "primaryTimeServer": {
            "description": "The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.",
            "type": "string"
          },
          "secondaryTimeServer": {
            "description": "The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.",
            "type": "string"
          },
          "timeZone": {
            "description": "The timezone of device, like '(UTC -06:00) Central America'",
            "type": "string"
          }
        },
        "required": [
          "timeZone",
          "primaryTimeServer"
        ],
        "type": "object"
      },
      "UpdateDownloadProgress": {
        "description": "details available during the download",
        "properties": {
          "downloadPhase": {
            "description": "The download phase.",
            "enum": [
              "Unknown",
              "Initializing",
              "Downloading",
              "Verifying"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DownloadPhase"
            }
          },
          "numberOfUpdatesDownloaded": {
            "description": "Number of updates downloaded.",
            "format": "int32",
            "type": "integer"
          },
          "numberOfUpdatesToDownload": {
            "description": "Number of updates to download.",
            "format": "int32",
            "type": "integer"
          },
          "percentComplete": {
            "description": "Percentage of completion.",
            "format": "int32",
            "type": "integer"
          },
          "totalBytesDownloaded": {
            "description": "Total bytes downloaded.",
            "format": "double",
            "type": "number"
          },
          "totalBytesToDownload": {
            "description": "Total bytes to download.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "UpdateInstallProgress": {
        "description": "Class representing the progress during installation of updates",
        "properties": {
          "numberOfUpdatesInstalled": {
            "description": "Number of updates installed.",
            "format": "int32",
            "type": "integer"
          },
          "numberOfUpdatesToInstall": {
            "description": "Number of updates to install.",
            "format": "int32",
            "type": "integer"
          },
          "percentComplete": {
            "description": "Percentage of completion.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "Updates": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "The updates profile",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UpdatesProperties",
            "description": "Update properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UpdatesProperties": {
        "description": "Properties of the update profile",
        "properties": {
          "deviceLastScannedTime": {
            "description": "The last time when the device did an update scan.",
            "format": "date-time",
            "type": "string"
          },
          "deviceVersion": {
            "description": "The current Device version.",
            "type": "string"
          },
          "inProgressDownloadJobId": {
            "description": "If a download is in progress, this field contains the JobId of that particular download job",
            "type": "string"
          },
          "inProgressDownloadJobStartedTime": {
            "description": "The time when the currently running download (if any) started",
            "format": "date-time",
            "type": "string"
          },
          "inProgressInstallJobId": {
            "description": "If an install is in progress, this field contains the JobId of that particular install job",
            "type": "string"
          },
          "inProgressInstallJobStartedTime": {
            "description": "The time when the currently running install (if any) started",
            "format": "date-time",
            "type": "string"
          },
          "inProgressScanStartedTime": {
            "description": "The time when the currently running scan (if any) started",
            "format": "date-time",
            "type": "string"
          },
          "lastCompletedDownloadJobTime": {
            "description": "The time when the last Download job was completed (success|cancelled|failed) on the device.",
            "format": "date-time",
            "type": "string"
          },
          "lastCompletedInstallJobTime": {
            "description": "The time when the last Install job was completed (success|cancelled|failed) on the device.",
            "format": "date-time",
            "type": "string"
          },
          "lastCompletedScanTime": {
            "description": "The time when the last scan job was completed (success|cancelled|failed) on the device.",
            "format": "date-time",
            "type": "string"
          },
          "rebootRequiredForInstall": {
            "description": "Set to true if RegularUpdatesAvailable is true and if at least one of the updateItems detected has needs a reboot to install.",
            "type": "boolean"
          },
          "regularUpdatesAvailable": {
            "description": "Set to true if regular updates were detected for the current version of the device.",
            "type": "boolean"
          },
          "status": {
            "description": "The current update operation.",
            "enum": [
              "Idle",
              "Scanning",
              "Downloading",
              "Installing"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "UpdateOperation"
            }
          },
          "totalItemsPendingForDownload": {
            "description": "The total number of items pending for download.",
            "format": "int32",
            "type": "integer"
          },
          "totalItemsPendingForInstall": {
            "description": "The total number of items pending for install.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "UploadCertificateRequest": {
        "description": "Upload Certificate Request to IDM",
        "properties": {
          "contractVersion": {
            "description": "Gets ContractVersion",
            "enum": [
              "InvalidVersion",
              "V2011_09",
              "V2012_02",
              "V2012_05",
              "V2012_12",
              "V2013_04",
              "V2013_10",
              "V2013_11",
              "V2014_04",
              "V2014_06",
              "V2014_07",
              "V2014_09",
              "V2014_10",
              "V2014_12",
              "V2015_01",
              "V2015_02",
              "V2015_04",
              "V2015_05",
              "V2015_06",
              "V2015_07",
              "V2015_08",
              "V2015_10",
              "V2015_12",
              "V2016_01",
              "V2016_02",
              "V2016_04",
              "V2016_05",
              "V2016_07",
              "V2016_08"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ContractVersions"
            }
          },
          "properties": {
            "$ref": "#/components/schemas/RawCertificateData",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "UploadCertificateResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseModel"
          }
        ],
        "description": "Upload Certificate Response from IDM",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ResourceCertificateAndAADDetails",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}