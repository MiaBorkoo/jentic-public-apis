{
  "openapi": "3.0.0",
  "info": {
    "title": "RecoveryServicesBackupClient",
    "version": "2018-12-20",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/recoveryservicesbackup/resource-manager/Microsoft.RecoveryServices/stable/2018-12-20/bms.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupAadProperties": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AADPropertiesResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AadProperties"
        ],
        "operationId": "AadProperties_Get",
        "summary": "Fetches the AAD properties from target region BCM stamp.",
        "x-ms-examples": {
          "Get AAD Properties for authentication in the third region": {
            "$ref": "./examples/AzureIaasVm/BackupAadProperties_Get.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSAADPropertiesQueryObject"
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrossRegionRestore": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CrossRegionRestore"
        ],
        "operationId": "CrossRegionRestore_Trigger",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrossRegionRestoreRequest"
              }
            }
          },
          "description": "resource cross region restore request",
          "required": true
        },
        "summary": "Restores the specified backed up data in a different region as compared to where the data is backed up.",
        "x-ms-examples": {
          "Trigger Cross Region Restore": {
            "$ref": "./examples/AzureIaasVm/TriggerCrossRegionRestore_Post.json"
          },
          "Trigger Cross Region Restore with identityBasedRestoreDetails": {
            "$ref": "./examples/AzureIaasVm/TriggerCrossRegionRestore_IdentityBasedRestoreDetails_Post.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrrJob": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CrrJobDetails"
        ],
        "operationId": "BackupCrrJobDetails_Get",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrrJobRequest"
              }
            }
          },
          "description": "CRR Job request",
          "required": true
        },
        "summary": "Get CRR job details from target region.",
        "x-ms-examples": {
          "Get Cross Region Restore Job Details in the secondary region": {
            "$ref": "./examples/AzureIaasVm/GetCrrJob_Post.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrrJobs": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupCrrJobs"
        ],
        "operationId": "BackupCrrJobs_List",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CrrJobRequest"
              }
            }
          },
          "description": "Backup CRR Job request",
          "required": true
        },
        "summary": "Gets the list of CRR jobs from the target region.",
        "x-ms-examples": {
          "List Cross Region Restore Jobs in the secondary region": {
            "$ref": "./examples/AzureIaasVm/ListCrrJobs_Post.json"
          }
        },
        "x-ms-odata": "#/components/schemas/JobQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrrOperationResults/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CrrOperationResults"
        ],
        "operationId": "CrrOperationResults_Get",
        "x-ms-examples": {
          "Get Operation Results for Cross Region Restore": {
            "$ref": "./examples/AzureIaasVm/GetCrrOperationResults_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.RecoveryServices/locations/{azureRegion}/backupCrrOperationsStatus/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/AzureRegion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CrrOperationStatus"
        ],
        "operationId": "CrrOperationStatus_Get",
        "x-ms-examples": {
          "Get Operation Status for Cross Region Restore": {
            "$ref": "./examples/AzureIaasVm/GetCrrOperationStatus_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name associated with the backed up item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Backed up item whose backup copies are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecoveryPointResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RecoveryPoints_Crr"
        ],
        "description": "Lists the backup copies for the backed up item.",
        "operationId": "RecoveryPointsCrr_List",
        "x-ms-examples": {
          "Get Protected Azure Vm Recovery Points": {
            "$ref": "./examples/AzureIaasVm/RecoveryPoints_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSRPQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/accessToken": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Protected Item.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Recovery Point Id",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrrAccessTokenResource"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "BadRequest"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "RecoveryPoints_GetAccessToken"
        ],
        "operationId": "RecoveryPoints_GetAccessToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AADPropertiesResource"
              }
            }
          },
          "description": "Get Access Token request",
          "required": true
        },
        "summary": "Returns the Access token for communication between BMS and Protection service",
        "x-ms-examples": {
          "Get Access Token for Crr": {
            "$ref": "./examples/AzureIaasVm/GetAccessToken_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems/": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectedItemResourceList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupProtectedItems_Crr"
        ],
        "description": "Provides a pageable list of all items that are backed up within a vault.",
        "operationId": "BackupProtectedItemsCrr_List",
        "x-ms-examples": {
          "List protected items with backupManagementType filter as AzureIaasVm": {
            "$ref": "./examples/AzureIaasVm/BackupProtectedItems_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/ProtectedItemQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupUsageSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupManagementUsageList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupUsageSummaries_CRR"
        ],
        "description": "Fetches the backup management usage summaries of the vault.",
        "operationId": "BackupUsageSummariesCRR_List",
        "x-ms-examples": {
          "Get Protected Containers Usages Summary": {
            "$ref": "./examples/Common/BackupProtectionContainers_UsageSummary_Get.json"
          },
          "Get Protected Items Usages Summary": {
            "$ref": "./examples/Common/BackupProtectedItem_UsageSummary_Get.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSBackupSummariesQueryObject",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResourceConfigResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Fetches resource storage config.",
        "operationId": "BackupResourceStorageConfigs_Get",
        "x-ms-examples": {
          "Get Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Updates vault storage model type.",
        "operationId": "BackupResourceStorageConfigs_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupResourceConfigResource"
              }
            }
          },
          "description": "Vault storage config request",
          "required": true
        },
        "x-ms-examples": {
          "Update Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Patch.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResourceConfigResource"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Updates vault storage model type.",
        "operationId": "BackupResourceStorageConfigs_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupResourceConfigResource"
              }
            }
          },
          "description": "Vault storage config request",
          "required": true
        },
        "x-ms-examples": {
          "Update Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Put.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersion": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "AzureRegion": {
        "description": "Azure region to hit Api",
        "in": "path",
        "name": "azureRegion",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupName": {
        "description": "The name of the resource group where the recovery services vault is present.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionId": {
        "description": "The subscription Id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "VaultName": {
        "description": "The name of the recovery services vault.",
        "in": "path",
        "name": "vaultName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "BackupResourceConfigResource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BackupResourceConfigResource"
            }
          }
        },
        "description": "Vault storage config request",
        "required": true
      }
    },
    "schemas": {
      "AADProperties": {
        "properties": {
          "audience": {
            "type": "string"
          },
          "authority": {
            "type": "string"
          },
          "servicePrincipalClientId": {
            "type": "string"
          },
          "servicePrincipalObjectId": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AADPropertiesResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AADProperties",
            "description": "AADPropertiesResource properties"
          }
        },
        "type": "object"
      },
      "AzureFileShareRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecoveryPoint"
          }
        ],
        "description": "Azure File Share workload specific backup copy.",
        "properties": {
          "fileShareSnapshotUri": {
            "description": "Contains Url to the snapshot of fileshare, if applicable",
            "readOnly": true,
            "type": "string"
          },
          "recoveryPointSizeInGB": {
            "description": "Contains recovery point size",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "recoveryPointTime": {
            "description": "Time at which this backup copy was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "recoveryPointType": {
            "description": "Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShareRecoveryPoint"
      },
      "AzureFileShareRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RestoreRequest"
          }
        ],
        "description": "AzureFileShare Restore Request",
        "properties": {
          "copyOptions": {
            "description": "Options to resolve copy conflicts.",
            "enum": [
              "Invalid",
              "CreateCopy",
              "Skip",
              "Overwrite",
              "FailOnConflict"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CopyOptions"
            }
          },
          "recoveryType": {
            "description": "Type of this recovery.",
            "enum": [
              "Invalid",
              "OriginalLocation",
              "AlternateLocation",
              "RestoreDisks",
              "Offline"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RecoveryType"
            }
          },
          "restoreFileSpecs": {
            "description": "List of Source Files/Folders(which need to recover) and TargetFolderPath details",
            "items": {
              "$ref": "#/components/schemas/RestoreFileSpecs"
            },
            "type": "array"
          },
          "restoreRequestType": {
            "description": "Restore Type (FullShareRestore or ItemLevelRestore)",
            "enum": [
              "Invalid",
              "FullShareRestore",
              "ItemLevelRestore"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RestoreRequestType"
            }
          },
          "sourceResourceId": {
            "description": "Source storage account ARM Id",
            "type": "string"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/TargetAFSRestoreInfo",
            "description": "Target File Share Details"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShareRestoreRequest"
      },
      "AzureFileshareProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "Azure File Share workload-specific backup item.",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureFileshareProtectedItemExtendedInfo",
            "description": "Additional information with this backup item."
          },
          "friendlyName": {
            "description": "Friendly name of the fileshare represented by this backup item.",
            "type": "string"
          },
          "healthStatus": {
            "description": "backups running status for this backup item.",
            "enum": [
              "Passed",
              "ActionRequired",
              "ActionSuggested",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "HealthStatus"
            }
          },
          "kpisHealths": {
            "additionalProperties": {
              "$ref": "#/components/schemas/KPIResourceHealthDetails"
            },
            "description": "Health details of different KPIs",
            "type": "object"
          },
          "lastBackupStatus": {
            "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
            "type": "string"
          },
          "lastBackupTime": {
            "description": "Timestamp of the last backup operation on this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "protectionState": {
            "description": "Backup state of this backup item.",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionState"
            }
          },
          "protectionStatus": {
            "description": "Backup status of this backup item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShareProtectedItem"
      },
      "AzureFileshareProtectedItemExtendedInfo": {
        "description": "Additional information about Azure File Share backup item.",
        "properties": {
          "oldestRecoveryPoint": {
            "description": "The oldest backup copy available for this item in the service.",
            "format": "date-time",
            "type": "string"
          },
          "policyState": {
            "description": "Indicates consistency of policy object and policy applied to this backup item.",
            "type": "string"
          },
          "recoveryPointCount": {
            "description": "Number of available backup copies associated with this backup item.",
            "format": "int32",
            "type": "integer"
          },
          "resourceState": {
            "description": "Indicates the state of this resource. Possible values are from enum ResourceState {Invalid, Active, SoftDeleted, Deleted}",
            "readOnly": true,
            "type": "string"
          },
          "resourceStateSyncTime": {
            "description": "The resource state sync time for this backup item.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureIaaSClassicComputeVMProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureIaaSVMProtectedItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
      },
      "AzureIaaSComputeVMProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureIaaSVMProtectedItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
      },
      "AzureIaaSVMErrorInfo": {
        "description": "Azure IaaS VM workload-specific error information.",
        "properties": {
          "errorCode": {
            "description": "Error code.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "errorString": {
            "description": "Localized error string.",
            "readOnly": true,
            "type": "string"
          },
          "errorTitle": {
            "description": "Title: Typically, the entity that the error pertains to.",
            "readOnly": true,
            "type": "string"
          },
          "recommendations": {
            "description": "List of localized recommendations for above error code.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureIaaSVMHealthDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceHealthDetails"
          }
        ],
        "description": "Azure IaaS VM workload-specific Health Details.",
        "type": "object"
      },
      "AzureIaaSVMJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Job"
          }
        ],
        "description": "Azure IaaS VM workload-specific job object.",
        "properties": {
          "actionsInfo": {
            "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
            "items": {
              "enum": [
                "Invalid",
                "Cancellable",
                "Retriable"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "JobSupportedAction"
              }
            },
            "type": "array"
          },
          "duration": {
            "description": "Time elapsed during the execution of this job.",
            "format": "duration",
            "type": "string"
          },
          "errorDetails": {
            "description": "Error details on execution of this job.",
            "items": {
              "$ref": "#/components/schemas/AzureIaaSVMErrorInfo"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureIaaSVMJobExtendedInfo",
            "description": "Additional information for this job."
          },
          "virtualMachineVersion": {
            "description": "Specifies whether the backup item is a Classic or an Azure Resource Manager VM.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureIaaSVMJob"
      },
      "AzureIaaSVMJobExtendedInfo": {
        "description": "Azure IaaS VM workload-specific additional information for job.",
        "properties": {
          "dynamicErrorMessage": {
            "description": "Non localized error message on job execution.",
            "type": "string"
          },
          "estimatedRemainingDuration": {
            "description": "Time remaining for execution of this job.",
            "type": "string"
          },
          "internalPropertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Job internal properties.",
            "type": "object"
          },
          "progressPercentage": {
            "description": "Indicates progress of the job. Null if it has not started or completed.",
            "format": "double",
            "type": "number"
          },
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Job properties.",
            "type": "object"
          },
          "tasksList": {
            "description": "List of tasks associated with this job.",
            "items": {
              "$ref": "#/components/schemas/AzureIaaSVMJobTaskDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureIaaSVMJobTaskDetails": {
        "description": "Azure IaaS VM workload-specific job task details.",
        "properties": {
          "duration": {
            "description": "Time elapsed for task.",
            "format": "duration",
            "type": "string"
          },
          "endTime": {
            "description": "The end time.",
            "format": "date-time",
            "type": "string"
          },
          "instanceId": {
            "description": "The instanceId.",
            "type": "string"
          },
          "progressPercentage": {
            "description": "Progress of the task.",
            "format": "double",
            "type": "number"
          },
          "startTime": {
            "description": "The start time.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "The status.",
            "type": "string"
          },
          "taskExecutionDetails": {
            "description": "Details about execution of the task.\r\neg: number of bytes transferred etc",
            "type": "string"
          },
          "taskId": {
            "description": "The task display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureIaaSVMProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item.",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureIaaSVMProtectedItemExtendedInfo",
            "description": "Additional information for this backup item."
          },
          "extendedProperties": {
            "$ref": "#/components/schemas/ExtendedProperties"
          },
          "friendlyName": {
            "description": "Friendly name of the VM represented by this backup item.",
            "type": "string"
          },
          "healthDetails": {
            "description": "Health details on this backup item.",
            "items": {
              "$ref": "#/components/schemas/AzureIaaSVMHealthDetails"
            },
            "type": "array"
          },
          "healthStatus": {
            "description": "Health status of protected item.",
            "enum": [
              "Passed",
              "ActionRequired",
              "ActionSuggested",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "HealthStatus"
            }
          },
          "kpisHealths": {
            "additionalProperties": {
              "$ref": "#/components/schemas/KPIResourceHealthDetails"
            },
            "description": "Health details of different KPIs",
            "type": "object"
          },
          "lastBackupStatus": {
            "description": "Last backup operation status.",
            "type": "string"
          },
          "lastBackupTime": {
            "description": "Timestamp of the last backup operation on this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "protectedItemDataId": {
            "description": "Data ID of the protected item.",
            "type": "string"
          },
          "protectionState": {
            "description": "Backup state of this backup item.",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionState"
            }
          },
          "protectionStatus": {
            "description": "Backup status of this backup item.",
            "type": "string"
          },
          "virtualMachineId": {
            "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
      },
      "AzureIaaSVMProtectedItemExtendedInfo": {
        "description": "Additional information on Azure IaaS VM specific backup item.",
        "properties": {
          "oldestRecoveryPoint": {
            "description": "The oldest backup copy available for this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "policyInconsistent": {
            "description": "Specifies if backup policy associated with the backup item is inconsistent.",
            "type": "boolean"
          },
          "recoveryPointCount": {
            "description": "Number of backup copies available for this backup item.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AzureSqlProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "Azure SQL workload-specific backup item.",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureSqlProtectedItemExtendedInfo",
            "description": "Additional information for this backup item."
          },
          "protectedItemDataId": {
            "description": "Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.",
            "type": "string"
          },
          "protectionState": {
            "description": "Backup state of the backed up item.",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectedItemState"
            }
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
      },
      "AzureSqlProtectedItemExtendedInfo": {
        "description": "Additional information on Azure Sql specific protected item.",
        "properties": {
          "oldestRecoveryPoint": {
            "description": "The oldest backup copy available for this item in the service.",
            "format": "date-time",
            "type": "string"
          },
          "policyState": {
            "description": "State of the backup policy associated with this backup item.",
            "type": "string"
          },
          "recoveryPointCount": {
            "description": "Number of available backup copies associated with this backup item.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AzureStorageErrorInfo": {
        "description": "Azure storage specific error information",
        "properties": {
          "errorCode": {
            "description": "Error code.",
            "format": "int32",
            "type": "integer"
          },
          "errorString": {
            "description": "Localized error string.",
            "type": "string"
          },
          "recommendations": {
            "description": "List of localized recommendations for above error code.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureStorageJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Job"
          }
        ],
        "description": "Azure storage specific job.",
        "properties": {
          "actionsInfo": {
            "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
            "items": {
              "enum": [
                "Invalid",
                "Cancellable",
                "Retriable"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "JobSupportedAction"
              }
            },
            "type": "array"
          },
          "duration": {
            "description": "Time elapsed during the execution of this job.",
            "format": "duration",
            "type": "string"
          },
          "errorDetails": {
            "description": "Error details on execution of this job.",
            "items": {
              "$ref": "#/components/schemas/AzureStorageErrorInfo"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureStorageJobExtendedInfo",
            "description": "Additional information about the job."
          },
          "storageAccountName": {
            "description": "Specifies friendly name of the storage account.",
            "type": "string"
          },
          "storageAccountVersion": {
            "description": "Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureStorageJob"
      },
      "AzureStorageJobExtendedInfo": {
        "description": "Azure Storage workload-specific additional information for job.",
        "properties": {
          "dynamicErrorMessage": {
            "description": "Non localized error message on job execution.",
            "type": "string"
          },
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Job properties.",
            "type": "object"
          },
          "tasksList": {
            "description": "List of tasks for this job",
            "items": {
              "$ref": "#/components/schemas/AzureStorageJobTaskDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureStorageJobTaskDetails": {
        "description": "Azure storage workload specific job task details.",
        "properties": {
          "status": {
            "description": "The status.",
            "type": "string"
          },
          "taskId": {
            "description": "The task display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureVmWorkloadProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "Azure VM workload-specific protected item.",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectedItemExtendedInfo",
            "description": "Additional information for this backup item."
          },
          "friendlyName": {
            "description": "Friendly name of the DB represented by this backup item.",
            "type": "string"
          },
          "kpisHealths": {
            "additionalProperties": {
              "$ref": "#/components/schemas/KPIResourceHealthDetails"
            },
            "description": "Health details of different KPIs",
            "type": "object"
          },
          "lastBackupErrorDetail": {
            "$ref": "#/components/schemas/ErrorDetail",
            "description": "Error details in last backup"
          },
          "lastBackupStatus": {
            "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
            "enum": [
              "Invalid",
              "Healthy",
              "Unhealthy",
              "IRPending"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "LastBackupStatus"
            }
          },
          "lastBackupTime": {
            "description": "Timestamp of the last backup operation on this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "parentName": {
            "description": "Parent name of the DB such as Instance or Availability Group.",
            "type": "string"
          },
          "parentType": {
            "description": "Parent type of protected item, example: for a DB, standalone server or distributed",
            "type": "string"
          },
          "protectedItemDataSourceId": {
            "description": "Data ID of the protected item.",
            "type": "string"
          },
          "protectedItemHealthStatus": {
            "description": "Health status of the backup item, evaluated based on last heartbeat received",
            "enum": [
              "Invalid",
              "Healthy",
              "Unhealthy",
              "NotReachable",
              "IRPending"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectedItemHealthStatus"
            }
          },
          "protectionState": {
            "description": "Backup state of this backup item.",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionState"
            }
          },
          "protectionStatus": {
            "description": "Backup status of this backup item.",
            "type": "string"
          },
          "serverName": {
            "description": "Host/Cluster Name for instance or AG",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadProtectedItem"
      },
      "AzureVmWorkloadProtectedItemExtendedInfo": {
        "description": "Additional information on Azure Workload for SQL specific backup item.",
        "properties": {
          "oldestRecoveryPoint": {
            "description": "The oldest backup copy available for this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "policyState": {
            "description": "Indicates consistency of policy object and policy applied to this backup item.",
            "type": "string"
          },
          "recoveryPointCount": {
            "description": "Number of backup copies available for this backup item.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AzureVmWorkloadSAPAseDatabaseProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectedItem"
          }
        ],
        "description": "Azure VM workload-specific protected item representing SAP ASE Database.",
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadSAPAseDatabase"
      },
      "AzureVmWorkloadSAPHanaDatabaseProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectedItem"
          }
        ],
        "description": "Azure VM workload-specific protected item representing SAP HANA Database.",
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadSAPHanaDatabase"
      },
      "AzureVmWorkloadSQLDatabaseProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectedItem"
          }
        ],
        "description": "Azure VM workload-specific protected item representing SQL Database.",
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadSQLDatabase"
      },
      "AzureWorkloadErrorInfo": {
        "description": "Azure storage specific error information",
        "properties": {
          "additionalDetails": {
            "description": "Additional details for above error code.",
            "type": "string"
          },
          "errorCode": {
            "description": "Error code.",
            "format": "int32",
            "type": "integer"
          },
          "errorString": {
            "description": "Localized error string.",
            "type": "string"
          },
          "errorTitle": {
            "description": "Title: Typically, the entity that the error pertains to.",
            "type": "string"
          },
          "recommendations": {
            "description": "List of localized recommendations for above error code.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureWorkloadJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Job"
          }
        ],
        "description": "Azure storage specific job.",
        "properties": {
          "actionsInfo": {
            "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
            "items": {
              "enum": [
                "Invalid",
                "Cancellable",
                "Retriable"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "JobSupportedAction"
              }
            },
            "type": "array"
          },
          "duration": {
            "description": "Time elapsed during the execution of this job.",
            "format": "duration",
            "type": "string"
          },
          "errorDetails": {
            "description": "Error details on execution of this job.",
            "items": {
              "$ref": "#/components/schemas/AzureWorkloadErrorInfo"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureWorkloadJobExtendedInfo",
            "description": "Additional information about the job."
          },
          "workloadType": {
            "description": "Workload type of the job",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadJob"
      },
      "AzureWorkloadJobExtendedInfo": {
        "description": "Azure VM workload-specific additional information for job.",
        "properties": {
          "dynamicErrorMessage": {
            "description": "Non localized error message on job execution.",
            "type": "string"
          },
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Job properties.",
            "type": "object"
          },
          "tasksList": {
            "description": "List of tasks for this job",
            "items": {
              "$ref": "#/components/schemas/AzureWorkloadJobTaskDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AzureWorkloadJobTaskDetails": {
        "description": "Azure VM workload specific job task details.",
        "properties": {
          "status": {
            "description": "The status.",
            "type": "string"
          },
          "taskId": {
            "description": "The task display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureWorkloadPointInTimeRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRecoveryPoint"
          }
        ],
        "description": "Recovery point specific to PointInTime",
        "properties": {
          "timeRanges": {
            "description": "List of log ranges",
            "items": {
              "$ref": "#/components/schemas/PointInTimeRange"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadPointInTimeRecoveryPoint"
      },
      "AzureWorkloadPointInTimeRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRestoreRequest"
          }
        ],
        "description": "AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore",
        "properties": {
          "pointInTime": {
            "description": "PointInTime value",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadPointInTimeRestoreRequest"
      },
      "AzureWorkloadRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecoveryPoint"
          }
        ],
        "description": "Workload specific recovery point, specifically encapsulates full/diff recovery point",
        "properties": {
          "recoveryPointMoveReadinessInfo": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RecoveryPointMoveReadinessInfo"
            },
            "description": "Eligibility of RP to be moved to another tier",
            "type": "object"
          },
          "recoveryPointTierDetails": {
            "description": "Recovery point tier information.",
            "items": {
              "$ref": "#/components/schemas/RecoveryPointTierInformation"
            },
            "type": "array"
          },
          "recoveryPointTimeInUTC": {
            "description": "UTC time at which recovery point was created",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Type of restore point",
            "enum": [
              "Invalid",
              "Full",
              "Log",
              "Differential",
              "Incremental"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RestorePointType"
            }
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadRecoveryPoint"
      },
      "AzureWorkloadRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RestoreRequest"
          }
        ],
        "description": "AzureWorkload-specific restore.",
        "properties": {
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Workload specific property bag.",
            "type": "object"
          },
          "recoveryMode": {
            "description": "Defines whether the current recovery mode is file restore or database restore",
            "enum": [
              "Invalid",
              "FileRecovery",
              "WorkloadRecovery"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RecoveryMode"
            }
          },
          "recoveryType": {
            "description": "Type of this recovery.",
            "enum": [
              "Invalid",
              "OriginalLocation",
              "AlternateLocation",
              "RestoreDisks",
              "Offline"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RecoveryType"
            }
          },
          "sourceResourceId": {
            "description": "Fully qualified ARM ID of the VM on which workload that was running is being recovered.",
            "type": "string"
          },
          "targetInfo": {
            "$ref": "#/components/schemas/TargetRestoreInfo",
            "description": "Details of target database"
          },
          "targetVirtualMachineId": {
            "description": "This is the complete ARM Id of the target VM\r\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadRestoreRequest"
      },
      "AzureWorkloadSAPHanaPointInTimeRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadPointInTimeRecoveryPoint"
          }
        ],
        "description": "Recovery point specific to PointInTime in SAPHana",
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRecoveryPoint"
      },
      "AzureWorkloadSAPHanaPointInTimeRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadSAPHanaRestoreRequest"
          }
        ],
        "description": "AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore",
        "properties": {
          "pointInTime": {
            "description": "PointInTime value",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSAPHanaPointInTimeRestoreRequest"
      },
      "AzureWorkloadSAPHanaRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRecoveryPoint"
          }
        ],
        "description": "SAPHana specific recoverypoint, specifically encapsulates full/diff recoverypoints",
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSAPHanaRecoveryPoint"
      },
      "AzureWorkloadSAPHanaRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRestoreRequest"
          }
        ],
        "description": "AzureWorkload SAP Hana-specific restore.",
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSAPHanaRestoreRequest"
      },
      "AzureWorkloadSQLPointInTimeRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadSQLRecoveryPoint"
          }
        ],
        "description": "Recovery point specific to PointInTime",
        "properties": {
          "timeRanges": {
            "description": "List of log ranges",
            "items": {
              "$ref": "#/components/schemas/PointInTimeRange"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRecoveryPoint"
      },
      "AzureWorkloadSQLPointInTimeRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadSQLRestoreRequest"
          }
        ],
        "description": "AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore",
        "properties": {
          "pointInTime": {
            "description": "PointInTime value",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSQLPointInTimeRestoreRequest"
      },
      "AzureWorkloadSQLRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRecoveryPoint"
          }
        ],
        "description": "SQL specific recoverypoint, specifically encapsulates full/diff recoverypoint along with extended info",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureWorkloadSQLRecoveryPointExtendedInfo",
            "description": "Extended Info that provides data directory details. Will be populated in two cases:\r\nWhen a specific recovery point is accessed using GetRecoveryPoint\r\nOr when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSQLRecoveryPoint"
      },
      "AzureWorkloadSQLRecoveryPointExtendedInfo": {
        "description": "Extended info class details",
        "properties": {
          "dataDirectoryPaths": {
            "description": "List of data directory paths during restore operation.",
            "items": {
              "$ref": "#/components/schemas/SQLDataDirectory"
            },
            "readOnly": true,
            "type": "array"
          },
          "dataDirectoryTimeInUTC": {
            "description": "UTC time at which data directory info was captured",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureWorkloadSQLRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadRestoreRequest"
          }
        ],
        "description": "AzureWorkload SQL -specific restore. Specifically for full/diff restore",
        "properties": {
          "alternateDirectoryPaths": {
            "description": "Data directory details",
            "items": {
              "$ref": "#/components/schemas/SQLDataDirectoryMapping"
            },
            "type": "array"
          },
          "isNonRecoverable": {
            "description": "SQL specific property where user can chose to set no-recovery when restore operation is tried",
            "type": "boolean"
          },
          "shouldUseAlternateTargetLocation": {
            "description": "Default option set to true. If this is set to false, alternate data directory must be provided",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadSQLRestoreRequest"
      },
      "BEKDetails": {
        "description": "BEK is bitlocker encryption key.",
        "properties": {
          "secretData": {
            "description": "BEK data.",
            "type": "string"
          },
          "secretUrl": {
            "description": "Secret is BEK.",
            "type": "string"
          },
          "secretVaultId": {
            "description": "ID of the Key Vault where this Secret is stored.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BMSAADPropertiesQueryObject": {
        "description": "Filters to list backup items.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type for the backed up item.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          }
        },
        "type": "object"
      },
      "BMSBackupSummariesQueryObject": {
        "description": "Query parameters to fetch backup summaries.",
        "properties": {
          "type": {
            "description": "Backup management type for this container.",
            "enum": [
              "Invalid",
              "BackupProtectedItemCountSummary",
              "BackupProtectionContainerCountSummary"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Type"
            }
          }
        },
        "type": "object"
      },
      "BMSRPQueryObject": {
        "description": "Filters to list backup copies.",
        "properties": {
          "endDate": {
            "description": "Backup copies created before this time.",
            "format": "date-time",
            "type": "string"
          },
          "extendedInfo": {
            "description": "In Get Recovery Point, it tells whether extended information about recovery point is asked.",
            "type": "boolean"
          },
          "moveReadyRPOnly": {
            "description": "Whether the RP can be moved to another tier",
            "type": "boolean"
          },
          "restorePointQueryType": {
            "description": "RestorePoint type",
            "enum": [
              "Invalid",
              "Full",
              "Log",
              "Differential",
              "FullAndDifferential",
              "All",
              "Incremental"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RestorePointQueryType"
            }
          },
          "startDate": {
            "description": "Backup copies created after this time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackupManagementUsage": {
        "description": "Backup management usages of a vault.",
        "properties": {
          "currentValue": {
            "description": "Current value of usage.",
            "format": "int64",
            "type": "integer"
          },
          "limit": {
            "description": "Limit of usage.",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/NameInfo",
            "description": "Name of usage."
          },
          "nextResetTime": {
            "description": "Next reset time of usage.",
            "format": "date-time",
            "type": "string"
          },
          "quotaPeriod": {
            "description": "Quota period of usage.",
            "type": "string"
          },
          "unit": {
            "description": "Unit of the usage.",
            "enum": [
              "Count",
              "Bytes",
              "Seconds",
              "Percent",
              "CountPerSecond",
              "BytesPerSecond"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "UsagesUnit"
            }
          }
        },
        "type": "object"
      },
      "BackupManagementUsageList": {
        "description": "Backup management usage for vault.",
        "properties": {
          "value": {
            "description": "The list of backup management usages for the given vault.",
            "items": {
              "$ref": "#/components/schemas/BackupManagementUsage"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BackupResourceConfig": {
        "description": "The resource storage details.",
        "properties": {
          "crossRegionRestoreFlag": {
            "description": "Opt in details of Cross Region Restore feature.",
            "type": "boolean"
          },
          "storageModelType": {
            "description": "Storage type",
            "enum": [
              "Invalid",
              "GeoRedundant",
              "LocallyRedundant",
              "ZoneRedundant",
              "ReadAccessGeoZoneRedundant"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageType"
            }
          },
          "storageType": {
            "description": "Storage type.",
            "enum": [
              "Invalid",
              "GeoRedundant",
              "LocallyRedundant",
              "ZoneRedundant",
              "ReadAccessGeoZoneRedundant"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageType"
            }
          },
          "storageTypeState": {
            "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
            "enum": [
              "Invalid",
              "Locked",
              "Unlocked"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageTypeState"
            }
          }
        },
        "type": "object"
      },
      "BackupResourceConfigResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource storage details.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupResourceConfig",
            "description": "BackupResourceConfigResource properties"
          }
        },
        "type": "object"
      },
      "ClientScriptForConnect": {
        "description": "Client script details for file / folder restore.",
        "properties": {
          "osType": {
            "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
            "type": "string"
          },
          "scriptContent": {
            "description": "File content of the client script for file / folder restore.",
            "type": "string"
          },
          "scriptExtension": {
            "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
            "type": "string"
          },
          "scriptNameSuffix": {
            "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\r\nIf its null or empty then , ignore it.",
            "type": "string"
          },
          "url": {
            "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CrossRegionRestoreRequest": {
        "properties": {
          "crossRegionRestoreAccessDetails": {
            "$ref": "#/components/schemas/CrrAccessToken",
            "description": "Access details for cross region restore"
          },
          "restoreRequest": {
            "$ref": "#/components/schemas/RestoreRequest",
            "description": "Request object for triggering restore"
          }
        },
        "type": "object"
      },
      "CrossRegionRestoreRequestResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CrossRegionRestoreRequest",
            "description": "CrossRegionRestoreRequestResource properties"
          }
        },
        "type": "object"
      },
      "CrrAccessToken": {
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "accessTokenString": {
            "description": "Access token used for authentication",
            "type": "string"
          },
          "bMSActiveRegion": {
            "description": "Active region name of BMS Stamp",
            "type": "string"
          },
          "backupManagementType": {
            "description": "Backup Management Type",
            "type": "string"
          },
          "containerName": {
            "description": "Container Unique name",
            "type": "string"
          },
          "containerType": {
            "description": "Container Type",
            "type": "string"
          },
          "coordinatorServiceStampId": {
            "description": "CoordinatorServiceStampId to be used by BCM in restore call",
            "type": "string"
          },
          "coordinatorServiceStampUri": {
            "description": "CoordinatorServiceStampUri to be used by BCM in restore call",
            "type": "string"
          },
          "datasourceContainerName": {
            "description": "Datasource Container Unique Name",
            "type": "string"
          },
          "datasourceId": {
            "description": "Datasource Id",
            "type": "string"
          },
          "datasourceName": {
            "description": "Datasource Friendly Name",
            "type": "string"
          },
          "datasourceType": {
            "description": "Datasource Type",
            "type": "string"
          },
          "objectType": {
            "description": "Type of the specific object - used for deserializing",
            "type": "string"
          },
          "protectionContainerId": {
            "description": "Protected item container id",
            "format": "int64",
            "type": "integer"
          },
          "protectionServiceStampId": {
            "description": "ProtectionServiceStampId to be used by BCM in restore call",
            "type": "string"
          },
          "protectionServiceStampUri": {
            "description": "ProtectionServiceStampUri to be used by BCM in restore call",
            "type": "string"
          },
          "recoveryPointId": {
            "description": "Recovery Point Id",
            "type": "string"
          },
          "recoveryPointTime": {
            "description": "Recovery Point Time",
            "type": "string"
          },
          "resourceGroupName": {
            "description": "Resource Group name of the source vault",
            "type": "string"
          },
          "resourceId": {
            "description": "Resource Id of the source vault",
            "type": "string"
          },
          "resourceName": {
            "description": "Resource Name of the source vault",
            "type": "string"
          },
          "rpIsManagedVirtualMachine": {
            "description": "Recovery point information: Managed virtual machine",
            "type": "boolean"
          },
          "rpOriginalSAOption": {
            "description": "Recovery point information: Original SA option",
            "type": "boolean"
          },
          "rpTierInformation": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Recovery point Tier Information",
            "type": "object"
          },
          "rpVMSizeDescription": {
            "description": "Recovery point information: VM size description",
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription Id of the source vault",
            "type": "string"
          },
          "tokenExtendedInformation": {
            "description": "Extended Information about the token like FileSpec etc.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "CrrAccessTokenResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CrrAccessToken",
            "description": "CrrAccessTokenResource properties"
          }
        },
        "type": "object"
      },
      "CrrJobRequest": {
        "description": "Request object for fetching CRR jobs.",
        "properties": {
          "jobName": {
            "description": "Job Name of the job to be fetched",
            "type": "string"
          },
          "resourceId": {
            "description": "Entire ARM resource id of the resource",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CrrJobRequestResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Request object for fetching CRR jobs.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CrrJobRequest",
            "description": "CrrJobRequestResource properties"
          }
        },
        "type": "object"
      },
      "DPMProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "Additional information on Backup engine specific backup item.",
        "properties": {
          "backupEngineName": {
            "description": "Backup Management server protecting this backup item",
            "type": "string"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/DPMProtectedItemExtendedInfo",
            "description": "Extended info of the backup item."
          },
          "friendlyName": {
            "description": "Friendly name of the managed item",
            "type": "string"
          },
          "protectionState": {
            "description": "Protection state of the backup engine",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectedItemState"
            }
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "DPMProtectedItem"
      },
      "DPMProtectedItemExtendedInfo": {
        "description": "Additional information of DPM Protected item.",
        "properties": {
          "diskStorageUsedInBytes": {
            "description": "Used Disk storage in bytes.",
            "type": "string"
          },
          "isCollocated": {
            "description": "To check if backup item is collocated.",
            "type": "boolean"
          },
          "isPresentOnCloud": {
            "description": "To check if backup item is cloud protected.",
            "type": "boolean"
          },
          "lastBackupStatus": {
            "description": "Last backup status information on backup item.",
            "type": "string"
          },
          "lastRefreshedAt": {
            "description": "Last refresh time on backup item.",
            "format": "date-time",
            "type": "string"
          },
          "oldestRecoveryPoint": {
            "description": "Oldest cloud recovery point time.",
            "format": "date-time",
            "type": "string"
          },
          "onPremiseLatestRecoveryPoint": {
            "description": "latest disk recovery point time.",
            "format": "date-time",
            "type": "string"
          },
          "onPremiseOldestRecoveryPoint": {
            "description": "Oldest disk recovery point time.",
            "format": "date-time",
            "type": "string"
          },
          "onPremiseRecoveryPointCount": {
            "description": "disk recovery point count.",
            "format": "int32",
            "type": "integer"
          },
          "protectableObjectLoadPath": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Attribute to provide information on various DBs.",
            "type": "object"
          },
          "protected": {
            "description": "To check if backup item is disk protected.",
            "type": "boolean"
          },
          "protectionGroupName": {
            "description": "Protection group name of the backup item.",
            "type": "string"
          },
          "recoveryPointCount": {
            "description": "cloud recovery point count.",
            "format": "int32",
            "type": "integer"
          },
          "totalDiskStorageSizeInBytes": {
            "description": "total Disk storage in bytes.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiskExclusionProperties": {
        "properties": {
          "diskLunList": {
            "description": "List of Disks' Logical Unit Numbers (LUN) to be used for VM Protection.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "isInclusionList": {
            "description": "Flag to indicate whether DiskLunList is to be included/ excluded from backup.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DiskInformation": {
        "description": "Disk information",
        "properties": {
          "lun": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DpmErrorInfo": {
        "description": "DPM workload-specific error information.",
        "properties": {
          "errorString": {
            "description": "Localized error string.",
            "type": "string"
          },
          "recommendations": {
            "description": "List of localized recommendations for above error code.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DpmJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Job"
          }
        ],
        "description": "DPM workload-specific job object.",
        "properties": {
          "actionsInfo": {
            "description": "The state/actions applicable on this job like cancel/retry.",
            "items": {
              "enum": [
                "Invalid",
                "Cancellable",
                "Retriable"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "JobSupportedAction"
              }
            },
            "type": "array"
          },
          "containerName": {
            "description": "Name of cluster/server protecting current backup item, if any.",
            "type": "string"
          },
          "containerType": {
            "description": "Type of container.",
            "type": "string"
          },
          "dpmServerName": {
            "description": "DPM server name managing the backup item or backup job.",
            "type": "string"
          },
          "duration": {
            "description": "Time elapsed for job.",
            "format": "duration",
            "type": "string"
          },
          "errorDetails": {
            "description": "The errors.",
            "items": {
              "$ref": "#/components/schemas/DpmErrorInfo"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/DpmJobExtendedInfo",
            "description": "Additional information for this job."
          },
          "workloadType": {
            "description": "Type of backup item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "DpmJob"
      },
      "DpmJobExtendedInfo": {
        "description": "Additional information on the DPM workload-specific job.",
        "properties": {
          "dynamicErrorMessage": {
            "description": "Non localized error message on job execution.",
            "type": "string"
          },
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The job properties.",
            "type": "object"
          },
          "tasksList": {
            "description": "List of tasks associated with this job.",
            "items": {
              "$ref": "#/components/schemas/DpmJobTaskDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DpmJobTaskDetails": {
        "description": "DPM workload-specific job task details.",
        "properties": {
          "duration": {
            "description": "Time elapsed for task.",
            "format": "duration",
            "type": "string"
          },
          "endTime": {
            "description": "The end time.",
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "description": "The start time.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "The status.",
            "type": "string"
          },
          "taskId": {
            "description": "The task display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EncryptionDetails": {
        "description": "Details needed if the VM was encrypted at the time of backup.",
        "properties": {
          "encryptionEnabled": {
            "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup.",
            "type": "boolean"
          },
          "kekUrl": {
            "description": "Key Url.",
            "type": "string"
          },
          "kekVaultId": {
            "description": "ID of Key Vault where KEK is stored.",
            "type": "string"
          },
          "secretKeyUrl": {
            "description": "Secret Url.",
            "type": "string"
          },
          "secretKeyVaultId": {
            "description": "ID of Key Vault where Secret is stored.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDetail": {
        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error Message related to the Code.",
            "readOnly": true,
            "type": "string"
          },
          "recommendations": {
            "description": "List of recommendation strings.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExtendedProperties": {
        "description": "Extended Properties for Azure IaasVM Backup.",
        "properties": {
          "diskExclusionProperties": {
            "$ref": "#/components/schemas/DiskExclusionProperties",
            "description": "Extended Properties for Disk Exclusion."
          }
        },
        "type": "object"
      },
      "GenericProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "Base class for backup items.",
        "properties": {
          "fabricName": {
            "description": "Name of this backup item's fabric.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of the container.",
            "type": "string"
          },
          "policyState": {
            "description": "Indicates consistency of policy object and policy applied to this backup item.",
            "type": "string"
          },
          "protectedItemId": {
            "description": "Data Plane Service ID of the protected item.",
            "format": "int64",
            "type": "integer"
          },
          "protectionState": {
            "description": "Backup state of this backup item.",
            "enum": [
              "Invalid",
              "IRPending",
              "Protected",
              "ProtectionError",
              "ProtectionStopped",
              "ProtectionPaused"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionState"
            }
          },
          "sourceAssociations": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Loosely coupled (type, value) associations (example - parent of a protected item)",
            "type": "object"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "GenericProtectedItem"
      },
      "GenericRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecoveryPoint"
          }
        ],
        "description": "Generic backup copy.",
        "properties": {
          "friendlyName": {
            "description": "Friendly name of the backup copy.",
            "type": "string"
          },
          "recoveryPointAdditionalInfo": {
            "description": "Additional information associated with this backup copy.",
            "type": "string"
          },
          "recoveryPointTime": {
            "description": "Time at which this backup copy was created.",
            "format": "date-time",
            "type": "string"
          },
          "recoveryPointType": {
            "description": "Type of the backup copy.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "GenericRecoveryPoint"
      },
      "IaasVMRecoveryPoint": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecoveryPoint"
          }
        ],
        "description": "IaaS VM workload specific backup copy.",
        "properties": {
          "isInstantIlrSessionActive": {
            "description": "Is the session to recover items from this backup copy still active.",
            "type": "boolean"
          },
          "isManagedVirtualMachine": {
            "description": "Whether VM is with Managed Disks",
            "type": "boolean"
          },
          "isSourceVMEncrypted": {
            "description": "Identifies whether the VM was encrypted when the backup copy is created.",
            "readOnly": true,
            "type": "boolean"
          },
          "keyAndSecret": {
            "$ref": "#/components/schemas/KeyAndSecretDetails",
            "description": "Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true."
          },
          "originalStorageAccountOption": {
            "description": "Original Storage Account Option",
            "type": "boolean"
          },
          "osType": {
            "description": "OS type",
            "type": "string"
          },
          "recoveryPointAdditionalInfo": {
            "description": "Additional information associated with this backup copy.",
            "readOnly": true,
            "type": "string"
          },
          "recoveryPointDiskConfiguration": {
            "$ref": "#/components/schemas/RecoveryPointDiskConfiguration",
            "description": "Disk configuration"
          },
          "recoveryPointMoveReadinessInfo": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RecoveryPointMoveReadinessInfo"
            },
            "description": "Eligibility of RP to be moved to another tier",
            "type": "object"
          },
          "recoveryPointTierDetails": {
            "description": "Recovery point tier information.",
            "items": {
              "$ref": "#/components/schemas/RecoveryPointTierInformation"
            },
            "type": "array"
          },
          "recoveryPointTime": {
            "description": "Time at which this backup copy was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "recoveryPointType": {
            "description": "Type of the backup copy.",
            "readOnly": true,
            "type": "string"
          },
          "sourceVMStorageType": {
            "description": "Storage type of the VM whose backup copy is created.",
            "readOnly": true,
            "type": "string"
          },
          "virtualMachineSize": {
            "description": "Virtual Machine Size",
            "type": "string"
          },
          "zones": {
            "description": "Identifies the zone of the VM at the time of backup. Applicable only for zone-pinned Vms",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaasVMRecoveryPoint"
      },
      "IaasVMRestoreRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RestoreRequest"
          }
        ],
        "description": "IaaS VM workload-specific restore.",
        "properties": {
          "affinityGroup": {
            "description": "Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.",
            "type": "string"
          },
          "createNewCloudService": {
            "description": "Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same\r\ncloud service as it was at the time of backup.",
            "type": "boolean"
          },
          "diskEncryptionSetId": {
            "description": "DiskEncryptionSet's ID - needed if the VM needs to be encrypted at rest during restore with customer managed key.",
            "type": "string"
          },
          "encryptionDetails": {
            "$ref": "#/components/schemas/EncryptionDetails",
            "description": "Details needed if the VM was encrypted at the time of backup."
          },
          "identityBasedRestoreDetails": {
            "$ref": "#/components/schemas/IdentityBasedRestoreDetails",
            "description": "IaaS VM workload specific restore details for restores using managed identity."
          },
          "identityInfo": {
            "$ref": "#/components/schemas/IdentityInfo",
            "description": "Managed Identity information required to access customer storage account."
          },
          "originalStorageAccountOption": {
            "description": "Original Storage Account Option",
            "type": "boolean"
          },
          "recoveryPointId": {
            "description": "ID of the backup copy to be recovered.",
            "type": "string"
          },
          "recoveryType": {
            "description": "Type of this recovery.",
            "enum": [
              "Invalid",
              "OriginalLocation",
              "AlternateLocation",
              "RestoreDisks",
              "Offline"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RecoveryType"
            }
          },
          "region": {
            "description": "Region in which the virtual machine is restored.",
            "type": "string"
          },
          "restoreDiskLunList": {
            "description": "List of Disk LUNs for partial restore",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "restoreWithManagedDisks": {
            "description": "Flag to denote of an Unmanaged disk VM should be restored with Managed disks.",
            "type": "boolean"
          },
          "sourceResourceId": {
            "description": "Fully qualified ARM ID of the VM which is being recovered.",
            "type": "string"
          },
          "storageAccountId": {
            "description": "Fully qualified ARM ID of the storage account to which the VM has to be restored.",
            "type": "string"
          },
          "subnetId": {
            "description": "Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be\r\n{VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent\r\nthe subnet.",
            "type": "string"
          },
          "targetDomainNameId": {
            "description": "Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic\r\nVirtual Machines.",
            "type": "string"
          },
          "targetResourceGroupId": {
            "description": "This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.\r\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}",
            "type": "string"
          },
          "targetVirtualMachineId": {
            "description": "This is the complete ARM Id of the VM that will be created.\r\nFor e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}",
            "type": "string"
          },
          "virtualNetworkId": {
            "description": "This is the virtual network Id of the vnet that will be attached to the virtual machine.\r\nUser will be validated for join action permissions in the linked access.",
            "type": "string"
          },
          "zones": {
            "description": "Target zone where the VM and its disks should be restored.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaasVMRestoreRequest"
      },
      "IdentityBasedRestoreDetails": {
        "description": "IaaS VM workload specific restore details for restores using managed identity",
        "properties": {
          "objectType": {
            "description": "Gets the class type.",
            "type": "string"
          },
          "targetStorageAccountId": {
            "description": "Fully qualified ARM ID of the target storage account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IdentityInfo": {
        "description": "Encapsulates Managed Identity related information",
        "properties": {
          "isSystemAssignedIdentity": {
            "description": "To differentiate if the managed identity is system assigned or user assigned",
            "type": "boolean"
          },
          "managedIdentityResourceId": {
            "description": "Managed Identity Resource Id\r\nOptional: Might not be required in the case of system assigned managed identity",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstantItemRecoveryTarget": {
        "description": "Target details for file / folder restore.",
        "properties": {
          "clientScripts": {
            "description": "List of client scripts.",
            "items": {
              "$ref": "#/components/schemas/ClientScriptForConnect"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Job": {
        "description": "Defines workload agnostic properties for a job.",
        "discriminator": {
          "propertyName": "jobType"
        },
        "properties": {
          "activityId": {
            "description": "ActivityId of job.",
            "type": "string"
          },
          "backupManagementType": {
            "description": "Backup management type to execute the current job.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "endTime": {
            "description": "The end time.",
            "format": "date-time",
            "type": "string"
          },
          "entityFriendlyName": {
            "description": "Friendly name of the entity on which the current job is executing.",
            "type": "string"
          },
          "jobType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          },
          "operation": {
            "description": "The operation name.",
            "type": "string"
          },
          "startTime": {
            "description": "The start time.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Job status.",
            "type": "string"
          }
        },
        "required": [
          "jobType"
        ],
        "type": "object"
      },
      "JobQueryObject": {
        "description": "Filters to list the jobs.",
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management for the job.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "endTime": {
            "description": "Job has ended at this time. Value is in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "jobId": {
            "description": "JobID represents the job uniquely.",
            "type": "string"
          },
          "operation": {
            "description": "Type of operation.",
            "enum": [
              "Invalid",
              "Register",
              "UnRegister",
              "ConfigureBackup",
              "Backup",
              "Restore",
              "DisableBackup",
              "DeleteBackupData",
              "CrossRegionRestore",
              "Undelete",
              "UpdateCustomerManagedKey"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "JobOperationType"
            }
          },
          "startTime": {
            "description": "Job has started at this time. Value is in UTC.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Status of the job.",
            "enum": [
              "Invalid",
              "InProgress",
              "Completed",
              "Failed",
              "CompletedWithWarnings",
              "Cancelled",
              "Cancelling"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "JobStatus"
            }
          }
        },
        "type": "object"
      },
      "JobResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Defines workload agnostic properties for a job.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/Job",
            "description": "JobResource properties"
          }
        },
        "type": "object"
      },
      "JobResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of Job resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/JobResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KEKDetails": {
        "description": "KEK is encryption key for BEK.",
        "properties": {
          "keyBackupData": {
            "description": "KEK data.",
            "type": "string"
          },
          "keyUrl": {
            "description": "Key is KEK.",
            "type": "string"
          },
          "keyVaultId": {
            "description": "Key Vault ID where this Key is stored.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KPIResourceHealthDetails": {
        "description": "KPI Resource Health Details",
        "properties": {
          "resourceHealthDetails": {
            "description": "Resource Health Status",
            "items": {
              "$ref": "#/components/schemas/ResourceHealthDetails"
            },
            "type": "array"
          },
          "resourceHealthStatus": {
            "description": "Resource Health Status",
            "enum": [
              "Healthy",
              "TransientDegraded",
              "PersistentDegraded",
              "TransientUnhealthy",
              "PersistentUnhealthy",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ResourceHealthStatus"
            }
          }
        },
        "type": "object"
      },
      "KeyAndSecretDetails": {
        "description": "BEK is bitlocker key.\r\nKEK is encryption key for BEK\r\nIf the VM was encrypted then we will store following details :\r\n1. Secret(BEK) - Url + Backup Data + vaultId.\r\n2. Key(KEK) - Url + Backup Data + vaultId.\r\n3. EncryptionMechanism\r\nBEK and KEK can potentially have different vault ids.",
        "properties": {
          "bekDetails": {
            "$ref": "#/components/schemas/BEKDetails",
            "description": "BEK is bitlocker encryption key."
          },
          "encryptionMechanism": {
            "description": "Encryption mechanism: None/ SinglePass/ DoublePass",
            "type": "string"
          },
          "kekDetails": {
            "$ref": "#/components/schemas/KEKDetails",
            "description": "KEK is encryption key for BEK."
          }
        },
        "type": "object"
      },
      "MabErrorInfo": {
        "description": "MAB workload-specific error information.",
        "properties": {
          "errorString": {
            "description": "Localized error string.",
            "readOnly": true,
            "type": "string"
          },
          "recommendations": {
            "description": "List of localized recommendations.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MabFileFolderProtectedItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectedItem"
          }
        ],
        "description": "MAB workload-specific backup item.",
        "properties": {
          "computerName": {
            "description": "Name of the computer associated with this backup item.",
            "type": "string"
          },
          "deferredDeleteSyncTimeInUTC": {
            "description": "Sync time for deferred deletion in UTC",
            "format": "int64",
            "type": "integer"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/MabFileFolderProtectedItemExtendedInfo",
            "description": "Additional information with this backup item."
          },
          "friendlyName": {
            "description": "Friendly name of this backup item.",
            "type": "string"
          },
          "lastBackupStatus": {
            "description": "Status of last backup operation.",
            "type": "string"
          },
          "lastBackupTime": {
            "description": "Timestamp of the last backup operation on this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "protectionState": {
            "description": "Protected, ProtectionStopped, IRPending or ProtectionError",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MabFileFolderProtectedItem"
      },
      "MabFileFolderProtectedItemExtendedInfo": {
        "description": "Additional information on the backed up item.",
        "properties": {
          "lastRefreshedAt": {
            "description": "Last time when the agent data synced to service.",
            "format": "date-time",
            "type": "string"
          },
          "oldestRecoveryPoint": {
            "description": "The oldest backup copy available.",
            "format": "date-time",
            "type": "string"
          },
          "recoveryPointCount": {
            "description": "Number of backup copies associated with the backup item.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MabJob": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Job"
          }
        ],
        "description": "MAB workload-specific job.",
        "properties": {
          "actionsInfo": {
            "description": "The state/actions applicable on jobs like cancel/retry.",
            "items": {
              "enum": [
                "Invalid",
                "Cancellable",
                "Retriable"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "JobSupportedAction"
              }
            },
            "type": "array"
          },
          "duration": {
            "description": "Time taken by job to run.",
            "format": "duration",
            "type": "string"
          },
          "errorDetails": {
            "description": "The errors.",
            "items": {
              "$ref": "#/components/schemas/MabErrorInfo"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/MabJobExtendedInfo",
            "description": "Additional information on the job."
          },
          "mabServerName": {
            "description": "Name of server protecting the DS.",
            "type": "string"
          },
          "mabServerType": {
            "description": "Server type of MAB container.",
            "enum": [
              "Invalid",
              "Unknown",
              "IaasVMContainer",
              "IaasVMServiceContainer",
              "DPMContainer",
              "AzureBackupServerContainer",
              "MABContainer",
              "Cluster",
              "AzureSqlContainer",
              "Windows",
              "VCenter",
              "VMAppContainer",
              "SQLAGWorkLoadContainer",
              "StorageContainer",
              "GenericContainer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MabServerType"
            }
          },
          "workloadType": {
            "description": "Workload type of backup item.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MabJob"
      },
      "MabJobExtendedInfo": {
        "description": "Additional information for the MAB workload-specific job.",
        "properties": {
          "dynamicErrorMessage": {
            "description": "Non localized error message specific to this job.",
            "type": "string"
          },
          "propertyBag": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The job properties.",
            "type": "object"
          },
          "tasksList": {
            "description": "List of tasks for this job.",
            "items": {
              "$ref": "#/components/schemas/MabJobTaskDetails"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MabJobTaskDetails": {
        "description": "MAB workload-specific job task details.",
        "properties": {
          "duration": {
            "description": "Time elapsed for task.",
            "format": "duration",
            "type": "string"
          },
          "endTime": {
            "description": "The end time.",
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "description": "The start time.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "The status.",
            "type": "string"
          },
          "taskId": {
            "description": "The task display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NameInfo": {
        "description": "The name of usage.",
        "properties": {
          "localizedValue": {
            "description": "Localized value of usage.",
            "type": "string"
          },
          "value": {
            "description": "Value of usage.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "NewErrorResponse": {
        "description": "The resource management error response.",
        "properties": {
          "error": {
            "description": "The error object.",
            "properties": {
              "additionalInfo": {
                "description": "The error additional info.",
                "items": {
                  "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/ErrorAdditionalInfo"
                },
                "readOnly": true,
                "type": "array"
              },
              "code": {
                "description": "The error code.",
                "readOnly": true,
                "type": "string"
              },
              "details": {
                "description": "The error details.",
                "items": {
                  "$ref": "#/components/schemas/NewErrorResponse"
                },
                "readOnly": true,
                "type": "array"
              },
              "message": {
                "description": "The error message.",
                "readOnly": true,
                "type": "string"
              },
              "target": {
                "description": "The error target.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "OperationStatus": {
        "description": "Operation status.",
        "properties": {
          "endTime": {
            "description": "Operation end time. Format: ISO-8601.",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/OperationStatusError",
            "description": "Error information related to this operation."
          },
          "id": {
            "description": "ID of the operation.",
            "type": "string"
          },
          "name": {
            "description": "Name of the operation.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo",
            "description": "Additional information associated with this operation."
          },
          "startTime": {
            "description": "Operation start time. Format: ISO-8601.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Operation status.",
            "enum": [
              "Invalid",
              "InProgress",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationStatusValues"
            }
          }
        },
        "type": "object"
      },
      "OperationStatusError": {
        "description": "Error information associated with operation status call.",
        "properties": {
          "code": {
            "description": "Error code of the operation failure.",
            "type": "string"
          },
          "message": {
            "description": "Error message displayed if the operation failure.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationStatusExtendedInfo": {
        "description": "Base class for additional information of operation status.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "OperationStatusJobExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status job extended info.",
        "properties": {
          "jobId": {
            "description": "ID of the job created for this protected item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
      },
      "OperationStatusJobsExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status extended info for list of jobs.",
        "properties": {
          "failedJobsError": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Stores all the failed jobs along with the corresponding error codes.",
            "type": "object"
          },
          "jobIds": {
            "description": "IDs of the jobs created for the protected item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
      },
      "OperationStatusProvisionILRExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status extended info for ILR provision action.",
        "properties": {
          "recoveryTarget": {
            "$ref": "#/components/schemas/InstantItemRecoveryTarget",
            "description": "Target details for file / folder restore."
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
      },
      "OperationStatusRecoveryPointExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status extended info for Updated Recovery Point.",
        "properties": {
          "deletedBackupItemVersion": {
            "description": "In case the share is in soft-deleted state, populate this field with deleted backup item",
            "type": "string"
          },
          "updatedRecoveryPoint": {
            "$ref": "#/components/schemas/RecoveryPoint",
            "description": "Recovery Point info with updated source snapshot URI"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusRecoveryPointExtendedInfo"
      },
      "PointInTimeRange": {
        "description": "Provides details for log ranges",
        "properties": {
          "endTime": {
            "description": "End time of the time range for log recovery.",
            "format": "date-time",
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the time range for log recovery.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtectedItem": {
        "description": "Base class for backup items.",
        "discriminator": {
          "propertyName": "protectedItemType"
        },
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management for the backed up item.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "backupSetName": {
            "description": "Name of the backup set the backup item belongs to",
            "type": "string"
          },
          "containerName": {
            "description": "Unique name of container",
            "type": "string"
          },
          "createMode": {
            "description": "Create mode to indicate recovery of existing soft deleted data source or creation of new data source.",
            "enum": [
              "Invalid",
              "Default",
              "Recover"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CreateMode"
            }
          },
          "deferredDeleteTimeInUTC": {
            "description": "Time for deferred deletion in UTC",
            "format": "date-time",
            "type": "string"
          },
          "deferredDeleteTimeRemaining": {
            "description": "Time remaining before the DS marked for deferred delete is permanently deleted",
            "type": "string"
          },
          "isDeferredDeleteScheduleUpcoming": {
            "description": "Flag to identify whether the deferred deleted DS is to be purged soon",
            "type": "boolean"
          },
          "isRehydrate": {
            "description": "Flag to identify that deferred deleted DS is to be moved into Pause state",
            "type": "boolean"
          },
          "isScheduledForDeferredDelete": {
            "description": "Flag to identify whether the DS is scheduled for deferred delete",
            "type": "boolean"
          },
          "lastRecoveryPoint": {
            "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
            "format": "date-time",
            "type": "string"
          },
          "policyId": {
            "description": "ID of the backup policy with which this item is backed up.",
            "type": "string"
          },
          "protectedItemType": {
            "description": "backup item type.",
            "type": "string"
          },
          "resourceGuardOperationRequests": {
            "description": "ResourceGuardOperationRequests on which LAC check will be performed",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceResourceId": {
            "description": "ARM ID of the resource to be backed up.",
            "type": "string"
          },
          "workloadType": {
            "description": "Type of workload this item represents.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataSourceType"
            }
          }
        },
        "required": [
          "protectedItemType"
        ],
        "type": "object"
      },
      "ProtectedItemQueryObject": {
        "description": "Filters to list backup items.",
        "properties": {
          "backupEngineName": {
            "description": "Backup Engine name",
            "type": "string"
          },
          "backupManagementType": {
            "description": "Backup management type for the backed up item.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "backupSetName": {
            "description": "Name of the backup set.",
            "type": "string"
          },
          "containerName": {
            "description": "Name of the container.",
            "type": "string"
          },
          "fabricName": {
            "description": "Name of the fabric.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of protected item",
            "type": "string"
          },
          "healthState": {
            "description": "Health State for the backed up item.",
            "enum": [
              "Passed",
              "ActionRequired",
              "ActionSuggested",
              "Invalid"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "HealthState"
            }
          },
          "itemType": {
            "description": "Type of workload this item represents.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataSourceType"
            }
          },
          "policyName": {
            "description": "Backup policy name associated with the backup item.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtectedItemResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for backup items.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProtectedItem",
            "description": "ProtectedItemResource properties"
          }
        },
        "type": "object"
      },
      "ProtectedItemResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of ProtectedItem resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/ProtectedItemResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecoveryPoint": {
        "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "RecoveryPointDiskConfiguration": {
        "description": "Disk configuration",
        "properties": {
          "excludedDiskList": {
            "description": "Information of disks excluded from backup",
            "items": {
              "$ref": "#/components/schemas/DiskInformation"
            },
            "type": "array"
          },
          "includedDiskList": {
            "description": "Information of disks included in backup",
            "items": {
              "$ref": "#/components/schemas/DiskInformation"
            },
            "type": "array"
          },
          "numberOfDisksAttachedToVm": {
            "description": "Number of disks attached to the VM",
            "format": "int32",
            "type": "integer"
          },
          "numberOfDisksIncludedInBackup": {
            "description": "Number of disks included in backup",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RecoveryPointMoveReadinessInfo": {
        "properties": {
          "additionalInfo": {
            "type": "string"
          },
          "isReadyForMove": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RecoveryPointResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RecoveryPoint",
            "description": "RecoveryPointResource properties"
          }
        },
        "type": "object"
      },
      "RecoveryPointResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of RecoveryPoint resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/RecoveryPointResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecoveryPointTierInformation": {
        "description": "Recovery point tier information.",
        "properties": {
          "extendedInfo": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Recovery point tier status.",
            "type": "object"
          },
          "status": {
            "description": "Recovery point tier status.",
            "enum": [
              "Invalid",
              "Valid",
              "Disabled",
              "Deleted",
              "Rehydrated"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "RecoveryPointTierStatus"
            }
          },
          "type": {
            "description": "Recovery point tier type.",
            "enum": [
              "Invalid",
              "InstantRP",
              "HardenedRP",
              "ArchivedRP"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "RecoveryPointTierType"
            }
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "ARM Resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "eTag": {
            "description": "Optional ETag.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id represents the complete path to the resource.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "Resource name associated with the resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceHealthDetails": {
        "description": "Health Details for backup items.",
        "properties": {
          "code": {
            "description": "Health Code",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "message": {
            "description": "Health Message",
            "readOnly": true,
            "type": "string"
          },
          "recommendations": {
            "description": "Health Recommended Actions",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "title": {
            "description": "Health Title",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ResourceList": {
        "description": "Base for all lists of resources.",
        "properties": {
          "nextLink": {
            "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestoreFileSpecs": {
        "description": "Restore file specs like file path, type and target folder path info.",
        "properties": {
          "fileSpecType": {
            "description": "Indicates what the Path variable stands for",
            "type": "string"
          },
          "path": {
            "description": "Source File/Folder path",
            "type": "string"
          },
          "targetFolderPath": {
            "description": "Destination folder path in target FileShare",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RestoreRequest": {
        "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "SQLDataDirectory": {
        "description": "SQLDataDirectory info",
        "properties": {
          "logicalName": {
            "description": "Logical name of the file",
            "type": "string"
          },
          "path": {
            "description": "File path",
            "type": "string"
          },
          "type": {
            "description": "Type of data directory mapping",
            "enum": [
              "Invalid",
              "Data",
              "Log"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SQLDataDirectoryType"
            }
          }
        },
        "type": "object"
      },
      "SQLDataDirectoryMapping": {
        "description": "Encapsulates information regarding data directory",
        "properties": {
          "mappingType": {
            "description": "Type of data directory mapping",
            "enum": [
              "Invalid",
              "Data",
              "Log"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SQLDataDirectoryType"
            }
          },
          "sourceLogicalName": {
            "description": "Restore source logical name path",
            "type": "string"
          },
          "sourcePath": {
            "description": "Restore source path",
            "type": "string"
          },
          "targetPath": {
            "description": "Target path",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetAFSRestoreInfo": {
        "description": "Target Azure File Share Info.",
        "properties": {
          "name": {
            "description": "File share name",
            "type": "string"
          },
          "targetResourceId": {
            "description": "Target file share resource ARM ID",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetRestoreInfo": {
        "description": "Details about target workload during restore operation.",
        "properties": {
          "containerId": {
            "description": "Resource Id name of the container in which Target DataBase resides",
            "type": "string"
          },
          "databaseName": {
            "description": "Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana",
            "type": "string"
          },
          "overwriteOption": {
            "description": "Can Overwrite if Target DataBase already exists",
            "enum": [
              "Invalid",
              "FailOnConflict",
              "Overwrite"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OverwriteOptions"
            }
          },
          "targetDirectoryForFileRestore": {
            "description": "Target directory location for restore as files.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadCrrAccessToken": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CrrAccessToken"
          }
        ],
        "properties": {
          "containerId": {
            "description": "Container Id",
            "type": "string"
          },
          "policyId": {
            "description": "Policy Id",
            "type": "string"
          },
          "policyName": {
            "description": "Policy Name",
            "type": "string"
          },
          "protectableObjectContainerHostOsName": {
            "type": "string"
          },
          "protectableObjectFriendlyName": {
            "type": "string"
          },
          "protectableObjectParentLogicalContainerName": {
            "type": "string"
          },
          "protectableObjectProtectionState": {
            "type": "string"
          },
          "protectableObjectUniqueName": {
            "type": "string"
          },
          "protectableObjectWorkloadType": {
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "WorkloadCrrAccessToken"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account."
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}