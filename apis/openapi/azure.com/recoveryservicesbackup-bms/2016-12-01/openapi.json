{
  "openapi": "3.0.0",
  "info": {
    "title": "RecoveryServicesBackupClient",
    "version": "2016-12-01",
    "x-ms-code-generation-settings": {
      "internalConstructors": false
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/recoveryservicesbackup/resource-manager/Microsoft.RecoveryServices/stable/2016-12-01/bms.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupEngineBaseResourceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupEngines"
        ],
        "description": "Backup management servers registered to Recovery Services Vault. Returns a pageable list of servers.",
        "operationId": "BackupEngines_List",
        "x-ms-examples": {
          "List Dpm/AzureBackupServer/Lajolla Backup Engines": {
            "$ref": "./examples/Dpm/BackupEngines_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSBackupEnginesQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines/{backupEngineName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Name of the backup management server.",
            "in": "path",
            "name": "backupEngineName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupEngineBaseResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupEngines"
        ],
        "description": "Returns backup management server registered to Recovery Services Vault.",
        "operationId": "BackupEngines_Get",
        "x-ms-examples": {
          "Get Dpm/AzureBackupServer/Lajolla Backup Engine Details": {
            "$ref": "./examples/Dpm/BackupEngines_Get.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSBackupEngineQueryObject"
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/operationResults/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operation ID associated with the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionContainerRefreshOperationResults"
        ],
        "description": "Provides the result of the refresh operation triggered by the BeginRefresh operation.",
        "operationId": "ProtectionContainerRefreshOperationResults_Get",
        "x-ms-examples": {
          "Azure Vm Discovery Operation Result": {
            "$ref": "./examples/Common/RefreshContainers_OperationResults.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectableContainers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectableContainerResourceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ProtectableContainers"
        ],
        "description": "Lists the containers that can be registered to Recovery Services Vault.",
        "operationId": "ProtectableContainers_List",
        "x-ms-examples": {
          "List protectable items with backupManagementType filter as AzureStorage": {
            "$ref": "./examples/AzureStorage/ProtectableContainers_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSContainerQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Name of the fabric where the container belongs.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container which needs to be unregistered from the Recovery Services Vault.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Unregisters the given container from your Recovery Services Vault. This is an asynchronous operation. To determine\r\nwhether the backend service has finished processing the request, call Get Container Operation Result API.",
        "operationId": "ProtectionContainers_Unregister",
        "x-ms-examples": {
          "Unregister Protection Container": {
            "$ref": "./examples/AzureWorkload/ProtectionContainers_Unregister.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Name of the fabric where the container belongs.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container whose details need to be fetched.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionContainerResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Gets details of the specific container registered to your Recovery Services Vault.",
        "operationId": "ProtectionContainers_Get",
        "x-ms-examples": {
          "Get Protection Container Details": {
            "$ref": "./examples/AzureWorkload/ProtectionContainers_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container to be registered.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionContainerResource"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Registers the container with Recovery Services vault.\r\nThis is an asynchronous operation. To track the operation status, use location header to call get latest status of\r\nthe operation.",
        "operationId": "ProtectionContainers_Register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProtectionContainerResource"
              }
            }
          },
          "description": "Request body for operation",
          "required": true
        },
        "x-ms-examples": {
          "RegisterAzure Storage ProtectionContainers": {
            "$ref": "./examples/AzureStorage/ProtectionContainers_Register.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/inquire": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric Name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container in which inquiry needs to be triggered.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "description": "This is an async operation and the results should be tracked using location header or Azure-async-url.",
        "operationId": "ProtectionContainers_Inquire",
        "summary": "Inquires all the protectable items under the given container.",
        "x-ms-examples": {
          "Inquire Azure Storage Protection Containers": {
            "$ref": "./examples/AzureStorage/ProtectionContainers_Inquire.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSContainersInquiryQueryObject"
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/items": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the container.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadItemResourceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupWorkloadItems"
        ],
        "description": "Provides a pageable list of workload item of a specific container according to the query filter and the pagination\r\nparameters.",
        "operationId": "BackupWorkloadItems_List",
        "x-ms-examples": {
          "List Workload Items in Container": {
            "$ref": "./examples/AzureWorkload/BackupWorkloadItems_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSWorkloadItemQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/operationResults/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name whose information should be fetched.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operation ID which represents the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionContainerResource"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionContainerOperationResults"
        ],
        "description": "Fetches the result of any operation on the container.",
        "operationId": "ProtectionContainerOperationResults_Get",
        "x-ms-examples": {
          "Get Azure Storage Protection Container Operation Result": {
            "$ref": "./examples/AzureStorage/ProtectionContainers_Inquire_Result.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/backup": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Backup item for which backup needs to be triggered.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Backups"
        ],
        "description": "Triggers backup for specified backed up item. This is an asynchronous operation. To know the status of the\r\noperation, call GetProtectedItemOperationResult API.",
        "operationId": "Backups_Trigger",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequestResource"
              }
            }
          },
          "description": "resource backup request",
          "required": true
        },
        "x-ms-examples": {
          "Trigger Backup": {
            "$ref": "./examples/Common/TriggerBackup_Post.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationsStatus/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Backup item name whose details are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OperationID represents the operation whose status needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ProtectedItemOperationStatuses"
        ],
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed\r\nor failed. You can refer to the OperationStatus enum for all the possible states of the operation. Some operations\r\ncreate jobs. This method returns the list of jobs associated with the operation.",
        "operationId": "ProtectedItemOperationStatuses_Get",
        "x-ms-examples": {
          "Get Operation Status of Protected Vm": {
            "$ref": "./examples/AzureIaasVm/ProtectedItemOperationStatus.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/provisionInstantItemRecovery": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up items.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name associated with the backed up items.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Backed up item name whose files/folders are to be restored.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Recovery point ID which represents backed up data. iSCSI connection will be provisioned\r\nfor this backed up data.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ItemLevelRecoveryConnections"
        ],
        "description": "Provisions a script which invokes an iSCSI connection to the backup data. Executing this script opens a file\r\nexplorer displaying all the recoverable files and folders. This is an asynchronous operation. To know the status of\r\nprovisioning, call GetProtectedItemOperationResult API.",
        "operationId": "ItemLevelRecoveryConnections_Provision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ILRRequestResource"
              }
            }
          },
          "description": "resource ILR request",
          "required": true
        },
        "x-ms-examples": {
          "Provision Instant Item Level Recovery for Azure Vm": {
            "$ref": "./examples/AzureIaasVm/Provision_Ilr.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/revokeInstantItemRecovery": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up items.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Container name associated with the backed up items.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Backed up item name whose files/folders are to be restored.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Recovery point ID which represents backed up data. iSCSI connection will be revoked for\r\nthis backed up data.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ItemLevelRecoveryConnections"
        ],
        "description": "Revokes an iSCSI connection which can be used to download a script. Executing this script opens a file explorer\r\ndisplaying all recoverable files and folders. This is an asynchronous operation.",
        "operationId": "ItemLevelRecoveryConnections_Revoke",
        "x-ms-examples": {
          "Revoke Instant Item Level Recovery for Azure Vm": {
            "$ref": "./examples/AzureIaasVm/Revoke_Ilr.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "description": "Discovers all the containers in the subscription that can be backed up to Recovery Services Vault. This is an\r\nasynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.",
        "operationId": "ProtectionContainers_Refresh",
        "x-ms-examples": {
          "Trigger Azure Vm Discovery": {
            "$ref": "./examples/Common/RefreshContainers.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSRefreshContainersQueryObject"
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperationResults/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OperationID which represents the operation.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "BackupOperationResults"
        ],
        "description": "Provides the status of the delete operations such as deleting backed up item. Once the operation has started, the\r\nstatus code in the response would be Accepted. It will continue to be in this state till it reaches completion. On\r\nsuccessful completion, the status code will be OK. This method expects OperationID as an argument. OperationID is\r\npart of the Location header of the operation response.",
        "operationId": "BackupOperationResults_Get",
        "x-ms-examples": {
          "Get Result for Protected Item Delete Operation": {
            "$ref": "./examples/Common/ProtectedItem_Delete_OperationResult.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperations/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OperationID which represents the operation.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupOperationStatuses"
        ],
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed\r\nor failed. You can refer to the OperationStatus enum for all the possible states of an operation. Some operations\r\ncreate jobs. This method returns the list of jobs when the operation is complete.",
        "operationId": "BackupOperationStatuses_Get",
        "x-ms-examples": {
          "Get Protected Item Delete Operation Status": {
            "$ref": "./examples/Common/ProtectedItem_Delete_OperationStatus.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy to be deleted.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionPolicies"
        ],
        "description": "Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of the\r\noperation can be fetched using GetPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_Delete",
        "x-ms-examples": {
          "Delete Azure Vm Protection Policy": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicies_Delete.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operations/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy name whose operation's status needs to be fetched.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Operation ID which represents an operation whose status needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ProtectionPolicyOperationStatuses"
        ],
        "description": "Provides the status of the asynchronous operations like backup, restore. The status can be in progress, completed\r\nor failed. You can refer to the Operation Status enum for all the possible states of an operation. Some operations\r\ncreate jobs. This method returns the list of jobs associated with operation.",
        "operationId": "ProtectionPolicyOperationStatuses_Get",
        "x-ms-examples": {
          "Get Protection Policy Operation Status": {
            "$ref": "./examples/AzureIaasVm/ProtectionPolicyOperationStatuses_Get.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadProtectableItemResourceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupProtectableItems"
        ],
        "description": "Provides a pageable list of protectable objects within your subscription according to the query filter and the\r\npagination parameters.",
        "operationId": "BackupProtectableItems_List",
        "x-ms-examples": {
          "List protectable items with backupManagementType filter as AzureIaasVm": {
            "$ref": "./examples/AzureIaasVm/BackupProtectableItems_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSPOQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProtectionContainerResourceList"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupProtectionContainers"
        ],
        "description": "Lists the containers registered to Recovery Services Vault.",
        "operationId": "BackupProtectionContainers_List",
        "x-ms-examples": {
          "List Backup Protection Containers": {
            "$ref": "./examples/AzureStorage/ProtectionContainers_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/BMSContainerQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupSecurityPIN": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInformation"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "SecurityPINs"
        ],
        "description": "Get the security PIN.",
        "operationId": "SecurityPINs_Get",
        "x-ms-examples": {
          "Get Vault Security Pin": {
            "$ref": "./examples/Common/BackupSecurityPin_Get.json"
          }
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupstorageconfig/vaultstorageconfig": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResourceConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Fetches resource storage config.",
        "operationId": "BackupResourceStorageConfigs_Get",
        "x-ms-examples": {
          "Get Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Updates vault storage model type.",
        "operationId": "BackupResourceStorageConfigs_Patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupResourceConfigResource"
              }
            }
          },
          "description": "Vault storage config request",
          "required": true
        },
        "x-ms-examples": {
          "Update Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Patch.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/VaultName"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupResourceConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "BackupResourceStorageConfigs"
        ],
        "description": "Updates vault storage model type.",
        "operationId": "BackupResourceStorageConfigs_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupResourceConfigResource"
              }
            }
          },
          "description": "Vault storage config request",
          "required": true
        },
        "x-ms-examples": {
          "Update Vault Storage Configuration": {
            "$ref": "./examples/Common/BackupStorageConfig_Put.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersion": {
        "description": "Client Api Version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "ResourceGroupName": {
        "description": "The name of the resource group where the recovery services vault is present.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionId": {
        "description": "The subscription Id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "VaultName": {
        "description": "The name of the recovery services vault.",
        "in": "path",
        "name": "vaultName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "BackupResourceConfigResource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BackupResourceConfigResource"
            }
          }
        },
        "description": "Vault storage config request",
        "required": true
      }
    },
    "schemas": {
      "AzureBackupServerContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DpmContainer"
          }
        ],
        "description": "AzureBackupServer (DPMVenus) workload-specific protection container.",
        "type": "object",
        "x-ms-discriminator-value": "AzureBackupServerContainer"
      },
      "AzureBackupServerEngine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupEngineBase"
          }
        ],
        "description": "Backup engine type when Azure Backup Server is used to manage the backups.",
        "type": "object",
        "x-ms-discriminator-value": "AzureBackupServerEngine"
      },
      "AzureFileShareBackupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupRequest"
          }
        ],
        "description": "AzureFileShare workload-specific backup request.",
        "properties": {
          "recoveryPointExpiryTimeInUTC": {
            "description": "Backup copy will expire after the time specified (UTC).",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShareBackupRequest"
      },
      "AzureFileShareProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkloadProtectableItem"
          }
        ],
        "description": "Protectable item for Azure Fileshare workloads.",
        "properties": {
          "azureFileShareType": {
            "description": "File Share type XSync or XSMB.",
            "enum": [
              "Invalid",
              "XSMB",
              "XSync"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AzureFileShareType"
            }
          },
          "parentContainerFabricId": {
            "description": "Full Fabric ID of container to which this protectable item belongs. For example, ARM ID.",
            "type": "string"
          },
          "parentContainerFriendlyName": {
            "description": "Friendly name of container to which this protectable item belongs.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShare"
      },
      "AzureFileShareProvisionILRRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ILRRequest"
          }
        ],
        "description": "Update snapshot Uri with the correct friendly Name of the source Azure file share.",
        "properties": {
          "recoveryPointId": {
            "description": "Recovery point ID.",
            "type": "string"
          },
          "sourceResourceId": {
            "description": "Source Storage account ARM Id",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureFileShareProvisionILRRequest"
      },
      "AzureIaaSClassicComputeVMContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IaaSVMContainer"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing a classic virtual machine.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
      },
      "AzureIaaSClassicComputeVMProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IaaSVMProtectableItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
      },
      "AzureIaaSComputeVMContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IaaSVMContainer"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
      },
      "AzureIaaSComputeVMProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IaaSVMProtectableItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
      },
      "AzureSQLAGWorkloadContainerProtectionContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadContainer"
          }
        ],
        "description": "Container for SQL workloads under SQL Availability Group.",
        "type": "object",
        "x-ms-discriminator-value": "SQLAGWorkLoadContainer"
      },
      "AzureSqlContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "Azure Sql workload-specific container.",
        "type": "object",
        "x-ms-discriminator-value": "AzureSqlContainer"
      },
      "AzureStorageContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "Azure Storage Account workload-specific container.",
        "properties": {
          "protectedItemCount": {
            "description": "Number of items backed up in this container.",
            "format": "int64",
            "type": "integer"
          },
          "resourceGroup": {
            "description": "Resource group name of Recovery Services Vault.",
            "type": "string"
          },
          "sourceResourceId": {
            "description": "Fully qualified ARM url.",
            "type": "string"
          },
          "storageAccountVersion": {
            "description": "Storage account version.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "StorageContainer"
      },
      "AzureStorageProtectableContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectableContainer"
          }
        ],
        "description": "Azure Storage-specific protectable containers",
        "type": "object",
        "x-ms-discriminator-value": "StorageContainer"
      },
      "AzureVMAppContainerProtectableContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectableContainer"
          }
        ],
        "description": "Azure workload-specific container",
        "type": "object",
        "x-ms-discriminator-value": "VMAppContainer"
      },
      "AzureVMAppContainerProtectionContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureWorkloadContainer"
          }
        ],
        "description": "Container for SQL workloads under Azure Virtual Machines.",
        "type": "object",
        "x-ms-discriminator-value": "VMAppContainer"
      },
      "AzureVmWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item.",
        "properties": {
          "isAutoProtectable": {
            "description": "Indicates if workload item is auto-protectable",
            "type": "boolean"
          },
          "parentName": {
            "description": "Name for instance or AG",
            "type": "string"
          },
          "serverName": {
            "description": "Host/Cluster Name for instance or AG",
            "type": "string"
          },
          "subWorkloadItemCount": {
            "description": "For instance or AG, indicates number of DB's to be protected",
            "format": "int32",
            "type": "integer"
          },
          "subinquireditemcount": {
            "description": "For instance or AG, indicates number of DB's present",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadItem"
      },
      "AzureVmWorkloadProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item.",
        "properties": {
          "isAutoProtectable": {
            "description": "Indicates if protectable item is auto-protectable",
            "type": "boolean"
          },
          "isAutoProtected": {
            "description": "Indicates if protectable item is auto-protected",
            "type": "boolean"
          },
          "parentName": {
            "description": "Name for instance or AG",
            "type": "string"
          },
          "parentUniqueName": {
            "description": "Parent Unique Name is added to provide the service formatted URI Name of the Parent\r\nOnly Applicable for data bases where the parent would be either Instance or a SQL AG.",
            "type": "string"
          },
          "prebackupvalidation": {
            "$ref": "#/components/schemas/PreBackupValidation",
            "description": "Pre-backup validation for protectable objects"
          },
          "serverName": {
            "description": "Host/Cluster Name for instance or AG",
            "type": "string"
          },
          "subinquireditemcount": {
            "description": "For instance or AG, indicates number of DB's present",
            "format": "int32",
            "type": "integer"
          },
          "subprotectableitemcount": {
            "description": "For instance or AG, indicates number of DB's to be protected",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureVmWorkloadProtectableItem"
      },
      "AzureVmWorkloadSAPAseDatabaseWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SAP ASE Database.",
        "type": "object",
        "x-ms-discriminator-value": "SAPAseDatabase"
      },
      "AzureVmWorkloadSAPAseSystemProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SAP ASE System.",
        "type": "object",
        "x-ms-discriminator-value": "SAPAseSystem"
      },
      "AzureVmWorkloadSAPAseSystemWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SAP ASE System.",
        "type": "object",
        "x-ms-discriminator-value": "SAPAseSystem"
      },
      "AzureVmWorkloadSAPHanaDatabaseProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SAP HANA Database.",
        "type": "object",
        "x-ms-discriminator-value": "SAPHanaDatabase"
      },
      "AzureVmWorkloadSAPHanaDatabaseWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SAP HANA Database.",
        "type": "object",
        "x-ms-discriminator-value": "SAPHanaDatabase"
      },
      "AzureVmWorkloadSAPHanaSystemProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SAP HANA System.",
        "type": "object",
        "x-ms-discriminator-value": "SAPHanaSystem"
      },
      "AzureVmWorkloadSAPHanaSystemWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SAP HANA System.",
        "type": "object",
        "x-ms-discriminator-value": "SAPHanaSystem"
      },
      "AzureVmWorkloadSQLAvailabilityGroupProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SQL Availability Group.",
        "type": "object",
        "x-ms-discriminator-value": "SQLAvailabilityGroupContainer"
      },
      "AzureVmWorkloadSQLDatabaseProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SQL Database.",
        "type": "object",
        "x-ms-discriminator-value": "SQLDataBase"
      },
      "AzureVmWorkloadSQLDatabaseWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SQL Database.",
        "type": "object",
        "x-ms-discriminator-value": "SQLDataBase"
      },
      "AzureVmWorkloadSQLInstanceProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadProtectableItem"
          }
        ],
        "description": "Azure VM workload-specific protectable item representing SQL Instance.",
        "type": "object",
        "x-ms-discriminator-value": "SQLInstance"
      },
      "AzureVmWorkloadSQLInstanceWorkloadItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AzureVmWorkloadItem"
          }
        ],
        "description": "Azure VM workload-specific workload item representing SQL Instance.",
        "properties": {
          "dataDirectoryPaths": {
            "description": "Data Directory Paths for default directories",
            "items": {
              "$ref": "#/components/schemas/SQLDataDirectory"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "SQLInstance"
      },
      "AzureWorkloadBackupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupRequest"
          }
        ],
        "description": "AzureWorkload workload-specific backup request.",
        "properties": {
          "backupType": {
            "description": "Type of backup, viz. Full, Differential, Log or CopyOnlyFull",
            "enum": [
              "Invalid",
              "Full",
              "Differential",
              "Log",
              "CopyOnlyFull"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "backupType"
            }
          },
          "enableCompression": {
            "description": "Bool for Compression setting",
            "type": "boolean"
          },
          "recoveryPointExpiryTimeInUTC": {
            "description": "Backup copy will expire after the time specified (UTC).",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadBackupRequest"
      },
      "AzureWorkloadContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "Container for the workloads running inside Azure Compute or Classic Compute.",
        "properties": {
          "extendedInfo": {
            "$ref": "#/components/schemas/AzureWorkloadContainerExtendedInfo",
            "description": "Additional details of a workload container."
          },
          "lastUpdatedTime": {
            "description": "Time stamp when this container was updated.",
            "format": "date-time",
            "type": "string"
          },
          "operationType": {
            "description": "Re-Do Operation",
            "enum": [
              "Invalid",
              "Register",
              "Reregister"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationType"
            }
          },
          "sourceResourceId": {
            "description": "ARM ID of the virtual machine represented by this Azure Workload Container",
            "type": "string"
          },
          "workloadType": {
            "description": "Workload type for which registration was sent.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureWorkloadContainer"
      },
      "AzureWorkloadContainerExtendedInfo": {
        "description": "Extended information of the container.",
        "properties": {
          "hostServerName": {
            "description": "Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.",
            "type": "string"
          },
          "inquiryInfo": {
            "$ref": "#/components/schemas/InquiryInfo",
            "description": "Inquiry Status for the container."
          },
          "nodesList": {
            "description": "List of the nodes in case of distributed container.",
            "items": {
              "$ref": "#/components/schemas/DistributedNodesInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BMSBackupEngineQueryObject": {
        "description": "Query parameters to fetch list of backup engines.",
        "properties": {
          "expand": {
            "description": "attribute to add extended info",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BMSBackupEnginesQueryObject": {
        "description": "Query parameters to fetch list of backup engines.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type for the backup engine.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "expand": {
            "description": "Attribute to add extended info.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of the backup engine.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BMSContainerQueryObject": {
        "description": "The query filters that can be used with the list containers API.",
        "properties": {
          "backupEngineName": {
            "description": "Backup engine name",
            "type": "string"
          },
          "backupManagementType": {
            "description": "Backup management type for this container.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "containerType": {
            "description": "Type of container for filter",
            "enum": [
              "Invalid",
              "Unknown",
              "IaasVMContainer",
              "IaasVMServiceContainer",
              "DPMContainer",
              "AzureBackupServerContainer",
              "MABContainer",
              "Cluster",
              "AzureSqlContainer",
              "Windows",
              "VCenter",
              "VMAppContainer",
              "SQLAGWorkLoadContainer",
              "StorageContainer",
              "GenericContainer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ContainerType"
            }
          },
          "fabricName": {
            "description": "Fabric name for filter",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of this container.",
            "type": "string"
          },
          "status": {
            "description": "Status of registration of this container with the Recovery Services Vault.",
            "type": "string"
          }
        },
        "required": [
          "backupManagementType"
        ],
        "type": "object"
      },
      "BMSContainersInquiryQueryObject": {
        "description": "The query filters that can be used with the inquire container API.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type for this container.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "workloadType": {
            "description": "Workload type for this container.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          }
        },
        "type": "object"
      },
      "BMSPOQueryObject": {
        "description": "Filters to list items that can be backed up.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureSql",
              "AzureBackupServer",
              "AzureWorkload",
              "AzureStorage",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "containerName": {
            "description": "Full name of the container whose Protectable Objects should be returned.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name.",
            "type": "string"
          },
          "status": {
            "description": "Backup status query parameter.",
            "type": "string"
          },
          "workloadType": {
            "description": "Workload type",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          }
        },
        "type": "object"
      },
      "BMSRefreshContainersQueryObject": {
        "description": "The query filters that can be used with the refresh container API.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type for this container.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          }
        },
        "type": "object"
      },
      "BMSWorkloadItemQueryObject": {
        "description": "Filters to list items that can be backed up.",
        "properties": {
          "backupManagementType": {
            "description": "Backup management type.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureSql",
              "AzureBackupServer",
              "AzureWorkload",
              "AzureStorage",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "protectionStatus": {
            "description": "Backup status query parameter.",
            "enum": [
              "Invalid",
              "NotProtected",
              "Protecting",
              "Protected",
              "ProtectionFailed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionStatus"
            }
          },
          "workloadItemType": {
            "description": "Workload Item type",
            "enum": [
              "Invalid",
              "SQLInstance",
              "SQLDataBase",
              "SAPHanaSystem",
              "SAPHanaDatabase",
              "SAPAseSystem",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadItemType"
            }
          },
          "workloadType": {
            "description": "Workload type",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "WorkloadType"
            }
          }
        },
        "type": "object"
      },
      "BackupEngineBase": {
        "description": "The base backup engine class. All workload specific backup engines derive from this class.",
        "discriminator": {
          "propertyName": "backupEngineType"
        },
        "properties": {
          "azureBackupAgentVersion": {
            "description": "Backup agent version",
            "type": "string"
          },
          "backupEngineId": {
            "description": "ID of the backup engine.",
            "type": "string"
          },
          "backupEngineState": {
            "description": "Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}",
            "type": "string"
          },
          "backupEngineType": {
            "description": "Type of the backup engine.",
            "enum": [
              "Invalid",
              "DpmBackupEngine",
              "AzureBackupServerEngine"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupEngineType"
            }
          },
          "backupManagementType": {
            "description": "Type of backup management for the backup engine.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "canReRegister": {
            "description": "Flag indicating if the backup engine be registered, once already registered.",
            "type": "boolean"
          },
          "dpmVersion": {
            "description": "Backup engine version",
            "type": "string"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/BackupEngineExtendedInfo",
            "description": "Extended info of the backupengine"
          },
          "friendlyName": {
            "description": "Friendly name of the backup engine.",
            "type": "string"
          },
          "healthStatus": {
            "description": "Backup status of the backup engine.",
            "type": "string"
          },
          "isAzureBackupAgentUpgradeAvailable": {
            "description": "To check if backup agent upgrade available",
            "type": "boolean"
          },
          "isDpmUpgradeAvailable": {
            "description": "To check if backup engine upgrade available",
            "type": "boolean"
          },
          "registrationStatus": {
            "description": "Registration status of the backup engine with the Recovery Services Vault.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BackupEngineBaseResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The base backup engine class. All workload specific backup engines derive from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupEngineBase",
            "description": "BackupEngineBaseResource properties"
          }
        },
        "type": "object"
      },
      "BackupEngineBaseResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of BackupEngineBase resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/BackupEngineBaseResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BackupEngineExtendedInfo": {
        "description": "Additional information on backup engine.",
        "properties": {
          "availableDiskSpace": {
            "description": "Disk space currently available in the backup engine.",
            "format": "double",
            "type": "number"
          },
          "azureProtectedInstances": {
            "description": "Protected instances in the backup engine.",
            "format": "int32",
            "type": "integer"
          },
          "databaseName": {
            "description": "Database name of backup engine.",
            "type": "string"
          },
          "diskCount": {
            "description": "Number of disks in the backup engine.",
            "format": "int32",
            "type": "integer"
          },
          "protectedItemsCount": {
            "description": "Number of protected items in the backup engine.",
            "format": "int32",
            "type": "integer"
          },
          "protectedServersCount": {
            "description": "Number of protected servers in the backup engine.",
            "format": "int32",
            "type": "integer"
          },
          "refreshedAt": {
            "description": "Last refresh time in the backup engine.",
            "format": "date-time",
            "type": "string"
          },
          "usedDiskSpace": {
            "description": "Disk space used in the backup engine.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BackupRequest": {
        "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "BackupRequestResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupRequest",
            "description": "BackupRequestResource properties"
          }
        },
        "type": "object"
      },
      "BackupResourceConfig": {
        "description": "The resource storage details.",
        "properties": {
          "storageModelType": {
            "description": "Storage type",
            "enum": [
              "Invalid",
              "GeoRedundant",
              "LocallyRedundant"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageType"
            }
          },
          "storageType": {
            "description": "Storage type.",
            "enum": [
              "Invalid",
              "GeoRedundant",
              "LocallyRedundant"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageType"
            }
          },
          "storageTypeState": {
            "description": "Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is always Locked.",
            "enum": [
              "Invalid",
              "Locked",
              "Unlocked"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "StorageTypeState"
            }
          }
        },
        "type": "object"
      },
      "BackupResourceConfigResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The resource storage details.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BackupResourceConfig",
            "description": "BackupResourceConfigResource properties"
          }
        },
        "type": "object"
      },
      "ClientScriptForConnect": {
        "description": "Client script details for file / folder restore.",
        "properties": {
          "osType": {
            "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
            "type": "string"
          },
          "scriptContent": {
            "description": "File content of the client script for file / folder restore.",
            "type": "string"
          },
          "scriptExtension": {
            "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
            "type": "string"
          },
          "scriptNameSuffix": {
            "description": "Mandatory suffix that should be added to the name of script that is given for download to user.\r\nIf its null or empty then , ignore it.",
            "type": "string"
          },
          "url": {
            "description": "URL of Executable from where to source the content. If this is not null then ScriptContent should not be used",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContainerIdentityInfo": {
        "description": "Container identity information",
        "properties": {
          "aadTenantId": {
            "description": "Protection container identity - AAD Tenant",
            "type": "string"
          },
          "audience": {
            "description": "Protection container identity - Audience",
            "type": "string"
          },
          "servicePrincipalClientId": {
            "description": "Protection container identity - AAD Service Principal",
            "type": "string"
          },
          "uniqueName": {
            "description": "Unique name of the container",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DPMContainerExtendedInfo": {
        "description": "Additional information of the DPMContainer.",
        "properties": {
          "lastRefreshedAt": {
            "description": "Last refresh time of the DPMContainer.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DistributedNodesInfo": {
        "description": "This is used to represent the various nodes of the distributed container.",
        "properties": {
          "errorDetail": {
            "$ref": "#/components/schemas/ErrorDetail",
            "description": "Error Details if the Status is non-success."
          },
          "nodeName": {
            "description": "Name of the node under a distributed container.",
            "type": "string"
          },
          "status": {
            "description": "Status of this Node.\r\nFailed | Succeeded",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DpmBackupEngine": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupEngineBase"
          }
        ],
        "description": "Data Protection Manager (DPM) specific backup engine.",
        "type": "object",
        "x-ms-discriminator-value": "DpmBackupEngine"
      },
      "DpmContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "DPM workload-specific protection container.",
        "properties": {
          "canReRegister": {
            "description": "Specifies whether the container is re-registrable.",
            "type": "boolean"
          },
          "containerId": {
            "description": "ID of container.",
            "type": "string"
          },
          "dpmAgentVersion": {
            "description": "Backup engine Agent version",
            "type": "string"
          },
          "dpmServers": {
            "description": "List of BackupEngines protecting the container",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/DPMContainerExtendedInfo",
            "description": "Extended Info of the container."
          },
          "protectedItemCount": {
            "description": "Number of protected items in the BackupEngine",
            "format": "int64",
            "type": "integer"
          },
          "protectionStatus": {
            "description": "Protection status of the container.",
            "type": "string"
          },
          "upgradeAvailable": {
            "description": "To check if upgrade available",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "DPMContainer"
      },
      "ErrorDetail": {
        "description": "Error Detail class which encapsulates Code, Message and Recommendations.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error Message related to the Code.",
            "readOnly": true,
            "type": "string"
          },
          "recommendations": {
            "description": "List of recommendation strings.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GenericContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "Base class for generic container of backup items",
        "properties": {
          "extendedInformation": {
            "$ref": "#/components/schemas/GenericContainerExtendedInfo",
            "description": "Extended information (not returned in List container API calls)"
          },
          "fabricName": {
            "description": "Name of the container's fabric",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "GenericContainer"
      },
      "GenericContainerExtendedInfo": {
        "description": "Container extended information",
        "properties": {
          "containerIdentityInfo": {
            "$ref": "#/components/schemas/ContainerIdentityInfo",
            "description": "Container identity information"
          },
          "rawCertData": {
            "description": "Public key of container cert",
            "type": "string"
          },
          "serviceEndpoints": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Azure Backup Service Endpoints for the container",
            "type": "object"
          }
        },
        "type": "object"
      },
      "ILRRequest": {
        "description": "Parameters to Provision ILR API.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "ILRRequestResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Parameters to Provision ILR API.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ILRRequest",
            "description": "ILRRequestResource properties"
          }
        },
        "type": "object"
      },
      "IaaSVMContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "IaaS VM workload-specific container.",
        "properties": {
          "resourceGroup": {
            "description": "Resource group name of Recovery Services Vault.",
            "type": "string"
          },
          "virtualMachineId": {
            "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.",
            "type": "string"
          },
          "virtualMachineVersion": {
            "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaaSVMContainer"
      },
      "IaaSVMProtectableItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkloadProtectableItem"
          }
        ],
        "description": "IaaS VM workload-specific backup item.",
        "properties": {
          "virtualMachineId": {
            "description": "Fully qualified ARM ID of the virtual machine.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaaSVMProtectableItem"
      },
      "IaasVMBackupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BackupRequest"
          }
        ],
        "description": "IaaS VM workload-specific backup request.",
        "properties": {
          "recoveryPointExpiryTimeInUTC": {
            "description": "Backup copy will expire after the time specified (UTC).",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaasVMBackupRequest"
      },
      "IaasVMILRRegistrationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ILRRequest"
          }
        ],
        "description": "Restore files/folders from a backup copy of IaaS VM.",
        "properties": {
          "initiatorName": {
            "description": "iSCSI initiator name.",
            "type": "string"
          },
          "recoveryPointId": {
            "description": "ID of the IaaS VM backup copy from where the files/folders have to be restored.",
            "type": "string"
          },
          "renewExistingRegistration": {
            "description": "Whether to renew existing registration with the iSCSI server.",
            "type": "boolean"
          },
          "virtualMachineId": {
            "description": "Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IaasVMILRRegistrationRequest"
      },
      "InquiryInfo": {
        "description": "Details about inquired protectable items under a given container.",
        "properties": {
          "errorDetail": {
            "$ref": "#/components/schemas/ErrorDetail",
            "description": "Error Details if the Status is non-success."
          },
          "inquiryDetails": {
            "description": "Inquiry Details which will have workload specific details.\r\nFor e.g. - For SQL and oracle this will contain different details.",
            "items": {
              "$ref": "#/components/schemas/WorkloadInquiryDetails"
            },
            "type": "array"
          },
          "status": {
            "description": "Inquiry Status for this container such as\r\nInProgress | Failed | Succeeded",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InquiryValidation": {
        "description": "Validation for inquired protectable items under a given container.",
        "properties": {
          "additionalDetail": {
            "description": "Error Additional Detail in case the status is non-success.",
            "readOnly": true,
            "type": "string"
          },
          "errorDetail": {
            "$ref": "#/components/schemas/ErrorDetail",
            "description": "Error Detail in case the status is non-success."
          },
          "status": {
            "description": "Status for the Inquiry Validation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "InstantItemRecoveryTarget": {
        "description": "Target details for file / folder restore.",
        "properties": {
          "clientScripts": {
            "description": "List of client scripts.",
            "items": {
              "$ref": "#/components/schemas/ClientScriptForConnect"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MABContainerHealthDetails": {
        "description": "MAB workload-specific Health Details.",
        "properties": {
          "code": {
            "description": "Health Code",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "Health Message",
            "type": "string"
          },
          "recommendations": {
            "description": "Health Recommended Actions",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "description": "Health Title",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MabContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProtectionContainer"
          }
        ],
        "description": "Container with items backed up using MAB backup engine.",
        "properties": {
          "agentVersion": {
            "description": "Agent version of this container.",
            "type": "string"
          },
          "canReRegister": {
            "description": "Can the container be registered one more time.",
            "type": "boolean"
          },
          "containerHealthState": {
            "description": "Health state of mab container.",
            "type": "string"
          },
          "containerId": {
            "description": "ContainerID represents the container.",
            "format": "int64",
            "type": "integer"
          },
          "extendedInfo": {
            "$ref": "#/components/schemas/MabContainerExtendedInfo",
            "description": "Additional information for this container"
          },
          "mabContainerHealthDetails": {
            "description": "Health details on this mab container.",
            "items": {
              "$ref": "#/components/schemas/MABContainerHealthDetails"
            },
            "type": "array"
          },
          "protectedItemCount": {
            "description": "Number of items backed up in this container.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Windows"
      },
      "MabContainerExtendedInfo": {
        "description": "Additional information of the container.",
        "properties": {
          "backupItemType": {
            "description": "Type of backup items associated with this container.",
            "enum": [
              "Invalid",
              "VM",
              "FileFolder",
              "AzureSqlDb",
              "SQLDB",
              "Exchange",
              "Sharepoint",
              "VMwareVM",
              "SystemState",
              "Client",
              "GenericDataSource",
              "SQLDataBase",
              "AzureFileShare",
              "SAPHanaDatabase",
              "SAPAseDatabase"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupItemType"
            }
          },
          "backupItems": {
            "description": "List of backup items associated with this container.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "lastBackupStatus": {
            "description": "Latest backup status of this container.",
            "type": "string"
          },
          "lastRefreshedAt": {
            "description": "Time stamp when this container was refreshed.",
            "format": "date-time",
            "type": "string"
          },
          "policyName": {
            "description": "Backup policy associated with this container.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationStatus": {
        "description": "Operation status.",
        "properties": {
          "endTime": {
            "description": "Operation end time. Format: ISO-8601.",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/OperationStatusError",
            "description": "Error information related to this operation."
          },
          "id": {
            "description": "ID of the operation.",
            "type": "string"
          },
          "name": {
            "description": "Name of the operation.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo",
            "description": "Additional information associated with this operation."
          },
          "startTime": {
            "description": "Operation start time. Format: ISO-8601.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "description": "Operation status.",
            "enum": [
              "Invalid",
              "InProgress",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationStatusValues"
            }
          }
        },
        "type": "object"
      },
      "OperationStatusError": {
        "description": "Error information associated with operation status call.",
        "properties": {
          "code": {
            "description": "Error code of the operation failure.",
            "type": "string"
          },
          "message": {
            "description": "Error message displayed if the operation failure.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationStatusExtendedInfo": {
        "description": "Base class for additional information of operation status.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "OperationStatusJobExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status job extended info.",
        "properties": {
          "jobId": {
            "description": "ID of the job created for this protected item.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
      },
      "OperationStatusJobsExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status extended info for list of jobs.",
        "properties": {
          "failedJobsError": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Stores all the failed jobs along with the corresponding error codes.",
            "type": "object"
          },
          "jobIds": {
            "description": "IDs of the jobs created for the protected item.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
      },
      "OperationStatusProvisionILRExtendedInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationStatusExtendedInfo"
          }
        ],
        "description": "Operation status extended info for ILR provision action.",
        "properties": {
          "recoveryTarget": {
            "$ref": "#/components/schemas/InstantItemRecoveryTarget",
            "description": "Target details for file / folder restore."
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
      },
      "PreBackupValidation": {
        "description": "Pre-backup validation for Azure VM Workload provider.",
        "properties": {
          "code": {
            "description": "Error code of protectable item",
            "type": "string"
          },
          "message": {
            "description": "Message corresponding to the error code for the protectable item",
            "type": "string"
          },
          "status": {
            "description": "Status of protectable item, i.e. InProgress,Succeeded,Failed",
            "enum": [
              "Invalid",
              "Success",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "InquiryStatus"
            }
          }
        },
        "type": "object"
      },
      "ProtectableContainer": {
        "description": "Protectable Container Class.",
        "discriminator": {
          "propertyName": "protectableContainerType"
        },
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management for the container.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "containerId": {
            "description": "Fabric Id of the container such as ARM Id.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of the container.",
            "type": "string"
          },
          "healthStatus": {
            "description": "Status of health of the container.",
            "type": "string"
          },
          "protectableContainerType": {
            "description": "Type of the container. The value of this property for\r\n1. Compute Azure VM is Microsoft.Compute/virtualMachines\r\n2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines",
            "enum": [
              "Invalid",
              "Unknown",
              "IaasVMContainer",
              "IaasVMServiceContainer",
              "DPMContainer",
              "AzureBackupServerContainer",
              "MABContainer",
              "Cluster",
              "AzureSqlContainer",
              "Windows",
              "VCenter",
              "VMAppContainer",
              "SQLAGWorkLoadContainer",
              "StorageContainer",
              "GenericContainer"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ContainerType"
            }
          }
        },
        "type": "object"
      },
      "ProtectableContainerResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Protectable Container Class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProtectableContainer",
            "description": "ProtectableContainerResource properties"
          }
        },
        "type": "object"
      },
      "ProtectableContainerResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of ProtectableContainer resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/ProtectableContainerResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProtectionContainer": {
        "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
        "discriminator": {
          "propertyName": "containerType"
        },
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management for the container.",
            "enum": [
              "Invalid",
              "AzureIaasVM",
              "MAB",
              "DPM",
              "AzureBackupServer",
              "AzureSql",
              "AzureStorage",
              "AzureWorkload",
              "DefaultBackup"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BackupManagementType"
            }
          },
          "containerType": {
            "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2.\r\nClassic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is\r\nWindows 4. Azure SQL instance is AzureSqlContainer. 5. Storage containers is StorageContainer. 6. Azure workload\r\nBackup is VMAppContainer",
            "enum": [
              "Invalid",
              "Unknown",
              "IaasVMContainer",
              "IaasVMServiceContainer",
              "DPMContainer",
              "AzureBackupServerContainer",
              "MABContainer",
              "Cluster",
              "AzureSqlContainer",
              "Windows",
              "VCenter",
              "VMAppContainer",
              "SQLAGWorkLoadContainer",
              "StorageContainer",
              "GenericContainer"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ContainerType"
            }
          },
          "friendlyName": {
            "description": "Friendly name of the container.",
            "type": "string"
          },
          "healthStatus": {
            "description": "Status of health of the container.",
            "type": "string"
          },
          "registrationStatus": {
            "description": "Status of registration of the container with the Recovery Services Vault.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProtectionContainerResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProtectionContainer",
            "description": "ProtectionContainerResource properties"
          }
        },
        "type": "object"
      },
      "ProtectionContainerResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of ProtectionContainer resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/ProtectionContainerResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecoveryPoint": {
        "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
        "discriminator": {
          "propertyName": "objectType"
        },
        "properties": {
          "objectType": {
            "description": "This property will be used as the discriminator for deciding the specific types in the polymorphic chain of types.",
            "type": "string"
          }
        },
        "required": [
          "objectType"
        ],
        "type": "object"
      },
      "Resource": {
        "description": "ARM Resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "type": "object"
          },
          "eTag": {
            "description": "Optional ETag.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id represents the complete path to the resource.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location.",
            "type": "string"
          },
          "name": {
            "description": "Resource name associated with the resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceList": {
        "description": "Base for all lists of resources.",
        "properties": {
          "nextLink": {
            "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SQLDataDirectory": {
        "description": "SQLDataDirectory info",
        "properties": {
          "logicalName": {
            "description": "Logical name of the file",
            "type": "string"
          },
          "path": {
            "description": "File path",
            "type": "string"
          },
          "type": {
            "description": "Type of data directory mapping",
            "enum": [
              "Invalid",
              "Data",
              "Log"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SQLDataDirectoryType"
            }
          }
        },
        "type": "object"
      },
      "TokenInformation": {
        "description": "The token information details.",
        "properties": {
          "expiryTimeInUtcTicks": {
            "description": "Expiry time of token.",
            "format": "int64",
            "type": "integer"
          },
          "securityPIN": {
            "description": "Security PIN",
            "type": "string"
          },
          "token": {
            "description": "Token value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadInquiryDetails": {
        "description": "Details of an inquired protectable item.",
        "properties": {
          "inquiryValidation": {
            "$ref": "#/components/schemas/InquiryValidation",
            "description": "Inquiry validation such as permissions and other backup validations."
          },
          "itemCount": {
            "description": "Contains the protectable item Count inside this Container.",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "Type of the Workload such as SQL, Oracle etc.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadItem": {
        "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
        "discriminator": {
          "propertyName": "workloadItemType"
        },
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management to backup an item.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of the backup item.",
            "type": "string"
          },
          "protectionState": {
            "description": "State of the back up item.",
            "enum": [
              "Invalid",
              "NotProtected",
              "Protecting",
              "Protected",
              "ProtectionFailed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionStatus"
            }
          },
          "workloadItemType": {
            "description": "Type of the backup item.",
            "type": "string"
          },
          "workloadType": {
            "description": "Type of workload for the backup management",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadItemResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkloadItem",
            "description": "WorkloadItemResource properties"
          }
        },
        "type": "object"
      },
      "WorkloadItemResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of WorkloadItem resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/WorkloadItemResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkloadProtectableItem": {
        "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
        "discriminator": {
          "propertyName": "protectableItemType"
        },
        "properties": {
          "backupManagementType": {
            "description": "Type of backup management to backup an item.",
            "type": "string"
          },
          "friendlyName": {
            "description": "Friendly name of the backup item.",
            "type": "string"
          },
          "protectableItemType": {
            "description": "Type of the backup item.",
            "type": "string"
          },
          "protectionState": {
            "description": "State of the back up item.",
            "enum": [
              "Invalid",
              "NotProtected",
              "Protecting",
              "Protected",
              "ProtectionFailed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ProtectionStatus"
            }
          },
          "workloadType": {
            "description": "Type of workload for the backup management",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkloadProtectableItemResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkloadProtectableItem",
            "description": "WorkloadProtectableItemResource properties"
          }
        },
        "type": "object"
      },
      "WorkloadProtectableItemResourceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceList"
          }
        ],
        "description": "List of WorkloadProtectableItem resources",
        "properties": {
          "value": {
            "description": "List of resources.",
            "items": {
              "$ref": "#/components/schemas/WorkloadProtectableItemResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account."
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}