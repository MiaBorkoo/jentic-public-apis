{
  "openapi": "3.0.0",
  "info": {
    "title": "CostManagementClient",
    "version": "2019-11-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cost-management/resource-manager/Microsoft.CostManagement/stable/2019-11-01/costmanagement.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.CostManagement/generateReservationDetailsReport": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingProfileIdParameter"
          },
          {
            "$ref": "#/components/parameters/startDateParameter"
          },
          {
            "$ref": "#/components/parameters/endDateParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "Request processing completed."
          },
          "202": {
            "description": "Accepted. Request will be processed. Use the Location header to check the status.",
            "headers": {
              "Location": {
                "description": "The URL to check the status of the asynchronous operation.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Generates the reservations details report for provided date range asynchronously by billing profile.",
        "operationId": "GenerateReservationDetailsReport_ByBillingProfileId",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/GenerateReservationDetailsReportByBillingProfile.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.CostManagement/generateReservationDetailsReport": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/enrollmentIdParameter"
          },
          {
            "$ref": "#/components/parameters/startDateParameter"
          },
          {
            "$ref": "#/components/parameters/endDateParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationStatus"
                }
              }
            },
            "description": "Request processing completed."
          },
          "202": {
            "description": "Accepted. Request will be processed. Use the location header to check the status.",
            "headers": {
              "Location": {
                "description": "The URL to check the status of the asynchronous operation.",
                "schema": {
                  "type": "string"
                }
              },
              "Retry-After": {
                "description": "The amount of delay to use while the status of the operation is checked. The value is expressed in seconds.",
                "schema": {
                  "format": "int32",
                  "type": "integer"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Generates the reservations details report for provided date range asynchronously based on enrollment id.",
        "operationId": "GenerateReservationDetailsReport_ByBillingAccountId",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/GenerateReservationDetailsReportByBillingAccount.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/providers/Microsoft.CostManagement/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available cost management REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.CostManagement/settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists all of the settings that have been customized.",
        "operationId": "Settings_List",
        "x-ms-examples": {
          "SettingList": {
            "$ref": "./examples/SettingsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.CostManagement/settings/{settingName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/settingNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "OK. The request has succeeded, no content returned."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Remove the current value for a specific setting and reverts back to the default value, if applicable.",
        "operationId": "Settings_Delete",
        "x-ms-examples": {
          "DeleteSetting": {
            "$ref": "./examples/SettingsDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/settingNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Setting"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Retrieves the current value for a specific setting.",
        "operationId": "Settings_Get",
        "x-ms-examples": {
          "Settings": {
            "$ref": "./examples/Setting.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/settingNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Setting"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Sets a new value for a specific setting.",
        "operationId": "Settings_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Setting"
              }
            }
          },
          "description": "Body supplied to the CreateOrUpdate setting operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdateSetting": {
            "$ref": "./examples/SettingsCreateOrUpdate.json"
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/views": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists all views by tenant and object.",
        "operationId": "Views_List",
        "x-ms-examples": {
          "PrivateViewList": {
            "$ref": "./examples/PrivateViewList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.CostManagement/views/{viewName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "NoContent. Resource is not available."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "The operation to delete a view.",
        "operationId": "Views_Delete",
        "x-ms-examples": {
          "DeletePrivateView": {
            "$ref": "./examples/PrivateViewDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Gets the view by view name.",
        "operationId": "Views_Get",
        "x-ms-examples": {
          "PrivateView": {
            "$ref": "./examples/PrivateView.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "operationId": "Views_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/View"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate View operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdatePrivateView": {
            "$ref": "./examples/PrivateViewCreateOrUpdate.json"
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/alerts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderTypeParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alerts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the Alerts for external cloud provider type defined.",
        "operationId": "Alerts_ListExternal",
        "x-ms-examples": {
          "ExternalBillingAccountAlerts": {
            "$ref": "./examples/ExternalBillingAccountAlerts.json"
          },
          "ExternalSubscriptionAlerts": {
            "$ref": "./examples/ExternalSubscriptionAlerts.json"
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/dimensions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/externalCloudProviderTypeParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Dimensions"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the dimensions by the external cloud provider type.",
        "operationId": "Dimensions_ByExternalCloudProviderType",
        "x-ms-examples": {
          "ExternalBillingAccountDimensionList": {
            "$ref": "./examples/ExternalBillingAccountsDimensions.json"
          },
          "ExternalSubscriptionDimensionList": {
            "$ref": "./examples/ExternalSubscriptionsDimensions.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Dimension",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/forecast": {
      "post": {
        "parameters": [
          {
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderTypeParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Forecast"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the forecast charges for external cloud provider type defined.",
        "operationId": "Forecast_ExternalCloudProviderUsage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastDefinition"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate Forecast Config operation.",
          "required": true
        },
        "x-ms-examples": {
          "ExternalBillingAccountForecast": {
            "$ref": "./examples/ExternalBillingAccountForecast.json"
          },
          "ExternalSubscriptionForecast": {
            "$ref": "./examples/ExternalSubscriptionForecast.json"
          }
        }
      }
    },
    "/providers/Microsoft.CostManagement/{externalCloudProviderType}/{externalCloudProviderId}/query": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/externalCloudProviderTypeParameter"
          },
          {
            "$ref": "#/components/parameters/externalCloudProviderIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Query"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Query the usage data for external cloud provider type defined.",
        "operationId": "Query_UsageByExternalCloudProviderType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryDefinition"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate Query Config operation.",
          "required": true
        },
        "x-ms-examples": {
          "ExternalBillingAccountQueryList": {
            "$ref": "./examples/ExternalBillingAccountsQuery.json"
          },
          "ExternalSubscriptionsQuery": {
            "$ref": "./examples/ExternalSubscriptionsQuery.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/alerts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeAlertParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertsResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alerts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the alerts for scope defined.",
        "operationId": "Alerts_List",
        "x-ms-examples": {
          "BillingAccountAlerts": {
            "$ref": "./examples/BillingAccountAlerts.json"
          },
          "BillingProfileAlerts": {
            "$ref": "./examples/BillingProfileAlerts.json"
          },
          "DepartmentAlerts": {
            "$ref": "./examples/DepartmentAlerts.json"
          },
          "EnrollmentAccountAlerts": {
            "$ref": "./examples/EnrollmentAccountAlerts.json"
          },
          "InvoiceSectionAlerts": {
            "$ref": "./examples/InvoiceSectionAlerts.json"
          },
          "ResourceGroupAlerts": {
            "$ref": "./examples/ResourceGroupAlerts.json"
          },
          "SubscriptionAlerts": {
            "$ref": "./examples/SubscriptionAlerts.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/alerts/{alertId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeAlertParameter"
          },
          {
            "$ref": "#/components/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alerts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Gets the alert for the scope by alert ID.",
        "operationId": "Alerts_Get",
        "x-ms-examples": {
          "ResourceGroupAlerts": {
            "$ref": "./examples/SingleResourceGroupAlert.json"
          },
          "SubscriptionAlerts": {
            "$ref": "./examples/SingleSubscriptionAlert.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeAlertParameter"
          },
          {
            "$ref": "#/components/parameters/alertIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Alert"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alerts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Dismisses the specified alert",
        "operationId": "Alerts_Dismiss",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DismissAlertPayload"
              }
            }
          },
          "description": "Parameters supplied to the Dismiss Alert operation.",
          "required": true
        },
        "x-ms-examples": {
          "ResourceGroupAlerts": {
            "$ref": "./examples/DismissResourceGroupAlerts.json"
          },
          "SubscriptionAlerts": {
            "$ref": "./examples/DismissSubscriptionAlerts.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/dimensions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeDimensionParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "May be used to filter dimensions by properties/category, properties/usageStart, properties/usageEnd. Supported operators are 'eq','lt', 'gt', 'le', 'ge'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to expand the properties/data within a dimension category. By default, data is not included when listing dimensions.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N dimension data.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Dimensions"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the dimensions by the defined scope.",
        "operationId": "Dimensions_List",
        "x-ms-examples": {
          "BillingAccountDimensionsList-Legacy": {
            "$ref": "./examples/BillingAccountDimensionsList.json"
          },
          "BillingAccountDimensionsList-Modern": {
            "$ref": "./examples/MCABillingAccountDimensionsList.json"
          },
          "BillingAccountDimensionsListExpandAndTop-Legacy": {
            "$ref": "./examples/BillingAccountDimensionsListExpandAndTop.json"
          },
          "BillingAccountDimensionsListExpandAndTop-Modern": {
            "$ref": "./examples/MCABillingAccountDimensionsListExpandAndTop.json"
          },
          "BillingAccountDimensionsListWithFilter-Legacy": {
            "$ref": "./examples/BillingAccountDimensionsListWithFilter.json"
          },
          "BillingAccountDimensionsListWithFilter-Modern": {
            "$ref": "./examples/MCABillingAccountDimensionsListWithFilter.json"
          },
          "BillingProfileDimensionsList-Modern": {
            "$ref": "./examples/MCABillingProfileDimensionsList.json"
          },
          "BillingProfileDimensionsListExpandAndTop-Modern": {
            "$ref": "./examples/MCABillingProfileDimensionsListExpandAndTop.json"
          },
          "BillingProfileDimensionsListWithFilter-Modern": {
            "$ref": "./examples/MCABillingProfileDimensionsListWithFilter.json"
          },
          "CustomerDimensionsList-Modern": {
            "$ref": "./examples/MCACustomerDimensionsList.json"
          },
          "CustomerDimensionsListExpandAndTop-Modern": {
            "$ref": "./examples/MCACustomerDimensionsListExpandAndTop.json"
          },
          "CustomerDimensionsListWithFilter-Modern": {
            "$ref": "./examples/MCACustomerDimensionsListWithFilter.json"
          },
          "DepartmentDimensionsList-Legacy": {
            "$ref": "./examples/DepartmentDimensionsList.json"
          },
          "DepartmentDimensionsListExpandAndTop-Legacy": {
            "$ref": "./examples/DepartmentDimensionsListExpandAndTop.json"
          },
          "DepartmentDimensionsListWithFilter-Legacy": {
            "$ref": "./examples/DepartmentDimensionsListWithFilter.json"
          },
          "EnrollmentAccountDimensionsList-Legacy": {
            "$ref": "./examples/EnrollmentAccountDimensionsList.json"
          },
          "EnrollmentAccountDimensionsListExpandAndTop-Legacy": {
            "$ref": "./examples/EnrollmentAccountDimensionsListExpandAndTop.json"
          },
          "EnrollmentAccountDimensionsListWithFilter-Legacy": {
            "$ref": "./examples/EnrollmentAccountDimensionsListWithFilter.json"
          },
          "InvoiceSectionDimensionsList-Modern": {
            "$ref": "./examples/MCAInvoiceSectionDimensionsList.json"
          },
          "InvoiceSectionDimensionsListExpandAndTop-Modern": {
            "$ref": "./examples/MCAInvoiceSectionDimensionsListExpandAndTop.json"
          },
          "InvoiceSectionDimensionsListWithFilter-Modern": {
            "$ref": "./examples/MCAInvoiceSectionDimensionsListWithFilter.json"
          },
          "ManagementGroupDimensionsList-Legacy": {
            "$ref": "./examples/ManagementGroupDimensionsList.json"
          },
          "ManagementGroupDimensionsListExpandAndTop-Legacy": {
            "$ref": "./examples/ManagementGroupDimensionsListExpandAndTop.json"
          },
          "ManagementGroupDimensionsListWithFilter-Legacy": {
            "$ref": "./examples/ManagementGroupDimensionsListWithFilter.json"
          },
          "ResourceGroupDimensionsList-Legacy": {
            "$ref": "./examples/ResourceGroupDimensionsList.json"
          },
          "SubscriptionDimensionsList-Legacy": {
            "$ref": "./examples/SubscriptionDimensionsList.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Dimension",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/forecast": {
      "post": {
        "parameters": [
          {
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeForecastParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Forecast"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists the forecast charges for scope defined.",
        "operationId": "Forecast_Usage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForecastDefinition"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate Forecast Config operation.",
          "required": true
        },
        "x-ms-examples": {
          "BillingAccountForecast": {
            "$ref": "./examples/BillingAccountForecast.json"
          },
          "BillingProfileForecast": {
            "$ref": "./examples/BillingProfileForecast.json"
          },
          "DepartmentForecast": {
            "$ref": "./examples/DepartmentForecast.json"
          },
          "EnrollmentAccountForecast": {
            "$ref": "./examples/EnrollmentAccountForecast.json"
          },
          "InvoiceSectionForecast": {
            "$ref": "./examples/InvoiceSectionForecast.json"
          },
          "ResourceGroupForecast": {
            "$ref": "./examples/ResourceGroupForecast.json"
          },
          "SubscriptionForecast": {
            "$ref": "./examples/SubscriptionForecast.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/query": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeQueryParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Query"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Query the usage data for scope defined.",
        "operationId": "Query_Usage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryDefinition"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate Query Config operation.",
          "required": true
        },
        "x-ms-examples": {
          "BillingAccountQuery-Legacy": {
            "$ref": "./examples/BillingAccountQuery.json"
          },
          "BillingAccountQuery-Modern": {
            "$ref": "./examples/MCABillingAccountQuery.json"
          },
          "BillingAccountQueryGrouping-Legacy": {
            "$ref": "./examples/BillingAccountQueryGrouping.json"
          },
          "BillingAccountQueryGrouping-Modern": {
            "$ref": "./examples/MCABillingAccountQueryGrouping.json"
          },
          "BillingProfileQuery-Modern": {
            "$ref": "./examples/MCABillingProfileQuery.json"
          },
          "BillingProfileQueryGrouping-Modern": {
            "$ref": "./examples/MCABillingProfileQueryGrouping.json"
          },
          "CustomerQuery-Modern": {
            "$ref": "./examples/MCACustomerQuery.json"
          },
          "CustomerQueryGrouping-Modern": {
            "$ref": "./examples/MCACustomerQueryGrouping.json"
          },
          "DepartmentQuery-Legacy": {
            "$ref": "./examples/DepartmentQuery.json"
          },
          "DepartmentQueryGrouping-Legacy": {
            "$ref": "./examples/DepartmentQueryGrouping.json"
          },
          "EnrollmentAccountQuery-Legacy": {
            "$ref": "./examples/EnrollmentAccountQuery.json"
          },
          "EnrollmentAccountQueryGrouping-Legacy": {
            "$ref": "./examples/EnrollmentAccountQueryGrouping.json"
          },
          "InvoiceSectionQuery-Modern": {
            "$ref": "./examples/MCAInvoiceSectionQuery.json"
          },
          "InvoiceSectionQueryGrouping-Modern": {
            "$ref": "./examples/MCAInvoiceSectionQueryGrouping.json"
          },
          "ManagementGroupQuery-Legacy": {
            "$ref": "./examples/ManagementGroupQuery.json"
          },
          "ManagementGroupQueryGrouping-Legacy": {
            "$ref": "./examples/ManagementGroupQueryGrouping.json"
          },
          "ResourceGroupQuery-Legacy": {
            "$ref": "./examples/ResourceGroupQuery.json"
          },
          "ResourceGroupQueryGrouping-Legacy": {
            "$ref": "./examples/ResourceGroupQueryGrouping.json"
          },
          "SubscriptionQuery-Legacy": {
            "$ref": "./examples/SubscriptionQuery.json"
          },
          "SubscriptionQueryGrouping-Legacy": {
            "$ref": "./examples/SubscriptionQueryGrouping.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeViewParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Lists all views at the given scope.",
        "operationId": "Views_ListByScope",
        "x-ms-examples": {
          "ResourceGroupViewList": {
            "$ref": "./examples/ViewListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.CostManagement/views/{viewName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeViewParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "NoContent. Resource is not available."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "The operation to delete a view.",
        "operationId": "Views_DeleteByScope",
        "x-ms-examples": {
          "ResourceGroupDeleteView": {
            "$ref": "./examples/ViewDeleteByResourceGroup.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeViewParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "Gets the view for the defined scope by view name.",
        "operationId": "Views_GetByScope",
        "x-ms-examples": {
          "ResourceGroupView": {
            "$ref": "./examples/ViewByResourceGroup.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeViewParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/viewNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/View"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Views"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/costmanagement/"
        },
        "description": "The operation to create or update a view. Update operation requires latest eTag to be set in the request. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "operationId": "Views_CreateOrUpdateByScope",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/View"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate View operation.",
          "required": true
        },
        "x-ms-examples": {
          "ResourceGroupCreateOrUpdateView": {
            "$ref": "./examples/ViewCreateOrUpdateByResourceGroup.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "alertIdParameter": {
        "allowReserved": true,
        "description": "Alert ID",
        "in": "path",
        "name": "alertId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. The current version is 2019-11-01.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "billingAccountIdParameter": {
        "description": "BillingAccount ID",
        "in": "path",
        "name": "billingAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "billingProfileIdParameter": {
        "description": "BillingProfile ID",
        "in": "path",
        "name": "billingProfileId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "departmentIdParameter": {
        "description": "Department ID",
        "in": "path",
        "name": "departmentId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "endDateParameter": {
        "description": "End Date",
        "in": "query",
        "name": "endDate",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "enrollmentAccountIdParameter": {
        "description": "Enrollment Account ID",
        "in": "path",
        "name": "enrollmentAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "enrollmentIdParameter": {
        "description": "Enrollment ID (Legacy BillingAccount ID)",
        "in": "path",
        "name": "billingAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "externalCloudProviderIdParameter": {
        "description": "This can be '{externalSubscriptionId}' for linked account or '{externalBillingAccountId}' for consolidated account used with dimension/query operations.",
        "in": "path",
        "name": "externalCloudProviderId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "externalCloudProviderTypeParameter": {
        "description": "The external cloud provider type associated with dimension/query operations. This includes 'externalSubscriptions' for linked account and 'externalBillingAccounts' for consolidated account.",
        "in": "path",
        "name": "externalCloudProviderType",
        "required": true,
        "schema": {
          "enum": [
            "externalSubscriptions",
            "externalBillingAccounts"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "externalCloudProviderType"
        },
        "x-ms-parameter-location": "method"
      },
      "managementGroupIdParameter": {
        "description": "ManagementGroup ID",
        "in": "path",
        "name": "managementGroupId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Azure Resource Group Name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "scopeAlertParameter": {
        "allowReserved": true,
        "description": "The scope associated with alerts operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeDimensionParameter": {
        "allowReserved": true,
        "description": "The scope associated with dimension operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeForecastParameter": {
        "allowReserved": true,
        "description": "The scope associated with forecast operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeQueryParameter": {
        "allowReserved": true,
        "description": "The scope associated with query and export operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId} for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeViewParameter": {
        "description": "The scope associated with view operations. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, 'providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for External Billing Account scope and 'providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for External Subscription scope.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "settingNameParameter": {
        "description": "Name of the setting. Allowed values: myscope",
        "in": "path",
        "name": "settingName",
        "required": true,
        "schema": {
          "maxLength": 32,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "startDateParameter": {
        "description": "Start Date",
        "in": "query",
        "name": "startDate",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "viewNameParameter": {
        "description": "View name",
        "in": "path",
        "name": "viewName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "ForecastDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ForecastDefinition"
            }
          }
        },
        "description": "Parameters supplied to the CreateOrUpdate Forecast Config operation.",
        "required": true
      },
      "QueryDefinition": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QueryDefinition"
            }
          }
        },
        "description": "Parameters supplied to the CreateOrUpdate Query Config operation.",
        "required": true
      },
      "View": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/View"
            }
          }
        },
        "description": "Parameters supplied to the CreateOrUpdate View operation.",
        "required": true
      }
    },
    "schemas": {
      "Alert": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An individual alert.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AlertProperties",
            "title": "Alert properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "AlertProperties": {
        "properties": {
          "closeTime": {
            "description": "dateTime in which alert was closed",
            "type": "string"
          },
          "costEntityId": {
            "description": "related budget",
            "type": "string"
          },
          "creationTime": {
            "description": "dateTime in which alert was created",
            "type": "string"
          },
          "definition": {
            "description": "defines the type of alert",
            "properties": {
              "category": {
                "description": "Alert category",
                "enum": [
                  "Cost",
                  "Usage",
                  "Billing",
                  "System"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AlertCategory"
                }
              },
              "criteria": {
                "description": "Criteria that triggered alert",
                "enum": [
                  "CostThresholdExceeded",
                  "UsageThresholdExceeded",
                  "CreditThresholdApproaching",
                  "CreditThresholdReached",
                  "QuotaThresholdApproaching",
                  "QuotaThresholdReached",
                  "MultiCurrency",
                  "ForecastCostThresholdExceeded",
                  "ForecastUsageThresholdExceeded",
                  "InvoiceDueDateApproaching",
                  "InvoiceDueDateReached",
                  "CrossCloudNewDataAvailable",
                  "CrossCloudCollectionError",
                  "GeneralThresholdError"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AlertCriteria"
                }
              },
              "type": {
                "description": "type of alert",
                "enum": [
                  "Budget",
                  "Invoice",
                  "Credit",
                  "Quota",
                  "General",
                  "xCloud",
                  "BudgetForecast"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AlertType"
                }
              }
            },
            "type": "object"
          },
          "description": {
            "description": "Alert description",
            "type": "string"
          },
          "details": {
            "description": "Alert details",
            "properties": {
              "amount": {
                "description": "budget threshold amount",
                "format": "decimal",
                "type": "number"
              },
              "contactEmails": {
                "description": "list of emails to contact",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "contactGroups": {
                "description": "list of action groups to broadcast to",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "contactRoles": {
                "description": "list of contact roles",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "currentSpend": {
                "description": "current spend",
                "format": "decimal",
                "type": "number"
              },
              "meterFilter": {
                "description": "array of meters to filter by",
                "items": {},
                "type": "array"
              },
              "operator": {
                "description": "operator used to compare currentSpend with amount",
                "enum": [
                  "None",
                  "EqualTo",
                  "GreaterThan",
                  "GreaterThanOrEqualTo",
                  "LessThan",
                  "LessThanOrEqualTo"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AlertOperator"
                }
              },
              "overridingAlert": {
                "description": "overriding alert",
                "type": "string"
              },
              "periodStartDate": {
                "description": "datetime of periodStartDate",
                "type": "string"
              },
              "resourceFilter": {
                "description": "array of resources to filter by",
                "items": {},
                "type": "array"
              },
              "resourceGroupFilter": {
                "description": "array of resourceGroups to filter by",
                "items": {},
                "type": "array"
              },
              "tagFilter": {
                "description": "tags to filter by",
                "properties": {},
                "type": "object"
              },
              "threshold": {
                "description": "notification threshold percentage as a decimal which activated this alert",
                "format": "decimal",
                "type": "number"
              },
              "timeGrainType": {
                "description": "Type of timegrain cadence",
                "enum": [
                  "None",
                  "Monthly",
                  "Quarterly",
                  "Annually",
                  "BillingMonth",
                  "BillingQuarter",
                  "BillingAnnual"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "AlertTimeGrainType"
                }
              },
              "triggeredBy": {
                "description": "notificationId that triggered this alert",
                "type": "string"
              },
              "unit": {
                "description": "unit of currency being used",
                "type": "string"
              }
            },
            "type": "object"
          },
          "modificationTime": {
            "description": "dateTime in which alert was last modified",
            "type": "string"
          },
          "source": {
            "description": "Source of alert",
            "enum": [
              "Preset",
              "User"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertSource"
            }
          },
          "status": {
            "description": "alert status",
            "enum": [
              "None",
              "Active",
              "Overridden",
              "Resolved",
              "Dismissed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertStatus"
            }
          },
          "statusModificationTime": {
            "description": "dateTime in which the alert status was last modified",
            "type": "string"
          },
          "statusModificationUserName": {
            "description": "",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AlertsResult": {
        "description": "Result of alerts.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of alerts results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of alerts.",
            "items": {
              "$ref": "#/components/schemas/Alert"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Cache": {
        "description": "Array of scopes with additional details used by Cost Management in the Azure portal.",
        "items": {
          "properties": {
            "channel": {
              "description": "Indicates the account type. Allowed values include: EA, PAYG, Modern, Internal, Unknown.",
              "type": "string"
            },
            "id": {
              "description": "Resource ID used by Resource Manager to uniquely identify the scope.",
              "type": "string"
            },
            "name": {
              "description": "Display name for the scope.",
              "type": "string"
            },
            "parent": {
              "description": "Resource ID of the parent scope. For instance, subscription's resource ID for a resource group or a management group resource ID for a subscription.",
              "nullable": true,
              "type": "string"
            },
            "status": {
              "description": "Indicates the status of the scope. Status only applies to subscriptions and billing accounts.",
              "nullable": true,
              "type": "string"
            },
            "subchannel": {
              "description": "Indicates the type of modern account. Allowed values include: Individual, Enterprise, Partner, Indirect, NotApplicable",
              "type": "string"
            }
          },
          "required": [
            "id",
            "name",
            "channel",
            "subchannel"
          ],
          "type": "object"
        },
        "type": "array"
      },
      "Dimension": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DimensionProperties",
            "title": "Dimension properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DimensionProperties": {
        "properties": {
          "category": {
            "description": "Dimension category.",
            "readOnly": true,
            "type": "string"
          },
          "data": {
            "items": {
              "description": "Dimension data item.",
              "readOnly": true,
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "Dimension description.",
            "readOnly": true,
            "type": "string"
          },
          "filterEnabled": {
            "description": "Filter enabled.",
            "readOnly": true,
            "type": "boolean"
          },
          "groupingEnabled": {
            "description": "Grouping enabled.",
            "readOnly": true,
            "type": "boolean"
          },
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "total": {
            "description": "Total number of data for the dimension.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "usageEnd": {
            "description": "Usage end.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "Usage start.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DimensionsListResult": {
        "description": "Result of listing dimensions. It contains a list of available dimensions.",
        "properties": {
          "value": {
            "description": "The list of dimensions.",
            "items": {
              "$ref": "#/components/schemas/Dimension"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DismissAlertPayload": {
        "description": "The request payload to update an alert",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AlertProperties",
            "title": "Alert properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ErrorDetails": {
        "description": "The details of the error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetails",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "ForecastDefinition": {
        "description": "The definition of a forecast.",
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/QueryDataset",
            "description": "Has definition for data in this forecast."
          },
          "includeActualCost": {
            "description": "a boolean determining if actualCost will be included",
            "type": "boolean"
          },
          "includeFreshPartialCost": {
            "description": "a boolean determining if FreshPartialCost will be included",
            "type": "boolean"
          },
          "timePeriod": {
            "$ref": "#/components/schemas/QueryTimePeriod",
            "description": "Has time period for pulling data for the forecast."
          },
          "timeframe": {
            "description": "The time frame for pulling data for the forecast. If custom, then a specific time period must be provided.",
            "enum": [
              "MonthToDate",
              "BillingMonthToDate",
              "TheLastMonth",
              "TheLastBillingMonth",
              "WeekToDate",
              "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ForecastTimeframeType"
            }
          },
          "type": {
            "description": "The type of the forecast.",
            "enum": [
              "Usage",
              "ActualCost",
              "AmortizedCost"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ForecastType"
            }
          }
        },
        "required": [
          "type",
          "timeframe",
          "dataset"
        ],
        "type": "object"
      },
      "KpiProperties": {
        "description": "Each KPI must contain a 'type' and 'enabled' key.",
        "properties": {
          "enabled": {
            "description": "show the KPI in the UI?",
            "type": "boolean"
          },
          "id": {
            "description": "ID of resource related to metric (budget).",
            "type": "string"
          },
          "type": {
            "description": "KPI type (Forecast, Budget).",
            "enum": [
              "Forecast",
              "Budget"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "KpiTypeType"
            }
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "A Cost management REST API operation.",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.CostManagement.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Dimensions, Query.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of listing cost management operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of cost management operations supported by the Microsoft.CostManagement resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationStatus": {
        "description": "The status of the long running operation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReportURL",
            "description": "The properties of the resource generated.",
            "type": "object",
            "x-ms-client-flatten": true
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "The status of the long running operation."
          }
        },
        "type": "object"
      },
      "PivotProperties": {
        "description": "Each pivot must contain a 'type' and 'name'.",
        "properties": {
          "name": {
            "description": "Data field to show in view.",
            "type": "string"
          },
          "type": {
            "description": "Data type to show in view.",
            "enum": [
              "Dimension",
              "TagKey"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PivotTypeType"
            }
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "description": "The Resource model definition.",
        "properties": {
          "eTag": {
            "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ProxySettingResource": {
        "description": "The Resource model definition.",
        "properties": {
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "description": "Resource kind.",
            "maxLength": 10,
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "QueryAggregation": {
        "description": "The aggregation expression to be used in the query.",
        "properties": {
          "function": {
            "description": "The name of the aggregation function to use.",
            "enum": [
              "Avg",
              "Max",
              "Min",
              "Sum"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "FunctionType"
            }
          },
          "name": {
            "description": "The name of the column to aggregate.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "function"
        ],
        "type": "object"
      },
      "QueryColumn": {
        "properties": {
          "name": {
            "description": "The name of column.",
            "type": "string"
          },
          "type": {
            "description": "The type of column.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryColumnType": {
        "description": "The type of the column in the export.",
        "enum": [
          "Tag",
          "Dimension"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "QueryColumnType"
        }
      },
      "QueryComparisonExpression": {
        "description": "The comparison expression to be used in the query.",
        "properties": {
          "name": {
            "description": "The name of the column to use in comparison.",
            "type": "string"
          },
          "operator": {
            "description": "The operator to use for comparison.",
            "enum": [
              "In"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatorType"
            }
          },
          "values": {
            "description": "Array of values to use for comparison",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "name",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "QueryDataset": {
        "description": "The definition of data present in the query.",
        "properties": {
          "aggregation": {
            "additionalProperties": {
              "$ref": "#/components/schemas/QueryAggregation",
              "type": "object"
            },
            "description": "Dictionary of aggregation expression to use in the query. The key of each item in the dictionary is the alias for the aggregated column. Query can have up to 2 aggregation clauses.",
            "maxItems": 2,
            "type": "object"
          },
          "filter": {
            "$ref": "#/components/schemas/QueryFilter",
            "description": "The filter expression to use in the query. Please reference our Query API REST documentation for how to properly format the filter.",
            "type": "object"
          },
          "granularity": {
            "description": "The granularity of rows in the query.",
            "enum": [
              "Daily"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "GranularityType"
            }
          },
          "grouping": {
            "description": "Array of group by expression to use in the query. Query can have up to 2 group by clauses.",
            "items": {
              "$ref": "#/components/schemas/QueryGrouping"
            },
            "maxItems": 2,
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryDatasetConfiguration": {
        "description": "The configuration of dataset in the query.",
        "properties": {
          "columns": {
            "description": "Array of column names to be included in the query. Any valid query column name is allowed. If not provided, then query includes all columns.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryDefinition": {
        "description": "The definition of a query.",
        "properties": {
          "dataset": {
            "$ref": "#/components/schemas/QueryDataset",
            "description": "Has definition for data in this query."
          },
          "timePeriod": {
            "$ref": "#/components/schemas/QueryTimePeriod",
            "description": "Has time period for pulling data for the query."
          },
          "timeframe": {
            "description": "The time frame for pulling data for the query. If custom, then a specific time period must be provided.",
            "enum": [
              "MonthToDate",
              "BillingMonthToDate",
              "TheLastMonth",
              "TheLastBillingMonth",
              "WeekToDate",
              "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TimeframeType"
            }
          },
          "type": {
            "description": "The type of the query.",
            "enum": [
              "Usage",
              "ActualCost",
              "AmortizedCost"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExportType"
            }
          }
        },
        "required": [
          "type",
          "timeframe",
          "dataset"
        ],
        "type": "object"
      },
      "QueryFilter": {
        "description": "The filter expression to be used in the export.",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/QueryComparisonExpression",
            "description": "Has comparison expression for a tag"
          },
          "and": {
            "description": "The logical \"AND\" expression. Must have at least 2 items.",
            "items": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "minItems": 2,
            "type": "array"
          },
          "dimensions": {
            "$ref": "#/components/schemas/QueryComparisonExpression",
            "description": "Has comparison expression for a dimension"
          },
          "or": {
            "description": "The logical \"OR\" expression. Must have at least 2 items.",
            "items": {
              "$ref": "#/components/schemas/QueryFilter"
            },
            "minItems": 2,
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryGrouping": {
        "description": "The group by expression to be used in the query.",
        "properties": {
          "name": {
            "description": "The name of the column to group.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/QueryColumnType",
            "description": "Has type of the column to group."
          }
        },
        "required": [
          "type",
          "name"
        ],
        "type": "object"
      },
      "QueryProperties": {
        "properties": {
          "columns": {
            "description": "Array of columns",
            "items": {
              "$ref": "#/components/schemas/QueryColumn"
            },
            "type": "array"
          },
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "type": "string"
          },
          "rows": {
            "description": "Array of rows",
            "items": {
              "items": {},
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Result of query. It contains all columns listed under groupings and aggregation.",
        "properties": {
          "eTag": {
            "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/QueryProperties",
            "title": "Query properties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "description": "Resource SKU",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryTimePeriod": {
        "description": "The start and end date for pulling data for the query.",
        "properties": {
          "from": {
            "description": "The start date to pull data from.",
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "description": "The end date to pull data to.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "from",
          "to"
        ],
        "type": "object"
      },
      "ReportConfigAggregation": {
        "description": "The aggregation expression to be used in the report.",
        "properties": {
          "function": {
            "description": "The name of the aggregation function to use.",
            "enum": [
              "Avg",
              "Max",
              "Min",
              "Sum"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "FunctionType"
            }
          },
          "name": {
            "description": "The name of the column to aggregate.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "function"
        ],
        "type": "object"
      },
      "ReportConfigColumnType": {
        "description": "The type of the column in the report.",
        "enum": [
          "Tag",
          "Dimension"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ReportConfigColumnType"
        }
      },
      "ReportConfigComparisonExpression": {
        "description": "The comparison expression to be used in the report.",
        "properties": {
          "name": {
            "description": "The name of the column to use in comparison.",
            "nullable": true,
            "type": "string"
          },
          "operator": {
            "description": "The operator to use for comparison.",
            "enum": [
              "In",
              "Contains"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatorType"
            }
          },
          "values": {
            "description": "Array of values to use for comparison",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "name",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "ReportConfigDataset": {
        "description": "The definition of data present in the report.",
        "properties": {
          "aggregation": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ReportConfigAggregation",
              "type": "object"
            },
            "description": "Dictionary of aggregation expression to use in the report. The key of each item in the dictionary is the alias for the aggregated column. Report can have up to 2 aggregation clauses.",
            "maxItems": 2,
            "type": "object"
          },
          "configuration": {
            "$ref": "#/components/schemas/ReportConfigDatasetConfiguration",
            "description": "Has configuration information for the data in the report. The configuration will be ignored if aggregation and grouping are provided."
          },
          "filter": {
            "$ref": "#/components/schemas/ReportConfigFilter",
            "description": "Has filter expression to use in the report.",
            "type": "object"
          },
          "granularity": {
            "description": "The granularity of rows in the report.",
            "enum": [
              "Daily",
              "Monthly"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ReportGranularityType"
            }
          },
          "grouping": {
            "description": "Array of group by expression to use in the report. Report can have up to 2 group by clauses.",
            "items": {
              "$ref": "#/components/schemas/ReportConfigGrouping"
            },
            "maxItems": 2,
            "type": "array"
          },
          "sorting": {
            "description": "Array of order by expression to use in the report.",
            "items": {
              "$ref": "#/components/schemas/ReportConfigSorting"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportConfigDatasetConfiguration": {
        "description": "The configuration of dataset in the report.",
        "properties": {
          "columns": {
            "description": "Array of column names to be included in the report. Any valid report column name is allowed. If not provided, then report includes all columns.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReportConfigDefinition": {
        "description": "The definition of a report config.",
        "properties": {
          "dataSet": {
            "$ref": "#/components/schemas/ReportConfigDataset",
            "description": "Has definition for data in this report config."
          },
          "includeMonetaryCommitment": {
            "description": "Include monetary commitment",
            "readOnly": true,
            "type": "boolean"
          },
          "timePeriod": {
            "$ref": "#/components/schemas/ReportConfigTimePeriod",
            "description": "Has time period for pulling data for the report."
          },
          "timeframe": {
            "description": "The time frame for pulling data for the report. If custom, then a specific time period must be provided.",
            "enum": [
              "WeekToDate",
              "MonthToDate",
              "YearToDate",
              "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ReportTimeframeType"
            }
          },
          "type": {
            "description": "The type of the report. Usage represents actual usage, forecast represents forecasted data and UsageAndForecast represents both usage and forecasted data. Actual usage and forecasted data can be differentiated based on dates.",
            "enum": [
              "Usage"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ReportType"
            }
          }
        },
        "required": [
          "type",
          "timeframe"
        ],
        "type": "object"
      },
      "ReportConfigFilter": {
        "description": "The filter expression to be used in the report.",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/ReportConfigComparisonExpression",
            "description": "Has comparison expression for a tag"
          },
          "and": {
            "description": "The logical \"AND\" expression. Must have at least 2 items.",
            "items": {
              "$ref": "#/components/schemas/ReportConfigFilter"
            },
            "minItems": 2,
            "type": "array"
          },
          "dimensions": {
            "$ref": "#/components/schemas/ReportConfigComparisonExpression",
            "description": "Has comparison expression for a dimension"
          },
          "or": {
            "description": "The logical \"OR\" expression. Must have at least 2 items.",
            "items": {
              "$ref": "#/components/schemas/ReportConfigFilter"
            },
            "minItems": 2,
            "type": "array"
          },
          "tagKey": {
            "$ref": "#/components/schemas/ReportConfigComparisonExpression",
            "description": "Has comparison expression for a tag key"
          },
          "tagValue": {
            "$ref": "#/components/schemas/ReportConfigComparisonExpression",
            "description": "Has comparison expression for a tag value"
          }
        },
        "type": "object"
      },
      "ReportConfigGrouping": {
        "description": "The group by expression to be used in the report.",
        "properties": {
          "name": {
            "description": "The name of the column to group. This version supports subscription lowest possible grain.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ReportConfigColumnType",
            "description": "Has type of the column to group."
          }
        },
        "required": [
          "type",
          "name"
        ],
        "type": "object"
      },
      "ReportConfigSorting": {
        "description": "The order by expression to be used in the report.",
        "properties": {
          "direction": {
            "description": "Direction of sort.",
            "enum": [
              "Ascending",
              "Descending"
            ],
            "type": "string"
          },
          "name": {
            "description": "The name of the column to sort.",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ReportConfigTimePeriod": {
        "description": "The start and end date for pulling data for the report.",
        "properties": {
          "from": {
            "description": "The start date to pull data from.",
            "format": "date-time",
            "type": "string"
          },
          "to": {
            "description": "The end date to pull data to.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "from",
          "to"
        ],
        "type": "object"
      },
      "ReportURL": {
        "description": "The URL to download the generated report.",
        "properties": {
          "reportUrl": {
            "description": "The URL to download the generated report.",
            "type": "string"
          },
          "validUntil": {
            "description": "The time at which report URL becomes invalid.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Setting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxySettingResource"
          }
        ],
        "description": "State of the myscope setting.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SettingsProperties",
            "title": "Setting properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SettingsListResult": {
        "description": "Result of listing settings. It contains a list of available settings.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of settings.",
            "items": {
              "$ref": "#/components/schemas/Setting"
            },
            "maxItems": 10,
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SettingsProperties": {
        "description": "The properties of the setting.",
        "properties": {
          "cache": {
            "$ref": "#/components/schemas/Cache"
          },
          "scope": {
            "description": "Sets the default scope the current user will see when they sign into Azure Cost Management in the Azure portal.",
            "type": "string"
          },
          "startOn": {
            "description": "Indicates what scope Cost Management in the Azure portal should default to. Allowed values: LastUsed.",
            "enum": [
              "LastUsed",
              "ScopePicker",
              "SpecificScope"
            ],
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "scope"
        ],
        "type": "object"
      },
      "Status": {
        "description": "The status of the long running operation.",
        "properties": {
          "status": {
            "description": "The status of the long running operation.",
            "enum": [
              "Running",
              "Completed",
              "Failed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperationStatusType"
            }
          }
        },
        "type": "object"
      },
      "View": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "States and configurations of Cost Analysis.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ViewProperties",
            "title": "View properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ViewListResult": {
        "description": "Result of listing views. It contains a list of available views.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of views.",
            "items": {
              "$ref": "#/components/schemas/View"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ViewProperties": {
        "description": "The properties of the view.",
        "properties": {
          "accumulated": {
            "description": "Show costs accumulated over time.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AccumulatedType"
            }
          },
          "chart": {
            "description": "Chart type of the main view in Cost Analysis. Required.",
            "enum": [
              "Area",
              "Line",
              "StackedColumn",
              "GroupedColumn",
              "Table"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ChartType"
            }
          },
          "createdOn": {
            "description": "Date the user created this view.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "Selected currency.",
            "readOnly": true,
            "type": "string"
          },
          "dateRange": {
            "description": "Selected date range for viewing cost in.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "User input name of the view. Required.",
            "type": "string"
          },
          "kpis": {
            "description": "List of KPIs to show in Cost Analysis UI.",
            "items": {
              "$ref": "#/components/schemas/KpiProperties"
            },
            "type": "array"
          },
          "metric": {
            "description": "Metric to use when displaying costs.",
            "enum": [
              "ActualCost",
              "AmortizedCost",
              "AHUB"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MetricType"
            }
          },
          "modifiedOn": {
            "description": "Date when the user last modified this view.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "pivots": {
            "description": "Configuration of 3 sub-views in the Cost Analysis UI.",
            "items": {
              "$ref": "#/components/schemas/PivotProperties"
            },
            "type": "array"
          },
          "query": {
            "$ref": "#/components/schemas/ReportConfigDefinition",
            "description": "Query body configuration. Required.",
            "type": "object",
            "x-ms-client-flatten": true
          },
          "scope": {
            "description": "Cost Management scope to save the view on. This includes 'subscriptions/{subscriptionId}' for subscription scope, 'subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for InvoiceSection scope, 'providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.CostManagement/externalBillingAccounts/{externalBillingAccountName}' for ExternalBillingAccount scope, and '/providers/Microsoft.CostManagement/externalSubscriptions/{externalSubscriptionName}' for ExternalSubscription scope.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}