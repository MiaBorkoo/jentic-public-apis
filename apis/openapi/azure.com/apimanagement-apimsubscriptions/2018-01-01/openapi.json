{
  "openapi": "3.0.0",
  "info": {
    "description": "Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the product\u2019s APIs.",
    "title": "ApiManagementClient",
    "version": "2018-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2018-01-01/apimsubscriptions.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions": {
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "description": "| Field        | Supported operators    | Supported functions                         |\n|--------------|------------------------|---------------------------------------------|\n| id           | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| name         | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| stateComment | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| userId       | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| productId    | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| state        | eq                     |                                             |",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionCollection"
                }
              }
            },
            "description": "A collection of the Subscription entities for the specified API Management service instance."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Lists all subscriptions of the API Management service instance.",
        "operationId": "Subscription_List",
        "x-ms-examples": {
          "ApiManagementListSubscriptions": {
            "$ref": "./examples/ApiManagementListSubscriptions.json"
          }
        },
        "x-ms-odata": "#/components/schemas/SubscriptionContract",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}": {
      "delete": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The subscription details were successfully deleted."
          },
          "204": {
            "description": "The subscription details were successfully deleted."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Deletes the specified subscription.",
        "operationId": "Subscription_Delete",
        "x-ms-examples": {
          "ApiManagementDeleteSubscription": {
            "$ref": "./examples/ApiManagementDeleteSubscription.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionContract"
                }
              }
            },
            "description": "The response body contains the specified Subscription entity.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Gets the specified Subscription entity.",
        "operationId": "Subscription_Get",
        "x-ms-examples": {
          "ApiManagementGetSubscription": {
            "$ref": "./examples/ApiManagementGetSubscription.json"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Specified apimanagement subscription entity exists and current entity state version is present in the ETag header.",
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.",
        "operationId": "Subscription_GetEntityTag",
        "x-ms-examples": {
          "ApiManagementHeadSubscription": {
            "$ref": "./examples/ApiManagementHeadSubscription.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/components/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/IfMatchRequiredParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The subscription details were successfully updated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Updates the details of a subscription specified by its identifier.",
        "operationId": "Subscription_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdateParameters"
              }
            }
          },
          "description": "Update parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementUpdateSubscription": {
            "$ref": "./examples/ApiManagementUpdateSubscription.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "#/components/parameters/NotifySubscriptionStateChangeParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/IfMatchOptionalParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionContract"
                }
              }
            },
            "description": "The user already subscribed to the product."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionContract"
                }
              }
            },
            "description": "The user was successfully subscribed to the product."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Creates or updates the subscription of specified user to the specified product.",
        "operationId": "Subscription_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateParameters"
              }
            }
          },
          "description": "Create parameters.",
          "required": true
        },
        "x-ms-examples": {
          "ApiManagementCreateSubscription": {
            "$ref": "./examples/ApiManagementCreateSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regeneratePrimaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The primary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Regenerates primary key of existing subscription of the API Management service instance.",
        "operationId": "Subscription_RegeneratePrimaryKey",
        "x-ms-examples": {
          "ApiManagementSubscriptionRegenerateKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}/regenerateSecondaryKey": {
      "post": {
        "parameters": [
          {
            "$ref": "./apimanagement.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionEntityIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "The secondary key was successfully regenerated."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./apimanagement.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Subscriptions"
        ],
        "description": "Regenerates secondary key of existing subscription of the API Management service instance.",
        "operationId": "Subscription_RegenerateSecondaryKey",
        "x-ms-examples": {
          "ApiManagementSubscriptionRegenerateKey": {
            "$ref": "./examples/ApiManagementSubscriptionRegenerateKey.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "NotifySubscriptionStateChangeParameter": {
        "description": "Notify change in Subscription State. \n - If false, do not send any email notification for change of state of subscription \n - If true, send email notification of change of state of subscription ",
        "in": "query",
        "name": "notify",
        "required": false,
        "schema": {
          "type": "boolean"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionEntityIdParameter": {
        "description": "Subscription entity Identifier. The entity represents the association between a user and a product in API Management.",
        "in": "path",
        "name": "sid",
        "required": true,
        "schema": {
          "maxLength": 80,
          "pattern": "(^[\\w]+$)|(^[\\w][\\w\\-]+[\\w]$)",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "SubscriptionCollection": {
        "description": "Paged Subscriptions list representation.",
        "properties": {
          "nextLink": {
            "description": "Next page link if any.",
            "type": "string"
          },
          "value": {
            "description": "Page values.",
            "items": {
              "$ref": "#/components/schemas/SubscriptionContract"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubscriptionContract": {
        "allOf": [
          {
            "$ref": "./apimanagement.json#/definitions/Resource"
          }
        ],
        "description": "Subscription details.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SubscriptionContractProperties",
            "description": "Subscription contract properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SubscriptionContractProperties": {
        "description": "Subscription details.",
        "properties": {
          "createdDate": {
            "description": "Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The name of the subscription, or null if the subscription has no name.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "endDate": {
            "description": "Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is not automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "expirationDate": {
            "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "notificationDate": {
            "description": "Upcoming subscription expiration notification date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "primaryKey": {
            "description": "Subscription primary key.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "productId": {
            "description": "The product resource identifier of the subscribed product. The value is a valid relative URL in the format of /products/{productId} where {productId} is a product identifier.",
            "type": "string"
          },
          "secondaryKey": {
            "description": "Subscription secondary key.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "startDate": {
            "description": "Subscription activation date. The setting is for audit purposes only and the subscription is not automatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n",
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "description": "Subscription state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
            "enum": [
              "suspended",
              "active",
              "expired",
              "submitted",
              "rejected",
              "cancelled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SubscriptionState"
            }
          },
          "stateComment": {
            "description": "Optional subscription comment added by an administrator.",
            "type": "string"
          },
          "userId": {
            "description": "The user resource identifier of the subscription owner. The value is a valid relative URL in the format of /users/{uid} where {uid} is a user identifier.",
            "type": "string"
          }
        },
        "required": [
          "userId",
          "productId",
          "state",
          "primaryKey",
          "secondaryKey"
        ],
        "type": "object"
      },
      "SubscriptionCreateParameterProperties": {
        "description": "Parameters supplied to the Create subscription operation.",
        "properties": {
          "displayName": {
            "description": "Subscription name.",
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "primaryKey": {
            "description": "Primary subscription key. If not specified during request key will be generated automatically.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "productId": {
            "description": "Product (product id path) for which subscription is being created in form /products/{productId}",
            "type": "string"
          },
          "secondaryKey": {
            "description": "Secondary subscription key. If not specified during request key will be generated automatically.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "description": "Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
            "enum": [
              "suspended",
              "active",
              "expired",
              "submitted",
              "rejected",
              "cancelled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SubscriptionState"
            }
          },
          "userId": {
            "description": "User (user id path) for whom subscription is being created in form /users/{uid}",
            "type": "string"
          }
        },
        "required": [
          "userId",
          "productId",
          "displayName"
        ],
        "type": "object"
      },
      "SubscriptionCreateParameters": {
        "description": "Subscription create details.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SubscriptionCreateParameterProperties",
            "description": "Subscription contract properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SubscriptionUpdateParameterProperties": {
        "description": "Parameters supplied to the Update subscription operation.",
        "properties": {
          "displayName": {
            "description": "Subscription name.",
            "type": "string"
          },
          "expirationDate": {
            "description": "Subscription expiration date. The setting is for audit purposes only and the subscription is not automatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
            "format": "date-time",
            "type": "string"
          },
          "primaryKey": {
            "description": "Primary subscription key.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "productId": {
            "description": "Product identifier path: /products/{productId}",
            "type": "string"
          },
          "secondaryKey": {
            "description": "Secondary subscription key.",
            "maxLength": 256,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "description": "Subscription state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription reached its expiration date and was deactivated.",
            "enum": [
              "suspended",
              "active",
              "expired",
              "submitted",
              "rejected",
              "cancelled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "SubscriptionState"
            }
          },
          "stateComment": {
            "description": "Comments describing subscription state change by the administrator.",
            "type": "string"
          },
          "userId": {
            "description": "User identifier path: /users/{uid}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubscriptionUpdateParameters": {
        "description": "Subscription update details.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SubscriptionUpdateParameterProperties",
            "description": "Subscription Update contract properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}