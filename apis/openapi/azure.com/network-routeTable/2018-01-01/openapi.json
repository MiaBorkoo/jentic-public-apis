{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2018-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2018-01-01/routeTable.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/routeTables": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTableListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTableListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of RouteTable resources."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Gets all route tables in a subscription.",
        "operationId": "RouteTables_ListAll",
        "x-ms-examples": {
          "List all route tables": {
            "$ref": "./examples/RouteTableListAll.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTableListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTableListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of RouteTable resources."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Gets all route tables in a resource group.",
        "operationId": "RouteTables_List",
        "x-ms-examples": {
          "List route tables in resource group": {
            "$ref": "./examples/RouteTableList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. Operation to delete was accepted."
          },
          "202": {
            "description": "Accepted. If route table not found returned synchronously, otherwise if found returned asynchronously."
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Deletes the specified route table.",
        "operationId": "RouteTables_Delete",
        "x-ms-examples": {
          "Delete route table": {
            "$ref": "./examples/RouteTableDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "description": "Expands referenced resources.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting RouteTable resource."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Gets the specified route table.",
        "operationId": "RouteTables_Get",
        "x-ms-examples": {
          "Get route table": {
            "$ref": "./examples/RouteTableGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting RouteTable resource."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Updates a route table tags.",
        "operationId": "RouteTables_UpdateTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./network.json#/definitions/TagsObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "./network.json#/definitions/TagsObject"
              }
            }
          },
          "description": "Parameters supplied to update route table tags.",
          "required": true
        },
        "x-ms-examples": {
          "Update route table tags": {
            "$ref": "./examples/RouteTableUpdateTags.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting RouteTable resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteTable"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting RouteTable resource."
          }
        },
        "tags": [
          "RouteTables"
        ],
        "description": "Create or updates a route table in a specified resource group.",
        "operationId": "RouteTables_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteTable"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteTable"
              }
            }
          },
          "description": "Parameters supplied to the create or update route table operation.",
          "required": true
        },
        "x-ms-examples": {
          "Create route table": {
            "$ref": "./examples/RouteTableCreate.json"
          },
          "Create route table with route": {
            "$ref": "./examples/RouteTableCreateWithRoute.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of Route resources."
          }
        },
        "tags": [
          "Routes"
        ],
        "description": "Gets all routes in a route table.",
        "operationId": "Routes_List",
        "x-ms-examples": {
          "List routes": {
            "$ref": "./examples/RouteTableRouteList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route.",
            "in": "path",
            "name": "routeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Route was deleted or not found."
          }
        },
        "tags": [
          "Routes"
        ],
        "description": "Deletes the specified route from a route table.",
        "operationId": "Routes_Delete",
        "x-ms-examples": {
          "Delete route": {
            "$ref": "./examples/RouteTableRouteDelete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route.",
            "in": "path",
            "name": "routeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting Route resource."
          }
        },
        "tags": [
          "Routes"
        ],
        "description": "Gets the specified route from a route table.",
        "operationId": "Routes_Get",
        "x-ms-examples": {
          "Get route": {
            "$ref": "./examples/RouteTableRouteGet.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route table.",
            "in": "path",
            "name": "routeTableName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the route.",
            "in": "path",
            "name": "routeName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting Route resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting Route resource."
          }
        },
        "tags": [
          "Routes"
        ],
        "description": "Creates or updates a route in the specified route table.",
        "operationId": "Routes_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Route"
              }
            }
          },
          "description": "Parameters supplied to the create or update route operation.",
          "required": true
        },
        "x-ms-examples": {
          "Create route": {
            "$ref": "./examples/RouteTableRouteCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Route": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Route resource",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RoutePropertiesFormat",
            "description": "Properties of the route.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RouteListResult": {
        "description": "Response for the ListRoute API service call",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets a list of routes in a resource group.",
            "items": {
              "$ref": "#/components/schemas/Route"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RoutePropertiesFormat": {
        "description": "Route resource",
        "properties": {
          "addressPrefix": {
            "description": "The destination CIDR to which the route applies.",
            "type": "string"
          },
          "nextHopIpAddress": {
            "description": "The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.",
            "type": "string"
          },
          "nextHopType": {
            "description": "The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'",
            "enum": [
              "VirtualNetworkGateway",
              "VnetLocal",
              "Internet",
              "VirtualAppliance",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RouteNextHopType"
            }
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        },
        "required": [
          "nextHopType"
        ],
        "type": "object"
      },
      "RouteTable": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "Route table resource.",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RouteTablePropertiesFormat",
            "description": "Properties of the route table.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RouteTableListResult": {
        "description": "Response for the ListRouteTable API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets a list of route tables in a resource group.",
            "items": {
              "$ref": "#/components/schemas/RouteTable"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RouteTablePropertiesFormat": {
        "description": "Route Table resource",
        "properties": {
          "disableBgpRoutePropagation": {
            "description": "Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.",
            "type": "boolean"
          },
          "provisioningState": {
            "description": "The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "routes": {
            "description": "Collection of routes contained within a route table.",
            "items": {
              "$ref": "#/components/schemas/Route"
            },
            "type": "array"
          },
          "subnets": {
            "description": "A collection of references to subnets.",
            "items": {
              "$ref": "./virtualNetwork.json#/definitions/Subnet"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}