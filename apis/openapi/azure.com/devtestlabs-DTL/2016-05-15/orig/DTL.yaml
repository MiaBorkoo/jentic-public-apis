openapi: 3.0.0
info:
  description: The DevTest Labs Client.
  title: DevTestLabsClient
  version: '2016-05-15'
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.DevTestLab/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderOperationResult'
          description: Success
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ProviderOperations
      description: Result of the request to list REST API operations
      operationId: ProviderOperations_List
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/labs':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: >-
            Specify the $expand query. Example:
            'properties($select=defaultStorageAccount)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Lab_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: List labs in a subscription.
      operationId: Labs_ListBySubscription
      x-ms-odata: '#/components/schemas/Lab'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/locations/{locationName}/operations/{name}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/locationName'
        - description: The name of the operation.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResult'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Operations
      description: Get operation.
      operationId: Operations_Get
  '/subscriptions/{subscriptionId}/providers/Microsoft.DevTestLab/schedules':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Schedule_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: List schedules in a subscription.
      operationId: GlobalSchedules_ListBySubscription
      x-ms-odata: '#/components/schemas/Schedule'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: >-
            Specify the $expand query. Example:
            'properties($select=defaultStorageAccount)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Lab_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: List labs in a resource group.
      operationId: Labs_ListByResourceGroup
      x-ms-odata: '#/components/schemas/Lab'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=displayName)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_ArtifactSource_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArtifactSources
      description: List artifact sources in a given lab.
      operationId: ArtifactSources_List
      x-ms-odata: '#/components/schemas/ArtifactSource'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: artifactSourceName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=displayName)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_ArmTemplate_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArmTemplates
      description: List azure resource manager templates in a given artifact source.
      operationId: ArmTemplates_List
      x-ms-odata: '#/components/schemas/ArmTemplate'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/armtemplates/{name}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: artifactSourceName
          required: true
          schema:
            type: string
        - description: The name of the azure Resource Manager template.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=displayName)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmTemplate'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArmTemplates
      description: Get azure resource manager template.
      operationId: ArmTemplates_Get
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: artifactSourceName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=title)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Artifact_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Artifacts
      description: List artifacts in a given artifact source.
      operationId: Artifacts_List
      x-ms-odata: '#/components/schemas/Artifact'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: artifactSourceName
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=title)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Artifacts
      description: Get artifact.
      operationId: Artifacts_Get
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{artifactSourceName}/artifacts/{name}/generateArmTemplate':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: artifactSourceName
          required: true
          schema:
            type: string
        - description: The name of the artifact.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArmTemplateInfo'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Artifacts
      description: >-
        Generates an ARM template for the given artifact, uploads the required
        files to a storage account, and validates the generated artifact.
      operationId: Artifacts_GenerateArmTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateArmTemplateRequest'
        description: Parameters for generating an ARM template for deploying artifacts.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/artifactsources/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArtifactSources
      description: Delete artifact source.
      operationId: ArtifactSources_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=displayName)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArtifactSources
      description: Get artifact source.
      operationId: ArtifactSources_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArtifactSources
      description: Modify properties of artifact sources.
      operationId: ArtifactSources_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSourceFragment'
        description: Properties of an artifact source.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the artifact source.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactSource'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ArtifactSources
      description: Create or replace an existing artifact source.
      operationId: ArtifactSources_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtifactSource'
        description: Properties of an artifact source.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/costs/{name}':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the cost.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($expand=labCostDetails)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Costs
      description: Get cost.
      operationId: Costs_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the cost.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabCost'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Costs
      description: Create or replace an existing cost.
      operationId: Costs_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabCost'
        description: A cost item.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=vm)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_CustomImage_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - CustomImages
      description: List custom images in a given lab.
      operationId: CustomImages_List
      x-ms-odata: '#/components/schemas/CustomImage'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/customimages/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the custom image.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - CustomImages
      description: Delete custom image. This operation can take a while to complete.
      operationId: CustomImages_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the custom image.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=vm)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - CustomImages
      description: Get custom image.
      operationId: CustomImages_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the custom image.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomImage'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - CustomImages
      description: >-
        Create or replace an existing custom image. This operation can take a
        while to complete.
      operationId: CustomImages_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomImage'
        description: A custom image.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=description)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Formula_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Formulas
      description: List formulas in a given lab.
      operationId: Formulas_List
      x-ms-odata: '#/components/schemas/Formula'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/formulas/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the formula.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Formulas
      description: Delete formula.
      operationId: Formulas_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the formula.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=description)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Formulas
      description: Get formula.
      operationId: Formulas_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the formula.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formula'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Formulas
      description: >-
        Create or replace an existing Formula. This operation can take a while
        to complete.
      operationId: Formulas_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Formula'
        description: >-
          A formula for creating a VM, specifying an image base and other
          parameters
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/galleryimages':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=author)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_GalleryImage_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GalleryImages
      description: List gallery images in a given lab.
      operationId: GalleryImages_List
      x-ms-odata: '#/components/schemas/GalleryImage'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=webHookUrl)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseWithContinuation_NotificationChannel_
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: List notification channels in a given lab.
      operationId: NotificationChannels_List
      x-ms-odata: '#/components/schemas/NotificationChannel'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the notificationChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: Delete notification channel.
      operationId: NotificationChannels_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the notificationChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=webHookUrl)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: Get notification channels.
      operationId: NotificationChannels_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the notificationChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: Modify properties of notification channels.
      operationId: NotificationChannels_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannelFragment'
        description: A notification.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the notificationChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannel'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: Create or replace an existing notificationChannel.
      operationId: NotificationChannels_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationChannel'
        description: A notification.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/notificationchannels/{name}/notify':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the notificationChannel.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - NotificationChannels
      description: Send notification to provided channel.
      operationId: NotificationChannels_Notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyParameters'
        description: Properties for generating a Notification.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{name}/evaluatePolicies':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluatePoliciesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - PolicySets
      description: Evaluates lab policy.
      operationId: PolicySets_EvaluatePolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluatePoliciesRequest'
        description: Request body for evaluating a policy set.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: policySetName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=description)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Policy_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Policies
      description: List policies in a given policy set.
      operationId: Policies_List
      x-ms-odata: '#/components/schemas/Policy'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/policysets/{policySetName}/policies/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: policySetName
          required: true
          schema:
            type: string
        - description: The name of the policy.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Policies
      description: Delete policy.
      operationId: Policies_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: policySetName
          required: true
          schema:
            type: string
        - description: The name of the policy.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=description)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Policies
      description: Get policy.
      operationId: Policies_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: policySetName
          required: true
          schema:
            type: string
        - description: The name of the policy.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Policies
      description: Modify properties of policies.
      operationId: Policies_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyFragment'
        description: A Policy.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the policy set.
          in: path
          name: policySetName
          required: true
          schema:
            type: string
        - description: The name of the policy.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Policies
      description: Create or replace an existing policy.
      operationId: Policies_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        description: A Policy.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Schedule_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: List schedules in a given lab.
      operationId: Schedules_List
      x-ms-odata: '#/components/schemas/Schedule'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Delete schedule.
      operationId: Schedules_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Get schedule.
      operationId: Schedules_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Modify properties of schedules.
      operationId: Schedules_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
        description: A schedule.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Create or replace an existing schedule.
      operationId: Schedules_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
        description: A schedule.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/execute':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: Schedules_Execute
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/schedules/{name}/listApplicable':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Schedule_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Schedules
      description: Lists all applicable schedules
      operationId: Schedules_ListApplicable
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_ServiceRunner_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ServiceRunners
      description: List service runners in a given lab.
      operationId: ServiceRunners_List
      x-ms-odata: '#/components/schemas/ServiceRunner'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/servicerunners/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the service runner.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ServiceRunners
      description: Delete service runner.
      operationId: ServiceRunners_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the service runner.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ServiceRunners
      description: Get service runner.
      operationId: ServiceRunners_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the service runner.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRunner'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - ServiceRunners
      description: Create or replace an existing Service runner.
      operationId: ServiceRunners_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRunner'
        description: A container for a managed identity to execute DevTest lab services.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=identity)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_User_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Users
      description: List user profiles in a given lab.
      operationId: Users_List
      x-ms-odata: '#/components/schemas/User'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Users
      description: Delete user profile. This operation can take a while to complete.
      operationId: Users_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=identity)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Users
      description: Get user profile.
      operationId: Users_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Users
      description: Modify properties of user profiles.
      operationId: Users_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFragment'
        description: Profile of a lab user.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Users
      description: Create or replace an existing user profile.
      operationId: Users_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Profile of a lab user.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=diskType)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Disk_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: List disks in a given user profile.
      operationId: Disks_List
      x-ms-odata: '#/components/schemas/Disk'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the disk.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: Delete disk. This operation can take a while to complete.
      operationId: Disks_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the disk.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=diskType)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: Get disk.
      operationId: Disks_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the disk.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disk'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: >-
        Create or replace an existing disk. This operation can take a while to
        complete.
      operationId: Disks_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disk'
        description: A Disk.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/attach':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the disk.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: >-
        Attach and create the lease of the disk to the virtual machine. This
        operation can take a while to complete.
      operationId: Disks_Attach
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachDiskProperties'
        description: Properties of the disk to attach.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/disks/{name}/detach':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the disk.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Disks
      description: >-
        Detach and break the lease of the disk attached to the virtual machine.
        This operation can take a while to complete.
      operationId: Disks_Detach
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachDiskProperties'
        description: Properties of the disk to detach.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=deploymentProperties)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_DtlEnvironment_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Environments
      description: List environments in a given user profile.
      operationId: Environments_List
      x-ms-odata: '#/components/schemas/DtlEnvironment'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/environments/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the environment.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Environments
      description: Delete environment. This operation can take a while to complete.
      operationId: Environments_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the environment.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=deploymentProperties)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Environments
      description: Get environment.
      operationId: Environments_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the environment.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtlEnvironment'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Environments
      description: >-
        Create or replace an existing environment. This operation can take a
        while to complete.
      operationId: Environments_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DtlEnvironment'
        description: 'An environment, which is essentially an ARM template deployment.'
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=value)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Secret_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Secrets
      description: List secrets in a given user profile.
      operationId: Secrets_List
      x-ms-odata: '#/components/schemas/Secret'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/users/{userName}/secrets/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the secret.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Secrets
      description: Delete secret.
      operationId: Secrets_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the secret.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=value)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Secrets
      description: Get secret.
      operationId: Secrets_Get
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the user profile.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: The name of the secret.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Secret'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Secrets
      description: Create or replace an existing secret.
      operationId: Secrets_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Secret'
        description: A secret.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseWithContinuation_LabVirtualMachine_
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: List virtual machines in a given lab.
      operationId: VirtualMachines_List
      x-ms-odata: '#/components/schemas/LabVirtualMachine'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Delete virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Get virtual machine.
      operationId: VirtualMachines_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Modify properties of virtual machines.
      operationId: VirtualMachines_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachineFragment'
        description: A virtual machine.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabVirtualMachine'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: >-
        Create or replace an existing Virtual machine. This operation can take a
        while to complete.
      operationId: VirtualMachines_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachine'
        description: A virtual machine.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/addDataDisk':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: >-
        Attach a new or existing data disk to virtual machine. This operation
        can take a while to complete.
      operationId: VirtualMachines_AddDataDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataDiskProperties'
        description: >-
          Request body for adding a new or existing data disk to a virtual
          machine.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/applyArtifacts':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: >-
        Apply artifacts to virtual machine. This operation can take a while to
        complete.
      operationId: VirtualMachines_ApplyArtifacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyArtifactsRequest'
        description: Request body for applying artifacts to a virtual machine.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/claim':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: >-
        Take ownership of an existing virtual machine This operation can take a
        while to complete.
      operationId: VirtualMachines_Claim
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/detachDataDisk':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: >-
        Detach the specified disk from the virtual machine. This operation can
        take a while to complete.
      operationId: VirtualMachines_DetachDataDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachDataDiskProperties'
        description: Request body for detaching data disk from a virtual machine.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/listApplicableSchedules':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicableSchedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Lists all applicable schedules
      operationId: VirtualMachines_ListApplicableSchedules
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/start':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Start a virtual machine. This operation can take a while to complete.
      operationId: VirtualMachines_Start
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{name}/stop':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachines
      description: Stop a virtual machine This operation can take a while to complete.
      operationId: VirtualMachines_Stop
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Schedule_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: List schedules in a given virtual machine.
      operationId: VirtualMachineSchedules_List
      x-ms-odata: '#/components/schemas/Schedule'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: Delete schedule.
      operationId: VirtualMachineSchedules_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: Get schedule.
      operationId: VirtualMachineSchedules_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: Modify properties of schedules.
      operationId: VirtualMachineSchedules_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
        description: A schedule.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: Create or replace an existing schedule.
      operationId: VirtualMachineSchedules_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
        description: A schedule.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualmachines/{virtualMachineName}/schedules/{name}/execute':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual machine.
          in: path
          name: virtualMachineName
          required: true
          schema:
            type: string
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualMachineSchedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: VirtualMachineSchedules_Execute
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($expand=externalSubnets)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_VirtualNetwork_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualNetworks
      description: List virtual networks in a given lab.
      operationId: VirtualNetworks_List
      x-ms-odata: '#/components/schemas/VirtualNetwork'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{labName}/virtualnetworks/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualNetworks
      description: Delete virtual network. This operation can take a while to complete.
      operationId: VirtualNetworks_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($expand=externalSubnets)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualNetworks
      description: Get virtual network.
      operationId: VirtualNetworks_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualNetworks
      description: Modify properties of virtual networks.
      operationId: VirtualNetworks_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetworkFragment'
        description: A virtual network.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: labName
          required: true
          schema:
            type: string
        - description: The name of the virtual network.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetwork'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - VirtualNetworks
      description: >-
        Create or replace an existing virtual network. This operation can take a
        while to complete.
      operationId: VirtualNetworks_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualNetwork'
        description: A virtual network.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: Delete lab. This operation can take a while to complete.
      operationId: Labs_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: >-
            Specify the $expand query. Example:
            'properties($select=defaultStorageAccount)'
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: Get lab.
      operationId: Labs_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: Modify properties of labs.
      operationId: Labs_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabFragment'
        description: A lab.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lab'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: >-
        Create or replace an existing lab. This operation can take a while to
        complete.
      operationId: Labs_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lab'
        description: A lab.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/claimAnyVm':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: >-
        Claim a random claimable virtual machine in the lab. This operation can
        take a while to complete.
      operationId: Labs_ClaimAnyVm
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/createEnvironment':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: >-
        Create virtual machines in a lab. This operation can take a while to
        complete.
      operationId: Labs_CreateEnvironment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabVirtualMachineCreationParameter'
        description: Properties for creating a virtual machine.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/exportResourceUsage':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: >-
        Exports the lab resource usage into a storage account This operation can
        take a while to complete.
      operationId: Labs_ExportResourceUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportResourceUsageParameters'
        description: The parameters of the export operation.
        required: true
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/generateUploadUri':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUploadUriResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: Generate a URI for uploading custom disk images to a Lab.
      operationId: Labs_GenerateUploadUri
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUploadUriParameter'
        description: Properties for generating an upload URI.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/labs/{name}/listVhds':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the lab.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_LabVhd_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - Labs
      description: List disk images available for custom image creation.
      operationId: Labs_ListVhds
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - description: The filter to apply to the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The maximum number of resources to return from the operation.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            type: integer
        - description: 'The ordering expression for the results, using OData notation.'
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWithContinuation_Schedule_'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: List schedules in a resource group.
      operationId: GlobalSchedules_ListByResourceGroup
      x-ms-odata: '#/components/schemas/Schedule'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: Delete schedule.
      operationId: GlobalSchedules_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: 'Specify the $expand query. Example: ''properties($select=status)'''
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: Get schedule.
      operationId: GlobalSchedules_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: Modify properties of schedules.
      operationId: GlobalSchedules_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFragment'
        description: A schedule.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: Create or replace an existing schedule.
      operationId: GlobalSchedules_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
        description: A schedule.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/execute':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: Execute a schedule. This operation can take a while to complete.
      operationId: GlobalSchedules_Execute
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevTestLab/schedules/{name}/retarget':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/resourceGroupName'
        - description: The name of the schedule.
          in: path
          name: name
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/api-version'
      responses:
        '200':
          description: OK
        '202':
          description: Accepted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: BadRequest
      security:
        - azure_auth:
            - user_impersonation
      tags:
        - GlobalSchedules
      description: >-
        Updates a schedule's target resource Id. This operation can take a while
        to complete.
      operationId: GlobalSchedules_Retarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetargetScheduleProperties'
        description: Properties for retargeting a virtual machine schedule.
        required: true
      x-ms-long-running-operation: true
components:
  parameters:
    api-version:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        default: '2016-05-15'
        type: string
    locationName:
      description: The name of the location.
      in: path
      name: locationName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    resourceGroupName:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    subscriptionId:
      description: The subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  requestBodies:
    Schedule:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
      description: A schedule.
      required: true
    ScheduleFragment:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScheduleFragment'
      description: A schedule.
      required: true
  schemas:
    ApplicableSchedule:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: >-
        Schedules applicable to a virtual machine. The schedules may have been
        defined on a VM or on lab level.
      properties:
        properties:
          $ref: '#/components/schemas/ApplicableScheduleProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ApplicableScheduleFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: >-
        Schedules applicable to a virtual machine. The schedules may have been
        defined on a VM or on lab level.
      properties:
        properties:
          $ref: '#/components/schemas/ApplicableSchedulePropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ApplicableScheduleProperties:
      description: Properties of a schedules applicable to a virtual machine.
      properties:
        labVmsShutdown:
          $ref: '#/components/schemas/Schedule'
          description: >-
            The auto-shutdown schedule, if one has been set at the lab or lab
            resource level.
        labVmsStartup:
          $ref: '#/components/schemas/Schedule'
          description: >-
            The auto-startup schedule, if one has been set at the lab or lab
            resource level.
      type: object
    ApplicableSchedulePropertiesFragment:
      description: Properties of a schedules applicable to a virtual machine.
      properties:
        labVmsShutdown:
          $ref: '#/components/schemas/ScheduleFragment'
          description: >-
            The auto-shutdown schedule, if one has been set at the lab or lab
            resource level.
        labVmsStartup:
          $ref: '#/components/schemas/ScheduleFragment'
          description: >-
            The auto-startup schedule, if one has been set at the lab or lab
            resource level.
      type: object
    ApplyArtifactsRequest:
      description: Request body for applying artifacts to a virtual machine.
      properties:
        artifacts:
          description: The list of artifacts to apply.
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
          type: array
      type: object
    ArmTemplate:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: An Azure Resource Manager template.
      properties:
        properties:
          $ref: '#/components/schemas/ArmTemplateProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ArmTemplateInfo:
      description: Information about a generated ARM template.
      properties:
        parameters:
          description: The parameters of the ARM template.
          type: object
        template:
          description: The template's contents.
          type: object
      type: object
    ArmTemplateParameterProperties:
      description: Properties of an Azure Resource Manager template parameter.
      properties:
        name:
          description: The name of the template parameter.
          type: string
        value:
          description: The value of the template parameter.
          type: string
      type: object
    ArmTemplateProperties:
      description: Properties of an Azure Resource Manager template.
      properties:
        contents:
          description: The contents of the ARM template.
          readOnly: true
          type: object
        createdDate:
          description: The creation date of the armTemplate.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the ARM template.
          readOnly: true
          type: string
        displayName:
          description: The display name of the ARM template.
          readOnly: true
          type: string
        icon:
          description: The URI to the icon of the ARM template.
          readOnly: true
          type: string
        parametersValueFilesInfo:
          description: >-
            File name and parameter values information from all
            azuredeploy.*.parameters.json for the ARM template.
          items:
            $ref: '#/components/schemas/ParametersValueFileInfo'
          readOnly: true
          type: array
        publisher:
          description: The publisher of the ARM template.
          readOnly: true
          type: string
      type: object
    Artifact:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: An artifact.
      properties:
        properties:
          $ref: '#/components/schemas/ArtifactProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ArtifactDeploymentStatusProperties:
      description: Properties of an artifact deployment.
      properties:
        artifactsApplied:
          description: The total count of the artifacts that were successfully applied.
          format: int32
          type: integer
        deploymentStatus:
          description: The deployment status of the artifact.
          type: string
        totalArtifacts:
          description: The total count of the artifacts that were tentatively applied.
          format: int32
          type: integer
      type: object
    ArtifactDeploymentStatusPropertiesFragment:
      description: Properties of an artifact deployment.
      properties:
        artifactsApplied:
          description: The total count of the artifacts that were successfully applied.
          format: int32
          type: integer
        deploymentStatus:
          description: The deployment status of the artifact.
          type: string
        totalArtifacts:
          description: The total count of the artifacts that were tentatively applied.
          format: int32
          type: integer
      type: object
    ArtifactInstallProperties:
      description: Properties of an artifact.
      properties:
        parameters:
          description: The parameters of the artifact.
          items:
            $ref: '#/components/schemas/ArtifactParameterProperties'
          type: array
        artifactId:
          description: The artifact's identifier.
          type: string
        deploymentStatusMessage:
          description: The status message from the deployment.
          type: string
        installTime:
          description: The time that the artifact starts to install on the virtual machine.
          format: date-time
          type: string
        status:
          description: The status of the artifact.
          type: string
        vmExtensionStatusMessage:
          description: The status message from the virtual machine extension.
          type: string
      type: object
    ArtifactInstallPropertiesFragment:
      description: Properties of an artifact.
      properties:
        parameters:
          description: The parameters of the artifact.
          items:
            $ref: '#/components/schemas/ArtifactParameterPropertiesFragment'
          type: array
        artifactId:
          description: The artifact's identifier.
          type: string
        deploymentStatusMessage:
          description: The status message from the deployment.
          type: string
        installTime:
          description: The time that the artifact starts to install on the virtual machine.
          format: date-time
          type: string
        status:
          description: The status of the artifact.
          type: string
        vmExtensionStatusMessage:
          description: The status message from the virtual machine extension.
          type: string
      type: object
    ArtifactParameterProperties:
      description: Properties of an artifact parameter.
      properties:
        name:
          description: The name of the artifact parameter.
          type: string
        value:
          description: The value of the artifact parameter.
          type: string
      type: object
    ArtifactParameterPropertiesFragment:
      description: Properties of an artifact parameter.
      properties:
        name:
          description: The name of the artifact parameter.
          type: string
        value:
          description: The value of the artifact parameter.
          type: string
      type: object
    ArtifactProperties:
      description: Properties of an artifact.
      properties:
        parameters:
          description: The artifact's parameters.
          readOnly: true
          type: object
        createdDate:
          description: The artifact's creation date.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The artifact's description.
          readOnly: true
          type: string
        filePath:
          description: The file path to the artifact.
          readOnly: true
          type: string
        icon:
          description: The URI to the artifact icon.
          readOnly: true
          type: string
        publisher:
          description: The artifact's publisher.
          readOnly: true
          type: string
        targetOsType:
          description: The artifact's target OS.
          readOnly: true
          type: string
        title:
          description: The artifact's title.
          readOnly: true
          type: string
      type: object
    ArtifactSource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Properties of an artifact source.
      properties:
        properties:
          $ref: '#/components/schemas/ArtifactSourceProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ArtifactSourceFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Properties of an artifact source.
      properties:
        properties:
          $ref: '#/components/schemas/ArtifactSourcePropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ArtifactSourceProperties:
      description: Properties of an artifact source.
      properties:
        armTemplateFolderPath:
          description: The folder containing Azure Resource Manager templates.
          type: string
        branchRef:
          description: The artifact source's branch reference.
          type: string
        createdDate:
          description: The artifact source's creation date.
          format: date-time
          readOnly: true
          type: string
        displayName:
          description: The artifact source's display name.
          type: string
        folderPath:
          description: The folder containing artifacts.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        securityToken:
          description: The security token to authenticate to the artifact source.
          type: string
        sourceType:
          description: The artifact source's type.
          enum:
            - VsoGit
            - GitHub
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceControlType
        status:
          description: >-
            Indicates if the artifact source is enabled (values: Enabled,
            Disabled).
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: EnableStatus
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        uri:
          description: The artifact source's URI.
          type: string
      type: object
    ArtifactSourcePropertiesFragment:
      description: Properties of an artifact source.
      properties:
        armTemplateFolderPath:
          description: The folder containing Azure Resource Manager templates.
          type: string
        branchRef:
          description: The artifact source's branch reference.
          type: string
        displayName:
          description: The artifact source's display name.
          type: string
        folderPath:
          description: The folder containing artifacts.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        securityToken:
          description: The security token to authenticate to the artifact source.
          type: string
        sourceType:
          description: The artifact source's type.
          enum:
            - VsoGit
            - GitHub
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceControlType
        status:
          description: >-
            Indicates if the artifact source is enabled (values: Enabled,
            Disabled).
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: EnableStatus
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        uri:
          description: The artifact source's URI.
          type: string
      type: object
    AttachDiskProperties:
      description: Properties of the disk to attach.
      properties:
        leasedByLabVmId:
          description: >-
            The resource ID of the Lab virtual machine to which the disk is
            attached.
          type: string
      type: object
    AttachNewDataDiskOptions:
      description: Properties to attach new disk to the Virtual Machine.
      properties:
        diskName:
          description: The name of the disk to be attached.
          type: string
        diskSizeGiB:
          description: Size of the disk to be attached in Gibibytes.
          format: int32
          type: integer
        diskType:
          description: 'The storage type for the disk (i.e. Standard, Premium).'
          enum:
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: StorageType
      type: object
    BulkCreationParameters:
      description: Parameters for creating multiple virtual machines as a single action.
      properties:
        instanceCount:
          description: The number of virtual machine instances to create.
          format: int32
          type: integer
      type: object
    CloudError:
      description: Error from a REST request.
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
      type: object
      x-ms-external: true
    CloudErrorBody:
      description: Body of an error from a REST request.
      properties:
        code:
          type: string
        details:
          description: Inner errors.
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          type: array
        message:
          type: string
        target:
          type: string
      type: object
      x-ms-external: true
    ComputeDataDisk:
      description: A data disks attached to a virtual machine.
      properties:
        diskSizeGiB:
          description: Gets data disk size in GiB.
          format: int32
          type: integer
        diskUri:
          description: 'When backed by a blob, the URI of underlying blob.'
          type: string
        managedDiskId:
          description: >-
            When backed by managed disk, this is the ID of the compute disk
            resource.
          type: string
        name:
          description: Gets data disk name.
          type: string
      type: object
    ComputeDataDiskFragment:
      description: A data disks attached to a virtual machine.
      properties:
        diskSizeGiB:
          description: Gets data disk size in GiB.
          format: int32
          type: integer
        diskUri:
          description: 'When backed by a blob, the URI of underlying blob.'
          type: string
        managedDiskId:
          description: >-
            When backed by managed disk, this is the ID of the compute disk
            resource.
          type: string
        name:
          description: Gets data disk name.
          type: string
      type: object
    ComputeVmInstanceViewStatus:
      description: Status information about a virtual machine.
      properties:
        code:
          description: Gets the status Code.
          type: string
        displayStatus:
          description: Gets the short localizable label for the status.
          type: string
        message:
          description: Gets the message associated with the status.
          type: string
      type: object
    ComputeVmInstanceViewStatusFragment:
      description: Status information about a virtual machine.
      properties:
        code:
          description: Gets the status Code.
          type: string
        displayStatus:
          description: Gets the short localizable label for the status.
          type: string
        message:
          description: Gets the message associated with the status.
          type: string
      type: object
    ComputeVmProperties:
      description: Properties of a virtual machine returned by the Microsoft.Compute API.
      properties:
        dataDiskIds:
          description: Gets data disks blob uri for the virtual machine.
          items:
            type: string
          type: array
        dataDisks:
          description: Gets all data disks attached to the virtual machine.
          items:
            $ref: '#/components/schemas/ComputeDataDisk'
          type: array
        networkInterfaceId:
          description: Gets the network interface ID of the virtual machine.
          type: string
        osDiskId:
          description: Gets OS disk blob uri for the virtual machine.
          type: string
        osType:
          description: Gets the OS type of the virtual machine.
          type: string
        statuses:
          description: Gets the statuses of the virtual machine.
          items:
            $ref: '#/components/schemas/ComputeVmInstanceViewStatus'
          type: array
        vmSize:
          description: Gets the size of the virtual machine.
          type: string
      type: object
    ComputeVmPropertiesFragment:
      description: Properties of a virtual machine returned by the Microsoft.Compute API.
      properties:
        dataDiskIds:
          description: Gets data disks blob uri for the virtual machine.
          items:
            type: string
          type: array
        dataDisks:
          description: Gets all data disks attached to the virtual machine.
          items:
            $ref: '#/components/schemas/ComputeDataDiskFragment'
          type: array
        networkInterfaceId:
          description: Gets the network interface ID of the virtual machine.
          type: string
        osDiskId:
          description: Gets OS disk blob uri for the virtual machine.
          type: string
        osType:
          description: Gets the OS type of the virtual machine.
          type: string
        statuses:
          description: Gets the statuses of the virtual machine.
          items:
            $ref: '#/components/schemas/ComputeVmInstanceViewStatusFragment'
          type: array
        vmSize:
          description: Gets the size of the virtual machine.
          type: string
      type: object
    CostThresholdProperties:
      description: Properties of a cost threshold item.
      properties:
        displayOnChart:
          description: Indicates whether this threshold will be displayed on cost charts.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: CostThresholdStatus
        notificationSent:
          description: >-
            Indicates the datetime when notifications were last sent for this
            threshold.
          type: string
        percentageThreshold:
          $ref: '#/components/schemas/PercentageCostThresholdProperties'
          description: The value of the percentage cost threshold.
        sendNotificationWhenExceeded:
          description: >-
            Indicates whether notifications will be sent when this threshold is
            exceeded.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: CostThresholdStatus
        thresholdId:
          description: The ID of the cost threshold item.
          type: string
      type: object
    CustomImage:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A custom image.
      properties:
        properties:
          $ref: '#/components/schemas/CustomImageProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    CustomImageProperties:
      description: Properties of a custom image.
      properties:
        author:
          description: The author of the custom image.
          type: string
        creationDate:
          description: The creation date of the custom image.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the custom image.
          type: string
        managedImageId:
          description: The Managed Image Id backing the custom image.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        vhd:
          $ref: '#/components/schemas/CustomImagePropertiesCustom'
          description: The VHD from which the image is to be created.
        vm:
          $ref: '#/components/schemas/CustomImagePropertiesFromVm'
          description: The virtual machine from which the image is to be created.
      type: object
    CustomImagePropertiesCustom:
      description: Properties for creating a custom image from a VHD.
      properties:
        imageName:
          description: The image name.
          type: string
        osType:
          description: 'The OS type of the custom image (i.e. Windows, Linux)'
          enum:
            - Windows
            - Linux
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: CustomImageOsType
        sysPrep:
          description: Indicates whether sysprep has been run on the VHD.
          type: boolean
      required:
        - osType
      type: object
    CustomImagePropertiesFromVm:
      description: Properties for creating a custom image from a virtual machine.
      properties:
        linuxOsInfo:
          $ref: '#/components/schemas/LinuxOsInfo'
          description: The Linux OS information of the VM.
        sourceVmId:
          description: The source vm identifier.
          type: string
        windowsOsInfo:
          $ref: '#/components/schemas/WindowsOsInfo'
          description: The Windows OS information of the VM.
      type: object
    DataDiskProperties:
      description: >-
        Request body for adding a new or existing data disk to a virtual
        machine.
      properties:
        attachNewDataDiskOptions:
          $ref: '#/components/schemas/AttachNewDataDiskOptions'
          description: Specifies options to attach a new disk to the virtual machine.
        existingLabDiskId:
          description: Specifies the existing lab disk id to attach to virtual machine.
          type: string
        hostCaching:
          description: 'Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).'
          enum:
            - None
            - ReadOnly
            - ReadWrite
          type: string
          x-ms-enum:
            modelAsString: true
            name: HostCachingOptions
      type: object
    DayDetails:
      description: Properties of a daily schedule.
      properties:
        time:
          description: The time of day the schedule will occur.
          type: string
      type: object
    DayDetailsFragment:
      description: Properties of a daily schedule.
      properties:
        time:
          description: The time of day the schedule will occur.
          type: string
      type: object
    DetachDataDiskProperties:
      description: Request body for detaching data disk from a virtual machine.
      properties:
        existingLabDiskId:
          description: Specifies the disk resource ID to detach from virtual machine.
          type: string
      type: object
    DetachDiskProperties:
      description: Properties of the disk to detach.
      properties:
        leasedByLabVmId:
          description: The resource ID of the Lab VM to which the disk is attached.
          type: string
      type: object
    Disk:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A Disk.
      properties:
        properties:
          $ref: '#/components/schemas/DiskProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    DiskProperties:
      description: Properties of a disk.
      properties:
        createdDate:
          description: The creation date of the disk.
          format: date-time
          readOnly: true
          type: string
        diskBlobName:
          description: 'When backed by a blob, the name of the VHD blob without extension.'
          type: string
        diskSizeGiB:
          description: The size of the disk in Gibibytes.
          format: int32
          type: integer
        diskType:
          description: 'The storage type for the disk (i.e. Standard, Premium).'
          enum:
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: StorageType
        diskUri:
          description: 'When backed by a blob, the URI of underlying blob.'
          type: string
        hostCaching:
          description: >-
            The host caching policy of the disk (i.e. None, ReadOnly,
            ReadWrite).
          type: string
        leasedByLabVmId:
          description: The resource ID of the VM to which this disk is leased.
          type: string
        managedDiskId:
          description: >-
            When backed by managed disk, this is the ID of the compute disk
            resource.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    DtlEnvironment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: 'An environment, which is essentially an ARM template deployment.'
      properties:
        properties:
          $ref: '#/components/schemas/EnvironmentProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    EnvironmentDeploymentProperties:
      description: Properties of an environment deployment.
      properties:
        parameters:
          description: The parameters of the Azure Resource Manager template.
          items:
            $ref: '#/components/schemas/ArmTemplateParameterProperties'
          type: array
        armTemplateId:
          description: The Azure Resource Manager template's identifier.
          type: string
      type: object
    EnvironmentProperties:
      description: Properties of an environment.
      properties:
        armTemplateDisplayName:
          description: >-
            The display name of the Azure Resource Manager template that
            produced the environment.
          type: string
        createdByUser:
          description: The creator of the environment.
          readOnly: true
          type: string
        deploymentProperties:
          $ref: '#/components/schemas/EnvironmentDeploymentProperties'
          description: The deployment properties of the environment.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        resourceGroupId:
          description: >-
            The identifier of the resource group containing the environment's
            resources.
          readOnly: true
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    EvaluatePoliciesProperties:
      description: Properties for evaluating a policy set.
      properties:
        factData:
          description: The fact data.
          type: string
        factName:
          description: The fact name.
          type: string
        valueOffset:
          description: The value offset.
          type: string
      type: object
    EvaluatePoliciesRequest:
      description: Request body for evaluating a policy set.
      properties:
        policies:
          description: Policies to evaluate.
          items:
            $ref: '#/components/schemas/EvaluatePoliciesProperties'
          type: array
      type: object
    EvaluatePoliciesResponse:
      description: Response body for evaluating a policy set.
      properties:
        results:
          description: Results of evaluating a policy set.
          items:
            $ref: '#/components/schemas/PolicySetResult'
          type: array
      type: object
    Event:
      description: An event to be notified for.
      properties:
        eventName:
          description: >-
            The event type for which this notification is enabled (i.e.
            AutoShutdown, Cost)
          enum:
            - AutoShutdown
            - Cost
          type: string
          x-ms-enum:
            modelAsString: true
            name: NotificationChannelEventType
      type: object
    EventFragment:
      description: An event to be notified for.
      properties:
        eventName:
          description: >-
            The event type for which this notification is enabled (i.e.
            AutoShutdown, Cost)
          enum:
            - AutoShutdown
            - Cost
          type: string
          x-ms-enum:
            modelAsString: true
            name: NotificationChannelEventType
      type: object
    ExportResourceUsageParameters:
      description: The parameters of the export operation.
      properties:
        blobStorageAbsoluteSasUri:
          description: >-
            The blob storage absolute sas uri with write permission to the
            container which the usage data needs to be uploaded to.
          type: string
        usageStartDate:
          description: >-
            The start time of the usage. If not provided, usage will be reported
            since the beginning of data collection.
          format: date-time
          type: string
      type: object
    ExternalSubnet:
      description: Subnet information as returned by the Microsoft.Network API.
      properties:
        id:
          description: Gets or sets the identifier.
          type: string
        name:
          description: Gets or sets the name.
          type: string
      type: object
    ExternalSubnetFragment:
      description: Subnet information as returned by the Microsoft.Network API.
      properties:
        id:
          description: Gets or sets the identifier.
          type: string
        name:
          description: Gets or sets the name.
          type: string
      type: object
    Formula:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: >-
        A formula for creating a VM, specifying an image base and other
        parameters
      properties:
        properties:
          $ref: '#/components/schemas/FormulaProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    FormulaProperties:
      description: Properties of a formula.
      properties:
        author:
          description: The author of the formula.
          type: string
        creationDate:
          description: The creation date of the formula.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the formula.
          type: string
        formulaContent:
          $ref: '#/components/schemas/LabVirtualMachineCreationParameter'
          description: The content of the formula.
        osType:
          description: The OS type of the formula.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        vm:
          $ref: '#/components/schemas/FormulaPropertiesFromVm'
          description: Information about a VM from which a formula is to be created.
      type: object
    FormulaPropertiesFromVm:
      description: Information about a VM from which a formula is to be created.
      properties:
        labVmId:
          description: The identifier of the VM from which a formula is to be created.
          type: string
      type: object
    GalleryImage:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A gallery image.
      properties:
        properties:
          $ref: '#/components/schemas/GalleryImageProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    GalleryImageProperties:
      description: Properties of a gallery image.
      properties:
        author:
          description: The author of the gallery image.
          type: string
        createdDate:
          description: The creation date of the gallery image.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the gallery image.
          type: string
        enabled:
          description: Indicates whether this gallery image is enabled.
          type: boolean
        icon:
          description: The icon of the gallery image.
          type: string
        imageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: The image reference of the gallery image.
      type: object
    GalleryImageReference:
      description: The reference information for an Azure Marketplace image.
      properties:
        offer:
          description: The offer of the gallery image.
          type: string
        osType:
          description: The OS type of the gallery image.
          type: string
        publisher:
          description: The publisher of the gallery image.
          type: string
        sku:
          description: The SKU of the gallery image.
          type: string
        version:
          description: The version of the gallery image.
          type: string
      type: object
    GalleryImageReferenceFragment:
      description: The reference information for an Azure Marketplace image.
      properties:
        offer:
          description: The offer of the gallery image.
          type: string
        osType:
          description: The OS type of the gallery image.
          type: string
        publisher:
          description: The publisher of the gallery image.
          type: string
        sku:
          description: The SKU of the gallery image.
          type: string
        version:
          description: The version of the gallery image.
          type: string
      type: object
    GenerateArmTemplateRequest:
      description: Parameters for generating an ARM template for deploying artifacts.
      properties:
        parameters:
          description: The parameters of the ARM template.
          items:
            $ref: '#/components/schemas/ParameterInfo'
          type: array
        fileUploadOptions:
          description: >-
            Options for uploading the files for the artifact.
            UploadFilesAndGenerateSasTokens is the default value.
          enum:
            - UploadFilesAndGenerateSasTokens
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: FileUploadOptions
        location:
          description: The location of the virtual machine.
          type: string
        virtualMachineName:
          description: The resource name of the virtual machine.
          type: string
      type: object
    GenerateUploadUriParameter:
      description: Properties for generating an upload URI.
      properties:
        blobName:
          description: The blob name of the upload URI.
          type: string
      type: object
    GenerateUploadUriResponse:
      description: Response body for generating an upload URI.
      properties:
        uploadUri:
          description: The upload URI for the VHD.
          type: string
      type: object
    HourDetails:
      description: Properties of an hourly schedule.
      properties:
        minute:
          description: Minutes of the hour the schedule will run.
          format: int32
          type: integer
      type: object
    HourDetailsFragment:
      description: Properties of an hourly schedule.
      properties:
        minute:
          description: Minutes of the hour the schedule will run.
          format: int32
          type: integer
      type: object
    IdentityProperties:
      description: Properties of a managed identity
      properties:
        clientSecretUrl:
          description: The client secret URL of the identity.
          type: string
        principalId:
          description: The principal id of resource identity.
          type: string
        tenantId:
          description: The tenant identifier of resource.
          type: string
        type:
          description: Managed identity.
          type: string
      type: object
    InboundNatRule:
      description: >-
        A rule for NAT - exposing a VM's port (backendPort) on the public IP
        address using a load balancer.
      properties:
        backendPort:
          description: The port to which the external traffic will be redirected.
          format: int32
          type: integer
        frontendPort:
          description: >-
            The external endpoint port of the inbound connection. Possible
            values range between 1 and 65535, inclusive. If unspecified, a value
            will be allocated automatically.
          format: int32
          type: integer
        transportProtocol:
          description: The transport protocol for the endpoint.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
      type: object
    InboundNatRuleFragment:
      description: >-
        A rule for NAT - exposing a VM's port (backendPort) on the public IP
        address using a load balancer.
      properties:
        backendPort:
          description: The port to which the external traffic will be redirected.
          format: int32
          type: integer
        frontendPort:
          description: >-
            The external endpoint port of the inbound connection. Possible
            values range between 1 and 65535, inclusive. If unspecified, a value
            will be allocated automatically.
          format: int32
          type: integer
        transportProtocol:
          description: The transport protocol for the endpoint.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
      type: object
    Lab:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A lab.
      properties:
        properties:
          $ref: '#/components/schemas/LabProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabCost:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A cost item.
      properties:
        properties:
          $ref: '#/components/schemas/LabCostProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    LabCostDetailsProperties:
      description: The properties of a lab cost item.
      properties:
        cost:
          description: The cost component of the cost item.
          format: double
          type: number
        costType:
          description: The type of the cost.
          enum:
            - Unavailable
            - Reported
            - Projected
          type: string
          x-ms-enum:
            modelAsString: true
            name: CostType
        date:
          description: The date of the cost item.
          format: date-time
          type: string
      type: object
    LabCostProperties:
      description: Properties of a cost item.
      properties:
        createdDate:
          description: The creation date of the cost.
          format: date-time
          type: string
        currencyCode:
          description: The currency code of the cost.
          type: string
        endDateTime:
          description: The end time of the cost data.
          format: date-time
          type: string
        labCostDetails:
          description: The lab cost details component of the cost data.
          items:
            $ref: '#/components/schemas/LabCostDetailsProperties'
          readOnly: true
          type: array
        labCostSummary:
          $ref: '#/components/schemas/LabCostSummaryProperties'
          description: The lab cost summary component of the cost data.
          readOnly: true
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        resourceCosts:
          description: The resource cost component of the cost data.
          items:
            $ref: '#/components/schemas/LabResourceCostProperties'
          readOnly: true
          type: array
        startDateTime:
          description: The start time of the cost data.
          format: date-time
          type: string
        targetCost:
          $ref: '#/components/schemas/TargetCostProperties'
          description: The target cost properties
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    LabCostSummaryProperties:
      description: The properties of the cost summary.
      properties:
        estimatedLabCost:
          description: The cost component of the cost item.
          format: double
          type: number
      type: object
    LabFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A lab.
      properties:
        properties:
          $ref: '#/components/schemas/LabPropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabProperties:
      description: Properties of a lab.
      properties:
        artifactsStorageAccount:
          description: The lab's artifact storage account.
          readOnly: true
          type: string
        createdDate:
          description: The creation date of the lab.
          format: date-time
          readOnly: true
          type: string
        defaultPremiumStorageAccount:
          description: The lab's default premium storage account.
          readOnly: true
          type: string
        defaultStorageAccount:
          description: The lab's default storage account.
          readOnly: true
          type: string
        labStorageType:
          description: >-
            Type of storage used by the lab. It can be either Premium or
            Standard. Default is Premium.
          enum:
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: StorageType
        premiumDataDiskStorageAccount:
          description: The lab's premium data disk storage account.
          readOnly: true
          type: string
        premiumDataDisks:
          description: "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed."
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: PremiumDataDisk
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        vaultName:
          description: The lab's Key vault.
          readOnly: true
          type: string
      type: object
    LabPropertiesFragment:
      description: Properties of a lab.
      properties:
        labStorageType:
          description: >-
            Type of storage used by the lab. It can be either Premium or
            Standard. Default is Premium.
          enum:
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: StorageType
        premiumDataDisks:
          description: "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed."
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: PremiumDataDisk
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    LabResourceCostProperties:
      description: The properties of a resource cost item.
      properties:
        externalResourceId:
          description: The ID of the external resource
          type: string
        resourceCost:
          description: The cost component of the resource cost item.
          format: double
          type: number
        resourceId:
          description: The ID of the resource
          type: string
        resourceOwner:
          description: The owner of the resource (ex. janedoe@microsoft.com)
          type: string
        resourcePricingTier:
          description: 'The category of the resource (ex. Premium_LRS, Standard_DS1)'
          type: string
        resourceStatus:
          description: The status of the resource (ex. Active)
          type: string
        resourceType:
          description: 'The logical resource type (ex. virtualmachine, storageaccount)'
          type: string
        resourceUId:
          description: The unique identifier of the resource.
          type: string
        resourcename:
          description: The name of the resource.
          type: string
      type: object
    LabVhd:
      description: Properties of a VHD in the lab.
      properties:
        id:
          description: The URI to the VHD.
          type: string
      type: object
    LabVirtualMachine:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A virtual machine.
      properties:
        properties:
          $ref: '#/components/schemas/LabVirtualMachineProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    LabVirtualMachineCreationParameter:
      description: Properties for creating a virtual machine.
      properties:
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource.
          type: object
        location:
          description: The location of the new virtual machine or environment
          type: string
        name:
          description: The name of the virtual machine or environment
          type: string
        properties:
          $ref: '#/components/schemas/LabVirtualMachineCreationParameterProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabVirtualMachineCreationParameterProperties:
      description: Properties for virtual machine creation.
      properties:
        allowClaim:
          description: >-
            Indicates whether another user can take ownership of the virtual
            machine
          type: boolean
        applicableSchedule:
          $ref: '#/components/schemas/ApplicableSchedule'
          description: The applicable schedule for the virtual machine.
        artifactDeploymentStatus:
          $ref: '#/components/schemas/ArtifactDeploymentStatusProperties'
          description: The artifact deployment status for the virtual machine.
        artifacts:
          description: The artifacts to be installed on the virtual machine.
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
          type: array
        bulkCreationParameters:
          $ref: '#/components/schemas/BulkCreationParameters'
          description: The number of virtual machine instances to create.
        computeVm:
          $ref: '#/components/schemas/ComputeVmProperties'
          description: The compute virtual machine properties.
        createdByUser:
          description: The email address of creator of the virtual machine.
          type: string
        createdByUserId:
          description: The object identifier of the creator of the virtual machine.
          type: string
        createdDate:
          description: The creation date of the virtual machine.
          format: date-time
          type: string
        customImageId:
          description: The custom image identifier of the virtual machine.
          type: string
        disallowPublicIpAddress:
          description: >-
            Indicates whether the virtual machine is to be created without a
            public IP address.
          type: boolean
        environmentId:
          description: >-
            The resource ID of the environment that contains this virtual
            machine, if any.
          type: string
        expirationDate:
          description: The expiration date for VM.
          format: date-time
          type: string
        fqdn:
          description: The fully-qualified domain name of the virtual machine.
          type: string
        galleryImageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: >-
            The Microsoft Azure Marketplace image reference of the virtual
            machine.
        isAuthenticationWithSshKey:
          description: >-
            Indicates whether this virtual machine uses an SSH key for
            authentication.
          type: boolean
        labSubnetName:
          description: The lab subnet name of the virtual machine.
          type: string
        labVirtualNetworkId:
          description: The lab virtual network identifier of the virtual machine.
          type: string
        networkInterface:
          $ref: '#/components/schemas/NetworkInterfaceProperties'
          description: The network interface properties.
        notes:
          description: The notes of the virtual machine.
          type: string
        osType:
          description: The OS type of the virtual machine.
          type: string
        ownerObjectId:
          description: The object identifier of the owner of the virtual machine.
          type: string
        ownerUserPrincipalName:
          description: The user principal name of the virtual machine owner.
          type: string
        password:
          description: The password of the virtual machine administrator.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        size:
          description: The size of the virtual machine.
          type: string
        sshKey:
          description: The SSH key of the virtual machine administrator.
          type: string
        storageType:
          description: 'Storage type to use for virtual machine (i.e. Standard, Premium).'
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        userName:
          description: The user name of the virtual machine.
          type: string
        virtualMachineCreationSource:
          description: >-
            Tells source of creation of lab virtual machine. Output property
            only.
          enum:
            - FromCustomImage
            - FromGalleryImage
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineCreationSource
      type: object
    LabVirtualMachineFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A virtual machine.
      properties:
        properties:
          $ref: '#/components/schemas/LabVirtualMachinePropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    LabVirtualMachineProperties:
      description: Properties of a virtual machine.
      properties:
        allowClaim:
          description: >-
            Indicates whether another user can take ownership of the virtual
            machine
          type: boolean
        applicableSchedule:
          $ref: '#/components/schemas/ApplicableSchedule'
          description: The applicable schedule for the virtual machine.
        artifactDeploymentStatus:
          $ref: '#/components/schemas/ArtifactDeploymentStatusProperties'
          description: The artifact deployment status for the virtual machine.
        artifacts:
          description: The artifacts to be installed on the virtual machine.
          items:
            $ref: '#/components/schemas/ArtifactInstallProperties'
          type: array
        computeId:
          description: The resource identifier (Microsoft.Compute) of the virtual machine.
          readOnly: true
          type: string
        computeVm:
          $ref: '#/components/schemas/ComputeVmProperties'
          description: The compute virtual machine properties.
        createdByUser:
          description: The email address of creator of the virtual machine.
          type: string
        createdByUserId:
          description: The object identifier of the creator of the virtual machine.
          type: string
        createdDate:
          description: The creation date of the virtual machine.
          format: date-time
          type: string
        customImageId:
          description: The custom image identifier of the virtual machine.
          type: string
        disallowPublicIpAddress:
          description: >-
            Indicates whether the virtual machine is to be created without a
            public IP address.
          type: boolean
        environmentId:
          description: >-
            The resource ID of the environment that contains this virtual
            machine, if any.
          type: string
        expirationDate:
          description: The expiration date for VM.
          format: date-time
          type: string
        fqdn:
          description: The fully-qualified domain name of the virtual machine.
          type: string
        galleryImageReference:
          $ref: '#/components/schemas/GalleryImageReference'
          description: >-
            The Microsoft Azure Marketplace image reference of the virtual
            machine.
        isAuthenticationWithSshKey:
          description: >-
            Indicates whether this virtual machine uses an SSH key for
            authentication.
          type: boolean
        labSubnetName:
          description: The lab subnet name of the virtual machine.
          type: string
        labVirtualNetworkId:
          description: The lab virtual network identifier of the virtual machine.
          type: string
        networkInterface:
          $ref: '#/components/schemas/NetworkInterfaceProperties'
          description: The network interface properties.
        notes:
          description: The notes of the virtual machine.
          type: string
        osType:
          description: The OS type of the virtual machine.
          type: string
        ownerObjectId:
          description: The object identifier of the owner of the virtual machine.
          type: string
        ownerUserPrincipalName:
          description: The user principal name of the virtual machine owner.
          type: string
        password:
          description: The password of the virtual machine administrator.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        size:
          description: The size of the virtual machine.
          type: string
        sshKey:
          description: The SSH key of the virtual machine administrator.
          type: string
        storageType:
          description: 'Storage type to use for virtual machine (i.e. Standard, Premium).'
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        userName:
          description: The user name of the virtual machine.
          type: string
        virtualMachineCreationSource:
          description: >-
            Tells source of creation of lab virtual machine. Output property
            only.
          enum:
            - FromCustomImage
            - FromGalleryImage
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineCreationSource
      type: object
    LabVirtualMachinePropertiesFragment:
      description: Properties of a virtual machine.
      properties:
        allowClaim:
          description: >-
            Indicates whether another user can take ownership of the virtual
            machine
          type: boolean
        applicableSchedule:
          $ref: '#/components/schemas/ApplicableScheduleFragment'
          description: The applicable schedule for the virtual machine.
        artifactDeploymentStatus:
          $ref: '#/components/schemas/ArtifactDeploymentStatusPropertiesFragment'
          description: The artifact deployment status for the virtual machine.
        artifacts:
          description: The artifacts to be installed on the virtual machine.
          items:
            $ref: '#/components/schemas/ArtifactInstallPropertiesFragment'
          type: array
        computeVm:
          $ref: '#/components/schemas/ComputeVmPropertiesFragment'
          description: The compute virtual machine properties.
        createdByUser:
          description: The email address of creator of the virtual machine.
          type: string
        createdByUserId:
          description: The object identifier of the creator of the virtual machine.
          type: string
        createdDate:
          description: The creation date of the virtual machine.
          format: date-time
          type: string
        customImageId:
          description: The custom image identifier of the virtual machine.
          type: string
        disallowPublicIpAddress:
          description: >-
            Indicates whether the virtual machine is to be created without a
            public IP address.
          type: boolean
        environmentId:
          description: >-
            The resource ID of the environment that contains this virtual
            machine, if any.
          type: string
        expirationDate:
          description: The expiration date for VM.
          format: date-time
          type: string
        fqdn:
          description: The fully-qualified domain name of the virtual machine.
          type: string
        galleryImageReference:
          $ref: '#/components/schemas/GalleryImageReferenceFragment'
          description: >-
            The Microsoft Azure Marketplace image reference of the virtual
            machine.
        isAuthenticationWithSshKey:
          description: >-
            Indicates whether this virtual machine uses an SSH key for
            authentication.
          type: boolean
        labSubnetName:
          description: The lab subnet name of the virtual machine.
          type: string
        labVirtualNetworkId:
          description: The lab virtual network identifier of the virtual machine.
          type: string
        networkInterface:
          $ref: '#/components/schemas/NetworkInterfacePropertiesFragment'
          description: The network interface properties.
        notes:
          description: The notes of the virtual machine.
          type: string
        osType:
          description: The OS type of the virtual machine.
          type: string
        ownerObjectId:
          description: The object identifier of the owner of the virtual machine.
          type: string
        ownerUserPrincipalName:
          description: The user principal name of the virtual machine owner.
          type: string
        password:
          description: The password of the virtual machine administrator.
          type: string
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        size:
          description: The size of the virtual machine.
          type: string
        sshKey:
          description: The SSH key of the virtual machine administrator.
          type: string
        storageType:
          description: 'Storage type to use for virtual machine (i.e. Standard, Premium).'
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        userName:
          description: The user name of the virtual machine.
          type: string
        virtualMachineCreationSource:
          description: >-
            Tells source of creation of lab virtual machine. Output property
            only.
          enum:
            - FromCustomImage
            - FromGalleryImage
          type: string
          x-ms-enum:
            modelAsString: true
            name: VirtualMachineCreationSource
      type: object
    LinuxOsInfo:
      description: Information about a Linux OS.
      properties:
        linuxOsState:
          description: >-
            The state of the Linux OS (i.e. NonDeprovisioned,
            DeprovisionRequested, DeprovisionApplied).
          enum:
            - NonDeprovisioned
            - DeprovisionRequested
            - DeprovisionApplied
          type: string
          x-ms-enum:
            modelAsString: true
            name: LinuxOsState
      type: object
    NetworkInterfaceProperties:
      description: Properties of a network interface.
      properties:
        dnsName:
          description: The DNS name.
          type: string
        privateIpAddress:
          description: The private IP address.
          type: string
        publicIpAddress:
          description: The public IP address.
          type: string
        publicIpAddressId:
          description: The resource ID of the public IP address.
          type: string
        rdpAuthority:
          description: >-
            The RdpAuthority property is a server DNS host name or IP address
            followed by the service port number for RDP (Remote Desktop
            Protocol).
          type: string
        sharedPublicIpAddressConfiguration:
          $ref: '#/components/schemas/SharedPublicIpAddressConfiguration'
          description: >-
            The configuration for sharing a public IP address across multiple
            virtual machines.
        sshAuthority:
          description: >-
            The SshAuthority property is a server DNS host name or IP address
            followed by the service port number for SSH.
          type: string
        subnetId:
          description: The resource ID of the sub net.
          type: string
        virtualNetworkId:
          description: The resource ID of the virtual network.
          type: string
      type: object
    NetworkInterfacePropertiesFragment:
      description: Properties of a network interface.
      properties:
        dnsName:
          description: The DNS name.
          type: string
        privateIpAddress:
          description: The private IP address.
          type: string
        publicIpAddress:
          description: The public IP address.
          type: string
        publicIpAddressId:
          description: The resource ID of the public IP address.
          type: string
        rdpAuthority:
          description: >-
            The RdpAuthority property is a server DNS host name or IP address
            followed by the service port number for RDP (Remote Desktop
            Protocol).
          type: string
        sharedPublicIpAddressConfiguration:
          $ref: '#/components/schemas/SharedPublicIpAddressConfigurationFragment'
          description: >-
            The configuration for sharing a public IP address across multiple
            virtual machines.
        sshAuthority:
          description: >-
            The SshAuthority property is a server DNS host name or IP address
            followed by the service port number for SSH.
          type: string
        subnetId:
          description: The resource ID of the sub net.
          type: string
        virtualNetworkId:
          description: The resource ID of the virtual network.
          type: string
      type: object
    NotificationChannel:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A notification.
      properties:
        properties:
          $ref: '#/components/schemas/NotificationChannelProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    NotificationChannelFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A notification.
      properties:
        properties:
          $ref: '#/components/schemas/NotificationChannelPropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    NotificationChannelProperties:
      description: Properties of a schedule.
      properties:
        createdDate:
          description: The creation date of the notification channel.
          format: date-time
          readOnly: true
          type: string
        description:
          description: Description of notification.
          type: string
        events:
          description: The list of event for which this notification is enabled.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        webHookUrl:
          description: The webhook URL to send notifications to.
          type: string
      type: object
    NotificationChannelPropertiesFragment:
      description: Properties of a schedule.
      properties:
        description:
          description: Description of notification.
          type: string
        events:
          description: The list of event for which this notification is enabled.
          items:
            $ref: '#/components/schemas/EventFragment'
          type: array
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        webHookUrl:
          description: The webhook URL to send notifications to.
          type: string
      type: object
    NotificationSettings:
      description: Notification settings for a schedule.
      properties:
        status:
          description: >-
            If notifications are enabled for this schedule (i.e. Enabled,
            Disabled).
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: NotificationStatus
        timeInMinutes:
          description: Time in minutes before event at which notification will be sent.
          format: int32
          type: integer
        webhookUrl:
          description: The webhook URL to which the notification will be sent.
          type: string
      type: object
    NotificationSettingsFragment:
      description: Notification settings for a schedule.
      properties:
        status:
          description: >-
            If notifications are enabled for this schedule (i.e. Enabled,
            Disabled).
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: NotificationStatus
        timeInMinutes:
          description: Time in minutes before event at which notification will be sent.
          format: int32
          type: integer
        webhookUrl:
          description: The webhook URL to which the notification will be sent.
          type: string
      type: object
    NotifyParameters:
      description: Properties for generating a Notification.
      properties:
        eventName:
          description: 'The type of event (i.e. AutoShutdown, Cost)'
          enum:
            - AutoShutdown
            - Cost
          type: string
          x-ms-enum:
            modelAsString: true
            name: NotificationChannelEventType
        jsonPayload:
          description: Properties for the notification in json format.
          type: string
      type: object
    OperationError:
      description: Error details for the operation in case of a failure.
      properties:
        code:
          description: The error code of the operation error.
          type: string
        message:
          description: The error message of the operation error.
          type: string
      type: object
    OperationMetadata:
      description: The REST API operation supported by DevTestLab ResourceProvider.
      properties:
        display:
          $ref: '#/components/schemas/OperationMetadataDisplay'
          description: The object that describes the operations
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
      type: object
    OperationMetadataDisplay:
      description: The object that describes the operations
      properties:
        description:
          description: Friendly name of the operation
          type: string
        operation:
          description: 'Operation type: read, write, delete, listKeys/action, etc.'
          type: string
        provider:
          description: Friendly name of the resource provider
          type: string
        resource:
          description: Resource type on which the operation is performed.
          type: string
      type: object
    OperationResult:
      description: An Operation Result
      properties:
        error:
          $ref: '#/components/schemas/OperationError'
          description: Error details for the operation in case of a failure.
        status:
          description: The operation status.
          type: string
        statusCode:
          description: The status code for the operation.
          enum:
            - Continue
            - SwitchingProtocols
            - OK
            - Created
            - Accepted
            - NonAuthoritativeInformation
            - NoContent
            - ResetContent
            - PartialContent
            - MultipleChoices
            - MovedPermanently
            - Redirect
            - SeeOther
            - NotModified
            - UseProxy
            - Unused
            - TemporaryRedirect
            - BadRequest
            - Unauthorized
            - PaymentRequired
            - Forbidden
            - NotFound
            - MethodNotAllowed
            - NotAcceptable
            - ProxyAuthenticationRequired
            - RequestTimeout
            - Conflict
            - Gone
            - LengthRequired
            - PreconditionFailed
            - RequestEntityTooLarge
            - RequestUriTooLong
            - UnsupportedMediaType
            - RequestedRangeNotSatisfiable
            - ExpectationFailed
            - UpgradeRequired
            - InternalServerError
            - NotImplemented
            - BadGateway
            - ServiceUnavailable
            - GatewayTimeout
            - HttpVersionNotSupported
          type: string
          x-ms-enum:
            modelAsString: true
            name: HttpStatusCode
      type: object
    ParameterInfo:
      description: Information about an artifact's parameter.
      properties:
        name:
          description: The name of the artifact parameter.
          type: string
        value:
          description: The value of the artifact parameter.
          type: string
      type: object
    ParametersValueFileInfo:
      description: A file containing a set of parameter values for an ARM template.
      properties:
        fileName:
          description: File name.
          type: string
        parametersValueInfo:
          description: Contents of the file.
          type: object
      type: object
    PercentageCostThresholdProperties:
      description: Properties of a percentage cost threshold.
      properties:
        thresholdValue:
          description: The cost threshold value.
          format: double
          type: number
      type: object
    Policy:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A Policy.
      properties:
        properties:
          $ref: '#/components/schemas/PolicyProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    PolicyFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A Policy.
      properties:
        properties:
          $ref: '#/components/schemas/PolicyPropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    PolicyProperties:
      description: Properties of a Policy.
      properties:
        createdDate:
          description: The creation date of the policy.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the policy.
          type: string
        evaluatorType:
          description: >-
            The evaluator type of the policy (i.e. AllowedValuesPolicy,
            MaxValuePolicy).
          enum:
            - AllowedValuesPolicy
            - MaxValuePolicy
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyEvaluatorType
        factData:
          description: The fact data of the policy.
          type: string
        factName:
          description: >-
            The fact name of the policy (e.g. LabVmCount, LabVmSize,
            MaxVmsAllowedPerLab, etc.
          enum:
            - UserOwnedLabVmCount
            - UserOwnedLabPremiumVmCount
            - LabVmCount
            - LabPremiumVmCount
            - LabVmSize
            - GalleryImage
            - UserOwnedLabVmCountInSubnet
            - LabTargetCost
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyFactName
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        status:
          description: The status of the policy.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyStatus
        threshold:
          description: >-
            The threshold of the policy (i.e. a number for MaxValuePolicy, and a
            JSON array of values for AllowedValuesPolicy).
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    PolicyPropertiesFragment:
      description: Properties of a Policy.
      properties:
        description:
          description: The description of the policy.
          type: string
        evaluatorType:
          description: >-
            The evaluator type of the policy (i.e. AllowedValuesPolicy,
            MaxValuePolicy).
          enum:
            - AllowedValuesPolicy
            - MaxValuePolicy
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyEvaluatorType
        factData:
          description: The fact data of the policy.
          type: string
        factName:
          description: >-
            The fact name of the policy (e.g. LabVmCount, LabVmSize,
            MaxVmsAllowedPerLab, etc.
          enum:
            - UserOwnedLabVmCount
            - UserOwnedLabPremiumVmCount
            - LabVmCount
            - LabPremiumVmCount
            - LabVmSize
            - GalleryImage
            - UserOwnedLabVmCountInSubnet
            - LabTargetCost
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyFactName
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        status:
          description: The status of the policy.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: PolicyStatus
        threshold:
          description: >-
            The threshold of the policy (i.e. a number for MaxValuePolicy, and a
            JSON array of values for AllowedValuesPolicy).
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    PolicySetResult:
      description: Result of a policy set evaluation.
      properties:
        hasError:
          description: >-
            A value indicating whether this policy set evaluation has discovered
            violations.
          type: boolean
        policyViolations:
          description: The list of policy violations.
          items:
            $ref: '#/components/schemas/PolicyViolation'
          type: array
      type: object
    PolicyViolation:
      description: Policy violation.
      properties:
        code:
          description: The code of the policy violation.
          type: string
        message:
          description: The message of the policy violation.
          type: string
      type: object
    Port:
      description: Properties of a network port.
      properties:
        backendPort:
          description: Backend port of the target virtual machine.
          format: int32
          type: integer
        transportProtocol:
          description: Protocol type of the port.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
      type: object
    PortFragment:
      description: Properties of a network port.
      properties:
        backendPort:
          description: Backend port of the target virtual machine.
          format: int32
          type: integer
        transportProtocol:
          description: Protocol type of the port.
          enum:
            - Tcp
            - Udp
          type: string
          x-ms-enum:
            modelAsString: true
            name: TransportProtocol
      type: object
    ProviderOperationResult:
      description: Result of the request to list REST API operations
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: List of operations supported by the resource provider.
          items:
            $ref: '#/components/schemas/OperationMetadata'
          type: array
      type: object
    Resource:
      description: An Azure resource.
      properties:
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource.
          type: object
        id:
          description: The identifier of the resource.
          readOnly: true
          type: string
        location:
          description: The location of the resource.
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ResponseWithContinuation_ArmTemplate_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/ArmTemplate'
          type: array
      type: object
    ResponseWithContinuation_ArtifactSource_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/ArtifactSource'
          type: array
      type: object
    ResponseWithContinuation_Artifact_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Artifact'
          type: array
      type: object
    ResponseWithContinuation_CustomImage_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/CustomImage'
          type: array
      type: object
    ResponseWithContinuation_Disk_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Disk'
          type: array
      type: object
    ResponseWithContinuation_DtlEnvironment_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/DtlEnvironment'
          type: array
      type: object
    ResponseWithContinuation_Formula_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Formula'
          type: array
      type: object
    ResponseWithContinuation_GalleryImage_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/GalleryImage'
          type: array
      type: object
    ResponseWithContinuation_LabVhd_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/LabVhd'
          type: array
      type: object
    ResponseWithContinuation_LabVirtualMachine_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/LabVirtualMachine'
          type: array
      type: object
    ResponseWithContinuation_Lab_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Lab'
          type: array
      type: object
    ResponseWithContinuation_NotificationChannel_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/NotificationChannel'
          type: array
      type: object
    ResponseWithContinuation_Policy_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Policy'
          type: array
      type: object
    ResponseWithContinuation_Schedule_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
      type: object
    ResponseWithContinuation_Secret_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/Secret'
          type: array
      type: object
    ResponseWithContinuation_ServiceRunner_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/ServiceRunner'
          type: array
      type: object
    ResponseWithContinuation_User_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/User'
          type: array
      type: object
    ResponseWithContinuation_VirtualNetwork_:
      description: The response of a list operation.
      properties:
        nextLink:
          description: Link for next set of results.
          type: string
        value:
          description: Results of the list operation.
          items:
            $ref: '#/components/schemas/VirtualNetwork'
          type: array
      type: object
    RetargetScheduleProperties:
      description: Properties for retargeting a virtual machine schedule.
      properties:
        currentResourceId:
          description: >-
            The resource Id of the virtual machine on which the schedule
            operates
          type: string
        targetResourceId:
          description: >-
            The resource Id of the virtual machine that the schedule should be
            retargeted to
          type: string
      type: object
    Schedule:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A schedule.
      properties:
        properties:
          $ref: '#/components/schemas/ScheduleProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    ScheduleFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A schedule.
      properties:
        properties:
          $ref: '#/components/schemas/SchedulePropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    ScheduleProperties:
      description: Properties of a schedule.
      properties:
        createdDate:
          description: The creation date of the schedule.
          format: date-time
          readOnly: true
          type: string
        dailyRecurrence:
          $ref: '#/components/schemas/DayDetails'
          description: >-
            If the schedule will occur once each day of the week, specify the
            daily recurrence.
        hourlyRecurrence:
          $ref: '#/components/schemas/HourDetails'
          description: >-
            If the schedule will occur multiple times a day, specify the hourly
            recurrence.
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          description: Notification settings.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        status:
          description: 'The status of the schedule (i.e. Enabled, Disabled)'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: EnableStatus
        targetResourceId:
          description: The resource ID to which the schedule belongs
          type: string
        taskType:
          description: >-
            The task type of the schedule (e.g. LabVmsShutdownTask,
            LabVmAutoStart).
          type: string
        timeZoneId:
          description: The time zone ID (e.g. Pacific Standard time).
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        weeklyRecurrence:
          $ref: '#/components/schemas/WeekDetails'
          description: >-
            If the schedule will occur only some days of the week, specify the
            weekly recurrence.
      type: object
    SchedulePropertiesFragment:
      description: Properties of a schedule.
      properties:
        dailyRecurrence:
          $ref: '#/components/schemas/DayDetailsFragment'
          description: >-
            If the schedule will occur once each day of the week, specify the
            daily recurrence.
        hourlyRecurrence:
          $ref: '#/components/schemas/HourDetailsFragment'
          description: >-
            If the schedule will occur multiple times a day, specify the hourly
            recurrence.
        notificationSettings:
          $ref: '#/components/schemas/NotificationSettingsFragment'
          description: Notification settings.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        status:
          description: 'The status of the schedule (i.e. Enabled, Disabled)'
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: EnableStatus
        targetResourceId:
          description: The resource ID to which the schedule belongs
          type: string
        taskType:
          description: >-
            The task type of the schedule (e.g. LabVmsShutdownTask,
            LabVmAutoStart).
          type: string
        timeZoneId:
          description: The time zone ID (e.g. Pacific Standard time).
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        weeklyRecurrence:
          $ref: '#/components/schemas/WeekDetailsFragment'
          description: >-
            If the schedule will occur only some days of the week, specify the
            weekly recurrence.
      type: object
    Secret:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A secret.
      properties:
        properties:
          $ref: '#/components/schemas/SecretProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    SecretProperties:
      description: Properties of a secret.
      properties:
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
        value:
          description: The value of the secret for secret creation.
          type: string
      type: object
    ServiceRunner:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A container for a managed identity to execute DevTest lab services.
      properties:
        identity:
          $ref: '#/components/schemas/IdentityProperties'
          description: The identity of the resource.
      type: object
    SharedPublicIpAddressConfiguration:
      description: >-
        Properties of a virtual machine that determine how it is connected to a
        load balancer.
      properties:
        inboundNatRules:
          description: The incoming NAT rules
          items:
            $ref: '#/components/schemas/InboundNatRule'
          type: array
      type: object
    SharedPublicIpAddressConfigurationFragment:
      description: >-
        Properties of a virtual machine that determine how it is connected to a
        load balancer.
      properties:
        inboundNatRules:
          description: The incoming NAT rules
          items:
            $ref: '#/components/schemas/InboundNatRuleFragment'
          type: array
      type: object
    ShutdownNotificationContent:
      description: >-
        The contents of a shutdown notification. Webhooks can use this type to
        deserialize the request body when they get notified of an imminent
        shutdown.
      properties:
        delayUrl120:
          description: The URL to delay shutdown by 2 hours.
          type: string
        delayUrl60:
          description: The URL to delay shutdown by 60 minutes.
          type: string
        eventType:
          description: The event for which a notification will be sent.
          type: string
        guid:
          description: The GUID for the virtual machine to be shut down.
          type: string
        labName:
          description: The lab for the schedule.
          type: string
        owner:
          description: The owner of the virtual machine.
          type: string
        resourceGroupName:
          description: The resource group name for the schedule.
          type: string
        skipUrl:
          description: The URL to skip auto-shutdown.
          type: string
        subscriptionId:
          description: The subscription ID for the schedule.
          type: string
        text:
          description: The text for the notification.
          type: string
        vmName:
          description: The virtual machine to be shut down.
          type: string
      type: object
    Subnet:
      description: Subnet information.
      properties:
        allowPublicIp:
          description: >-
            The permission policy of the subnet for allowing public IP addresses
            (i.e. Allow, Deny)).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        labSubnetName:
          description: The name of the subnet as seen in the lab.
          type: string
        resourceId:
          description: The resource ID of the subnet.
          type: string
      type: object
    SubnetFragment:
      description: Subnet information.
      properties:
        allowPublicIp:
          description: >-
            The permission policy of the subnet for allowing public IP addresses
            (i.e. Allow, Deny)).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        labSubnetName:
          description: The name of the subnet as seen in the lab.
          type: string
        resourceId:
          description: The resource ID of the subnet.
          type: string
      type: object
    SubnetOverride:
      description: Property overrides on a subnet of a virtual network.
      properties:
        labSubnetName:
          description: The name given to the subnet within the lab.
          type: string
        resourceId:
          description: The resource ID of the subnet.
          type: string
        sharedPublicIpAddressConfiguration:
          $ref: '#/components/schemas/SubnetSharedPublicIpAddressConfiguration'
          description: Properties that virtual machines on this subnet will share.
        useInVmCreationPermission:
          description: >-
            Indicates whether this subnet can be used during virtual machine
            creation (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        usePublicIpAddressPermission:
          description: >-
            Indicates whether public IP addresses can be assigned to virtual
            machines on this subnet (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        virtualNetworkPoolName:
          description: The virtual network pool associated with this subnet.
          type: string
      type: object
    SubnetOverrideFragment:
      description: Property overrides on a subnet of a virtual network.
      properties:
        labSubnetName:
          description: The name given to the subnet within the lab.
          type: string
        resourceId:
          description: The resource ID of the subnet.
          type: string
        sharedPublicIpAddressConfiguration:
          $ref: >-
            #/components/schemas/SubnetSharedPublicIpAddressConfigurationFragment
          description: Properties that virtual machines on this subnet will share.
        useInVmCreationPermission:
          description: >-
            Indicates whether this subnet can be used during virtual machine
            creation (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        usePublicIpAddressPermission:
          description: >-
            Indicates whether public IP addresses can be assigned to virtual
            machines on this subnet (i.e. Allow, Deny).
          enum:
            - Default
            - Deny
            - Allow
          type: string
          x-ms-enum:
            modelAsString: true
            name: UsagePermissionType
        virtualNetworkPoolName:
          description: The virtual network pool associated with this subnet.
          type: string
      type: object
    SubnetSharedPublicIpAddressConfiguration:
      description: Configuration for public IP address sharing.
      properties:
        allowedPorts:
          description: >-
            Backend ports that virtual machines on this subnet are allowed to
            expose
          items:
            $ref: '#/components/schemas/Port'
          type: array
      type: object
    SubnetSharedPublicIpAddressConfigurationFragment:
      description: Configuration for public IP address sharing.
      properties:
        allowedPorts:
          description: >-
            Backend ports that virtual machines on this subnet are allowed to
            expose
          items:
            $ref: '#/components/schemas/PortFragment'
          type: array
      type: object
    TargetCostProperties:
      description: Properties of a cost target.
      properties:
        costThresholds:
          description: Cost thresholds.
          items:
            $ref: '#/components/schemas/CostThresholdProperties'
          type: array
        cycleEndDateTime:
          description: Reporting cycle end date.
          format: date-time
          type: string
        cycleStartDateTime:
          description: Reporting cycle start date.
          format: date-time
          type: string
        cycleType:
          description: Reporting cycle type.
          enum:
            - CalendarMonth
            - Custom
          type: string
          x-ms-enum:
            modelAsString: true
            name: ReportingCycleType
        status:
          description: Target cost status
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TargetCostStatus
        target:
          description: Lab target cost
          format: int32
          type: integer
      type: object
    User:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Profile of a lab user.
      properties:
        properties:
          $ref: '#/components/schemas/UserProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    UserFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Profile of a lab user.
      properties:
        properties:
          $ref: '#/components/schemas/UserPropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    UserIdentity:
      description: Identity attributes of a lab user.
      properties:
        appId:
          description: Set to the app Id of the client JWT making the request.
          type: string
        objectId:
          description: >-
            Set to the object Id of the client JWT making the request. Not all
            users have object Id. For CSP (reseller) scenarios for example,
            object Id is not available.
          type: string
        principalId:
          description: >-
            Set to the principal Id of the client JWT making the request.
            Service principal will not have the principal Id.
          type: string
        principalName:
          description: >-
            Set to the principal name / UPN of the client JWT making the
            request.
          type: string
        tenantId:
          description: Set to the tenant ID of the client JWT making the request.
          type: string
      type: object
    UserIdentityFragment:
      description: Identity attributes of a lab user.
      properties:
        appId:
          description: Set to the app Id of the client JWT making the request.
          type: string
        objectId:
          description: >-
            Set to the object Id of the client JWT making the request. Not all
            users have object Id. For CSP (reseller) scenarios for example,
            object Id is not available.
          type: string
        principalId:
          description: >-
            Set to the principal Id of the client JWT making the request.
            Service principal will not have the principal Id.
          type: string
        principalName:
          description: >-
            Set to the principal name / UPN of the client JWT making the
            request.
          type: string
        tenantId:
          description: Set to the tenant ID of the client JWT making the request.
          type: string
      type: object
    UserProperties:
      description: Properties of a lab user profile.
      properties:
        createdDate:
          description: The creation date of the user profile.
          format: date-time
          readOnly: true
          type: string
        identity:
          $ref: '#/components/schemas/UserIdentity'
          description: The identity of the user.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        secretStore:
          $ref: '#/components/schemas/UserSecretStore'
          description: The secret store of the user.
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    UserPropertiesFragment:
      description: Properties of a lab user profile.
      properties:
        identity:
          $ref: '#/components/schemas/UserIdentityFragment'
          description: The identity of the user.
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        secretStore:
          $ref: '#/components/schemas/UserSecretStoreFragment'
          description: The secret store of the user.
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    UserSecretStore:
      description: Properties of a user's secret store.
      properties:
        keyVaultId:
          description: The ID of the user's Key vault.
          type: string
        keyVaultUri:
          description: The URI of the user's Key vault.
          type: string
      type: object
    UserSecretStoreFragment:
      description: Properties of a user's secret store.
      properties:
        keyVaultId:
          description: The ID of the user's Key vault.
          type: string
        keyVaultUri:
          description: The URI of the user's Key vault.
          type: string
      type: object
    VirtualNetwork:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A virtual network.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkProperties'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    VirtualNetworkFragment:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: A virtual network.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkPropertiesFragment'
          description: The properties of the resource.
          x-ms-client-flatten: true
      type: object
    VirtualNetworkProperties:
      description: Properties of a virtual network.
      properties:
        allowedSubnets:
          description: The allowed subnets of the virtual network.
          items:
            $ref: '#/components/schemas/Subnet'
          type: array
        createdDate:
          description: The creation date of the virtual network.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The description of the virtual network.
          type: string
        externalProviderResourceId:
          description: The Microsoft.Network resource identifier of the virtual network.
          type: string
        externalSubnets:
          description: The external subnet properties.
          items:
            $ref: '#/components/schemas/ExternalSubnet'
          type: array
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        subnetOverrides:
          description: The subnet overrides of the virtual network.
          items:
            $ref: '#/components/schemas/SubnetOverride'
          type: array
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    VirtualNetworkPropertiesFragment:
      description: Properties of a virtual network.
      properties:
        allowedSubnets:
          description: The allowed subnets of the virtual network.
          items:
            $ref: '#/components/schemas/SubnetFragment'
          type: array
        description:
          description: The description of the virtual network.
          type: string
        externalProviderResourceId:
          description: The Microsoft.Network resource identifier of the virtual network.
          type: string
        externalSubnets:
          description: The external subnet properties.
          items:
            $ref: '#/components/schemas/ExternalSubnetFragment'
          type: array
        provisioningState:
          description: The provisioning status of the resource.
          type: string
        subnetOverrides:
          description: The subnet overrides of the virtual network.
          items:
            $ref: '#/components/schemas/SubnetOverrideFragment'
          type: array
        uniqueIdentifier:
          description: The unique immutable identifier of a resource (Guid).
          type: string
      type: object
    WeekDetails:
      description: Properties of a weekly schedule.
      properties:
        time:
          description: The time of the day the schedule will occur.
          type: string
        weekdays:
          description: >-
            The days of the week for which the schedule is set (e.g. Sunday,
            Monday, Tuesday, etc.).
          items:
            type: string
          type: array
      type: object
    WeekDetailsFragment:
      description: Properties of a weekly schedule.
      properties:
        time:
          description: The time of the day the schedule will occur.
          type: string
        weekdays:
          description: >-
            The days of the week for which the schedule is set (e.g. Sunday,
            Monday, Tuesday, etc.).
          items:
            type: string
          type: array
      type: object
    WindowsOsInfo:
      description: Information about a Windows OS.
      properties:
        windowsOsState:
          description: >-
            The state of the Windows OS (i.e. NonSysprepped, SysprepRequested,
            SysprepApplied).
          enum:
            - NonSysprepped
            - SysprepRequested
            - SysprepApplied
          type: string
          x-ms-enum:
            modelAsString: true
            name: WindowsOsState
      type: object
  securitySchemes:
    azure_auth:
      description: OAuth2 Implicit Grant
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: Access Microsoft Azure
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

