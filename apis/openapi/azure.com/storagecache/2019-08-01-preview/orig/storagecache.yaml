openapi: 3.0.0
info:
  description: >-
    A Storage Cache provides scalable caching service for NAS clients, serving
    data from either NFSv3 or Blob at-rest storage (referred to as "Storage
    Targets"). These operations allow you to manage caches.
  title: Storage Cache Mgmt Client
  version: 2019-08-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.StorageCache/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOperationListResult'
          description: OK. The request has succeeded.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: >-
            Resource Provider error response describing why the operation
            failed.
      tags:
        - Operations
      description: Lists all of the available RP operations.
      operationId: Operations_List
      x-ms-examples:
        StorageTargets_List:
          $ref: ./examples/Operations_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/caches':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachesListResult'
          description: >-
            A list of Cache objects.  Note that entity references might replace
            complete Cache objects, as described in
            http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Returns all Caches the user has access to under a subscription.
      operationId: Caches_List
      x-ms-examples:
        Caches_List:
          $ref: ./examples/Caches_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/skus':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSkusResult'
          description: A list of SKU descriptors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - SKUs
      description: Get the list of StorageCache.Cache SKUs available to this subscription.
      operationId: Skus_List
      x-ms-examples:
        Skus_List:
          $ref: ./examples/Skus_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.StorageCache/usageModels':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageModelsResult'
          description: A list of UsageModel descriptors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - UsageModels
      description: Get the list of cache Usage Models available to this subscription.
      operationId: UsageModels_List
      x-ms-examples:
        UsageModels_List:
          $ref: ./examples/UsageModels_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches':
    get:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachesListResult'
          description: >-
            A list of Cache objects.  Note that entity references might replace
            complete Cache objects, as described in
            http://docs.oasis-open.org/odata/odata-json-format/v4.01/cs01/odata-json-format-v4.01-cs01.html#sec_EntityReference
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: >-
        Returns all Caches the user has access to under a resource group and
        subscription.
      operationId: Caches_ListByResourceGroup
      x-ms-examples:
        Caches_ListByResourceGroup:
          $ref: ./examples/Caches_ListByResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}':
    delete:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Cache deleted.
        '202':
          content:
            application/json:
              schema: {}
          description: Started the Cache's transition to Deleted state.
        '204':
          content:
            application/json:
              schema: {}
          description: Cache deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Schedules a Cache for deletion.
      operationId: Caches_Delete
      x-ms-examples:
        Caches_Delete:
          $ref: ./examples/Caches_Delete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: Returns the Cache object corresponding to cacheId.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Returns a Cache.
      operationId: Caches_Get
      x-ms-examples:
        Caches_Get:
          $ref: ./examples/Caches_Get.json
    patch:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: Patched the Cache.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Update a Cache instance.
      operationId: Caches_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cache'
        description: >-
          Object containing the user selectable properties of the new cache.  If
          read-only properties are included, they must match the existing values
          of those properties.
      x-ms-examples:
        Caches_Update:
          $ref: ./examples/Caches_Update.json
    put:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: Cache created or already exists.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cache'
          description: >-
            Cache creation has been initiated.  Poll the new Cache's
            provisioningState property to monitor creation progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Create/update a Cache instance.
      operationId: Caches_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cache'
        description: >-
          Object containing the user selectable properties of the new cache.  If
          read-only properties are included, they must match the existing values
          of those properties.
      x-ms-examples:
        Caches_Create:
          $ref: ./examples/Caches_Create.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/flush':
    post:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: All cache data is clean.
        '202':
          content:
            application/json:
              schema: {}
          description: Cache has started flushing.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: >-
        Tells a cache to write all dirty data to the StorageTarget(s).  During
        the flush, clients will see errors returned until the flush is complete.
      operationId: Caches_Flush
      x-ms-examples:
        Caches_Flush:
          $ref: ./examples/Caches_Flush.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/start':
    post:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Cache is Active.
        '202':
          content:
            application/json:
              schema: {}
          description: Cache has started the transition to Active.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Tells a Stopped state cache to transition to Active state.
      operationId: Caches_Start
      x-ms-examples:
        Caches_Start:
          $ref: ./examples/Caches_Start.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/stop':
    post:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Cache is stopped.
        '202':
          content:
            application/json:
              schema: {}
          description: Cache has started the transition to Stopped.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Tells an Active cache to transition to Stopped state.
      operationId: Caches_Stop
      x-ms-examples:
        Caches_Stop:
          $ref: ./examples/Caches_Stop.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets':
    get:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTargetsResult'
          description: Returns the list of storage targets defined by cacheId.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - StorageTargets
      description: >-
        Returns the StorageTargets for this cache in the subscription and
        resource group.
      operationId: StorageTargets_ListByCache
      x-ms-examples:
        StorageTargets_List:
          $ref: ./examples/StorageTargets_ListByCache.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/storageTargets/{storageTargetName}':
    delete:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - description: Name of storage target.
          in: path
          name: storageTargetName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Storage target deleted.
        '202':
          content:
            application/json:
              schema: {}
          description: Started the storage target's deletion.
        '204':
          content:
            application/json:
              schema: {}
          description: Storage target deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - StorageTargets
      description: >-
        Removes a storage target from a cache.  This operation is allowed at any
        time, but if the cache is down or unhealthy, the actual removal of the
        storage target may be delayed until the cache is healthy again.
      operationId: StorageTargets_Delete
      x-ms-examples:
        StorageTargets_Delete:
          $ref: ./examples/StorageTargets_Delete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - description: Name of storage target.
          in: path
          name: storageTargetName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
          description: >-
            Returns the Storage Target object corresponding to
            storageTargetName.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - StorageTargets
      description: Returns a storage target from a cache.
      operationId: StorageTargets_Get
      x-ms-examples:
        StorageTargets_Get:
          $ref: ./examples/StorageTargets_Get.json
    patch:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - description: Name of storage target.
          in: path
          name: storageTargetName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
          description: Storage Target has been patched.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - StorageTargets
      description: >-
        Update a storage target.  This operation is allowed at any time, but if
        the cache is down or unhealthy, the actual creation/modification of the
        storage target may be delayed until the cache is healthy again.
      operationId: StorageTargets_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTarget'
        description: Object containing the definition of a storage target.
      x-ms-examples:
        StorageTargets_Update:
          $ref: ./examples/StorageTargets_Update.json
    put:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
        - description: Name of storage target.
          in: path
          name: storageTargetName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
          description: Storage Target has been created.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageTarget'
          description: >-
            Storage Target creation has been initiated.  Poll the new Storage
            Target's provisioningState property to monitor creation progress.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - StorageTargets
      description: >-
        Create/update a storage target.  This operation is allowed at any time,
        but if the cache is down or unhealthy, the actual creation/modification
        of the storage target may be delayed until the cache is healthy again.
      operationId: StorageTargets_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorageTarget'
        description: Object containing the definition of a storage target.
      x-ms-examples:
        StorageTargets_Create:
          $ref: ./examples/StorageTargets_Create.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StorageCache/caches/{cacheName}/upgrade':
    post:
      parameters:
        - description: Target resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: Name of cache.
          in: path
          name: cacheName
          required: true
          schema:
            pattern: '^[-0-9a-zA-Z_]{1,31}$'
            type: string
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: Cache firmware is up to date.
        '202':
          content:
            application/json:
              schema: {}
          description: Cache has started the upgrade.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudError'
          description: Error response describing why the operation failed.
      tags:
        - Caches
      description: Tells a cache to upgrade its firmware.
      operationId: Caches_UpgradeFirmware
      x-ms-examples:
        Caches_UpgradeFirmware:
          $ref: ./examples/Caches_UpgradeFirmware.json
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: >-
        Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  requestBodies:
    Cache:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cache'
      description: >-
        Object containing the user selectable properties of the new cache.  If
        read-only properties are included, they must match the existing values
        of those properties.
    StorageTarget:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StorageTarget'
      description: Object containing the definition of a storage target.
  schemas:
    ApiOperation:
      description: >-
        REST API operation description: see
        https://github.com/Azure/azure-rest-api-specs/blob/master/documentation/openapi-authoring-automated-guidelines.md#r3023-operationsapiimplementation
      properties:
        display:
          description: The object that represents the operation.
          properties:
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              type: string
            provider:
              description: 'Service provider: Microsoft.StorageCache'
              type: string
            resource:
              description: 'Resource on which the operation is performed: cache, etc.'
              type: string
          type: object
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          type: string
      type: object
    ApiOperationListResult:
      description: >-
        Result of the request to list Resource Provider operations. It contains
        a list of operations and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          type: string
        value:
          description: >-
            List of Resource Provider operations supported by the
            Microsoft.StorageCache resource provider.
          items:
            $ref: '#/components/schemas/ApiOperation'
          type: array
      type: object
    Cache:
      description: >-
        A cache instance.  Follows Azure Resource Manager standards:
        https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/resource-api-reference.md
      properties:
        tags:
          description: ARM tags as name/value pairs.
          type: object
        id:
          $ref: '#/components/schemas/URLString'
          description: Fully qualified URL of the cache.
          readOnly: true
        location:
          description: Region name string.
          type: string
        name:
          $ref: '#/components/schemas/ResourceName'
          description: Name of cache.
          readOnly: true
        properties:
          description: Properties for the cache.
          properties:
            cacheSizeGB:
              description: 'The size of this cache''s cache, in GB.'
              type: integer
            health:
              $ref: '#/components/schemas/CacheHealth'
              description: Health of the cache.
              readOnly: true
            mountAddresses:
              description: >-
                Array of IP addresses that can be used by clients mounting this
                Cache.
              items:
                type: string
              readOnly: true
              type: array
            provisioningState:
              description: >-
                ARM provisioning state, see
                https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
              enum:
                - Succeeded
                - Failed
                - Cancelled
                - Creating
                - Deleting
                - Updating
              type: string
              x-ms-enum:
                modelAsString: true
                name: ProvisioningStateType
            subnet:
              $ref: '#/components/schemas/URLString'
              description: Subnet used for the cache.
            upgradeStatus:
              $ref: '#/components/schemas/CacheUpgradeStatus'
              description: Upgrade status of the cache.
          type: object
          x-ms-client-flatten: true
        sku:
          description: Sku for the cache.
          properties:
            name:
              description: Sku name for this cache.
              type: string
          type: object
        type:
          description: Type for the cache; Microsoft.StorageCache/Cache
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    CacheHealth:
      description: >-
        An indication of cache health.  Gives more information about health than
        just that related to provisioning.
      properties:
        state:
          description: List of cache health states.
          enum:
            - Unknown
            - Healthy
            - Degraded
            - Down
            - Transitioning
            - Stopping
            - Stopped
            - Upgrading
            - Flushing
          type: string
          x-ms-enum:
            modelAsString: true
            name: HealthStateType
        statusDescription:
          description: Describes explanation of state.
          type: string
      type: object
    CacheUpgradeStatus:
      description: Properties describing the software upgrade state of the cache
      properties:
        currentFirmwareVersion:
          description: Version string of the firmware currently installed on this cache.
          readOnly: true
          type: string
        firmwareUpdateDeadline:
          description: >-
            Time at which the pending firmware update will automatically be
            installed on the cache.
          format: date-time
          readOnly: true
          type: string
        firmwareUpdateStatus:
          description: >-
            True if there is a firmware update ready to install on this cache. 
            The firmware will automatically be installed after
            firmwareUpdateDeadline if not triggered earlier via the upgrade
            operation.
          enum:
            - available
            - unavailable
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: FirmwareStatusType
        lastFirmwareUpdate:
          description: Time of the last successful firmware update.
          format: date-time
          readOnly: true
          type: string
        pendingFirmwareVersion:
          description: >-
            When firmwareUpdateAvailable is true, this field holds the version
            string for the update.
          readOnly: true
          type: string
      type: object
    CachesListResult:
      description: >-
        Result of the request to list caches. It contains a list of caches and a
        URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of cache list results if there are any.
          type: string
        value:
          description: List of caches.
          items:
            $ref: '#/components/schemas/Cache'
          type: array
      type: object
    ClfsTarget:
      description: Storage container for use as a CLFS StorageTarget.
      properties:
        target:
          $ref: '#/components/schemas/URLString'
          description: URL of storage container.
      type: object
      x-ms-discriminator-value: clfs
    CloudError:
      description: An error response.
      properties:
        error:
          $ref: '#/components/schemas/CloudErrorBody'
          description: The body of the error.
      type: object
      x-ms-external: true
    CloudErrorBody:
      description: An error response.
      properties:
        code:
          description: >-
            An identifier for the error. Codes are invariant and are intended to
            be consumed programmatically.
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: '#/components/schemas/CloudErrorBody'
          type: array
        message:
          description: >-
            A message describing the error, intended to be suitable for display
            in a user interface.
          type: string
        target:
          description: >-
            The target of the particular error. For example, the name of the
            property in error.
          type: string
      type: object
    NamespaceJunction:
      description: A namespace junction.
      properties:
        namespacePath:
          description: Namespace path on a cache for a storage target.
          type: string
        nfsExport:
          description: NFS export where targetPath exists.
          type: string
        targetPath:
          description: Path in storage target to which namespacePath points.
          type: string
      type: object
    Nfs3Target:
      description: An NFS mount point for use as a StorageTarget.
      properties:
        target:
          description: 'IP or name of an NFS Storage Target host, ie: 10.0.44.44'
          pattern: '^[-.0-9a-zA-Z]+$'
          type: string
        usageModel:
          description: >-
            Identifies the primary usage model to be used for this storage
            target.   GET choices from .../usageModels
          type: string
      type: object
      x-ms-discriminator-value: nfs3
    ResourceName:
      description: >-
        Schema for the name of resources served by this provider.   Note that
        objects will contain an odata @id annotation as appropriate, this will
        contain the complete URL of the object.   These names are
        case-preserving, but not case sensitive.
      pattern: '^[-0-9a-zA-Z_]{1,31}$'
      type: string
    ResourceSku:
      description: A resource SKU
      properties:
        capabilities:
          description: 'A list of capabilities of this SKU, such as throughput or ops/sec'
          items:
            $ref: '#/components/schemas/ResourceSkuCapabilities'
          type: array
        locationInfo:
          description: The set of locations that the SKU is available.
          items:
            $ref: '#/components/schemas/ResourceSkuLocationInfo'
          type: array
        locations:
          description: >-
            The set of locations that the SKU is available. This will be
            supported and registered Azure Geo Regions (e.g. West US, East US,
            Southeast Asia, etc.).
          items:
            type: string
          readOnly: true
          type: array
        name:
          description: The name of this sku.
          type: string
        resourceType:
          description: The type of resource the sku applies to.
          readOnly: true
          type: string
        restrictions:
          description: >-
            The restrictions because of which SKU cannot be used. This is empty
            if there are no restrictions.
          items:
            $ref: '#/components/schemas/Restriction'
          type: array
      type: object
    ResourceSkuCapabilities:
      description: A resource SKU capability.
      properties:
        name:
          description: 'Name of a capability, such as ops/sec'
          type: string
        value:
          description: 'Quantity, if the capability is measured by quantity'
          type: string
      type: object
    ResourceSkuLocationInfo:
      description: Resource SKU location information.
      properties:
        location:
          description: Location where this Sku is available
          type: string
        zones:
          description: Zones if any.
          items:
            type: string
          type: array
      type: object
    ResourceSkusResult:
      description: The response from the List Cache SKUs operation.
      properties:
        nextLink:
          description: The uri to fetch the next page of cache Skus.
          type: string
        value:
          description: The list of skus available for the subscription.
          items:
            $ref: '#/components/schemas/ResourceSku'
          readOnly: true
          type: array
      type: object
    Restriction:
      description: The restriction because of which SKU cannot be used.
      properties:
        reasonCode:
          description: >-
            The reason for the restriction. As of now this can be "QuotaId" or
            "NotAvailableForSubscription". Quota Id is set when the SKU has
            requiredQuotas parameter as the subscription does not belong to that
            quota. The "NotAvailableForSubscription" is related to capacity at
            DC.
          enum:
            - QuotaId
            - NotAvailableForSubscription
          type: string
          x-ms-enum:
            modelAsString: true
            name: ReasonCode
        type:
          description: >-
            The type of restrictions. As of now only possible value for this is
            location.
          readOnly: true
          type: string
        values:
          description: >-
            The value of restrictions. If the restriction type is set to
            location. This would be different locations where the SKU is
            restricted.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    StorageTarget:
      description: A storage system being cached by a Cache.
      discriminator:
        propertyName: targetType
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        name:
          $ref: '#/components/schemas/ResourceName'
          description: A fully qualified URL.
          readOnly: true
        properties:
          description: Properties of the storage target.
          properties:
            clfs:
              $ref: '#/components/schemas/ClfsTarget'
              description: Properties when clfs target.
            junctions:
              description: List of cache namespace to target namespace associations.
              items:
                $ref: '#/components/schemas/NamespaceJunction'
              type: array
            nfs3:
              $ref: '#/components/schemas/Nfs3Target'
              description: Properties when nfs3 target.
            provisioningState:
              description: >-
                ARM provisioning state, see
                https://github.com/Azure/azure-resource-manager-rpc/blob/master/v1.0/Addendum.md#provisioningstate-property
              enum:
                - Succeeded
                - Failed
                - Cancelled
                - Creating
                - Deleting
                - Updating
              type: string
              x-ms-enum:
                modelAsString: true
                name: ProvisioningStateType
            targetType:
              description: Type for storage target.
              enum:
                - nfs3
                - clfs
                - unknown
              type: string
              x-ms-enum:
                modelAsString: true
                name: StorageTargetType
            unknown:
              $ref: '#/components/schemas/UnknownTarget'
              description: Properties when unknown target.
          type: object
          x-ms-client-flatten: true
        type:
          description: >-
            Type for the storage target;
            Microsoft.StorageCache/Cache/StorageTarget
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    StorageTargetsResult:
      description: A list of storage targets.
      properties:
        nextLink:
          description: The uri to fetch the next page of storage targets.
          type: string
        value:
          description: The list of storage targets defined for the cache.
          items:
            $ref: '#/components/schemas/StorageTarget'
          type: array
      type: object
    URLString:
      description: A fully qualified URL.
      type: string
    UnknownProperties:
      additionalProperties:
        type: string
      description: Properties of an unknown type of StorageTarget
      type: object
    UnknownTarget:
      description: Storage container for use as a Unknown StorageTarget.
      properties:
        unknownMap:
          $ref: '#/components/schemas/UnknownProperties'
          description: >-
            Dictionary of string->string pairs containing information about the
            StorageTarget.
      type: object
      x-ms-discriminator-value: unknown
    UsageModel:
      description: A usage model.
      properties:
        display:
          description: Localized information describing this usage model.
          properties:
            description:
              description: String to display for this usage model.
              type: string
          type: object
        modelName:
          description: Non localized keyword naming this usage model.
          type: string
        targetType:
          description: >-
            The type of Storage Target to which this model is applicable (only
            nfs for now)
          type: string
      type: object
    UsageModelsResult:
      description: A list of cache usage models.
      properties:
        nextLink:
          description: The uri to fetch the next page of cache usage models.
          type: string
        value:
          description: The list of usage models available for the subscription.
          items:
            $ref: '#/components/schemas/UsageModel'
          type: array
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

