{
  "openapi": "3.0.0",
  "info": {
    "title": "MonitorManagementClient",
    "version": "2016-03-01",
    "x-ms-code-generation-settings": {
      "name": "MonitorManagementClient"
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/monitor/resource-manager/Microsoft.Insights/stable/2016-03-01/alertRules_API.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Insights/alertrules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResourceCollection"
                }
              }
            },
            "description": "Successful request for a list of alert rules"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AlertRules"
        ],
        "description": "List the classic metric alert rules within a subscription.",
        "operationId": "AlertRules_ListBySubscription",
        "x-ms-examples": {
          "List alert rules": {
            "$ref": "./examples/listAlertRuleBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResourceCollection"
                }
              }
            },
            "description": "Successful request for a list of alert rules"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AlertRules"
        ],
        "description": "List the classic metric alert rules within a resource group.",
        "operationId": "AlertRules_ListByResourceGroup",
        "x-ms-examples": {
          "List alert rules": {
            "$ref": "./examples/listAlertRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/alertrules/{ruleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete an alert rule"
          },
          "204": {
            "description": "No content: the request was successful, but the response is empty"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AlertRules"
        ],
        "description": "Deletes a classic metric alert rule",
        "operationId": "AlertRules_Delete",
        "x-ms-examples": {
          "Delete an alert rule": {
            "$ref": "./examples/deleteAlertRule.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResource"
                }
              }
            },
            "description": "Successful request to get an alert rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AlertRules"
        ],
        "description": "Gets a classic metric alert rule",
        "operationId": "AlertRules_Get",
        "x-ms-examples": {
          "Get an alert rule": {
            "$ref": "./examples/getAlertRule.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResource"
                }
              }
            },
            "description": "Successful request to update an alert rule"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResource"
                }
              }
            },
            "description": "Successful request to update an alert rule that resulted in a creation of the alert rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "description": "Updates an existing classic metric AlertRuleResource. To update other fields use the CreateOrUpdate method.",
        "operationId": "AlertRules_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRuleResourcePatch"
              }
            }
          },
          "description": "Parameters supplied to the operation.",
          "required": true
        },
        "x-ms-examples": {
          "Patch an alert rule": {
            "$ref": "./examples/patchAlertRule.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResource"
                }
              }
            },
            "description": "Successful request to update an alert rule"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleResource"
                }
              }
            },
            "description": "Created alert rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AlertRules"
        ],
        "description": "Creates or updates a classic metric alert rule.",
        "operationId": "AlertRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRuleResource"
              }
            }
          },
          "description": "The parameters of the rule to create or update.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update an alert rule": {
            "$ref": "./examples/createOrUpdateAlertRule.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "RuleNameParameter": {
        "description": "The name of the rule.",
        "in": "path",
        "name": "ruleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AlertRule": {
        "description": "An alert rule.",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/RuleAction",
            "description": "action that is performed when the alert rule becomes active, and when an alert condition is resolved."
          },
          "actions": {
            "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
            "items": {
              "$ref": "#/components/schemas/RuleAction"
            },
            "type": "array",
            "x-ms-identifiers": []
          },
          "condition": {
            "$ref": "#/components/schemas/RuleCondition",
            "description": "the condition that results in the alert rule being activated."
          },
          "description": {
            "description": "the description of the alert rule that will be included in the alert email.",
            "type": "string"
          },
          "isEnabled": {
            "description": "the flag that indicates whether the alert rule is enabled.",
            "type": "boolean"
          },
          "lastUpdatedTime": {
            "description": "Last time the rule was updated in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "the name of the alert rule.",
            "type": "string"
          },
          "provisioningState": {
            "description": "the provisioning state.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "isEnabled",
          "condition"
        ],
        "type": "object"
      },
      "AlertRuleResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The alert rule resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AlertRule",
            "description": "The alert rule properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AlertRuleResourceCollection": {
        "description": "Represents a collection of alert rule resources.",
        "properties": {
          "value": {
            "description": "the values for the alert rule resources.",
            "items": {
              "$ref": "#/components/schemas/AlertRuleResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AlertRuleResourcePatch": {
        "description": "The alert rule object for patch operations.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "properties": {
            "$ref": "#/components/schemas/AlertRule",
            "description": "The properties of an alert rule.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ConditionOperator": {
        "description": "Operators allowed in the rule condition.",
        "enum": [
          "GreaterThan",
          "GreaterThanOrEqual",
          "LessThan",
          "LessThanOrEqual"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "ConditionOperator"
        }
      },
      "ErrorResponse": {
        "description": "Describes the format of Error response.",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LocationThresholdRuleCondition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleCondition"
          }
        ],
        "description": "A rule condition based on a certain number of locations failing.",
        "example": "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\r\n\t\t\"resourceUri\": \"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourcegroups/Default-Web-CentralUS/providers/microsoft.insights/webtests/homepagetest-newrelapp2\",r\n\t\t\"metricName\": \"GSMT_AvRaW\"\r\n\t},\r\n\t\"windowSize\": \"PT5M\",\r\n\t\"failedLocationCount\": 1\r\n}",
        "properties": {
          "failedLocationCount": {
            "description": "the number of locations that must fail to activate the alert.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "windowSize": {
            "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
            "format": "duration",
            "type": "string"
          }
        },
        "required": [
          "failedLocationCount"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition"
      },
      "ManagementEventAggregationCondition": {
        "description": "How the data that is collected should be combined over time.",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/ConditionOperator",
            "description": "the condition operator."
          },
          "threshold": {
            "description": "The threshold value that activates the alert.",
            "format": "double",
            "type": "number"
          },
          "windowSize": {
            "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
            "format": "duration",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagementEventRuleCondition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleCondition"
          }
        ],
        "description": "A management event rule condition.",
        "example": "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource\",\r\n\t\t\"operationName\": \"\",\r\n\t\t\"resourceUri\": \"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourceGroups/Default-Web-CentralUS/providers/Microsoft.Web/sites/TestLatestWebsite\",\r\n\t\t\"status\": \"failed\",\r\n\t\t\"claims\": { }\r\n\t},\r\n\t\"aggregation\": {\r\n\t\t\"threshold\": 1,\r\n\t\t\"windowSize\": \"PT5M\"\r\n\t}\r\n}",
        "properties": {
          "aggregation": {
            "$ref": "#/components/schemas/ManagementEventAggregationCondition",
            "description": "How the data that is collected should be combined over time and when the alert is activated. Note that for management event alerts aggregation is optional \u2013 if it is not provided then any event will cause the alert to activate."
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition"
      },
      "Resource": {
        "description": "An azure resource object",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "Azure resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "RuleAction": {
        "description": "The action that is performed when the alert rule becomes active, and when an alert condition is resolved.",
        "discriminator": {
          "propertyName": "odata.type"
        },
        "properties": {
          "odata.type": {
            "description": "specifies the type of the action. There are two types of actions: RuleEmailAction and RuleWebhookAction.",
            "type": "string"
          }
        },
        "required": [
          "odata.type"
        ],
        "type": "object"
      },
      "RuleCondition": {
        "description": "The condition that results in the alert rule being activated.",
        "discriminator": {
          "propertyName": "odata.type"
        },
        "properties": {
          "dataSource": {
            "$ref": "#/components/schemas/RuleDataSource",
            "description": "the resource from which the rule collects its data. For this type dataSource will always be of type RuleMetricDataSource."
          },
          "odata.type": {
            "description": "specifies the type of condition. This can be one of three types: ManagementEventRuleCondition (occurrences of management events), LocationThresholdRuleCondition (based on the number of failures of a web test), and ThresholdRuleCondition (based on the threshold of a metric).",
            "type": "string"
          }
        },
        "required": [
          "odata.type"
        ],
        "type": "object"
      },
      "RuleDataSource": {
        "description": "The resource from which the rule collects its data.",
        "discriminator": {
          "propertyName": "odata.type"
        },
        "properties": {
          "legacyResourceId": {
            "description": "the legacy resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.",
            "type": "string"
          },
          "metricNamespace": {
            "description": "the namespace of the metric.",
            "type": "string"
          },
          "odata.type": {
            "description": "specifies the type of data source. There are two types of rule data sources: RuleMetricDataSource and RuleManagementEventDataSource",
            "type": "string"
          },
          "resourceLocation": {
            "description": "the location of the resource.",
            "type": "string"
          },
          "resourceUri": {
            "description": "the resource identifier of the resource the rule monitors. **NOTE**: this property cannot be updated for an existing rule.",
            "type": "string"
          }
        },
        "required": [
          "odata.type"
        ],
        "type": "object"
      },
      "RuleEmailAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleAction"
          }
        ],
        "description": "Specifies the action to send email when the rule condition is evaluated. The discriminator is always RuleEmailAction in this case.",
        "example": "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleEmailAction\",\r\n\t\"sendToServiceOwners\": true,\r\n\t\"customEmails\": [\"email1@contoso.com\",\"email2@contoso.com\" ]\r\n}",
        "properties": {
          "customEmails": {
            "description": "the list of administrator's custom email addresses to notify of the activation of the alert.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sendToServiceOwners": {
            "description": "Whether the administrators (service and co-administrators) of the service should be notified when the alert is activated.",
            "type": "boolean"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction"
      },
      "RuleManagementEventClaimsDataSource": {
        "description": "The claims for a rule management event data source.",
        "properties": {
          "emailAddress": {
            "description": "the email address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RuleManagementEventDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleDataSource"
          }
        ],
        "description": "A rule management event data source. The discriminator fields is always RuleManagementEventDataSource in this case.",
        "properties": {
          "claims": {
            "$ref": "#/components/schemas/RuleManagementEventClaimsDataSource",
            "description": "the claims."
          },
          "eventName": {
            "description": "the event name.",
            "type": "string"
          },
          "eventSource": {
            "description": "the event source.",
            "type": "string"
          },
          "level": {
            "description": "the level.",
            "type": "string"
          },
          "operationName": {
            "description": "The name of the operation that should be checked for. If no name is provided, any operation will match.",
            "type": "string"
          },
          "resourceGroupName": {
            "description": "the resource group name.",
            "type": "string"
          },
          "resourceProviderName": {
            "description": "the resource provider name.",
            "type": "string"
          },
          "status": {
            "description": "The status of the operation that should be checked for. If no status is provided, any status will match.",
            "type": "string"
          },
          "subStatus": {
            "description": "the substatus.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource"
      },
      "RuleMetricDataSource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleDataSource"
          }
        ],
        "description": "A rule metric data source. The discriminator value is always RuleMetricDataSource in this case.",
        "properties": {
          "metricName": {
            "description": "the name of the metric that defines what the rule monitors.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource"
      },
      "RuleWebhookAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleAction"
          }
        ],
        "description": "Specifies the action to post to service when the rule condition is evaluated. The discriminator is always RuleWebhookAction in this case.",
        "example": "{\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleWebhookAction\",\r\n\t\"serviceUri\": \"http://contoso.com/\",\r\n\t\"properties\": { }\r\n}",
        "properties": {
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "the dictionary of custom properties to include with the post operation. These data are appended to the webhook payload.",
            "type": "object"
          },
          "serviceUri": {
            "description": "the service uri to Post the notification when the alert activates or resolves.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction"
      },
      "ThresholdRuleCondition": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RuleCondition"
          }
        ],
        "description": "A rule condition based on a metric crossing a threshold.",
        "example": "\"condition\": {\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition\",\r\n\t\"dataSource\": {\r\n\t\"odata.type\": \"Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource\",\r\n\t\"resourceUri\":\r\n\t\"/subscriptions/089bd33f-d4ec-47fe-8ba5-0753aa5c5b33/resourceGroups/Default-Storage-NorthCentralUS/providers/Microsoft.Web/serverfarms/Plan\",\r\n\t\"metricName\": \"CpuPercentage\",\r\n\t\"operator\": \"GreaterThan\"\r\n\t},\r\n\t\"threshold\": 90,\r\n\t\"windowSize\": \"PT15M\",\r\n\t\"timeAggregation\": \"Average\"}",
        "properties": {
          "operator": {
            "$ref": "#/components/schemas/ConditionOperator",
            "description": "the operator used to compare the data and the threshold."
          },
          "threshold": {
            "description": "the threshold value that activates the alert.",
            "format": "double",
            "type": "number"
          },
          "timeAggregation": {
            "$ref": "#/components/schemas/TimeAggregationOperator",
            "description": "the time aggregation operator. How the data that are collected should be combined over time. The default value is the PrimaryAggregationType of the Metric."
          },
          "windowSize": {
            "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
            "format": "duration",
            "type": "string"
          }
        },
        "required": [
          "threshold",
          "operator"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition"
      },
      "TimeAggregationOperator": {
        "description": "Aggregation operators allowed in a rule.",
        "enum": [
          "Average",
          "Minimum",
          "Maximum",
          "Total",
          "Last"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "TimeAggregationOperator"
        }
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}