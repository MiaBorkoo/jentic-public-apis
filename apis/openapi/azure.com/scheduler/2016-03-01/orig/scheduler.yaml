openapi: 3.0.0
info:
  title: SchedulerManagementClient
  version: '2016-03-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Scheduler/jobCollections':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
          description: The job collections have been successfully returned.
      tags:
        - JobCollections
      description: Gets all job collections under specified subscription.
      operationId: JobCollections_ListBySubscription
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionListResult'
          description: The job collections have been successfully returned.
      tags:
        - JobCollections
      description: Gets all job collections under specified resource group.
      operationId: JobCollections_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job collection has been successfully deleted.
        '202':
          description: >-
            The delete operation for the job collection has been accepted and
            will complete asynchronously.
      tags:
        - JobCollections
      description: Deletes a job collection.
      operationId: JobCollections_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully returned.
      tags:
        - JobCollections
      description: Gets a job collection.
      operationId: JobCollections_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully patched.
      tags:
        - JobCollections
      description: Patches an existing job collection.
      operationId: JobCollections_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
        description: The job collection definition.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCollectionDefinition'
          description: The job collection has been successfully created.
      tags:
        - JobCollections
      description: Provisions a new job collection or updates an existing job collection.
      operationId: JobCollections_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCollectionDefinition'
        description: The job collection definition.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/disable':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: >-
            All of the jobs in the job collection have been successfully
            disabled.
        '202':
          description: >-
            Accepted and the disable job collection operation will complete
            asynchronously.
      tags:
        - JobCollections
      description: Disables all of the jobs in the job collection.
      operationId: JobCollections_Disable
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/enable':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: >-
            All of the jobs in the job collection have been successfully
            enabled.
        '202':
          description: >-
            Accepted and the enable job collection operation will complete
            asynchronously.
      tags:
        - JobCollections
      description: Enables all of the jobs in the job collection.
      operationId: JobCollections_Enable
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
        - description: 'The number of jobs to request, in the of range of [1..100].'
          in: query
          name: $top
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: >-
            The (0-based) index of the job history list from which to begin
            requesting entries.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The filter to apply on the job state.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobListResult'
          description: The job has been successfully returned.
      tags:
        - Jobs
      description: Lists all jobs under the specified job collection.
      operationId: Jobs_List
      x-ms-odata: '#/components/schemas/JobStateFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job has been successfully deleted.
      tags:
        - Jobs
      description: Deletes a job.
      operationId: Jobs_Delete
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully returned.
      tags:
        - Jobs
      description: Gets a job.
      operationId: Jobs_Get
    patch:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully patched.
      tags:
        - Jobs
      description: Patches an existing job.
      operationId: Jobs_Patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
        description: The job definition.
        required: true
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
            text/json:
              schema:
                $ref: '#/components/schemas/JobDefinition'
          description: The job has been successfully created.
      tags:
        - Jobs
      description: Provisions a new job or updates an existing job.
      operationId: Jobs_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDefinition'
        description: The job definition.
        required: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/history':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
        - description: 'the number of job history to request, in the of range of [1..100].'
          in: query
          name: $top
          required: false
          schema:
            maximum: 100
            minimum: 1
            type: integer
        - description: >-
            The (0-based) index of the job history list from which to begin
            requesting entries.
          in: query
          name: $skip
          required: false
          schema:
            type: integer
        - description: The filter to apply on the job state.
          in: query
          name: $filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/JobHistoryListResult'
          description: The job histories have been successfully returned.
      tags:
        - Jobs
      description: Lists job history.
      operationId: Jobs_ListJobHistory
      x-ms-odata: '#/components/schemas/JobHistoryFilter'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Scheduler/jobCollections/{jobCollectionName}/jobs/{jobName}/run':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionId'
        - description: The resource group name.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: The job collection name.
          in: path
          name: jobCollectionName
          required: true
          schema:
            type: string
        - description: The job name.
          in: path
          name: jobName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/apiVersion'
      responses:
        '200':
          description: The job has been successfully run.
      tags:
        - Jobs
      description: Runs a job.
      operationId: Jobs_Run
components:
  parameters:
    apiVersion:
      description: The API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    subscriptionId:
      description: The subscription id.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  requestBodies:
    JobCollectionDefinition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobCollectionDefinition'
        text/json:
          schema:
            $ref: '#/components/schemas/JobCollectionDefinition'
      description: The job collection definition.
      required: true
    JobDefinition:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobDefinition'
        text/json:
          schema:
            $ref: '#/components/schemas/JobDefinition'
      description: The job definition.
      required: true
  schemas:
    BasicAuthentication:
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        password:
          description: 'Gets or sets the password, return value will always be empty.'
          type: string
        username:
          description: Gets or sets the username.
          type: string
      type: object
      x-ms-discriminator-value: Basic
    ClientCertAuthentication:
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        certificateExpirationDate:
          description: Gets or sets the certificate expiration date.
          format: date-time
          type: string
        certificateSubjectName:
          description: Gets or sets the certificate subject name.
          type: string
        certificateThumbprint:
          description: Gets or sets the certificate thumbprint.
          type: string
        password:
          description: >-
            Gets or sets the certificate password, return value will always be
            empty.
          type: string
        pfx:
          description: >-
            Gets or sets the pfx certificate. Accepts certification in base64
            encoding, return value will always be empty.
          type: string
      type: object
      x-ms-discriminator-value: ClientCertificate
    HttpAuthentication:
      discriminator:
        propertyName: type
      properties:
        type:
          description: Gets or sets the HTTP authentication type.
          enum:
            - NotSpecified
            - ClientCertificate
            - ActiveDirectoryOAuth
            - Basic
          type: string
          x-ms-enum:
            modelAsString: false
            name: HttpAuthenticationType
      required:
        - type
      type: object
    HttpRequest:
      properties:
        authentication:
          $ref: '#/components/schemas/HttpAuthentication'
          description: Gets or sets the authentication method of the request.
        body:
          description: Gets or sets the request body.
          type: string
        headers:
          additionalProperties:
            type: string
          description: Gets or sets the headers.
          type: object
        method:
          description: Gets or sets the method of the request.
          type: string
        uri:
          description: Gets or sets the URI of the request.
          type: string
      type: object
    JobAction:
      properties:
        errorAction:
          $ref: '#/components/schemas/JobErrorAction'
          description: Gets or sets the error action.
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
          description: Gets or sets the storage queue message.
        request:
          $ref: '#/components/schemas/HttpRequest'
          description: Gets or sets the http requests.
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: Gets or sets the retry policy.
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
          description: Gets or sets the service bus queue message.
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
          description: Gets or sets the service bus topic message.
        type:
          description: Gets or sets the job action type.
          enum:
            - Http
            - Https
            - StorageQueue
            - ServiceBusQueue
            - ServiceBusTopic
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobActionType
      type: object
    JobCollectionDefinition:
      properties:
        tags:
          additionalProperties:
            type: string
          description: Gets or sets the tags.
          type: object
        id:
          description: Gets the job collection resource identifier.
          readOnly: true
          type: string
        location:
          description: Gets or sets the storage account location.
          type: string
        name:
          description: Gets or sets the job collection resource name.
          type: string
        properties:
          $ref: '#/components/schemas/JobCollectionProperties'
          description: Gets or sets the job collection properties.
        type:
          description: Gets the job collection resource type.
          readOnly: true
          type: string
      type: object
    JobCollectionListResult:
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of job collections.
          type: string
        value:
          description: Gets the job collections.
          items:
            $ref: '#/components/schemas/JobCollectionDefinition'
          readOnly: true
          type: array
      type: object
    JobCollectionProperties:
      properties:
        quota:
          $ref: '#/components/schemas/JobCollectionQuota'
          description: Gets or sets the job collection quota.
        sku:
          $ref: '#/components/schemas/Sku'
          description: Gets or sets the SKU.
        state:
          description: Gets or sets the state.
          enum:
            - Enabled
            - Disabled
            - Suspended
            - Deleted
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobCollectionState
      type: object
    JobCollectionQuota:
      properties:
        maxJobCount:
          description: Gets or set the maximum job count.
          type: integer
        maxJobOccurrence:
          description: Gets or sets the maximum job occurrence.
          type: integer
        maxRecurrence:
          $ref: '#/components/schemas/JobMaxRecurrence'
          description: Gets or set the maximum recurrence.
      type: object
    JobDefinition:
      properties:
        id:
          description: Gets the job resource identifier.
          readOnly: true
          type: string
        name:
          description: Gets the job resource name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/JobProperties'
          description: Gets or sets the job properties.
        type:
          description: Gets the job resource type.
          readOnly: true
          type: string
      type: object
    JobErrorAction:
      properties:
        queueMessage:
          $ref: '#/components/schemas/StorageQueueMessage'
          description: Gets or sets the storage queue message.
        request:
          $ref: '#/components/schemas/HttpRequest'
          description: Gets or sets the http requests.
        retryPolicy:
          $ref: '#/components/schemas/RetryPolicy'
          description: Gets or sets the retry policy.
        serviceBusQueueMessage:
          $ref: '#/components/schemas/ServiceBusQueueMessage'
          description: Gets or sets the service bus queue message.
        serviceBusTopicMessage:
          $ref: '#/components/schemas/ServiceBusTopicMessage'
          description: Gets or sets the service bus topic message.
        type:
          description: Gets or sets the job error action type.
          enum:
            - Http
            - Https
            - StorageQueue
            - ServiceBusQueue
            - ServiceBusTopic
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobActionType
      type: object
    JobExecutionStatus:
      description: Gets the job execution status.
      enum:
        - Completed
        - Failed
        - Postponed
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobExecutionStatus
    JobHistoryDefinition:
      properties:
        id:
          description: Gets the job history identifier.
          readOnly: true
          type: string
        name:
          description: Gets the job history name.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/JobHistoryDefinitionProperties'
          description: Gets or sets the job history properties.
          readOnly: true
        type:
          description: Gets the job history resource type.
          readOnly: true
          type: string
      type: object
    JobHistoryDefinitionProperties:
      properties:
        actionName:
          description: Gets the job history action name.
          enum:
            - MainAction
            - ErrorAction
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobHistoryActionName
        endTime:
          description: Gets the end time for this job.
          format: date-time
          readOnly: true
          type: string
        expectedExecutionTime:
          description: Gets the expected execution time for this job.
          format: date-time
          readOnly: true
          type: string
        message:
          description: Gets the message for the job history.
          readOnly: true
          type: string
        repeatCount:
          description: Gets the repeat count for the job.
          readOnly: true
          type: integer
        retryCount:
          description: Gets the retry count for job.
          readOnly: true
          type: integer
        startTime:
          description: Gets the start time for this job.
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: Gets the job history status.
          readOnly: true
      type: object
    JobHistoryFilter:
      properties:
        status:
          $ref: '#/components/schemas/JobExecutionStatus'
          description: Gets or sets the job execution status.
      type: object
    JobHistoryListResult:
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of job histories.
          type: string
        value:
          description: Gets or sets the job histories under job.
          items:
            $ref: '#/components/schemas/JobHistoryDefinition'
          type: array
      type: object
    JobListResult:
      properties:
        nextLink:
          description: Gets or sets the URL to get the next set of jobs.
          type: string
        value:
          description: Gets or sets all jobs under job collection.
          items:
            $ref: '#/components/schemas/JobDefinition'
          type: array
      type: object
    JobMaxRecurrence:
      properties:
        frequency:
          description: >-
            Gets or sets the frequency of recurrence (second, minute, hour, day,
            week, month).
          enum:
            - Minute
            - Hour
            - Day
            - Week
            - Month
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecurrenceFrequency
        interval:
          description: Gets or sets the interval between retries.
          type: integer
      type: object
    JobProperties:
      properties:
        action:
          $ref: '#/components/schemas/JobAction'
          description: Gets or sets the job action.
        recurrence:
          $ref: '#/components/schemas/JobRecurrence'
          description: Gets or sets the job recurrence.
        startTime:
          description: Gets or sets the job start time.
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/JobState'
          description: Gets or set the job state.
        status:
          $ref: '#/components/schemas/JobStatus'
          description: Gets the job status.
          readOnly: true
      type: object
    JobRecurrence:
      properties:
        count:
          description: Gets or sets the maximum number of times that the job should run.
          type: integer
        endTime:
          description: Gets or sets the time at which the job will complete.
          format: date-time
          type: string
        frequency:
          description: >-
            Gets or sets the frequency of recurrence (second, minute, hour, day,
            week, month).
          enum:
            - Minute
            - Hour
            - Day
            - Week
            - Month
          type: string
          x-ms-enum:
            modelAsString: false
            name: RecurrenceFrequency
        interval:
          description: Gets or sets the interval between retries.
          type: integer
        schedule:
          $ref: '#/components/schemas/JobRecurrenceSchedule'
      type: object
    JobRecurrenceSchedule:
      properties:
        hours:
          description: Gets or sets the hours of the day that the job should execute at.
          items:
            type: integer
          type: array
        minutes:
          description: Gets or sets the minutes of the hour that the job should execute at.
          items:
            type: integer
          type: array
        monthDays:
          description: >-
            Gets or sets the days of the month that the job should execute on.
            Must be between 1 and 31.
          items:
            type: integer
          type: array
        monthlyOccurrences:
          description: Gets or sets the occurrences of days within a month.
          items:
            $ref: '#/components/schemas/JobRecurrenceScheduleMonthlyOccurrence'
          type: array
        weekDays:
          description: Gets or sets the days of the week that the job should execute on.
          items:
            enum:
              - Sunday
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
            type: string
            x-ms-enum:
              modelAsString: false
              name: DayOfWeek
          type: array
      type: object
    JobRecurrenceScheduleMonthlyOccurrence:
      properties:
        Occurrence:
          description: Gets or sets the occurrence. Must be between -5 and 5.
          type: integer
        day:
          description: >-
            Gets or sets the day. Must be one of monday, tuesday, wednesday,
            thursday, friday, saturday, sunday.
          enum:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobScheduleDay
      type: object
    JobState:
      description: Gets or set the job state.
      enum:
        - Enabled
        - Disabled
        - Faulted
        - Completed
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobState
    JobStateFilter:
      properties:
        state:
          $ref: '#/components/schemas/JobState'
          description: Gets or sets the job state.
      type: object
    JobStatus:
      properties:
        executionCount:
          description: Gets the number of times this job has executed.
          readOnly: true
          type: integer
        failureCount:
          description: Gets the number of times this job has failed.
          readOnly: true
          type: integer
        faultedCount:
          description: >-
            Gets the number of faulted occurrences (occurrences that were
            retried and failed as many times as the retry policy states).
          readOnly: true
          type: integer
        lastExecutionTime:
          description: >-
            Gets the time the last occurrence executed in ISO-8601 format. 
            Could be empty if job has not run yet.
          format: date-time
          readOnly: true
          type: string
        nextExecutionTime:
          description: >-
            Gets the time of the next occurrence in ISO-8601 format. Could be
            empty if the job is completed.
          format: date-time
          readOnly: true
          type: string
      type: object
    OAuthAuthentication:
      allOf:
        - $ref: '#/components/schemas/HttpAuthentication'
      properties:
        audience:
          description: Gets or sets the audience.
          type: string
        clientId:
          description: Gets or sets the client identifier.
          type: string
        secret:
          description: 'Gets or sets the secret, return value will always be empty.'
          type: string
        tenant:
          description: Gets or sets the tenant.
          type: string
      type: object
      x-ms-discriminator-value: ActiveDirectoryOAuth
    RecurrenceFrequency:
      description: >-
        Gets or sets the frequency of recurrence (minute, hour, day, week,
        month).
      enum:
        - Minute
        - Hour
        - Day
        - Week
        - Month
      type: string
      x-ms-enum:
        modelAsString: false
        name: RecurrenceFrequency
    RetryPolicy:
      properties:
        retryCount:
          description: Gets or sets the number of times a retry should be attempted.
          type: integer
        retryInterval:
          description: >-
            Gets or sets the retry interval between retries, specify duration in
            ISO 8601 format.
          format: duration
          type: string
        retryType:
          description: Gets or sets the retry strategy to be used.
          enum:
            - None
            - Fixed
          type: string
          x-ms-enum:
            modelAsString: false
            name: RetryType
      type: object
    ServiceBusAuthentication:
      properties:
        sasKey:
          description: Gets or sets the SAS key.
          type: string
        sasKeyName:
          description: Gets or sets the SAS key name.
          type: string
        type:
          description: Gets or sets the authentication type.
          enum:
            - NotSpecified
            - SharedAccessKey
          type: string
          x-ms-enum:
            modelAsString: false
            name: ServiceBusAuthenticationType
      type: object
    ServiceBusBrokeredMessageProperties:
      properties:
        contentType:
          description: Gets or sets the content type.
          type: string
        correlationId:
          description: Gets or sets the correlation ID.
          type: string
        forcePersistence:
          description: Gets or sets the force persistence.
          type: boolean
        label:
          description: Gets or sets the label.
          type: string
        messageId:
          description: Gets or sets the message ID.
          type: string
        partitionKey:
          description: Gets or sets the partition key.
          type: string
        replyTo:
          description: Gets or sets the reply to.
          type: string
        replyToSessionId:
          description: Gets or sets the reply to session ID.
          type: string
        scheduledEnqueueTimeUtc:
          description: Gets or sets the scheduled enqueue time UTC.
          format: date-time
          type: string
        sessionId:
          description: Gets or sets the session ID.
          type: string
        timeToLive:
          description: Gets or sets the time to live.
          format: duration
          type: string
        to:
          description: Gets or sets the to.
          type: string
        viaPartitionKey:
          description: Gets or sets the via partition key.
          type: string
      type: object
    ServiceBusMessage:
      properties:
        authentication:
          $ref: '#/components/schemas/ServiceBusAuthentication'
          description: Gets or sets the Service Bus authentication.
        brokeredMessageProperties:
          $ref: '#/components/schemas/ServiceBusBrokeredMessageProperties'
          description: Gets or sets the brokered message properties.
        customMessageProperties:
          additionalProperties:
            type: string
          description: Gets or sets the custom message properties.
          type: object
        message:
          description: Gets or sets the message.
          type: string
        namespace:
          description: Gets or sets the namespace.
          type: string
        transportType:
          description: Gets or sets the transport type.
          enum:
            - NotSpecified
            - NetMessaging
            - AMQP
          type: string
          x-ms-enum:
            modelAsString: false
            name: ServiceBusTransportType
      type: object
    ServiceBusQueueMessage:
      allOf:
        - $ref: '#/components/schemas/ServiceBusMessage'
      properties:
        queueName:
          description: Gets or sets the queue name.
          type: string
      type: object
    ServiceBusTopicMessage:
      allOf:
        - $ref: '#/components/schemas/ServiceBusMessage'
      properties:
        topicPath:
          description: Gets or sets the topic path.
          type: string
      type: object
    Sku:
      properties:
        name:
          description: Gets or set the SKU.
          enum:
            - Standard
            - Free
            - P10Premium
            - P20Premium
          type: string
          x-ms-enum:
            modelAsString: false
            name: SkuDefinition
      type: object
    StorageQueueMessage:
      properties:
        message:
          description: Gets or sets the message.
          type: string
        queueName:
          description: Gets or sets the queue name.
          type: string
        sasToken:
          description: Gets or sets the SAS key.
          type: string
        storageAccount:
          description: Gets or sets the storage account name.
          type: string
      type: object

