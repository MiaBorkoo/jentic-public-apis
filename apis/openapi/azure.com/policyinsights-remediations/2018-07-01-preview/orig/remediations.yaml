openapi: 3.0.0
info:
  title: RemediationsClient
  version: 2018-07-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations':
    get:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/filterParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationListResult'
          description: The retrieved remediations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all remediations for the management group.
      operationId: Remediations_ListForManagementGroup
      x-ms-examples:
        List remediations at management group scope:
          $ref: ./examples/Remediations_ListManagementGroupScope.json
        List remediations at management group scope with query parameters:
          $ref: ./examples/Remediations_ListManagementGroupScope_WithQuery.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The deleted remediation.
        '204':
          description: The remediation did not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Deletes an existing remediation at management group scope.
      operationId: Remediations_DeleteAtManagementGroup
      x-ms-examples:
        Delete remediation at management group scope:
          $ref: ./examples/Remediations_DeleteManagementGroupScope.json
    get:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The retrieved remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets an existing remediation at management group scope.
      operationId: Remediations_GetAtManagementGroup
      x-ms-examples:
        Get remediation at management group scope:
          $ref: ./examples/Remediations_GetManagementGroupScope.json
    put:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The updated remediation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The created remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Creates or updates a remediation at management group scope.
      operationId: Remediations_CreateOrUpdateAtManagementGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remediation'
        description: The remediation parameters.
        required: true
      x-ms-examples:
        Create remediation at management group scope:
          $ref: ./examples/Remediations_CreateManagementGroupScope.json
  '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The remediation that was canceled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Cancels a remediation at management group scope.
      operationId: Remediations_CancelAtManagementGroup
      x-ms-examples:
        Cancel a remediation at management group scope:
          $ref: ./examples/Remediations_CancelManagementGroupScope.json
  '/providers/{managementGroupsNamespace}/managementGroups/{managementGroupId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments':
    post:
      parameters:
        - $ref: '#/components/parameters/managementGroupsNamespaceParameter'
        - $ref: '#/components/parameters/managementGroupIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationDeploymentsListResult'
          description: The retrieved remediation deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all deployments for a remediation at management group scope.
      operationId: Remediations_ListDeploymentsAtManagementGroup
      x-ms-examples:
        List deployments for a remediation at management group scope:
          $ref: ./examples/Remediations_ListDeploymentsManagementGroupScope.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/filterParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationListResult'
          description: The retrieved remediations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all remediations for the subscription.
      operationId: Remediations_ListForSubscription
      x-ms-examples:
        List remediations at subscription scope:
          $ref: ./examples/Remediations_ListSubscriptionScope.json
        List remediations at subscription scope with query parameters:
          $ref: ./examples/Remediations_ListSubscriptionScope_WithQuery.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The deleted remediation.
        '204':
          description: The remediation did not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Deletes an existing remediation at subscription scope.
      operationId: Remediations_DeleteAtSubscription
      x-ms-examples:
        Delete remediation at subscription scope:
          $ref: ./examples/Remediations_DeleteSubscriptionScope.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The retrieved remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets an existing remediation at subscription scope.
      operationId: Remediations_GetAtSubscription
      x-ms-examples:
        Get remediation at subscription scope:
          $ref: ./examples/Remediations_GetSubscriptionScope.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The updated remediation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The created remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Creates or updates a remediation at subscription scope.
      operationId: Remediations_CreateOrUpdateAtSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remediation'
        description: The remediation parameters.
        required: true
      x-ms-examples:
        Create remediation at subscription scope:
          $ref: ./examples/Remediations_CreateSubscriptionScope.json
        Create remediation at subscription scope with all properties:
          $ref: ./examples/Remediations_CreateSubscriptionScope_AllProperties.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The remediation that was canceled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Cancels a remediation at subscription scope.
      operationId: Remediations_CancelAtSubscription
      x-ms-examples:
        Cancel a remediation at subscription scope:
          $ref: ./examples/Remediations_CancelSubscriptionScope.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationDeploymentsListResult'
          description: The retrieved remediation deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all deployments for a remediation at subscription scope.
      operationId: Remediations_ListDeploymentsAtSubscription
      x-ms-examples:
        List deployments for a remediation at subscription scope:
          $ref: ./examples/Remediations_ListDeploymentsSubscriptionScope.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations':
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/filterParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationListResult'
          description: The retrieved remediations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all remediations for the subscription.
      operationId: Remediations_ListForResourceGroup
      x-ms-examples:
        List remediations at resource group scope:
          $ref: ./examples/Remediations_ListResourceGroupScope.json
        List remediations at resource group scope with query parameters:
          $ref: ./examples/Remediations_ListResourceGroupScope_WithQuery.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The deleted remediation.
        '204':
          description: The remediation did not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Deletes an existing remediation at resource group scope.
      operationId: Remediations_DeleteAtResourceGroup
      x-ms-examples:
        Delete remediation at resource group scope:
          $ref: ./examples/Remediations_DeleteResourceGroupScope.json
    get:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The retrieved remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets an existing remediation at resource group scope.
      operationId: Remediations_GetAtResourceGroup
      x-ms-examples:
        Get remediation at resource group scope:
          $ref: ./examples/Remediations_GetResourceGroupScope.json
    put:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The updated remediation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The created remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Creates or updates a remediation at resource group scope.
      operationId: Remediations_CreateOrUpdateAtResourceGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remediation'
        description: The remediation parameters.
        required: true
      x-ms-examples:
        Create remediation at resource group scope:
          $ref: ./examples/Remediations_CreateResourceGroupScope.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The remediation that was canceled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Cancels a remediation at resource group scope.
      operationId: Remediations_CancelAtResourceGroup
      x-ms-examples:
        Cancel a remediation at resource group scope:
          $ref: ./examples/Remediations_CancelResourceGroupScope.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments':
    post:
      parameters:
        - $ref: '#/components/parameters/subscriptionIdParameter'
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationDeploymentsListResult'
          description: The retrieved remediation deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all deployments for a remediation at resource group scope.
      operationId: Remediations_ListDeploymentsAtResourceGroup
      x-ms-examples:
        List deployments for a remediation at resource group scope:
          $ref: ./examples/Remediations_ListDeploymentsResourceGroupScope.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/{resourceId}/providers/Microsoft.PolicyInsights/remediations':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/filterParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationListResult'
          description: The retrieved remediations.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all remediations for a resource.
      operationId: Remediations_ListForResource
      x-ms-examples:
        List remediations at individual resource scope:
          $ref: ./examples/Remediations_ListResourceScope.json
        List remediations at individual resource scope with query parameters:
          $ref: ./examples/Remediations_ListResourceScope_WithQuery.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The deleted remediation.
        '204':
          description: The remediation did not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Deletes an existing remediation at individual resource scope.
      operationId: Remediations_DeleteAtResource
      x-ms-examples:
        Delete remediation at individual resource scope:
          $ref: ./examples/Remediations_DeleteResourceScope.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The retrieved remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets an existing remediation at resource scope.
      operationId: Remediations_GetAtResource
      x-ms-examples:
        Get remediation at individual resource scope:
          $ref: ./examples/Remediations_GetResourceScope.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The updated remediation.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The created remediation.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Creates or updates a remediation at resource scope.
      operationId: Remediations_CreateOrUpdateAtResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Remediation'
        description: The remediation parameters.
        required: true
      x-ms-examples:
        Create remediation at individual resource scope:
          $ref: ./examples/Remediations_CreateResourceScope.json
  '/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/cancel':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Remediation'
          description: The remediation that was canceled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Cancel a remediation at resource scope.
      operationId: Remediations_CancelAtResource
      x-ms-examples:
        Cancel a remediation at individual resource scope:
          $ref: ./examples/Remediations_CancelResourceScope.json
  '/{resourceId}/providers/Microsoft.PolicyInsights/remediations/{remediationName}/listDeployments':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceIdParameter'
        - $ref: '#/components/parameters/remediationNameParameter'
        - $ref: '#/components/parameters/topParameter'
        - $ref: '#/components/parameters/apiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationDeploymentsListResult'
          description: The retrieved remediation deployments.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response describing why the operation failed.
      description: Gets all deployments for a remediation at resource scope.
      operationId: Remediations_ListDeploymentsAtResource
      x-ms-examples:
        List deployments for a remediation at individual resource scope:
          $ref: ./examples/Remediations_ListDeploymentsResourceScope.json
      x-ms-pageable:
        nextLinkName: nextLink
components:
  parameters:
    apiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      x-ms-parameter-location: client
    filterParameter:
      description: OData filter expression.
      in: query
      name: $filter
      required: false
      schema:
        type: string
      x-ms-client-name: Filter
      x-ms-parameter-grouping:
        name: QueryOptions
      x-ms-parameter-location: method
    managementGroupIdParameter:
      description: Management group ID.
      in: path
      name: managementGroupId
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    managementGroupsNamespaceParameter:
      description: >-
        The namespace for Microsoft Management RP; only "Microsoft.Management"
        is allowed.
      in: path
      name: managementGroupsNamespace
      required: true
      schema:
        enum:
          - Microsoft.Management
        type: string
      x-ms-enum:
        modelAsString: false
        name: ManagementGroupsNamespaceType
      x-ms-parameter-location: method
    remediationNameParameter:
      description: The name of the remediation.
      in: path
      name: remediationName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: Resource group name.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    resourceIdParameter:
      allowReserved: true
      description: Resource ID.
      in: path
      name: resourceId
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    subscriptionIdParameter:
      description: Microsoft Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    topParameter:
      description: Maximum number of records to return.
      in: query
      name: $top
      required: false
      schema:
        format: int32
        minimum: 0
        type: integer
      x-ms-client-name: Top
      x-ms-parameter-grouping:
        name: QueryOptions
      x-ms-parameter-location: method
  requestBodies:
    Remediation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Remediation'
      description: The remediation parameters.
      required: true
  schemas:
    ErrorDefinition:
      description: Error definition.
      properties:
        additionalInfo:
          description: Additional scenario specific error details.
          items:
            $ref: '#/components/schemas/TypedErrorInfo'
          readOnly: true
          type: array
        code:
          description: >-
            Service specific error code which serves as the substatus for the
            HTTP error code.
          readOnly: true
          type: string
        details:
          description: Internal error details.
          items:
            $ref: '#/components/schemas/ErrorDefinition'
          readOnly: true
          type: array
        message:
          description: Description of the error.
          readOnly: true
          type: string
        target:
          description: The target of the error.
          readOnly: true
          type: string
      type: object
    ErrorResponse:
      description: Error response.
      properties:
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: The error details.
      type: object
    Remediation:
      description: The remediation definition.
      properties:
        id:
          description: The ID of the remediation.
          readOnly: true
          type: string
        name:
          description: The name of the remediation.
          readOnly: true
          type: string
        properties:
          $ref: '#/components/schemas/RemediationProperties'
          description: Properties for the remediation.
          x-ms-client-flatten: true
        type:
          description: The type of the remediation.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    RemediationDeployment:
      description: Details of a single deployment created by the remediation.
      properties:
        createdOn:
          description: The time at which the remediation was created.
          format: date-time
          readOnly: true
          type: string
        deploymentId:
          description: >-
            Resource ID of the template deployment that will remediate the
            resource.
          readOnly: true
          type: string
        error:
          $ref: '#/components/schemas/ErrorDefinition'
          description: Error encountered while remediated the resource.
          readOnly: true
        lastUpdatedOn:
          description: The time at which the remediation deployment was last updated.
          format: date-time
          readOnly: true
          type: string
        remediatedResourceId:
          description: >-
            Resource ID of the resource that is being remediated by the
            deployment.
          readOnly: true
          type: string
        resourceLocation:
          description: Location of the resource that is being remediated.
          readOnly: true
          type: string
        status:
          description: Status of the remediation deployment.
          readOnly: true
          type: string
      type: object
    RemediationDeploymentSummary:
      description: >-
        The deployment status summary for all deployments created by the
        remediation.
      properties:
        failedDeployments:
          description: >-
            The number of deployments required by the remediation that have
            failed.
          type: integer
        successfulDeployments:
          description: >-
            The number of deployments required by the remediation that have
            succeeded.
          type: integer
        totalDeployments:
          description: The number of deployments required by the remediation.
          type: integer
      type: object
    RemediationDeploymentsListResult:
      description: List of deployments for a remediation.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          readOnly: true
          type: string
        value:
          description: Array of deployments for the remediation.
          items:
            $ref: '#/components/schemas/RemediationDeployment'
          readOnly: true
          type: array
      type: object
    RemediationFilters:
      description: >-
        The filters that will be applied to determine which resources to
        remediate.
      properties:
        locations:
          description: The resource locations that will be remediated.
          items:
            type: string
          type: array
      type: object
    RemediationListResult:
      description: List of remediations.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          readOnly: true
          type: string
        value:
          description: Array of remediation definitions.
          items:
            $ref: '#/components/schemas/Remediation'
          readOnly: true
          type: array
      type: object
    RemediationProperties:
      description: The remediation properties.
      properties:
        createdOn:
          description: The time at which the remediation was created.
          format: date-time
          readOnly: true
          type: string
        deploymentStatus:
          $ref: '#/components/schemas/RemediationDeploymentSummary'
          description: >-
            The deployment status summary for all deployments created by the
            remediation.
        filters:
          $ref: '#/components/schemas/RemediationFilters'
          description: >-
            The filters that will be applied to determine which resources to
            remediate.
        lastUpdatedOn:
          description: The time at which the remediation was last updated.
          format: date-time
          readOnly: true
          type: string
        policyAssignmentId:
          description: The resource ID of the policy assignment that should be remediated.
          type: string
        policyDefinitionReferenceId:
          description: >-
            The policy definition reference ID of the individual definition that
            should be remediated. Required when the policy assignment being
            remediated assigns a policy set definition.
          type: string
        provisioningState:
          description: The status of the remediation.
          readOnly: true
          type: string
      type: object
    TypedErrorInfo:
      description: Scenario specific error details.
      properties:
        info:
          description: The scenario specific error details.
          readOnly: true
        type:
          description: The type of included error details.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

