{
  "openapi": "3.0.0",
  "info": {
    "description": "REST API for Azure Logic Apps.",
    "title": "LogicManagementClient",
    "version": "2018-07-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/logic/resource-manager/Microsoft.Logic/preview/2018-07-01-preview/logic.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Logic/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Logic error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Logic REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List Microsoft.Logic operations": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/integrationAccounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets a list of integration accounts by subscription.",
        "operationId": "IntegrationAccounts_ListBySubscription",
        "x-ms-examples": {
          "List integration accounts by subscription": {
            "$ref": "./examples/IntegrationAccounts_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by subscription.",
        "operationId": "Workflows_ListBySubscription",
        "x-ms-examples": {
          "List all workflows in a subscription": {
            "$ref": "./examples/Workflows_ListBySubscription.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets a list of integration accounts by resource group.",
        "operationId": "IntegrationAccounts_ListByResourceGroup",
        "x-ms-examples": {
          "List integration accounts by resource group name": {
            "$ref": "./examples/IntegrationAccounts_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Deletes an integration account.",
        "operationId": "IntegrationAccounts_Delete",
        "x-ms-examples": {
          "Delete an integration account": {
            "$ref": "./examples/IntegrationAccounts_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccount"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets an integration account.",
        "operationId": "IntegrationAccounts_Get",
        "x-ms-examples": {
          "Get integration account by name": {
            "$ref": "./examples/IntegrationAccounts_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccount"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Updates an integration account.",
        "operationId": "IntegrationAccounts_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccount"
              }
            }
          },
          "description": "The integration account.",
          "required": true
        },
        "x-ms-examples": {
          "Patch an integration account": {
            "$ref": "./examples/IntegrationAccounts_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccount"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccount"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Creates or updates an integration account.",
        "operationId": "IntegrationAccounts_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccount"
              }
            }
          },
          "description": "The integration account.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update an integration account": {
            "$ref": "./examples/IntegrationAccounts_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: AgreementType.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountAgreementListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Gets a list of integration account agreements.",
        "operationId": "IntegrationAccountAgreements_List",
        "x-ms-examples": {
          "Get agreements by integration account name": {
            "$ref": "./examples/IntegrationAccountAgreements_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IntegrationAccountAgreementFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account agreement name.",
            "in": "path",
            "name": "agreementName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Deletes an integration account agreement.",
        "operationId": "IntegrationAccountAgreements_Delete",
        "x-ms-examples": {
          "Delete an agreement": {
            "$ref": "./examples/IntegrationAccountAgreements_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account agreement name.",
            "in": "path",
            "name": "agreementName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Gets an integration account agreement.",
        "operationId": "IntegrationAccountAgreements_Get",
        "x-ms-examples": {
          "Get agreement by name": {
            "$ref": "./examples/IntegrationAccountAgreements_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account agreement name.",
            "in": "path",
            "name": "agreementName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountAgreement"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Creates or updates an integration account agreement.",
        "operationId": "IntegrationAccountAgreements_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountAgreement"
              }
            }
          },
          "description": "The integration account agreement.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update an agreement": {
            "$ref": "./examples/IntegrationAccountAgreements_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/agreements/{agreementName}/listContentCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account agreement name.",
            "in": "path",
            "name": "agreementName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAgreements"
        ],
        "description": "Get the content callback url.",
        "operationId": "IntegrationAccountAgreements_ListContentCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountAgreements_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssemblyCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAssemblies"
        ],
        "description": "List the assemblies for an integration account.",
        "operationId": "IntegrationAccountAssemblies_List",
        "x-ms-examples": {
          "List integration account assemblies": {
            "$ref": "./examples/IntegrationAccountAssemblies_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The assembly artifact name.",
            "in": "path",
            "name": "assemblyArtifactName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountAssemblies"
        ],
        "description": "Delete an assembly for an integration account.",
        "operationId": "IntegrationAccountAssemblies_Delete",
        "x-ms-examples": {
          "Delete an integration account assembly": {
            "$ref": "./examples/IntegrationAccountAssemblies_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The assembly artifact name.",
            "in": "path",
            "name": "assemblyArtifactName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssemblyDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAssemblies"
        ],
        "description": "Get an assembly for an integration account.",
        "operationId": "IntegrationAccountAssemblies_Get",
        "x-ms-examples": {
          "Get an integration account assembly": {
            "$ref": "./examples/IntegrationAccountAssemblies_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The assembly artifact name.",
            "in": "path",
            "name": "assemblyArtifactName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssemblyDefinition"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssemblyDefinition"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountAssemblies"
        ],
        "description": "Create or update an assembly for an integration account.",
        "operationId": "IntegrationAccountAssemblies_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssemblyDefinition"
              }
            }
          },
          "description": "The assembly artifact.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update an account assembly": {
            "$ref": "./examples/IntegrationAccountAssemblies_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/assemblies/{assemblyArtifactName}/listContentCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The assembly artifact name.",
            "in": "path",
            "name": "assemblyArtifactName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountAssemblies"
        ],
        "description": "Get the content callback url for an integration account assembly.",
        "operationId": "IntegrationAccountAssemblies_ListContentCallbackUrl",
        "x-ms-examples": {
          "Get the callback url for an integration account assembly": {
            "$ref": "./examples/IntegrationAccountAssemblies_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchConfigurationCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountBatchConfigurations"
        ],
        "description": "List the batch configurations for an integration account.",
        "operationId": "IntegrationAccountBatchConfigurations_List",
        "x-ms-examples": {
          "List batch configurations": {
            "$ref": "./examples/IntegrationAccountBatchConfigurations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/batchConfigurations/{batchConfigurationName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The batch configuration name.",
            "in": "path",
            "name": "batchConfigurationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountBatchConfigurations"
        ],
        "description": "Delete a batch configuration for an integration account.",
        "operationId": "IntegrationAccountBatchConfigurations_Delete",
        "x-ms-examples": {
          "Delete a batch configuration": {
            "$ref": "./examples/IntegrationAccountBatchConfigurations_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The batch configuration name.",
            "in": "path",
            "name": "batchConfigurationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchConfiguration"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountBatchConfigurations"
        ],
        "description": "Get a batch configuration for an integration account.",
        "operationId": "IntegrationAccountBatchConfigurations_Get",
        "x-ms-examples": {
          "Get a batch configuration": {
            "$ref": "./examples/IntegrationAccountBatchConfigurations_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The batch configuration name.",
            "in": "path",
            "name": "batchConfigurationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchConfiguration"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchConfiguration"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountBatchConfigurations"
        ],
        "description": "Create or update a batch configuration for an integration account.",
        "operationId": "IntegrationAccountBatchConfigurations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchConfiguration"
              }
            }
          },
          "description": "The batch configuration.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a batch configuration": {
            "$ref": "./examples/IntegrationAccountBatchConfigurations_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountCertificateListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Gets a list of integration account certificates.",
        "operationId": "IntegrationAccountCertificates_List",
        "x-ms-examples": {
          "Get certificates by integration account name": {
            "$ref": "./examples/IntegrationAccountCertificates_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/certificates/{certificateName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account certificate name.",
            "in": "path",
            "name": "certificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Deletes an integration account certificate.",
        "operationId": "IntegrationAccountCertificates_Delete",
        "x-ms-examples": {
          "Delete a certificate": {
            "$ref": "./examples/IntegrationAccountCertificates_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account certificate name.",
            "in": "path",
            "name": "certificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Gets an integration account certificate.",
        "operationId": "IntegrationAccountCertificates_Get",
        "x-ms-examples": {
          "Get certificate by name": {
            "$ref": "./examples/IntegrationAccountCertificates_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account certificate name.",
            "in": "path",
            "name": "certificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountCertificate"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountCertificates"
        ],
        "description": "Creates or updates an integration account certificate.",
        "operationId": "IntegrationAccountCertificates_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountCertificate"
              }
            }
          },
          "description": "The integration account certificate.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a certificate": {
            "$ref": "./examples/IntegrationAccountCertificates_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets the integration account callback URL.",
        "operationId": "IntegrationAccounts_ListCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "description": "The callback URL parameters.",
          "required": true
        },
        "x-ms-examples": {
          "List IntegrationAccount callback URL": {
            "$ref": "./examples/IntegrationAccounts_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/listKeyVaultKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyVaultKeyCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Gets the integration account's Key Vault keys.",
        "operationId": "IntegrationAccounts_ListKeyVaultKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListKeyVaultKeysDefinition"
              }
            }
          },
          "description": "The key vault parameters.",
          "required": true
        },
        "x-ms-examples": {
          "Get Integration Account callback URL": {
            "$ref": "./examples/IntegrationAccounts_ListKeyVaultKeys.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/logTrackingEvents": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Logs the integration account's tracking events.",
        "operationId": "IntegrationAccounts_LogTrackingEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrackingEventsDefinition"
              }
            }
          },
          "description": "The callback URL parameters.",
          "required": true
        },
        "x-ms-examples": {
          "Log a tracked event": {
            "$ref": "./examples/IntegrationAccounts_LogTrackingEvents.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: MapType.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountMapListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Gets a list of integration account maps.",
        "operationId": "IntegrationAccountMaps_List",
        "x-ms-examples": {
          "Get maps by integration account name": {
            "$ref": "./examples/IntegrationAccountMaps_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IntegrationAccountMapFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account map name.",
            "in": "path",
            "name": "mapName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Deletes an integration account map.",
        "operationId": "IntegrationAccountMaps_Delete",
        "x-ms-examples": {
          "Delete a map": {
            "$ref": "./examples/IntegrationAccountMaps_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account map name.",
            "in": "path",
            "name": "mapName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountMap"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Gets an integration account map.",
        "operationId": "IntegrationAccountMaps_Get",
        "x-ms-examples": {
          "Get map by name": {
            "$ref": "./examples/IntegrationAccountMaps_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account map name.",
            "in": "path",
            "name": "mapName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountMap"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountMap"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Creates or updates an integration account map.",
        "operationId": "IntegrationAccountMaps_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountMap"
              }
            }
          },
          "description": "The integration account map.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a map": {
            "$ref": "./examples/IntegrationAccountMaps_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/maps/{mapName}/listContentCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account map name.",
            "in": "path",
            "name": "mapName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountMaps"
        ],
        "description": "Get the content callback url.",
        "operationId": "IntegrationAccountMaps_ListContentCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountMaps_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: PartnerType.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountPartnerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Gets a list of integration account partners.",
        "operationId": "IntegrationAccountPartners_List",
        "x-ms-examples": {
          "Get partners by integration account name": {
            "$ref": "./examples/IntegrationAccountPartners_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IntegrationAccountPartnerFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account partner name.",
            "in": "path",
            "name": "partnerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Deletes an integration account partner.",
        "operationId": "IntegrationAccountPartners_Delete",
        "x-ms-examples": {
          "Delete a partner": {
            "$ref": "./examples/IntegrationAccountPartners_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account partner name.",
            "in": "path",
            "name": "partnerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountPartner"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Gets an integration account partner.",
        "operationId": "IntegrationAccountPartners_Get",
        "x-ms-examples": {
          "Get partner by name": {
            "$ref": "./examples/IntegrationAccountPartners_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account partner name.",
            "in": "path",
            "name": "partnerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountPartner"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountPartner"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Creates or updates an integration account partner.",
        "operationId": "IntegrationAccountPartners_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountPartner"
              }
            }
          },
          "description": "The integration account partner.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a partner": {
            "$ref": "./examples/IntegrationAccountPartners_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/partners/{partnerName}/listContentCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account partner name.",
            "in": "path",
            "name": "partnerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountPartners"
        ],
        "description": "Get the content callback url.",
        "operationId": "IntegrationAccountPartners_ListContentCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountPartners_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/regenerateAccessKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccount"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccounts"
        ],
        "description": "Regenerates the integration account access key.",
        "operationId": "IntegrationAccounts_RegenerateAccessKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateActionParameter"
              }
            }
          },
          "description": "The access key type.",
          "required": true
        },
        "x-ms-examples": {
          "Regenerate access key": {
            "$ref": "./examples/IntegrationAccounts_RegenerateAccessKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: SchemaType.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSchemaListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Gets a list of integration account schemas.",
        "operationId": "IntegrationAccountSchemas_List",
        "x-ms-examples": {
          "Get schemas by integration account name": {
            "$ref": "./examples/IntegrationAccountSchemas_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IntegrationAccountSchemaFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account schema name.",
            "in": "path",
            "name": "schemaName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Deletes an integration account schema.",
        "operationId": "IntegrationAccountSchemas_Delete",
        "x-ms-examples": {
          "Delete a schema by name": {
            "$ref": "./examples/IntegrationAccountSchemas_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account schema name.",
            "in": "path",
            "name": "schemaName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Gets an integration account schema.",
        "operationId": "IntegrationAccountSchemas_Get",
        "x-ms-examples": {
          "Get schema by name": {
            "$ref": "./examples/IntegrationAccountSchemas_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account schema name.",
            "in": "path",
            "name": "schemaName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSchema"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSchema"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Creates or updates an integration account schema.",
        "operationId": "IntegrationAccountSchemas_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountSchema"
              }
            }
          },
          "description": "The integration account schema.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update schema": {
            "$ref": "./examples/IntegrationAccountSchemas_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/schemas/{schemaName}/listContentCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account schema name.",
            "in": "path",
            "name": "schemaName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountSchemas"
        ],
        "description": "Get the content callback url.",
        "operationId": "IntegrationAccountSchemas_ListContentCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "required": true
        },
        "x-ms-examples": {
          "Get the content callback url": {
            "$ref": "./examples/IntegrationAccountSchemas_ListContentCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: ChangedTime.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSessionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Gets a list of integration account sessions.",
        "operationId": "IntegrationAccountSessions_List",
        "x-ms-examples": {
          "Get a list of integration account sessions": {
            "$ref": "./examples/IntegrationAccountSessions_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IntegrationAccountSessionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/integrationAccounts/{integrationAccountName}/sessions/{sessionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account session name.",
            "in": "path",
            "name": "sessionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Deletes an integration account session.",
        "operationId": "IntegrationAccountSessions_Delete",
        "x-ms-examples": {
          "Delete an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account session name.",
            "in": "path",
            "name": "sessionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSession"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Gets an integration account session.",
        "operationId": "IntegrationAccountSessions_Get",
        "x-ms-examples": {
          "Get an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account name.",
            "in": "path",
            "name": "integrationAccountName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The integration account session name.",
            "in": "path",
            "name": "sessionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSession"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationAccountSession"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "IntegrationAccountSessions"
        ],
        "description": "Creates or updates an integration account session.",
        "operationId": "IntegrationAccountSessions_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationAccountSession"
              }
            }
          },
          "description": "The integration account session.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update an integration account session": {
            "$ref": "./examples/IntegrationAccountSessions_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/locations/{location}/workflows/{workflowName}/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow location.",
            "in": "path",
            "name": "location",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Validates the workflow definition.",
        "operationId": "Workflows_ValidateByLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow definition.",
          "required": true
        },
        "x-ms-examples": {
          "Validate a workflow": {
            "$ref": "./examples/Workflows_ValidateByLocation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: State, Trigger, and ReferencedResourceId.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by resource group.",
        "operationId": "Workflows_ListByResourceGroup",
        "x-ms-examples": {
          "List all workflows in a resource group": {
            "$ref": "./examples/Workflows_ListByResourceGroup.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Deletes a workflow.",
        "operationId": "Workflows_Delete",
        "x-ms-examples": {
          "Delete a workflow": {
            "$ref": "./examples/Workflows_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a workflow.",
        "operationId": "Workflows_Get",
        "x-ms-examples": {
          "Get a workflow": {
            "$ref": "./examples/Workflows_Get.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Updates a workflow.",
        "operationId": "Workflows_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        },
        "x-ms-examples": {
          "Patch a workflow": {
            "$ref": "./examples/Workflows_Update.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Creates or updates a workflow.",
        "operationId": "Workflows_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        },
        "x-ms-examples": {
          "Create or update a workflow": {
            "$ref": "./examples/Workflows_CreateOrUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Disables a workflow.",
        "operationId": "Workflows_Disable",
        "x-ms-examples": {
          "Disable a workflow": {
            "$ref": "./examples/Workflows_Disable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Enables a workflow.",
        "operationId": "Workflows_Enable",
        "x-ms-examples": {
          "Enable a workflow": {
            "$ref": "./examples/Workflows_Enable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/generateUpgradedDefinition": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Generates the upgraded definition for a workflow.",
        "operationId": "Workflows_GenerateUpgradedDefinition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateUpgradedDefinitionParameters"
              }
            }
          },
          "description": "Parameters for generating an upgraded definition.",
          "required": true
        },
        "x-ms-examples": {
          "Generate an upgraded definition": {
            "$ref": "./examples/Workflows_GenerateUpgradedDefinition.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Get the workflow callback Url.",
        "operationId": "Workflows_ListCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "description": "Which callback url to list.",
          "required": true
        },
        "x-ms-examples": {
          "Get callback url": {
            "$ref": "./examples/Workflows_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/listSwagger": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets an OpenAPI definition for the workflow.",
        "operationId": "Workflows_ListSwagger",
        "x-ms-examples": {
          "Get the swagger for a workflow": {
            "$ref": "./examples/Workflows_ListSwagger.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/move": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "No Content"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Moves an existing workflow.",
        "operationId": "Workflows_Move",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow to move.",
          "required": true
        },
        "x-ms-examples": {
          "Move a workflow": {
            "$ref": "./examples/Workflows_Move.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/regenerateAccessKey": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Regenerates the callback URL access key for request triggers.",
        "operationId": "Workflows_RegenerateAccessKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateActionParameter"
              }
            }
          },
          "description": "The access key type.",
          "required": true
        },
        "x-ms-examples": {
          "Regenerate the callback URL access key for request triggers": {
            "$ref": "./examples/Workflows_RegenerateAccessKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Gets a list of workflow runs.",
        "operationId": "WorkflowRuns_List",
        "x-ms-examples": {
          "List workflow runs": {
            "$ref": "./examples/WorkflowRuns_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowRunFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Deletes a workflow run.",
        "operationId": "WorkflowRuns_Delete",
        "x-ms-examples": {
          "Delete a run for a workflow": {
            "$ref": "./examples/WorkflowRuns_Delete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Gets a workflow run.",
        "operationId": "WorkflowRuns_Get",
        "x-ms-examples": {
          "Get a run for a workflow": {
            "$ref": "./examples/WorkflowRuns_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: Status.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a list of workflow run actions.",
        "operationId": "WorkflowRunActions_List",
        "x-ms-examples": {
          "List a workflow run actions": {
            "$ref": "./examples/WorkflowRunActions_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowRunActionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunAction"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a workflow run action.",
        "operationId": "WorkflowRunActions_Get",
        "x-ms-examples": {
          "Get a workflow run action": {
            "$ref": "./examples/WorkflowRunActions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/listExpressionTraces": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionTraces"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Lists a workflow run expression trace.",
        "operationId": "WorkflowRunActions_ListExpressionTraces",
        "x-ms-examples": {
          "List expression traces": {
            "$ref": "./examples/WorkflowRunActions_ListExpressionTraces.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "inputs",
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Get all of a workflow run action repetitions.",
        "operationId": "WorkflowRunActionRepetitions_List",
        "x-ms-examples": {
          "List repetitions": {
            "$ref": "./examples/WorkflowRunActionRepetitions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow repetition.",
            "in": "path",
            "name": "repetitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionRepetitionDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Get a workflow run action repetition.",
        "operationId": "WorkflowRunActionRepetitions_Get",
        "x-ms-examples": {
          "Get a repetition": {
            "$ref": "./examples/WorkflowRunActionRepetitions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/listExpressionTraces": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow repetition.",
            "in": "path",
            "name": "repetitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressionTraces"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Lists a workflow run expression trace.",
        "operationId": "WorkflowRunActionRepetitions_ListExpressionTraces",
        "x-ms-examples": {
          "List expression traces for a repetition": {
            "$ref": "./examples/WorkflowRunActionRepetitions_ListExpressionTraces.json"
          }
        },
        "x-ms-pageable": {
          "itemName": "inputs",
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow repetition.",
            "in": "path",
            "name": "repetitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestHistoryListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "List a workflow run repetition request history.",
        "operationId": "WorkflowRunActionRepetitionsRequestHistories_List",
        "x-ms-examples": {
          "List repetition request history": {
            "$ref": "./examples/WorkflowRunActionRepetitionsRequestHistories_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/repetitions/{repetitionName}/requestHistories/{requestHistoryName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow repetition.",
            "in": "path",
            "name": "repetitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The request history name.",
            "in": "path",
            "name": "requestHistoryName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestHistory"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a workflow run repetition request history.",
        "operationId": "WorkflowRunActionRepetitionsRequestHistories_Get",
        "x-ms-examples": {
          "Get a repetition request history": {
            "$ref": "./examples/WorkflowRunActionRepetitionsRequestHistories_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestHistoryListResult"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "List a workflow run request history.",
        "operationId": "WorkflowRunActionRequestHistories_List",
        "x-ms-examples": {
          "List a request history": {
            "$ref": "./examples/WorkflowRunActionRequestHistories_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/requestHistories/{requestHistoryName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The request history name.",
            "in": "path",
            "name": "requestHistoryName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestHistory"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a workflow run request history.",
        "operationId": "WorkflowRunActionRequestHistories_Get",
        "x-ms-examples": {
          "Get a request history": {
            "$ref": "./examples/WorkflowRunActionRequestHistories_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionRepetitionDefinitionCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "List the workflow run action scoped repetitions.",
        "operationId": "WorkflowRunActionScopeRepetitions_List",
        "x-ms-examples": {
          "List the scoped repetitions": {
            "$ref": "./examples/WorkflowRunActionScopeRepetitions_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}/scopeRepetitions/{repetitionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow repetition.",
            "in": "path",
            "name": "repetitionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionRepetitionDefinition"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Get a workflow run action scoped repetition.",
        "operationId": "WorkflowRunActionScopeRepetitions_Get",
        "x-ms-examples": {
          "Get a scoped repetition": {
            "$ref": "./examples/WorkflowRunActionScopeRepetitions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Cancels a workflow run.",
        "operationId": "WorkflowRuns_Cancel",
        "x-ms-examples": {
          "Cancel a workflow run": {
            "$ref": "./examples/WorkflowRuns_Cancel.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/operations/{operationId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow operation id.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunOperations"
        ],
        "description": "Gets an operation for a run.",
        "operationId": "WorkflowRunOperations_Get",
        "x-ms-examples": {
          "Get a run operation": {
            "$ref": "./examples/WorkflowRunOperations_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a list of workflow triggers.",
        "operationId": "WorkflowTriggers_List",
        "x-ms-examples": {
          "List workflow triggers": {
            "$ref": "./examples/WorkflowTriggers_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowTriggerFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTrigger"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a workflow trigger.",
        "operationId": "WorkflowTriggers_Get",
        "x-ms-examples": {
          "Get a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation. Options for filters include: Status, StartTime, and ClientTrackingId.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistoryListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a list of workflow trigger histories.",
        "operationId": "WorkflowTriggerHistories_List",
        "x-ms-examples": {
          "List a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_List.json"
          }
        },
        "x-ms-odata": "#/components/schemas/WorkflowTriggerHistoryFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "in": "path",
            "name": "historyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistory"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a workflow trigger history.",
        "operationId": "WorkflowTriggerHistories_Get",
        "x-ms-examples": {
          "Get a workflow trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}/resubmit": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run.",
            "in": "path",
            "name": "historyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Resubmits a workflow run based on the trigger history.",
        "operationId": "WorkflowTriggerHistories_Resubmit",
        "x-ms-examples": {
          "Resubmit a workflow run based on the trigger history": {
            "$ref": "./examples/WorkflowTriggerHistories_Resubmit.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/listCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Get the callback URL for a workflow trigger.",
        "operationId": "WorkflowTriggers_ListCallbackUrl",
        "x-ms-examples": {
          "Get the callback URL for a trigger": {
            "$ref": "./examples/WorkflowTriggers_ListCallbackUrl.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/reset": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Resets a workflow trigger.",
        "operationId": "WorkflowTriggers_Reset",
        "x-ms-examples": {
          "Reset trigger": {
            "$ref": "./examples/WorkflowTriggers_Reset.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object"
                }
              }
            },
            "description": "All status codes are acceptable."
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Runs a workflow trigger.",
        "operationId": "WorkflowTriggers_Run",
        "x-ms-examples": {
          "Run a workflow trigger": {
            "$ref": "./examples/WorkflowTriggers_Run.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/schemas/json": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Get the trigger schema as JSON.",
        "operationId": "WorkflowTriggers_GetSchemaJson",
        "x-ms-examples": {
          "Get trigger schema": {
            "$ref": "./examples/WorkflowTriggers_GetSchemaJson.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/setState": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Sets the state of a workflow trigger.",
        "operationId": "WorkflowTriggers_SetState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTriggerStateActionDefinition"
              }
            }
          },
          "description": "The workflow trigger state.",
          "required": true
        },
        "x-ms-examples": {
          "Set trigger state": {
            "$ref": "./examples/WorkflowTriggers_SetState.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Validates the workflow.",
        "operationId": "Workflows_ValidateByResourceGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        },
        "x-ms-examples": {
          "Validate a workflow": {
            "$ref": "./examples/Workflows_ValidateByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVersionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Gets a list of workflow versions.",
        "operationId": "WorkflowVersions_List",
        "x-ms-examples": {
          "List a workflows versions": {
            "$ref": "./examples/WorkflowVersions_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow versionId.",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVersion"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Gets a workflow version.",
        "operationId": "WorkflowVersions_Get",
        "x-ms-examples": {
          "Get a workflow version": {
            "$ref": "./examples/WorkflowVersions_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}/triggers/{triggerName}/listCallbackUrl": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow versionId.",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerCallbackUrl"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Get the callback url for a trigger of a workflow version.",
        "operationId": "WorkflowVersionTriggers_ListCallbackUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallbackUrlParameters"
              }
            }
          },
          "description": "The callback URL parameters."
        },
        "x-ms-examples": {
          "Get the callback url for a trigger of a workflow version": {
            "$ref": "./examples/WorkflowVersionTriggers_ListCallbackUrl.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "The API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subscriptionId": {
        "description": "The subscription id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "GetCallbackUrlParameters": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetCallbackUrlParameters"
            }
          }
        },
        "required": true
      },
      "IntegrationAccount": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/IntegrationAccount"
            }
          }
        },
        "description": "The integration account.",
        "required": true
      },
      "RegenerateActionParameter": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RegenerateActionParameter"
            }
          }
        },
        "description": "The access key type.",
        "required": true
      },
      "Workflow": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Workflow"
            }
          }
        },
        "description": "The workflow.",
        "required": true
      }
    },
    "schemas": {
      "AS2AcknowledgementConnectionSettings": {
        "description": "The AS2 agreement acknowledgement connection settings.",
        "properties": {
          "ignoreCertificateNameMismatch": {
            "description": "The value indicating whether to ignore mismatch in certificate name.",
            "type": "boolean"
          },
          "keepHttpConnectionAlive": {
            "description": "The value indicating whether to keep the connection alive.",
            "type": "boolean"
          },
          "supportHttpStatusCodeContinue": {
            "description": "The value indicating whether to support HTTP status code 'CONTINUE'.",
            "type": "boolean"
          },
          "unfoldHttpHeaders": {
            "description": "The value indicating whether to unfold the HTTP headers.",
            "type": "boolean"
          }
        },
        "required": [
          "ignoreCertificateNameMismatch",
          "supportHttpStatusCodeContinue",
          "keepHttpConnectionAlive",
          "unfoldHttpHeaders"
        ],
        "type": "object"
      },
      "AS2AgreementContent": {
        "description": "The integration account AS2 agreement content.",
        "properties": {
          "receiveAgreement": {
            "$ref": "#/components/schemas/AS2OneWayAgreement",
            "description": "The AS2 one-way receive agreement."
          },
          "sendAgreement": {
            "$ref": "#/components/schemas/AS2OneWayAgreement",
            "description": "The AS2 one-way send agreement."
          }
        },
        "required": [
          "receiveAgreement",
          "sendAgreement"
        ],
        "type": "object"
      },
      "AS2EnvelopeSettings": {
        "description": "The AS2 agreement envelope settings.",
        "properties": {
          "autogenerateFileName": {
            "description": "The value indicating whether to auto generate file name.",
            "type": "boolean"
          },
          "fileNameTemplate": {
            "description": "The template for file name.",
            "type": "string"
          },
          "messageContentType": {
            "description": "The message content type.",
            "type": "string"
          },
          "suspendMessageOnFileNameGenerationError": {
            "description": "The value indicating whether to suspend message on file name generation error.",
            "type": "boolean"
          },
          "transmitFileNameInMimeHeader": {
            "description": "The value indicating whether to transmit file name in mime header.",
            "type": "boolean"
          }
        },
        "required": [
          "messageContentType",
          "transmitFileNameInMimeHeader",
          "fileNameTemplate",
          "suspendMessageOnFileNameGenerationError",
          "autogenerateFileName"
        ],
        "type": "object"
      },
      "AS2ErrorSettings": {
        "description": "The AS2 agreement error settings.",
        "properties": {
          "resendIfMDNNotReceived": {
            "description": "The value indicating whether to resend message If MDN is not received.",
            "type": "boolean"
          },
          "suspendDuplicateMessage": {
            "description": "The value indicating whether to suspend duplicate message.",
            "type": "boolean"
          }
        },
        "required": [
          "suspendDuplicateMessage",
          "resendIfMDNNotReceived"
        ],
        "type": "object"
      },
      "AS2MdnSettings": {
        "description": "The AS2 agreement mdn settings.",
        "properties": {
          "dispositionNotificationTo": {
            "description": "The disposition notification to header value.",
            "type": "string"
          },
          "mdnText": {
            "description": "The MDN text.",
            "type": "string"
          },
          "micHashingAlgorithm": {
            "$ref": "#/components/schemas/HashingAlgorithm",
            "description": "The signing or hashing algorithm."
          },
          "needMDN": {
            "description": "The value indicating whether to send or request a MDN.",
            "type": "boolean"
          },
          "receiptDeliveryUrl": {
            "description": "The receipt delivery URL.",
            "type": "string"
          },
          "sendInboundMDNToMessageBox": {
            "description": "The value indicating whether to send inbound MDN to message box.",
            "type": "boolean"
          },
          "sendMDNAsynchronously": {
            "description": "The value indicating whether to send the asynchronous MDN.",
            "type": "boolean"
          },
          "signMDN": {
            "description": "The value indicating whether the MDN needs to be signed or not.",
            "type": "boolean"
          },
          "signOutboundMDNIfOptional": {
            "description": "The value indicating whether to sign the outbound MDN if optional.",
            "type": "boolean"
          }
        },
        "required": [
          "needMDN",
          "signMDN",
          "sendMDNAsynchronously",
          "signOutboundMDNIfOptional",
          "sendInboundMDNToMessageBox",
          "micHashingAlgorithm"
        ],
        "type": "object"
      },
      "AS2MessageConnectionSettings": {
        "description": "The AS2 agreement message connection settings.",
        "properties": {
          "ignoreCertificateNameMismatch": {
            "description": "The value indicating whether to ignore mismatch in certificate name.",
            "type": "boolean"
          },
          "keepHttpConnectionAlive": {
            "description": "The value indicating whether to keep the connection alive.",
            "type": "boolean"
          },
          "supportHttpStatusCodeContinue": {
            "description": "The value indicating whether to support HTTP status code 'CONTINUE'.",
            "type": "boolean"
          },
          "unfoldHttpHeaders": {
            "description": "The value indicating whether to unfold the HTTP headers.",
            "type": "boolean"
          }
        },
        "required": [
          "ignoreCertificateNameMismatch",
          "supportHttpStatusCodeContinue",
          "keepHttpConnectionAlive",
          "unfoldHttpHeaders"
        ],
        "type": "object"
      },
      "AS2OneWayAgreement": {
        "description": "The integration account AS2 one-way agreement.",
        "properties": {
          "protocolSettings": {
            "$ref": "#/components/schemas/AS2ProtocolSettings",
            "description": "The AS2 protocol settings."
          },
          "receiverBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The receiver business identity"
          },
          "senderBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The sender business identity"
          }
        },
        "required": [
          "senderBusinessIdentity",
          "receiverBusinessIdentity",
          "protocolSettings"
        ],
        "type": "object"
      },
      "AS2ProtocolSettings": {
        "description": "The AS2 agreement protocol settings.",
        "properties": {
          "acknowledgementConnectionSettings": {
            "$ref": "#/components/schemas/AS2AcknowledgementConnectionSettings",
            "description": "The acknowledgement connection settings."
          },
          "envelopeSettings": {
            "$ref": "#/components/schemas/AS2EnvelopeSettings",
            "description": "The envelope settings."
          },
          "errorSettings": {
            "$ref": "#/components/schemas/AS2ErrorSettings",
            "description": "The error settings."
          },
          "mdnSettings": {
            "$ref": "#/components/schemas/AS2MdnSettings",
            "description": "The MDN settings."
          },
          "messageConnectionSettings": {
            "$ref": "#/components/schemas/AS2MessageConnectionSettings",
            "description": "The message connection settings."
          },
          "securitySettings": {
            "$ref": "#/components/schemas/AS2SecuritySettings",
            "description": "The security settings."
          },
          "validationSettings": {
            "$ref": "#/components/schemas/AS2ValidationSettings",
            "description": "The validation settings."
          }
        },
        "required": [
          "messageConnectionSettings",
          "acknowledgementConnectionSettings",
          "mdnSettings",
          "securitySettings",
          "validationSettings",
          "envelopeSettings",
          "errorSettings"
        ],
        "type": "object"
      },
      "AS2SecuritySettings": {
        "description": "The AS2 agreement security settings.",
        "properties": {
          "enableNRRForInboundDecodedMessages": {
            "description": "The value indicating whether to enable NRR for inbound decoded messages.",
            "type": "boolean"
          },
          "enableNRRForInboundEncodedMessages": {
            "description": "The value indicating whether to enable NRR for inbound encoded messages.",
            "type": "boolean"
          },
          "enableNRRForInboundMDN": {
            "description": "The value indicating whether to enable NRR for inbound MDN.",
            "type": "boolean"
          },
          "enableNRRForOutboundDecodedMessages": {
            "description": "The value indicating whether to enable NRR for outbound decoded messages.",
            "type": "boolean"
          },
          "enableNRRForOutboundEncodedMessages": {
            "description": "The value indicating whether to enable NRR for outbound encoded messages.",
            "type": "boolean"
          },
          "enableNRRForOutboundMDN": {
            "description": "The value indicating whether to enable NRR for outbound MDN.",
            "type": "boolean"
          },
          "encryptionCertificateName": {
            "description": "The name of the encryption certificate.",
            "type": "string"
          },
          "overrideGroupSigningCertificate": {
            "description": "The value indicating whether to send or request a MDN.",
            "type": "boolean"
          },
          "sha2AlgorithmFormat": {
            "description": "The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.",
            "type": "string"
          },
          "signingCertificateName": {
            "description": "The name of the signing certificate.",
            "type": "string"
          }
        },
        "required": [
          "overrideGroupSigningCertificate",
          "enableNRRForInboundEncodedMessages",
          "enableNRRForInboundDecodedMessages",
          "enableNRRForOutboundMDN",
          "enableNRRForOutboundEncodedMessages",
          "enableNRRForOutboundDecodedMessages",
          "enableNRRForInboundMDN"
        ],
        "type": "object"
      },
      "AS2ValidationSettings": {
        "description": "The AS2 agreement validation settings.",
        "properties": {
          "checkCertificateRevocationListOnReceive": {
            "description": "The value indicating whether to check for certificate revocation list on receive.",
            "type": "boolean"
          },
          "checkCertificateRevocationListOnSend": {
            "description": "The value indicating whether to check for certificate revocation list on send.",
            "type": "boolean"
          },
          "checkDuplicateMessage": {
            "description": "The value indicating whether to check for duplicate message.",
            "type": "boolean"
          },
          "compressMessage": {
            "description": "The value indicating whether the message has to be compressed.",
            "type": "boolean"
          },
          "encryptMessage": {
            "description": "The value indicating whether the message has to be encrypted.",
            "type": "boolean"
          },
          "encryptionAlgorithm": {
            "$ref": "#/components/schemas/EncryptionAlgorithm",
            "description": "The encryption algorithm."
          },
          "interchangeDuplicatesValidityDays": {
            "description": "The number of days to look back for duplicate interchange.",
            "format": "int32",
            "type": "integer"
          },
          "overrideMessageProperties": {
            "description": "The value indicating whether to override incoming message properties with those in agreement.",
            "type": "boolean"
          },
          "signMessage": {
            "description": "The value indicating whether the message has to be signed.",
            "type": "boolean"
          },
          "signingAlgorithm": {
            "$ref": "#/components/schemas/SigningAlgorithm",
            "description": "The signing algorithm."
          }
        },
        "required": [
          "overrideMessageProperties",
          "encryptMessage",
          "signMessage",
          "compressMessage",
          "checkDuplicateMessage",
          "interchangeDuplicatesValidityDays",
          "checkCertificateRevocationListOnSend",
          "checkCertificateRevocationListOnReceive",
          "encryptionAlgorithm"
        ],
        "type": "object"
      },
      "AgreementContent": {
        "description": "The integration account agreement content.",
        "properties": {
          "aS2": {
            "$ref": "#/components/schemas/AS2AgreementContent",
            "description": "The AS2 agreement content."
          },
          "edifact": {
            "$ref": "#/components/schemas/EdifactAgreementContent",
            "description": "The EDIFACT agreement content."
          },
          "x12": {
            "$ref": "#/components/schemas/X12AgreementContent",
            "description": "The X12 agreement content."
          }
        },
        "type": "object"
      },
      "AgreementType": {
        "enum": [
          "NotSpecified",
          "AS2",
          "X12",
          "Edifact"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "AgreementType"
        }
      },
      "ArtifactContentPropertiesDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactProperties"
          }
        ],
        "description": "The artifact content properties definition.",
        "properties": {
          "content": {},
          "contentLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "The content link."
          },
          "contentType": {
            "description": "The content type.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ArtifactProperties": {
        "additionalProperties": false,
        "description": "The artifact properties definition.",
        "properties": {
          "changedTime": {
            "description": "The artifact changed time.",
            "format": "date-time",
            "type": "string"
          },
          "createdTime": {
            "description": "The artifact creation time.",
            "format": "date-time",
            "type": "string"
          },
          "metadata": {}
        },
        "type": "object"
      },
      "AssemblyCollection": {
        "description": "A collection of assembly definitions.",
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/AssemblyDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AssemblyDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The assembly definition.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AssemblyProperties",
            "description": "The assembly properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "AssemblyProperties": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactContentPropertiesDefinition"
          }
        ],
        "description": "The assembly properties definition.",
        "properties": {
          "assemblyCulture": {
            "description": "The assembly culture.",
            "type": "string"
          },
          "assemblyName": {
            "description": "The assembly name.",
            "type": "string"
          },
          "assemblyPublicKeyToken": {
            "description": "The assembly public key token.",
            "type": "string"
          },
          "assemblyVersion": {
            "description": "The assembly version.",
            "type": "string"
          }
        },
        "required": [
          "assemblyName"
        ],
        "type": "object"
      },
      "AzureResourceErrorInfo": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ErrorInfo"
          }
        ],
        "description": "The azure resource error info.",
        "properties": {
          "details": {
            "description": "The error details.",
            "items": {
              "$ref": "#/components/schemas/AzureResourceErrorInfo"
            },
            "type": "array"
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "B2BPartnerContent": {
        "description": "The B2B partner content.",
        "properties": {
          "businessIdentities": {
            "description": "The list of partner business identities.",
            "items": {
              "$ref": "#/components/schemas/BusinessIdentity"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchConfiguration": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The batch configuration resource definition.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BatchConfigurationProperties",
            "description": "The batch configuration properties."
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "BatchConfigurationCollection": {
        "description": "A collection of batch configurations.",
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/BatchConfiguration"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BatchConfigurationProperties": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ArtifactProperties"
          }
        ],
        "description": "The batch configuration properties definition.",
        "properties": {
          "batchGroupName": {
            "description": "The name of the batch group.",
            "type": "string"
          },
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "type": "string"
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "type": "string"
          },
          "releaseCriteria": {
            "$ref": "#/components/schemas/BatchReleaseCriteria",
            "description": "The batch release criteria."
          }
        },
        "required": [
          "batchGroupName",
          "releaseCriteria"
        ],
        "type": "object"
      },
      "BatchReleaseCriteria": {
        "additionalProperties": false,
        "description": "The batch release criteria.",
        "properties": {
          "batchSize": {
            "description": "The batch size in bytes.",
            "format": "int32",
            "type": "integer"
          },
          "messageCount": {
            "description": "The message count.",
            "format": "int32",
            "type": "integer"
          },
          "recurrence": {
            "$ref": "#/components/schemas/WorkflowTriggerRecurrence",
            "description": "The recurrence."
          }
        },
        "type": "object"
      },
      "BusinessIdentity": {
        "description": "The integration account partner's business identity.",
        "properties": {
          "qualifier": {
            "description": "The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32",
            "type": "string"
          },
          "value": {
            "description": "The user defined business identity value.",
            "type": "string"
          }
        },
        "required": [
          "qualifier",
          "value"
        ],
        "type": "object"
      },
      "CallbackUrl": {
        "description": "The callback url.",
        "properties": {
          "value": {
            "description": "The URL value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentHash": {
        "description": "The content hash.",
        "properties": {
          "algorithm": {
            "description": "The algorithm of the content hash.",
            "type": "string"
          },
          "value": {
            "description": "The value of the content hash.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentLink": {
        "description": "The content link.",
        "properties": {
          "contentHash": {
            "$ref": "#/components/schemas/ContentHash",
            "description": "The content hash."
          },
          "contentSize": {
            "description": "The content size.",
            "format": "int64",
            "type": "integer"
          },
          "contentVersion": {
            "description": "The content version.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Object",
            "description": "The metadata."
          },
          "uri": {
            "description": "The content link URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Correlation": {
        "description": "The correlation property.",
        "properties": {
          "clientTrackingId": {
            "description": "The client tracking id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "DayOfWeek"
        }
      },
      "EdifactAcknowledgementSettings": {
        "description": "The Edifact agreement acknowledgement settings.",
        "properties": {
          "acknowledgementControlNumberLowerBound": {
            "description": "The acknowledgement control number lower bound.",
            "format": "int32",
            "type": "integer"
          },
          "acknowledgementControlNumberPrefix": {
            "description": "The acknowledgement control number prefix.",
            "type": "string"
          },
          "acknowledgementControlNumberSuffix": {
            "description": "The acknowledgement control number suffix.",
            "type": "string"
          },
          "acknowledgementControlNumberUpperBound": {
            "description": "The acknowledgement control number upper bound.",
            "format": "int32",
            "type": "integer"
          },
          "batchFunctionalAcknowledgements": {
            "description": "The value indicating whether to batch functional acknowledgements.",
            "type": "boolean"
          },
          "batchTechnicalAcknowledgements": {
            "description": "The value indicating whether to batch the technical acknowledgements.",
            "type": "boolean"
          },
          "needFunctionalAcknowledgement": {
            "description": "The value indicating whether functional acknowledgement is needed.",
            "type": "boolean"
          },
          "needLoopForValidMessages": {
            "description": "The value indicating whether a loop is needed for valid messages.",
            "type": "boolean"
          },
          "needTechnicalAcknowledgement": {
            "description": "The value indicating whether technical acknowledgement is needed.",
            "type": "boolean"
          },
          "rolloverAcknowledgementControlNumber": {
            "description": "The value indicating whether to rollover acknowledgement control number.",
            "type": "boolean"
          },
          "sendSynchronousAcknowledgement": {
            "description": "The value indicating whether to send synchronous acknowledgement.",
            "type": "boolean"
          }
        },
        "required": [
          "needTechnicalAcknowledgement",
          "batchTechnicalAcknowledgements",
          "needFunctionalAcknowledgement",
          "batchFunctionalAcknowledgements",
          "needLoopForValidMessages",
          "sendSynchronousAcknowledgement",
          "acknowledgementControlNumberLowerBound",
          "acknowledgementControlNumberUpperBound",
          "rolloverAcknowledgementControlNumber"
        ],
        "type": "object"
      },
      "EdifactAgreementContent": {
        "description": "The Edifact agreement content.",
        "properties": {
          "receiveAgreement": {
            "$ref": "#/components/schemas/EdifactOneWayAgreement",
            "description": "The EDIFACT one-way receive agreement."
          },
          "sendAgreement": {
            "$ref": "#/components/schemas/EdifactOneWayAgreement",
            "description": "The EDIFACT one-way send agreement."
          }
        },
        "required": [
          "receiveAgreement",
          "sendAgreement"
        ],
        "type": "object"
      },
      "EdifactCharacterSet": {
        "enum": [
          "NotSpecified",
          "UNOB",
          "UNOA",
          "UNOC",
          "UNOD",
          "UNOE",
          "UNOF",
          "UNOG",
          "UNOH",
          "UNOI",
          "UNOJ",
          "UNOK",
          "UNOX",
          "UNOY",
          "KECA"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EdifactCharacterSet"
        }
      },
      "EdifactDecimalIndicator": {
        "enum": [
          "NotSpecified",
          "Comma",
          "Decimal"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "EdifactDecimalIndicator"
        }
      },
      "EdifactDelimiterOverride": {
        "description": "The Edifact delimiter override settings.",
        "properties": {
          "componentSeparator": {
            "description": "The component separator.",
            "format": "int32",
            "type": "integer"
          },
          "dataElementSeparator": {
            "description": "The data element separator.",
            "format": "int32",
            "type": "integer"
          },
          "decimalPointIndicator": {
            "$ref": "#/components/schemas/EdifactDecimalIndicator",
            "description": "The decimal point indicator."
          },
          "messageAssociationAssignedCode": {
            "description": "The message association assigned code.",
            "type": "string"
          },
          "messageId": {
            "description": "The message id.",
            "type": "string"
          },
          "messageRelease": {
            "description": "The message release.",
            "type": "string"
          },
          "messageVersion": {
            "description": "The message version.",
            "type": "string"
          },
          "releaseIndicator": {
            "description": "The release indicator.",
            "format": "int32",
            "type": "integer"
          },
          "repetitionSeparator": {
            "description": "The repetition separator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminator": {
            "description": "The segment terminator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminatorSuffix": {
            "$ref": "#/components/schemas/SegmentTerminatorSuffix",
            "description": "The segment terminator suffix."
          },
          "targetNamespace": {
            "description": "The target namespace on which this delimiter settings has to be applied.",
            "type": "string"
          }
        },
        "required": [
          "dataElementSeparator",
          "componentSeparator",
          "segmentTerminator",
          "repetitionSeparator",
          "segmentTerminatorSuffix",
          "decimalPointIndicator",
          "releaseIndicator"
        ],
        "type": "object"
      },
      "EdifactEnvelopeOverride": {
        "description": "The Edifact envelope override settings.",
        "properties": {
          "applicationPassword": {
            "description": "The application password.",
            "type": "string"
          },
          "associationAssignedCode": {
            "description": "The association assigned code.",
            "type": "string"
          },
          "controllingAgencyCode": {
            "description": "The controlling agency code.",
            "type": "string"
          },
          "functionalGroupId": {
            "description": "The functional group id.",
            "type": "string"
          },
          "groupHeaderMessageRelease": {
            "description": "The group header message release.",
            "type": "string"
          },
          "groupHeaderMessageVersion": {
            "description": "The group header message version.",
            "type": "string"
          },
          "messageAssociationAssignedCode": {
            "description": "The message association assigned code.",
            "type": "string"
          },
          "messageId": {
            "description": "The message id on which this envelope settings has to be applied.",
            "type": "string"
          },
          "messageRelease": {
            "description": "The message release version on which this envelope settings has to be applied.",
            "type": "string"
          },
          "messageVersion": {
            "description": "The message version on which this envelope settings has to be applied.",
            "type": "string"
          },
          "receiverApplicationId": {
            "description": "The receiver application id.",
            "type": "string"
          },
          "receiverApplicationQualifier": {
            "description": "The receiver application qualifier.",
            "type": "string"
          },
          "senderApplicationId": {
            "description": "The sender application id.",
            "type": "string"
          },
          "senderApplicationQualifier": {
            "description": "The sender application qualifier.",
            "type": "string"
          },
          "targetNamespace": {
            "description": "The target namespace on which this envelope settings has to be applied.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EdifactEnvelopeSettings": {
        "description": "The Edifact agreement envelope settings.",
        "properties": {
          "applicationReferenceId": {
            "description": "The application reference id.",
            "type": "string"
          },
          "applyDelimiterStringAdvice": {
            "description": "The value indicating whether to apply delimiter string advice.",
            "type": "boolean"
          },
          "communicationAgreementId": {
            "description": "The communication agreement id.",
            "type": "string"
          },
          "createGroupingSegments": {
            "description": "The value indicating whether to create grouping segments.",
            "type": "boolean"
          },
          "enableDefaultGroupHeaders": {
            "description": "The value indicating whether to enable default group headers.",
            "type": "boolean"
          },
          "functionalGroupId": {
            "description": "The functional group id.",
            "type": "string"
          },
          "groupApplicationPassword": {
            "description": "The group application password.",
            "type": "string"
          },
          "groupApplicationReceiverId": {
            "description": "The group application receiver id.",
            "type": "string"
          },
          "groupApplicationReceiverQualifier": {
            "description": "The group application receiver qualifier.",
            "type": "string"
          },
          "groupApplicationSenderId": {
            "description": "The group application sender id.",
            "type": "string"
          },
          "groupApplicationSenderQualifier": {
            "description": "The group application sender qualifier.",
            "type": "string"
          },
          "groupAssociationAssignedCode": {
            "description": "The group association assigned code.",
            "type": "string"
          },
          "groupControlNumberLowerBound": {
            "description": "The group control number lower bound.",
            "format": "int64",
            "type": "integer"
          },
          "groupControlNumberPrefix": {
            "description": "The group control number prefix.",
            "type": "string"
          },
          "groupControlNumberSuffix": {
            "description": "The group control number suffix.",
            "type": "string"
          },
          "groupControlNumberUpperBound": {
            "description": "The group control number upper bound.",
            "format": "int64",
            "type": "integer"
          },
          "groupControllingAgencyCode": {
            "description": "The group controlling agency code.",
            "type": "string"
          },
          "groupMessageRelease": {
            "description": "The group message release.",
            "type": "string"
          },
          "groupMessageVersion": {
            "description": "The group message version.",
            "type": "string"
          },
          "interchangeControlNumberLowerBound": {
            "description": "The interchange control number lower bound.",
            "format": "int64",
            "type": "integer"
          },
          "interchangeControlNumberPrefix": {
            "description": "The interchange control number prefix.",
            "type": "string"
          },
          "interchangeControlNumberSuffix": {
            "description": "The interchange control number suffix.",
            "type": "string"
          },
          "interchangeControlNumberUpperBound": {
            "description": "The interchange control number upper bound.",
            "format": "int64",
            "type": "integer"
          },
          "isTestInterchange": {
            "description": "The value indicating whether the message is a test interchange.",
            "type": "boolean"
          },
          "overwriteExistingTransactionSetControlNumber": {
            "description": "The value indicating whether to overwrite existing transaction set control number.",
            "type": "boolean"
          },
          "processingPriorityCode": {
            "description": "The processing priority code.",
            "type": "string"
          },
          "receiverInternalIdentification": {
            "description": "The receiver internal identification.",
            "type": "string"
          },
          "receiverInternalSubIdentification": {
            "description": "The receiver internal sub identification.",
            "type": "string"
          },
          "receiverReverseRoutingAddress": {
            "description": "The receiver reverse routing address.",
            "type": "string"
          },
          "recipientReferencePasswordQualifier": {
            "description": "The recipient reference password qualifier.",
            "type": "string"
          },
          "recipientReferencePasswordValue": {
            "description": "The recipient reference password value.",
            "type": "string"
          },
          "rolloverGroupControlNumber": {
            "description": "The value indicating whether to rollover group control number.",
            "type": "boolean"
          },
          "rolloverInterchangeControlNumber": {
            "description": "The value indicating whether to rollover interchange control number.",
            "type": "boolean"
          },
          "rolloverTransactionSetControlNumber": {
            "description": "The value indicating whether to rollover transaction set control number.",
            "type": "boolean"
          },
          "senderInternalIdentification": {
            "description": "The sender internal identification.",
            "type": "string"
          },
          "senderInternalSubIdentification": {
            "description": "The sender internal sub identification.",
            "type": "string"
          },
          "senderReverseRoutingAddress": {
            "description": "The sender reverse routing address.",
            "type": "string"
          },
          "transactionSetControlNumberLowerBound": {
            "description": "The transaction set control number lower bound.",
            "format": "int64",
            "type": "integer"
          },
          "transactionSetControlNumberPrefix": {
            "description": "The transaction set control number prefix.",
            "type": "string"
          },
          "transactionSetControlNumberSuffix": {
            "description": "The transaction set control number suffix.",
            "type": "string"
          },
          "transactionSetControlNumberUpperBound": {
            "description": "The transaction set control number upper bound.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "applyDelimiterStringAdvice",
          "createGroupingSegments",
          "enableDefaultGroupHeaders",
          "interchangeControlNumberLowerBound",
          "interchangeControlNumberUpperBound",
          "rolloverInterchangeControlNumber",
          "groupControlNumberLowerBound",
          "groupControlNumberUpperBound",
          "rolloverGroupControlNumber",
          "overwriteExistingTransactionSetControlNumber",
          "transactionSetControlNumberLowerBound",
          "transactionSetControlNumberUpperBound",
          "rolloverTransactionSetControlNumber",
          "isTestInterchange"
        ],
        "type": "object"
      },
      "EdifactFramingSettings": {
        "description": "The Edifact agreement framing settings.",
        "properties": {
          "characterEncoding": {
            "description": "The character encoding.",
            "type": "string"
          },
          "characterSet": {
            "$ref": "#/components/schemas/EdifactCharacterSet",
            "description": "The EDIFACT frame setting characterSet."
          },
          "componentSeparator": {
            "description": "The component separator.",
            "format": "int32",
            "type": "integer"
          },
          "dataElementSeparator": {
            "description": "The data element separator.",
            "format": "int32",
            "type": "integer"
          },
          "decimalPointIndicator": {
            "$ref": "#/components/schemas/EdifactDecimalIndicator",
            "description": "The EDIFACT frame setting decimal indicator."
          },
          "protocolVersion": {
            "description": "The protocol version.",
            "format": "int32",
            "type": "integer"
          },
          "releaseIndicator": {
            "description": "The release indicator.",
            "format": "int32",
            "type": "integer"
          },
          "repetitionSeparator": {
            "description": "The repetition separator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminator": {
            "description": "The segment terminator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminatorSuffix": {
            "$ref": "#/components/schemas/SegmentTerminatorSuffix",
            "description": "The EDIFACT frame setting segment terminator suffix."
          },
          "serviceCodeListDirectoryVersion": {
            "description": "The service code list directory version.",
            "type": "string"
          }
        },
        "required": [
          "protocolVersion",
          "dataElementSeparator",
          "componentSeparator",
          "segmentTerminator",
          "releaseIndicator",
          "repetitionSeparator",
          "characterSet",
          "decimalPointIndicator",
          "segmentTerminatorSuffix"
        ],
        "type": "object"
      },
      "EdifactMessageFilter": {
        "description": "The Edifact message filter for odata query.",
        "properties": {
          "messageFilterType": {
            "$ref": "#/components/schemas/MessageFilterType",
            "description": "The message filter type."
          }
        },
        "required": [
          "messageFilterType"
        ],
        "type": "object"
      },
      "EdifactMessageIdentifier": {
        "description": "The Edifact message identifier.",
        "properties": {
          "messageId": {
            "description": "The message id on which this envelope settings has to be applied.",
            "type": "string"
          }
        },
        "required": [
          "messageId"
        ],
        "type": "object"
      },
      "EdifactOneWayAgreement": {
        "description": "The Edifact one way agreement.",
        "properties": {
          "protocolSettings": {
            "$ref": "#/components/schemas/EdifactProtocolSettings",
            "description": "The EDIFACT protocol settings."
          },
          "receiverBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The receiver business identity"
          },
          "senderBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The sender business identity"
          }
        },
        "required": [
          "senderBusinessIdentity",
          "receiverBusinessIdentity",
          "protocolSettings"
        ],
        "type": "object"
      },
      "EdifactProcessingSettings": {
        "description": "The Edifact agreement protocol settings.",
        "properties": {
          "createEmptyXmlTagsForTrailingSeparators": {
            "description": "The value indicating whether to create empty xml tags for trailing separators.",
            "type": "boolean"
          },
          "maskSecurityInfo": {
            "description": "The value indicating whether to mask security information.",
            "type": "boolean"
          },
          "preserveInterchange": {
            "description": "The value indicating whether to preserve interchange.",
            "type": "boolean"
          },
          "suspendInterchangeOnError": {
            "description": "The value indicating whether to suspend interchange on error.",
            "type": "boolean"
          },
          "useDotAsDecimalSeparator": {
            "description": "The value indicating whether to use dot as decimal separator.",
            "type": "boolean"
          }
        },
        "required": [
          "maskSecurityInfo",
          "preserveInterchange",
          "suspendInterchangeOnError",
          "createEmptyXmlTagsForTrailingSeparators",
          "useDotAsDecimalSeparator"
        ],
        "type": "object"
      },
      "EdifactProtocolSettings": {
        "description": "The Edifact agreement protocol settings.",
        "properties": {
          "acknowledgementSettings": {
            "$ref": "#/components/schemas/EdifactAcknowledgementSettings",
            "description": "The EDIFACT acknowledgement settings."
          },
          "edifactDelimiterOverrides": {
            "description": "The EDIFACT delimiter override settings.",
            "items": {
              "$ref": "#/components/schemas/EdifactDelimiterOverride"
            },
            "type": "array"
          },
          "envelopeOverrides": {
            "description": "The EDIFACT envelope override settings.",
            "items": {
              "$ref": "#/components/schemas/EdifactEnvelopeOverride"
            },
            "type": "array"
          },
          "envelopeSettings": {
            "$ref": "#/components/schemas/EdifactEnvelopeSettings",
            "description": "The EDIFACT envelope settings."
          },
          "framingSettings": {
            "$ref": "#/components/schemas/EdifactFramingSettings",
            "description": "The EDIFACT framing settings."
          },
          "messageFilter": {
            "$ref": "#/components/schemas/EdifactMessageFilter",
            "description": "The EDIFACT message filter."
          },
          "messageFilterList": {
            "description": "The EDIFACT message filter list.",
            "items": {
              "$ref": "#/components/schemas/EdifactMessageIdentifier"
            },
            "type": "array"
          },
          "processingSettings": {
            "$ref": "#/components/schemas/EdifactProcessingSettings",
            "description": "The EDIFACT processing Settings."
          },
          "schemaReferences": {
            "description": "The EDIFACT schema references.",
            "items": {
              "$ref": "#/components/schemas/EdifactSchemaReference"
            },
            "type": "array"
          },
          "validationOverrides": {
            "description": "The EDIFACT validation override settings.",
            "items": {
              "$ref": "#/components/schemas/EdifactValidationOverride"
            },
            "type": "array"
          },
          "validationSettings": {
            "$ref": "#/components/schemas/EdifactValidationSettings",
            "description": "The EDIFACT validation settings."
          }
        },
        "required": [
          "validationSettings",
          "framingSettings",
          "envelopeSettings",
          "acknowledgementSettings",
          "messageFilter",
          "processingSettings",
          "schemaReferences"
        ],
        "type": "object"
      },
      "EdifactSchemaReference": {
        "description": "The Edifact schema reference.",
        "properties": {
          "associationAssignedCode": {
            "description": "The association assigned code.",
            "type": "string"
          },
          "messageId": {
            "description": "The message id.",
            "type": "string"
          },
          "messageRelease": {
            "description": "The message release version.",
            "type": "string"
          },
          "messageVersion": {
            "description": "The message version.",
            "type": "string"
          },
          "schemaName": {
            "description": "The schema name.",
            "type": "string"
          },
          "senderApplicationId": {
            "description": "The sender application id.",
            "type": "string"
          },
          "senderApplicationQualifier": {
            "description": "The sender application qualifier.",
            "type": "string"
          }
        },
        "required": [
          "messageId",
          "messageVersion",
          "messageRelease",
          "schemaName"
        ],
        "type": "object"
      },
      "EdifactValidationOverride": {
        "description": "The Edifact validation override settings.",
        "properties": {
          "allowLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "enforceCharacterSet": {
            "description": "The value indicating whether to validate character Set.",
            "type": "boolean"
          },
          "messageId": {
            "description": "The message id on which the validation settings has to be applied.",
            "type": "string"
          },
          "trailingSeparatorPolicy": {
            "$ref": "#/components/schemas/TrailingSeparatorPolicy",
            "description": "The trailing separator policy."
          },
          "trimLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "validateEDITypes": {
            "description": "The value indicating whether to validate EDI types.",
            "type": "boolean"
          },
          "validateXSDTypes": {
            "description": "The value indicating whether to validate XSD types.",
            "type": "boolean"
          }
        },
        "required": [
          "messageId",
          "enforceCharacterSet",
          "validateEDITypes",
          "validateXSDTypes",
          "allowLeadingAndTrailingSpacesAndZeroes",
          "trailingSeparatorPolicy",
          "trimLeadingAndTrailingSpacesAndZeroes"
        ],
        "type": "object"
      },
      "EdifactValidationSettings": {
        "description": "The Edifact agreement validation settings.",
        "properties": {
          "allowLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "checkDuplicateGroupControlNumber": {
            "description": "The value indicating whether to check for duplicate group control number.",
            "type": "boolean"
          },
          "checkDuplicateInterchangeControlNumber": {
            "description": "The value indicating whether to check for duplicate interchange control number.",
            "type": "boolean"
          },
          "checkDuplicateTransactionSetControlNumber": {
            "description": "The value indicating whether to check for duplicate transaction set control number.",
            "type": "boolean"
          },
          "interchangeControlNumberValidityDays": {
            "description": "The validity period of interchange control number.",
            "format": "int32",
            "type": "integer"
          },
          "trailingSeparatorPolicy": {
            "$ref": "#/components/schemas/TrailingSeparatorPolicy",
            "description": "The trailing separator policy."
          },
          "trimLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "validateCharacterSet": {
            "description": "The value indicating whether to validate character set in the message.",
            "type": "boolean"
          },
          "validateEDITypes": {
            "description": "The value indicating whether to Whether to validate EDI types.",
            "type": "boolean"
          },
          "validateXSDTypes": {
            "description": "The value indicating whether to Whether to validate XSD types.",
            "type": "boolean"
          }
        },
        "required": [
          "validateCharacterSet",
          "checkDuplicateInterchangeControlNumber",
          "interchangeControlNumberValidityDays",
          "checkDuplicateGroupControlNumber",
          "checkDuplicateTransactionSetControlNumber",
          "validateEDITypes",
          "validateXSDTypes",
          "allowLeadingAndTrailingSpacesAndZeroes",
          "trimLeadingAndTrailingSpacesAndZeroes",
          "trailingSeparatorPolicy"
        ],
        "type": "object"
      },
      "EncryptionAlgorithm": {
        "enum": [
          "NotSpecified",
          "None",
          "DES3",
          "RC2",
          "AES128",
          "AES192",
          "AES256"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EncryptionAlgorithm"
        }
      },
      "ErrorInfo": {
        "additionalProperties": false,
        "description": "The error info.",
        "properties": {
          "code": {
            "description": "The error code.",
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "type": "object"
      },
      "ErrorProperties": {
        "description": "Error properties indicate why the Logic service was not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "code": {
            "description": "Error code.",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates Logic service is not able to process the incoming request. The error property contains the error details.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorProperties",
            "description": "The error properties."
          }
        },
        "type": "object"
      },
      "EventLevel": {
        "description": "The event level.",
        "enum": [
          "LogAlways",
          "Critical",
          "Error",
          "Warning",
          "Informational",
          "Verbose"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "EventLevel"
        }
      },
      "Expression": {
        "additionalProperties": false,
        "properties": {
          "error": {
            "$ref": "#/components/schemas/AzureResourceErrorInfo"
          },
          "subexpressions": {
            "items": {
              "$ref": "#/components/schemas/Expression"
            },
            "type": "array"
          },
          "text": {
            "type": "string"
          },
          "value": {}
        },
        "type": "object"
      },
      "ExpressionRoot": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Expression"
          }
        ],
        "properties": {
          "path": {
            "description": "The path.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpressionTraces": {
        "properties": {
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/ExpressionRoot"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GenerateUpgradedDefinitionParameters": {
        "description": "The parameters to generate upgraded definition.",
        "properties": {
          "targetSchemaVersion": {
            "description": "The target schema version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetCallbackUrlParameters": {
        "description": "The callback url parameters.",
        "properties": {
          "keyType": {
            "$ref": "#/components/schemas/KeyType",
            "description": "The key type."
          },
          "notAfter": {
            "description": "The expiry time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "HashingAlgorithm": {
        "enum": [
          "NotSpecified",
          "None",
          "MD5",
          "SHA1",
          "SHA2256",
          "SHA2384",
          "SHA2512"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "HashingAlgorithm"
        }
      },
      "IntegrationAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountProperties",
            "description": "The integration account properties.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/IntegrationAccountSku",
            "description": "The sku."
          }
        },
        "type": "object"
      },
      "IntegrationAccountAgreement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account agreement.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountAgreementProperties",
            "description": "The integration account agreement properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountAgreementFilter": {
        "description": "The integration account agreement filter for odata query.",
        "properties": {
          "agreementType": {
            "$ref": "#/components/schemas/AgreementType",
            "description": "The agreement type of integration account agreement."
          }
        },
        "required": [
          "agreementType"
        ],
        "type": "object"
      },
      "IntegrationAccountAgreementListResult": {
        "description": "The list of integration account agreements.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account agreements.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountAgreement"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountAgreementProperties": {
        "description": "The integration account agreement properties.",
        "properties": {
          "agreementType": {
            "$ref": "#/components/schemas/AgreementType",
            "description": "The agreement type."
          },
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/AgreementContent",
            "description": "The agreement content."
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "guestIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The business identity of the guest partner."
          },
          "guestPartner": {
            "description": "The integration account partner that is set as guest partner for this agreement.",
            "type": "string"
          },
          "hostIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The business identity of the host partner."
          },
          "hostPartner": {
            "description": "The integration account partner that is set as host partner for this agreement.",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata.",
            "properties": {},
            "type": "object"
          }
        },
        "required": [
          "hostPartner",
          "guestPartner",
          "hostIdentity",
          "guestIdentity",
          "agreementType",
          "content"
        ],
        "type": "object"
      },
      "IntegrationAccountCertificate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account certificate.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountCertificateProperties",
            "description": "The integration account certificate properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountCertificateListResult": {
        "description": "The list of integration account certificates.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account certificates.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountCertificate"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountCertificateProperties": {
        "description": "The integration account certificate properties.",
        "properties": {
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "key": {
            "$ref": "#/components/schemas/KeyVaultKeyReference",
            "description": "The key details in the key vault."
          },
          "metadata": {
            "description": "The metadata.",
            "properties": {},
            "type": "object"
          },
          "publicCertificate": {
            "description": "The public certificate.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntegrationAccountListResult": {
        "description": "The list of integration accounts.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration accounts.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccount"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountMap": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account map.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountMapProperties",
            "description": "The integration account map properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountMapFilter": {
        "description": "The integration account map filter for odata query.",
        "properties": {
          "mapType": {
            "$ref": "#/components/schemas/MapType",
            "description": "The map type of integration account map."
          }
        },
        "required": [
          "mapType"
        ],
        "type": "object"
      },
      "IntegrationAccountMapListResult": {
        "description": "The list of integration account maps.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account maps.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountMap"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountMapProperties": {
        "description": "The integration account map.",
        "properties": {
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "description": "The content.",
            "properties": {},
            "type": "string"
          },
          "contentLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "The content link.",
            "readOnly": true
          },
          "contentType": {
            "description": "The content type.",
            "type": "string"
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "mapType": {
            "$ref": "#/components/schemas/MapType",
            "description": "The map type."
          },
          "metadata": {
            "description": "The metadata.",
            "properties": {},
            "type": "object"
          },
          "parametersSchema": {
            "description": "The parameters schema of integration account map.",
            "properties": {
              "ref": {
                "description": "The reference name.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "mapType"
        ],
        "type": "object"
      },
      "IntegrationAccountPartner": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account partner.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountPartnerProperties",
            "description": "The integration account partner properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountPartnerFilter": {
        "description": "The integration account partner filter for odata query.",
        "properties": {
          "partnerType": {
            "$ref": "#/components/schemas/PartnerType",
            "description": "The partner type of integration account partner."
          }
        },
        "required": [
          "partnerType"
        ],
        "type": "object"
      },
      "IntegrationAccountPartnerListResult": {
        "description": "The list of integration account partners.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account partners.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountPartner"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountPartnerProperties": {
        "description": "The integration account partner properties.",
        "properties": {
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/PartnerContent",
            "description": "The partner content."
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "metadata": {
            "description": "The metadata.",
            "properties": {},
            "type": "object"
          },
          "partnerType": {
            "$ref": "#/components/schemas/PartnerType",
            "description": "The partner type."
          }
        },
        "required": [
          "partnerType",
          "content"
        ],
        "type": "object"
      },
      "IntegrationAccountProperties": {
        "properties": {},
        "type": "object"
      },
      "IntegrationAccountSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account schema.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountSchemaProperties",
            "description": "The integration account schema properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountSchemaFilter": {
        "description": "The integration account schema filter for odata query.",
        "properties": {
          "schemaType": {
            "$ref": "#/components/schemas/SchemaType",
            "description": "The schema type of integration account schema."
          }
        },
        "required": [
          "schemaType"
        ],
        "type": "object"
      },
      "IntegrationAccountSchemaListResult": {
        "description": "The list of integration account schemas.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account schemas.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountSchema"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountSchemaProperties": {
        "description": "The integration account schema properties.",
        "properties": {
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "description": "The content.",
            "properties": {},
            "type": "string"
          },
          "contentLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "The content link.",
            "readOnly": true
          },
          "contentType": {
            "description": "The content type.",
            "type": "string"
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "documentName": {
            "description": "The document name.",
            "type": "string"
          },
          "fileName": {
            "description": "The file name.",
            "type": "string"
          },
          "metadata": {
            "description": "The metadata.",
            "properties": {},
            "type": "object"
          },
          "schemaType": {
            "$ref": "#/components/schemas/SchemaType",
            "description": "The schema type."
          },
          "targetNamespace": {
            "description": "The target namespace of the schema.",
            "type": "string"
          }
        },
        "required": [
          "schemaType"
        ],
        "type": "object"
      },
      "IntegrationAccountSession": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The integration account session.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IntegrationAccountSessionProperties",
            "description": "The integration account session properties.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "IntegrationAccountSessionFilter": {
        "description": "The integration account session filter.",
        "properties": {
          "changedTime": {
            "description": "The changed time of integration account sessions.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "changedTime"
        ],
        "type": "object"
      },
      "IntegrationAccountSessionListResult": {
        "description": "The list of integration account sessions.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of integration account sessions.",
            "items": {
              "$ref": "#/components/schemas/IntegrationAccountSession"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IntegrationAccountSessionProperties": {
        "description": "The integration account session properties.",
        "properties": {
          "changedTime": {
            "description": "The changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "content": {
            "$ref": "#/components/schemas/Object",
            "description": "The session content."
          },
          "createdTime": {
            "description": "The created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IntegrationAccountSku": {
        "description": "The integration account sku.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/IntegrationAccountSkuName",
            "description": "The sku name."
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "IntegrationAccountSkuName": {
        "enum": [
          "NotSpecified",
          "Free",
          "Basic",
          "Standard"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "IntegrationAccountSkuName"
        }
      },
      "JsonSchema": {
        "description": "The JSON schema.",
        "properties": {
          "content": {
            "description": "The JSON content.",
            "type": "string"
          },
          "title": {
            "description": "The JSON title.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyType": {
        "enum": [
          "NotSpecified",
          "Primary",
          "Secondary"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "KeyType"
        }
      },
      "KeyVaultKey": {
        "description": "The key vault key.",
        "properties": {
          "attributes": {
            "description": "The key attributes.",
            "properties": {
              "created": {
                "description": "When the key was created.",
                "format": "int64",
                "type": "integer"
              },
              "enabled": {
                "description": "Whether the key is enabled or not.",
                "type": "boolean"
              },
              "updated": {
                "description": "When the key was updated.",
                "format": "int64",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "kid": {
            "description": "The key id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyVaultKeyCollection": {
        "description": "Collection of key vault keys.",
        "properties": {
          "skipToken": {
            "description": "The skip token.",
            "type": "string"
          },
          "value": {
            "description": "The key vault keys.",
            "items": {
              "$ref": "#/components/schemas/KeyVaultKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KeyVaultKeyReference": {
        "description": "The reference to the key vault key.",
        "properties": {
          "keyName": {
            "description": "The private key name in key vault.",
            "type": "string"
          },
          "keyVault": {
            "description": "The key vault reference.",
            "properties": {
              "id": {
                "description": "The resource id.",
                "type": "string"
              },
              "name": {
                "description": "The resource name.",
                "readOnly": true,
                "type": "string"
              },
              "type": {
                "description": "The resource type.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "keyVersion": {
            "description": "The private key version in key vault.",
            "type": "string"
          }
        },
        "required": [
          "keyVault",
          "keyName"
        ],
        "type": "object"
      },
      "KeyVaultReference": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceReference"
          }
        ],
        "description": "The key vault reference.",
        "properties": {
          "name": {
            "description": "The key vault name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListKeyVaultKeysDefinition": {
        "additionalProperties": false,
        "description": "The list key vault keys definition.",
        "properties": {
          "keyVault": {
            "$ref": "#/components/schemas/KeyVaultReference",
            "description": "The key vault reference."
          },
          "skipToken": {
            "description": "The skip token.",
            "type": "string"
          }
        },
        "required": [
          "keyVault"
        ],
        "type": "object"
      },
      "MapType": {
        "enum": [
          "NotSpecified",
          "Xslt",
          "Xslt20",
          "Xslt30",
          "Liquid"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MapType"
        }
      },
      "MessageFilterType": {
        "enum": [
          "NotSpecified",
          "Include",
          "Exclude"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "MessageFilterType"
        }
      },
      "Object": {
        "properties": {},
        "type": "object"
      },
      "Operation": {
        "description": "Logic REST API operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Logic",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Logic operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Logic operations supported by the Logic resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "OperationResult": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResultProperties"
          }
        ],
        "description": "The operation result definition.",
        "properties": {
          "inputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the inputs.",
            "readOnly": true
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to inputs.",
            "readOnly": true
          },
          "iterationCount": {
            "format": "int32",
            "type": "integer"
          },
          "outputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the outputs.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to outputs.",
            "readOnly": true
          },
          "retryHistory": {
            "description": "Gets the retry histories.",
            "items": {
              "$ref": "#/components/schemas/RetryHistory"
            },
            "type": "array"
          },
          "trackedProperties": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the tracked properties.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the tracking id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationResultProperties": {
        "additionalProperties": false,
        "description": "The run operation result properties.",
        "properties": {
          "code": {
            "description": "The workflow scope repetition code.",
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/RunActionCorrelation",
            "description": "The correlation properties."
          },
          "endTime": {
            "description": "The end time of the workflow scope repetition.",
            "format": "date-time",
            "type": "string"
          },
          "error": {},
          "startTime": {
            "description": "The start time of the workflow scope repetition.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "The status of the workflow scope repetition."
          }
        },
        "type": "object",
        "x-abstract": true
      },
      "ParameterType": {
        "enum": [
          "NotSpecified",
          "String",
          "SecureString",
          "Int",
          "Float",
          "Bool",
          "Array",
          "Object",
          "SecureObject"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ParameterType"
        }
      },
      "PartnerContent": {
        "description": "The integration account partner content.",
        "properties": {
          "b2b": {
            "$ref": "#/components/schemas/B2BPartnerContent",
            "description": "The B2B partner content."
          }
        },
        "type": "object"
      },
      "PartnerType": {
        "enum": [
          "NotSpecified",
          "B2B"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "PartnerType"
        }
      },
      "RecurrenceFrequency": {
        "enum": [
          "NotSpecified",
          "Second",
          "Minute",
          "Hour",
          "Day",
          "Week",
          "Month",
          "Year"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "RecurrenceFrequency"
        }
      },
      "RecurrenceSchedule": {
        "description": "The recurrence schedule.",
        "properties": {
          "hours": {
            "description": "The hours.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "minutes": {
            "description": "The minutes.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "monthDays": {
            "description": "The month days.",
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "monthlyOccurrences": {
            "description": "The monthly occurrences.",
            "items": {
              "$ref": "#/components/schemas/RecurrenceScheduleOccurrence"
            },
            "type": "array"
          },
          "weekDays": {
            "description": "The days of the week.",
            "items": {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": false,
                "name": "DaysOfWeek"
              }
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecurrenceScheduleOccurrence": {
        "description": "The recurrence schedule occurrence.",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/DayOfWeek",
            "description": "The day of the week."
          },
          "occurrence": {
            "description": "The occurrence.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RegenerateActionParameter": {
        "description": "The access key regenerate action content.",
        "properties": {
          "keyType": {
            "$ref": "#/components/schemas/KeyType",
            "description": "The key type."
          }
        },
        "type": "object"
      },
      "RepetitionIndex": {
        "additionalProperties": false,
        "description": "The workflow run action repetition index.",
        "properties": {
          "itemIndex": {
            "description": "The index.",
            "format": "int32",
            "type": "integer"
          },
          "scopeName": {
            "description": "The scope.",
            "type": "string"
          }
        },
        "required": [
          "itemIndex"
        ],
        "type": "object"
      },
      "Request": {
        "additionalProperties": false,
        "description": "A request.",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/Object",
            "description": "A list of all the headers attached to the request."
          },
          "method": {
            "description": "The HTTP method used for the request.",
            "type": "string"
          },
          "uri": {
            "description": "The destination for the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RequestHistory": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The request history.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RequestHistoryProperties",
            "description": "The request history properties."
          }
        },
        "type": "object"
      },
      "RequestHistoryListResult": {
        "description": "The list of workflow request histories.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow request histories.",
            "items": {
              "$ref": "#/components/schemas/RequestHistory"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RequestHistoryProperties": {
        "additionalProperties": false,
        "description": "The request history.",
        "properties": {
          "endTime": {
            "description": "The time the request ended.",
            "format": "date-time",
            "type": "string"
          },
          "request": {
            "$ref": "#/components/schemas/Request",
            "description": "The request."
          },
          "response": {
            "$ref": "#/components/schemas/Response",
            "description": "The response."
          },
          "startTime": {
            "description": "The time the request started.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The base resource type.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "id": {
            "description": "The resource id.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The resource location.",
            "type": "string"
          },
          "name": {
            "description": "Gets the resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Gets the resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceReference": {
        "description": "The resource reference.",
        "properties": {
          "id": {
            "description": "The resource id.",
            "type": "string"
          },
          "name": {
            "description": "Gets the resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Gets the resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Response": {
        "additionalProperties": false,
        "description": "A response.",
        "properties": {
          "bodyLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Details on the location of the body content."
          },
          "headers": {
            "$ref": "#/components/schemas/Object",
            "description": "A list of all the headers attached to the response."
          },
          "statusCode": {
            "description": "The status code of the response.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RetryHistory": {
        "description": "The retry history.",
        "properties": {
          "clientRequestId": {
            "description": "Gets the client request Id.",
            "type": "string"
          },
          "code": {
            "description": "Gets the status code.",
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/ErrorResponse",
            "description": "Gets the error response."
          },
          "serviceRequestId": {
            "description": "Gets the service request Id.",
            "type": "string"
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunActionCorrelation": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/RunCorrelation"
          }
        ],
        "description": "The workflow run action correlation properties.",
        "properties": {
          "actionTrackingId": {
            "description": "The action tracking identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunCorrelation": {
        "additionalProperties": false,
        "description": "The correlation properties.",
        "properties": {
          "clientKeywords": {
            "description": "The client keywords.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "clientTrackingId": {
            "description": "The client tracking identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SchemaType": {
        "enum": [
          "NotSpecified",
          "Xml"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SchemaType"
        }
      },
      "SegmentTerminatorSuffix": {
        "enum": [
          "NotSpecified",
          "None",
          "CR",
          "LF",
          "CRLF"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "SegmentTerminatorSuffix"
        }
      },
      "SetTriggerStateActionDefinition": {
        "additionalProperties": false,
        "properties": {
          "source": {
            "$ref": "#/components/schemas/WorkflowTrigger"
          }
        },
        "required": [
          "source"
        ],
        "type": "object"
      },
      "SigningAlgorithm": {
        "enum": [
          "NotSpecified",
          "Default",
          "SHA1",
          "SHA2256",
          "SHA2384",
          "SHA2512"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SigningAlgorithm"
        }
      },
      "Sku": {
        "description": "The sku type.",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SkuName",
            "description": "The name."
          },
          "plan": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "The reference to plan."
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "SkuName": {
        "description": "The sku name.",
        "enum": [
          "NotSpecified",
          "Free",
          "Shared",
          "Basic",
          "Standard",
          "Premium"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "SkuName"
        }
      },
      "SubResource": {
        "description": "The sub resource type.",
        "properties": {
          "id": {
            "description": "The resource id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "TrackEventsOperationOptions": {
        "description": "The track events operation options.",
        "enum": [
          "None",
          "DisableSourceInfoEnrich"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TrackEventsOperationOptions"
        }
      },
      "TrackingEvent": {
        "additionalProperties": false,
        "properties": {
          "error": {
            "$ref": "#/components/schemas/TrackingEventErrorInfo"
          },
          "eventLevel": {
            "$ref": "#/components/schemas/EventLevel"
          },
          "eventTime": {
            "format": "date-time",
            "type": "string"
          },
          "recordType": {
            "$ref": "#/components/schemas/TrackingRecordType"
          }
        },
        "required": [
          "eventLevel",
          "eventTime",
          "recordType"
        ],
        "type": "object"
      },
      "TrackingEventErrorInfo": {
        "additionalProperties": false,
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "TrackingEventsDefinition": {
        "additionalProperties": false,
        "properties": {
          "events": {
            "items": {
              "$ref": "#/components/schemas/TrackingEvent"
            },
            "type": "array"
          },
          "sourceType": {
            "type": "string"
          },
          "trackEventsOptions": {
            "$ref": "#/components/schemas/TrackEventsOperationOptions"
          }
        },
        "required": [
          "sourceType",
          "events"
        ],
        "type": "object"
      },
      "TrackingRecordType": {
        "description": "The tracking record type.",
        "enum": [
          "NotSpecified",
          "Custom",
          "AS2Message",
          "AS2MDN",
          "X12Interchange",
          "X12FunctionalGroup",
          "X12TransactionSet",
          "X12InterchangeAcknowledgment",
          "X12FunctionalGroupAcknowledgment",
          "X12TransactionSetAcknowledgment",
          "EdifactInterchange",
          "EdifactFunctionalGroup",
          "EdifactTransactionSet",
          "EdifactInterchangeAcknowledgment",
          "EdifactFunctionalGroupAcknowledgment",
          "EdifactTransactionSetAcknowledgment"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TrackingRecordType"
        }
      },
      "TrailingSeparatorPolicy": {
        "enum": [
          "NotSpecified",
          "NotAllowed",
          "Optional",
          "Mandatory"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "TrailingSeparatorPolicy"
        }
      },
      "UsageIndicator": {
        "enum": [
          "NotSpecified",
          "Test",
          "Information",
          "Production"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "UsageIndicator"
        }
      },
      "Workflow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The workflow type.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkflowProperties",
            "description": "The workflow properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkflowFilter": {
        "description": "The workflow filter.",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "The state of workflows."
          }
        },
        "type": "object"
      },
      "WorkflowListResult": {
        "description": "The list of workflows.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of workflows.",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowOutputParameter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowParameter"
          }
        ],
        "description": "The workflow output parameter.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowParameter": {
        "description": "The workflow parameters.",
        "properties": {
          "description": {
            "description": "The description.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Object",
            "description": "The metadata."
          },
          "type": {
            "$ref": "#/components/schemas/ParameterType",
            "description": "The type."
          },
          "value": {
            "$ref": "#/components/schemas/Object",
            "description": "The value."
          }
        },
        "type": "object"
      },
      "WorkflowProperties": {
        "description": "The workflow properties.",
        "properties": {
          "parameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowParameter"
            },
            "description": "The parameters.",
            "type": "object"
          },
          "accessEndpoint": {
            "description": "Gets the access endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "definition": {
            "$ref": "#/components/schemas/Object",
            "description": "The definition. See [Schema reference for Workflow Definition Language in Azure Logic Apps](https://aka.ms/logic-apps-workflow-definition-language)."
          },
          "integrationAccount": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "The integration account."
          },
          "provisioningState": {
            "$ref": "#/components/schemas/WorkflowProvisioningState",
            "description": "Gets the provisioning state.",
            "readOnly": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku."
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "The state."
          },
          "version": {
            "description": "Gets the version.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowProvisioningState": {
        "enum": [
          "NotSpecified",
          "Accepted",
          "Running",
          "Ready",
          "Creating",
          "Created",
          "Deleting",
          "Deleted",
          "Canceled",
          "Failed",
          "Succeeded",
          "Moving",
          "Updating",
          "Registering",
          "Registered",
          "Unregistering",
          "Unregistered",
          "Completed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "WorkflowProvisioningState"
        }
      },
      "WorkflowRun": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "The workflow run.",
        "properties": {
          "name": {
            "description": "Gets the workflow run name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowRunProperties",
            "description": "The workflow run properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow run type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "The workflow run action.",
        "properties": {
          "name": {
            "description": "Gets the workflow run action name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowRunActionProperties",
            "description": "The workflow run action properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow run action type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionFilter": {
        "description": "The workflow run action filter.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "The status of workflow run action."
          }
        },
        "type": "object"
      },
      "WorkflowRunActionListResult": {
        "description": "The list of workflow run actions.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow run actions.",
            "items": {
              "$ref": "#/components/schemas/WorkflowRunAction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionProperties": {
        "description": "The workflow run action properties.",
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/Correlation",
            "description": "The correlation properties."
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to inputs.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to outputs.",
            "readOnly": true
          },
          "retryHistory": {
            "description": "Gets the retry histories.",
            "items": {
              "$ref": "#/components/schemas/RetryHistory"
            },
            "type": "array"
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackedProperties": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the tracked properties.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the tracking id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionRepetitionDefinition": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The workflow run action repetition definition.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkflowRunActionRepetitionProperties",
            "description": "The workflow run action repetition properties definition.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "WorkflowRunActionRepetitionDefinitionCollection": {
        "description": "A collection of workflow run action repetitions.",
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/WorkflowRunActionRepetitionDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionRepetitionProperties": {
        "additionalProperties": false,
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationResult"
          }
        ],
        "description": "The workflow run action repetition properties definition.",
        "properties": {
          "repetitionIndexes": {
            "description": "The repetition indexes.",
            "items": {
              "$ref": "#/components/schemas/RepetitionIndex"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunFilter": {
        "description": "The workflow run filter.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "The status of workflow run."
          }
        },
        "type": "object"
      },
      "WorkflowRunListResult": {
        "description": "The list of workflow runs.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow runs.",
            "items": {
              "$ref": "#/components/schemas/WorkflowRun"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunProperties": {
        "description": "The workflow run properties.",
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/Correlation",
            "description": "The run correlation."
          },
          "correlationId": {
            "description": "Gets the correlation id.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "outputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowOutputParameter"
            },
            "description": "Gets the outputs.",
            "readOnly": true,
            "type": "object"
          },
          "response": {
            "$ref": "#/components/schemas/WorkflowRunTrigger",
            "description": "Gets the response of the flow run.",
            "readOnly": true
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowRunTrigger",
            "description": "Gets the fired trigger.",
            "readOnly": true
          },
          "waitEndTime": {
            "description": "Gets the wait end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "workflow": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow version.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowRunTrigger": {
        "description": "The workflow run trigger.",
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/Correlation",
            "description": "The run correlation."
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "inputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the inputs.",
            "readOnly": true
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to inputs.",
            "readOnly": true
          },
          "name": {
            "description": "Gets the name.",
            "readOnly": true,
            "type": "string"
          },
          "outputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the outputs.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to outputs.",
            "readOnly": true
          },
          "scheduledTime": {
            "description": "Gets the scheduled time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackedProperties": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the tracked properties.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the tracking id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowState": {
        "enum": [
          "NotSpecified",
          "Completed",
          "Enabled",
          "Disabled",
          "Deleted",
          "Suspended"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "WorkflowState"
        }
      },
      "WorkflowStatus": {
        "enum": [
          "NotSpecified",
          "Paused",
          "Running",
          "Waiting",
          "Succeeded",
          "Skipped",
          "Suspended",
          "Cancelled",
          "Failed",
          "Faulted",
          "TimedOut",
          "Aborted",
          "Ignored"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "WorkflowStatus"
        }
      },
      "WorkflowTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "The workflow trigger.",
        "properties": {
          "name": {
            "description": "Gets the workflow trigger name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowTriggerProperties",
            "description": "The workflow trigger properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow trigger type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerCallbackUrl": {
        "description": "The workflow trigger callback URL.",
        "properties": {
          "basePath": {
            "description": "Gets the workflow trigger callback URL base path.",
            "readOnly": true,
            "type": "string"
          },
          "method": {
            "description": "Gets the workflow trigger callback URL HTTP method.",
            "readOnly": true,
            "type": "string"
          },
          "queries": {
            "$ref": "#/components/schemas/WorkflowTriggerListCallbackUrlQueries",
            "description": "Gets the workflow trigger callback URL query parameters."
          },
          "relativePath": {
            "description": "Gets the workflow trigger callback URL relative path.",
            "readOnly": true,
            "type": "string"
          },
          "relativePathParameters": {
            "description": "Gets the workflow trigger callback URL relative path parameters.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "value": {
            "description": "Gets the workflow trigger callback URL.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerFilter": {
        "description": "The workflow trigger filter.",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "The state of workflow trigger."
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "description": "The workflow trigger history.",
        "properties": {
          "name": {
            "description": "Gets the workflow trigger history name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowTriggerHistoryProperties",
            "description": "Gets the workflow trigger history properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow trigger history type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryFilter": {
        "description": "The workflow trigger history filter.",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "The status of workflow trigger history."
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryListResult": {
        "description": "The list of workflow trigger histories.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow trigger histories.",
            "items": {
              "$ref": "#/components/schemas/WorkflowTriggerHistory"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryProperties": {
        "description": "The workflow trigger history properties.",
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "correlation": {
            "$ref": "#/components/schemas/Correlation",
            "description": "The run correlation."
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "fired": {
            "description": "Gets a value indicating whether trigger was fired.",
            "readOnly": true,
            "type": "boolean"
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to input parameters.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to output parameters.",
            "readOnly": true
          },
          "run": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow run.",
            "readOnly": true
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the tracking id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerListCallbackUrlQueries": {
        "description": "Gets the workflow trigger callback URL query parameters.",
        "properties": {
          "api-version": {
            "description": "The api version.",
            "type": "string"
          },
          "se": {
            "description": "The SAS timestamp.",
            "type": "string"
          },
          "sig": {
            "description": "The SAS signature.",
            "type": "string"
          },
          "sp": {
            "description": "The SAS permissions.",
            "type": "string"
          },
          "sv": {
            "description": "The SAS version.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerListResult": {
        "description": "The list of workflow triggers.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow triggers.",
            "items": {
              "$ref": "#/components/schemas/WorkflowTrigger"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerProperties": {
        "description": "The workflow trigger properties.",
        "properties": {
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastExecutionTime": {
            "description": "Gets the last execution time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "nextExecutionTime": {
            "description": "Gets the next execution time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "$ref": "#/components/schemas/WorkflowTriggerProvisioningState",
            "description": "Gets the provisioning state.",
            "readOnly": true
          },
          "recurrence": {
            "$ref": "#/components/schemas/WorkflowTriggerRecurrence",
            "description": "Gets the workflow trigger recurrence.",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets the state.",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "workflow": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowTriggerProvisioningState": {
        "enum": [
          "NotSpecified",
          "Accepted",
          "Running",
          "Ready",
          "Creating",
          "Created",
          "Deleting",
          "Deleted",
          "Canceled",
          "Failed",
          "Succeeded",
          "Moving",
          "Updating",
          "Registering",
          "Registered",
          "Unregistering",
          "Unregistered",
          "Completed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "WorkflowTriggerProvisioningState"
        }
      },
      "WorkflowTriggerRecurrence": {
        "description": "The workflow trigger recurrence.",
        "properties": {
          "endTime": {
            "description": "The end time.",
            "type": "string"
          },
          "frequency": {
            "$ref": "#/components/schemas/RecurrenceFrequency",
            "description": "The frequency."
          },
          "interval": {
            "description": "The interval.",
            "format": "int32",
            "type": "integer"
          },
          "schedule": {
            "$ref": "#/components/schemas/RecurrenceSchedule",
            "description": "The recurrence schedule."
          },
          "startTime": {
            "description": "The start time.",
            "type": "string"
          },
          "timeZone": {
            "description": "The time zone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The workflow version.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkflowVersionProperties",
            "description": "The workflow version properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkflowVersionListResult": {
        "description": "The list of workflow versions.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of workflow versions.",
            "items": {
              "$ref": "#/components/schemas/WorkflowVersion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowVersionProperties": {
        "description": "The workflow version properties.",
        "properties": {
          "parameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowParameter"
            },
            "description": "The parameters.",
            "type": "object"
          },
          "accessEndpoint": {
            "description": "Gets the access endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "definition": {
            "$ref": "#/components/schemas/Object",
            "description": "The definition."
          },
          "integrationAccount": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "The integration account."
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The sku."
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "The state."
          },
          "version": {
            "description": "Gets the version.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "X12AcknowledgementSettings": {
        "description": "The X12 agreement acknowledgement settings.",
        "properties": {
          "acknowledgementControlNumberLowerBound": {
            "description": "The acknowledgement control number lower bound.",
            "format": "int32",
            "type": "integer"
          },
          "acknowledgementControlNumberPrefix": {
            "description": "The acknowledgement control number prefix.",
            "type": "string"
          },
          "acknowledgementControlNumberSuffix": {
            "description": "The acknowledgement control number suffix.",
            "type": "string"
          },
          "acknowledgementControlNumberUpperBound": {
            "description": "The acknowledgement control number upper bound.",
            "format": "int32",
            "type": "integer"
          },
          "batchFunctionalAcknowledgements": {
            "description": "The value indicating whether to batch functional acknowledgements.",
            "type": "boolean"
          },
          "batchImplementationAcknowledgements": {
            "description": "The value indicating whether to batch implementation acknowledgements.",
            "type": "boolean"
          },
          "batchTechnicalAcknowledgements": {
            "description": "The value indicating whether to batch the technical acknowledgements.",
            "type": "boolean"
          },
          "functionalAcknowledgementVersion": {
            "description": "The functional acknowledgement version.",
            "type": "string"
          },
          "implementationAcknowledgementVersion": {
            "description": "The implementation acknowledgement version.",
            "type": "string"
          },
          "needFunctionalAcknowledgement": {
            "description": "The value indicating whether functional acknowledgement is needed.",
            "type": "boolean"
          },
          "needImplementationAcknowledgement": {
            "description": "The value indicating whether implementation acknowledgement is needed.",
            "type": "boolean"
          },
          "needLoopForValidMessages": {
            "description": "The value indicating whether a loop is needed for valid messages.",
            "type": "boolean"
          },
          "needTechnicalAcknowledgement": {
            "description": "The value indicating whether technical acknowledgement is needed.",
            "type": "boolean"
          },
          "rolloverAcknowledgementControlNumber": {
            "description": "The value indicating whether to rollover acknowledgement control number.",
            "type": "boolean"
          },
          "sendSynchronousAcknowledgement": {
            "description": "The value indicating whether to send synchronous acknowledgement.",
            "type": "boolean"
          }
        },
        "required": [
          "needTechnicalAcknowledgement",
          "batchTechnicalAcknowledgements",
          "needFunctionalAcknowledgement",
          "batchFunctionalAcknowledgements",
          "needImplementationAcknowledgement",
          "batchImplementationAcknowledgements",
          "needLoopForValidMessages",
          "sendSynchronousAcknowledgement",
          "acknowledgementControlNumberLowerBound",
          "acknowledgementControlNumberUpperBound",
          "rolloverAcknowledgementControlNumber"
        ],
        "type": "object"
      },
      "X12AgreementContent": {
        "description": "The X12 agreement content.",
        "properties": {
          "receiveAgreement": {
            "$ref": "#/components/schemas/X12OneWayAgreement",
            "description": "The X12 one-way receive agreement."
          },
          "sendAgreement": {
            "$ref": "#/components/schemas/X12OneWayAgreement",
            "description": "The X12 one-way send agreement."
          }
        },
        "required": [
          "receiveAgreement",
          "sendAgreement"
        ],
        "type": "object"
      },
      "X12CharacterSet": {
        "enum": [
          "NotSpecified",
          "Basic",
          "Extended",
          "UTF8"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "X12CharacterSet"
        }
      },
      "X12DateFormat": {
        "enum": [
          "NotSpecified",
          "CCYYMMDD",
          "YYMMDD"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "X12DateFormat"
        }
      },
      "X12DelimiterOverrides": {
        "description": "The X12 delimiter override settings.",
        "properties": {
          "componentSeparator": {
            "description": "The component separator.",
            "format": "int32",
            "type": "integer"
          },
          "dataElementSeparator": {
            "description": "The data element separator.",
            "format": "int32",
            "type": "integer"
          },
          "messageId": {
            "description": "The message id.",
            "type": "string"
          },
          "protocolVersion": {
            "description": "The protocol version.",
            "type": "string"
          },
          "replaceCharacter": {
            "description": "The replacement character.",
            "format": "int32",
            "type": "integer"
          },
          "replaceSeparatorsInPayload": {
            "description": "The value indicating whether to replace separators in payload.",
            "type": "boolean"
          },
          "segmentTerminator": {
            "description": "The segment terminator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminatorSuffix": {
            "$ref": "#/components/schemas/SegmentTerminatorSuffix",
            "description": "The segment terminator suffix."
          },
          "targetNamespace": {
            "description": "The target namespace on which this delimiter settings has to be applied.",
            "type": "string"
          }
        },
        "required": [
          "dataElementSeparator",
          "componentSeparator",
          "segmentTerminator",
          "segmentTerminatorSuffix",
          "replaceCharacter",
          "replaceSeparatorsInPayload"
        ],
        "type": "object"
      },
      "X12EnvelopeOverride": {
        "description": "The X12 envelope override settings.",
        "properties": {
          "dateFormat": {
            "$ref": "#/components/schemas/X12DateFormat",
            "description": "The date format."
          },
          "functionalIdentifierCode": {
            "description": "The functional identifier code.",
            "type": "string"
          },
          "headerVersion": {
            "description": "The header version.",
            "type": "string"
          },
          "messageId": {
            "description": "The message id on which this envelope settings has to be applied.",
            "type": "string"
          },
          "protocolVersion": {
            "description": "The protocol version on which this envelope settings has to be applied.",
            "type": "string"
          },
          "receiverApplicationId": {
            "description": "The receiver application id.",
            "type": "string"
          },
          "responsibleAgencyCode": {
            "description": "The responsible agency code.",
            "type": "string"
          },
          "senderApplicationId": {
            "description": "The sender application id.",
            "type": "string"
          },
          "targetNamespace": {
            "description": "The target namespace on which this envelope settings has to be applied.",
            "type": "string"
          },
          "timeFormat": {
            "$ref": "#/components/schemas/X12TimeFormat",
            "description": "The time format."
          }
        },
        "required": [
          "targetNamespace",
          "protocolVersion",
          "messageId",
          "responsibleAgencyCode",
          "headerVersion",
          "senderApplicationId",
          "receiverApplicationId",
          "dateFormat",
          "timeFormat"
        ],
        "type": "object"
      },
      "X12EnvelopeSettings": {
        "description": "The X12 agreement envelope settings.",
        "properties": {
          "controlStandardsId": {
            "description": "The controls standards id.",
            "format": "int32",
            "type": "integer"
          },
          "controlVersionNumber": {
            "description": "The control version number.",
            "type": "string"
          },
          "enableDefaultGroupHeaders": {
            "description": "The value indicating whether to enable default group headers.",
            "type": "boolean"
          },
          "functionalGroupId": {
            "description": "The functional group id.",
            "type": "string"
          },
          "groupControlNumberLowerBound": {
            "description": "The group control number lower bound.",
            "format": "int32",
            "type": "integer"
          },
          "groupControlNumberUpperBound": {
            "description": "The group control number upper bound.",
            "format": "int32",
            "type": "integer"
          },
          "groupHeaderAgencyCode": {
            "description": "The group header agency code.",
            "type": "string"
          },
          "groupHeaderDateFormat": {
            "$ref": "#/components/schemas/X12DateFormat",
            "description": "The group header date format."
          },
          "groupHeaderTimeFormat": {
            "$ref": "#/components/schemas/X12TimeFormat",
            "description": "The group header time format."
          },
          "groupHeaderVersion": {
            "description": "The group header version.",
            "type": "string"
          },
          "interchangeControlNumberLowerBound": {
            "description": "The interchange  control number lower bound.",
            "format": "int32",
            "type": "integer"
          },
          "interchangeControlNumberUpperBound": {
            "description": "The interchange  control number upper bound.",
            "format": "int32",
            "type": "integer"
          },
          "overwriteExistingTransactionSetControlNumber": {
            "description": "The value indicating whether to overwrite existing transaction set control number.",
            "type": "boolean"
          },
          "receiverApplicationId": {
            "description": "The receiver application id.",
            "type": "string"
          },
          "rolloverGroupControlNumber": {
            "description": "The value indicating whether to rollover group control number.",
            "type": "boolean"
          },
          "rolloverInterchangeControlNumber": {
            "description": "The value indicating whether to rollover interchange control number.",
            "type": "boolean"
          },
          "rolloverTransactionSetControlNumber": {
            "description": "The value indicating whether to rollover transaction set control number.",
            "type": "boolean"
          },
          "senderApplicationId": {
            "description": "The sender application id.",
            "type": "string"
          },
          "transactionSetControlNumberLowerBound": {
            "description": "The transaction set control number lower bound.",
            "format": "int32",
            "type": "integer"
          },
          "transactionSetControlNumberPrefix": {
            "description": "The transaction set control number prefix.",
            "type": "string"
          },
          "transactionSetControlNumberSuffix": {
            "description": "The transaction set control number suffix.",
            "type": "string"
          },
          "transactionSetControlNumberUpperBound": {
            "description": "The transaction set control number upper bound.",
            "format": "int32",
            "type": "integer"
          },
          "usageIndicator": {
            "$ref": "#/components/schemas/UsageIndicator",
            "description": "The usage indicator."
          },
          "useControlStandardsIdAsRepetitionCharacter": {
            "description": "The value indicating whether to use control standards id as repetition character.",
            "type": "boolean"
          }
        },
        "required": [
          "controlStandardsId",
          "useControlStandardsIdAsRepetitionCharacter",
          "senderApplicationId",
          "receiverApplicationId",
          "controlVersionNumber",
          "interchangeControlNumberLowerBound",
          "interchangeControlNumberUpperBound",
          "rolloverInterchangeControlNumber",
          "enableDefaultGroupHeaders",
          "groupControlNumberLowerBound",
          "groupControlNumberUpperBound",
          "rolloverGroupControlNumber",
          "groupHeaderAgencyCode",
          "groupHeaderVersion",
          "transactionSetControlNumberLowerBound",
          "transactionSetControlNumberUpperBound",
          "rolloverTransactionSetControlNumber",
          "overwriteExistingTransactionSetControlNumber",
          "groupHeaderDateFormat",
          "groupHeaderTimeFormat",
          "usageIndicator"
        ],
        "type": "object"
      },
      "X12FramingSettings": {
        "description": "The X12 agreement framing settings.",
        "properties": {
          "characterSet": {
            "$ref": "#/components/schemas/X12CharacterSet",
            "description": "The X12 character set."
          },
          "componentSeparator": {
            "description": "The component separator.",
            "format": "int32",
            "type": "integer"
          },
          "dataElementSeparator": {
            "description": "The data element separator.",
            "format": "int32",
            "type": "integer"
          },
          "replaceCharacter": {
            "description": "The replacement character.",
            "format": "int32",
            "type": "integer"
          },
          "replaceSeparatorsInPayload": {
            "description": "The value indicating whether to replace separators in payload.",
            "type": "boolean"
          },
          "segmentTerminator": {
            "description": "The segment terminator.",
            "format": "int32",
            "type": "integer"
          },
          "segmentTerminatorSuffix": {
            "$ref": "#/components/schemas/SegmentTerminatorSuffix",
            "description": "The segment terminator suffix."
          }
        },
        "required": [
          "dataElementSeparator",
          "componentSeparator",
          "replaceSeparatorsInPayload",
          "replaceCharacter",
          "segmentTerminator",
          "characterSet",
          "segmentTerminatorSuffix"
        ],
        "type": "object"
      },
      "X12MessageFilter": {
        "description": "The X12 message filter for odata query.",
        "properties": {
          "messageFilterType": {
            "$ref": "#/components/schemas/MessageFilterType",
            "description": "The message filter type."
          }
        },
        "required": [
          "messageFilterType"
        ],
        "type": "object"
      },
      "X12MessageIdentifier": {
        "description": "The X12 message identifier.",
        "properties": {
          "messageId": {
            "description": "The message id.",
            "type": "string"
          }
        },
        "required": [
          "messageId"
        ],
        "type": "object"
      },
      "X12OneWayAgreement": {
        "description": "The X12 one-way agreement.",
        "properties": {
          "protocolSettings": {
            "$ref": "#/components/schemas/X12ProtocolSettings",
            "description": "The X12 protocol settings."
          },
          "receiverBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The receiver business identity"
          },
          "senderBusinessIdentity": {
            "$ref": "#/components/schemas/BusinessIdentity",
            "description": "The sender business identity"
          }
        },
        "required": [
          "senderBusinessIdentity",
          "receiverBusinessIdentity",
          "protocolSettings"
        ],
        "type": "object"
      },
      "X12ProcessingSettings": {
        "description": "The X12 processing settings.",
        "properties": {
          "convertImpliedDecimal": {
            "description": "The value indicating whether to convert numerical type to implied decimal.",
            "type": "boolean"
          },
          "createEmptyXmlTagsForTrailingSeparators": {
            "description": "The value indicating whether to create empty xml tags for trailing separators.",
            "type": "boolean"
          },
          "maskSecurityInfo": {
            "description": "The value indicating whether to mask security information.",
            "type": "boolean"
          },
          "preserveInterchange": {
            "description": "The value indicating whether to preserve interchange.",
            "type": "boolean"
          },
          "suspendInterchangeOnError": {
            "description": "The value indicating whether to suspend interchange on error.",
            "type": "boolean"
          },
          "useDotAsDecimalSeparator": {
            "description": "The value indicating whether to use dot as decimal separator.",
            "type": "boolean"
          }
        },
        "required": [
          "maskSecurityInfo",
          "convertImpliedDecimal",
          "preserveInterchange",
          "suspendInterchangeOnError",
          "createEmptyXmlTagsForTrailingSeparators",
          "useDotAsDecimalSeparator"
        ],
        "type": "object"
      },
      "X12ProtocolSettings": {
        "description": "The X12 agreement protocol settings.",
        "properties": {
          "acknowledgementSettings": {
            "$ref": "#/components/schemas/X12AcknowledgementSettings",
            "description": "The X12 acknowledgment settings."
          },
          "envelopeOverrides": {
            "description": "The X12 envelope override settings.",
            "items": {
              "$ref": "#/components/schemas/X12EnvelopeOverride"
            },
            "type": "array"
          },
          "envelopeSettings": {
            "$ref": "#/components/schemas/X12EnvelopeSettings",
            "description": "The X12 envelope settings."
          },
          "framingSettings": {
            "$ref": "#/components/schemas/X12FramingSettings",
            "description": "The X12 framing settings."
          },
          "messageFilter": {
            "$ref": "#/components/schemas/X12MessageFilter",
            "description": "The X12 message filter."
          },
          "messageFilterList": {
            "description": "The X12 message filter list.",
            "items": {
              "$ref": "#/components/schemas/X12MessageIdentifier"
            },
            "type": "array"
          },
          "processingSettings": {
            "$ref": "#/components/schemas/X12ProcessingSettings",
            "description": "The X12 processing settings."
          },
          "schemaReferences": {
            "description": "The X12 schema references.",
            "items": {
              "$ref": "#/components/schemas/X12SchemaReference"
            },
            "type": "array"
          },
          "securitySettings": {
            "$ref": "#/components/schemas/X12SecuritySettings",
            "description": "The X12 security settings."
          },
          "validationOverrides": {
            "description": "The X12 validation override settings.",
            "items": {
              "$ref": "#/components/schemas/X12ValidationOverride"
            },
            "type": "array"
          },
          "validationSettings": {
            "$ref": "#/components/schemas/X12ValidationSettings",
            "description": "The X12 validation settings."
          },
          "x12DelimiterOverrides": {
            "description": "The X12 delimiter override settings.",
            "items": {
              "$ref": "#/components/schemas/X12DelimiterOverrides"
            },
            "type": "array"
          }
        },
        "required": [
          "validationSettings",
          "framingSettings",
          "envelopeSettings",
          "acknowledgementSettings",
          "messageFilter",
          "securitySettings",
          "processingSettings",
          "schemaReferences"
        ],
        "type": "object"
      },
      "X12SchemaReference": {
        "description": "The X12 schema reference.",
        "properties": {
          "messageId": {
            "description": "The message id.",
            "type": "string"
          },
          "schemaName": {
            "description": "The schema name.",
            "type": "string"
          },
          "schemaVersion": {
            "description": "The schema version.",
            "type": "string"
          },
          "senderApplicationId": {
            "description": "The sender application id.",
            "type": "string"
          }
        },
        "required": [
          "messageId",
          "schemaVersion",
          "schemaName"
        ],
        "type": "object"
      },
      "X12SecuritySettings": {
        "description": "The X12 agreement security settings.",
        "properties": {
          "authorizationQualifier": {
            "description": "The authorization qualifier.",
            "type": "string"
          },
          "authorizationValue": {
            "description": "The authorization value.",
            "type": "string"
          },
          "passwordValue": {
            "description": "The password value.",
            "type": "string"
          },
          "securityQualifier": {
            "description": "The security qualifier.",
            "type": "string"
          }
        },
        "required": [
          "authorizationQualifier",
          "securityQualifier"
        ],
        "type": "object"
      },
      "X12TimeFormat": {
        "enum": [
          "NotSpecified",
          "HHMM",
          "HHMMSS",
          "HHMMSSdd",
          "HHMMSSd"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "X12TimeFormat"
        }
      },
      "X12ValidationOverride": {
        "description": "The X12 validation override settings.",
        "properties": {
          "allowLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "messageId": {
            "description": "The message id on which the validation settings has to be applied.",
            "type": "string"
          },
          "trailingSeparatorPolicy": {
            "$ref": "#/components/schemas/TrailingSeparatorPolicy",
            "description": "The trailing separator policy."
          },
          "trimLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "validateCharacterSet": {
            "description": "The value indicating whether to validate character Set.",
            "type": "boolean"
          },
          "validateEDITypes": {
            "description": "The value indicating whether to validate EDI types.",
            "type": "boolean"
          },
          "validateXSDTypes": {
            "description": "The value indicating whether to validate XSD types.",
            "type": "boolean"
          }
        },
        "required": [
          "messageId",
          "validateEDITypes",
          "validateXSDTypes",
          "allowLeadingAndTrailingSpacesAndZeroes",
          "validateCharacterSet",
          "trimLeadingAndTrailingSpacesAndZeroes",
          "trailingSeparatorPolicy"
        ],
        "type": "object"
      },
      "X12ValidationSettings": {
        "description": "The X12 agreement validation settings.",
        "properties": {
          "allowLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "checkDuplicateGroupControlNumber": {
            "description": "The value indicating whether to check for duplicate group control number.",
            "type": "boolean"
          },
          "checkDuplicateInterchangeControlNumber": {
            "description": "The value indicating whether to check for duplicate interchange control number.",
            "type": "boolean"
          },
          "checkDuplicateTransactionSetControlNumber": {
            "description": "The value indicating whether to check for duplicate transaction set control number.",
            "type": "boolean"
          },
          "interchangeControlNumberValidityDays": {
            "description": "The validity period of interchange control number.",
            "format": "int32",
            "type": "integer"
          },
          "trailingSeparatorPolicy": {
            "$ref": "#/components/schemas/TrailingSeparatorPolicy",
            "description": "The trailing separator policy."
          },
          "trimLeadingAndTrailingSpacesAndZeroes": {
            "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
            "type": "boolean"
          },
          "validateCharacterSet": {
            "description": "The value indicating whether to validate character set in the message.",
            "type": "boolean"
          },
          "validateEDITypes": {
            "description": "The value indicating whether to Whether to validate EDI types.",
            "type": "boolean"
          },
          "validateXSDTypes": {
            "description": "The value indicating whether to Whether to validate XSD types.",
            "type": "boolean"
          }
        },
        "required": [
          "validateCharacterSet",
          "checkDuplicateInterchangeControlNumber",
          "interchangeControlNumberValidityDays",
          "checkDuplicateGroupControlNumber",
          "checkDuplicateTransactionSetControlNumber",
          "validateEDITypes",
          "validateXSDTypes",
          "allowLeadingAndTrailingSpacesAndZeroes",
          "trimLeadingAndTrailingSpacesAndZeroes",
          "trailingSeparatorPolicy"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}