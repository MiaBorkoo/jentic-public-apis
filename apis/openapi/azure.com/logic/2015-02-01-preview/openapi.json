{
  "openapi": "3.0.0",
  "info": {
    "description": "REST API for Azure Logic Apps.",
    "title": "LogicManagementClient",
    "version": "2015-02-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/logic/resource-manager/Microsoft.Logic/preview/2015-02-01-preview/logic.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logic/workflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by subscription.",
        "operationId": "Workflows_ListBySubscription",
        "x-ms-odata": "#/components/schemas/WorkflowFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a list of workflows by resource group.",
        "operationId": "Workflows_ListByResourceGroup",
        "x-ms-odata": "#/components/schemas/WorkflowFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Deletes a workflow.",
        "operationId": "Workflows_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Gets a workflow.",
        "operationId": "Workflows_Get"
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Updates a workflow.",
        "operationId": "Workflows_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Creates or updates a workflow.",
        "operationId": "Workflows_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKeyListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKeyListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Gets a list of workflow access keys.",
        "operationId": "WorkflowAccessKeys_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow access key name.",
            "in": "path",
            "name": "accessKeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Deletes a workflow access key.",
        "operationId": "WorkflowAccessKeys_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow access key name.",
            "in": "path",
            "name": "accessKeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Gets a workflow access key.",
        "operationId": "WorkflowAccessKeys_Get"
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow access key name.",
            "in": "path",
            "name": "accessKeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowAccessKey"
                }
              }
            },
            "description": "Created"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Creates or updates a workflow access key.",
        "operationId": "WorkflowAccessKeys_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowAccessKey"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowAccessKey"
              }
            }
          },
          "description": "The workflow access key.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow access key name.",
            "in": "path",
            "name": "accessKeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSecretKeys"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSecretKeys"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Lists secret keys.",
        "operationId": "WorkflowAccessKeys_ListSecretKeys"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/accessKeys/{accessKeyName}/regenerate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow access key name.",
            "in": "path",
            "name": "accessKeyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSecretKeys"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowSecretKeys"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowAccessKeys"
        ],
        "description": "Regenerates secret key.",
        "operationId": "WorkflowAccessKeys_RegenerateSecretKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecretKeyParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecretKeyParameters"
              }
            }
          },
          "description": "The parameters.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Disables a workflow.",
        "operationId": "Workflows_Disable"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/enable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Enables a workflow.",
        "operationId": "Workflows_Enable"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/run": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              }
            },
            "description": "Accepted"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Runs a workflow.",
        "operationId": "Workflows_Run",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunWorkflowParameters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RunWorkflowParameters"
              }
            }
          },
          "description": "The parameters.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Gets a list of workflow runs.",
        "operationId": "WorkflowRuns_List",
        "x-ms-odata": "#/components/schemas/WorkflowRunFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRun"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Gets a workflow run.",
        "operationId": "WorkflowRuns_Get"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunActionListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a list of workflow run actions.",
        "operationId": "WorkflowRunActions_List",
        "x-ms-odata": "#/components/schemas/WorkflowRunActionFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/actions/{actionName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow action name.",
            "in": "path",
            "name": "actionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunAction"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRunAction"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRunActions"
        ],
        "description": "Gets a workflow run action.",
        "operationId": "WorkflowRunActions_Get"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/runs/{runName}/cancel": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow run name.",
            "in": "path",
            "name": "runName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowRuns"
        ],
        "description": "Cancels a workflow run.",
        "operationId": "WorkflowRuns_Cancel"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a list of workflow triggers.",
        "operationId": "WorkflowTriggers_List",
        "x-ms-odata": "#/components/schemas/WorkflowTriggerFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTrigger"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTrigger"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Gets a workflow trigger.",
        "operationId": "WorkflowTriggers_Get"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "description": "The number of items to be included in the result.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistoryListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistoryListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a list of workflow trigger histories.",
        "operationId": "WorkflowTriggerHistories_List",
        "x-ms-odata": "#/components/schemas/WorkflowTriggerHistoryFilter",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/histories/{historyName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger history name.",
            "in": "path",
            "name": "historyName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistory"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowTriggerHistory"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggerHistories"
        ],
        "description": "Gets a workflow trigger history.",
        "operationId": "WorkflowTriggerHistories_Get"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/triggers/{triggerName}/run": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow trigger name.",
            "in": "path",
            "name": "triggerName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowTriggers"
        ],
        "description": "Runs a workflow trigger.",
        "operationId": "WorkflowTriggers_Run"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/validate": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Workflows"
        ],
        "description": "Validates a workflow.",
        "operationId": "Workflows_Validate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Workflow"
              }
            }
          },
          "description": "The workflow.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logic/workflows/{workflowName}/versions/{versionId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "description": "The resource group name.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow name.",
            "in": "path",
            "name": "workflowName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The workflow versionId.",
            "in": "path",
            "name": "versionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVersion"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVersion"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WorkflowVersions"
        ],
        "description": "Gets a workflow version.",
        "operationId": "WorkflowVersions_Get"
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "The API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "subscriptionId": {
        "description": "The subscription id.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "Workflow": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Workflow"
            }
          },
          "text/json": {
            "schema": {
              "$ref": "#/components/schemas/Workflow"
            }
          }
        },
        "description": "The workflow.",
        "required": true
      }
    },
    "schemas": {
      "ContentHash": {
        "properties": {
          "algorithm": {
            "description": "Gets or sets the algorithm.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets the value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ContentLink": {
        "properties": {
          "contentHash": {
            "$ref": "#/components/schemas/ContentHash",
            "description": "Gets or sets the content hash."
          },
          "contentSize": {
            "description": "Gets or sets the content size.",
            "format": "int64",
            "type": "integer"
          },
          "contentVersion": {
            "description": "Gets or sets the content version.",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets or sets the metadata."
          },
          "uri": {
            "description": "Gets or sets the content link URI.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeyType": {
        "enum": [
          "NotSpecified",
          "Primary",
          "Secondary"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "KeyType"
        }
      },
      "Object": {
        "properties": {},
        "type": "object"
      },
      "ParameterType": {
        "enum": [
          "NotSpecified",
          "String",
          "SecureString",
          "Int",
          "Float",
          "Bool",
          "Array",
          "Object",
          "SecureObject"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "ParameterType"
        }
      },
      "RecurrenceFrequency": {
        "enum": [
          "Second",
          "Minute",
          "Hour",
          "Day",
          "Week",
          "Month",
          "Year"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "RecurrenceFrequency"
        }
      },
      "RegenerateSecretKeyParameters": {
        "properties": {
          "keyType": {
            "$ref": "#/components/schemas/KeyType",
            "description": "Gets or sets the key type."
          }
        },
        "type": "object"
      },
      "Resource": {
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Gets or sets the resource tags.",
            "type": "object"
          },
          "id": {
            "description": "Gets or sets the resource id.",
            "type": "string"
          },
          "location": {
            "description": "Gets or sets the resource location.",
            "type": "string"
          },
          "name": {
            "description": "Gets the resource name.",
            "type": "string"
          },
          "type": {
            "description": "Gets the resource type.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceReference": {
        "properties": {
          "id": {
            "description": "Gets or sets the resource id.",
            "type": "string"
          },
          "name": {
            "description": "Gets the resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Gets the resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RunWorkflowParameters": {
        "properties": {
          "name": {
            "description": "Gets or sets the name of workflow run trigger.",
            "type": "string"
          },
          "outputs": {
            "description": "Gets or sets the outputs of workflow run trigger.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "Sku": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SkuName",
            "description": "Gets or sets the name."
          },
          "plan": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets or sets the reference to plan."
          }
        },
        "type": "object"
      },
      "SkuName": {
        "enum": [
          "NotSpecified",
          "Free",
          "Shared",
          "Basic",
          "Standard",
          "Premium"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "SkuName"
        }
      },
      "SubResource": {
        "properties": {
          "id": {
            "description": "Gets or sets the resource id.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Workflow": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkflowProperties",
            "description": "Gets or sets the workflow properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkflowAccessKey": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "name": {
            "description": "Gets the workflow access key name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowAccessKeyProperties",
            "description": "Gets or sets the workflow access key properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow access key type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowAccessKeyListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets a list of workflow access keys.",
            "items": {
              "$ref": "#/components/schemas/WorkflowAccessKey"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowAccessKeyProperties": {
        "properties": {
          "notAfter": {
            "description": "Gets or sets the not-after time.",
            "format": "date-time",
            "type": "string"
          },
          "notBefore": {
            "description": "Gets or sets the not-before time.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowFilter": {
        "properties": {
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets or sets the state of workflows."
          }
        },
        "type": "object"
      },
      "WorkflowListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets the list of workflows.",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowOutputParameter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkflowParameter"
          }
        ],
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowParameter": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets or sets the metadata."
          },
          "type": {
            "$ref": "#/components/schemas/ParameterType",
            "description": "Gets or sets the type."
          },
          "value": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets or sets the value."
          }
        },
        "type": "object"
      },
      "WorkflowProperties": {
        "properties": {
          "parameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowParameter"
            },
            "description": "Gets or sets the parameters.",
            "type": "object"
          },
          "accessEndpoint": {
            "description": "Gets the access endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "definition": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets or sets the definition."
          },
          "definitionLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets or sets the link to definition."
          },
          "parametersLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets or sets the link to parameters."
          },
          "provisioningState": {
            "$ref": "#/components/schemas/WorkflowProvisioningState",
            "description": "Gets the provisioning state.",
            "readOnly": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "Gets or sets the sku."
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets or sets the state."
          },
          "version": {
            "description": "Gets the version.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowProvisioningState": {
        "enum": [
          "NotSpecified",
          "Moving",
          "Succeeded"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "WorkflowProvisioningState"
        }
      },
      "WorkflowRun": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "name": {
            "description": "Gets the workflow run name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowRunProperties",
            "description": "Gets or sets the workflow run properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow run type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "name": {
            "description": "Gets the workflow run action name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowRunActionProperties",
            "description": "Gets or sets the workflow run action properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow run action type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionFilter": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets or sets the status of workflow run action."
          }
        },
        "type": "object"
      },
      "WorkflowRunActionListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets a list of workflow run actions.",
            "items": {
              "$ref": "#/components/schemas/WorkflowRunAction"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunActionProperties": {
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to inputs.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to outputs.",
            "readOnly": true
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the trackingId.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowRunFilter": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets or sets the status of workflow run."
          }
        },
        "type": "object"
      },
      "WorkflowRunListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets a list of workflow runs.",
            "items": {
              "$ref": "#/components/schemas/WorkflowRun"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowRunProperties": {
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "correlationId": {
            "description": "Gets the correlation id.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "outputs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowOutputParameter"
            },
            "description": "Gets the outputs.",
            "readOnly": true,
            "type": "object"
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trigger": {
            "$ref": "#/components/schemas/WorkflowRunTrigger",
            "description": "Gets the fired trigger.",
            "readOnly": true
          },
          "workflow": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow version.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowRunTrigger": {
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "inputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the inputs.",
            "readOnly": true
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to inputs.",
            "readOnly": true
          },
          "name": {
            "description": "Gets the name.",
            "readOnly": true,
            "type": "string"
          },
          "outputs": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the outputs.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to outputs.",
            "readOnly": true
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the trackingId.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowSecretKeys": {
        "properties": {
          "primarySecretKey": {
            "description": "Gets the primary secret key.",
            "readOnly": true,
            "type": "string"
          },
          "secondarySecretKey": {
            "description": "Gets the secondary secret key.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowState": {
        "enum": [
          "NotSpecified",
          "Enabled",
          "Disabled",
          "Deleted",
          "Suspended"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "WorkflowState"
        }
      },
      "WorkflowStatus": {
        "enum": [
          "NotSpecified",
          "Paused",
          "Running",
          "Waiting",
          "Succeeded",
          "Skipped",
          "Suspended",
          "Cancelled",
          "Failed",
          "Faulted",
          "TimedOut",
          "Aborted"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "WorkflowStatus"
        }
      },
      "WorkflowTrigger": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "name": {
            "description": "Gets the workflow trigger name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowTriggerProperties",
            "description": "Gets or sets the workflow trigger properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow trigger type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerFilter": {
        "properties": {
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets or sets the state of workflow trigger."
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistory": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SubResource"
          }
        ],
        "properties": {
          "name": {
            "description": "Gets the workflow trigger history name.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/WorkflowTriggerHistoryProperties",
            "description": "Gets the workflow trigger history properties.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Gets the workflow trigger history type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryFilter": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets or sets the status of workflow trigger history."
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets a list of workflow trigger histories.",
            "items": {
              "$ref": "#/components/schemas/WorkflowTriggerHistory"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerHistoryProperties": {
        "properties": {
          "code": {
            "description": "Gets the code.",
            "readOnly": true,
            "type": "string"
          },
          "endTime": {
            "description": "Gets the end time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets the error.",
            "readOnly": true
          },
          "fired": {
            "description": "Gets a value indicating whether trigger was fired.",
            "readOnly": true,
            "type": "boolean"
          },
          "inputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to input parameters.",
            "readOnly": true
          },
          "outputsLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets the link to output parameters.",
            "readOnly": true
          },
          "run": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow run.",
            "readOnly": true
          },
          "startTime": {
            "description": "Gets the start time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "trackingId": {
            "description": "Gets the tracking id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerListResult": {
        "properties": {
          "nextLink": {
            "description": "Gets or sets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets a list of workflow triggers.",
            "items": {
              "$ref": "#/components/schemas/WorkflowTrigger"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "WorkflowTriggerProperties": {
        "properties": {
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastExecutionTime": {
            "description": "Gets the last execution time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "nextExecutionTime": {
            "description": "Gets the next execution time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "$ref": "#/components/schemas/WorkflowTriggerProvisioningState",
            "description": "Gets the provisioning state.",
            "readOnly": true
          },
          "recurrence": {
            "$ref": "#/components/schemas/WorkflowTriggerRecurrence",
            "description": "Gets the workflow trigger recurrence.",
            "readOnly": true
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets the state.",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowStatus",
            "description": "Gets the status.",
            "readOnly": true
          },
          "workflow": {
            "$ref": "#/components/schemas/ResourceReference",
            "description": "Gets the reference to workflow.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "WorkflowTriggerProvisioningState": {
        "enum": [
          "NotSpecified",
          "Creating",
          "Succeeded",
          "Updating"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "WorkflowTriggerProvisioningState"
        }
      },
      "WorkflowTriggerRecurrence": {
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/RecurrenceFrequency",
            "description": "Gets or sets the frequency."
          },
          "interval": {
            "description": "Gets or sets the interval.",
            "format": "int32",
            "type": "integer"
          },
          "startTime": {
            "description": "Gets or sets the start time.",
            "format": "date-time",
            "type": "string"
          },
          "timeZone": {
            "description": "Gets or sets the time zone.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowVersion": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkflowVersionProperties",
            "description": "Gets or sets the workflow version properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WorkflowVersionProperties": {
        "properties": {
          "parameters": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowParameter"
            },
            "description": "Gets or sets the parameters.",
            "type": "object"
          },
          "accessEndpoint": {
            "description": "Gets the access endpoint.",
            "readOnly": true,
            "type": "string"
          },
          "changedTime": {
            "description": "Gets the changed time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "createdTime": {
            "description": "Gets the created time.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "definition": {
            "$ref": "#/components/schemas/Object",
            "description": "Gets or sets the definition."
          },
          "definitionLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets or sets the link to definition."
          },
          "parametersLink": {
            "$ref": "#/components/schemas/ContentLink",
            "description": "Gets or sets the link to parameters."
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "Gets or sets the sku."
          },
          "state": {
            "$ref": "#/components/schemas/WorkflowState",
            "description": "Gets or sets the state."
          },
          "version": {
            "description": "Gets the version.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}