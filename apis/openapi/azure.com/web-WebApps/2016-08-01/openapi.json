{
  "openapi": "3.0.0",
  "info": {
    "title": "WebApps API Client",
    "version": "2016-08-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/web/resource-manager/Microsoft.Web/stable/2016-08-01/WebApps.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/sites": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/WebAppCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get all apps for a subscription.",
        "operationId": "WebApps_List",
        "summary": "Get all apps for a subscription.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Specify <strong>true</strong> to include deployment slots in results. The default is false, which only gives you the production slot of all apps.",
            "in": "query",
            "name": "includeSlots",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/WebAppCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all web, mobile, and API apps in the specified resource group.",
        "operationId": "WebApps_ListByResourceGroup",
        "summary": "Gets all web, mobile, and API apps in the specified resource group.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app to delete.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true, web app metrics are also deleted.",
            "in": "query",
            "name": "deleteMetrics",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify false if you want to keep empty App Service plan. By default, empty App Service plan is deleted.",
            "in": "query",
            "name": "deleteEmptyServerFarm",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app."
          },
          "204": {
            "description": "Successfully deleted web app."
          },
          "404": {
            "description": "Web app not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a web, mobile, or API app, or one of the deployment slots.",
        "operationId": "WebApps_Delete",
        "summary": "Deletes a web, mobile, or API app, or one of the deployment slots."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "Not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the details of a web, mobile, or API app.",
        "operationId": "WebApps_Get",
        "summary": "Gets the details of a web, mobile, or API app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "Asynchronous operation in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePatchResource"
              }
            }
          },
          "description": "A JSON representation of the app properties. See example.",
          "required": true
        },
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "Asynchronous operation in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
              }
            }
          },
          "description": "A JSON representation of the app properties. See example.",
          "required": true
        },
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/analyzeCustomHostname": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom hostname.",
            "in": "query",
            "name": "hostName",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHostnameAnalysisResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Analyze a custom hostname.",
        "operationId": "WebApps_AnalyzeCustomHostname",
        "summary": "Analyze a custom hostname."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/applySlotConfig": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Applies the configuration settings from the target slot onto the current slot.",
        "operationId": "WebApps_ApplySlotConfigToProduction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Applies the configuration settings from the target slot onto the current slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backup": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a backup of an app.",
        "operationId": "WebApps_Backup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
          "required": true
        },
        "summary": "Creates a backup of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItemCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets existing backups of an app.",
        "operationId": "WebApps_ListBackups",
        "summary": "Gets existing backups of an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/discover": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "operationId": "WebApps_DiscoverRestore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
          "required": true
        },
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackup",
        "summary": "Deletes a backup of an app by its ID."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatus",
        "summary": "Gets a backup of an app by its ID."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecrets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Information on backup request.",
          "required": true
        },
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/backups/{backupId}/restore": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_Restore",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "description": "Information on restore request .",
          "required": true
        },
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResourceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the configurations of an app",
        "operationId": "WebApps_ListConfigurations",
        "summary": "List the configurations of an app",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the application settings of an app.",
        "operationId": "WebApps_UpdateApplicationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDictionary"
              }
            }
          },
          "description": "Application settings of the app.",
          "required": true
        },
        "summary": "Replaces the application settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/appsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the application settings of an app.",
        "operationId": "WebApps_ListApplicationSettings",
        "summary": "Gets the application settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the Authentication / Authorization settings associated with web app.",
        "operationId": "WebApps_UpdateAuthSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteAuthSettings"
              }
            }
          },
          "description": "Auth settings associated with web app.",
          "required": true
        },
        "summary": "Updates the Authentication / Authorization settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/authsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Authentication/Authorization settings of an app.",
        "operationId": "WebApps_GetAuthSettings",
        "summary": "Gets the Authentication/Authorization settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted backup configuration."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfiguration",
        "summary": "Deletes the backup configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Edited backup configuration.",
          "required": true
        },
        "summary": "Updates the backup configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/backup/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfiguration",
        "summary": "Gets the backup configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the connection strings of an app.",
        "operationId": "WebApps_UpdateConnectionStrings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionStringDictionary"
              }
            }
          },
          "description": "Connection strings of the app or deployment slot. See example.",
          "required": true
        },
        "summary": "Replaces the connection strings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/connectionstrings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the connection strings of an app.",
        "operationId": "WebApps_ListConnectionStrings",
        "summary": "Gets the connection strings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/logs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteLogsConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the logging configuration of an app.",
        "operationId": "WebApps_GetDiagnosticLogsConfiguration",
        "summary": "Gets the logging configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteLogsConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the logging configuration of an app.",
        "operationId": "WebApps_UpdateDiagnosticLogsConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteLogsConfig"
              }
            }
          },
          "description": "A SiteLogsConfig JSON object that contains the logging configuration to change in the \"properties\" property.",
          "required": true
        },
        "summary": "Updates the logging configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the metadata of an app.",
        "operationId": "WebApps_UpdateMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDictionary"
              }
            }
          },
          "description": "Edited metadata of the app or deployment slot. See example.",
          "required": true
        },
        "summary": "Replaces the metadata of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/metadata/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the metadata of an app.",
        "operationId": "WebApps_ListMetadata",
        "summary": "Gets the metadata of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/publishingcredentials/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/User"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Git/FTP publishing credentials of an app.",
        "operationId": "WebApps_ListPublishingCredentials",
        "summary": "Gets the Git/FTP publishing credentials of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the Push settings associated with web app.",
        "operationId": "WebApps_UpdateSitePushSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
              }
            }
          },
          "description": "Push settings associated with web app.",
          "required": true
        },
        "summary": "Updates the Push settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/pushsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Push settings associated with web app.",
        "operationId": "WebApps_ListSitePushSettings",
        "summary": "Gets the Push settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/slotConfigNames": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotConfigNamesResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the names of app settings and connection strings that stick to the slot (not swapped).",
        "operationId": "WebApps_ListSlotConfigurationNames",
        "summary": "Gets the names of app settings and connection strings that stick to the slot (not swapped)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotConfigNamesResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the names of application settings and connection string that remain with the slot during swap operation.",
        "operationId": "WebApps_UpdateSlotConfigurationNames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotConfigNamesResource"
              }
            }
          },
          "description": "Names of application settings and connection strings. See example.",
          "required": true
        },
        "summary": "Updates the names of application settings and connection string that remain with the slot during swap operation."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "operationId": "WebApps_GetConfiguration",
        "summary": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the configuration of an app.",
        "operationId": "WebApps_UpdateConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteConfigResource"
              }
            }
          },
          "description": "JSON representation of a SiteConfig object. See example.",
          "required": true
        },
        "summary": "Updates the configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateConfiguration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteConfigResource"
              }
            }
          },
          "description": "JSON representation of a SiteConfig object. See example.",
          "required": true
        },
        "summary": "Updates the configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigurationSnapshotInfoCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "operationId": "WebApps_ListConfigurationSnapshotInfo",
        "summary": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the snapshot to read.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "operationId": "WebApps_GetConfigurationSnapshot",
        "summary": "Gets a snapshot of the configuration of an app at a previous point in time."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/config/web/snapshots/{snapshotId}/recover": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the snapshot to read.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Reverts the configuration of an app to a previous snapshot.",
        "operationId": "WebApps_RecoverSiteConfigurationSnapshot",
        "summary": "Reverts the configuration of an app to a previous snapshot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the last lines of docker logs for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogs",
        "summary": "Gets the last lines of docker logs for the given site"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/containerlogs/zip/download": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/zip": {}
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the ZIP archived docker log files for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogsZip",
        "summary": "Gets the ZIP archived docker log files for the given site"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuousWebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List continuous web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListContinuousWebJobs",
        "summary": "List continuous web jobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteContinuousWebJob",
        "summary": "Delete a continuous web job by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuousWebJob"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetContinuousWebJob",
        "summary": "Gets a continuous web job by its ID for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Start a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StartContinuousWebJob",
        "summary": "Start a continuous web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/continuouswebjobs/{webJobName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stop a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StopContinuousWebJob",
        "summary": "Stop a continuous web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List deployments for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeployments",
        "summary": "List deployments for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deployment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted deployment."
          },
          "204": {
            "description": "Deployment does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteDeployment",
        "summary": "Delete a deployment by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deployment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetDeployment",
        "summary": "Get a deployment by its ID for an app, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of an existing deployment.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Create a deployment for an app, or a deployment slot.",
        "operationId": "WebApps_CreateDeployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "description": "Deployment details.",
          "required": true
        },
        "summary": "Create a deployment for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/deployments/{id}/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of a specific deployment. This is the value of the name property in the JSON response from \"GET /api/sites/{siteName}/deployments\".",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List deployment log for specific deployment for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentLog",
        "summary": "List deployment log for specific deployment for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/IdentifierCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Lists ownership identifiers for domain associated with web app.",
        "operationId": "WebApps_ListDomainOwnershipIdentifiers",
        "summary": "Lists ownership identifiers for domain associated with web app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted domain ownership identifier."
          },
          "204": {
            "description": "Domain ownership identifier does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a domain ownership identifier for a web app.",
        "operationId": "WebApps_DeleteDomainOwnershipIdentifier",
        "summary": "Deletes a domain ownership identifier for a web app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get domain ownership identifier for web app.",
        "operationId": "WebApps_GetDomainOwnershipIdentifier",
        "summary": "Get domain ownership identifier for web app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_UpdateDomainOwnershipIdentifier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
              }
            }
          },
          "description": "A JSON representation of the domain ownership properties.",
          "required": true
        },
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
              }
            }
          },
          "description": "A JSON representation of the domain ownership properties.",
          "required": true
        },
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployStatus",
        "summary": "Get the status of the last MSDeploy operation."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "Deployment is scheduled."
          },
          "409": {
            "description": "Another deployment is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateMSDeployOperation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MSDeploy"
              }
            }
          },
          "description": "Details of MSDeploy operation",
          "required": true
        },
        "summary": "Invoke the MSDeploy web app extension.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/extensions/MSDeploy/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployLog"
                }
              }
            },
            "description": "MSDeploy log returned."
          },
          "404": {
            "description": "MSDeploy log not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployLog",
        "summary": "Get the MSDeploy Log for the last MSDeploy operation."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelopeCollection"
                }
              }
            },
            "description": "Function information returned."
          },
          "404": {
            "description": "Function with an ID of {functionName} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the functions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctions",
        "summary": "List the functions for a web site, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/admin/token": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Fetch a short lived token that can be exchanged for a master key.",
        "operationId": "WebApps_GetFunctionsAdminToken",
        "summary": "Fetch a short lived token that can be exchanged for a master key."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Function deleted."
          },
          "404": {
            "description": "Function does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a function for web site, or a deployment slot.",
        "operationId": "WebApps_DeleteFunction",
        "summary": "Delete a function for web site, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelope"
                }
              }
            },
            "description": "Function information returned."
          },
          "404": {
            "description": "Function with an name of {functionName} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get function information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetFunction",
        "summary": "Get function information by its ID for web site, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelope"
                }
              }
            },
            "description": "Function created."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Create function for web site, or a deployment slot.",
        "operationId": "WebApps_CreateFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionEnvelope"
              }
            }
          },
          "description": "Function details.",
          "required": true
        },
        "summary": "Create function for web site, or a deployment slot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/functions/{functionName}/listsecrets": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionSecrets"
                }
              }
            },
            "description": "Function secrets returned."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get function secrets for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionSecrets",
        "summary": "Get function secrets for a function in a web site, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBindingCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get hostname bindings for an app or a deployment slot.",
        "operationId": "WebApps_ListHostNameBindings",
        "summary": "Get hostname bindings for an app or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hostNameBindings/{hostName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeleteHostNameBinding",
        "summary": "Deletes a hostname binding for an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBinding"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the named hostname binding for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetHostNameBinding",
        "summary": "Get the named hostname binding for an app (or deployment slot, if specified)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBinding"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdateHostNameBinding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostNameBinding"
              }
            }
          },
          "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
          "required": true
        },
        "summary": "Creates a hostname binding for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hybrid connection."
          },
          "404": {
            "description": "Hybrid connection does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnection",
        "summary": "Removes a Hybrid Connection from this site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnection",
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_UpdateHybridConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
              }
            }
          },
          "description": "The details of the hybrid connection.",
          "required": true
        },
        "summary": "Creates a new Hybrid Connection using a Service Bus relay."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_CreateOrUpdateHybridConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
              }
            }
          },
          "description": "The details of the hybrid connection.",
          "required": true
        },
        "summary": "Creates a new Hybrid Connection using a Service Bus relay."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnectionKey"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the send key name and value for a Hybrid Connection.",
        "operationId": "WebApps_ListHybridConnectionKeys",
        "summary": "Gets the send key name and value for a Hybrid Connection."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridConnectionRelays": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnections",
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListRelayServiceConnections",
        "summary": "Gets hybrid connections configured for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/hybridconnection/{entityName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted relay service connection."
          },
          "404": {
            "description": "Relay service connection does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a relay service connection by its name.",
        "operationId": "WebApps_DeleteRelayServiceConnection",
        "summary": "Deletes a relay service connection by its name."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a hybrid connection configuration by its name.",
        "operationId": "WebApps_GetRelayServiceConnection",
        "summary": "Gets a hybrid connection configuration by its name."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_UpdateRelayServiceConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "description": "Details of the hybrid connection configuration.",
          "required": true
        },
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "description": "Details of the hybrid connection configuration.",
          "required": true
        },
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAppInstanceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all scale-out instances of an app.",
        "operationId": "WebApps_ListInstanceIdentifiers",
        "summary": "Gets all scale-out instances of an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMsDeployStatus",
        "summary": "Get the status of the last MSDeploy operation."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "Deployment is scheduled."
          },
          "409": {
            "description": "Another deployment is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateInstanceMSDeployOperation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MSDeploy"
              }
            }
          },
          "description": "Details of MSDeploy operation",
          "required": true
        },
        "summary": "Invoke the MSDeploy web app extension.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/extensions/MSDeploy/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployLog"
                }
              }
            },
            "description": "MSDeploy log returned."
          },
          "404": {
            "description": "MSDeploy log not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMSDeployLog",
        "summary": "Get the MSDeploy Log for the last MSDeploy operation."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfoCollection"
                }
              }
            },
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcesses",
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteInstanceProcess",
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfo"
                }
              }
            },
            "description": "Process information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcess",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/dump": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessDump",
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfoCollection"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessModules",
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Module base address.",
            "in": "path",
            "name": "baseAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfo"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessModule",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/threads": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfoCollection"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessThreads",
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/instances/{instanceId}/processes/{processId}/threads/{threadId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TID.",
            "in": "path",
            "name": "threadId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfo"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Either the thread with the specified TID was not found, or the process with the specified PID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessThread",
        "summary": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/iscloneable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteCloneability"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneable",
        "summary": "Shows whether an app can be cloned to another resource group or subscription."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/listsyncfunctiontriggerstatus": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionSecrets"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncFunctionTriggers",
        "summary": "This is to allow calling via powershell and ARM template."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metricdefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ResourceMetricDefinitionCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all metric definitions of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetricDefinitions",
        "summary": "Gets all metric definitions of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/metrics": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify \"true\" to include metric details in the response. It is \"false\" by default.",
            "in": "query",
            "name": "details",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only metrics specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ResourceMetricCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets performance metrics of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetrics",
        "summary": "Gets performance metrics of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migrate": {
      "put": {
        "parameters": [
          {
            "description": "Azure subscription.",
            "in": "query",
            "name": "subscriptionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageMigrationResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Restores a web app.",
        "operationId": "WebApps_MigrateStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StorageMigrationOptions"
              }
            }
          },
          "description": "Migration migrationOptions.",
          "required": true
        },
        "summary": "Restores a web app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Operation"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Migrates a local (in-app) MySql database to a remote MySql database.",
        "operationId": "WebApps_MigrateMySql",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateMySqlRequest"
              }
            }
          },
          "description": "MySql migration options.",
          "required": true
        },
        "summary": "Migrates a local (in-app) MySql database to a remote MySql database.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/migratemysql/status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateMySqlStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "operationId": "WebApps_GetMigrateMySqlStatus",
        "summary": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkFeatures/{view}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of view. This can either be \"summary\" or \"detailed\".",
            "in": "path",
            "name": "view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkFeatures"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "The requested view does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all network features used by the app (or deployment slot, if specified).",
        "operationId": "WebApps_ListNetworkFeatures",
        "summary": "Gets all network features used by the app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The duration to keep capturing in seconds.",
            "in": "query",
            "name": "durationInSeconds",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The maximum frame length in bytes (Optional).",
            "in": "query",
            "name": "maxFrameLength",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The Blob URL to store capture file.",
            "in": "query",
            "name": "sasUrl",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Start capturing network packets for the site.",
        "operationId": "WebApps_StartWebSiteNetworkTrace",
        "summary": "Start capturing network packets for the site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/networkTrace/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopWebSiteNetworkTrace",
        "summary": "Stop ongoing capturing network packets for the site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/newpassword": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generate new password."
          },
          "204": {
            "description": "Successfully generate new password."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Generates a new publishing password for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GenerateNewSitePublishingPassword",
        "summary": "Generates a new publishing password for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/perfcounters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerfMonCounterCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets perfmon counters for web app.",
        "operationId": "WebApps_ListPerfMonCounters",
        "summary": "Gets perfmon counters for web app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/phplogging": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePhpErrorLogFlag"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets web app's event logs.",
        "operationId": "WebApps_GetSitePhpErrorLogFlag",
        "summary": "Gets web app's event logs."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the premier add-ons of an app.",
        "operationId": "WebApps_ListPremierAddOns",
        "summary": "Gets the premier add-ons of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/premieraddons/{premierAddOnName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted premier add-on."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a premier add-on from an app.",
        "operationId": "WebApps_DeletePremierAddOn",
        "summary": "Delete a premier add-on from an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a named add-on of an app.",
        "operationId": "WebApps_GetPremierAddOn",
        "summary": "Gets a named add-on of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates a named add-on of an app.",
        "operationId": "WebApps_AddPremierAddOn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PremierAddOn"
              }
            }
          },
          "description": "A JSON representation of the edited premier add-on.",
          "required": true
        },
        "summary": "Updates a named add-on of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfoCollection"
                }
              }
            },
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcesses",
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteProcess",
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfo"
                }
              }
            },
            "description": "Process information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcess",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/dump": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessDump",
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfoCollection"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessModules",
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Module base address.",
            "in": "path",
            "name": "baseAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfo"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessModule",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/threads": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfoCollection"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessThreads",
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/processes/{processId}/threads/{threadId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TID.",
            "in": "path",
            "name": "threadId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfo"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Either the thread with the specified TID was not found, or the process with the specified PID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessThread",
        "summary": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificateCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get public certificates for an app or a deployment slot.",
        "operationId": "WebApps_ListPublicCertificates",
        "summary": "Get public certificates for an app or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publicCertificates/{publicCertificateName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeletePublicCertificate",
        "summary": "Deletes a hostname binding for an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the named public certificate for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetPublicCertificate",
        "summary": "Get the named public certificate for an app (or deployment slot, if specified)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdatePublicCertificate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicCertificate"
              }
            }
          },
          "description": "Public certificate details. This is the JSON representation of a PublicCertificate object.",
          "required": true
        },
        "summary": "Creates a hostname binding for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/publishxml": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/xml": {}
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the publishing profile for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecrets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmPublishingProfileOptions"
              }
            }
          },
          "description": "Specifies publishingProfileOptions for publishing profile. For example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.",
          "required": true
        },
        "summary": "Gets the publishing profile for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/recover": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recovery operation started."
          },
          "202": {
            "description": "Recovery operation started."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Recovers a web app to a previous snapshot.",
        "operationId": "WebApps_Recover",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest"
              }
            }
          },
          "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
          "required": true
        },
        "summary": "Recovers a web app to a previous snapshot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/resetSlotConfig": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "operationId": "WebApps_ResetProductionSlotConfig",
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/restart": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts and reprovisions the app.",
            "in": "query",
            "name": "softRestart",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).",
            "in": "query",
            "name": "synchronous",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restarted app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Restarts an app (or deployment slot, if specified).",
        "operationId": "WebApps_Restart",
        "summary": "Restarts an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfoCollection"
                }
              }
            },
            "description": "SiteExtension information returned."
          },
          "404": {
            "description": "SiteExtension not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of site extensions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListSiteExtensions",
        "summary": "Get list of site extensions for a web site, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/siteextensions/{siteExtensionId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "SiteExtension terminated."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Remove a site extension from a web site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteExtension",
        "summary": "Remove a site extension from a web site, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "SiteExtension information returned."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get site extension information by its ID for a web site, or a deployment slot.",
        "operationId": "WebApps_GetSiteExtension",
        "summary": "Get site extension information by its ID for a web site, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "Site Extension created."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "Site Extension created."
          },
          "429": {
            "description": "Site Extension is being installed on another request: Rejecting current request."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Install site extension on a web site, or a deployment slot.",
        "operationId": "WebApps_InstallSiteExtension",
        "summary": "Install site extension on a web site, or a deployment slot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/WebAppCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets an app's deployment slots.",
        "operationId": "WebApps_ListSlots",
        "summary": "Gets an app's deployment slots.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app to delete.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot to delete. By default, the API deletes the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true, web app metrics are also deleted.",
            "in": "query",
            "name": "deleteMetrics",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify true if the App Service plan will be empty after app deletion and you want to delete the empty App Service plan. By default, the empty App Service plan is not deleted.",
            "in": "query",
            "name": "deleteEmptyServerFarm",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, DNS registration is skipped.",
            "in": "query",
            "name": "skipDnsRegistration",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app."
          },
          "204": {
            "description": "Successfully deleted web app."
          },
          "404": {
            "description": "Web app not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a web, mobile, or API app, or one of the deployment slots.",
        "operationId": "WebApps_DeleteSlot",
        "summary": "Deletes a web, mobile, or API app, or one of the deployment slots."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. By default, this API returns the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "Not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the details of a web, mobile, or API app.",
        "operationId": "WebApps_GetSlot",
        "summary": "Gets the details of a web, mobile, or API app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot to create or update. The name 'production' is reserved.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true web app hostname is not registered with DNS on creation. This parameter is\n only used for app creation.",
            "in": "query",
            "name": "skipDnsRegistration",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
            "in": "query",
            "name": "skipCustomDomainVerification",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, web app hostname is force registered with DNS.",
            "in": "query",
            "name": "forceDnsRegistration",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Time to live in seconds for web app's default domain name.",
            "in": "query",
            "name": "ttlInSeconds",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "Asynchronous operation in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_UpdateSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SitePatchResource"
              }
            }
          },
          "description": "A JSON representation of the app properties. See example.",
          "required": true
        },
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Unique name of the app to create or update. To create or update a deployment slot, use the {slot} parameter.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot to create or update. The name 'production' is reserved.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If true web app hostname is not registered with DNS on creation. This parameter is\n only used for app creation.",
            "in": "query",
            "name": "skipDnsRegistration",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.",
            "in": "query",
            "name": "skipCustomDomainVerification",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "If true, web app hostname is force registered with DNS.",
            "in": "query",
            "name": "forceDnsRegistration",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Time to live in seconds for web app's default domain name.",
            "in": "query",
            "name": "ttlInSeconds",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "OK."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
                }
              }
            },
            "description": "Asynchronous operation in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "operationId": "WebApps_CreateOrUpdateSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
              }
            }
          },
          "description": "A JSON representation of the app properties. See example.",
          "required": true
        },
        "summary": "Creates a new web, mobile, or API app in an existing resource group, or updates an existing app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/analyzeCustomHostname": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Custom hostname.",
            "in": "query",
            "name": "hostName",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomHostnameAnalysisResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Analyze a custom hostname.",
        "operationId": "WebApps_AnalyzeCustomHostnameSlot",
        "summary": "Analyze a custom hostname."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/applySlotConfig": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Applies the configuration settings from the target slot onto the current slot.",
        "operationId": "WebApps_ApplySlotConfigurationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Applies the configuration settings from the target slot onto the current slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backup": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a backup for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a backup of an app.",
        "operationId": "WebApps_BackupSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
          "required": true
        },
        "summary": "Creates a backup of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get backups of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItemCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets existing backups of an app.",
        "operationId": "WebApps_ListBackupsSlot",
        "summary": "Gets existing backups of an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/discover": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will perform discovery for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Discovers an existing app backup that can be restored from a blob in Azure storage.",
        "operationId": "WebApps_DiscoverRestoreSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
          "required": true
        },
        "summary": "Discovers an existing app backup that can be restored from a blob in Azure storage."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete a backup of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted web app backup item."
          },
          "404": {
            "description": "Web app backup item does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a backup of an app by its ID.",
        "operationId": "WebApps_DeleteBackupSlot",
        "summary": "Deletes a backup of an app by its ID."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a backup of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a backup of an app by its ID.",
        "operationId": "WebApps_GetBackupStatusSlot",
        "summary": "Gets a backup of an app by its ID."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupItem"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body.",
        "operationId": "WebApps_ListBackupStatusSecretsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Information on backup request.",
          "required": true
        },
        "summary": "Gets status of a web app backup that may be in progress, including secrets associated with the backup, such as the Azure Storage SAS URL. Also can be used to update the SAS URL for the backup if a new URL is passed in the request body."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/backups/{backupId}/restore": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of the backup.",
            "in": "path",
            "name": "backupId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreResponse"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Restores a specific backup to another app (or deployment slot, if specified).",
        "operationId": "WebApps_RestoreSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestoreRequest"
              }
            }
          },
          "description": "Information on restore request .",
          "required": true
        },
        "summary": "Restores a specific backup to another app (or deployment slot, if specified).",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResourceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the configurations of an app",
        "operationId": "WebApps_ListConfigurationsSlot",
        "summary": "List the configurations of an app",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the application settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the application settings of an app.",
        "operationId": "WebApps_UpdateApplicationSettingsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDictionary"
              }
            }
          },
          "description": "Application settings of the app.",
          "required": true
        },
        "summary": "Replaces the application settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/appsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the application settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the application settings of an app.",
        "operationId": "WebApps_ListApplicationSettingsSlot",
        "summary": "Gets the application settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the Authentication / Authorization settings associated with web app.",
        "operationId": "WebApps_UpdateAuthSettingsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteAuthSettings"
              }
            }
          },
          "description": "Auth settings associated with web app.",
          "required": true
        },
        "summary": "Updates the Authentication / Authorization settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/authsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteAuthSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Authentication/Authorization settings of an app.",
        "operationId": "WebApps_GetAuthSettingsSlot",
        "summary": "Gets the Authentication/Authorization settings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the backup configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted backup configuration."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes the backup configuration of an app.",
        "operationId": "WebApps_DeleteBackupConfigurationSlot",
        "summary": "Deletes the backup configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the backup configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the backup configuration of an app.",
        "operationId": "WebApps_UpdateBackupConfigurationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupRequest"
              }
            }
          },
          "description": "Edited backup configuration.",
          "required": true
        },
        "summary": "Updates the backup configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/backup/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the backup configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupRequest"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the backup configuration of an app.",
        "operationId": "WebApps_GetBackupConfigurationSlot",
        "summary": "Gets the backup configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the connection settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the connection strings of an app.",
        "operationId": "WebApps_UpdateConnectionStringsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionStringDictionary"
              }
            }
          },
          "description": "Connection strings of the app or deployment slot. See example.",
          "required": true
        },
        "summary": "Replaces the connection strings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/connectionstrings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the connection settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionStringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the connection strings of an app.",
        "operationId": "WebApps_ListConnectionStringsSlot",
        "summary": "Gets the connection strings of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/logs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the logging configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteLogsConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the logging configuration of an app.",
        "operationId": "WebApps_GetDiagnosticLogsConfigurationSlot",
        "summary": "Gets the logging configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the logging configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteLogsConfig"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the logging configuration of an app.",
        "operationId": "WebApps_UpdateDiagnosticLogsConfigSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteLogsConfig"
              }
            }
          },
          "description": "A SiteLogsConfig JSON object that contains the logging configuration to change in the \"properties\" property.",
          "required": true
        },
        "summary": "Updates the logging configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the metadata for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Replaces the metadata of an app.",
        "operationId": "WebApps_UpdateMetadataSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringDictionary"
              }
            }
          },
          "description": "Edited metadata of the app or deployment slot. See example.",
          "required": true
        },
        "summary": "Replaces the metadata of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/metadata/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the metadata for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringDictionary"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the metadata of an app.",
        "operationId": "WebApps_ListMetadataSlot",
        "summary": "Gets the metadata of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/publishingcredentials/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the publishing credentials for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/User"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Git/FTP publishing credentials of an app.",
        "operationId": "WebApps_ListPublishingCredentialsSlot",
        "summary": "Gets the Git/FTP publishing credentials of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings": {
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the Push settings associated with web app.",
        "operationId": "WebApps_UpdateSitePushSettingsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
              }
            }
          },
          "description": "Push settings associated with web app.",
          "required": true
        },
        "summary": "Updates the Push settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/pushsettings/list": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the Push settings associated with web app.",
        "operationId": "WebApps_ListSitePushSettingsSlot",
        "summary": "Gets the Push settings associated with web app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc.",
        "operationId": "WebApps_GetConfigurationSlot",
        "summary": "Gets the configuration of an app, such as platform version and bitness, default documents, virtual applications, Always On, etc."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the configuration of an app.",
        "operationId": "WebApps_UpdateConfigurationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteConfigResource"
              }
            }
          },
          "description": "JSON representation of a SiteConfig object. See example.",
          "required": true
        },
        "summary": "Updates the configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateConfigurationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteConfigResource"
              }
            }
          },
          "description": "JSON representation of a SiteConfig object. See example.",
          "required": true
        },
        "summary": "Updates the configuration of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigurationSnapshotInfoCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "operationId": "WebApps_ListConfigurationSnapshotInfoSlot",
        "summary": "Gets a list of web app configuration snapshots identifiers. Each element of the list contains a timestamp and the ID of the snapshot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the snapshot to read.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteConfigResource"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a snapshot of the configuration of an app at a previous point in time.",
        "operationId": "WebApps_GetConfigurationSnapshotSlot",
        "summary": "Gets a snapshot of the configuration of an app at a previous point in time."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/config/web/snapshots/{snapshotId}/recover": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the snapshot to read.",
            "in": "path",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will return configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Reverts the configuration of an app to a previous snapshot.",
        "operationId": "WebApps_RecoverSiteConfigurationSnapshotSlot",
        "summary": "Reverts the configuration of an app to a previous snapshot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/octet-stream": {}
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the last lines of docker logs for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogsSlot",
        "summary": "Gets the last lines of docker logs for the given site"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/containerlogs/zip/download": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/zip": {}
            },
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the ZIP archived docker log files for the given site",
        "operationId": "WebApps_GetWebSiteContainerLogsZipSlot",
        "summary": "Gets the ZIP archived docker log files for the given site"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuousWebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List continuous web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListContinuousWebJobsSlot",
        "summary": "List continuous web jobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteContinuousWebJobSlot",
        "summary": "Delete a continuous web job by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContinuousWebJob"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a continuous web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetContinuousWebJobSlot",
        "summary": "Gets a continuous web job by its ID for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Start a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StartContinuousWebJobSlot",
        "summary": "Start a continuous web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/continuouswebjobs/{webJobName}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Continuous web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stop a continuous web job for an app, or a deployment slot.",
        "operationId": "WebApps_StopContinuousWebJobSlot",
        "summary": "Stop a continuous web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List deployments for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentsSlot",
        "summary": "List deployments for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deployment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted deployment."
          },
          "204": {
            "description": "Deployment does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteDeploymentSlot",
        "summary": "Delete a deployment by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Deployment ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API gets a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a deployment by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetDeploymentSlot",
        "summary": "Get a deployment by its ID for an app, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of an existing deployment.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API creates a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Create a deployment for an app, or a deployment slot.",
        "operationId": "WebApps_CreateDeploymentSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "description": "Deployment details.",
          "required": true
        },
        "summary": "Create a deployment for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/deployments/{id}/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of a specific deployment. This is the value of the name property in the JSON response from \"GET /api/sites/{siteName}/deployments\".",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List deployment log for specific deployment for an app, or a deployment slot.",
        "operationId": "WebApps_ListDeploymentLogSlot",
        "summary": "List deployment log for specific deployment for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/IdentifierCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Lists ownership identifiers for domain associated with web app.",
        "operationId": "WebApps_ListDomainOwnershipIdentifiersSlot",
        "summary": "Lists ownership identifiers for domain associated with web app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/domainOwnershipIdentifiers/{domainOwnershipIdentifierName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted domain ownership identifier."
          },
          "204": {
            "description": "Domain ownership identifier does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a domain ownership identifier for a web app.",
        "operationId": "WebApps_DeleteDomainOwnershipIdentifierSlot",
        "summary": "Deletes a domain ownership identifier for a web app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get domain ownership identifier for web app.",
        "operationId": "WebApps_GetDomainOwnershipIdentifierSlot",
        "summary": "Get domain ownership identifier for web app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_UpdateDomainOwnershipIdentifierSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
              }
            }
          },
          "description": "A JSON representation of the domain ownership properties.",
          "required": true
        },
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of domain ownership identifier.",
            "in": "path",
            "name": "domainOwnershipIdentifierName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier.",
        "operationId": "WebApps_CreateOrUpdateDomainOwnershipIdentifierSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
              }
            }
          },
          "description": "A JSON representation of the domain ownership properties.",
          "required": true
        },
        "summary": "Creates a domain ownership identifier for web app, or updates an existing ownership identifier."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployStatusSlot",
        "summary": "Get the status of the last MSDeploy operation."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "Deployment is scheduled."
          },
          "409": {
            "description": "Another deployment is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateMSDeployOperationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MSDeploy"
              }
            }
          },
          "description": "Details of MSDeploy operation",
          "required": true
        },
        "summary": "Invoke the MSDeploy web app extension.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/extensions/MSDeploy/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployLog"
                }
              }
            },
            "description": "MSDeploy log returned."
          },
          "404": {
            "description": "MSDeploy log not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetMSDeployLogSlot",
        "summary": "Get the MSDeploy Log for the last MSDeploy operation."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelopeCollection"
                }
              }
            },
            "description": "Function information returned."
          },
          "404": {
            "description": "Function with an ID of {functionName} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the functions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListInstanceFunctionsSlot",
        "summary": "List the functions for a web site, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/admin/token": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Fetch a short lived token that can be exchanged for a master key.",
        "operationId": "WebApps_GetFunctionsAdminTokenSlot",
        "summary": "Fetch a short lived token that can be exchanged for a master key."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Function deleted."
          },
          "404": {
            "description": "Function does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a function for web site, or a deployment slot.",
        "operationId": "WebApps_DeleteInstanceFunctionSlot",
        "summary": "Delete a function for web site, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelope"
                }
              }
            },
            "description": "Function information returned."
          },
          "404": {
            "description": "Function with an name of {functionName} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get function information by its ID for web site, or a deployment slot.",
        "operationId": "WebApps_GetInstanceFunctionSlot",
        "summary": "Get function information by its ID for web site, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionEnvelope"
                }
              }
            },
            "description": "Function created."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Create function for web site, or a deployment slot.",
        "operationId": "WebApps_CreateInstanceFunctionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FunctionEnvelope"
              }
            }
          },
          "description": "Function details.",
          "required": true
        },
        "summary": "Create function for web site, or a deployment slot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/functions/{functionName}/listsecrets": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Function name.",
            "in": "path",
            "name": "functionName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionSecrets"
                }
              }
            },
            "description": "Function secrets returned."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get function secrets for a function in a web site, or a deployment slot.",
        "operationId": "WebApps_ListFunctionSecretsSlot",
        "summary": "Get function secrets for a function in a web site, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBindingCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get hostname bindings for an app or a deployment slot.",
        "operationId": "WebApps_ListHostNameBindingsSlot",
        "summary": "Get hostname bindings for an app or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hostNameBindings/{hostName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeleteHostNameBindingSlot",
        "summary": "Deletes a hostname binding for an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBinding"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the named hostname binding for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetHostNameBindingSlot",
        "summary": "Get the named hostname binding for an app (or deployment slot, if specified)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Hostname in the hostname binding.",
            "in": "path",
            "name": "hostName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostNameBinding"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdateHostNameBindingSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostNameBinding"
              }
            }
          },
          "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
          "required": true
        },
        "summary": "Creates a hostname binding for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hybrid connection."
          },
          "404": {
            "description": "Hybrid connection does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Removes a Hybrid Connection from this site.",
        "operationId": "WebApps_DeleteHybridConnectionSlot",
        "summary": "Removes a Hybrid Connection from this site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Retrieves a specific Service Bus Hybrid Connection used by this Web App.",
        "operationId": "WebApps_GetHybridConnectionSlot",
        "summary": "Retrieves a specific Service Bus Hybrid Connection used by this Web App."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_UpdateHybridConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
              }
            }
          },
          "description": "The details of the hybrid connection.",
          "required": true
        },
        "summary": "Creates a new Hybrid Connection using a Service Bus relay."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new Hybrid Connection using a Service Bus relay.",
        "operationId": "WebApps_CreateOrUpdateHybridConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
              }
            }
          },
          "description": "The details of the hybrid connection.",
          "required": true
        },
        "summary": "Creates a new Hybrid Connection using a Service Bus relay."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionNamespaces/{namespaceName}/relays/{relayName}/listKeys": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The namespace for this hybrid connection.",
            "in": "path",
            "name": "namespaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The relay name for this hybrid connection.",
            "in": "path",
            "name": "relayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnectionKey"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the send key name and value for a Hybrid Connection.",
        "operationId": "WebApps_ListHybridConnectionKeysSlot",
        "summary": "Gets the send key name and value for a Hybrid Connection."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridConnectionRelays": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for the web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Retrieves all Service Bus Hybrid Connections used by this Web App.",
        "operationId": "WebApps_ListHybridConnectionsSlot",
        "summary": "Retrieves all Service Bus Hybrid Connections used by this Web App."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get hybrid connections for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets hybrid connections configured for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListRelayServiceConnectionsSlot",
        "summary": "Gets hybrid connections configured for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/hybridconnection/{entityName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete a hybrid connection for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted relay service connection."
          },
          "404": {
            "description": "Relay service connection does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a relay service connection by its name.",
        "operationId": "WebApps_DeleteRelayServiceConnectionSlot",
        "summary": "Deletes a relay service connection by its name."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a hybrid connection for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a hybrid connection configuration by its name.",
        "operationId": "WebApps_GetRelayServiceConnectionSlot",
        "summary": "Gets a hybrid connection configuration by its name."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid connection for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_UpdateRelayServiceConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "description": "Details of the hybrid connection configuration.",
          "required": true
        },
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the hybrid connection configuration.",
            "in": "path",
            "name": "entityName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will create or update a hybrid connection for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH).",
        "operationId": "WebApps_CreateOrUpdateRelayServiceConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelayServiceConnectionEntity"
              }
            }
          },
          "description": "Details of the hybrid connection configuration.",
          "required": true
        },
        "summary": "Creates a new hybrid connection configuration (PUT), or updates an existing one (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API gets the production slot instances.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebAppInstanceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all scale-out instances of an app.",
        "operationId": "WebApps_ListInstanceIdentifiersSlot",
        "summary": "Gets all scale-out instances of an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the status of the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMsDeployStatusSlot",
        "summary": "Get the status of the last MSDeploy operation."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployStatus"
                }
              }
            },
            "description": "Deployment is scheduled."
          },
          "409": {
            "description": "Another deployment is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Invoke the MSDeploy web app extension.",
        "operationId": "WebApps_CreateInstanceMSDeployOperationSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MSDeploy"
              }
            }
          },
          "description": "Details of MSDeploy operation",
          "required": true
        },
        "summary": "Invoke the MSDeploy web app extension.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/extensions/MSDeploy/log": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of web app instance.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MSDeployLog"
                }
              }
            },
            "description": "MSDeploy log returned."
          },
          "404": {
            "description": "MSDeploy log not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the MSDeploy Log for the last MSDeploy operation.",
        "operationId": "WebApps_GetInstanceMSDeployLogSlot",
        "summary": "Get the MSDeploy Log for the last MSDeploy operation."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfoCollection"
                }
              }
            },
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessesSlot",
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteInstanceProcessSlot",
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfo"
                }
              }
            },
            "description": "Process information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessSlot",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/dump": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessDumpSlot",
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfoCollection"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessModulesSlot",
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Module base address.",
            "in": "path",
            "name": "baseAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfo"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessModuleSlot",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/threads": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfoCollection"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListInstanceProcessThreadsSlot",
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/instances/{instanceId}/processes/{processId}/threads/{threadId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TID.",
            "in": "path",
            "name": "threadId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "ID of a specific scaled-out instance. This is the value of the name property in the JSON response from \"GET api/sites/{siteName}/instances\".",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfo"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Either the thread with the specified TID was not found, or the process with the specified PID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetInstanceProcessThreadSlot",
        "summary": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/iscloneable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. By default, this API returns information on the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteCloneability"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Shows whether an app can be cloned to another resource group or subscription.",
        "operationId": "WebApps_IsCloneableSlot",
        "summary": "Shows whether an app can be cloned to another resource group or subscription."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/listsyncfunctiontriggerstatus": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionSecrets"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "This is to allow calling via powershell and ARM template.",
        "operationId": "WebApps_ListSyncFunctionTriggersSlot",
        "summary": "This is to allow calling via powershell and ARM template."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metricdefinitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get metric definitions of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ResourceMetricDefinitionCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all metric definitions of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetricDefinitionsSlot",
        "summary": "Gets all metric definitions of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/metrics": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get metrics of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify \"true\" to include metric details in the response. It is \"false\" by default.",
            "in": "query",
            "name": "details",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only metrics specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ResourceMetricCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets performance metrics of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListMetricsSlot",
        "summary": "Gets performance metrics of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/migratemysql/status": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateMySqlStatus"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled",
        "operationId": "WebApps_GetMigrateMySqlStatusSlot",
        "summary": "Returns the status of MySql in app migration, if one is active, and whether or not MySql in app is enabled"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkFeatures/{view}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of view. This can either be \"summary\" or \"detailed\".",
            "in": "path",
            "name": "view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get network features for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetworkFeatures"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "The requested view does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets all network features used by the app (or deployment slot, if specified).",
        "operationId": "WebApps_ListNetworkFeaturesSlot",
        "summary": "Gets all network features used by the app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The duration to keep capturing in seconds.",
            "in": "query",
            "name": "durationInSeconds",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The name of the slot for this web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The maximum frame length in bytes (Optional).",
            "in": "query",
            "name": "maxFrameLength",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "The Blob URL to store capture file.",
            "in": "query",
            "name": "sasUrl",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Start capturing network packets for the site.",
        "operationId": "WebApps_StartWebSiteNetworkTraceSlot",
        "summary": "Start capturing network packets for the site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/networkTrace/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "The name of the web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the slot for this web app.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stop ongoing capturing network packets for the site.",
        "operationId": "WebApps_StopWebSiteNetworkTraceSlot",
        "summary": "Stop ongoing capturing network packets for the site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/newpassword": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API generate a new publishing password for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully generate new password."
          },
          "204": {
            "description": "Successfully generate new password."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Generates a new publishing password for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GenerateNewSitePublishingPasswordSlot",
        "summary": "Generates a new publishing password for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/perfcounters": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only usages/metrics specified in the filter. Filter conforms to odata syntax. Example: $filter=(startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PerfMonCounterCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets perfmon counters for web app.",
        "operationId": "WebApps_ListPerfMonCountersSlot",
        "summary": "Gets perfmon counters for web app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/phplogging": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SitePhpErrorLogFlag"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets web app's event logs.",
        "operationId": "WebApps_GetSitePhpErrorLogFlagSlot",
        "summary": "Gets web app's event logs."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the premier add-ons for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the premier add-ons of an app.",
        "operationId": "WebApps_ListPremierAddOnsSlot",
        "summary": "Gets the premier add-ons of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/premieraddons/{premierAddOnName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the named add-on for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted premier add-on."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a premier add-on from an app.",
        "operationId": "WebApps_DeletePremierAddOnSlot",
        "summary": "Delete a premier add-on from an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the named add-on for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a named add-on of an app.",
        "operationId": "WebApps_GetPremierAddOnSlot",
        "summary": "Gets a named add-on of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Add-on name.",
            "in": "path",
            "name": "premierAddOnName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the named add-on for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PremierAddOn"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates a named add-on of an app.",
        "operationId": "WebApps_AddPremierAddOnSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PremierAddOn"
              }
            }
          },
          "description": "A JSON representation of the edited premier add-on.",
          "required": true
        },
        "summary": "Updates a named add-on of an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfoCollection"
                }
              }
            },
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessesSlot",
        "summary": "Get list of processes for a web site, or a deployment slot, or for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "Process terminated."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site.",
        "operationId": "WebApps_DeleteProcessSlot",
        "summary": "Terminate a process by its ID for a web site, or a deployment slot, or specific scaled-out instance in a web site."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessInfo"
                }
              }
            },
            "description": "Process information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessSlot",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/dump": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {}
            },
            "description": "OK"
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessDumpSlot",
        "summary": "Get a memory dump of a process by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfoCollection"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessModulesSlot",
        "summary": "List module information for a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/modules/{baseAddress}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Module base address.",
            "in": "path",
            "name": "baseAddress",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessModuleInfo"
                }
              }
            },
            "description": "Module information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running, or a module with the specified baseAddress was not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get process information by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessModuleSlot",
        "summary": "Get process information by its ID for a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/threads": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfoCollection"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Process with the specified ID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "operationId": "WebApps_ListProcessThreadsSlot",
        "summary": "List the threads in a process by its ID for a specific scaled-out instance in a web site.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/processes/{processId}/threads/{threadId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "PID.",
            "in": "path",
            "name": "processId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "TID.",
            "in": "path",
            "name": "threadId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessThreadInfo"
                }
              }
            },
            "description": "Thread information returned."
          },
          "404": {
            "description": "Either the thread with the specified TID was not found, or the process with the specified PID is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site.",
        "operationId": "WebApps_GetProcessThreadSlot",
        "summary": "Get thread information by Thread ID for a specific process, in a specific scaled-out instance in a web site."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API gets hostname bindings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificateCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get public certificates for an app or a deployment slot.",
        "operationId": "WebApps_ListPublicCertificatesSlot",
        "summary": "Get public certificates for an app or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publicCertificates/{publicCertificateName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted hostname binding."
          },
          "204": {
            "description": "Hostname binding does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a hostname binding for an app.",
        "operationId": "WebApps_DeletePublicCertificateSlot",
        "summary": "Deletes a hostname binding for an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API the named binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the named public certificate for an app (or deployment slot, if specified).",
        "operationId": "WebApps_GetPublicCertificateSlot",
        "summary": "Get the named public certificate for an app (or deployment slot, if specified)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Public certificate name.",
            "in": "path",
            "name": "publicCertificateName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will create a binding for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicCertificate"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Creates a hostname binding for an app.",
        "operationId": "WebApps_CreateOrUpdatePublicCertificateSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublicCertificate"
              }
            }
          },
          "description": "Public certificate details. This is the JSON representation of a PublicCertificate object.",
          "required": true
        },
        "summary": "Creates a hostname binding for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/publishxml": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the publishing profile for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {},
              "application/xml": {}
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the publishing profile for an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListPublishingProfileXmlWithSecretsSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmPublishingProfileOptions"
              }
            }
          },
          "description": "Specifies publishingProfileOptions for publishing profile. For example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.",
          "required": true
        },
        "summary": "Gets the publishing profile for an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/recover": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Recovery operation started."
          },
          "202": {
            "description": "Recovery operation started."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Recovers a web app to a previous snapshot.",
        "operationId": "WebApps_RecoverSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest"
              }
            }
          },
          "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
          "required": true
        },
        "summary": "Recovers a web app to a previous snapshot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/resetSlotConfig": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API resets configuration settings for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST.",
        "operationId": "WebApps_ResetSlotConfigurationSlot",
        "summary": "Resets the configuration settings of the current slot if they were previously modified by calling the API with POST."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/restart": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will restart the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify true to apply the configuration settings and restarts the app only if necessary. By default, the API always restarts and reprovisions the app.",
            "in": "query",
            "name": "softRestart",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Specify true to block until the app is restarted. By default, it is set to false, and the API responds immediately (asynchronous).",
            "in": "query",
            "name": "synchronous",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully restarted app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Restarts an app (or deployment slot, if specified).",
        "operationId": "WebApps_RestartSlot",
        "summary": "Restarts an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfoCollection"
                }
              }
            },
            "description": "SiteExtension information returned."
          },
          "404": {
            "description": "SiteExtension not found."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get list of site extensions for a web site, or a deployment slot.",
        "operationId": "WebApps_ListSiteExtensionsSlot",
        "summary": "Get list of site extensions for a web site, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/siteextensions/{siteExtensionId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "SiteExtension terminated."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Remove a site extension from a web site, or a deployment slot.",
        "operationId": "WebApps_DeleteSiteExtensionSlot",
        "summary": "Remove a site extension from a web site, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "SiteExtension information returned."
          },
          "404": {
            "description": "SiteExtension with an ID of {siteExtensionId} is not running."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get site extension information by its ID for a web site, or a deployment slot.",
        "operationId": "WebApps_GetSiteExtensionSlot",
        "summary": "Get site extension information by its ID for a web site, or a deployment slot."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Site extension name.",
            "in": "path",
            "name": "siteExtensionId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "Site Extension created."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteExtensionInfo"
                }
              }
            },
            "description": "Site Extension created."
          },
          "429": {
            "description": "Site Extension is being installed on another request: Rejecting current request."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Install site extension on a web site, or a deployment slot.",
        "operationId": "WebApps_InstallSiteExtensionSlot",
        "summary": "Install site extension on a web site, or a deployment slot.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsdiffs": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotDifferenceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the difference in configuration settings between two web app slots.",
        "operationId": "WebApps_ListSlotDifferencesSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Get the difference in configuration settings between two web app slots.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/slotsswap": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the source slot. If a slot is not specified, the production slot is used as the source slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Operation is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Swaps two deployment slots of an app.",
        "operationId": "WebApps_SwapSlotSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Swaps two deployment slots of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/snapshots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Website Name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Website Slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshotsSlot",
        "summary": "Returns all Snapshots to the user.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sourcecontrols/web": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the source control configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted source control for web app."
          },
          "202": {
            "description": "Source control delete operation in progress."
          },
          "404": {
            "description": "Source control does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes the source control configuration of an app.",
        "operationId": "WebApps_DeleteSourceControlSlot",
        "summary": "Deletes the source control configuration of an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the source control configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully retrieved source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app still in progress."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app still in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the source control configuration of an app.",
        "operationId": "WebApps_GetSourceControlSlot",
        "summary": "Gets the source control configuration of an app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the source control configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully created or updated source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the source control configuration of an app.",
        "operationId": "WebApps_UpdateSourceControlSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "description": "JSON representation of a SiteSourceControl object. See example.",
          "required": true
        },
        "summary": "Updates the source control configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will update the source control configuration for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully created or updated source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the source control configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateSourceControlSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "description": "JSON representation of a SiteSourceControl object. See example.",
          "required": true
        },
        "summary": "Updates the source control configuration of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will start the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Starts an app (or deployment slot, if specified).",
        "operationId": "WebApps_StartSlot",
        "summary": "Starts an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will stop the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stopped app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stops an app (or deployment slot, if specified).",
        "operationId": "WebApps_StopSlot",
        "summary": "Stops an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/sync": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of web app slot. If not specified then will default to production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sync source control."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Sync web app repository.",
        "operationId": "WebApps_SyncRepositorySlot",
        "summary": "Sync web app repository."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/syncfunctiontriggers": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will restore a backup of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Syncs function trigger metadata to the scale controller",
        "operationId": "WebApps_SyncFunctionTriggersSlot",
        "summary": "Syncs function trigger metadata to the scale controller"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredWebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List triggered web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobsSlot",
        "summary": "List triggered web jobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteTriggeredWebJobSlot",
        "summary": "Delete a triggered web job by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredWebJob"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobSlot",
        "summary": "Gets a triggered web job by its ID for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredJobHistoryCollection"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List a triggered web job's history for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobHistorySlot",
        "summary": "List a triggered web job's history for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/history/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "History ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredJobHistory"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobHistorySlot",
        "summary": "Gets a triggered web job's history by its ID for an app, , or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/triggeredwebjobs/{webJobName}/run": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API deletes a deployment for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Run a triggered web job for an app, or a deployment slot.",
        "operationId": "WebApps_RunTriggeredWebJobSlot",
        "summary": "Run a triggered web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/usages": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get quota information of the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListUsagesSlot",
        "summary": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get virtual network connections for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the virtual networks the app (or deployment slot) is connected to.",
        "operationId": "WebApps_ListVnetConnectionsSlot",
        "summary": "Gets the virtual networks the app (or deployment slot) is connected to."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the virtual network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will delete the connection for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a connection from an app (or deployment slot to a named virtual network.",
        "operationId": "WebApps_DeleteVnetConnectionSlot",
        "summary": "Deletes a connection from an app (or deployment slot to a named virtual network."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the virtual network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get the named virtual network for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a virtual network the app (or deployment slot) is connected to by name.",
        "operationId": "WebApps_GetVnetConnectionSlot",
        "summary": "Gets a virtual network the app (or deployment slot) is connected to by name."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of an existing Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
              }
            }
          },
          "description": "Properties of the Virtual Network connection. See example.",
          "required": true
        },
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of an existing Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update connections for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionSlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
              }
            }
          },
          "description": "Properties of the Virtual Network connection. See example.",
          "required": true
        },
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will get a gateway for the production slot's Virtual Network.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "Named gateway does not exist. Only the \"primary\" gateway is supported currently."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets an app's Virtual Network gateway.",
        "operationId": "WebApps_GetVnetConnectionGatewaySlot",
        "summary": "Gets an app's Virtual Network gateway."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update a gateway for the production slot's Virtual Network.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionGatewaySlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
              }
            }
          },
          "description": "The properties to update this gateway with.",
          "required": true
        },
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API will add or update a gateway for the production slot's Virtual Network.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGatewaySlot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
              }
            }
          },
          "description": "The properties to update this gateway with.",
          "required": true
        },
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List webjobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListWebJobsSlot",
        "summary": "List webjobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slots/{slot}/webjobs/{webJobName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the web job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the deployment slot. If a slot is not specified, the API returns deployments for the production slot.",
            "in": "path",
            "name": "slot",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebJob"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get webjob information for an app, or a deployment slot.",
        "operationId": "WebApps_GetWebJobSlot",
        "summary": "Get webjob information for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsdiffs": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SlotDifferenceCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get the difference in configuration settings between two web app slots.",
        "operationId": "WebApps_ListSlotDifferencesFromProduction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Get the difference in configuration settings between two web app slots.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/slotsswap": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK."
          },
          "202": {
            "description": "Operation is in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Swaps two deployment slots of an app.",
        "operationId": "WebApps_SwapSlotWithProduction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CsmSlotEntity"
              }
            }
          },
          "description": "JSON object that contains the target slot name. See example.",
          "required": true
        },
        "summary": "Swaps two deployment slots of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/snapshots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Website Name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnapshotCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Returns all Snapshots to the user.",
        "operationId": "WebApps_ListSnapshots",
        "summary": "Returns all Snapshots to the user.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted source control for web app."
          },
          "202": {
            "description": "Source control delete operation in progress."
          },
          "404": {
            "description": "Source control does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes the source control configuration of an app.",
        "operationId": "WebApps_DeleteSourceControl",
        "summary": "Deletes the source control configuration of an app."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully retrieved source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app still in progress."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app still in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the source control configuration of an app.",
        "operationId": "WebApps_GetSourceControl",
        "summary": "Gets the source control configuration of an app."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully created or updated source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the source control configuration of an app.",
        "operationId": "WebApps_UpdateSourceControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "description": "JSON representation of a SiteSourceControl object. See example.",
          "required": true
        },
        "summary": "Updates the source control configuration of an app."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Successfully created or updated source control for web app."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SiteSourceControl"
                }
              }
            },
            "description": "Create or update source control for web app in progress."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Updates the source control configuration of an app.",
        "operationId": "WebApps_CreateOrUpdateSourceControl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteSourceControl"
              }
            }
          },
          "description": "JSON representation of a SiteSourceControl object. See example.",
          "required": true
        },
        "summary": "Updates the source control configuration of an app.",
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/start": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully started app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Starts an app (or deployment slot, if specified).",
        "operationId": "WebApps_Start",
        "summary": "Starts an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/stop": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully stopped app."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Stops an app (or deployment slot, if specified).",
        "operationId": "WebApps_Stop",
        "summary": "Stops an app (or deployment slot, if specified)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sync": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of web app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully sync source control."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Sync web app repository.",
        "operationId": "WebApps_SyncRepository",
        "summary": "Sync web app repository."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/syncfunctiontriggers": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Syncs function trigger metadata to the scale controller",
        "operationId": "WebApps_SyncFunctionTriggers",
        "summary": "Syncs function trigger metadata to the scale controller"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredWebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List triggered web jobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobs",
        "summary": "List triggered web jobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted continuous web job."
          },
          "204": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Delete a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_DeleteTriggeredWebJob",
        "summary": "Delete a triggered web job by its ID for an app, or a deployment slot."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredWebJob"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a triggered web job by its ID for an app, or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJob",
        "summary": "Gets a triggered web job by its ID for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredJobHistoryCollection"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List a triggered web job's history for an app, or a deployment slot.",
        "operationId": "WebApps_ListTriggeredWebJobHistory",
        "summary": "List a triggered web job's history for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/history/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "History ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggeredJobHistory"
                }
              }
            },
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a triggered web job's history by its ID for an app, , or a deployment slot.",
        "operationId": "WebApps_GetTriggeredWebJobHistory",
        "summary": "Gets a triggered web job's history by its ID for an app, , or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/triggeredwebjobs/{webJobName}/run": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of Web Job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Found continuous web job."
          },
          "404": {
            "description": "Triggered web job does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Run a triggered web job for an app, or a deployment slot.",
        "operationId": "WebApps_RunTriggeredWebJob",
        "summary": "Run a triggered web job for an app, or a deployment slot."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/usages": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only information specified in the filter (using OData syntax). For example: $filter=(name.value eq 'Metric1' or name.value eq 'Metric2') and startTime eq '2014-01-01T00:00:00Z' and endTime eq '2014-12-31T23:59:59Z' and timeGrain eq duration'[Hour|Minute|Day]'.",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/CsmUsageQuotaCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "operationId": "WebApps_ListUsages",
        "summary": "Gets the quota usage information of an app (or deployment slot, if specified).",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets the virtual networks the app (or deployment slot) is connected to.",
        "operationId": "WebApps_ListVnetConnections",
        "summary": "Gets the virtual networks the app (or deployment slot) is connected to."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the virtual network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted virtual network."
          },
          "404": {
            "description": "Virtual network does not exist."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Deletes a connection from an app (or deployment slot to a named virtual network.",
        "operationId": "WebApps_DeleteVnetConnection",
        "summary": "Deletes a connection from an app (or deployment slot to a named virtual network."
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the virtual network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets a virtual network the app (or deployment slot) is connected to by name.",
        "operationId": "WebApps_GetVnetConnection",
        "summary": "Gets a virtual network the app (or deployment slot) is connected to by name."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of an existing Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_UpdateVnetConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
              }
            }
          },
          "description": "Properties of the Virtual Network connection. See example.",
          "required": true
        },
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of an existing Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
              }
            }
          },
          "description": "Properties of the Virtual Network connection. See example.",
          "required": true
        },
        "summary": "Adds a Virtual Network connection to an app or slot (PUT) or updates the connection properties (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/virtualNetworkConnections/{vnetName}/gateways/{gatewayName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK."
          },
          "404": {
            "description": "Named gateway does not exist. Only the \"primary\" gateway is supported currently."
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Gets an app's Virtual Network gateway.",
        "operationId": "WebApps_GetVnetConnectionGateway",
        "summary": "Gets an app's Virtual Network gateway."
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_UpdateVnetConnectionGateway",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
              }
            }
          },
          "description": "The properties to update this gateway with.",
          "required": true
        },
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH)."
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the Virtual Network.",
            "in": "path",
            "name": "vnetName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the gateway. Currently, the only supported string is \"primary\".",
            "in": "path",
            "name": "gatewayName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH).",
        "operationId": "WebApps_CreateOrUpdateVnetConnectionGateway",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
              }
            }
          },
          "description": "The properties to update this gateway with.",
          "required": true
        },
        "summary": "Adds a gateway to a connected Virtual Network (PUT) or updates it (PATCH)."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebJobCollection"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "List webjobs for an app, or a deployment slot.",
        "operationId": "WebApps_ListWebJobs",
        "summary": "List webjobs for an app, or a deployment slot.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/webjobs/{webJobName}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the web job.",
            "in": "path",
            "name": "webJobName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebJob"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "WebApps"
        ],
        "description": "Get webjob information for an app, or a deployment slot.",
        "operationId": "WebApps_GetWebJob",
        "summary": "Get webjob information for an app, or a deployment slot."
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "API Version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resourceGroupNameParameter": {
        "description": "Name of the resource group to which the resource belongs.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
            }
          }
        },
        "description": "The details of the hybrid connection.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/Identifier": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Identifier"
            }
          }
        },
        "description": "A JSON representation of the domain ownership properties.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/PushSettings"
            }
          }
        },
        "description": "Push settings associated with web app.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/Site": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Site"
            }
          }
        },
        "description": "A JSON representation of the app properties. See example.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest"
            }
          }
        },
        "description": "Snapshot data used for web app recovery. Snapshot information can be obtained by calling GetDeletedSites or GetSiteSnapshots API.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetGateway"
            }
          }
        },
        "description": "The properties to update this gateway with.",
        "required": true
      },
      "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo"
            }
          }
        },
        "description": "Properties of the Virtual Network connection. See example.",
        "required": true
      },
      "BackupRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BackupRequest"
            }
          }
        },
        "description": "Backup configuration. You can use the JSON response from the POST action as input here.",
        "required": true
      },
      "BackupRequest2": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BackupRequest"
            }
          }
        },
        "description": "Information on backup request.",
        "required": true
      },
      "BackupRequest3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BackupRequest"
            }
          }
        },
        "description": "Edited backup configuration.",
        "required": true
      },
      "ConnectionStringDictionary": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConnectionStringDictionary"
            }
          }
        },
        "description": "Connection strings of the app or deployment slot. See example.",
        "required": true
      },
      "CsmPublishingProfileOptions": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CsmPublishingProfileOptions"
            }
          }
        },
        "description": "Specifies publishingProfileOptions for publishing profile. For example, use {\"format\": \"FileZilla3\"} to get a FileZilla publishing profile.",
        "required": true
      },
      "CsmSlotEntity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CsmSlotEntity"
            }
          }
        },
        "description": "JSON object that contains the target slot name. See example.",
        "required": true
      },
      "Deployment": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Deployment"
            }
          }
        },
        "description": "Deployment details.",
        "required": true
      },
      "FunctionEnvelope": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FunctionEnvelope"
            }
          }
        },
        "description": "Function details.",
        "required": true
      },
      "HostNameBinding": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HostNameBinding"
            }
          }
        },
        "description": "Binding details. This is the JSON representation of a HostNameBinding object.",
        "required": true
      },
      "MSDeploy": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MSDeploy"
            }
          }
        },
        "description": "Details of MSDeploy operation",
        "required": true
      },
      "PremierAddOn": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PremierAddOn"
            }
          }
        },
        "description": "A JSON representation of the edited premier add-on.",
        "required": true
      },
      "PublicCertificate": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PublicCertificate"
            }
          }
        },
        "description": "Public certificate details. This is the JSON representation of a PublicCertificate object.",
        "required": true
      },
      "RelayServiceConnectionEntity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RelayServiceConnectionEntity"
            }
          }
        },
        "description": "Details of the hybrid connection configuration.",
        "required": true
      },
      "RestoreRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RestoreRequest"
            }
          }
        },
        "description": "A RestoreRequest object that includes Azure storage URL and blog name for discovery of backup.",
        "required": true
      },
      "RestoreRequest2": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RestoreRequest"
            }
          }
        },
        "description": "Information on restore request .",
        "required": true
      },
      "SiteAuthSettings": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SiteAuthSettings"
            }
          }
        },
        "description": "Auth settings associated with web app.",
        "required": true
      },
      "SiteConfigResource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SiteConfigResource"
            }
          }
        },
        "description": "JSON representation of a SiteConfig object. See example.",
        "required": true
      },
      "SiteLogsConfig": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SiteLogsConfig"
            }
          }
        },
        "description": "A SiteLogsConfig JSON object that contains the logging configuration to change in the \"properties\" property.",
        "required": true
      },
      "SitePatchResource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SitePatchResource"
            }
          }
        },
        "description": "A JSON representation of the app properties. See example.",
        "required": true
      },
      "SiteSourceControl": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SiteSourceControl"
            }
          }
        },
        "description": "JSON representation of a SiteSourceControl object. See example.",
        "required": true
      },
      "StringDictionary": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StringDictionary"
            }
          }
        },
        "description": "Application settings of the app.",
        "required": true
      },
      "StringDictionary2": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/StringDictionary"
            }
          }
        },
        "description": "Edited metadata of the app or deployment slot. See example.",
        "required": true
      }
    },
    "schemas": {
      "ApplicationLogsConfig": {
        "description": "Application logs configuration.",
        "properties": {
          "azureBlobStorage": {
            "$ref": "#/components/schemas/AzureBlobStorageApplicationLogsConfig",
            "description": "Application logs to blob storage configuration."
          },
          "azureTableStorage": {
            "$ref": "#/components/schemas/AzureTableStorageApplicationLogsConfig",
            "description": "Application logs to azure table storage configuration."
          },
          "fileSystem": {
            "$ref": "#/components/schemas/FileSystemApplicationLogsConfig",
            "description": "Application logs to file system configuration."
          }
        },
        "type": "object"
      },
      "AzureBlobStorageApplicationLogsConfig": {
        "description": "Application logs azure blob storage configuration.",
        "properties": {
          "level": {
            "description": "Log level.",
            "enum": [
              "Off",
              "Verbose",
              "Information",
              "Warning",
              "Error"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LogLevel"
            }
          },
          "retentionInDays": {
            "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
            "format": "int32",
            "type": "integer"
          },
          "sasUrl": {
            "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureBlobStorageHttpLogsConfig": {
        "description": "Http logs to azure blob storage configuration.",
        "properties": {
          "enabled": {
            "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
            "type": "boolean"
          },
          "retentionInDays": {
            "description": "Retention in days.\nRemove blobs older than X days.\n0 or lower means no retention.",
            "format": "int32",
            "type": "integer"
          },
          "sasUrl": {
            "description": "SAS url to a azure blob container with read/write/list/delete permissions.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AzureTableStorageApplicationLogsConfig": {
        "description": "Application logs to Azure table storage configuration.",
        "properties": {
          "level": {
            "description": "Log level.",
            "enum": [
              "Off",
              "Verbose",
              "Information",
              "Warning",
              "Error"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LogLevel"
            }
          },
          "sasUrl": {
            "description": "SAS URL to an Azure table with add/query/delete permissions.",
            "type": "string"
          }
        },
        "required": [
          "sasUrl"
        ],
        "type": "object"
      },
      "BackupItem": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Backup description.",
        "properties": {
          "properties": {
            "description": "BackupItem resource specific properties",
            "properties": {
              "blobName": {
                "description": "Name of the blob which contains data for this backup.",
                "readOnly": true,
                "type": "string"
              },
              "correlationId": {
                "description": "Unique correlation identifier. Please use this along with the timestamp while communicating with Azure support.",
                "readOnly": true,
                "type": "string"
              },
              "created": {
                "description": "Timestamp of the backup creation.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "databases": {
                "description": "List of databases included in the backup.",
                "items": {
                  "$ref": "#/components/schemas/DatabaseBackupSetting"
                },
                "readOnly": true,
                "type": "array"
              },
              "finishedTimeStamp": {
                "description": "Timestamp when this backup finished.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "id": {
                "description": "Id of the backup.",
                "format": "int32",
                "readOnly": true,
                "type": "integer",
                "x-ms-client-name": "BackupId"
              },
              "lastRestoreTimeStamp": {
                "description": "Timestamp of a last restore operation which used this backup.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "log": {
                "description": "Details regarding this backup. Might contain an error message.",
                "readOnly": true,
                "type": "string"
              },
              "name": {
                "description": "Name of this backup.",
                "readOnly": true,
                "type": "string"
              },
              "scheduled": {
                "description": "True if this backup has been created due to a schedule being triggered.",
                "readOnly": true,
                "type": "boolean"
              },
              "sizeInBytes": {
                "description": "Size of the backup in bytes.",
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              },
              "status": {
                "description": "Backup status.",
                "enum": [
                  "InProgress",
                  "Failed",
                  "Succeeded",
                  "TimedOut",
                  "Created",
                  "Skipped",
                  "PartiallySucceeded",
                  "DeleteInProgress",
                  "DeleteFailed",
                  "Deleted"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "BackupItemStatus"
                }
              },
              "storageAccountUrl": {
                "description": "SAS URL for the storage account container which contains this backup.",
                "readOnly": true,
                "type": "string"
              },
              "websiteSizeInBytes": {
                "description": "Size of the original web app which has been backed up.",
                "format": "int64",
                "readOnly": true,
                "type": "integer"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BackupItemCollection": {
        "description": "Collection of backup items.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/BackupItem"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "BackupRequest": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Description of a backup which will be performed.",
        "properties": {
          "properties": {
            "description": "BackupRequest resource specific properties",
            "properties": {
              "backupSchedule": {
                "$ref": "#/components/schemas/BackupSchedule",
                "description": "Schedule for the backup if it is executed periodically."
              },
              "databases": {
                "description": "Databases included in the backup.",
                "items": {
                  "$ref": "#/components/schemas/DatabaseBackupSetting"
                },
                "type": "array"
              },
              "enabled": {
                "description": "True if the backup schedule is enabled (must be included in that case), false if the backup schedule should be disabled.",
                "type": "boolean"
              },
              "name": {
                "description": "Name of the backup.",
                "type": "string",
                "x-ms-client-name": "BackupRequestName"
              },
              "storageAccountUrl": {
                "description": "SAS URL to the container.",
                "type": "string"
              },
              "type": {
                "description": "Type of the backup.",
                "enum": [
                  "Default",
                  "Clone",
                  "Relocation",
                  "Snapshot"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "BackupRestoreOperationType"
                }
              }
            },
            "required": [
              "name",
              "storageAccountUrl"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BackupSchedule": {
        "description": "Description of a backup schedule. Describes how often should be the backup performed and what should be the retention policy.",
        "properties": {
          "frequencyInterval": {
            "default": 7,
            "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and FrequencyUnit should be set to Day)",
            "format": "int32",
            "type": "integer"
          },
          "frequencyUnit": {
            "default": "Day",
            "description": "The unit of time for how often the backup should be executed (e.g. for weekly backup, this should be set to Day and FrequencyInterval should be set to 7)",
            "enum": [
              "Day",
              "Hour"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FrequencyUnit"
            }
          },
          "keepAtLeastOneBackup": {
            "default": true,
            "description": "True if the retention policy should always keep at least one backup in the storage account, regardless how old it is; false otherwise.",
            "type": "boolean"
          },
          "lastExecutionTime": {
            "description": "Last time when this schedule was triggered.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "retentionPeriodInDays": {
            "default": 30,
            "description": "After how many days backups should be deleted.",
            "format": "int32",
            "type": "integer"
          },
          "startTime": {
            "description": "When the schedule should start working.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "frequencyInterval",
          "frequencyUnit",
          "keepAtLeastOneBackup",
          "retentionPeriodInDays"
        ],
        "type": "object"
      },
      "ConnStringValueTypePair": {
        "description": "Database connection string value to type pair.",
        "properties": {
          "type": {
            "description": "Type of database.",
            "enum": [
              "MySql",
              "SQLServer",
              "SQLAzure",
              "Custom",
              "NotificationHub",
              "ServiceBus",
              "EventHub",
              "ApiHub",
              "DocDb",
              "RedisCache",
              "PostgreSQL"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ConnectionStringType"
            }
          },
          "value": {
            "description": "Value of pair.",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ],
        "type": "object"
      },
      "ConnectionStringDictionary": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "String dictionary resource.",
        "properties": {
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConnStringValueTypePair"
            },
            "description": "Connection strings.",
            "type": "object",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ContinuousWebJob": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Continuous Web Job Information.",
        "properties": {
          "properties": {
            "description": "ContinuousWebJob resource specific properties",
            "properties": {
              "detailedStatus": {
                "description": "Detailed status.",
                "type": "string"
              },
              "error": {
                "description": "Error information.",
                "type": "string"
              },
              "extraInfoUrl": {
                "description": "Extra Info URL.",
                "type": "string"
              },
              "jobType": {
                "description": "Job type.",
                "enum": [
                  "Continuous",
                  "Triggered"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "WebJobType"
                }
              },
              "logUrl": {
                "description": "Log URL.",
                "type": "string"
              },
              "name": {
                "description": "Job name. Used as job identifier in ARM resource URI.",
                "readOnly": true,
                "type": "string"
              },
              "runCommand": {
                "description": "Run command.",
                "type": "string"
              },
              "settings": {
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Job settings.",
                "type": "object"
              },
              "status": {
                "description": "Job status.",
                "enum": [
                  "Initializing",
                  "Starting",
                  "Running",
                  "PendingRestart",
                  "Stopped"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "ContinuousWebJobStatus"
                }
              },
              "url": {
                "description": "Job URL.",
                "type": "string"
              },
              "usingSdk": {
                "description": "Using SDK?",
                "type": "boolean"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ContinuousWebJobCollection": {
        "description": "Collection of Kudu continuous web job information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/ContinuousWebJob"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "CsmPublishingProfileOptions": {
        "description": "Publishing options for requested profile.",
        "properties": {
          "format": {
            "description": "Name of the format. Valid values are: \nFileZilla3\nWebDeploy -- default\nFtp",
            "enum": [
              "FileZilla3",
              "WebDeploy",
              "Ftp"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PublishingProfileFormat"
            }
          }
        },
        "type": "object"
      },
      "CsmSlotEntity": {
        "description": "Deployment slot parameters.",
        "properties": {
          "preserveVnet": {
            "description": "<code>true</code> to preserve Virtual Network to the slot during swap; otherwise, <code>false</code>.",
            "type": "boolean"
          },
          "targetSlot": {
            "description": "Destination deployment slot during swap operation.",
            "type": "string"
          }
        },
        "required": [
          "targetSlot",
          "preserveVnet"
        ],
        "type": "object"
      },
      "CustomHostnameAnalysisResult": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Custom domain analysis.",
        "properties": {
          "properties": {
            "description": "CustomHostnameAnalysisResult resource specific properties",
            "properties": {
              "aRecords": {
                "description": "A records controller can see for this hostname.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "alternateCNameRecords": {
                "description": "Alternate CName records controller can see for this hostname.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "alternateTxtRecords": {
                "description": "Alternate TXT records controller can see for this hostname.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "cNameRecords": {
                "description": "CName records controller can see for this hostname.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "conflictingAppResourceId": {
                "description": "Name of the conflicting app on scale unit if it's within the same subscription.",
                "readOnly": true,
                "type": "string"
              },
              "customDomainVerificationFailureInfo": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ErrorEntity",
                "description": "Raw failure information if DNS verification fails.",
                "readOnly": true
              },
              "customDomainVerificationTest": {
                "description": "DNS verification test result.",
                "enum": [
                  "Passed",
                  "Failed",
                  "Skipped"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "DnsVerificationTestResult"
                }
              },
              "hasConflictAcrossSubscription": {
                "description": "<code>true</code> if there is a conflict across subscriptions; otherwise, <code>false</code>.",
                "readOnly": true,
                "type": "boolean"
              },
              "hasConflictOnScaleUnit": {
                "description": "<code>true</code> if there is a conflict on a scale unit; otherwise, <code>false</code>.",
                "readOnly": true,
                "type": "boolean"
              },
              "isHostnameAlreadyVerified": {
                "description": "<code>true</code> if hostname is already verified; otherwise, <code>false</code>.",
                "readOnly": true,
                "type": "boolean"
              },
              "txtRecords": {
                "description": "TXT records controller can see for this hostname.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DatabaseBackupSetting": {
        "description": "Database backup settings.",
        "properties": {
          "connectionString": {
            "description": "Contains a connection string to a database which is being backed up or restored. If the restore should happen to a new database, the database name inside is the new one.",
            "type": "string"
          },
          "connectionStringName": {
            "description": "Contains a connection string name that is linked to the SiteConfig.ConnectionStrings.\nThis is used during restore with overwrite connection strings options.",
            "type": "string"
          },
          "databaseType": {
            "description": "Database type (e.g. SqlAzure / MySql).",
            "enum": [
              "SqlAzure",
              "MySql",
              "LocalMySql",
              "PostgreSql"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DatabaseType"
            }
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "databaseType"
        ],
        "type": "object"
      },
      "Deployment": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "User credentials used for publishing activity.",
        "properties": {
          "properties": {
            "description": "Deployment resource specific properties",
            "properties": {
              "active": {
                "description": "True if deployment is currently active, false if completed and null if not started.",
                "type": "boolean"
              },
              "author": {
                "description": "Who authored the deployment.",
                "type": "string"
              },
              "authorEmail": {
                "description": "Author email.",
                "type": "string"
              },
              "deployer": {
                "description": "Who performed the deployment.",
                "type": "string"
              },
              "details": {
                "description": "Details on deployment.",
                "type": "string"
              },
              "endTime": {
                "description": "End time.",
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "description": "Identifier for deployment.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "message": {
                "description": "Details about deployment status.",
                "type": "string"
              },
              "startTime": {
                "description": "Start time.",
                "format": "date-time",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "status": {
                "description": "Deployment status.",
                "format": "int32",
                "type": "integer"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DeploymentCollection": {
        "description": "Collection of app deployments.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/Deployment"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "EnabledConfig": {
        "description": "Enabled configuration.",
        "properties": {
          "enabled": {
            "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FileSystemApplicationLogsConfig": {
        "description": "Application logs to file system configuration.",
        "properties": {
          "level": {
            "default": "Off",
            "description": "Log level.",
            "enum": [
              "Off",
              "Verbose",
              "Information",
              "Warning",
              "Error"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "LogLevel"
            }
          }
        },
        "type": "object"
      },
      "FileSystemHttpLogsConfig": {
        "description": "Http logs to file system configuration.",
        "properties": {
          "enabled": {
            "description": "True if configuration is enabled, false if it is disabled and null if configuration is not set.",
            "type": "boolean"
          },
          "retentionInDays": {
            "description": "Retention in days.\nRemove files older than X days.\n0 or lower means no retention.",
            "format": "int32",
            "type": "integer"
          },
          "retentionInMb": {
            "description": "Maximum size in megabytes that http log files can use.\nWhen reached old log files will be removed to make space for new ones.\nValue can range between 25 and 100.",
            "format": "int32",
            "maximum": 100,
            "minimum": 25,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "FunctionEnvelope": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Web Job Information.",
        "properties": {
          "properties": {
            "description": "FunctionEnvelope resource specific properties",
            "properties": {
              "config": {
                "description": "Config information.",
                "type": "object"
              },
              "configHref": {
                "description": "Config URI.",
                "type": "string"
              },
              "files": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "File list.",
                "type": "object"
              },
              "functionAppId": {
                "description": "Function App ID.",
                "readOnly": true,
                "type": "string"
              },
              "href": {
                "description": "Function URI.",
                "type": "string"
              },
              "name": {
                "description": "Function name.",
                "readOnly": true,
                "type": "string"
              },
              "scriptHref": {
                "description": "Script URI.",
                "type": "string"
              },
              "scriptRootPathHref": {
                "description": "Script root path URI.",
                "type": "string"
              },
              "secretsFileHref": {
                "description": "Secrets file URI.",
                "type": "string"
              },
              "testData": {
                "description": "Test data used when testing via the Azure Portal.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "FunctionEnvelopeCollection": {
        "description": "Collection of Kudu function information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/FunctionEnvelope"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "FunctionSecrets": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Function secrets.",
        "properties": {
          "properties": {
            "description": "FunctionSecrets resource specific properties",
            "properties": {
              "key": {
                "description": "Secret key.",
                "type": "string"
              },
              "triggerUrl": {
                "description": "Trigger URL.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "HostNameBinding": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A hostname binding object.",
        "properties": {
          "properties": {
            "description": "HostNameBinding resource specific properties",
            "properties": {
              "azureResourceName": {
                "description": "Azure resource name.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "azureResourceType": {
                "description": "Azure resource type.",
                "enum": [
                  "Website",
                  "TrafficManager"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "AzureResourceType"
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "customHostNameDnsRecordType": {
                "description": "Custom DNS record type.",
                "enum": [
                  "CName",
                  "A"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "CustomHostNameDnsRecordType"
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "domainId": {
                "description": "Fully qualified ARM domain resource URI.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "hostNameType": {
                "description": "Hostname type.",
                "enum": [
                  "Verified",
                  "Managed"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "HostNameType"
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "siteName": {
                "description": "App Service app name.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "sslState": {
                "description": "SSL type",
                "enum": [
                  "Disabled",
                  "SniEnabled",
                  "IpBasedEnabled"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "SslState"
                },
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "thumbprint": {
                "description": "SSL certificate thumbprint",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "virtualIP": {
                "description": "Virtual IP address assigned to the hostname if IP based SSL is enabled.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "HostNameBindingCollection": {
        "description": "Collection of hostname bindings.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/HostNameBinding"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "HttpLogsConfig": {
        "description": "Http logs configuration.",
        "properties": {
          "azureBlobStorage": {
            "$ref": "#/components/schemas/AzureBlobStorageHttpLogsConfig",
            "description": "Http logs to azure blob storage configuration."
          },
          "fileSystem": {
            "$ref": "#/components/schemas/FileSystemHttpLogsConfig",
            "description": "Http logs to file system configuration."
          }
        },
        "type": "object"
      },
      "MSDeploy": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "MSDeploy ARM PUT information",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MSDeployCore",
            "description": "Core resource properties",
            "properties": {
              "addOnPackages": {
                "description": "List of Add-On packages. Add-On packages implicitly enable the Do Not Delete MSDeploy rule.",
                "items": {
                  "$ref": "#/components/schemas/MSDeployCore"
                },
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MSDeployCore": {
        "description": "MSDeploy ARM PUT core information",
        "properties": {
          "appOffline": {
            "description": "Sets the AppOffline rule while the MSDeploy operation executes.\nSetting is <code>false</code> by default.",
            "type": "boolean"
          },
          "connectionString": {
            "description": "SQL Connection String",
            "type": "string"
          },
          "dbType": {
            "description": "Database Type",
            "type": "string"
          },
          "packageUri": {
            "description": "Package URI",
            "type": "string"
          },
          "setParameters": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.",
            "type": "object"
          },
          "setParametersXmlFileUri": {
            "description": "URI of MSDeploy Parameters file. Must not be set if SetParameters is used.",
            "type": "string"
          },
          "skipAppData": {
            "description": "Controls whether the MSDeploy operation skips the App_Data directory.\nIf set to <code>true</code>, the existing App_Data directory on the destination\nwill not be deleted, and any App_Data directory in the source will be ignored.\nSetting is <code>false</code> by default.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MSDeployLog": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "MSDeploy log",
        "properties": {
          "properties": {
            "description": "MSDeployLog resource specific properties",
            "properties": {
              "entries": {
                "description": "List of log entry messages",
                "items": {
                  "$ref": "#/components/schemas/MSDeployLogEntry"
                },
                "readOnly": true,
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MSDeployLogEntry": {
        "description": "MSDeploy log entry",
        "properties": {
          "message": {
            "description": "Log entry message",
            "readOnly": true,
            "type": "string"
          },
          "time": {
            "description": "Timestamp of log entry",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Log entry type",
            "enum": [
              "Message",
              "Warning",
              "Error"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MSDeployLogEntryType"
            }
          }
        },
        "type": "object"
      },
      "MSDeployStatus": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "MSDeploy ARM response",
        "properties": {
          "properties": {
            "description": "MSDeployStatus resource specific properties",
            "properties": {
              "complete": {
                "description": "Whether the deployment operation has completed",
                "readOnly": true,
                "type": "boolean"
              },
              "deployer": {
                "description": "Username of deployer",
                "readOnly": true,
                "type": "string"
              },
              "endTime": {
                "description": "End time of deploy operation",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "provisioningState": {
                "description": "Provisioning state",
                "enum": [
                  "accepted",
                  "running",
                  "succeeded",
                  "failed",
                  "canceled"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "MSDeployProvisioningState"
                }
              },
              "startTime": {
                "description": "Start time of deploy operation",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MigrateMySqlRequest": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "MySQL migration request.",
        "properties": {
          "properties": {
            "description": "MigrateMySqlRequest resource specific properties",
            "properties": {
              "connectionString": {
                "description": "Connection string to the remote MySQL database.",
                "type": "string"
              },
              "migrationType": {
                "description": "The type of migration operation to be done",
                "enum": [
                  "LocalToRemote",
                  "RemoteToLocal"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "MySqlMigrationType"
                }
              }
            },
            "required": [
              "connectionString",
              "migrationType"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MigrateMySqlStatus": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "MySQL migration status.",
        "properties": {
          "properties": {
            "description": "MigrateMySqlStatus resource specific properties",
            "properties": {
              "localMySqlEnabled": {
                "description": "True if the web app has in app MySql enabled",
                "readOnly": true,
                "type": "boolean"
              },
              "migrationOperationStatus": {
                "description": "Status of the migration task.",
                "enum": [
                  "InProgress",
                  "Failed",
                  "Succeeded",
                  "TimedOut",
                  "Created"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "OperationStatus"
                }
              },
              "operationId": {
                "description": "Operation ID for the migration task.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "NetworkFeatures": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Full view of network features for an app (presently VNET integration and Hybrid Connections).",
        "properties": {
          "properties": {
            "description": "NetworkFeatures resource specific properties",
            "properties": {
              "hybridConnections": {
                "description": "The Hybrid Connections summary view.",
                "items": {
                  "$ref": "#/components/schemas/RelayServiceConnectionEntity"
                },
                "readOnly": true,
                "type": "array"
              },
              "hybridConnectionsV2": {
                "description": "The Hybrid Connection V2 (Service Bus) view.",
                "items": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HybridConnection"
                },
                "readOnly": true,
                "type": "array"
              },
              "virtualNetworkConnection": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/VnetInfo",
                "description": "The Virtual Network summary view.",
                "readOnly": true
              },
              "virtualNetworkName": {
                "description": "The Virtual Network name.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PerfMonCounterCollection": {
        "description": "Collection of performance monitor counters.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/PerfMonResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PerfMonResponse": {
        "description": "Performance monitor API response.",
        "properties": {
          "code": {
            "description": "The response code.",
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/PerfMonSet",
            "description": "The performance monitor counters."
          },
          "message": {
            "description": "The message.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PerfMonSample": {
        "description": "Performance monitor sample in a set.",
        "properties": {
          "coreCount": {
            "description": "Core Count of worker. Not a data member",
            "format": "int32",
            "type": "integer"
          },
          "instanceName": {
            "description": "Name of the server on which the measurement is made.",
            "type": "string"
          },
          "time": {
            "description": "Point in time for which counter was measured.",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "Value of counter at a certain time.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "PerfMonSet": {
        "description": "Metric information.",
        "properties": {
          "endTime": {
            "description": "End time of the period.",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Unique key name of the counter.",
            "type": "string"
          },
          "startTime": {
            "description": "Start time of the period.",
            "format": "date-time",
            "type": "string"
          },
          "timeGrain": {
            "description": "Presented time grain.",
            "type": "string"
          },
          "values": {
            "description": "Collection of workers that are active during this time.",
            "items": {
              "$ref": "#/components/schemas/PerfMonSample"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PremierAddOn": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/Resource"
          }
        ],
        "description": "Premier add-on.",
        "properties": {
          "properties": {
            "description": "PremierAddOn resource specific properties",
            "properties": {
              "tags": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Premier add on Tags.",
                "type": "object"
              },
              "location": {
                "description": "Premier add on Location.",
                "type": "string"
              },
              "marketplaceOffer": {
                "description": "Premier add on Marketplace offer.",
                "type": "string"
              },
              "marketplacePublisher": {
                "description": "Premier add on Marketplace publisher.",
                "type": "string"
              },
              "name": {
                "description": "Premier add on Name.",
                "type": "string",
                "x-ms-client-name": "PremierAddOnName"
              },
              "product": {
                "description": "Premier add on Product.",
                "type": "string"
              },
              "sku": {
                "description": "Premier add on SKU.",
                "type": "string"
              },
              "vendor": {
                "description": "Premier add on Vendor.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProcessInfo": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Process Information.",
        "properties": {
          "properties": {
            "description": "ProcessInfo resource specific properties",
            "properties": {
              "children": {
                "description": "Child process list.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "commandLine": {
                "description": "Command line.",
                "type": "string"
              },
              "description": {
                "description": "Description of process.",
                "type": "string"
              },
              "environmentVariables": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "List of environment variables.",
                "type": "object"
              },
              "fileName": {
                "description": "File name of this process.",
                "type": "string"
              },
              "handleCount": {
                "description": "Handle count.",
                "format": "int32",
                "type": "integer"
              },
              "href": {
                "description": "HRef URI.",
                "type": "string"
              },
              "id": {
                "description": "ARM Identifier for deployment.",
                "format": "int32",
                "type": "integer",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "iisProfileTimeoutInSeconds": {
                "description": "IIS Profile timeout (seconds).",
                "format": "double",
                "type": "number"
              },
              "isIisProfileRunning": {
                "description": "Is the IIS Profile running?",
                "type": "boolean"
              },
              "isProfileRunning": {
                "description": "Is profile running?",
                "type": "boolean"
              },
              "isScmSite": {
                "description": "Is this the SCM site?",
                "type": "boolean"
              },
              "isWebJob": {
                "description": "Is this a Web Job?",
                "type": "boolean"
              },
              "miniDump": {
                "description": "Minidump URI.",
                "type": "string"
              },
              "moduleCount": {
                "description": "Module count.",
                "format": "int32",
                "type": "integer"
              },
              "modules": {
                "description": "List of modules.",
                "items": {
                  "$ref": "#/components/schemas/ProcessModuleInfo"
                },
                "type": "array"
              },
              "name": {
                "description": "Deployment name.",
                "type": "string"
              },
              "nonpagedSystemMemorySize64": {
                "description": "Non-paged system memory.",
                "format": "int64",
                "type": "integer"
              },
              "openFileHandles": {
                "description": "List of open files.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "pagedMemorySize64": {
                "description": "Paged memory.",
                "format": "int64",
                "type": "integer"
              },
              "pagedSystemMemorySize64": {
                "description": "Paged system memory.",
                "format": "int64",
                "type": "integer"
              },
              "parent": {
                "description": "Parent process.",
                "type": "string"
              },
              "peakPagedMemorySize64": {
                "description": "Peak paged memory.",
                "format": "int64",
                "type": "integer"
              },
              "peakVirtualMemorySize64": {
                "description": "Peak virtual memory usage.",
                "format": "int64",
                "type": "integer"
              },
              "peakWorkingSet64": {
                "description": "Peak working set.",
                "format": "int64",
                "type": "integer"
              },
              "privateMemorySize64": {
                "description": "Private memory size.",
                "format": "int64",
                "type": "integer"
              },
              "privilegedProcessorTime": {
                "description": "Privileged CPU time.",
                "type": "string"
              },
              "startTime": {
                "description": "Start time.",
                "format": "date-time",
                "type": "string"
              },
              "threadCount": {
                "description": "Thread count.",
                "format": "int32",
                "type": "integer"
              },
              "threads": {
                "description": "Thread list.",
                "items": {
                  "$ref": "#/components/schemas/ProcessThreadInfo"
                },
                "type": "array"
              },
              "timeStamp": {
                "description": "Time stamp.",
                "format": "date-time",
                "type": "string"
              },
              "totalProcessorTime": {
                "description": "Total CPU time.",
                "type": "string"
              },
              "userName": {
                "description": "User name.",
                "type": "string"
              },
              "userProcessorTime": {
                "description": "User CPU time.",
                "type": "string"
              },
              "virtualMemorySize64": {
                "description": "Virtual memory size.",
                "format": "int64",
                "type": "integer"
              },
              "workingSet64": {
                "description": "Working set.",
                "format": "int64",
                "type": "integer"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProcessInfoCollection": {
        "description": "Collection of Kudu process information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/ProcessInfo"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ProcessModuleInfo": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Process Module Information.",
        "properties": {
          "properties": {
            "description": "ProcessModuleInfo resource specific properties",
            "properties": {
              "baseAddress": {
                "description": "Base address. Used as module identifier in ARM resource URI.",
                "type": "string"
              },
              "fileDescription": {
                "description": "File description.",
                "type": "string"
              },
              "fileName": {
                "description": "File name.",
                "type": "string"
              },
              "filePath": {
                "description": "File path.",
                "type": "string"
              },
              "fileVersion": {
                "description": "File version.",
                "type": "string"
              },
              "href": {
                "description": "HRef URI.",
                "type": "string"
              },
              "isDebug": {
                "description": "Is debug?",
                "type": "boolean"
              },
              "language": {
                "description": "Module language (locale).",
                "type": "string"
              },
              "moduleMemorySize": {
                "description": "Module memory size.",
                "format": "int32",
                "type": "integer"
              },
              "product": {
                "description": "Product name.",
                "type": "string"
              },
              "productVersion": {
                "description": "Product version.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProcessModuleInfoCollection": {
        "description": "Collection of Kudu thread information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/ProcessModuleInfo"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ProcessThreadInfo": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Process Thread Information.",
        "properties": {
          "properties": {
            "description": "ProcessThreadInfo resource specific properties",
            "properties": {
              "basePriority": {
                "description": "Base priority.",
                "format": "int32",
                "type": "integer"
              },
              "currentPriority": {
                "description": "Current thread priority.",
                "format": "int32",
                "type": "integer"
              },
              "href": {
                "description": "HRef URI.",
                "type": "string"
              },
              "id": {
                "description": "ARM Identifier for deployment.",
                "format": "int32",
                "type": "integer"
              },
              "priorityLevel": {
                "description": "Thread priority level.",
                "type": "string"
              },
              "priviledgedProcessorTime": {
                "description": "Privileged processor time.",
                "type": "string"
              },
              "process": {
                "description": "Process URI.",
                "type": "string"
              },
              "startAddress": {
                "description": "Start address.",
                "type": "string"
              },
              "startTime": {
                "description": "Start time.",
                "format": "date-time",
                "type": "string"
              },
              "state": {
                "description": "Thread state.",
                "type": "string"
              },
              "totalProcessorTime": {
                "description": "Total processor time.",
                "type": "string"
              },
              "userProcessorTime": {
                "description": "User processor time.",
                "type": "string"
              },
              "waitReason": {
                "description": "Wait reason.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProcessThreadInfoCollection": {
        "description": "Collection of Kudu thread information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/ProcessThreadInfo"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "PublicCertificate": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Public certificate object",
        "properties": {
          "properties": {
            "description": "PublicCertificate resource specific properties",
            "properties": {
              "blob": {
                "description": "Public Certificate byte array",
                "format": "byte",
                "type": "string"
              },
              "publicCertificateLocation": {
                "description": "Public Certificate Location",
                "enum": [
                  "CurrentUserMy",
                  "LocalMachineMy",
                  "Unknown"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "PublicCertificateLocation"
                }
              },
              "thumbprint": {
                "description": "Certificate Thumbprint",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "PublicCertificateCollection": {
        "description": "Collection of public certificates",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/PublicCertificate"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "RelayServiceConnectionEntity": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Hybrid Connection for an App Service app.",
        "properties": {
          "properties": {
            "description": "RelayServiceConnectionEntity resource specific properties",
            "properties": {
              "biztalkUri": {
                "type": "string"
              },
              "entityConnectionString": {
                "type": "string"
              },
              "entityName": {
                "type": "string"
              },
              "hostname": {
                "type": "string"
              },
              "port": {
                "format": "int32",
                "type": "integer"
              },
              "resourceConnectionString": {
                "type": "string"
              },
              "resourceType": {
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RestoreRequest": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Description of a restore request.",
        "properties": {
          "properties": {
            "description": "RestoreRequest resource specific properties",
            "properties": {
              "adjustConnectionStrings": {
                "description": "<code>true</code> if SiteConfig.ConnectionStrings should be set in new app; otherwise, <code>false</code>.",
                "type": "boolean"
              },
              "appServicePlan": {
                "description": "Specify app service plan that will own restored site.",
                "type": "string"
              },
              "blobName": {
                "description": "Name of a blob which contains the backup.",
                "type": "string"
              },
              "databases": {
                "description": "Collection of databases which should be restored. This list has to match the list of databases included in the backup.",
                "items": {
                  "$ref": "#/components/schemas/DatabaseBackupSetting"
                },
                "type": "array"
              },
              "hostingEnvironment": {
                "description": "App Service Environment name, if needed (only when restoring an app to an App Service Environment).",
                "type": "string"
              },
              "ignoreConflictingHostNames": {
                "default": false,
                "description": "Changes a logic when restoring an app with custom domains. <code>true</code> to remove custom domains automatically. If <code>false</code>, custom domains are added to \nthe app's object when it is being restored, but that might fail due to conflicts during the operation.",
                "type": "boolean"
              },
              "ignoreDatabases": {
                "default": false,
                "description": "Ignore the databases and only restore the site content",
                "type": "boolean"
              },
              "operationType": {
                "default": "Default",
                "description": "Operation type.",
                "enum": [
                  "Default",
                  "Clone",
                  "Relocation",
                  "Snapshot"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "BackupRestoreOperationType"
                }
              },
              "overwrite": {
                "description": "<code>true</code> if the restore operation can overwrite target app; otherwise, <code>false</code>. <code>true</code> is needed if trying to restore over an existing app.",
                "type": "boolean"
              },
              "siteName": {
                "description": "Name of an app.",
                "type": "string"
              },
              "storageAccountUrl": {
                "description": "SAS URL to the container.",
                "type": "string"
              }
            },
            "required": [
              "storageAccountUrl",
              "overwrite"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RestoreResponse": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Response for an app restore request.",
        "properties": {
          "properties": {
            "description": "RestoreResponse resource specific properties",
            "properties": {
              "operationId": {
                "description": "When server starts the restore process, it will return an operation ID identifying that particular restore operation.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteAuthSettings": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Configuration settings for the Azure App Service Authentication / Authorization feature.",
        "properties": {
          "properties": {
            "description": "SiteAuthSettings resource specific properties",
            "properties": {
              "additionalLoginParams": {
                "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "allowedAudiences": {
                "description": "Allowed audience values to consider when validating JWTs issued by \nAzure Active Directory. Note that the <code>ClientID</code> value is always considered an\nallowed audience, regardless of this setting.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "allowedExternalRedirectUrls": {
                "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "clientId": {
                "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                "type": "string"
              },
              "clientSecret": {
                "description": "The Client Secret of this relying party application (in Azure Active Directory, this is also referred to as the Key).\nThis setting is optional. If no client secret is configured, the OpenID Connect implicit auth flow is used to authenticate end users.\nOtherwise, the OpenID Connect Authorization Code Flow is used to authenticate end users.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
                "type": "string"
              },
              "defaultProvider": {
                "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
                "enum": [
                  "AzureActiveDirectory",
                  "Facebook",
                  "Google",
                  "MicrosoftAccount",
                  "Twitter"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "BuiltInAuthenticationProvider"
                }
              },
              "enabled": {
                "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
                "type": "boolean"
              },
              "facebookAppId": {
                "description": "The App ID of the Facebook app used for login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
                "type": "string"
              },
              "facebookAppSecret": {
                "description": "The App Secret of the Facebook app used for Facebook Login.\nThis setting is required for enabling Facebook Login.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
                "type": "string"
              },
              "facebookOAuthScopes": {
                "description": "The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication.\nThis setting is optional.\nFacebook Login documentation: https://developers.facebook.com/docs/facebook-login",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "googleClientId": {
                "description": "The OpenID Connect Client ID for the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
                "type": "string"
              },
              "googleClientSecret": {
                "description": "The client secret associated with the Google web application.\nThis setting is required for enabling Google Sign-In.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
                "type": "string"
              },
              "googleOAuthScopes": {
                "description": "The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication.\nThis setting is optional. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.\nGoogle Sign-In documentation: https://developers.google.com/identity/sign-in/web/",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "issuer": {
                "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
                "type": "string"
              },
              "microsoftAccountClientId": {
                "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
                "type": "string"
              },
              "microsoftAccountClientSecret": {
                "description": "The OAuth 2.0 client secret that was created for the app used for authentication.\nThis setting is required for enabling Microsoft Account authentication.\nMicrosoft Account OAuth documentation: https://dev.onedrive.com/auth/msa_oauth.htm",
                "type": "string"
              },
              "microsoftAccountOAuthScopes": {
                "description": "The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication.\nThis setting is optional. If not specified, \"wl.basic\" is used as the default scope.\nMicrosoft Account Scopes and permissions documentation: https://msdn.microsoft.com/en-us/library/dn631845.aspx",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "runtimeVersion": {
                "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
                "type": "string"
              },
              "tokenRefreshExtensionHours": {
                "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
                "format": "double",
                "type": "number"
              },
              "tokenStoreEnabled": {
                "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
                "type": "boolean"
              },
              "twitterConsumerKey": {
                "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                "type": "string"
              },
              "twitterConsumerSecret": {
                "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
                "type": "string"
              },
              "unauthenticatedClientAction": {
                "description": "The action to take when an unauthenticated client attempts to access the app.",
                "enum": [
                  "RedirectToLoginPage",
                  "AllowAnonymous"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "UnauthenticatedClientAction"
                }
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteCloneability": {
        "description": "Represents whether or not an app is cloneable.",
        "properties": {
          "blockingCharacteristics": {
            "description": "List of blocking application characteristics.",
            "items": {
              "$ref": "#/components/schemas/SiteCloneabilityCriterion"
            },
            "type": "array"
          },
          "blockingFeatures": {
            "description": "List of features enabled on app that prevent cloning.",
            "items": {
              "$ref": "#/components/schemas/SiteCloneabilityCriterion"
            },
            "type": "array"
          },
          "result": {
            "description": "Name of app.",
            "enum": [
              "Cloneable",
              "PartiallyCloneable",
              "NotCloneable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "CloneAbilityResult"
            }
          },
          "unsupportedFeatures": {
            "description": "List of features enabled on app that are non-blocking but cannot be cloned. The app can still be cloned\nbut the features in this list will not be set up on cloned app.",
            "items": {
              "$ref": "#/components/schemas/SiteCloneabilityCriterion"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SiteCloneabilityCriterion": {
        "description": "An app cloneability criterion.",
        "properties": {
          "description": {
            "description": "Description of criterion.",
            "type": "string"
          },
          "name": {
            "description": "Name of criterion.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SiteConfigResource": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Web app configuration ARM resource.",
        "properties": {
          "properties": {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SiteConfig",
            "description": "Core resource properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteConfigResourceCollection": {
        "description": "Collection of site configurations.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SiteConfigResource"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SiteConfigurationSnapshotInfo": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A snapshot of a web app configuration.",
        "properties": {
          "properties": {
            "description": "SiteConfigurationSnapshotInfo resource specific properties",
            "properties": {
              "id": {
                "description": "The id of the snapshot",
                "format": "int32",
                "readOnly": true,
                "type": "integer"
              },
              "time": {
                "description": "The time the snapshot was taken.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteConfigurationSnapshotInfoCollection": {
        "description": "Collection of metadata for the app configuration snapshots that can be restored.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SiteConfigurationSnapshotInfo"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SiteExtensionInfo": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Site Extension Information.",
        "properties": {
          "properties": {
            "description": "SiteExtensionInfo resource specific properties",
            "properties": {
              "authors": {
                "description": "List of authors.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "comment": {
                "description": "Site Extension comment.",
                "type": "string"
              },
              "description": {
                "description": "Detailed description.",
                "type": "string"
              },
              "downloadCount": {
                "description": "Count of downloads.",
                "format": "int32",
                "type": "integer"
              },
              "extensionUrl": {
                "description": "Extension URL.",
                "type": "string"
              },
              "feedUrl": {
                "description": "Feed URL.",
                "type": "string"
              },
              "iconUrl": {
                "description": "Icon URL.",
                "type": "string"
              },
              "id": {
                "description": "Site extension ID.",
                "type": "string"
              },
              "installationArgs": {
                "description": "Installer command line parameters.",
                "type": "string"
              },
              "installedDateTime": {
                "description": "Installed timestamp.",
                "format": "date-time",
                "type": "string"
              },
              "licenseUrl": {
                "description": "License URL.",
                "type": "string"
              },
              "localIsLatestVersion": {
                "description": "<code>true</code> if the local version is the latest version; <code>false</code> otherwise.",
                "type": "boolean"
              },
              "localPath": {
                "description": "Local path.",
                "type": "string"
              },
              "projectUrl": {
                "description": "Project URL.",
                "type": "string"
              },
              "provisioningState": {
                "description": "Provisioning state.",
                "type": "string"
              },
              "publishedDateTime": {
                "description": "Published timestamp.",
                "format": "date-time",
                "type": "string"
              },
              "summary": {
                "description": "Summary description.",
                "type": "string"
              },
              "title": {
                "description": "Site extension title.",
                "type": "string"
              },
              "type": {
                "description": "Site extension type.",
                "enum": [
                  "Gallery",
                  "WebRoot"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "SiteExtensionType"
                }
              },
              "version": {
                "description": "Version information.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteExtensionInfoCollection": {
        "description": "Collection of Kudu site extension information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SiteExtensionInfo"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "SiteInstance": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Instance of an app.",
        "properties": {
          "properties": {
            "description": "SiteInstance resource specific properties",
            "properties": {
              "name": {
                "description": "Name of instance.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteLogsConfig": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Configuration of App Service site logs.",
        "properties": {
          "properties": {
            "description": "SiteLogsConfig resource specific properties",
            "properties": {
              "applicationLogs": {
                "$ref": "#/components/schemas/ApplicationLogsConfig",
                "description": "Application logs configuration."
              },
              "detailedErrorMessages": {
                "$ref": "#/components/schemas/EnabledConfig",
                "description": "Detailed error messages configuration."
              },
              "failedRequestsTracing": {
                "$ref": "#/components/schemas/EnabledConfig",
                "description": "Failed requests tracing configuration."
              },
              "httpLogs": {
                "$ref": "#/components/schemas/HttpLogsConfig",
                "description": "HTTP logs configuration."
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SitePatchResource": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "ARM resource for a site.",
        "properties": {
          "properties": {
            "description": "SitePatchResource resource specific properties",
            "properties": {
              "availabilityState": {
                "description": "Management information availability state for the app.",
                "enum": [
                  "Normal",
                  "Limited",
                  "DisasterRecoveryMode"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "SiteAvailabilityState"
                }
              },
              "clientAffinityEnabled": {
                "description": "<code>true</code> to enable client affinity; <code>false</code> to stop sending session affinity cookies, which route client requests in the same session to the same instance. Default is <code>true</code>.",
                "type": "boolean"
              },
              "clientCertEnabled": {
                "description": "<code>true</code> to enable client certificate authentication (TLS mutual authentication); otherwise, <code>false</code>. Default is <code>false</code>.",
                "type": "boolean"
              },
              "cloningInfo": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/CloningInfo",
                "description": "If specified during app creation, the app is cloned from a source app.",
                "x-ms-mutability": [
                  "create"
                ]
              },
              "containerSize": {
                "description": "Size of the function container.",
                "format": "int32",
                "type": "integer"
              },
              "dailyMemoryTimeQuota": {
                "description": "Maximum allowed daily memory-time quota (applicable on dynamic apps only).",
                "format": "int32",
                "type": "integer"
              },
              "defaultHostName": {
                "description": "Default hostname of the app. Read-only.",
                "readOnly": true,
                "type": "string"
              },
              "enabled": {
                "description": "<code>true</code> if the app is enabled; otherwise, <code>false</code>. Setting this value to false disables the app (takes the app offline).",
                "type": "boolean"
              },
              "enabledHostNames": {
                "description": "Enabled hostnames for the app.Hostnames need to be assigned (see HostNames) AND enabled. Otherwise,\nthe app is not served on those hostnames.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "hostNameSslStates": {
                "description": "Hostname SSL states are used to manage the SSL bindings for app's hostnames.",
                "items": {
                  "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HostNameSslState"
                },
                "type": "array"
              },
              "hostNames": {
                "description": "Hostnames associated with the app.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "hostNamesDisabled": {
                "description": "<code>true</code> to disable the public hostnames of the app; otherwise, <code>false</code>.\n If <code>true</code>, the app is only accessible via API management process.",
                "type": "boolean"
              },
              "hostingEnvironmentProfile": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/HostingEnvironmentProfile",
                "description": "App Service Environment to use for the app.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "httpsOnly": {
                "description": "HttpsOnly: configures a web site to accept only https requests. Issues redirect for\nhttp requests",
                "type": "boolean"
              },
              "isDefaultContainer": {
                "description": "<code>true</code> if the app is a default container; otherwise, <code>false</code>.",
                "readOnly": true,
                "type": "boolean"
              },
              "lastModifiedTimeUtc": {
                "description": "Last time the app was modified, in UTC. Read-only.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "maxNumberOfWorkers": {
                "description": "Maximum number of workers.\nThis only applies to Functions container.",
                "format": "int32",
                "readOnly": true,
                "type": "integer"
              },
              "outboundIpAddresses": {
                "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from tenants that site can be hosted with current settings. Read-only.",
                "readOnly": true,
                "type": "string"
              },
              "possibleOutboundIpAddresses": {
                "description": "List of IP addresses that the app uses for outbound connections (e.g. database access). Includes VIPs from all tenants. Read-only.",
                "readOnly": true,
                "type": "string"
              },
              "repositorySiteName": {
                "description": "Name of the repository site.",
                "readOnly": true,
                "type": "string"
              },
              "reserved": {
                "default": false,
                "description": "<code>true</code> if reserved; otherwise, <code>false</code>.",
                "type": "boolean",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "resourceGroup": {
                "description": "Name of the resource group the app belongs to. Read-only.",
                "readOnly": true,
                "type": "string"
              },
              "scmSiteAlsoStopped": {
                "default": false,
                "description": "<code>true</code> to stop SCM (KUDU) site when the app is stopped; otherwise, <code>false</code>. The default is <code>false</code>.",
                "type": "boolean"
              },
              "serverFarmId": {
                "description": "Resource ID of the associated App Service plan, formatted as: \"/subscriptions/{subscriptionID}/resourceGroups/{groupName}/providers/Microsoft.Web/serverfarms/{appServicePlanName}\".",
                "type": "string"
              },
              "siteConfig": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SiteConfig",
                "description": "Configuration of the app."
              },
              "slotSwapStatus": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SlotSwapStatus",
                "description": "Status of the last deployment slot swap operation.",
                "readOnly": true
              },
              "snapshotInfo": {
                "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/SnapshotRecoveryRequest",
                "description": "If specified during app creation, the app is created from a previous snapshot.",
                "x-ms-mutability": [
                  "create"
                ]
              },
              "state": {
                "description": "Current state of the app.",
                "readOnly": true,
                "type": "string"
              },
              "suspendedTill": {
                "description": "App suspended till in case memory-time quota is exceeded.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "targetSwapSlot": {
                "description": "Specifies which deployment slot this app will swap into. Read-only.",
                "readOnly": true,
                "type": "string"
              },
              "trafficManagerHostNames": {
                "description": "Azure Traffic Manager hostnames associated with the app. Read-only.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "usageState": {
                "description": "State indicating whether the app has exceeded its quota usage. Read-only.",
                "enum": [
                  "Normal",
                  "Exceeded"
                ],
                "readOnly": true,
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "UsageState"
                }
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SitePhpErrorLogFlag": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Used for getting PHP error logging flag.",
        "properties": {
          "properties": {
            "description": "SitePhpErrorLogFlag resource specific properties",
            "properties": {
              "localLogErrors": {
                "description": "Local log_errors setting.",
                "type": "string"
              },
              "localLogErrorsMaxLength": {
                "description": "Local log_errors_max_len setting.",
                "type": "string"
              },
              "masterLogErrors": {
                "description": "Master log_errors setting.",
                "type": "string"
              },
              "masterLogErrorsMaxLength": {
                "description": "Master log_errors_max_len setting.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SiteSourceControl": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Source control configuration for an app.",
        "properties": {
          "properties": {
            "description": "SiteSourceControl resource specific properties",
            "properties": {
              "branch": {
                "description": "Name of branch to use for deployment.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "deploymentRollbackEnabled": {
                "description": "<code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
                "type": "boolean",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "isManualIntegration": {
                "description": "<code>true</code> to limit to manual integration; <code>false</code> to enable continuous integration (which configures webhooks into online repos like GitHub).",
                "type": "boolean",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "isMercurial": {
                "description": "<code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
                "type": "boolean",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "repoUrl": {
                "description": "Repository or source control URL.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SlotConfigNames": {
        "description": "Names for connection strings and application settings to be marked as sticky to the deployment slot and not moved during a swap operation.\nThis is valid for all deployment slots in an app.",
        "properties": {
          "appSettingNames": {
            "description": "List of application settings names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "connectionStringNames": {
            "description": "List of connection string names.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SlotConfigNamesResource": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Slot Config names azure resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SlotConfigNames",
            "description": "Core resource properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SlotDifference": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A setting difference between two deployment slots of an app.",
        "properties": {
          "properties": {
            "description": "SlotDifference resource specific properties",
            "properties": {
              "description": {
                "description": "Description of the setting difference.",
                "readOnly": true,
                "type": "string"
              },
              "diffRule": {
                "description": "Rule that describes how to process the setting difference during a slot swap.",
                "readOnly": true,
                "type": "string"
              },
              "settingName": {
                "description": "Name of the setting.",
                "readOnly": true,
                "type": "string"
              },
              "settingType": {
                "description": "The type of the setting: General, AppSetting or ConnectionString.",
                "readOnly": true,
                "type": "string"
              },
              "type": {
                "description": "Type of the difference: Information, Warning or Error.",
                "readOnly": true,
                "type": "string"
              },
              "valueInCurrentSlot": {
                "description": "Value of the setting in the current slot.",
                "readOnly": true,
                "type": "string"
              },
              "valueInTargetSlot": {
                "description": "Value of the setting in the target slot.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SlotDifferenceCollection": {
        "description": "Collection of slot differences.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SlotDifference"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Snapshot": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "A snapshot of an app.",
        "properties": {
          "properties": {
            "description": "Snapshot resource specific properties",
            "properties": {
              "time": {
                "description": "The time the snapshot was taken.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "SnapshotCollection": {
        "description": "Collection of snapshots which can be used to revert an app to a previous time.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "StorageMigrationOptions": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Options for app content migration.",
        "properties": {
          "properties": {
            "description": "StorageMigrationOptions resource specific properties",
            "properties": {
              "azurefilesConnectionString": {
                "description": "AzureFiles connection string.",
                "type": "string",
                "x-ms-mutability": [
                  "create"
                ]
              },
              "azurefilesShare": {
                "description": "AzureFiles share.",
                "type": "string",
                "x-ms-mutability": [
                  "create"
                ]
              },
              "blockWriteAccessToSite": {
                "default": false,
                "description": "<code>true</code> if the app should be read only during copy operation; otherwise, <code>false</code>.",
                "type": "boolean",
                "x-ms-mutability": [
                  "create"
                ]
              },
              "switchSiteAfterMigration": {
                "default": false,
                "description": "<code>true</code>if the app should be switched over; otherwise, <code>false</code>.",
                "type": "boolean",
                "x-ms-mutability": [
                  "create"
                ]
              }
            },
            "required": [
              "azurefilesConnectionString",
              "azurefilesShare"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "StorageMigrationResponse": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Response for a migration of app content request.",
        "properties": {
          "properties": {
            "description": "StorageMigrationResponse resource specific properties",
            "properties": {
              "operationId": {
                "description": "When server starts the migration process, it will return an operation ID identifying that particular migration operation.",
                "readOnly": true,
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "StringDictionary": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "String dictionary resource.",
        "properties": {
          "properties": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Settings.",
            "type": "object",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TriggeredJobHistory": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Triggered Web Job History. List of Triggered Web Job Run Information elements.",
        "properties": {
          "properties": {
            "description": "TriggeredJobHistory resource specific properties",
            "properties": {
              "triggeredJobRuns": {
                "description": "List of triggered web job runs.",
                "items": {
                  "$ref": "#/components/schemas/TriggeredJobRun"
                },
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TriggeredJobHistoryCollection": {
        "description": "Collection of Kudu continuous web job information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/TriggeredJobHistory"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "TriggeredJobRun": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Triggered Web Job Run Information.",
        "properties": {
          "properties": {
            "description": "TriggeredJobRun resource specific properties",
            "properties": {
              "duration": {
                "description": "Job duration.",
                "type": "string"
              },
              "endTime": {
                "description": "End time.",
                "format": "date-time",
                "type": "string"
              },
              "errorUrl": {
                "description": "Error URL.",
                "type": "string"
              },
              "id": {
                "description": "Job ID.",
                "type": "string",
                "x-ms-mutability": [
                  "create",
                  "read"
                ]
              },
              "jobName": {
                "description": "Job name.",
                "type": "string"
              },
              "name": {
                "description": "Job name.",
                "readOnly": true,
                "type": "string"
              },
              "outputUrl": {
                "description": "Output URL.",
                "type": "string"
              },
              "startTime": {
                "description": "Start time.",
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "description": "Job status.",
                "enum": [
                  "Success",
                  "Failed",
                  "Error"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "TriggeredWebJobStatus"
                }
              },
              "trigger": {
                "description": "Job trigger.",
                "type": "string"
              },
              "url": {
                "description": "Job URL.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TriggeredWebJob": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Triggered Web Job Information.",
        "properties": {
          "properties": {
            "description": "TriggeredWebJob resource specific properties",
            "properties": {
              "error": {
                "description": "Error information.",
                "type": "string"
              },
              "extraInfoUrl": {
                "description": "Extra Info URL.",
                "type": "string"
              },
              "historyUrl": {
                "description": "History URL.",
                "type": "string"
              },
              "jobType": {
                "description": "Job type.",
                "enum": [
                  "Continuous",
                  "Triggered"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "WebJobType"
                }
              },
              "latestRun": {
                "$ref": "#/components/schemas/TriggeredJobRun",
                "description": "Latest job run information."
              },
              "name": {
                "description": "Job name. Used as job identifier in ARM resource URI.",
                "readOnly": true,
                "type": "string"
              },
              "runCommand": {
                "description": "Run command.",
                "type": "string"
              },
              "schedulerLogsUrl": {
                "description": "Scheduler Logs URL.",
                "type": "string"
              },
              "settings": {
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Job settings.",
                "type": "object"
              },
              "url": {
                "description": "Job URL.",
                "type": "string"
              },
              "usingSdk": {
                "description": "Using SDK?",
                "type": "boolean"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "TriggeredWebJobCollection": {
        "description": "Collection of Kudu continuous web job information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/TriggeredWebJob"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WebAppInstanceCollection": {
        "description": "Collection of app instances.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/SiteInstance"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WebJob": {
        "allOf": [
          {
            "$ref": "../2016-03-01/CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Web Job Information.",
        "properties": {
          "properties": {
            "description": "WebJob resource specific properties",
            "properties": {
              "error": {
                "description": "Error information.",
                "type": "string"
              },
              "extraInfoUrl": {
                "description": "Extra Info URL.",
                "type": "string"
              },
              "jobType": {
                "description": "Job type.",
                "enum": [
                  "Continuous",
                  "Triggered"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "WebJobType"
                }
              },
              "name": {
                "description": "Job name. Used as job identifier in ARM resource URI.",
                "readOnly": true,
                "type": "string"
              },
              "runCommand": {
                "description": "Run command.",
                "type": "string"
              },
              "settings": {
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Job settings.",
                "type": "object"
              },
              "url": {
                "description": "Job URL.",
                "type": "string"
              },
              "usingSdk": {
                "description": "Using SDK?",
                "type": "boolean"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WebJobCollection": {
        "description": "Collection of Kudu web job information elements.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/WebJob"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}