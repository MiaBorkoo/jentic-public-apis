openapi: 3.0.0
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: 2015-11-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices':
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      tags:
        - ContainerService
      description: The operation to list container services.
      operationId: ContainerService_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}':
    delete:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service within the given subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: No Content
      tags:
        - ContainerService
      description: The operation to delete a container service.
      operationId: ContainerService_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service within the given subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
            text/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
      tags:
        - ContainerService
      description: The operation to get a container service.
      operationId: ContainerService_Get
    put:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service within the given subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
            text/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
            text/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Created
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
            text/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Accepted
      tags:
        - ContainerService
      description: The operation to create or update a container service.
      operationId: ContainerService_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerService'
          text/json:
            schema:
              $ref: '#/components/schemas/ContainerService'
        description: Parameters supplied to the Create Container Service operation.
        required: true
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: >-
        Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    ContainerService:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Container service
      properties:
        properties:
          $ref: '#/components/schemas/ContainerServiceProperties'
          x-ms-client-flatten: true
      type: object
    ContainerServiceAgentPoolProfile:
      description: Profile for container service agent pool
      properties:
        count:
          description: No. of agents (VMs) that will host docker containers
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create FQDN for this agent pool
          type: string
        fqdn:
          description: FQDN for the agent pool
          readOnly: true
          type: string
        name:
          description: >-
            Unique name of the agent pool profile within the context of the
            subscription and resource group
          type: string
        vmSize:
          description: Size of agent VMs
          enum:
            - Standard_A0
            - Standard_A1
            - Standard_A2
            - Standard_A3
            - Standard_A4
            - Standard_A5
            - Standard_A6
            - Standard_A7
            - Standard_A8
            - Standard_A9
            - Standard_A10
            - Standard_A11
            - Standard_D1
            - Standard_D2
            - Standard_D3
            - Standard_D4
            - Standard_D11
            - Standard_D12
            - Standard_D13
            - Standard_D14
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_D14_v2
            - Standard_G1
            - Standard_G2
            - Standard_G3
            - Standard_G4
            - Standard_G5
            - Standard_DS1
            - Standard_DS2
            - Standard_DS3
            - Standard_DS4
            - Standard_DS11
            - Standard_DS12
            - Standard_DS13
            - Standard_DS14
            - Standard_GS1
            - Standard_GS2
            - Standard_GS3
            - Standard_GS4
            - Standard_GS5
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerServiceVMSizeTypes
      required:
        - name
        - dnsPrefix
      type: object
    ContainerServiceDiagnosticsProfile:
      properties:
        vmDiagnostics:
          $ref: '#/components/schemas/ContainerServiceVMDiagnostics'
          description: Profile for container service VM diagnostic agent
      type: object
    ContainerServiceLinuxProfile:
      description: Profile for Linux VM
      properties:
        adminUsername:
          description: The administrator username to use for all Linux VMs
          type: string
        ssh:
          $ref: '#/components/schemas/ContainerServiceSshConfiguration'
          description: Specifies the ssh key configuration for Linux VMs
      required:
        - adminUsername
        - ssh
      type: object
    ContainerServiceListResult:
      description: The List Container Service operation response
      properties:
        value:
          description: Gets or sets the list of container services.
          items:
            $ref: '#/components/schemas/ContainerService'
          type: array
      type: object
    ContainerServiceMasterProfile:
      description: Profile for container service master
      properties:
        count:
          description: Number of masters (VMs) in the container cluster
          enum:
            - 1
            - 3
            - 5
          format: int32
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create FQDN for master
          type: string
        fqdn:
          description: FQDN for the master
          readOnly: true
          type: string
      required:
        - dnsPrefix
      type: object
    ContainerServiceOrchestratorProfile:
      description: Profile for Orchestrator
      properties:
        orchestratorType:
          description: >-
            Specifies what orchestrator will be used to manage container cluster
            resources.
          enum:
            - Mesos
            - SwarmPreview
            - DCOS
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerServiceOchestratorTypes
      type: object
    ContainerServiceProperties:
      description: Properties of container service
      properties:
        agentPoolProfiles:
          description: Properties of agent pools
          items:
            $ref: '#/components/schemas/ContainerServiceAgentPoolProfile'
          type: array
        diagnosticsProfile:
          $ref: '#/components/schemas/ContainerServiceDiagnosticsProfile'
          description: Properties for Diagnostic Agent
        linuxProfile:
          $ref: '#/components/schemas/ContainerServiceLinuxProfile'
          description: Properties for Linux VMs
        masterProfile:
          $ref: '#/components/schemas/ContainerServiceMasterProfile'
          description: Properties of master agents
        orchestratorProfile:
          $ref: '#/components/schemas/ContainerServiceOrchestratorProfile'
          description: Properties of orchestrator
        provisioningState:
          description: 'Gets the provisioning state, which only appears in the response.'
          readOnly: true
          type: string
        windowsProfile:
          $ref: '#/components/schemas/ContainerServiceWindowsProfile'
          description: Properties of Windows VMs
      required:
        - masterProfile
        - agentPoolProfiles
        - linuxProfile
      type: object
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux based VMs running on Azure
      properties:
        publicKeys:
          description: >-
            Gets or sets the list of SSH public keys used to authenticate with
            Linux based VMs
          items:
            $ref: '#/components/schemas/ContainerServiceSshPublicKey'
          type: array
      type: object
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      properties:
        keyData:
          description: >-
            Gets or sets Certificate public key used to authenticate with VM
            through SSH. The certificate must be in Pem format with or without
            headers.
          type: string
      required:
        - keyData
      type: object
    ContainerServiceVMDiagnostics:
      description: Describes VM Diagnostics.
      properties:
        enabled:
          description: >-
            Gets or sets whether VM Diagnostic Agent should be provisioned on
            the Virtual Machine.
          type: boolean
        storageUri:
          description: >-
            Gets or sets whether VM Diagnostic Agent should be provisioned on
            the Virtual Machine.
          readOnly: true
          type: string
      type: object
    ContainerServiceWindowsProfile:
      description: Profile for Windows jumpbox
      properties:
        adminPassword:
          description: The administrator password to use for Windows jumpbox
          type: string
        adminUsername:
          description: The administrator username to use for Windows jumpbox
          type: string
      required:
        - adminUsername
        - adminPassword
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
        - location
      type: object
      x-ms-azure-resource: true
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

