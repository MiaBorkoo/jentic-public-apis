openapi: 3.0.0
info:
  description: The Container Service Client.
  title: ContainerServiceClient
  version: '2016-03-30'
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.ContainerService/containerServices':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      tags:
        - ContainerServices
      description: >-
        Gets a list of container services in the specified subscription. The
        operation returns properties of each container service including state,
        orchestrator, number of masters and agents, and FQDNs of masters and
        agents.
      operationId: ContainerServices_List
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices':
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerServiceListResult'
          description: OK
      tags:
        - ContainerService
      description: >-
        Gets a list of container services in the specified subscription and
        resource group. The operation returns properties of each container
        service including state, orchestrator, number of masters and agents, and
        FQDNs of masters and agents.
      operationId: ContainerServices_ListByResourceGroup
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/containerServices/{containerServiceName}':
    delete:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '202':
          description: Accepted
        '204':
          description: Not found
      tags:
        - ContainerService
      description: >-
        Deletes the specified container service in the specified subscription
        and resource group. The operation does not delete other resources
        created as part of creating a container service, including storage
        accounts, VMs, and availability sets. All the other resources created
        with the container service are part of the same resource group and can
        be deleted individually.
      operationId: ContainerServices_Delete
      x-ms-long-running-operation: true
    get:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
      tags:
        - ContainerService
      description: >-
        Gets the properties of the specified container service in the specified
        subscription and resource group. The operation returns the properties
        including state, orchestrator, number of masters and agents, and FQDNs
        of masters and agents. 
      operationId: ContainerServices_Get
    put:
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          schema:
            type: string
        - description: >-
            The name of the container service in the specified subscription and
            resource group.
          in: path
          name: containerServiceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: OK
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Created
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerService'
          description: Accepted
      tags:
        - ContainerServices
      description: >-
        Creates or updates a container service with the specified configuration
        of orchestrator, masters, and agents.
      operationId: ContainerServices_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerService'
        description: >-
          Parameters supplied to the Create or Update a Container Service
          operation.
        required: true
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: >-
        Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    ContainerService:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Container service.
      properties:
        properties:
          $ref: '#/components/schemas/ContainerServiceProperties'
          x-ms-client-flatten: true
      type: object
    ContainerServiceAgentPoolProfile:
      description: Profile for the container service agent pool.
      properties:
        count:
          description: >-
            Number of agents (VMs) to host docker containers. Allowed values
            must be in the range of 1 to 100 (inclusive). The default value is
            1. 
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for the agent pool.
          type: string
        fqdn:
          description: FQDN for the agent pool.
          readOnly: true
          type: string
        name:
          description: >-
            Unique name of the agent pool profile in the context of the
            subscription and resource group.
          type: string
        vmSize:
          description: Size of agent VMs.
          enum:
            - Standard_A0
            - Standard_A1
            - Standard_A2
            - Standard_A3
            - Standard_A4
            - Standard_A5
            - Standard_A6
            - Standard_A7
            - Standard_A8
            - Standard_A9
            - Standard_A10
            - Standard_A11
            - Standard_D1
            - Standard_D2
            - Standard_D3
            - Standard_D4
            - Standard_D11
            - Standard_D12
            - Standard_D13
            - Standard_D14
            - Standard_D1_v2
            - Standard_D2_v2
            - Standard_D3_v2
            - Standard_D4_v2
            - Standard_D5_v2
            - Standard_D11_v2
            - Standard_D12_v2
            - Standard_D13_v2
            - Standard_D14_v2
            - Standard_G1
            - Standard_G2
            - Standard_G3
            - Standard_G4
            - Standard_G5
            - Standard_DS1
            - Standard_DS2
            - Standard_DS3
            - Standard_DS4
            - Standard_DS11
            - Standard_DS12
            - Standard_DS13
            - Standard_DS14
            - Standard_GS1
            - Standard_GS2
            - Standard_GS3
            - Standard_GS4
            - Standard_GS5
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerServiceVMSizeTypes
      required:
        - name
        - dnsPrefix
        - vmSize
      type: object
    ContainerServiceDiagnosticsProfile:
      properties:
        vmDiagnostics:
          $ref: '#/components/schemas/ContainerServiceVMDiagnostics'
          description: Profile for the container service VM diagnostic agent.
      required:
        - vmDiagnostics
      type: object
    ContainerServiceLinuxProfile:
      description: Profile for Linux VMs in the container service cluster.
      properties:
        adminUsername:
          description: The administrator username to use for all Linux VMs
          type: string
        ssh:
          $ref: '#/components/schemas/ContainerServiceSshConfiguration'
          description: The ssh key configuration for Linux VMs.
      required:
        - adminUsername
        - ssh
      type: object
    ContainerServiceListResult:
      description: The response from the List Container Services operation.
      properties:
        value:
          description: the list of container services.
          items:
            $ref: '#/components/schemas/ContainerService'
          type: array
      type: object
    ContainerServiceMasterProfile:
      description: Profile for the container service master.
      properties:
        count:
          default: 1
          description: >-
            Number of masters (VMs) in the container service cluster. Allowed
            values are 1, 3, and 5. The default value is 1.
          enum:
            - 1
            - 3
            - 5
          format: int32
          type: integer
        dnsPrefix:
          description: DNS prefix to be used to create the FQDN for master.
          type: string
        fqdn:
          description: FQDN for the master.
          readOnly: true
          type: string
      required:
        - dnsPrefix
      type: object
    ContainerServiceOrchestratorProfile:
      description: Profile for the container service orchestrator.
      properties:
        orchestratorType:
          description: >-
            The orchestrator to use to manage container service cluster
            resources. Valid values are Swarm, DCOS, and Custom.
          enum:
            - Swarm
            - DCOS
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerServiceOchestratorTypes
      required:
        - orchestratorType
      type: object
    ContainerServiceProperties:
      description: Properties of the container service.
      properties:
        agentPoolProfiles:
          description: Properties of the agent pool.
          items:
            $ref: '#/components/schemas/ContainerServiceAgentPoolProfile'
          type: array
        diagnosticsProfile:
          $ref: '#/components/schemas/ContainerServiceDiagnosticsProfile'
          description: Properties of the diagnostic agent.
        linuxProfile:
          $ref: '#/components/schemas/ContainerServiceLinuxProfile'
          description: Properties of Linux VMs.
        masterProfile:
          $ref: '#/components/schemas/ContainerServiceMasterProfile'
          description: Properties of master agents.
        orchestratorProfile:
          $ref: '#/components/schemas/ContainerServiceOrchestratorProfile'
          description: Properties of the orchestrator.
        provisioningState:
          description: >-
            the current deployment or provisioning state, which only appears in
            the response.
          readOnly: true
          type: string
        windowsProfile:
          $ref: '#/components/schemas/ContainerServiceWindowsProfile'
          description: Properties of Windows VMs.
      required:
        - masterProfile
        - agentPoolProfiles
        - linuxProfile
      type: object
    ContainerServiceSshConfiguration:
      description: SSH configuration for Linux-based VMs running on Azure.
      properties:
        publicKeys:
          description: >-
            the list of SSH public keys used to authenticate with Linux-based
            VMs.
          items:
            $ref: '#/components/schemas/ContainerServiceSshPublicKey'
          type: array
      required:
        - publicKeys
      type: object
    ContainerServiceSshPublicKey:
      description: Contains information about SSH certificate public key data.
      properties:
        keyData:
          description: >-
            Certificate public key used to authenticate with VMs through SSH.
            The certificate must be in PEM format with or without headers.
          type: string
      required:
        - keyData
      type: object
    ContainerServiceVMDiagnostics:
      description: Profile for diagnostics on the container service VMs.
      properties:
        enabled:
          description: Whether the VM diagnostic agent is provisioned on the VM.
          type: boolean
        storageUri:
          description: The URI of the storage account where diagnostics are stored.
          readOnly: true
          type: string
      required:
        - enabled
      type: object
    ContainerServiceWindowsProfile:
      description: Profile for Windows VMs in the container service cluster.
      properties:
        adminPassword:
          description: The administrator password to use for Windows VMs
          type: string
        adminUsername:
          description: The administrator username to use for Windows VMs
          type: string
      required:
        - adminUsername
        - adminPassword
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        type:
          description: Resource type
          readOnly: true
          type: string
      required:
        - location
      type: object
      x-ms-azure-resource: true

