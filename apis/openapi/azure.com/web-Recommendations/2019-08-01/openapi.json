{
  "openapi": "3.0.0",
  "info": {
    "title": "Recommendations API Client",
    "version": "2019-08-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/web/resource-manager/Microsoft.Web/stable/2019-08-01/Recommendations.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations": {
      "get": {
        "parameters": [
          {
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "in": "query",
            "name": "featured",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "List all recommendations for a subscription.",
        "operationId": "Recommendations_List",
        "summary": "List all recommendations for a subscription.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/reset": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Reset all recommendation opt-out settings for a subscription.",
        "operationId": "Recommendations_ResetAllFilters",
        "summary": "Reset all recommendation opt-out settings for a subscription."
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Web/recommendations/{name}/disable": {
      "post": {
        "parameters": [
          {
            "description": "Rule name",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Disables the specified rule so it will not apply to a subscription in the future.",
        "operationId": "Recommendations_DisableRecommendationForSubscription",
        "summary": "Disables the specified rule so it will not apply to a subscription in the future."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendationHistory": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the hosting environment.",
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>false</code> to return all recommendations. The default is <code>true</code>, which returns only expired recommendations.",
            "in": "query",
            "name": "expiredOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get past recommendations for an app, optionally specified by the time range.",
        "operationId": "Recommendations_ListHistoryForHostingEnvironment",
        "summary": "Get past recommendations for an app, optionally specified by the time range.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "in": "query",
            "name": "featured",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification'",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get all recommendations for an app.",
        "operationId": "Recommendations_ListRecommendedRulesForHostingEnvironment",
        "summary": "Get all recommendations for an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "query",
            "name": "environmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Disable all recommendations for an app.",
        "operationId": "Recommendations_DisableAllForHostingEnvironment",
        "summary": "Disable all recommendations for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/reset": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "query",
            "name": "environmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Reset all recommendation opt-out settings for an app.",
        "operationId": "Recommendations_ResetAllFiltersForHostingEnvironment",
        "summary": "Reset all recommendation opt-out settings for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the hosting environment.",
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the recommendation.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>true</code> to update the last-seen timestamp of the recommendation object.",
            "in": "query",
            "name": "updateSeen",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.",
            "in": "query",
            "name": "recommendationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationRule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get a recommendation rule for an app.",
        "operationId": "Recommendations_GetRuleDetailsByHostingEnvironment",
        "summary": "Get a recommendation rule for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/hostingEnvironments/{hostingEnvironmentName}/recommendations/{name}/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name",
            "in": "query",
            "name": "environmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Rule name",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "hostingEnvironmentName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Disables the specific rule for a web site permanently.",
        "operationId": "Recommendations_DisableRecommendationForHostingEnvironment",
        "summary": "Disables the specific rule for a web site permanently."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendationHistory": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>false</code> to return all recommendations. The default is <code>true</code>, which returns only expired recommendations.",
            "in": "query",
            "name": "expiredOnly",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification' and startTime eq 2014-01-01T00:00:00Z and endTime eq 2014-12-31T23:59:59Z and timeGrain eq duration'[PT1H|PT1M|P1D]",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get past recommendations for an app, optionally specified by the time range.",
        "operationId": "Recommendations_ListHistoryForWebApp",
        "summary": "Get past recommendations for an app, optionally specified by the time range.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>true</code> to return only the most critical recommendations. The default is <code>false</code>, which returns all recommendations.",
            "in": "query",
            "name": "featured",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "allowReserved": true,
            "description": "Return only channels specified in the filter. Filter is specified by using OData syntax. Example: $filter=channel eq 'Api' or channel eq 'Notification'",
            "in": "query",
            "name": "$filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationCollection"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get all recommendations for an app.",
        "operationId": "Recommendations_ListRecommendedRulesForWebApp",
        "summary": "Get all recommendations for an app.",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Disable all recommendations for an app.",
        "operationId": "Recommendations_DisableAllForWebApp",
        "summary": "Disable all recommendations for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/reset": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Reset all recommendation opt-out settings for an app.",
        "operationId": "Recommendations_ResetAllFiltersForWebApp",
        "summary": "Reset all recommendation opt-out settings for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Name of the app.",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Name of the recommendation.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Specify <code>true</code> to update the last-seen timestamp of the recommendation object.",
            "in": "query",
            "name": "updateSeen",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The GUID of the recommendation object if you query an expired one. You don't need to specify it to query an active entry.",
            "in": "query",
            "name": "recommendationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendationRule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Get a recommendation rule for an app.",
        "operationId": "Recommendations_GetRuleDetailsByWebApp",
        "summary": "Get a recommendation rule for an app."
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/recommendations/{name}/disable": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "description": "Site name",
            "in": "path",
            "name": "siteName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Rule name",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully disabled recommendations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./CommonDefinitions.json#/definitions/DefaultErrorResponse"
                }
              }
            },
            "description": "App Service error response."
          }
        },
        "tags": [
          "Recommendations"
        ],
        "description": "Disables the specific rule for a web site permanently.",
        "operationId": "Recommendations_DisableRecommendationForSite",
        "summary": "Disables the specific rule for a web site permanently."
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "API Version",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "resourceGroupNameParameter": {
        "description": "Name of the resource group to which the resource belongs.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+[^\\.]$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Your Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Recommendation": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Represents a recommendation result generated by the recommendation engine.",
        "properties": {
          "properties": {
            "description": "Recommendation resource specific properties",
            "properties": {
              "actionName": {
                "description": "Name of action recommended by this object.",
                "type": "string"
              },
              "bladeName": {
                "description": "Deep link to a blade on the portal.",
                "type": "string"
              },
              "categoryTags": {
                "description": "The list of category tags that this recommendation belongs to.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "channels": {
                "description": "List of channels that this recommendation can apply.",
                "enum": [
                  "Notification",
                  "Api",
                  "Email",
                  "Webhook",
                  "All"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "Channels"
                }
              },
              "creationTime": {
                "description": "Timestamp when this instance was created.",
                "format": "date-time",
                "type": "string"
              },
              "displayName": {
                "description": "UI friendly name of the rule (may not be unique).",
                "type": "string"
              },
              "enabled": {
                "description": "True if this recommendation is still valid (i.e. \"actionable\"). False if it is invalid.",
                "format": "int32",
                "type": "integer"
              },
              "endTime": {
                "description": "The end time in UTC of a range that the recommendation refers to.",
                "format": "date-time",
                "type": "string"
              },
              "extensionName": {
                "description": "Extension name of the portal if exists.",
                "type": "string"
              },
              "forwardLink": {
                "description": "Forward link to an external document associated with the rule.",
                "type": "string"
              },
              "isDynamic": {
                "description": "True if this is associated with a dynamically added rule",
                "type": "boolean"
              },
              "level": {
                "description": "Level indicating how critical this recommendation can impact.",
                "enum": [
                  "Critical",
                  "Warning",
                  "Information",
                  "NonUrgentSuggestion"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "NotificationLevel"
                }
              },
              "message": {
                "description": "Recommendation text.",
                "type": "string"
              },
              "nextNotificationTime": {
                "description": "When to notify this recommendation next in UTC. Null means that this will never be notified anymore.",
                "format": "date-time",
                "type": "string"
              },
              "notificationExpirationTime": {
                "description": "Date and time in UTC when this notification expires.",
                "format": "date-time",
                "type": "string"
              },
              "notifiedTime": {
                "description": "Last timestamp in UTC this instance was actually notified. Null means that this recommendation hasn't been notified yet.",
                "format": "date-time",
                "type": "string"
              },
              "recommendationId": {
                "description": "A GUID value that each recommendation object is associated with.",
                "example": "00000000-0000-0000-0000-000000000000",
                "format": "uuid",
                "type": "string"
              },
              "resourceId": {
                "description": "Full ARM resource ID string that this recommendation object is associated with.",
                "type": "string"
              },
              "resourceScope": {
                "description": "Name of a resource type this recommendation applies, e.g. Subscription, ServerFarm, Site.",
                "enum": [
                  "ServerFarm",
                  "Subscription",
                  "WebSite"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ResourceScopeType"
                }
              },
              "ruleName": {
                "description": "Unique name of the rule.",
                "type": "string"
              },
              "score": {
                "description": "A metric value measured by the rule.",
                "format": "double",
                "type": "number"
              },
              "startTime": {
                "description": "The beginning time in UTC of a range that the recommendation refers to.",
                "format": "date-time",
                "type": "string"
              },
              "states": {
                "description": "The list of states of this recommendation. If it's null then it should be considered \"Active\".",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RecommendationCollection": {
        "description": "Collection of recommendations.",
        "properties": {
          "nextLink": {
            "description": "Link to next page of resources.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Collection of resources.",
            "items": {
              "$ref": "#/components/schemas/Recommendation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "RecommendationRule": {
        "allOf": [
          {
            "$ref": "./CommonDefinitions.json#/definitions/ProxyOnlyResource"
          }
        ],
        "description": "Represents a recommendation rule that the recommendation engine can perform.",
        "properties": {
          "properties": {
            "description": "RecommendationRule resource specific properties",
            "properties": {
              "actionName": {
                "description": "Name of action that is recommended by this rule in string.",
                "type": "string"
              },
              "bladeName": {
                "description": "Deep link to a blade on the portal. Applicable to dynamic rule only.",
                "type": "string"
              },
              "categoryTags": {
                "description": "The list of category tags that this recommendation rule belongs to.",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "type": "array"
              },
              "channels": {
                "description": "List of available channels that this rule applies.",
                "enum": [
                  "Notification",
                  "Api",
                  "Email",
                  "Webhook",
                  "All"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "Channels"
                }
              },
              "description": {
                "description": "Localized detailed description of the rule.",
                "type": "string"
              },
              "displayName": {
                "description": "UI friendly name of the rule.",
                "type": "string"
              },
              "extensionName": {
                "description": "Extension name of the portal if exists. Applicable to dynamic rule only.",
                "type": "string"
              },
              "forwardLink": {
                "description": "Forward link to an external document associated with the rule. Applicable to dynamic rule only.",
                "type": "string"
              },
              "isDynamic": {
                "description": "True if this is associated with a dynamically added rule",
                "type": "boolean"
              },
              "level": {
                "description": "Level of impact indicating how critical this rule is.",
                "enum": [
                  "Critical",
                  "Warning",
                  "Information",
                  "NonUrgentSuggestion"
                ],
                "type": "string",
                "x-ms-enum": {
                  "modelAsString": false,
                  "name": "NotificationLevel"
                }
              },
              "message": {
                "description": "Localized name of the rule (Good for UI).",
                "type": "string"
              },
              "recommendationId": {
                "description": "Recommendation ID of an associated recommendation object tied to the rule, if exists.\nIf such an object doesn't exist, it is set to null.",
                "example": "00000000-0000-0000-0000-000000000000",
                "format": "uuid",
                "type": "string"
              },
              "recommendationName": {
                "description": "Unique name of the rule.",
                "type": "string"
              }
            },
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}