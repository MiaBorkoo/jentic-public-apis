{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2015-06-15",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2015-06-15/expressRouteCircuit.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of ExpressRouteCircuit resources."
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "Gets all the express route circuits in a subscription.",
        "operationId": "ExpressRouteCircuits_ListAll",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteServiceProviders": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteServiceProviderListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteServiceProviderListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of ExpressRouteServiceProvider resources."
          }
        },
        "tags": [
          "ExpressRouteServiceProviders"
        ],
        "description": "Gets all the available express route service providers.",
        "operationId": "ExpressRouteServiceProviders_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitListResult"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource."
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "Gets all the express route circuits in a resource group.",
        "operationId": "ExpressRouteCircuits_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted. Sets 'Disabling' provisioningState until the operation completes. Returns an operation URI that can be queried to find the current state of the operation."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "Deletes the specified express route circuit.",
        "operationId": "ExpressRouteCircuits_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuit resource."
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "Gets information about the specified express route circuit.",
        "operationId": "ExpressRouteCircuits_Get"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuit resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuit"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuit resource."
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "Creates or updates an express route circuit.",
        "operationId": "ExpressRouteCircuits_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuit"
              }
            }
          },
          "description": "Parameters supplied to the create or update express route circuit operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/arpTable": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsArpTableListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsArpTableListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "The ListArpTable from ExpressRouteCircuit operation retrieves the currently advertised arp table associated with the ExpressRouteCircuits in a resource group.",
        "operationId": "ExpressRouteCircuits_ListArpTable",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of ExpressRouteCircuitAuthorization resources."
          }
        },
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "description": "Gets all authorizations in an express route circuit.",
        "operationId": "ExpressRouteCircuitAuthorizations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the authorization.",
            "in": "path",
            "name": "authorizationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "description": "Deletes the specified authorization from the specified express route circuit.",
        "operationId": "ExpressRouteCircuitAuthorizations_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the authorization.",
            "in": "path",
            "name": "authorizationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              }
            },
            "description": "Request successful. The operation returns the ExpressRouteCircuitAuthorization resource."
          }
        },
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "description": "Gets the specified authorization from the specified express route circuit.",
        "operationId": "ExpressRouteCircuitAuthorizations_Get"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the authorization.",
            "in": "path",
            "name": "authorizationName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuitAuthorization resource."
          }
        },
        "tags": [
          "ExpressRouteCircuitAuthorizations"
        ],
        "description": "Creates or updates an authorization in the specified express route circuit.",
        "operationId": "ExpressRouteCircuitAuthorizations_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
              }
            }
          },
          "description": "Parameters supplied to the create or update express route circuit authorization operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeeringListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeeringListResult"
                }
              }
            },
            "description": "Request successful. The operation returns a list of ExpressRouteCircuitPeering resources."
          }
        },
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "description": "Gets all peerings in a specified express route circuit.",
        "operationId": "ExpressRouteCircuitPeerings_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          }
        },
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "description": "Deletes the specified peering from the specified express route circuit.",
        "operationId": "ExpressRouteCircuitPeerings_Delete",
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              }
            },
            "description": "Request successful. The operation returns the resulting ExpressRouteCircuitPeering resource."
          }
        },
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "description": "Gets the specified authorization from the specified express route circuit.",
        "operationId": "ExpressRouteCircuitPeerings_Get"
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the express route circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the peering.",
            "in": "path",
            "name": "peeringName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting ExpressRouteCircuitPeering resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting ExpressRouteCircuitPeering resource."
          }
        },
        "tags": [
          "ExpressRouteCircuitPeerings"
        ],
        "description": "Creates or updates a peering in the specified express route circuits.",
        "operationId": "ExpressRouteCircuitPeerings_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
              }
            }
          },
          "description": "Parameters supplied to the create or update express route circuit peering operation.",
          "required": true
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/routesTable": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the circuit.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsRoutesTableListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsRoutesTableListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ExpressRouteCircuits"
        ],
        "description": "The ListRoutesTable from ExpressRouteCircuit operation retrieves the currently advertised routes table associated with the ExpressRouteCircuits in a resource group.",
        "operationId": "ExpressRouteCircuits_ListRoutesTable",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/stats": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the loadBalancer.",
            "in": "path",
            "name": "circuitName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsStatsListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpressRouteCircuitsStatsListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "ExpressRouteCircuitStats"
        ],
        "description": "The ListStats ExpressRouteCircuit operation retrieves all the stats from a ExpressRouteCircuits in a resource group.",
        "operationId": "ExpressRouteCircuits_ListStats",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "Client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "AuthorizationListResult": {
        "description": "Response for ListAuthorizations API service call retrieves all authorizations that belongs to an ExpressRouteCircuit.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The authorizations in an ExpressRoute Circuit.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AuthorizationPropertiesFormat": {
        "properties": {
          "authorizationKey": {
            "description": "The authorization key.",
            "type": "string"
          },
          "authorizationUseStatus": {
            "description": "AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.",
            "enum": [
              "Available",
              "InUse"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AuthorizationUseStatus"
            }
          },
          "provisioningState": {
            "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuit": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "ExpressRouteCircuit resource",
        "properties": {
          "etag": {
            "description": "Gets a unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ExpressRouteCircuitPropertiesFormat",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/ExpressRouteCircuitSku",
            "description": "The SKU."
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitArpTable": {
        "description": "The ARP table associated with the ExpressRouteCircuit.",
        "properties": {
          "ipAddress": {
            "description": "The IP address.",
            "type": "string"
          },
          "macAddress": {
            "description": "The MAC address.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitAuthorization": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Authorization in an ExpressRouteCircuit resource.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/AuthorizationPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitListResult": {
        "description": "Response for ListExpressRouteCircuit API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of ExpressRouteCircuits in a resource group.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuit"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitPeering": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/SubResource"
          }
        ],
        "description": "Peering in an ExpressRouteCircuit resource.",
        "properties": {
          "etag": {
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "name": {
            "description": "Gets name of the resource that is unique within a resource group. This name can be used to access the resource.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ExpressRouteCircuitPeeringPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitPeeringConfig": {
        "description": "Specifies the peering configuration.",
        "properties": {
          "advertisedPublicPrefixes": {
            "description": "The reference of AdvertisedPublicPrefixes.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "advertisedPublicPrefixesState": {
            "description": "AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.",
            "enum": [
              "NotConfigured",
              "Configuring",
              "Configured",
              "ValidationNeeded"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExpressRouteCircuitPeeringAdvertisedPublicPrefixState"
            }
          },
          "customerASN": {
            "description": "The CustomerASN of the peering.",
            "format": "int32",
            "type": "integer"
          },
          "routingRegistryName": {
            "description": "The RoutingRegistryName of the configuration.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitPeeringListResult": {
        "description": "Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The peerings in an express route circuit.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitPeeringPropertiesFormat": {
        "properties": {
          "azureASN": {
            "description": "The Azure ASN.",
            "format": "int32",
            "type": "integer"
          },
          "microsoftPeeringConfig": {
            "$ref": "#/components/schemas/ExpressRouteCircuitPeeringConfig",
            "description": "The Microsoft peering configuration."
          },
          "peerASN": {
            "description": "The peer ASN.",
            "format": "int32",
            "type": "integer"
          },
          "peeringType": {
            "description": "The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.",
            "enum": [
              "AzurePublicPeering",
              "AzurePrivatePeering",
              "MicrosoftPeering"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExpressRouteCircuitPeeringType"
            }
          },
          "primaryAzurePort": {
            "description": "The primary port.",
            "type": "string"
          },
          "primaryPeerAddressPrefix": {
            "description": "The primary address prefix.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "secondaryAzurePort": {
            "description": "The secondary port.",
            "type": "string"
          },
          "secondaryPeerAddressPrefix": {
            "description": "The secondary address prefix.",
            "type": "string"
          },
          "sharedKey": {
            "description": "The shared key.",
            "type": "string"
          },
          "state": {
            "description": "The state of peering. Possible values are: 'Disabled' and 'Enabled'",
            "enum": [
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExpressRouteCircuitPeeringState"
            }
          },
          "stats": {
            "$ref": "#/components/schemas/ExpressRouteCircuitStats",
            "description": "Gets peering stats."
          },
          "vlanId": {
            "description": "The VLAN ID.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitPropertiesFormat": {
        "description": "Properties of ExpressRouteCircuit.",
        "properties": {
          "authorizations": {
            "description": "The list of authorizations.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitAuthorization"
            },
            "type": "array"
          },
          "circuitProvisioningState": {
            "description": "The CircuitProvisioningState state of the resource.",
            "type": "string"
          },
          "peerings": {
            "description": "The list of peerings.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitPeering"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.",
            "type": "string"
          },
          "serviceKey": {
            "description": "The ServiceKey.",
            "type": "string"
          },
          "serviceProviderNotes": {
            "description": "The ServiceProviderNotes.",
            "type": "string"
          },
          "serviceProviderProperties": {
            "$ref": "#/components/schemas/ExpressRouteCircuitServiceProviderProperties",
            "description": "The ServiceProviderProperties."
          },
          "serviceProviderProvisioningState": {
            "description": "The ServiceProviderProvisioningState state of the resource. Possible values are 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.",
            "enum": [
              "NotProvisioned",
              "Provisioning",
              "Provisioned",
              "Deprovisioning"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ServiceProviderProvisioningState"
            }
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitRoutesTable": {
        "description": "The routes table associated with the ExpressRouteCircuit",
        "properties": {
          "addressPrefix": {
            "description": "Gets AddressPrefix.",
            "type": "string"
          },
          "asPath": {
            "description": "Gets AsPath.",
            "type": "string"
          },
          "nextHopIP": {
            "description": "Gets NextHopIP.",
            "type": "string"
          },
          "nextHopType": {
            "description": "Gets NextHopType.",
            "enum": [
              "VirtualNetworkGateway",
              "VnetLocal",
              "Internet",
              "VirtualAppliance",
              "None"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RouteNextHopType"
            }
          }
        },
        "required": [
          "nextHopType"
        ],
        "type": "object"
      },
      "ExpressRouteCircuitServiceProviderProperties": {
        "description": "Contains ServiceProviderProperties in an ExpressRouteCircuit.",
        "properties": {
          "bandwidthInMbps": {
            "description": "The BandwidthInMbps.",
            "format": "int32",
            "type": "integer"
          },
          "peeringLocation": {
            "description": "The peering location.",
            "type": "string"
          },
          "serviceProviderName": {
            "description": "The serviceProviderName.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitSku": {
        "description": "Contains SKU in an ExpressRouteCircuit.",
        "properties": {
          "family": {
            "description": "The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.",
            "enum": [
              "UnlimitedData",
              "MeteredData"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExpressRouteCircuitSkuFamily"
            }
          },
          "name": {
            "description": "The name of the SKU.",
            "type": "string"
          },
          "tier": {
            "description": "The tier of the SKU. Possible values are 'Standard' and 'Premium'.",
            "enum": [
              "Standard",
              "Premium"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ExpressRouteCircuitSkuTier"
            }
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitStats": {
        "description": "Contains stats associated with the peering.",
        "properties": {
          "bytesIn": {
            "description": "Gets BytesIn of the peering.",
            "format": "int32",
            "type": "integer"
          },
          "bytesOut": {
            "description": "Gets BytesOut of the peering.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitsArpTableListResult": {
        "description": "Response for ListArpTable associated with the Express Route Circuits API.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets list of the ARP table.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitArpTable"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitsRoutesTableListResult": {
        "description": "Response for ListRoutesTable associated with the Express Route Circuits API.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The list of routes table.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitRoutesTable"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteCircuitsStatsListResult": {
        "description": "Response for ListStats from Express Route Circuits Api service call",
        "properties": {
          "nextLink": {
            "description": "Gets the URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "Gets List of Stats",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteCircuitStats"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteServiceProvider": {
        "allOf": [
          {
            "$ref": "./network.json#/definitions/Resource"
          }
        ],
        "description": "A ExpressRouteResourceProvider object.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ExpressRouteServiceProviderPropertiesFormat",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ExpressRouteServiceProviderBandwidthsOffered": {
        "description": "Contains bandwidths offered in ExpressRouteServiceProvider resources.",
        "properties": {
          "offerName": {
            "description": "The OfferName.",
            "type": "string"
          },
          "valueInMbps": {
            "description": "The ValueInMbps.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ExpressRouteServiceProviderListResult": {
        "description": "Response for the ListExpressRouteServiceProvider API service call.",
        "properties": {
          "nextLink": {
            "description": "The URL to get the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "A list of ExpressRouteResourceProvider resources.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteServiceProvider"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ExpressRouteServiceProviderPropertiesFormat": {
        "description": "Properties of ExpressRouteServiceProvider.",
        "properties": {
          "bandwidthsOffered": {
            "description": "Gets bandwidths offered.",
            "items": {
              "$ref": "#/components/schemas/ExpressRouteServiceProviderBandwidthsOffered"
            },
            "type": "array"
          },
          "peeringLocations": {
            "description": "Get a list of peering locations.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "provisioningState": {
            "description": "Gets the provisioning state of the resource.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}