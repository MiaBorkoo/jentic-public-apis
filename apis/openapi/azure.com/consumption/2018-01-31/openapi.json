{
  "openapi": "3.0.0",
  "info": {
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.",
    "title": "ConsumptionManagementClient",
    "version": "2018-01-31",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/consumption/resource-manager/Microsoft.Consumption/stable/2018-01-31/consumption.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "description": "Can be daily or monthly",
            "in": "query",
            "name": "grain",
            "required": true,
            "schema": {
              "enum": [
                "daily",
                "monthly"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "datagrain",
              "values": [
                {
                  "description": "Daily grain of data",
                  "name": "DailyGrain",
                  "value": "daily"
                },
                {
                  "description": "Monthly grain of data",
                  "name": "MonthlyGrain",
                  "value": "monthly"
                }
              ]
            }
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationSummariesDaily": {
            "$ref": "./examples/ReservationSummariesDaily.json"
          },
          "ReservationSummariesMonthly": {
            "$ref": "./examples/ReservationSummariesMonthly.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationDetailsWithReservationId": {
            "$ref": "./examples/ReservationDetailsWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "description": "Can be daily or monthly",
            "in": "query",
            "name": "grain",
            "required": true,
            "schema": {
              "enum": [
                "daily",
                "monthly"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "modelAsString": true,
              "name": "datagrain",
              "values": [
                {
                  "description": "Daily grain of data",
                  "name": "DailyGrain",
                  "value": "daily"
                },
                {
                  "description": "Monthly grain of data",
                  "name": "MonthlyGrain",
                  "value": "monthly"
                }
              ]
            }
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithReservationId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available consumption REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Marketplaces"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the marketplaces for a scope by billing period and subscriptionId. Marketplaces are available via this API only for May 1, 2014 or later.",
        "operationId": "Marketplaces_ListByBillingPeriod",
        "x-ms-examples": {
          "MarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesListForBillingPeriod.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Marketplace",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_GetByBillingPeriod",
        "x-ms-examples": {
          "PriceSheetExpand": {
            "$ref": "./examples/PriceSheetExpand.json"
          },
          "PriceSheetForBillingPeriod": {
            "$ref": "./examples/PriceSheetForBillingPeriod.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          },
          {
            "description": "May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "UsageDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.",
        "operationId": "UsageDetails_ListByBillingPeriod",
        "x-ms-examples": {
          "UsageDetailsExpand": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists all budgets for a subscription.",
        "operationId": "Budgets_List",
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to delete a budget.",
        "operationId": "Budgets_Delete",
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the budget for a subscription by budget name.",
        "operationId": "Budgets_Get",
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "operationId": "Budgets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "description": "Parameters supplied to the Create Budget operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Marketplaces"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the marketplaces for a scope by subscriptionId. Marketplaces are available via this API only for May 1, 2014 or later.",
        "operationId": "Marketplaces_List",
        "x-ms-examples": {
          "MarketplacesList": {
            "$ref": "./examples/MarketplacesList.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Marketplace",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the price sheet for a scope by subscriptionId. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_Get",
        "x-ms-examples": {
          "PriceSheet": {
            "$ref": "./examples/PriceSheet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "description": "May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "UsageDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.",
        "operationId": "UsageDetails_List",
        "x-ms-examples": {
          "UsageDetailsList": {
            "$ref": "./examples/UsageDetailsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists all budgets for a resource group under a subscription.",
        "operationId": "Budgets_ListByResourceGroupName",
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to delete a budget.",
        "operationId": "Budgets_DeleteByResourceGroupName",
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the budget for a resource group under a subscription by budget name.",
        "operationId": "Budgets_GetByResourceGroupName",
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/resourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to create or update a budget. Update operation requires latest eTag to be set in the request mandatorily. You may obtain the latest eTag by performing a get operation. Create operation does not require eTag.",
        "operationId": "Budgets_CreateOrUpdateByResourceGroupName",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "description": "Parameters supplied to the Create Budget operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. The current version is 2018-01-31.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "billingPeriodNameParameter": {
        "description": "Billing Period Name.",
        "in": "path",
        "name": "billingPeriodName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "budgetNameParameter": {
        "description": "Budget Name.",
        "in": "path",
        "name": "budgetName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "reservationIdParameter": {
        "description": "Id of the reservation",
        "in": "path",
        "name": "reservationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "reservationOrderIdParameter": {
        "description": "Order Id of the reservation",
        "in": "path",
        "name": "reservationOrderId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Azure Resource Group Name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "Budget": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Budget"
            }
          }
        },
        "description": "Parameters supplied to the Create Budget operation.",
        "required": true
      }
    },
    "schemas": {
      "Budget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A budget resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BudgetProperties",
            "title": "Budget properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BudgetProperties": {
        "description": "The properties of the budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost to track with the budget",
            "format": "decimal",
            "type": "number"
          },
          "category": {
            "description": "The category of the budget, whether the budget tracks cost or usage.",
            "enum": [
              "Cost",
              "Usage"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CategoryType"
            }
          },
          "currentSpend": {
            "$ref": "#/components/schemas/CurrentSpend",
            "description": "The current amount of cost which is being tracked for a budget.",
            "readOnly": true
          },
          "filters": {
            "$ref": "#/components/schemas/Filters",
            "description": "May be used to filter budgets by resource group, resource, or meter.",
            "type": "object"
          },
          "notifications": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Notification",
              "type": "object"
            },
            "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
            "maxItems": 5,
            "type": "object"
          },
          "timeGrain": {
            "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain.",
            "enum": [
              "Monthly",
              "Quarterly",
              "Annually"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TimeGrainType"
            }
          },
          "timePeriod": {
            "$ref": "#/components/schemas/BudgetTimePeriod",
            "description": "Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than three months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."
          }
        },
        "required": [
          "category",
          "amount",
          "timeGrain",
          "timePeriod"
        ],
        "type": "object"
      },
      "BudgetTimePeriod": {
        "description": "The start and end date for a budget.",
        "properties": {
          "endDate": {
            "description": "The end date for the budget. If not provided, we default this to 10 years from the start date.",
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "description": "The start date for the budget.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ],
        "type": "object"
      },
      "BudgetsListResult": {
        "description": "Result of listing budgets. It contains a list of available budgets in the scope provided.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of budgets.",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CurrentSpend": {
        "description": "The current amount of cost which is being tracked for a budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost which is being tracked by the budget.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit of measure for the budget amount.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDetails": {
        "description": "The details of the error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetails",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "Filters": {
        "description": "May be used to filter budgets by resource group, resource, or meter.",
        "properties": {
          "meters": {
            "description": "The list of filters on meters, mandatory for budgets of usage category. ",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "resourceGroups": {
            "description": "The list of filters on resource groups, allowed at subscription level only.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "resources": {
            "description": "The list of filters on resources.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Marketplace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An marketplace resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MarketplaceProperties",
            "title": "Marketplace properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MarketplaceProperties": {
        "description": "The properties of the marketplace usage detail.",
        "properties": {
          "accountName": {
            "description": "Account name.",
            "readOnly": true,
            "type": "string"
          },
          "additionalProperties": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "consumedQuantity": {
            "description": "The quantity of usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "consumedService": {
            "description": "Consumed service name.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a costcenter exists",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "departmentName": {
            "description": "Department name.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "The uri of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "The name of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "isEstimated": {
            "description": "The estimated usage is subject to change.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterId": {
            "description": "The meter id.",
            "readOnly": true,
            "type": "string"
          },
          "offerName": {
            "description": "The type of offer.",
            "readOnly": true,
            "type": "string"
          },
          "orderNumber": {
            "description": "The order number.",
            "readOnly": true,
            "type": "string"
          },
          "planName": {
            "description": "The name of plan.",
            "readOnly": true,
            "type": "string"
          },
          "pretaxCost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "publisherName": {
            "description": "The name of publisher.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "The name of resource group.",
            "readOnly": true,
            "type": "string"
          },
          "resourceRate": {
            "description": "The marketplace resource rate.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "subscriptionGuid": {
            "description": "Subscription guid.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "The unit of measure.",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "The start of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplacesListResult": {
        "description": "Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of marketplaces.",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeterDetails": {
        "description": "The properties of the meter detail.",
        "properties": {
          "meterCategory": {
            "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
            "readOnly": true,
            "type": "string"
          },
          "meterLocation": {
            "description": "The location in which the Azure service is available.",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "The name of the meter, within the given meter category",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
            "readOnly": true,
            "type": "string"
          },
          "pretaxStandardRate": {
            "description": "The pretax listing price.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "totalIncludedQuantity": {
            "description": "The total included quantity associated with the offer.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "The notification associated with a budget.",
        "properties": {
          "contactEmails": {
            "description": "Email addresses to send the budget notification to when the threshold is exceeded.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "contactGroups": {
            "description": "Action groups to send the budget notification to when the threshold is exceeded.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "contactRoles": {
            "description": "Contact roles to send the budget notification to when the threshold is exceeded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "The notification is enabled or not.",
            "type": "boolean"
          },
          "operator": {
            "description": "The comparison operator.",
            "enum": [
              "EqualTo",
              "GreaterThan",
              "GreaterThanOrEqualTo"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatorType"
            }
          },
          "threshold": {
            "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.",
            "format": "decimal",
            "type": "number"
          }
        },
        "required": [
          "enabled",
          "operator",
          "threshold",
          "contactEmails"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "A Consumption REST API operation.",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Consumption.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: UsageDetail, etc.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetModel": {
        "description": "price sheet result. It contains the pricesheet associated with billing period",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "pricesheets": {
            "description": "Price sheet",
            "items": {
              "$ref": "#/components/schemas/PriceSheetProperties"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetProperties": {
        "description": "The properties of the price sheet.",
        "properties": {
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "currencyCode": {
            "description": "Currency Code",
            "readOnly": true,
            "type": "string"
          },
          "includedQuantity": {
            "description": "Included quality for an offer",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetails",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id",
            "readOnly": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part Number",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "Unit of measure",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "PriceSheetResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An pricesheet resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PriceSheetModel",
            "title": "Price sheet properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "description": "The Resource model definition.",
        "properties": {
          "eTag": {
            "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ReservationDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "reservation details resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationDetailsProperties",
            "title": "Reservation Details properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationDetailsListResult": {
        "description": "Result of listing reservation details.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation details.",
            "items": {
              "$ref": "#/components/schemas/ReservationDetails"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationDetailsProperties": {
        "description": "The properties of the reservation details.",
        "properties": {
          "instanceId": {
            "description": "This identifier is the name of the resource or the fully qualified Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "totalReservedQuantity": {
            "description": "This is the total count of instances that are reserved for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageDate": {
            "description": "The date on which consumption occurred.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "This is the total hours used by the instance.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationSummaries": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "reservation summaries resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationSummariesProperties",
            "title": "Reservation Summaries properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationSummariesListResult": {
        "description": "Result of listing reservation summaries.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation summaries.",
            "items": {
              "$ref": "#/components/schemas/ReservationSummaries"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationSummariesProperties": {
        "description": "The properties of the reservation summaries.",
        "properties": {
          "avgUtilizationPercentage": {
            "description": "This is average utilization for the entire time range. (day or month depending on the grain)",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "maxUtilizationPercentage": {
            "description": "This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "minUtilizationPercentage": {
            "description": "This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "usageDate": {
            "description": "Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "Total used hours by the reservation",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "UsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An usage detail resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UsageDetailProperties",
            "title": "Usage detail properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UsageDetailProperties": {
        "description": "The properties of the usage detail.",
        "properties": {
          "accountName": {
            "description": "Account name.",
            "readOnly": true,
            "type": "string"
          },
          "additionalProperties": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true,
            "type": "string"
          },
          "billableQuantity": {
            "description": "The billable usage quantity.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "consumedService": {
            "description": "Consumed service name.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a costcenter exists",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "departmentName": {
            "description": "Department name.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "The uri of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "instanceLocation": {
            "description": "The location of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "The name of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceId": {
            "description": "The id of the invoice resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "isEstimated": {
            "description": "The estimated usage is subject to change.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetails",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id.",
            "readOnly": true,
            "type": "string"
          },
          "pretaxCost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "product": {
            "description": "Product name.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionGuid": {
            "description": "Subscription guid.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageQuantity": {
            "description": "The quantity of usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageStart": {
            "description": "The start of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UsageDetailsListResult": {
        "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of usage details.",
            "items": {
              "$ref": "#/components/schemas/UsageDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}