{
  "openapi": "3.0.0",
  "info": {
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.",
    "title": "ConsumptionManagementClient",
    "version": "2019-05-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/consumption/resource-manager/Microsoft.Consumption/stable/2019-05-01/consumption.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/balances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Balances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the balances for a scope by billing period and billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "operationId": "Balances_GetForBillingPeriodByBillingAccount",
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccountForBillingPeriod.json"
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Balances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "operationId": "Balances_GetByBillingAccount",
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccount.json"
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByBillingAccountId",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetailsByBillingAccountId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByBillingAccountId",
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithBillingAccountId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingAccountId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/microsoft.consumption/ReservationRecommendations": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter reservationRecommendations by properties/scope and properties/lookBackPeriod.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationRecommendationsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationRecommendations"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "List of recommendations for purchasing reserved instances on billing account scope",
        "operationId": "ReservationRecommendations_ListByBillingAccountId",
        "x-ms-examples": {
          "ReservationRecommendations": {
            "$ref": "./examples/ReservationRecommendationsByBillingAccountList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationSummariesDaily": {
            "$ref": "./examples/ReservationSummariesDaily.json"
          },
          "ReservationSummariesMonthly": {
            "$ref": "./examples/ReservationSummariesMonthly.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationDetailsWithReservationId": {
            "$ref": "./examples/ReservationDetailsWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservedInstances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithReservationId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available consumption REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AggregatedCost"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Provides the aggregate cost of a management group and all child management groups by specified billing period",
        "operationId": "AggregatedCost_GetForBillingPeriodByManagementGroup",
        "x-ms-examples": {
          "AggregatedCostListForBillingPeriodByManagementGroup": {
            "$ref": "./examples/AggregatedCostForBillingPeriodByManagementGroup.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "May be used to filter aggregated cost by properties/usageStart (Utc time), properties/usageEnd (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AggregatedCost"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Provides the aggregate cost of a management group and all child management groups by current billing period.",
        "operationId": "AggregatedCost_GetByManagementGroup",
        "x-ms-examples": {
          "AggregatedCostByManagementGroup": {
            "$ref": "./examples/AggregatedCostByManagementGroup.json"
          },
          "AggregatedCostByManagementGroupFilterByDate": {
            "$ref": "./examples/AggregatedCostByManagementGroupFilterByDate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_GetByBillingPeriod",
        "x-ms-examples": {
          "PriceSheetExpand": {
            "$ref": "./examples/PriceSheetExpand.json"
          },
          "PriceSheetForBillingPeriod": {
            "$ref": "./examples/PriceSheetForBillingPeriod.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/forecasts": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Forecasts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the forecast charges for scope defined. Please note that this API is no longer actively under development. We recommend using our new Forecast API moving forward: https://docs.microsoft.com/en-us/rest/api/cost-management/forecast/usage.",
        "operationId": "Forecasts_List",
        "x-ms-examples": {
          "ForecastsList": {
            "$ref": "./examples/ForecastsList.json"
          },
          "ForecastsListFilterByDates": {
            "$ref": "./examples/ForecastsListFilterByDates.json"
          },
          "ForecastsListFilterByGrain": {
            "$ref": "./examples/ForecastsListFilterByGrain.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Forecast",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the price sheet for a scope by subscriptionId. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_Get",
        "x-ms-examples": {
          "PriceSheet": {
            "$ref": "./examples/PriceSheet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/reservationRecommendations": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter reservationRecommendations by properties/scope and properties/lookBackPeriod.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationRecommendationsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationRecommendations"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "List of recommendations for purchasing reserved instances.",
        "operationId": "ReservationRecommendations_List",
        "x-ms-examples": {
          "ReservationRecommendations": {
            "$ref": "./examples/ReservationRecommendationsList.json"
          },
          "ReservationRecommendationsFilterByScopeLookBackPeriod": {
            "$ref": "./examples/ReservationRecommendationsFilterByScopeLookBackPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists all budgets for the defined scope.",
        "operationId": "Budgets_List",
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to delete a budget.",
        "operationId": "Budgets_Delete",
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the budget for the scope by budget name.",
        "operationId": "Budgets_Get",
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to create or update a budget. You can optionally provide an eTag if desired as a form of concurrency control. To obtain the latest eTag for a given budget, perform a get operation prior to your put operation.",
        "operationId": "Budgets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "description": "Parameters supplied to the Create Budget operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/charges": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeChargesParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargeSummary"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Charges"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the charges based for the defined scope.",
        "operationId": "Charges_ListByScope",
        "x-ms-examples": {
          "ChangesForBillingPeriodByDepartment": {
            "$ref": "./examples/ChargesForBillingPeriodByDepartment.json"
          },
          "ChangesForBillingPeriodByEnrollmentAccount": {
            "$ref": "./examples/ChargesForBillingPeriodByEnrollmentAccount.json"
          },
          "ChargesListByDepartment": {
            "$ref": "./examples/ChargesListForDepartmentFilterByStartEndDate.json"
          },
          "ChargesListForEnrollmentAccount": {
            "$ref": "./examples/ChargesListForEnrollmentAccountFilterByStartEndDate.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/scopeMarketplaceParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Marketplaces"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.",
        "operationId": "Marketplaces_List",
        "x-ms-examples": {
          "BillingAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByBillingAccountList.json"
          },
          "BillingAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByBillingAccountListForBillingPeriod.json"
          },
          "DepartmentMarketplacesList": {
            "$ref": "./examples/MarketplacesByDepartmentList.json"
          },
          "DepartmentMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByDepartment_ListByBillingPeriod.json"
          },
          "EnrollmentAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByEnrollmentAccountList.json"
          },
          "EnrollmentAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByEnrollmentAccounts_ListByBillingPeriod.json"
          },
          "ManagementGroupMarketplacesList": {
            "$ref": "./examples/MarketplacesByManagementGroupList.json"
          },
          "ManagementGroupMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByManagementGroup_ListForBillingPeriod.json"
          },
          "SubscriptionMarketplacesList": {
            "$ref": "./examples/MarketplacesList.json"
          },
          "SubscriptionMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesListForBillingPeriod.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Marketplace",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/tags": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeTagsParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Tags"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Get all available tag keys for the defined scope",
        "operationId": "Tags_Get",
        "x-ms-examples": {
          "Tags_Get": {
            "$ref": "./examples/Tags.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeUsageDetailsParameter"
          },
          {
            "description": "May be used to expand the properties/additionalInfo or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to filter usageDetails by properties/resourceGroup, properties/resourceName, properties/resourceId, properties/chargeType, properties/reservationId, properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). PublisherType Filter accepts two values azure and marketplace and it is currently supported for Web Direct Offer Type",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/metricParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "UsageDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later.",
        "operationId": "UsageDetails_List",
        "x-ms-examples": {
          "BillingAccountUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByBillingAccount.json"
          },
          "BillingAccountUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByBillingAccount.json"
          },
          "DepartmentUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByDepartment.json"
          },
          "DepartmentUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByDepartment.json"
          },
          "EnrollmentAccountUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByEnrollmentAccount.json"
          },
          "EnrollmentAccountUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json"
          },
          "ManagementGroupUsageDetailsList": {
            "$ref": "./examples/UsageDetailsListByManagementGroup.json"
          },
          "ManagementGroupUsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByManagementGroup.json"
          },
          "UsageDetailsExpand": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsList": {
            "$ref": "./examples/UsageDetailsList.json"
          },
          "UsageDetailsListByMetricActualCost": {
            "$ref": "./examples/UsageDetailsListByMetricActualCost.json"
          },
          "UsageDetailsListByMetricAmortizedCost": {
            "$ref": "./examples/UsageDetailsListByMetricAmortizedCost.json"
          },
          "UsageDetailsListByMetricUsage": {
            "$ref": "./examples/UsageDetailsListByMetricUsage.json"
          },
          "UsageDetailsListFilterByTag": {
            "$ref": "./examples/UsageDetailsListFilterByTag.json"
          },
          "UsageDetailsListForBillingPeriod": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. The current version is 2019-05-01.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "billingAccountIdParameter": {
        "description": "BillingAccount ID",
        "in": "path",
        "name": "billingAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "billingPeriodNameParameter": {
        "description": "Billing Period Name.",
        "in": "path",
        "name": "billingPeriodName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "billingProfileIdParameter": {
        "description": "Azure Billing Profile ID.",
        "in": "path",
        "name": "billingProfileId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "budgetNameParameter": {
        "description": "Budget Name.",
        "in": "path",
        "name": "budgetName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "departmentIdParameter": {
        "description": "Department ID",
        "in": "path",
        "name": "departmentId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "enrollmentAccountIdParameter": {
        "description": "EnrollmentAccount ID",
        "in": "path",
        "name": "enrollmentAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "grainParameter": {
        "description": "Can be daily or monthly",
        "in": "query",
        "name": "grain",
        "required": true,
        "schema": {
          "enum": [
            "daily",
            "monthly"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "datagrain",
          "values": [
            {
              "description": "Daily grain of data",
              "name": "DailyGrain",
              "value": "daily"
            },
            {
              "description": "Monthly grain of data",
              "name": "MonthlyGrain",
              "value": "monthly"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      },
      "invoiceSectionIdParameter": {
        "description": "Azure Invoice Section ID.",
        "in": "path",
        "name": "invoiceSectionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "managementGroupIdParameter": {
        "description": "Azure Management Group ID.",
        "in": "path",
        "name": "managementGroupId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricParameter": {
        "description": "Allows to select different type of cost/usage records.",
        "in": "query",
        "name": "metric",
        "required": false,
        "schema": {
          "enum": [
            "actualcost",
            "amortizedcost",
            "usage"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "metrictype",
          "values": [
            {
              "description": "Actual cost data.",
              "name": "ActualCostMetricType",
              "value": "actualcost"
            },
            {
              "description": "Amortized cost data.",
              "name": "AmortizedCostMetricType",
              "value": "amortizedcost"
            },
            {
              "description": "Usage data.",
              "name": "UsageMetricType",
              "value": "usage"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      },
      "reservationIdParameter": {
        "description": "Id of the reservation",
        "in": "path",
        "name": "reservationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "reservationOrderIdParameter": {
        "description": "Order Id of the reservation",
        "in": "path",
        "name": "reservationOrderId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Azure Resource Group Name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "scopeBudgetParameter": {
        "allowReserved": true,
        "description": "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeChargesParameter": {
        "allowReserved": true,
        "description": "The scope associated with usage details operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope. For department and enrollment accounts, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeMarketplaceParameter": {
        "allowReserved": true,
        "description": "The scope associated with marketplace operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and ManagementGroup, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeTagsParameter": {
        "allowReserved": true,
        "description": "The scope associated with tags operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeUsageDetailsParameter": {
        "allowReserved": true,
        "description": "The scope associated with usage details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and management group, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "subscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Balance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A balance resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BalanceProperties",
            "title": "Balance properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BalanceProperties": {
        "description": "The properties of the balance.",
        "properties": {
          "adjustmentDetails": {
            "description": "List of Adjustments (Promo credit, SIE credit etc.).",
            "items": {
              "properties": {
                "name": {
                  "description": "the name of new adjustment.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "the value of new adjustment.",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "adjustments": {
            "description": "Total adjustment amount.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "azureMarketplaceServiceCharges": {
            "description": "Total charges for Azure Marketplace.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "beginningBalance": {
            "description": "The beginning balance for the billing period.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingFrequency": {
            "description": "The billing frequency.",
            "enum": [
              "Month",
              "Quarter",
              "Year"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BillingFrequency"
            }
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "endingBalance": {
            "description": "The ending balance for the billing period (for open periods this will be updated daily).",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "newPurchases": {
            "description": "Total new purchase amount.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "newPurchasesDetails": {
            "description": "List of new purchases.",
            "items": {
              "properties": {
                "name": {
                  "description": "the name of new purchase.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "the value of new purchase.",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "priceHidden": {
            "description": "Price is hidden or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "serviceOverage": {
            "description": "Overage for Azure services.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "totalOverage": {
            "description": "serviceOverage + chargesBilledSeparately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "totalUsage": {
            "description": "Azure service commitment + total Overage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "utilized": {
            "description": "Total Commitment usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Budget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A budget resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BudgetProperties",
            "title": "Budget properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BudgetProperties": {
        "description": "The properties of the budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost to track with the budget",
            "format": "decimal",
            "type": "number"
          },
          "category": {
            "description": "The category of the budget, whether the budget tracks cost or usage.",
            "enum": [
              "Cost",
              "Usage"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CategoryType"
            }
          },
          "currentSpend": {
            "$ref": "#/components/schemas/CurrentSpend",
            "description": "The current amount of cost which is being tracked for a budget.",
            "readOnly": true
          },
          "filter": {
            "$ref": "#/components/schemas/Filter",
            "description": "May be used to filter budgets by user-specified dimensions and/or tags.",
            "type": "object"
          },
          "notifications": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Notification",
              "type": "object"
            },
            "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
            "maxItems": 5,
            "type": "object"
          },
          "timeGrain": {
            "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain.",
            "enum": [
              "Monthly",
              "Quarterly",
              "Annually",
              "BillingMonth",
              "BillingQuarter",
              "BillingAnnual"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TimeGrainType"
            }
          },
          "timePeriod": {
            "$ref": "#/components/schemas/BudgetTimePeriod",
            "description": "Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than three months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."
          }
        },
        "required": [
          "category",
          "amount",
          "timeGrain",
          "timePeriod"
        ],
        "type": "object"
      },
      "BudgetTimePeriod": {
        "description": "The start and end date for a budget.",
        "properties": {
          "endDate": {
            "description": "The end date for the budget. If not provided, we default this to 10 years from the start date.",
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "description": "The start date for the budget.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ],
        "type": "object"
      },
      "BudgetsListResult": {
        "description": "Result of listing budgets. It contains a list of available budgets in the scope provided.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of budgets.",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChargeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A charge summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ChargeSummaryProperties",
            "title": "Charge summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ChargeSummaryProperties": {
        "description": "The properties of the charge summary.",
        "properties": {
          "azureCharges": {
            "description": "Azure Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the charge belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "currency": {
            "description": "Currency Code",
            "readOnly": true,
            "type": "string"
          },
          "marketplaceCharges": {
            "description": "Marketplace Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageEnd": {
            "description": " Usage end date.",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "Usage start date.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ChargesListResult": {
        "description": "Result of listing charge summary.",
        "properties": {
          "value": {
            "description": "The list of charge summary",
            "items": {
              "$ref": "#/components/schemas/ChargeSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CurrentSpend": {
        "description": "The current amount of cost which is being tracked for a budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost which is being tracked by the budget.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit of measure for the budget amount.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDetails": {
        "description": "The details of the error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetails",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "Filter": {
        "description": "May be used to filter budgets by user-specified dimensions and/or tags.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "description": "The dictionary of filters on tags.",
            "maxItems": 10,
            "minItems": 0,
            "type": "object"
          },
          "meters": {
            "description": "The list of filters on meters (GUID), mandatory for budgets of usage category. ",
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "resourceGroups": {
            "description": "The list of filters on resource groups, allowed at subscription level only.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "resources": {
            "description": "The list of filters on resources.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Forecast": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A forecast resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ForecastProperties",
            "title": "Forecast properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ForecastProperties": {
        "description": "The properties of the forecast charge.",
        "properties": {
          "charge": {
            "description": "The amount of charge",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "chargeType": {
            "description": "The type of the charge. Could be actual or forecast",
            "enum": [
              "Actual",
              "Forecast"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ChargeType"
            }
          },
          "confidenceLevels": {
            "description": "The details about the forecast confidence levels. This is populated only when chargeType is Forecast.",
            "items": {
              "properties": {
                "bound": {
                  "description": "The boundary of the percentage, values could be 'Upper' or 'Lower'",
                  "enum": [
                    "Upper",
                    "Lower"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "Bound"
                  }
                },
                "percentage": {
                  "description": "The percentage level of the confidence",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                },
                "value": {
                  "description": "The amount of forecast within the percentage level",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "grain": {
            "description": "The granularity of forecast. Please note that Yearly is not currently supported in this API. The API will provide responses in the Monthly grain if Yearly is selected. To get yearly grain data, please use our newer Forecast API.",
            "enum": [
              "Daily",
              "Monthly",
              "Yearly"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Grain"
            }
          },
          "usageDate": {
            "description": "The usage date of the forecast.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForecastsListResult": {
        "description": "Result of listing forecasts. It contains a list of available forecasts.",
        "properties": {
          "value": {
            "description": "The list of forecasts.",
            "items": {
              "$ref": "#/components/schemas/Forecast"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagementGroupAggregatedCostProperties": {
        "description": "The properties of the Management Group Aggregated Cost.",
        "properties": {
          "azureCharges": {
            "description": "Azure Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the aggregated cost belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed Separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "children": {
            "description": "Children of a management group",
            "items": {
              "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
            },
            "type": "array"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "excludedSubscriptions": {
            "description": "List of subscription Guids excluded from the calculation of aggregated cost",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includedSubscriptions": {
            "description": "List of subscription Guids included in the calculation of aggregated cost",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "marketplaceCharges": {
            "description": "Marketplace Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the aggregated cost.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "The start of the date time range covered by aggregated cost.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagementGroupAggregatedCostResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A management group aggregated cost resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ManagementGroupAggregatedCostProperties",
            "title": "Management Group Aggregated Cost properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Marketplace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An marketplace resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MarketplaceProperties",
            "title": "Marketplace properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MarketplaceProperties": {
        "description": "The properties of the marketplace usage detail.",
        "properties": {
          "accountName": {
            "description": "Account name.",
            "readOnly": true,
            "type": "string"
          },
          "additionalProperties": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "consumedQuantity": {
            "description": "The quantity of usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "consumedService": {
            "description": "Consumed service name.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a costcenter exists",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "departmentName": {
            "description": "Department name.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "The uri of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "The name of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "isEstimated": {
            "description": "The estimated usage is subject to change.",
            "readOnly": true,
            "type": "boolean"
          },
          "isRecurringCharge": {
            "description": "Flag indicating whether this is a recurring charge or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterId": {
            "description": "The meter id (GUID).",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerName": {
            "description": "The type of offer.",
            "readOnly": true,
            "type": "string"
          },
          "orderNumber": {
            "description": "The order number.",
            "readOnly": true,
            "type": "string"
          },
          "planName": {
            "description": "The name of plan.",
            "readOnly": true,
            "type": "string"
          },
          "pretaxCost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "publisherName": {
            "description": "The name of publisher.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "The name of resource group.",
            "readOnly": true,
            "type": "string"
          },
          "resourceRate": {
            "description": "The marketplace resource rate.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "subscriptionGuid": {
            "description": "Subscription guid.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "The unit of measure.",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "The start of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplacesListResult": {
        "description": "Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of marketplaces.",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeterDetails": {
        "description": "The properties of the meter detail.",
        "properties": {
          "meterCategory": {
            "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
            "readOnly": true,
            "type": "string"
          },
          "meterLocation": {
            "description": "The location in which the Azure service is available.",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "The name of the meter, within the given meter category",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
            "readOnly": true,
            "type": "string"
          },
          "pretaxStandardRate": {
            "description": "The pretax listing price.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "serviceName": {
            "description": "The name of the service.",
            "readOnly": true,
            "type": "string"
          },
          "serviceTier": {
            "description": "The service tier.",
            "readOnly": true,
            "type": "string"
          },
          "totalIncludedQuantity": {
            "description": "The total included quantity associated with the offer.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeterDetailsResponse": {
        "description": "The properties of the meter detail.",
        "properties": {
          "meterCategory": {
            "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "The name of the meter, within the given meter category",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
            "readOnly": true,
            "type": "string"
          },
          "serviceFamily": {
            "description": "The service family.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "The notification associated with a budget.",
        "properties": {
          "contactEmails": {
            "description": "Email addresses to send the budget notification to when the threshold is exceeded. Must have at least one contact email or contact group specified at the Subscription or Resource Group scopes. All other scopes must have at least one contact email specified.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "contactGroups": {
            "description": "Action groups to send the budget notification to when the threshold is exceeded. Must be provided as a fully qualified Azure resource id. Only supported at Subscription or Resource Group scopes.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "contactRoles": {
            "description": "Contact roles to send the budget notification to when the threshold is exceeded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "The notification is enabled or not.",
            "type": "boolean"
          },
          "operator": {
            "description": "The comparison operator.",
            "enum": [
              "EqualTo",
              "GreaterThan",
              "GreaterThanOrEqualTo"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatorType"
            }
          },
          "threshold": {
            "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.",
            "format": "decimal",
            "type": "number"
          },
          "thresholdType": {
            "default": "Actual",
            "description": "The type of threshold",
            "enum": [
              "Actual"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ThresholdType"
            }
          }
        },
        "required": [
          "enabled",
          "operator",
          "threshold",
          "contactEmails"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "A Consumption REST API operation.",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Consumption.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: UsageDetail, etc.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetModel": {
        "description": "price sheet result. It contains the pricesheet associated with billing period",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "pricesheets": {
            "description": "Price sheet",
            "items": {
              "$ref": "#/components/schemas/PriceSheetProperties"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetProperties": {
        "description": "The properties of the price sheet.",
        "properties": {
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "currencyCode": {
            "description": "Currency Code",
            "readOnly": true,
            "type": "string"
          },
          "includedQuantity": {
            "description": "Included quality for an offer",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetails",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id (GUID)",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerId": {
            "description": "Offer Id",
            "readOnly": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part Number",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "Unit of measure",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "PriceSheetResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An pricesheet resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PriceSheetModel",
            "title": "Price sheet properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "description": "The Resource model definition.",
        "properties": {
          "eTag": {
            "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ReservationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "reservation detail resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationDetailProperties",
            "title": "Reservation Detail properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationDetailProperties": {
        "description": "The properties of the reservation detail.",
        "properties": {
          "instanceFlexibilityGroup": {
            "description": "The instance Flexibility Group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityRatio": {
            "description": "The instance Flexibility Ratio.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "This identifier is the name of the resource or the fully qualified Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "totalReservedQuantity": {
            "description": "This is the total count of instances that are reserved for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageDate": {
            "description": "The date on which consumption occurred.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "This is the total hours used by the instance.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationDetailsListResult": {
        "description": "Result of listing reservation details.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation details.",
            "items": {
              "$ref": "#/components/schemas/ReservationDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationRecommendation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "$ref": "#/components/schemas/ResourceAttributes"
          }
        ],
        "description": "Reservation recommendation resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationRecommendationProperties",
            "title": "Reservation Recommendation properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationRecommendationProperties": {
        "description": "The properties of the reservation recommendation.",
        "properties": {
          "costWithNoReservedInstances": {
            "description": "The total amount of cost without reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "firstUsageDate": {
            "description": "The usage date for looking back.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityGroup": {
            "description": "The instance Flexibility Group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityRatio": {
            "description": "The instance Flexibility Ratio.",
            "readOnly": true,
            "type": "integer"
          },
          "lookBackPeriod": {
            "description": "The number of days of usage to look back for recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "meterId": {
            "description": "The meter id (GUID)",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "netSavings": {
            "description": "Total estimated savings with reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "normalizedSize": {
            "description": "The normalized Size.",
            "readOnly": true,
            "type": "string"
          },
          "recommendedQuantity": {
            "description": "Recommended quality for reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "recommendedQuantityNormalized": {
            "description": "The recommended Quantity Normalized.",
            "readOnly": true,
            "type": "number"
          },
          "scope": {
            "description": "Shared or single recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "RI recommendations in one or three year terms.",
            "readOnly": true,
            "type": "string"
          },
          "totalCostWithReservedInstances": {
            "description": "The total amount of cost with reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationsListResult": {
        "description": "Result of listing reservation recommendations.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation recommendations.",
            "items": {
              "$ref": "#/components/schemas/ReservationRecommendation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationSummariesListResult": {
        "description": "Result of listing reservation summaries.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation summaries.",
            "items": {
              "$ref": "#/components/schemas/ReservationSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "reservation summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationSummaryProperties",
            "title": "Reservation Summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationSummaryProperties": {
        "description": "The properties of the reservation summary.",
        "properties": {
          "avgUtilizationPercentage": {
            "description": "This is average utilization for the entire time range. (day or month depending on the grain)",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "maxUtilizationPercentage": {
            "description": "This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "minUtilizationPercentage": {
            "description": "This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "usageDate": {
            "description": "Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "Total used hours by the reservation",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceAttributes": {
        "description": "The Resource model definition.",
        "properties": {
          "location": {
            "description": "Resource location",
            "readOnly": true,
            "type": "string"
          },
          "sku": {
            "description": "Resource sku",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tag": {
        "description": "The tag resource.",
        "properties": {
          "key": {
            "description": "Tag key.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagProperties": {
        "description": "The properties of the tag.",
        "properties": {
          "tags": {
            "description": "A list of Tag.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TagsResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A resource listing all tags.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TagProperties",
            "title": "Tag properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An usage detail resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UsageDetailProperties",
            "title": "Usage detail properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UsageDetailProperties": {
        "description": "The properties of the usage detail.",
        "properties": {
          "accountName": {
            "description": "Account Name.",
            "readOnly": true,
            "type": "string"
          },
          "accountOwnerId": {
            "description": "Account Owner Id.",
            "readOnly": true,
            "type": "string"
          },
          "additionalInfo": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountId": {
            "description": "Billing Account identifier.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountName": {
            "description": "Billing Account Name.",
            "readOnly": true,
            "type": "string"
          },
          "billingCurrency": {
            "description": "Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodEndDate": {
            "description": "The billing period end date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodStartDate": {
            "description": "The billing period start date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileId": {
            "description": "Billing Profile identifier.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileName": {
            "description": "Billing Profile Name.",
            "readOnly": true,
            "type": "string"
          },
          "chargeType": {
            "description": "Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
            "readOnly": true,
            "type": "string"
          },
          "consumedService": {
            "description": "Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
            "readOnly": true,
            "type": "string"
          },
          "cost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a cost center is provided.",
            "readOnly": true,
            "type": "string"
          },
          "date": {
            "description": "Date for the usage record.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "effectivePrice": {
            "description": "Effective Price that\u2019s charged for the usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "frequency": {
            "description": "Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSection": {
            "description": "Invoice Section Name.",
            "readOnly": true,
            "type": "string"
          },
          "isAzureCreditEligible": {
            "description": "Is Azure Credit Eligible.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetailsResponse",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerId": {
            "description": "Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.",
            "readOnly": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "planName": {
            "description": "Plan Name.",
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "description": "Product name for the consumed service or purchase. Not available for Marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderId": {
            "description": "Product Order Id. For reservations this is the Reservation Order ID.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderName": {
            "description": "Product Order Name. For reservations this is the SKU that was purchased.",
            "readOnly": true,
            "type": "string"
          },
          "publisherName": {
            "description": "Publisher Name.",
            "readOnly": true,
            "type": "string"
          },
          "publisherType": {
            "description": "Publisher Type.",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "description": "The usage quantity.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "reservationId": {
            "description": "ARM resource id of the reservation. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservationName": {
            "description": "User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource Group Name.",
            "readOnly": true,
            "type": "string"
          },
          "resourceId": {
            "description": "Azure resource manager resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "resourceLocation": {
            "description": "Resource Location.",
            "readOnly": true,
            "type": "string"
          },
          "resourceName": {
            "description": "Resource Name.",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo1": {
            "description": "Service Info 1.",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo2": {
            "description": "Service Info 2.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription guid.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price is the price applicable to you. (your EA or other contract price).",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "UsageDetailsListResult": {
        "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of usage details.",
            "items": {
              "$ref": "#/components/schemas/UsageDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}