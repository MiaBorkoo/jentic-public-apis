{
  "openapi": "3.0.0",
  "info": {
    "description": "Consumption management client provides access to consumption resources for Azure Enterprise Subscriptions.",
    "title": "ConsumptionManagementClient",
    "version": "2019-10-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/consumption/resource-manager/Microsoft.Consumption/stable/2019-10-01/consumption.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/balances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Balances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the balances for a scope by billing period and billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "operationId": "Balances_GetForBillingPeriodByBillingAccount",
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccountForBillingPeriod.json"
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/providers/Microsoft.Consumption/reservationTransactions": {
      "get": {
        "parameters": [
          {
            "description": "Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingProfileIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModernReservationTransactionsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationTransactions"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "List of transactions for reserved instances on billing account scope",
        "operationId": "ReservationTransactions_ListByBillingProfile",
        "x-ms-examples": {
          "ReservationTransactionsByBillingProfileId": {
            "$ref": "./examples/ReservationTransactionsListByBillingProfileId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Balance"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Balances"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.",
        "operationId": "Balances_GetByBillingAccount",
        "x-ms-examples": {
          "Balances": {
            "$ref": "./examples/BalancesByBillingAccount.json"
          }
        }
      }
    },
    "/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/reservationTransactions": {
      "get": {
        "parameters": [
          {
            "description": "Filter reservation transactions by date range. The properties/EventDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingAccountIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationTransactionsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationTransactions"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "List of transactions for reserved instances on billing account scope",
        "operationId": "ReservationTransactions_List",
        "x-ms-examples": {
          "ReservationTransactionsByEnrollmentNumber": {
            "$ref": "./examples/ReservationTransactionsListByEnrollmentNumber.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationDetails": {
            "$ref": "./examples/ReservationDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationSummaries"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrder",
        "x-ms-examples": {
          "ReservationSummariesDaily": {
            "$ref": "./examples/ReservationSummariesDaily.json"
          },
          "ReservationSummariesMonthly": {
            "$ref": "./examples/ReservationSummariesMonthly.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge' ",
            "in": "query",
            "name": "$filter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for provided date range.",
        "operationId": "ReservationsDetails_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationDetailsWithReservationId": {
            "$ref": "./examples/ReservationDetailsWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Capacity/reservationorders/{reservationOrderId}/reservations/{reservationId}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/reservationOrderIdParameter"
          },
          {
            "$ref": "#/components/parameters/reservationIdParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Required only for daily grain. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationSummaries"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for daily or monthly grain.",
        "operationId": "ReservationsSummaries_ListByReservationOrderAndReservation",
        "x-ms-examples": {
          "ReservationSummariesDailyWithReservationId": {
            "$ref": "./examples/ReservationSummariesDailyWithReservationId.json"
          },
          "ReservationSummariesMonthlyWithReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Consumption/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available consumption REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/Microsoft.Consumption/aggregatedCost": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AggregatedCost"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Provides the aggregate cost of a management group and all child management groups by specified billing period",
        "operationId": "AggregatedCost_GetForBillingPeriodByManagementGroup",
        "x-ms-examples": {
          "AggregatedCostListForBillingPeriodByManagementGroup": {
            "$ref": "./examples/AggregatedCostForBillingPeriodByManagementGroup.json"
          }
        }
      }
    },
    "/providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Consumption/aggregatedcost": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/managementGroupIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "May be used to filter aggregated cost by properties/usageStart (Utc time), properties/usageEnd (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "AggregatedCost"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Provides the aggregate cost of a management group and all child management groups by current billing period.",
        "operationId": "AggregatedCost_GetByManagementGroup",
        "x-ms-examples": {
          "AggregatedCostByManagementGroup": {
            "$ref": "./examples/AggregatedCostByManagementGroup.json"
          },
          "AggregatedCostByManagementGroupFilterByDate": {
            "$ref": "./examples/AggregatedCostByManagementGroupFilterByDate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/billingPeriodNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Get the price sheet for a scope by subscriptionId and billing period. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_GetByBillingPeriod",
        "x-ms-examples": {
          "PriceSheetExpand": {
            "$ref": "./examples/PriceSheetExpand.json"
          },
          "PriceSheetForBillingPeriod": {
            "$ref": "./examples/PriceSheetForBillingPeriod.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/forecasts": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter forecasts by properties/usageDate (Utc time), properties/chargeType or properties/grain. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForecastsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Forecasts"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the forecast charges for scope defined. Please note that this API is no longer actively under development. We recommend using our new Forecast API moving forward: https://docs.microsoft.com/en-us/rest/api/cost-management/forecast/usage.",
        "operationId": "Forecasts_List",
        "x-ms-examples": {
          "ForecastsList": {
            "$ref": "./examples/ForecastsList.json"
          },
          "ForecastsListFilterByDates": {
            "$ref": "./examples/ForecastsListFilterByDates.json"
          },
          "ForecastsListFilterByGrain": {
            "$ref": "./examples/ForecastsListFilterByGrain.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Forecast",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Consumption/pricesheets/default": {
      "get": {
        "parameters": [
          {
            "description": "May be used to expand the properties/meterDetails within a price sheet. By default, these fields are not included when returning price sheet.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the top N results.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/subscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PriceSheetResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "PriceSheet"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the price sheet for a scope by subscriptionId. Price sheet is available via this API only for May 1, 2014 or later.",
        "operationId": "PriceSheet_Get",
        "x-ms-examples": {
          "PriceSheet": {
            "$ref": "./examples/PriceSheet.json"
          }
        }
      }
    },
    "/{billingScope}/providers/Microsoft.Consumption/reservationRecommendationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeReservationRecommendationDetailsParameter"
          },
          {
            "$ref": "#/components/parameters/scopeParameter"
          },
          {
            "$ref": "#/components/parameters/regionParameter"
          },
          {
            "$ref": "#/components/parameters/termParameter"
          },
          {
            "$ref": "#/components/parameters/lookBackPeriodParameter"
          },
          {
            "$ref": "#/components/parameters/productParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationRecommendationDetailsModel"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there are no recommendation details."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HighCasedErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationRecommendationDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Details of a reservation recommendation for what-if analysis of reserved instances.",
        "operationId": "ReservationRecommendationDetails_Get",
        "x-ms-examples": {
          "ReservationRecommendationsByBillingAccount-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsByBillingAccount.json"
          },
          "ReservationRecommendationsByBillingProfile-Modern": {
            "$ref": "./examples/ReservationRecommendationDetailsByBillingProfile.json"
          },
          "ReservationRecommendationsByResourceGroup-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsByResourceGroup.json"
          },
          "ReservationRecommendationsBySubscription-Legacy": {
            "$ref": "./examples/ReservationRecommendationDetailsBySubscription.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists all budgets for the defined scope.",
        "operationId": "Budgets_List",
        "x-ms-examples": {
          "BudgetsList": {
            "$ref": "./examples/BudgetsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/budgets/{budgetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to delete a budget.",
        "operationId": "Budgets_Delete",
        "x-ms-examples": {
          "DeleteBudget": {
            "$ref": "./examples/DeleteBudget.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Gets the budget for the scope by budget name.",
        "operationId": "Budgets_Get",
        "x-ms-examples": {
          "Budget": {
            "$ref": "./examples/Budget.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeBudgetParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/budgetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Budget"
                }
              }
            },
            "description": "Created."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Budgets"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The operation to create or update a budget. You can optionally provide an eTag if desired as a form of concurrency control. To obtain the latest eTag for a given budget, perform a get operation prior to your put operation.",
        "operationId": "Budgets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Budget"
              }
            }
          },
          "description": "Parameters supplied to the Create Budget operation.",
          "required": true
        },
        "x-ms-examples": {
          "CreateOrUpdateBudget": {
            "$ref": "./examples/CreateOrUpdateBudget.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/charges": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeChargesParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "description": "Start date",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "End date",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "May be used to filter charges by properties/usageEnd (Utc time), properties/usageStart (Utc time). The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to group charges for billingAccount scope by properties/billingProfileId, properties/invoiceSectionId, properties/customerId (specific for Partner Led), or for billingProfile scope by properties/invoiceSectionId.",
            "in": "query",
            "name": "$apply",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChargesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Charges"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the charges based for the defined scope.",
        "operationId": "Charges_List",
        "x-ms-examples": {
          "ChangesForBillingPeriodByDepartment-Legacy": {
            "$ref": "./examples/ChargesForBillingPeriodByDepartment.json"
          },
          "ChangesForBillingPeriodByEnrollmentAccount-Legacy": {
            "$ref": "./examples/ChargesForBillingPeriodByEnrollmentAccount.json"
          },
          "ChargesListByBillingAccount-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccount.json"
          },
          "ChargesListByBillingAccountGroupByBillingProfileId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByBillingProfileId.json"
          },
          "ChargesListByBillingAccountGroupByCustomerId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByCustomerId.json"
          },
          "ChargesListByBillingAccountGroupByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingAccountGroupByInvoiceSectionId.json"
          },
          "ChargesListByBillingProfile-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfile.json"
          },
          "ChargesListByBillingProfileGroupByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfileGroupByInvoiceSectionId.json"
          },
          "ChargesListByBillingProfileInvoiceSection-Modern": {
            "$ref": "./examples/ChargesListByModernBillingProfileInvoiceSection.json"
          },
          "ChargesListByCustomer-Modern": {
            "$ref": "./examples/ChargesListByModernCustomer.json"
          },
          "ChargesListByDepartment-Legacy": {
            "$ref": "./examples/ChargesListForDepartmentFilterByStartEndDate.json"
          },
          "ChargesListByInvoiceSectionId-Modern": {
            "$ref": "./examples/ChargesListByModernInvoiceSectionId.json"
          },
          "ChargesListForEnrollmentAccount-Legacy": {
            "$ref": "./examples/ChargesListForEnrollmentAccountFilterByStartEndDate.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/credits/balanceSummary": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeCreditsParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditSummary"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Credits"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "The credit summary by billingAccountId and billingProfileId.",
        "operationId": "Credits_Get",
        "x-ms-examples": {
          "CreditsBalanceSummary-Modern": {
            "$ref": "./examples/CreditSummaryByCustomer.json"
          },
          "CreditsBalanceSummaryByBillingProfile": {
            "$ref": "./examples/CreditSummaryByBillingProfile.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/events": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/startDateParameter"
          },
          {
            "$ref": "#/components/parameters/endDateParameter"
          },
          {
            "$ref": "#/components/parameters/scopeEventsParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Events"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Events"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the events by billingAccountId and billingProfileId for given start and end date.",
        "operationId": "Events_List",
        "x-ms-examples": {
          "EventsList-Modern": {
            "$ref": "./examples/EventsListByCustomer.json"
          },
          "EventsListByBillingProfile": {
            "$ref": "./examples/EventsListByBillingProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/lots": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeLotsParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Lots"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Lots"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the lots by billingAccountId and billingProfileId.",
        "operationId": "Lots_List",
        "x-ms-examples": {
          "LotsList-Modern": {
            "$ref": "./examples/LotsListByCustomer.json"
          },
          "LotsListByBillingProfile": {
            "$ref": "./examples/LotsListByBillingProfile.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/marketplaces": {
      "get": {
        "parameters": [
          {
            "description": "May be used to filter marketplaces by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N marketplaces.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/scopeMarketplaceParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarketplacesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Marketplaces"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the marketplaces for a scope at the defined scope. Marketplaces are available via this API only for May 1, 2014 or later.",
        "operationId": "Marketplaces_List",
        "x-ms-examples": {
          "BillingAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByBillingAccountList.json"
          },
          "BillingAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByBillingAccountListForBillingPeriod.json"
          },
          "DepartmentMarketplacesList": {
            "$ref": "./examples/MarketplacesByDepartmentList.json"
          },
          "DepartmentMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByDepartment_ListByBillingPeriod.json"
          },
          "EnrollmentAccountMarketplacesList": {
            "$ref": "./examples/MarketplacesByEnrollmentAccountList.json"
          },
          "EnrollmentAccountMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByEnrollmentAccounts_ListByBillingPeriod.json"
          },
          "ManagementGroupMarketplacesList": {
            "$ref": "./examples/MarketplacesByManagementGroupList.json"
          },
          "ManagementGroupMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesByManagementGroup_ListForBillingPeriod.json"
          },
          "SubscriptionMarketplacesList": {
            "$ref": "./examples/MarketplacesList.json"
          },
          "SubscriptionMarketplacesListForBillingPeriod": {
            "$ref": "./examples/MarketplacesListForBillingPeriod.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Marketplace",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/reservationDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeReservationDetailsParameter"
          },
          {
            "description": "Start date. Only applicable when querying with billing profile",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "End date. Only applicable when querying with billing profile",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Filter reservation details by date range. The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not applicable when querying with billing profile",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation",
            "in": "query",
            "name": "reservationId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order",
            "in": "query",
            "name": "reservationOrderId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations details for the defined scope and provided date range.",
        "operationId": "ReservationsDetails_List",
        "x-ms-examples": {
          "ReservationDetailsByBillingAccountId": {
            "$ref": "./examples/ReservationDetailsByBillingAccountId.json"
          },
          "ReservationDetailsByBillingProfileId": {
            "$ref": "./examples/ReservationDetailsByBillingProfileId.json"
          },
          "ReservationDetailsByBillingProfileIdReservationId": {
            "$ref": "./examples/ReservationDetailsByBillingProfileIdReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/reservationRecommendations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/filterParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/scopeReservationRecommendationsParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationRecommendationsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there are no recommendations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationRecommendations"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "List of recommendations for purchasing reserved instances.",
        "operationId": "ReservationRecommendations_List",
        "x-ms-examples": {
          "ReservationRecommendationsByBillingAccount-Legacy": {
            "$ref": "./examples/ReservationRecommendationsByBillingAccount.json"
          },
          "ReservationRecommendationsByBillingProfile-Modern": {
            "$ref": "./examples/ReservationRecommendationsByBillingProfile.json"
          },
          "ReservationRecommendationsByResourceGroup-Legacy": {
            "$ref": "./examples/ReservationRecommendationsByResourceGroup.json"
          },
          "ReservationRecommendationsBySubscription-Legacy": {
            "$ref": "./examples/ReservationRecommendationsBySubscription.json"
          },
          "ReservationRecommendationsFilterBySubscriptionForScopeLookBackPeriod-Legacy": {
            "$ref": "./examples/ReservationRecommendationsFilterBySubscriptionForScopeLookBackPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/reservationSummaries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeReservationsSummariesParameter"
          },
          {
            "$ref": "#/components/parameters/grainParameter"
          },
          {
            "description": "Start date. Required only when querying with billing profile",
            "in": "query",
            "name": "startDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "End date. Required only when querying with billing profile",
            "in": "query",
            "name": "endDate",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "The properties/UsageDate for start date and end date. The filter supports 'le' and  'ge'. Not required when querying with billing profile",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Reservation Id GUID. Only valid if reservationOrderId is also provided. Filter to a specific reservation",
            "in": "query",
            "name": "reservationId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "description": "Reservation Order Id GUID. Required if reservationId is provided. Filter to a specific reservation order",
            "in": "query",
            "name": "reservationOrderId",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationSummariesListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ReservationSummaries"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the reservations summaries for the defined scope daily or monthly grain.",
        "operationId": "ReservationsSummaries_List",
        "x-ms-examples": {
          "ReservationSummariesDailyWithBillingAccountId": {
            "$ref": "./examples/ReservationSummariesDailyWithBillingAccountId.json"
          },
          "ReservationSummariesDailyWithBillingProfileId": {
            "$ref": "./examples/ReservationSummariesDailyWithBillingProfileId.json"
          },
          "ReservationSummariesMonthlyWithBillingAccountId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingAccountId.json"
          },
          "ReservationSummariesMonthlyWithBillingProfileId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingProfileId.json"
          },
          "ReservationSummariesMonthlyWithBillingProfileIdReservationId": {
            "$ref": "./examples/ReservationSummariesMonthlyWithBillingProfileIdReservationId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/tags": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeTagsParameter"
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagsResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "204": {
            "description": "An empty response is sent when there is no information available within the selected scope."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Tags"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Get all available tag keys for the defined scope",
        "operationId": "Tags_Get",
        "x-ms-examples": {
          "Tags_Get": {
            "$ref": "./examples/Tags.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Consumption/usageDetails": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/scopeUsageDetailsParameter"
          },
          {
            "description": "May be used to expand the properties/additionalInfo or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.",
            "in": "query",
            "name": "$expand",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to filter usageDetails by properties/resourceGroup, properties/instanceName, properties/resourceId, properties/chargeType, properties/reservationId, properties/publisherType or tags. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:). PublisherType Filter accepts two values azure and marketplace and it is currently supported for Web Direct Offer Type",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.",
            "in": "query",
            "name": "$skiptoken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "May be used to limit the number of results to the most recent N usageDetails.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "format": "int32",
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "$ref": "#/components/parameters/apiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/metricParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageDetailsListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "UsageDetails"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/en-us/rest/api/consumption/"
        },
        "description": "Lists the usage details for the defined scope. Usage details are available via this API only for May 1, 2014 or later. For more information on using this API, including how to specify a date range, please see: https://docs.microsoft.com/en-us/azure/cost-management-billing/costs/manage-automation",
        "operationId": "UsageDetails_List",
        "x-ms-examples": {
          "BillingAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByBillingAccount.json"
          },
          "BillingAccountUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingAccount.json"
          },
          "BillingAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByBillingAccount.json"
          },
          "BillingProfileUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCABillingProfile.json"
          },
          "CustomerUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCACustomer.json"
          },
          "DepartmentUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByDepartment.json"
          },
          "DepartmentUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByDepartment.json"
          },
          "EnrollmentAccountUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByEnrollmentAccount.json"
          },
          "EnrollmentAccountUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByEnrollmentAccount.json"
          },
          "InvoiceSectionUsageDetailsList-Modern": {
            "$ref": "./examples/UsageDetailsListByMCAInvoiceSection.json"
          },
          "ManagementGroupUsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsListByManagementGroup.json"
          },
          "ManagementGroupUsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriodByManagementGroup.json"
          },
          "UsageDetailsExpand-Legacy": {
            "$ref": "./examples/UsageDetailsExpand.json"
          },
          "UsageDetailsList-Legacy": {
            "$ref": "./examples/UsageDetailsList.json"
          },
          "UsageDetailsListByMetricActualCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricActualCost.json"
          },
          "UsageDetailsListByMetricAmortizedCost-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricAmortizedCost.json"
          },
          "UsageDetailsListByMetricUsage-Legacy": {
            "$ref": "./examples/UsageDetailsListByMetricUsage.json"
          },
          "UsageDetailsListFilterByTag-Legacy": {
            "$ref": "./examples/UsageDetailsListFilterByTag.json"
          },
          "UsageDetailsListForBillingPeriod-Legacy": {
            "$ref": "./examples/UsageDetailsListForBillingPeriod.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "apiVersionParameter": {
        "description": "Version of the API to be used with the client request. The current version is 2019-10-01.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "billingAccountIdParameter": {
        "description": "BillingAccount ID",
        "in": "path",
        "name": "billingAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "billingPeriodNameParameter": {
        "description": "Billing Period Name.",
        "in": "path",
        "name": "billingPeriodName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "billingProfileIdParameter": {
        "description": "Azure Billing Profile ID.",
        "in": "path",
        "name": "billingProfileId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "budgetNameParameter": {
        "description": "Budget Name.",
        "in": "path",
        "name": "budgetName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "departmentIdParameter": {
        "description": "Department ID",
        "in": "path",
        "name": "departmentId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "endDateParameter": {
        "description": "End date",
        "in": "query",
        "name": "endDate",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "enrollmentAccountIdParameter": {
        "description": "EnrollmentAccount ID",
        "in": "path",
        "name": "enrollmentAccountId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "filterParameter": {
        "description": "May be used to filter reservationRecommendations by: properties/scope with allowed values ['Single', 'Shared'] and default value 'Single'; properties/resourceType with allowed values ['VirtualMachines', 'SQLDatabases', 'PostgreSQL', 'ManagedDisk', 'MySQL', 'RedHat', 'MariaDB', 'RedisCache', 'CosmosDB', 'SqlDataWarehouse', 'SUSELinux', 'AppService', 'BlockBlob', 'AzureDataExplorer', 'VMwareCloudSimple'] and default value 'VirtualMachines'; and properties/lookBackPeriod with allowed values ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last7Days'.",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "grainParameter": {
        "description": "Can be daily or monthly",
        "in": "query",
        "name": "grain",
        "required": true,
        "schema": {
          "enum": [
            "daily",
            "monthly"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "datagrain",
          "values": [
            {
              "description": "Daily grain of data",
              "name": "DailyGrain",
              "value": "daily"
            },
            {
              "description": "Monthly grain of data",
              "name": "MonthlyGrain",
              "value": "monthly"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      },
      "invoiceSectionIdParameter": {
        "description": "Azure Invoice Section ID.",
        "in": "path",
        "name": "invoiceSectionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "lookBackPeriodParameter": {
        "description": "Filter the time period on which reservation recommendation results are based.",
        "in": "query",
        "name": "lookBackPeriod",
        "required": true,
        "schema": {
          "enum": [
            "Last7Days",
            "Last30Days",
            "Last60Days"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "lookBackPeriod",
          "values": [
            {
              "description": "Use 7 days of data for recommendations",
              "name": "Last07Days",
              "value": "Last7Days"
            },
            {
              "description": "Use 30 days of data for recommendations",
              "name": "Last30Days",
              "value": "Last30Days"
            },
            {
              "description": "Use 60 days of data for recommendations",
              "name": "Last60Days",
              "value": "Last60Days"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      },
      "managementGroupIdParameter": {
        "description": "Azure Management Group ID.",
        "in": "path",
        "name": "managementGroupId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "metricParameter": {
        "description": "Allows to select different type of cost/usage records.",
        "in": "query",
        "name": "metric",
        "required": false,
        "schema": {
          "enum": [
            "actualcost",
            "amortizedcost",
            "usage"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "metrictype",
          "values": [
            {
              "description": "Actual cost data.",
              "name": "ActualCostMetricType",
              "value": "actualcost"
            },
            {
              "description": "Amortized cost data.",
              "name": "AmortizedCostMetricType",
              "value": "amortizedcost"
            },
            {
              "description": "Usage data.",
              "name": "UsageMetricType",
              "value": "usage"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      },
      "productParameter": {
        "description": "Filter the products for which reservation recommendation results are generated. Examples: Standard_DS1_v2 (for VM), Premium_SSD_Managed_Disks_P30 (for Managed Disks)",
        "in": "query",
        "name": "product",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "regionParameter": {
        "description": "Used to select the region the recommendation should be generated for.",
        "in": "query",
        "name": "region",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "reservationIdParameter": {
        "description": "Id of the reservation",
        "in": "path",
        "name": "reservationId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "reservationOrderIdParameter": {
        "description": "Order Id of the reservation",
        "in": "path",
        "name": "reservationOrderId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupNameParameter": {
        "description": "Azure Resource Group Name.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "scopeBudgetParameter": {
        "allowReserved": true,
        "description": "The scope associated with budget operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope, '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeChargesParameter": {
        "allowReserved": true,
        "description": "The scope associated with charges operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope. For department and enrollment accounts, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. Also, Modern Commerce Account scopes are '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeCreditsParameter": {
        "allowReserved": true,
        "description": "The scope associated with credits operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfile/{billingProfileId}' for Billing Profile scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeEventsParameter": {
        "allowReserved": true,
        "description": "The scope associated with events operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfile/{billingProfileId}' for Billing Profile scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeLotsParameter": {
        "allowReserved": true,
        "description": "The scope associated with Lots operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfile/{billingProfileId}' for Billing Profile scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeMarketplaceParameter": {
        "allowReserved": true,
        "description": "The scope associated with marketplace operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and ManagementGroup, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeParameter": {
        "description": "Scope of the reservation.",
        "in": "query",
        "name": "scope",
        "required": true,
        "schema": {
          "enum": [
            "Single",
            "Shared"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "scope"
        },
        "x-ms-parameter-location": "method"
      },
      "scopeReservationDetailsParameter": {
        "allowReserved": true,
        "description": "The scope associated with reservations details operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy), and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope (modern). ",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeReservationRecommendationDetailsParameter": {
        "allowReserved": true,
        "description": "The scope associated with reservation recommendation details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope, /providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope",
        "in": "path",
        "name": "billingScope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeReservationRecommendationsParameter": {
        "allowReserved": true,
        "description": "The scope associated with reservation recommendations operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resource group scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeReservationTransactionsParameter": {
        "allowReserved": true,
        "description": "The scope associated with reservation transactions operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount/Enrollment scope, and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeReservationsSummariesParameter": {
        "allowReserved": true,
        "description": "The scope associated with reservations summaries operations. This includes '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for BillingAccount scope (legacy), and '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for BillingProfile scope (modern). ",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeTagsParameter": {
        "allowReserved": true,
        "description": "The scope associated with tags operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for resourceGroup scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope..",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "scopeUsageDetailsParameter": {
        "allowReserved": true,
        "description": "The scope associated with usage details operations. This includes '/subscriptions/{subscriptionId}/' for subscription scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for Billing Account scope, '/providers/Microsoft.Billing/departments/{departmentId}' for Department scope, '/providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountId}' for EnrollmentAccount scope and '/providers/Microsoft.Management/managementGroups/{managementGroupId}' for Management Group scope. For subscription, billing account, department, enrollment account and management group, you can also add billing period to the scope using '/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. For e.g. to specify billing period at department scope use '/providers/Microsoft.Billing/departments/{departmentId}/providers/Microsoft.Billing/billingPeriods/{billingPeriodName}'. Also, Modern Commerce Account scopes are '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}' for billingAccount scope, '/providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}' for billingProfile scope, 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/billingProfiles/{billingProfileId}/invoiceSections/{invoiceSectionId}' for invoiceSection scope, and 'providers/Microsoft.Billing/billingAccounts/{billingAccountId}/customers/{customerId}' specific for partners.",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method",
        "x-ms-skip-url-encoding": true
      },
      "startDateParameter": {
        "description": "Start date",
        "in": "query",
        "name": "startDate",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionIdParameter": {
        "description": "Azure Subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "termParameter": {
        "description": "Specify length of reservation recommendation term.",
        "in": "query",
        "name": "term",
        "required": true,
        "schema": {
          "enum": [
            "P1Y",
            "P3Y"
          ],
          "type": "string"
        },
        "x-ms-enum": {
          "modelAsString": true,
          "name": "term",
          "values": [
            {
              "description": "1 year reservation term",
              "name": "P1Y",
              "value": "P1Y"
            },
            {
              "description": "3 year reservation term",
              "name": "P3Y",
              "value": "P3Y"
            }
          ]
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AmountWithExchangeRate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/amount"
          }
        ],
        "description": "Reseller details",
        "properties": {
          "exchangeRate": {
            "description": "Exchange Rate.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "exchangeRateMonth": {
            "description": "Exchange rate month.",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Balance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A balance resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BalanceProperties",
            "title": "Balance properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BalanceProperties": {
        "description": "The properties of the balance.",
        "properties": {
          "adjustmentDetails": {
            "description": "List of Adjustments (Promo credit, SIE credit etc.).",
            "items": {
              "properties": {
                "name": {
                  "description": "the name of new adjustment.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "the value of new adjustment.",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "adjustments": {
            "description": "Total adjustment amount.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "azureMarketplaceServiceCharges": {
            "description": "Total charges for Azure Marketplace.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "beginningBalance": {
            "description": "The beginning balance for the billing period.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingFrequency": {
            "description": "The billing frequency.",
            "enum": [
              "Month",
              "Quarter",
              "Year"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BillingFrequency"
            }
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "endingBalance": {
            "description": "The ending balance for the billing period (for open periods this will be updated daily).",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "newPurchases": {
            "description": "Total new purchase amount.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "newPurchasesDetails": {
            "description": "List of new purchases.",
            "items": {
              "properties": {
                "name": {
                  "description": "the name of new purchase.",
                  "readOnly": true,
                  "type": "string"
                },
                "value": {
                  "description": "the value of new purchase.",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "priceHidden": {
            "description": "Price is hidden or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "serviceOverage": {
            "description": "Overage for Azure services.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "totalOverage": {
            "description": "serviceOverage + chargesBilledSeparately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "totalUsage": {
            "description": "Azure service commitment + total Overage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "utilized": {
            "description": "Total Commitment usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Budget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A budget resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/BudgetProperties",
            "title": "Budget properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "BudgetComparisonExpression": {
        "description": "The comparison expression to be used in the budgets.",
        "properties": {
          "name": {
            "description": "The name of the column to use in comparison.",
            "type": "string"
          },
          "operator": {
            "description": "The operator to use for comparison.",
            "enum": [
              "In"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "BudgetOperatorType"
            }
          },
          "values": {
            "description": "Array of values to use for comparison",
            "items": {
              "type": "string"
            },
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "BudgetFilter": {
        "description": "May be used to filter budgets by resource group, resource, or meter.",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/BudgetComparisonExpression",
            "description": "Has comparison expression for a tag"
          },
          "and": {
            "description": "The logical \"AND\" expression. Must have at least 2 items.",
            "items": {
              "$ref": "#/components/schemas/BudgetFilterProperties"
            },
            "minItems": 0,
            "type": "array"
          },
          "dimensions": {
            "$ref": "#/components/schemas/BudgetComparisonExpression",
            "description": "Has comparison expression for a dimension"
          },
          "not": {
            "$ref": "#/components/schemas/BudgetFilterProperties",
            "description": "The logical \"NOT\" expression."
          }
        },
        "type": "object"
      },
      "BudgetFilterProperties": {
        "description": "The Dimensions or Tags to filter a budget by.",
        "properties": {
          "tags": {
            "$ref": "#/components/schemas/BudgetComparisonExpression",
            "description": "Has comparison expression for a tag"
          },
          "dimensions": {
            "$ref": "#/components/schemas/BudgetComparisonExpression",
            "description": "Has comparison expression for a dimension"
          }
        },
        "type": "object"
      },
      "BudgetProperties": {
        "description": "The properties of the budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost to track with the budget",
            "format": "decimal",
            "type": "number"
          },
          "category": {
            "description": "The category of the budget, whether the budget tracks cost or usage.",
            "enum": [
              "Cost"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CategoryType"
            }
          },
          "currentSpend": {
            "$ref": "#/components/schemas/CurrentSpend",
            "description": "The current amount of cost which is being tracked for a budget.",
            "readOnly": true
          },
          "filter": {
            "$ref": "#/components/schemas/BudgetFilter",
            "description": "May be used to filter budgets by user-specified dimensions and/or tags.",
            "type": "object"
          },
          "forecastSpend": {
            "$ref": "#/components/schemas/ForecastSpend",
            "description": "The forecasted cost which is being tracked for a budget.",
            "readOnly": true
          },
          "notifications": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Notification",
              "type": "object"
            },
            "description": "Dictionary of notifications associated with the budget. Budget can have up to five notifications.",
            "maxItems": 5,
            "type": "object"
          },
          "timeGrain": {
            "description": "The time covered by a budget. Tracking of the amount will be reset based on the time grain. BillingMonth, BillingQuarter, and BillingAnnual are only supported by WD customers",
            "enum": [
              "Monthly",
              "Quarterly",
              "Annually",
              "BillingMonth",
              "BillingQuarter",
              "BillingAnnual"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TimeGrainType"
            }
          },
          "timePeriod": {
            "$ref": "#/components/schemas/BudgetTimePeriod",
            "description": "Has start and end date of the budget. The start date must be first of the month and should be less than the end date. Budget start date must be on or after June 1, 2017. Future start date should not be more than twelve months. Past start date should  be selected within the timegrain period. There are no restrictions on the end date."
          }
        },
        "required": [
          "category",
          "amount",
          "timeGrain",
          "timePeriod"
        ],
        "type": "object"
      },
      "BudgetTimePeriod": {
        "description": "The start and end date for a budget.",
        "properties": {
          "endDate": {
            "description": "The end date for the budget. If not provided, we default this to 10 years from the start date.",
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "description": "The start date for the budget.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ],
        "type": "object"
      },
      "BudgetsListResult": {
        "description": "Result of listing budgets. It contains a list of available budgets in the scope provided.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of budgets.",
            "items": {
              "$ref": "#/components/schemas/Budget"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ChargeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RevisedResource"
          }
        ],
        "description": "A charge summary resource.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Specifies the kind of charge summary.",
            "enum": [
              "legacy",
              "modern"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ChargeSummaryKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "ChargesListResult": {
        "description": "Result of listing charge summary.",
        "properties": {
          "value": {
            "description": "The list of charge summary",
            "items": {
              "$ref": "#/components/schemas/ChargeSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreditBalanceSummary": {
        "description": "Summary of credit balances.",
        "properties": {
          "currentBalance": {
            "$ref": "#/components/schemas/amount",
            "description": "Current balance.",
            "readOnly": true
          },
          "currentBalanceInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "estimatedBalance": {
            "$ref": "#/components/schemas/amount",
            "description": "Estimated balance.",
            "readOnly": true
          },
          "estimatedBalanceInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CreditSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A credit summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CreditSummaryProperties",
            "title": "Credit summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "CreditSummaryProperties": {
        "description": "The properties of the credit summary.",
        "properties": {
          "balanceSummary": {
            "$ref": "#/components/schemas/CreditBalanceSummary",
            "description": "Summary of balances associated with this credit summary.",
            "readOnly": true
          },
          "billingCurrency": {
            "description": "Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "creditCurrency": {
            "description": "Credit Currency",
            "readOnly": true,
            "type": "string"
          },
          "expiredCredit": {
            "$ref": "#/components/schemas/amount",
            "description": "Expired credit.",
            "readOnly": true
          },
          "pendingCreditAdjustments": {
            "$ref": "#/components/schemas/amount",
            "description": "Pending credit adjustments.",
            "readOnly": true
          },
          "pendingEligibleCharges": {
            "$ref": "#/components/schemas/amount",
            "description": "Pending eligible charges.",
            "readOnly": true
          },
          "reseller": {
            "$ref": "#/components/schemas/Reseller",
            "description": "Reseller details.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "CurrentSpend": {
        "description": "The current amount of cost which is being tracked for a budget.",
        "properties": {
          "amount": {
            "description": "The total amount of cost which is being tracked by the budget.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit of measure for the budget amount.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "DownloadProperties": {
        "description": "The properties of the price sheet download.",
        "properties": {
          "downloadUrl": {
            "description": "The link (url) to download the pricesheet.",
            "readOnly": true,
            "type": "string"
          },
          "validTill": {
            "description": "Download link validity.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorDetails": {
        "description": "The details of the error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDetails",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "EventProperties": {
        "description": "The event properties.",
        "properties": {
          "adjustments": {
            "$ref": "#/components/schemas/amount",
            "description": "Adjustments amount.",
            "readOnly": true
          },
          "adjustmentsInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "billingCurrency": {
            "description": "Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "charges": {
            "$ref": "#/components/schemas/amount",
            "description": "Charges amount.",
            "readOnly": true
          },
          "chargesInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "closedBalance": {
            "$ref": "#/components/schemas/amount",
            "description": "Closed balance.",
            "readOnly": true
          },
          "closedBalanceInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "creditCurrency": {
            "description": "Credit Currency",
            "readOnly": true,
            "type": "string"
          },
          "creditExpired": {
            "$ref": "#/components/schemas/amount",
            "description": "Credit expired.",
            "readOnly": true
          },
          "creditExpiredInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "description": {
            "description": "Transaction description.",
            "readOnly": true,
            "type": "string"
          },
          "eventType": {
            "description": "The type of event.",
            "enum": [
              "SettledCharges",
              "PendingCharges",
              "PendingAdjustments",
              "PendingNewCredit",
              "PendingExpiredCredit",
              "UnKnown",
              "NewCredit"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EventType"
            }
          },
          "invoiceNumber": {
            "description": "Invoice number.",
            "readOnly": true,
            "type": "string"
          },
          "newCredit": {
            "$ref": "#/components/schemas/amount",
            "description": "New Credit.",
            "readOnly": true
          },
          "newCreditInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "reseller": {
            "$ref": "#/components/schemas/Reseller",
            "description": "Reseller details.",
            "readOnly": true
          },
          "transactionDate": {
            "description": "Transaction date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EventSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "An event summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EventProperties",
            "title": "Event summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Events": {
        "description": "Result of listing event summary.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of event summary.",
            "items": {
              "$ref": "#/components/schemas/EventSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Forecast": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A forecast resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ForecastProperties",
            "title": "Forecast properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ForecastProperties": {
        "description": "The properties of the forecast charge.",
        "properties": {
          "charge": {
            "description": "The amount of charge",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "chargeType": {
            "description": "The type of the charge. Could be actual or forecast",
            "enum": [
              "Actual",
              "Forecast"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ChargeType"
            }
          },
          "confidenceLevels": {
            "description": "The details about the forecast confidence levels. This is populated only when chargeType is Forecast.",
            "items": {
              "properties": {
                "bound": {
                  "description": "The boundary of the percentage, values could be 'Upper' or 'Lower'",
                  "enum": [
                    "Upper",
                    "Lower"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "Bound"
                  }
                },
                "percentage": {
                  "description": "The percentage level of the confidence",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                },
                "value": {
                  "description": "The amount of forecast within the percentage level",
                  "format": "decimal",
                  "readOnly": true,
                  "type": "number"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "grain": {
            "description": "The granularity of forecast. Please note that Yearly is not currently supported in this API. The API will provide responses in the Monthly grain if Yearly is selected. To get yearly grain data, please use our newer Forecast API.",
            "enum": [
              "Daily",
              "Monthly",
              "Yearly"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "Grain"
            }
          },
          "usageDate": {
            "description": "The usage date of the forecast.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForecastSpend": {
        "description": "The forecasted cost which is being tracked for a budget.",
        "properties": {
          "amount": {
            "description": "The forecasted cost for the total time period which is being tracked by the budget. This value is only provided if the budget contains a forecast alert type.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit of measure for the budget amount.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ForecastsListResult": {
        "description": "Result of listing forecasts. It contains a list of available forecasts.",
        "properties": {
          "value": {
            "description": "The list of forecasts.",
            "items": {
              "$ref": "#/components/schemas/Forecast"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HighCasedErrorDetails": {
        "description": "The details of the error.",
        "properties": {
          "code": {
            "description": "Error code.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HighCasedErrorResponse": {
        "description": "Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message. \n\nSome Error responses: \n\n * 429 TooManyRequests - Request is throttled. Retry after waiting for the time specified in the \"x-ms-ratelimit-microsoft.consumption-retry-after\" header. \n\n * 503 ServiceUnavailable - Service is temporarily unavailable. Retry after waiting for the time specified in the \"Retry-After\" header.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/HighCasedErrorDetails",
            "description": "The details of the error."
          }
        },
        "type": "object"
      },
      "LegacyChargeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ChargeSummary"
          }
        ],
        "description": "Legacy charge summary.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LegacyChargeSummaryProperties",
            "description": "Properties for legacy charge summary",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "legacy"
      },
      "LegacyChargeSummaryProperties": {
        "description": "The properties of legacy charge summary.",
        "properties": {
          "azureCharges": {
            "description": "Azure Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "azureMarketplaceCharges": {
            "description": "Marketplace Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the charge belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "currency": {
            "description": "Currency Code",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "Usage end date.",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "Usage start date.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LegacyReservationRecommendation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReservationRecommendation"
          }
        ],
        "description": "Legacy reservation recommendation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LegacyReservationRecommendationProperties",
            "description": "Properties for legacy reservation recommendation",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "legacy"
      },
      "LegacyReservationRecommendationProperties": {
        "description": "The properties of the reservation recommendation.",
        "properties": {
          "costWithNoReservedInstances": {
            "description": "The total amount of cost without reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "firstUsageDate": {
            "description": "The usage date for looking back.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityGroup": {
            "description": "The instance Flexibility Group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityRatio": {
            "description": "The instance Flexibility Ratio.",
            "readOnly": true,
            "type": "number"
          },
          "lookBackPeriod": {
            "description": "The number of days of usage to look back for recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "meterId": {
            "description": "The meter id (GUID)",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "netSavings": {
            "description": "Total estimated savings with reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "normalizedSize": {
            "description": "The normalized Size.",
            "readOnly": true,
            "type": "string"
          },
          "recommendedQuantity": {
            "description": "Recommended quality for reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "recommendedQuantityNormalized": {
            "description": "The recommended Quantity Normalized.",
            "readOnly": true,
            "type": "number"
          },
          "resourceType": {
            "description": "The azure resource type.",
            "readOnly": true,
            "type": "string"
          },
          "scope": {
            "description": "Shared or single recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "skuProperties": {
            "description": "List of sku properties",
            "items": {
              "$ref": "#/components/schemas/SkuProperty"
            },
            "readOnly": true,
            "type": "array"
          },
          "term": {
            "description": "RI recommendations in one or three year terms.",
            "readOnly": true,
            "type": "string"
          },
          "totalCostWithReservedInstances": {
            "description": "The total amount of cost with reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "LegacyReservationTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReservationTransaction"
          }
        ],
        "description": "Legacy Reservation transaction resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LegacyReservationTransactionProperties",
            "title": "Reservation Transaction properties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "LegacyReservationTransactionProperties": {
        "description": "The properties of a legacy reservation transaction.",
        "properties": {
          "accountName": {
            "description": "The name of the account that makes the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "accountOwnerEmail": {
            "description": "The email of the account owner that makes the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "amount": {
            "description": "The charge of the transaction.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "armSkuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "billingFrequency": {
            "description": "The billing frequency, which can be either one-time or recurring.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a cost center is provided.",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the transaction is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "currentEnrollment": {
            "description": "The current enrollment.",
            "readOnly": true,
            "type": "string"
          },
          "departmentName": {
            "description": "The department name.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "eventDate": {
            "description": "The date of the transaction",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventType": {
            "description": "The type of the transaction (Purchase, Cancel, etc.)",
            "readOnly": true,
            "type": "string"
          },
          "purchasingEnrollment": {
            "description": "The purchasing enrollment.",
            "readOnly": true,
            "type": "string"
          },
          "purchasingSubscriptionGuid": {
            "description": "The subscription guid that makes the transaction.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "purchasingSubscriptionName": {
            "description": "The subscription name that makes the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the transaction.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "region": {
            "description": "The region of the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderName": {
            "description": "The name of the reservation order.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "This is the term of the transaction.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LegacyUsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UsageDetail"
          }
        ],
        "description": "Legacy usage detail.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LegacyUsageDetailProperties",
            "description": "Properties for legacy usage details",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "legacy"
      },
      "LegacyUsageDetailProperties": {
        "description": "The properties of the legacy usage detail.",
        "properties": {
          "accountName": {
            "description": "Account Name.",
            "readOnly": true,
            "type": "string"
          },
          "accountOwnerId": {
            "description": "Account Owner Id.",
            "readOnly": true,
            "type": "string"
          },
          "additionalInfo": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountId": {
            "description": "Billing Account identifier.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountName": {
            "description": "Billing Account Name.",
            "readOnly": true,
            "type": "string"
          },
          "billingCurrency": {
            "description": "Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodEndDate": {
            "description": "The billing period end date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodStartDate": {
            "description": "The billing period start date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileId": {
            "description": "Billing Profile identifier.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileName": {
            "description": "Billing Profile Name.",
            "readOnly": true,
            "type": "string"
          },
          "chargeType": {
            "description": "Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
            "readOnly": true,
            "type": "string"
          },
          "consumedService": {
            "description": "Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
            "readOnly": true,
            "type": "string"
          },
          "cost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a cost center is provided.",
            "readOnly": true,
            "type": "string"
          },
          "date": {
            "description": "Date for the usage record.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "effectivePrice": {
            "description": "Effective Price that's charged for the usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "frequency": {
            "description": "Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSection": {
            "description": "Invoice Section Name.",
            "readOnly": true,
            "type": "string"
          },
          "isAzureCreditEligible": {
            "description": "Is Azure Credit Eligible.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetailsResponse",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerId": {
            "description": "Offer Id. Ex: MS-AZR-0017P, MS-AZR-0148P.",
            "readOnly": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part Number of the service used. Can be used to join with the price sheet. Not available for marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "planName": {
            "description": "Plan Name.",
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "description": "Product name for the consumed service or purchase. Not available for Marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderId": {
            "description": "Product Order Id. For reservations this is the Reservation Order ID.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderName": {
            "description": "Product Order Name. For reservations this is the SKU that was purchased.",
            "readOnly": true,
            "type": "string"
          },
          "publisherName": {
            "description": "Publisher Name.",
            "readOnly": true,
            "type": "string"
          },
          "publisherType": {
            "description": "Publisher Type.",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "description": "The usage quantity.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "reservationId": {
            "description": "ARM resource id of the reservation. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservationName": {
            "description": "User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "Resource Group Name.",
            "readOnly": true,
            "type": "string"
          },
          "resourceId": {
            "description": "Azure resource manager resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "resourceLocation": {
            "description": "Resource Location.",
            "readOnly": true,
            "type": "string"
          },
          "resourceName": {
            "description": "Resource Name.",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo1": {
            "description": "Service Info 1.",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo2": {
            "description": "Service Info 2.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Subscription guid.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "Term (in months). 1 month for monthly recurring purchase. 12 months for a 1 year reservation. 36 months for a 3 year reservation.",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price is the price applicable to you. (your EA or other contract price).",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "LotProperties": {
        "description": "The lot properties.",
        "properties": {
          "billingCurrency": {
            "description": "Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "closedBalance": {
            "$ref": "#/components/schemas/amount",
            "description": "Closed balance.",
            "readOnly": true
          },
          "closedBalanceInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "creditCurrency": {
            "description": "Credit Currency",
            "readOnly": true,
            "type": "string"
          },
          "expirationDate": {
            "description": "Expiration date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "originalAmount": {
            "$ref": "#/components/schemas/amount",
            "description": "Original amount.",
            "readOnly": true
          },
          "originalAmountInBillingCurrency": {
            "$ref": "#/components/schemas/AmountWithExchangeRate",
            "description": "Current balance.",
            "readOnly": true
          },
          "poNumber": {
            "description": "PO number.",
            "readOnly": true,
            "type": "string"
          },
          "reseller": {
            "$ref": "#/components/schemas/Reseller",
            "description": "Reseller details.",
            "readOnly": true
          },
          "source": {
            "description": "Lot source.",
            "enum": [
              "PurchasedCredit",
              "PromotionalCredit"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "LotSource"
            }
          },
          "startDate": {
            "description": "Start date.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "LotSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A lot summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LotProperties",
            "title": "Lot summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Lots": {
        "description": "Result of listing lot summary.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of lot summary.",
            "items": {
              "$ref": "#/components/schemas/LotSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManagementGroupAggregatedCostProperties": {
        "description": "The properties of the Management Group Aggregated Cost.",
        "properties": {
          "azureCharges": {
            "description": "Azure Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the aggregated cost belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "chargesBilledSeparately": {
            "description": "Charges Billed Separately.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "children": {
            "description": "Children of a management group",
            "items": {
              "$ref": "#/components/schemas/ManagementGroupAggregatedCostResult"
            },
            "type": "array"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "excludedSubscriptions": {
            "description": "List of subscription Guids excluded from the calculation of aggregated cost",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "includedSubscriptions": {
            "description": "List of subscription Guids included in the calculation of aggregated cost",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "marketplaceCharges": {
            "description": "Marketplace Charges.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the aggregated cost.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "The start of the date time range covered by aggregated cost.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManagementGroupAggregatedCostResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "A management group aggregated cost resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ManagementGroupAggregatedCostProperties",
            "title": "Management Group Aggregated Cost properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Marketplace": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An marketplace resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MarketplaceProperties",
            "title": "Marketplace properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "MarketplaceProperties": {
        "description": "The properties of the marketplace usage detail.",
        "properties": {
          "accountName": {
            "description": "Account name.",
            "readOnly": true,
            "type": "string"
          },
          "additionalInfo": {
            "description": "Additional information.",
            "readOnly": true,
            "type": "string"
          },
          "additionalProperties": {
            "description": "Additional details of this usage item. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "consumedQuantity": {
            "description": "The quantity of usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "consumedService": {
            "description": "Consumed service name.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a costcenter exists",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the meter is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "departmentName": {
            "description": "Department name.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "The uri of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "The name of the resource instance that the usage is about.",
            "readOnly": true,
            "type": "string"
          },
          "isEstimated": {
            "description": "The estimated usage is subject to change.",
            "readOnly": true,
            "type": "boolean"
          },
          "isRecurringCharge": {
            "description": "Flag indicating whether this is a recurring charge or not.",
            "readOnly": true,
            "type": "boolean"
          },
          "meterId": {
            "description": "The meter id (GUID).",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerName": {
            "description": "The type of offer.",
            "readOnly": true,
            "type": "string"
          },
          "orderNumber": {
            "description": "The order number.",
            "readOnly": true,
            "type": "string"
          },
          "planName": {
            "description": "The name of plan.",
            "readOnly": true,
            "type": "string"
          },
          "pretaxCost": {
            "description": "The amount of cost before tax.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "publisherName": {
            "description": "The name of publisher.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "The name of resource group.",
            "readOnly": true,
            "type": "string"
          },
          "resourceRate": {
            "description": "The marketplace resource rate.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "subscriptionGuid": {
            "description": "Subscription guid.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Subscription name.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "The unit of measure.",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "The end of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "The start of the date time range covered by the usage detail.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplacesListResult": {
        "description": "Result of listing marketplaces. It contains a list of available marketplaces in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of marketplaces.",
            "items": {
              "$ref": "#/components/schemas/Marketplace"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeterDetails": {
        "description": "The properties of the meter detail.",
        "properties": {
          "meterCategory": {
            "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
            "readOnly": true,
            "type": "string"
          },
          "meterLocation": {
            "description": "The location in which the Azure service is available.",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "The name of the meter, within the given meter category",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
            "readOnly": true,
            "type": "string"
          },
          "pretaxStandardRate": {
            "description": "The pretax listing price.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "serviceName": {
            "description": "The name of the service.",
            "readOnly": true,
            "type": "string"
          },
          "serviceTier": {
            "description": "The service tier.",
            "readOnly": true,
            "type": "string"
          },
          "totalIncludedQuantity": {
            "description": "The total included quantity associated with the offer.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "unit": {
            "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeterDetailsResponse": {
        "description": "The properties of the meter detail.",
        "properties": {
          "meterCategory": {
            "description": "The category of the meter, for example, 'Cloud services', 'Networking', etc..",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "The name of the meter, within the given meter category",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "The subcategory of the meter, for example, 'A6 Cloud services', 'ExpressRoute (IXP)', etc..",
            "readOnly": true,
            "type": "string"
          },
          "serviceFamily": {
            "description": "The service family.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "The unit in which the meter consumption is charged, for example, 'Hours', 'GB', etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModernChargeSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ChargeSummary"
          }
        ],
        "description": "Modern charge summary.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ModernChargeSummaryProperties",
            "description": "Properties for modern charge summary",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "modern"
      },
      "ModernChargeSummaryProperties": {
        "description": "The properties of modern charge summary.",
        "properties": {
          "azureCharges": {
            "$ref": "#/components/schemas/amount",
            "description": "Azure Charges.",
            "readOnly": true
          },
          "billingAccountId": {
            "description": "Billing Account Id",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodId": {
            "description": "The id of the billing period resource that the charge belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileId": {
            "description": "Billing Profile Id",
            "readOnly": true,
            "type": "string"
          },
          "chargesBilledSeparately": {
            "$ref": "#/components/schemas/amount",
            "description": "Charges Billed separately.",
            "readOnly": true
          },
          "customerId": {
            "description": "Customer Id",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSectionId": {
            "description": "Invoice Section Id",
            "readOnly": true,
            "type": "string"
          },
          "isInvoiced": {
            "description": "Is charge Invoiced",
            "readOnly": true,
            "type": "boolean"
          },
          "marketplaceCharges": {
            "$ref": "#/components/schemas/amount",
            "description": "Marketplace Charges.",
            "readOnly": true
          },
          "subscriptionId": {
            "description": "Subscription guid.",
            "readOnly": true,
            "type": "string"
          },
          "usageEnd": {
            "description": "Usage end date.",
            "readOnly": true,
            "type": "string"
          },
          "usageStart": {
            "description": "Usage start date.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModernReservationRecommendation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReservationRecommendation"
          }
        ],
        "description": "Modern reservation recommendation.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ModernReservationRecommendationProperties",
            "description": "Properties for modern reservation recommendation",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "modern"
      },
      "ModernReservationRecommendationProperties": {
        "description": "The properties of the reservation recommendation.",
        "properties": {
          "costWithNoReservedInstances": {
            "$ref": "#/components/schemas/amount",
            "description": "The total amount of cost without reserved instances.",
            "readOnly": true
          },
          "firstUsageDate": {
            "description": "The usage date for looking back.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityGroup": {
            "description": "The instance Flexibility Group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityRatio": {
            "description": "The instance Flexibility Ratio.",
            "readOnly": true,
            "type": "number"
          },
          "location": {
            "description": "Resource Location.",
            "readOnly": true,
            "type": "string"
          },
          "lookBackPeriod": {
            "description": "The number of days of usage to look back for recommendation.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "meterId": {
            "description": "The meter id (GUID)",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "netSavings": {
            "$ref": "#/components/schemas/amount",
            "description": "Total estimated savings with reserved instances.",
            "readOnly": true
          },
          "normalizedSize": {
            "description": "The normalized Size.",
            "readOnly": true,
            "type": "string"
          },
          "recommendedQuantity": {
            "description": "Recommended quality for reserved instances.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "recommendedQuantityNormalized": {
            "description": "The recommended Quantity Normalized.",
            "readOnly": true,
            "type": "number"
          },
          "resourceType": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          },
          "scope": {
            "description": "Shared (corresponds to integer 2) or single (corresponds to integer 1) recommendation.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "skuName": {
            "description": "This is the ARM Sku name.",
            "readOnly": true,
            "type": "string"
          },
          "skuProperties": {
            "description": "List of sku properties",
            "items": {
              "$ref": "#/components/schemas/SkuProperty"
            },
            "readOnly": true,
            "type": "array"
          },
          "subscriptionId": {
            "description": "Subscription ID",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "RI recommendations in one or three year terms.",
            "readOnly": true,
            "type": "string"
          },
          "totalCostWithReservedInstances": {
            "$ref": "#/components/schemas/amount",
            "description": "The total amount of cost with reserved instances.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ModernReservationTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReservationTransactionResource"
          }
        ],
        "description": "Modern Reservation transaction resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ModernReservationTransactionProperties",
            "title": "Reservation Transaction properties",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ModernReservationTransactionProperties": {
        "description": "The properties of a modern reservation transaction.",
        "properties": {
          "amount": {
            "description": "The charge of the transaction.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "armSkuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "billingFrequency": {
            "description": "The billing frequency, which can be either one-time or recurring.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileId": {
            "description": "Billing profile Id.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileName": {
            "description": "Billing profile name.",
            "readOnly": true,
            "type": "string"
          },
          "currency": {
            "description": "The ISO currency in which the transaction is charged, for example, USD.",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "eventDate": {
            "description": "The date of the transaction",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "eventType": {
            "description": "The type of the transaction (Purchase, Cancel, etc.)",
            "readOnly": true,
            "type": "string"
          },
          "invoice": {
            "description": "Invoice Number",
            "readOnly": true,
            "type": "string"
          },
          "invoiceId": {
            "description": "Invoice Id as on the invoice where the specific transaction appears.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSectionId": {
            "description": "Invoice Section Id",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSectionName": {
            "description": "Invoice Section Name.",
            "readOnly": true,
            "type": "string"
          },
          "purchasingSubscriptionGuid": {
            "description": "The subscription guid that makes the transaction.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "purchasingSubscriptionName": {
            "description": "The subscription name that makes the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "description": "The quantity of the transaction.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "region": {
            "description": "The region of the transaction.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderName": {
            "description": "The name of the reservation order.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "This is the term of the transaction.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModernReservationTransactionsListResult": {
        "description": "Result of listing reservation recommendations.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation recommendations.",
            "items": {
              "$ref": "#/components/schemas/ModernReservationTransaction"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ModernUsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UsageDetail"
          }
        ],
        "description": "Modern usage detail.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ModernUsageDetailProperties",
            "description": "Properties for modern usage details",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object",
        "x-ms-discriminator-value": "modern"
      },
      "ModernUsageDetailProperties": {
        "description": "The properties of the usage detail.",
        "properties": {
          "additionalInfo": {
            "description": "Additional details of this usage item. Use this field to get usage line item specific details such as the actual VM Size (ServiceType) or the ratio in which the reservation discount is applied.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountId": {
            "description": "Billing Account identifier.",
            "readOnly": true,
            "type": "string"
          },
          "billingAccountName": {
            "description": "Name of the Billing Account.",
            "readOnly": true,
            "type": "string"
          },
          "billingCurrencyCode": {
            "description": "The currency defining the billed cost.",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodEndDate": {
            "description": "Billing Period End Date as in the invoice.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingPeriodStartDate": {
            "description": "Billing Period Start Date as in the invoice.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileId": {
            "description": "Identifier for the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.",
            "readOnly": true,
            "type": "string"
          },
          "billingProfileName": {
            "description": "Name of the billing profile that groups costs across invoices in the a singular billing currency across across the customers who have onboarded the Microsoft customer agreement and the customers in CSP who have made entitlement purchases like SaaS, Marketplace, RI, etc.",
            "readOnly": true,
            "type": "string"
          },
          "chargeType": {
            "description": "Indicates a charge represents credits, usage, a Marketplace purchase, a reservation fee, or a refund.",
            "readOnly": true,
            "type": "string"
          },
          "consumedService": {
            "description": "Consumed service name. Name of the azure resource provider that emits the usage or was purchased. This value is not provided for marketplace usage.",
            "readOnly": true,
            "type": "string"
          },
          "costCenter": {
            "description": "The cost center of this department if it is a department and a cost center is provided.",
            "readOnly": true,
            "type": "string"
          },
          "costInBillingCurrency": {
            "description": "ExtendedCost or blended cost before tax in billed currency.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "costInPricingCurrency": {
            "description": "ExtendedCost or blended cost before tax in pricing currency to correlate with prices.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "costInUSD": {
            "description": "Estimated extendedCost or blended cost before tax in USD.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "customerName": {
            "description": "Name of the customer's AAD tenant.",
            "readOnly": true,
            "type": "string"
          },
          "customerTenantId": {
            "description": "Identifier of the customer's AAD tenant.",
            "readOnly": true,
            "type": "string"
          },
          "date": {
            "description": "Date for the usage record.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "exchangeRate": {
            "description": "Exchange rate used in conversion from pricing currency to billing currency.",
            "readOnly": true,
            "type": "string"
          },
          "exchangeRateDate": {
            "description": "Date on which exchange rate used in conversion from pricing currency to billing currency.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "exchangeRatePricingToBilling": {
            "description": "Exchange Rate from pricing currency to billing currency.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "frequency": {
            "description": "Indicates how frequently this charge will occur. OneTime for purchases which only happen once, Monthly for fees which recur every month, and UsageBased for charges based on how much a service is used.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "Instance Name.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceId": {
            "description": "Invoice ID as on the invoice where the specific transaction appears.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSectionId": {
            "description": "Identifier of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.",
            "readOnly": true,
            "type": "string"
          },
          "invoiceSectionName": {
            "description": "Name of the project that is being charged in the invoice. Not applicable for Microsoft Customer Agreements onboarded by partners.",
            "readOnly": true,
            "type": "string"
          },
          "isAzureCreditEligible": {
            "description": "Determines if the cost is eligible to be paid for using Azure credits.",
            "readOnly": true,
            "type": "boolean"
          },
          "marketPrice": {
            "description": "Market Price that's charged for the usage.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "meterCategory": {
            "description": "Identifies the top-level service for the usage.",
            "readOnly": true,
            "type": "string"
          },
          "meterId": {
            "description": "The meter id (GUID). Not available for marketplace. For reserved instance this represents the primary meter for which the reservation was purchased. For the actual VM Size for which the reservation is purchased see productOrderName.",
            "readOnly": true,
            "type": "string"
          },
          "meterName": {
            "description": "Identifies the name of the meter against which consumption is measured.",
            "readOnly": true,
            "type": "string"
          },
          "meterRegion": {
            "description": "Identifies the location of the datacenter for certain services that are priced based on datacenter location.",
            "readOnly": true,
            "type": "string"
          },
          "meterSubCategory": {
            "description": "Defines the type or sub-category of Azure service that can affect the rate.",
            "readOnly": true,
            "type": "string"
          },
          "partnerEarnedCreditApplied": {
            "description": "Flag to indicate if partner earned credit has been applied or not.",
            "readOnly": true,
            "type": "string"
          },
          "partnerEarnedCreditRate": {
            "description": "Rate of discount applied if there is a partner earned credit (PEC) based on partner admin link access.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "partnerName": {
            "description": "Name of the partner' AAD tenant.",
            "readOnly": true,
            "type": "string"
          },
          "partnerTenantId": {
            "description": "Identifier for the partner's AAD tenant.",
            "readOnly": true,
            "type": "string"
          },
          "payGPrice": {
            "description": "Retail price for the resource.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "paygCostInBillingCurrency": {
            "description": "The amount of PayG cost before tax in billing currency.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "paygCostInUSD": {
            "description": "The amount of PayG cost before tax in US Dollar currency.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "previousInvoiceId": {
            "description": "Reference to an original invoice there is a refund (negative cost). This is populated only when there is a refund.",
            "readOnly": true,
            "type": "string"
          },
          "pricingCurrencyCode": {
            "description": "Pricing Billing Currency.",
            "readOnly": true,
            "type": "string"
          },
          "product": {
            "description": "Name of the product that has accrued charges by consumption or purchase as listed in the invoice. Not available for Marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "productIdentifier": {
            "description": "Identifier for the product that has accrued charges by consumption or purchase . This is the concatenated key of productId and SkuId in partner center.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderId": {
            "description": "The identifier for the asset or Azure plan name that the subscription belongs to. For example: Azure Plan. For reservations this is the Reservation Order ID.",
            "readOnly": true,
            "type": "string"
          },
          "productOrderName": {
            "description": "Product Order Name. For reservations this is the SKU that was purchased.",
            "readOnly": true,
            "type": "string"
          },
          "publisherId": {
            "description": "Publisher Id.",
            "readOnly": true,
            "type": "string"
          },
          "publisherName": {
            "description": "Name of the publisher of the service including Microsoft or Third Party publishers.",
            "readOnly": true,
            "type": "string"
          },
          "publisherType": {
            "description": "Type of publisher that identifies if the publisher is first party, third party reseller or third party agency.",
            "readOnly": true,
            "type": "string"
          },
          "quantity": {
            "description": "Measure the quantity purchased or consumed.The amount of the meter used during the billing period.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "resellerMpnId": {
            "description": "MPNId for the reseller associated with the subscription.",
            "readOnly": true,
            "type": "string"
          },
          "resellerName": {
            "description": "Reseller Name.",
            "readOnly": true,
            "type": "string"
          },
          "reservationId": {
            "description": "ARM resource id of the reservation. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservationName": {
            "description": "User provided display name of the reservation. Last known name for a particular day is populated in the daily data. Only applies to records relevant to reservations.",
            "readOnly": true,
            "type": "string"
          },
          "resourceGroup": {
            "description": "Name of the Azure resource group used for cohesive lifecycle management of resources.",
            "readOnly": true,
            "type": "string"
          },
          "resourceLocation": {
            "description": "Name of the resource location.",
            "readOnly": true,
            "type": "string"
          },
          "resourceLocationNormalized": {
            "description": "Resource Location Normalized.",
            "readOnly": true,
            "type": "string"
          },
          "serviceFamily": {
            "description": "List the service family for the product purchased or charged (Example: Storage ; Compute).",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo1": {
            "description": "Service Info 1.",
            "readOnly": true,
            "type": "string"
          },
          "serviceInfo2": {
            "description": "Service Info 2.",
            "readOnly": true,
            "type": "string"
          },
          "servicePeriodEndDate": {
            "description": "End date for the period when the service usage was rated for charges. The prices for Azure services are determined based on the rating period.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "servicePeriodStartDate": {
            "description": "Start date for the rating period when the service usage was rated for charges. The prices for Azure services are determined for the rating period.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionGuid": {
            "description": "Unique Microsoft generated identifier for the Azure Subscription.",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionName": {
            "description": "Name of the Azure Subscription.",
            "readOnly": true,
            "type": "string"
          },
          "term": {
            "description": "Term (in months). Displays the term for the validity of the offer. For example. In case of reserved instances it displays 12 months for yearly term of reserved instance. For one time purchases or recurring purchases, the terms displays 1 month; This is not applicable for Azure consumption.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "Identifies the Unit that the service is charged in. For example, GB, hours, 10,000 s.",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price is the price applicable to you. (your EA or other contract price).",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "Notification": {
        "description": "The notification associated with a budget.",
        "properties": {
          "contactEmails": {
            "description": "Email addresses to send the budget notification to when the threshold is exceeded. Must have at least one contact email or contact group specified at the Subscription or Resource Group scopes. All other scopes must have at least one contact email specified.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "contactGroups": {
            "description": "Action groups to send the budget notification to when the threshold is exceeded. Must be provided as a fully qualified Azure resource id. Only supported at Subscription or Resource Group scopes.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "contactRoles": {
            "description": "Contact roles to send the budget notification to when the threshold is exceeded.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enabled": {
            "description": "The notification is enabled or not.",
            "type": "boolean"
          },
          "locale": {
            "description": "Language in which the recipient will receive the notification",
            "enum": [
              "en-us",
              "ja-jp",
              "zh-cn",
              "de-de",
              "es-es",
              "fr-fr",
              "it-it",
              "ko-kr",
              "pt-br",
              "ru-ru",
              "zh-tw",
              "cs-cz",
              "pl-pl",
              "tr-tr",
              "da-dk",
              "en-gb",
              "hu-hu",
              "nb-no",
              "nl-nl",
              "pt-pt",
              "sv-se"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CultureCode"
            }
          },
          "operator": {
            "description": "The comparison operator.",
            "enum": [
              "EqualTo",
              "GreaterThan",
              "GreaterThanOrEqualTo"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "OperatorType"
            }
          },
          "threshold": {
            "description": "Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000.",
            "format": "decimal",
            "type": "number"
          },
          "thresholdType": {
            "default": "Actual",
            "description": "The type of threshold",
            "enum": [
              "Actual"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ThresholdType"
            }
          }
        },
        "required": [
          "enabled",
          "operator",
          "threshold",
          "contactEmails"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "A Consumption REST API operation.",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "description": {
                "description": "Description of the operation.",
                "readOnly": true,
                "type": "string"
              },
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "readOnly": true,
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Consumption.",
                "readOnly": true,
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: UsageDetail, etc.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "description": "Operation Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of listing consumption operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "List of consumption operations supported by the Microsoft.Consumption resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetModel": {
        "description": "price sheet result. It contains the pricesheet associated with billing period",
        "properties": {
          "download": {
            "$ref": "#/components/schemas/MeterDetails",
            "description": "Pricesheet download details.",
            "readOnly": true
          },
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "pricesheets": {
            "description": "Price sheet",
            "items": {
              "$ref": "#/components/schemas/PriceSheetProperties"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PriceSheetProperties": {
        "description": "The properties of the price sheet.",
        "properties": {
          "billingPeriodId": {
            "description": "The id of the billing period resource that the usage belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "currencyCode": {
            "description": "Currency Code",
            "readOnly": true,
            "type": "string"
          },
          "includedQuantity": {
            "description": "Included quality for an offer",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "meterDetails": {
            "$ref": "#/components/schemas/MeterDetails",
            "description": "The details about the meter. By default this is not populated, unless it's specified in $expand.",
            "readOnly": true
          },
          "meterId": {
            "description": "The meter id (GUID)",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "offerId": {
            "description": "Offer Id",
            "readOnly": true,
            "type": "string"
          },
          "partNumber": {
            "description": "Part Number",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "Unit of measure",
            "readOnly": true,
            "type": "string"
          },
          "unitPrice": {
            "description": "Unit Price",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "PriceSheetResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An pricesheet resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/PriceSheetModel",
            "title": "Price sheet properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProxyResource": {
        "description": "The Resource model definition.",
        "properties": {
          "eTag": {
            "description": "eTag of the resource. To handle concurrent update scenario, this field will be used to determine whether the user is updating the latest version or not.",
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Reseller": {
        "description": "Reseller details",
        "properties": {
          "resellerDescription": {
            "description": "Reseller Description.",
            "readOnly": true,
            "type": "string"
          },
          "resellerId": {
            "description": "Reseller id.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RevisedResource"
          }
        ],
        "description": "reservation detail resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationDetailProperties",
            "title": "Reservation Detail properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationDetailProperties": {
        "description": "The properties of the reservation detail.",
        "properties": {
          "instanceFlexibilityGroup": {
            "description": "The instance Flexibility Group.",
            "readOnly": true,
            "type": "string"
          },
          "instanceFlexibilityRatio": {
            "description": "The instance Flexibility Ratio.",
            "readOnly": true,
            "type": "string"
          },
          "instanceId": {
            "description": "This identifier is the name of the resource or the fully qualified Resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "description": "The reservation kind.",
            "readOnly": true,
            "type": "string"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved for the day. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "totalReservedQuantity": {
            "description": "This is the total count of instances that are reserved for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageDate": {
            "description": "The date on which consumption occurred.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "This is the total hours used by the instance.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationDetailsListResult": {
        "description": "Result of listing reservation details.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation details.",
            "items": {
              "$ref": "#/components/schemas/ReservationDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationRecommendation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RevisedResource"
          },
          {
            "$ref": "#/components/schemas/ResourceAttributes"
          }
        ],
        "description": "A reservation recommendation resource.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Specifies the kind of reservation recommendation.",
            "enum": [
              "legacy",
              "modern"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ReservationRecommendationKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "ReservationRecommendationDetailsCalculatedSavingsProperties": {
        "description": "Details of estimated savings.",
        "properties": {
          "onDemandCost": {
            "description": "The cost without reservation.",
            "readOnly": true,
            "type": "number"
          },
          "overageCost": {
            "description": "The difference between total reservation cost and reservation cost.",
            "readOnly": true,
            "type": "number"
          },
          "quantity": {
            "description": "The quantity for calculated savings.",
            "readOnly": true,
            "type": "number"
          },
          "reservationCost": {
            "description": "The exact cost of the estimated usage using reservation.",
            "readOnly": true,
            "type": "number"
          },
          "reservedUnitCount": {
            "description": "The number of reserved units used to calculate savings. Always 1 for virtual machines.",
            "type": "number"
          },
          "savings": {
            "description": "The amount saved by purchasing the recommended quantity of reservation.",
            "readOnly": true,
            "type": "number"
          },
          "totalReservationCost": {
            "description": "The cost of the suggested quantity.",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationDetailsModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Reservation recommendation details.",
        "properties": {
          "location": {
            "description": "Resource Location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ReservationRecommendationDetailsProperties",
            "title": "Reservation Recommendation details properties",
            "x-ms-client-flatten": true
          },
          "sku": {
            "description": "Resource sku",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationDetailsProperties": {
        "description": "The properties of the reservation recommendation.",
        "properties": {
          "currency": {
            "description": "An ISO 4217 currency code identifier for the costs and savings ",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/ReservationRecommendationDetailsResourceProperties",
            "description": "Resource specific properties.",
            "readOnly": true
          },
          "resourceGroup": {
            "description": "Resource Group.",
            "readOnly": true,
            "type": "string"
          },
          "savings": {
            "$ref": "#/components/schemas/ReservationRecommendationDetailsSavingsProperties",
            "description": "Savings information for the recommendation.",
            "readOnly": true
          },
          "scope": {
            "description": "Scope of the reservation, ex: Single or Shared.",
            "readOnly": true,
            "type": "string"
          },
          "usage": {
            "$ref": "#/components/schemas/ReservationRecommendationDetailsUsageProperties",
            "description": "Historical usage details used to calculate the estimated savings.",
            "readOnly": true
          }
        },
        "type": "object"
      },
      "ReservationRecommendationDetailsResourceProperties": {
        "description": "Details of the resource.",
        "properties": {
          "appliedScopes": {
            "description": "List of subscriptions for which the reservation is applied.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "onDemandRate": {
            "description": "On demand rate of the resource.",
            "readOnly": true,
            "type": "number"
          },
          "product": {
            "description": "Azure product ex: Standard_E8s_v3 etc.",
            "readOnly": true,
            "type": "string"
          },
          "region": {
            "description": "Azure resource region ex:EastUS, WestUS etc.",
            "readOnly": true,
            "type": "string"
          },
          "reservationRate": {
            "description": "Reservation rate of the resource.",
            "readOnly": true,
            "type": "number"
          },
          "resourceType": {
            "description": "The azure resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationDetailsSavingsProperties": {
        "description": "Details of the estimated savings.",
        "properties": {
          "calculatedSavings": {
            "description": "List of calculated savings.",
            "items": {
              "$ref": "#/components/schemas/ReservationRecommendationDetailsCalculatedSavingsProperties"
            },
            "type": "array"
          },
          "lookBackPeriod": {
            "description": "Number of days of usage to look back used for computing the recommendation.",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "recommendedQuantity": {
            "description": "Number of recommended units of the resource.",
            "readOnly": true,
            "type": "number"
          },
          "reservationOrderTerm": {
            "description": "Term period of the reservation, ex: P1Y or P3Y.",
            "readOnly": true,
            "type": "string"
          },
          "savingsType": {
            "description": "Type of savings, ex: instance.",
            "readOnly": true,
            "type": "string"
          },
          "unitOfMeasure": {
            "description": "Measurement unit ex: hour etc.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationDetailsUsageProperties": {
        "description": "Details about historical usage data that has been used for computing the recommendation.",
        "properties": {
          "firstConsumptionDate": {
            "description": "The first usage date used for looking back for computing the recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "lastConsumptionDate": {
            "description": "The last usage date used for looking back for computing the recommendation.",
            "readOnly": true,
            "type": "string"
          },
          "lookBackUnitType": {
            "description": "What the usage data values represent ex: virtual machine instance.",
            "readOnly": true,
            "type": "string"
          },
          "usageData": {
            "description": "The breakdown of historical resource usage.  The values are in the order of usage between the firstConsumptionDate and the lastConsumptionDate.",
            "items": {
              "type": "number"
            },
            "readOnly": true,
            "type": "array"
          },
          "usageGrain": {
            "description": "The grain of the values represented in the usage data ex: hourly.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReservationRecommendationsListResult": {
        "description": "Result of listing reservation recommendations.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "previousLink": {
            "description": "The link (url) to the previous page of results.",
            "readOnly": true,
            "type": "string"
          },
          "totalCost": {
            "description": "The total amount of cost.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation recommendations.",
            "items": {
              "$ref": "#/components/schemas/ReservationRecommendation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationSummariesListResult": {
        "description": "Result of listing reservation summaries.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation summaries.",
            "items": {
              "$ref": "#/components/schemas/ReservationSummary"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ReservationSummary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RevisedResource"
          }
        ],
        "description": "reservation summary resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ReservationSummaryProperties",
            "title": "Reservation Summary properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationSummaryProperties": {
        "description": "The properties of the reservation summary.",
        "properties": {
          "avgUtilizationPercentage": {
            "description": "This is average utilization for the entire time range. (day or month depending on the grain)",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "kind": {
            "description": "The reservation kind.",
            "readOnly": true,
            "type": "string"
          },
          "maxUtilizationPercentage": {
            "description": "This is the maximum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 100%, this field will return 100% for that day.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "minUtilizationPercentage": {
            "description": "This is the minimum hourly utilization in the usage time (day or month). E.g. if usage record corresponds to 12/10/2017 and on that for hour 4 and 5, utilization was 10%, this field will return 10% for that day",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "purchasedQuantity": {
            "description": "This is the purchased quantity for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "remainingQuantity": {
            "description": "This is the remaining quantity for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "reservationId": {
            "description": "The reservation ID is the identifier of a reservation within a reservation order. Each reservation is the grouping for applying the benefit scope and also specifies the number of instances to which the reservation benefit can be applied to.",
            "readOnly": true,
            "type": "string"
          },
          "reservationOrderId": {
            "description": "The reservation order ID is the identifier for a reservation purchase. Each reservation order ID represents a single purchase transaction. A reservation order contains reservations. The reservation order specifies the VM size and region for the reservations.",
            "readOnly": true,
            "type": "string"
          },
          "reservedHours": {
            "description": "This is the total hours reserved. E.g. if reservation for 1 instance was made on 1 PM, this will be 11 hours for that day and 24 hours from subsequent days",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "skuName": {
            "description": "This is the ARM Sku name. It can be used to join with the serviceType field in additional info in usage records.",
            "readOnly": true,
            "type": "string"
          },
          "totalReservedQuantity": {
            "description": "This is the total count of instances that are reserved for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usageDate": {
            "description": "Data corresponding to the utilization record. If the grain of data is monthly, it will be first day of month.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "usedHours": {
            "description": "Total used hours by the reservation",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "usedQuantity": {
            "description": "This is the used quantity for the reservationId.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          },
          "utilizedPercentage": {
            "description": "This is the utilized percentage for the reservation Id.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      },
      "ReservationTransaction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReservationTransactionResource"
          }
        ],
        "description": "Reservation transaction resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LegacyReservationTransactionProperties",
            "title": "Reservation Transaction properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ReservationTransactionResource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "description": "Resource tags.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ReservationTransactionsListResult": {
        "description": "Result of listing reservation recommendations.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of reservation recommendations.",
            "items": {
              "$ref": "#/components/schemas/ReservationTransaction"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "etag": {
            "description": "Resource etag.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceAttributes": {
        "description": "The Resource model definition.",
        "properties": {
          "location": {
            "description": "Resource location",
            "readOnly": true,
            "type": "string"
          },
          "sku": {
            "description": "Resource sku",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RevisedResource": {
        "description": "The Resource model definition.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "readOnly": true,
            "type": "object"
          },
          "eTag": {
            "description": "Resource eTag.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Resource Id.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Resource name.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "SkuProperty": {
        "description": "The Sku property",
        "properties": {
          "name": {
            "description": "The name of sku property.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The value of sku property.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tag": {
        "description": "The tag resource.",
        "properties": {
          "key": {
            "description": "Tag key.",
            "type": "string"
          },
          "value": {
            "description": "Tag values.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TagProperties": {
        "description": "The properties of the tag.",
        "properties": {
          "tags": {
            "description": "A list of Tag.",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "type": "array"
          },
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "previousLink": {
            "description": "The link (url) to the previous page of results.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagsResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProxyResource"
          }
        ],
        "description": "A resource listing all tags.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TagProperties",
            "title": "Tag properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "UsageDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An usage detail resource.",
        "discriminator": {
          "propertyName": "kind"
        },
        "properties": {
          "kind": {
            "description": "Specifies the kind of usage details.",
            "enum": [
              "legacy",
              "modern"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "UsageDetailsKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "UsageDetailsListResult": {
        "description": "Result of listing usage details. It contains a list of available usage details in reverse chronological order by billing period.",
        "properties": {
          "nextLink": {
            "description": "The link (url) to the next page of results.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "The list of usage details.",
            "items": {
              "$ref": "#/components/schemas/UsageDetail"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "amount": {
        "description": "The amount plus currency .",
        "properties": {
          "currency": {
            "description": "Amount currency.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Amount.",
            "format": "decimal",
            "readOnly": true,
            "type": "number"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}