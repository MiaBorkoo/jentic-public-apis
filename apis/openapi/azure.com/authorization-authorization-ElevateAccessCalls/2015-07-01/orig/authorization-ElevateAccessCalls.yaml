openapi: 3.0.0
info:
  description: >-
    Role based access control provides you a way to apply granular level policy
    administration down to individual resources or resource groups. These
    operations enable you to manage role definitions and role assignments. A
    role definition describes the set of actions that can be performed on
    resources. A role assignment grants access to Azure Active Directory users.
  title: AuthorizationManagementClient
  version: '2015-07-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.Authorization/elevateAccess:
    post:
      parameters:
        - $ref: >-
            ../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          description: OK - Returns an HttpResponseMessage with HttpStatusCode 200.
        default:
          content:
            application/json:
              schema:
                $ref: >-
                  ../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - ElevateAccess
      description: Elevates access for a Global Administrator.
      operationId: GlobalAdministrator_ElevateAccess
      x-ms-azure-rbac-permissions-required:
        actions: Microsoft.Authorization/elevateAccess/action
        dataActions: ''
        moreInfoLink: >-
          [Elevate access to manage all Azure subscriptions and management
          groups](https://docs.microsoft.com/azure/role-based-access-control/elevate-access-global-admin)
        rolesWithThesePermissions:
          - Owner
      x-ms-examples:
        Elevate access global administrator:
          $ref: ./examples/ElevateAccess.json
components:
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

