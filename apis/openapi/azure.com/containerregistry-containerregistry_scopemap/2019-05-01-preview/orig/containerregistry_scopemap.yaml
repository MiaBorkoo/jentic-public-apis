openapi: 3.0.0
info:
  title: ContainerRegistryManagementClient
  version: 2019-05-01-preview
servers:
  - url: 'https://management.azure.com/'
paths:
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/generateCredentials':
    post:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateCredentialsResult'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '202':
          description: >-
            The request was successful; the operation will complete
            asynchronously.
      tags:
        - Registries
      description: Generate keys for a token of a specified container registry.
      operationId: Registries_GenerateCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCredentialsParameters'
        description: The parameters for generating credentials.
        required: true
      x-ms-examples:
        RegistryGenerateCredentials:
          $ref: ./examples/RegistryGenerateCredentials.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMapListResult'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
      tags:
        - ScopeMaps
      description: Lists all the scope maps for the specified container registry.
      operationId: ScopeMaps_List
      x-ms-examples:
        ScopeMapList:
          $ref: ./examples/ScopeMapList.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/scopeMaps/{scopeMapName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '202':
          description: >-
            The request was successful; the operation will complete
            asynchronously.
        '204':
          description: The scopemap does not exist in the subscription.
      tags:
        - ScopeMaps
      description: Deletes a scope map from a container registry.
      operationId: ScopeMaps_Delete
      x-ms-examples:
        ScopeMapDelete:
          $ref: ./examples/ScopeMapDelete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
      tags:
        - ScopeMaps
      description: Gets the properties of the specified scope map.
      operationId: ScopeMaps_Get
      x-ms-examples:
        ScopeMapGet:
          $ref: ./examples/ScopeMapGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: >-
            The request was successful; the operation will complete
            asynchronously.
      tags:
        - ScopeMaps
      description: Updates a scope map with the specified parameters.
      operationId: ScopeMaps_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMapUpdateParameters'
        description: The parameters for updating a scope map.
        required: true
      x-ms-examples:
        ScopeMapUpdate:
          $ref: ./examples/ScopeMapUpdate.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/ScopeMapNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScopeMap'
          description: >-
            The request was successful; the operation will complete
            asynchronously.
      tags:
        - ScopeMaps
      description: >-
        Creates a scope map for a container registry with the specified
        parameters.
      operationId: ScopeMaps_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScopeMap'
        description: The parameters for creating a scope map.
        required: true
      x-ms-examples:
        ScopeMapCreate:
          $ref: ./examples/ScopeMapCreate.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenListResult'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
      tags:
        - Tokens
      description: Lists all the tokens for the specified container registry.
      operationId: Tokens_List
      x-ms-examples:
        TokenList:
          $ref: ./examples/TokenList.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/tokens/{tokenName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '202':
          description: >-
            The request was successful; the operation will complete
            asynchronously.
        '204':
          description: The token does not exist in the subscription.
      tags:
        - Tokens
      description: Deletes a token from a container registry.
      operationId: Tokens_Delete
      x-ms-examples:
        TokenDelete:
          $ref: ./examples/TokenDelete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
      tags:
        - Tokens
      description: Gets the properties of the specified token.
      operationId: Tokens_Get
      x-ms-examples:
        TokenGet:
          $ref: ./examples/TokenGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: >-
            The request was successful; the operation will complete
            asynchronously.
      tags:
        - Tokens
      description: Updates a token with the specified parameters.
      operationId: Tokens_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenUpdateParameters'
        description: The parameters for updating a token.
        required: true
      x-ms-examples:
        TokenUpdate:
          $ref: ./examples/TokenUpdate.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupParameter'
        - $ref: '#/components/parameters/RegistryNameParameter'
        - $ref: '#/components/parameters/TokenNameParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: >-
            The request was successful; the request was well-formed and received
            properly.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: >-
            The request was successful; the operation will complete
            asynchronously.
      tags:
        - Tokens
      description: Creates a token for a container registry with the specified parameters.
      operationId: Tokens_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        description: The parameters for creating a token.
        required: true
      x-ms-examples:
        TokenCreate:
          $ref: ./examples/TokenCreate.json
      x-ms-long-running-operation: true
components:
  parameters:
    ApiVersionParameter:
      description: The client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    RegistryNameParameter:
      description: The name of the container registry.
      in: path
      name: registryName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: '^[a-zA-Z0-9]*$'
        type: string
      x-ms-parameter-location: method
    ResourceGroupParameter:
      description: The name of the resource group to which the container registry belongs.
      in: path
      name: resourceGroupName
      required: true
      schema:
        minLength: 1
        type: string
      x-ms-parameter-location: method
    ScopeMapNameParameter:
      description: The name of the scope map.
      in: path
      name: scopeMapName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: '^[a-zA-Z0-9-_]*$'
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: The Microsoft Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    TokenNameParameter:
      description: The name of the token.
      in: path
      name: tokenName
      required: true
      schema:
        maxLength: 50
        minLength: 5
        pattern: '^[a-zA-Z0-9-]*$'
        type: string
      x-ms-parameter-location: method
  schemas:
    ActiveDirectoryObject:
      description: >-
        The Active Directory Object that will be used for authenticating the
        token of a container registry.
      properties:
        objectId:
          description: >-
            The user/group/application object ID for Active Directory Object
            that will be used for authenticating the token of a container
            registry.
          type: string
        tenantId:
          description: >-
            The tenant ID of user/group/application object Active Directory
            Object that will be used for authenticating the token of a container
            registry.
          type: string
      type: object
    GenerateCredentialsParameters:
      description: >-
        The parameters used to generate credentials for a specified token or
        user of a container registry.
      properties:
        expiry:
          description: >-
            The expiry date of the generated credentials after which the
            credentials become invalid.
          format: date-time
          type: string
        name:
          description: >-
            Specifies name of the password which should be regenerated if any --
            password1 or password2.
          enum:
            - password1
            - password2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenPasswordName
        tokenId:
          description: >-
            The resource ID of the token for which credentials have to be
            generated.
          type: string
      type: object
    GenerateCredentialsResult:
      description: The response from the GenerateCredentials operation.
      properties:
        passwords:
          description: The list of passwords for a container registry.
          items:
            $ref: '#/components/schemas/TokenPassword'
          type: array
        username:
          description: The username for a container registry.
          type: string
      type: object
    ProxyResource:
      description: >-
        The resource model definition for a ARM proxy resource. It will have
        everything other than required location and tags.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        systemData:
          $ref: '#/components/schemas/SystemData'
          description: >-
            Metadata pertaining to creation and last modification of the
            resource.
          readOnly: true
          type: object
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ScopeMap:
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: An object that represents a scope map for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapProperties'
          description: The properties of the scope map.
          x-ms-client-flatten: true
      type: object
    ScopeMapListResult:
      description: The result of a request to list scope maps for a container registry.
      properties:
        nextLink:
          description: The URI that can be used to request the next list of scope maps.
          type: string
        value:
          description: >-
            The list of scope maps. Since this list may be incomplete, the
            nextLink field should be used to request the next list of scope
            maps.
          items:
            $ref: '#/components/schemas/ScopeMap'
          type: array
      type: object
    ScopeMapProperties:
      description: The properties of a scope map.
      properties:
        actions:
          description: "The list of scoped permissions for registry artifacts.\r\nE.g. repositories/repository-name/content/read,\r\nrepositories/repository-name/metadata/write"
          items:
            type: string
          type: array
        creationDate:
          description: The creation date of scope map.
          format: date-time
          readOnly: true
          type: string
        description:
          description: The user friendly description of the scope map.
          type: string
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        type:
          description: The type of the scope map. E.g. BuildIn scope map.
          readOnly: true
          type: string
      required:
        - actions
      type: object
    ScopeMapPropertiesUpdateParameters:
      description: The update parameters for scope map properties.
      properties:
        actions:
          description: "The list of scope permissions for registry artifacts.\r\nE.g. repositories/repository-name/pull, \r\nrepositories/repository-name/delete"
          items:
            type: string
          type: array
        description:
          description: The user friendly description of the scope map.
          type: string
      type: object
    ScopeMapUpdateParameters:
      description: The properties for updating the scope map.
      properties:
        properties:
          $ref: '#/components/schemas/ScopeMapPropertiesUpdateParameters'
          description: The update parameters for scope map properties.
          x-ms-client-flatten: true
      type: object
    SystemData:
      description: Metadata pertaining to creation and last modification of the resource.
      properties:
        createdAt:
          description: The timestamp of resource creation (UTC).
          format: date-time
          type: string
        createdBy:
          description: The identity that created the resource.
          type: string
        createdByType:
          description: The type of identity that created the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            modelAsString: true
            name: createdByType
        lastModifiedAt:
          description: The timestamp of resource modification (UTC).
          format: date-time
          type: string
        lastModifiedBy:
          description: The identity that last modified the resource.
          type: string
        lastModifiedByType:
          description: The type of identity that last modified the resource.
          enum:
            - User
            - Application
            - ManagedIdentity
            - Key
          type: string
          x-ms-enum:
            modelAsString: true
            name: lastModifiedByType
      readOnly: true
      type: object
    Token:
      allOf:
        - $ref: '#/components/schemas/ProxyResource'
      description: An object that represents a token for a container registry.
      properties:
        properties:
          $ref: '#/components/schemas/TokenProperties'
          description: The properties of the token.
          x-ms-client-flatten: true
      type: object
    TokenCertificate:
      description: The properties of a certificate used for authenticating a token.
      properties:
        encodedPemCertificate:
          description: >-
            Base 64 encoded string of the public certificate1 in PEM format that
            will be used for authenticating the token.
          type: string
        expiry:
          description: The expiry datetime of the certificate.
          format: date-time
          type: string
        name:
          enum:
            - certificate1
            - certificate2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenCertificateName
        thumbprint:
          description: The thumbprint of the certificate.
          type: string
      type: object
    TokenCredentialsProperties:
      description: >-
        The properties of the credentials that can be used for authenticating
        the token.
      properties:
        activeDirectoryObject:
          $ref: '#/components/schemas/ActiveDirectoryObject'
        certificates:
          items:
            $ref: '#/components/schemas/TokenCertificate'
          type: array
        passwords:
          items:
            $ref: '#/components/schemas/TokenPassword'
          type: array
      type: object
    TokenListResult:
      description: The result of a request to list tokens for a container registry.
      properties:
        nextLink:
          description: The URI that can be used to request the next list of tokens.
          type: string
        value:
          description: >-
            The list of tokens. Since this list may be incomplete, the nextLink
            field should be used to request the next list of tokens.
          items:
            $ref: '#/components/schemas/Token'
          type: array
      type: object
    TokenPassword:
      description: >-
        The password that will be used for authenticating the token of a
        container registry.
      properties:
        creationTime:
          description: The creation datetime of the password.
          format: date-time
          type: string
        expiry:
          description: The expiry datetime of the password.
          format: date-time
          type: string
        name:
          description: The password name "password1" or "password2"
          enum:
            - password1
            - password2
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenPasswordName
        value:
          description: The password value.
          readOnly: true
          type: string
      type: object
    TokenProperties:
      description: The properties of a token.
      properties:
        creationDate:
          description: The creation date of scope map.
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
          description: The credentials that can be used for authenticating the token.
        provisioningState:
          description: Provisioning state of the resource.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        scopeMapId:
          description: >-
            The resource ID of the scope map to which the token will be
            associated with.
          type: string
        status:
          description: The status of the token example enabled or disabled.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenStatus
      type: object
    TokenUpdateParameters:
      description: The parameters for updating a token.
      properties:
        properties:
          $ref: '#/components/schemas/TokenUpdateProperties'
          description: The properties of the token update parameters.
          x-ms-client-flatten: true
      type: object
    TokenUpdateProperties:
      description: The parameters for updating token properties.
      properties:
        credentials:
          $ref: '#/components/schemas/TokenCredentialsProperties'
          description: The credentials that can be used for authenticating the token.
        scopeMapId:
          description: >-
            The resource ID of the scope map to which the token will be
            associated with.
          type: string
        status:
          description: The status of the token example enabled or disabled.
          enum:
            - enabled
            - disabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenStatus
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

