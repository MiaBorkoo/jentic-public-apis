{
  "openapi": "3.0.0",
  "info": {
    "description": "Deployment Admin Client.",
    "title": "DeploymentAdminClient",
    "version": "2019-01-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azsadmin/resource-manager/deployment/Microsoft.Deployment.Admin/preview/2019-01-01/ProductPackage.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages": {
      "get": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPackagesList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductPackages"
        ],
        "description": "Returns an array of product packages.",
        "operationId": "ProductPackages_List",
        "x-ms-examples": {
          "Return product packages list.": {
            "$ref": "./examples/ProductPackage/List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Deployment.Admin/locations/global/productPackages/{packageId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductPackages"
        ],
        "description": "Deletes a product package.",
        "operationId": "ProductPackages_Delete",
        "x-ms-examples": {
          "Removes a product package.": {
            "$ref": "./examples/ProductPackage/Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPackage"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductPackages"
        ],
        "description": "Retrieves the specific product package details.",
        "operationId": "ProductPackages_Get",
        "x-ms-examples": {
          "Return the product package details.": {
            "$ref": "./examples/ProductPackage/Get.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "Deployment.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/PackageIdParameter"
          },
          {
            "$ref": "Deployment.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPackage"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "Deployment.json#/definitions/ExtendedErrorInfo"
                }
              }
            },
            "description": "Default Response."
          }
        },
        "tags": [
          "ProductPackages"
        ],
        "description": "Creates a new product package.",
        "operationId": "ProductPackages_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPackageParameters"
              }
            }
          },
          "description": "The parameters required to create a new product package.",
          "required": true
        },
        "x-ms-examples": {
          "Creates a new product package.": {
            "$ref": "./examples/ProductPackage/Create.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "schemas": {
      "FileContainerId": {
        "description": "File container resource identifier containing product manifest.",
        "type": "string"
      },
      "ProductLink": {
        "description": "Link to a product.",
        "properties": {
          "displayName": {
            "description": "Displayed name of product.",
            "type": "string"
          },
          "uri": {
            "description": "URI to product.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductLinks": {
        "description": "List of product links.",
        "items": {
          "$ref": "#/components/schemas/ProductLink"
        },
        "type": "array",
        "x-ms-identifiers": [
          "uri"
        ]
      },
      "ProductPackage": {
        "allOf": [
          {
            "$ref": "Deployment.json#/definitions/Resource"
          }
        ],
        "description": "Properties for a product package.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProductPackageProperties",
            "description": "Properties of a product package.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ProductPackageBody": {
        "description": "Body for creating a new product package.",
        "properties": {
          "fileContainerId": {
            "$ref": "#/components/schemas/FileContainerId",
            "description": "Specifies the file container."
          }
        },
        "type": "object"
      },
      "ProductPackageParameters": {
        "description": "Parameters for creating a new product package.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProductPackageBody",
            "description": "Specifies the product package"
          }
        },
        "type": "object"
      },
      "ProductPackageProperties": {
        "description": "Properties for Product package.",
        "properties": {
          "fileContainerId": {
            "$ref": "#/components/schemas/FileContainerId",
            "description": "File container resource identifier containing product manifest."
          },
          "isDeployable": {
            "description": "Value indicating whether the package is applicable for deployment.",
            "type": "boolean"
          },
          "isUpdatable": {
            "description": "Value indicating whether the package is applicable for update.",
            "type": "boolean"
          },
          "productDeploymentId": {
            "description": "The identifier of product deployment; null if this version is not installed.",
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the resource.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductPackagesList": {
        "description": "List of product packages.",
        "properties": {
          "nextLink": {
            "description": "Continuation Token.",
            "type": "string"
          },
          "value": {
            "description": "List of product packages.",
            "items": {
              "$ref": "#/components/schemas/ProductPackage"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductProperties": {
        "description": "Additional properties of the product",
        "properties": {
          "version": {
            "description": "The version of the product",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}