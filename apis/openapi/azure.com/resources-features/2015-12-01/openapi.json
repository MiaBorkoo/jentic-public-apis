{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Feature Exposure Control (AFEC) provides a mechanism for the resource providers to control feature exposure to users. Resource providers typically use this mechanism to provide public/private preview for new features prior to making them generally available. Users need to explicitly register for AFEC features to get access to such functionality.",
    "title": "FeatureClient",
    "version": "2015-12-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resources/resource-manager/Microsoft.Features/stable/2015-12-01/features.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.Features/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Microsoft.Features REST API operations.",
        "operationId": "ListOperations",
        "x-ms-examples": {
          "List Features operations": {
            "$ref": "./examples/listFeaturesOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Features/features": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureOperationsListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureOperationsListResult"
                }
              }
            },
            "description": "OK - Returns an array containing metadata for each feature. The metadata includes the name of the feature, the registration state, the resource ID, and resource type."
          }
        },
        "tags": [
          "Features"
        ],
        "description": "Gets all the preview features that are available through AFEC for the subscription.",
        "operationId": "Features_ListAll",
        "x-ms-examples": {
          "List subscription Features": {
            "$ref": "./examples/listSubscriptionFeatures.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Features/providers/{resourceProviderNamespace}/features": {
      "get": {
        "parameters": [
          {
            "description": "The namespace of the resource provider for getting features.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureOperationsListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureOperationsListResult"
                }
              }
            },
            "description": "OK - Returns an array containing metadata for each feature in the resource provider. The metadata includes the name of the feature, the registration state, the resource ID, and resource type."
          }
        },
        "tags": [
          "Features"
        ],
        "description": "Gets all the preview features in a provider namespace that are available through AFEC for the subscription.",
        "operationId": "Features_List",
        "x-ms-examples": {
          "List provider Features": {
            "$ref": "./examples/listProviderFeatures.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Features/providers/{resourceProviderNamespace}/features/{featureName}": {
      "get": {
        "parameters": [
          {
            "description": "The resource provider namespace for the feature.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the feature to get.",
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              }
            },
            "description": "OK - Returns metadata about the feature. The metadata includes the name of the feature, the registration state, the resource ID, and resource type."
          }
        },
        "tags": [
          "Features"
        ],
        "description": "Gets the preview feature with the specified name.",
        "operationId": "Features_Get",
        "x-ms-examples": {
          "Get feature": {
            "$ref": "./examples/getFeature.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Features/providers/{resourceProviderNamespace}/features/{featureName}/register": {
      "post": {
        "parameters": [
          {
            "description": "The namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the feature to register.",
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              }
            },
            "description": "OK - Returns metadata about the registered feature. The metadata includes the name of the feature, the registration state, the resource ID, and resource type."
          }
        },
        "tags": [
          "Features"
        ],
        "description": "Registers the preview feature for the subscription.",
        "operationId": "Features_Register",
        "x-ms-examples": {
          "Register feature": {
            "$ref": "./examples/registerFeature.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Features/providers/{resourceProviderNamespace}/features/{featureName}/unregister": {
      "post": {
        "parameters": [
          {
            "description": "The namespace of the resource provider.",
            "in": "path",
            "name": "resourceProviderNamespace",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the feature to unregister.",
            "in": "path",
            "name": "featureName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResult"
                }
              }
            },
            "description": "OK - Returns metadata about the unregistered feature. The metadata includes the name of the feature, the registration state, the resource ID, and resource type."
          }
        },
        "tags": [
          "Features"
        ],
        "description": "Unregisters the preview feature for the subscription.",
        "operationId": "Features_Unregister",
        "x-ms-examples": {
          "Register feature": {
            "$ref": "./examples/unregisterFeature.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The API version to use for this operation.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "SubscriptionIdParameter": {
        "description": "The ID of the target subscription.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "FeatureOperationsListResult": {
        "description": "List of previewed features.",
        "properties": {
          "nextLink": {
            "description": "The URL to use for getting the next set of results.",
            "type": "string"
          },
          "value": {
            "description": "The array of features.",
            "items": {
              "$ref": "#/components/schemas/FeatureResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FeatureProperties": {
        "description": "Information about feature.",
        "properties": {
          "state": {
            "description": "The registration state of the feature for the subscription.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeatureResult": {
        "description": "Previewed feature information.",
        "properties": {
          "id": {
            "description": "The resource ID of the feature.",
            "type": "string"
          },
          "name": {
            "description": "The name of the feature.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/FeatureProperties",
            "description": "Properties of the previewed feature."
          },
          "type": {
            "description": "The resource type of the feature.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "Microsoft.Features operation",
        "properties": {
          "display": {
            "description": "The object that represents the operation.",
            "properties": {
              "operation": {
                "description": "Operation type: Read, write, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft.Features",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Microsoft.Features operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "URL to get the next set of operation list results if there are any.",
            "type": "string"
          },
          "value": {
            "description": "List of Microsoft.Features operations.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}