openapi: 3.0.0
info:
  description: >-
    Use these REST APIs for performing operations on Property entity associated
    with your Azure API Management deployment. API Management policies are a
    powerful capability of the system that allow the publisher to change the
    behavior of the API through configuration. Policies are a collection of
    statements that are executed sequentially on the request or response of an
    API. Policy statements can be constructed using literal text values, policy
    expressions, and properties. Each API Management service instance has a
    properties collection of key/value pairs that are global to the service
    instance. These properties can be used to manage constant string values
    across all API configuration and policies.
  title: ApiManagementClient
  version: '2017-03-01'
servers:
  - url: '{apimBaseUrl}'
    variables:
      apimBaseUrl:
        default: ''
        description: >-
          The management endpoint of the API Management service, for example
          https://myapimservice.management.azure-api.net.
        x-ms-skip-url-encoding: true
paths:
  /properties:
    get:
      parameters:
        - description: >-
            | Field | Supported operators    | Supported
            functions                                   |

            |-------|------------------------|-------------------------------------------------------|

            | tags  | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith, any, all |

            | name  | ge, le, eq, ne, gt, lt | substringof, contains,
            startswith, endswith           |
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/TopQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/SkipQueryParameter
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyCollection'
          description: >-
            A Collection of the Property entities for the specified API
            Management service instance.
      tags:
        - Property
      externalDocs:
        url: >-
          https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-properties
      description: Lists a collection of properties defined within a service instance.
      operationId: Property_List
      x-ms-examples:
        ApiManagementListProperties:
          $ref: ./examples/ApiManagementListProperties.json
      x-ms-odata: '#/components/schemas/PropertyContract'
      x-ms-pageable:
        nextLinkName: nextLink
  '/properties/{propId}':
    delete:
      parameters:
        - $ref: '#/components/parameters/PropertyIdParameter'
        - description: >-
            The entity state (Etag) version of the property to delete. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        '204':
          description: Property was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Property
      description: Deletes specific property from the API Management service instance.
      operationId: Property_Delete
      x-ms-examples:
        ApiManagementDeleteProperties:
          $ref: ./examples/ApiManagementDeleteProperties.json
    get:
      parameters:
        - $ref: '#/components/parameters/PropertyIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract'
          description: The response body contains the specified Property entity.
          headers:
            ETag:
              description: >-
                Current entity state version. Should be treated as opaque and
                used to make conditional HTTP requests.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Property
      description: Gets the details of the property specified by its identifier.
      operationId: Property_Get
      x-ms-examples:
        ApiManagementGetProperties:
          $ref: ./examples/ApiManagementGetProperties.json
    patch:
      parameters:
        - $ref: '#/components/parameters/PropertyIdParameter'
        - description: >-
            The entity state (Etag) version of the property to update. A value
            of "*" can be used for If-Match to unconditionally apply the
            operation.
          in: header
          name: If-Match
          required: true
          schema:
            type: string
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        '204':
          description: Property was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Property
      description: Updates the specific property.
      operationId: Property_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdateParameters'
        description: Update parameters.
        required: true
      x-ms-examples:
        ApiManagementPatchProperties:
          $ref: ./examples/ApiManagementPatchProperties.json
    put:
      parameters:
        - $ref: '#/components/parameters/PropertyIdParameter'
        - $ref: ./apimanagement.json#/components/parameters/ApiVersionParameter
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract'
          description: Property was successfully updated.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyContract'
          description: Property was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: ./apimanagement.json#/definitions/ErrorResponse
          description: Error response describing why the operation failed.
      tags:
        - Property
      description: Creates or updates a property.
      operationId: Property_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyContract'
        description: Create parameters.
        required: true
      x-ms-examples:
        ApiManagementPutProperties:
          $ref: ./examples/ApiManagementPutProperties.json
components:
  parameters:
    PropertyIdParameter:
      description: Identifier of the property.
      in: path
      name: propId
      required: true
      schema:
        maxLength: 256
        pattern: '^[^*#&+:<>?]+$'
        type: string
      x-ms-parameter-location: method
  schemas:
    PropertyCollection:
      description: Paged Property list representation.
      properties:
        count:
          description: Total number of entities
          type: integer
        nextLink:
          description: Next page link if any.
          type: string
        value:
          description: Page values.
          items:
            $ref: '#/components/schemas/PropertyContract'
          type: array
      type: object
    PropertyContract:
      allOf:
        - $ref: '#/components/schemas/PropertyContractProperties'
      description: Property details.
      properties:
        id:
          description: Identifier of the Property.
          type: string
      type: object
    PropertyContractProperties:
      allOf:
        - $ref: '#/components/schemas/PropertyEntityBaseParameters'
      description: Property Contract properties.
      properties:
        name:
          description: >-
            Unique name of Property. It may contain only letters, digits,
            period, dash, and underscore characters.
          maxLength: 256
          minLength: 1
          pattern: '^[A-Za-z0-9-._]+$'
          type: string
        value:
          description: >-
            Value of the property. Can contain policy expressions. It may not be
            empty or consist only of whitespace.
          maxLength: 4096
          minLength: 1
          type: string
      required:
        - name
        - value
      type: object
    PropertyEntityBaseParameters:
      description: Property Entity Base Parameters set.
      properties:
        tags:
          description: >-
            Optional tags that when provided can be used to filter the property
            list.
          items:
            type: string
          maxItems: 32
          type: array
        secret:
          description: >-
            Determines whether the value is a secret and should be encrypted or
            not. Default value is false.
          type: boolean
      type: object
    PropertyUpdateParameters:
      allOf:
        - $ref: '#/components/schemas/PropertyEntityBaseParameters'
      description: Property Contract properties.
      properties:
        name:
          description: >-
            Unique name of Property. It may contain only letters, digits,
            period, dash, and underscore characters.
          maxLength: 256
          minLength: 1
          pattern: '^[A-Za-z0-9-._]+$'
          type: string
        value:
          description: >-
            Value of the property. Can contain policy expressions. It may not be
            empty or consist only of whitespace.
          maxLength: 4096
          minLength: 1
          type: string
      type: object
  securitySchemes:
    apim_key:
      in: header
      name: Authorization
      type: apiKey
security:
  - apim_key: []

