openapi: 3.0.0
info:
  description: A client for issuing REST requests to the Azure Batch service.
  title: BatchService
  version: 2019-06-01.9.0
  x-ms-code-generation-settings:
    name: BatchServiceClient
servers:
  - url: '{batchUrl}'
    variables:
      batchUrl:
        description: The base URL for all Azure Batch service requests.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /applications:
    get:
      parameters:
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 applications can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
          description: A response containing the list of applications.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Applications
      description: >-
        This operation returns only Applications and versions that are available
        for use on Compute Nodes; that is, that can be used in an Package
        reference. For administrator information about applications and versions
        that are not yet available to Compute Nodes, use the Azure portal or the
        Azure Resource Manager API.
      operationId: Application_List
      summary: Lists all of the applications available in the specified Account.
      x-ms-examples:
        List applications:
          $ref: ./examples/ApplicationList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/applications/{applicationId}':
    get:
      parameters:
        - description: The ID of the Application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSummary'
          description: A response containing the application.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Applications
      description: >-
        This operation returns only Applications and versions that are available
        for use on Compute Nodes; that is, that can be used in an Package
        reference. For administrator information about Applications and versions
        that are not yet available to Compute Nodes, use the Azure portal or the
        Azure Resource Manager API.
      operationId: Application_Get
      summary: Gets information about the specified Application.
      x-ms-examples:
        Get applications:
          $ref: ./examples/ApplicationGet.json
      x-ms-request-id: request-id
  /certificates:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Certificates can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateListResult'
          description: A response containing the list of Certificates.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Certificates
      operationId: Certificate_List
      summary: >-
        Lists all of the Certificates that have been added to the specified
        Account.
      x-ms-examples:
        Certificate list:
          $ref: ./examples/CertificateList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Certificates
      operationId: Certificate_Add
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/CertificateAddParameter'
        description: The Certificate to be added.
        required: true
      summary: Adds a Certificate to the specified Account.
      x-ms-examples:
        Certificate add:
          $ref: ./examples/CertificateAdd.json
      x-ms-request-id: request-id
  '/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})':
    delete:
      parameters:
        - description: >-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the Certificate to be deleted.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Certificates
      description: >-
        You cannot delete a Certificate if a resource (Pool or Compute Node) is
        using it. Before you can delete a Certificate, you must therefore make
        sure that the Certificate is not associated with any existing Pools, the
        Certificate is not installed on any Nodes (even if you remove a
        Certificate from a Pool, it is not removed from existing Compute Nodes
        in that Pool until they restart), and no running Tasks depend on the
        Certificate. If you try to delete a Certificate that is in use, the
        deletion fails. The Certificate status changes to deleteFailed. You can
        use Cancel Delete Certificate to set the status back to active if you
        decide that you want to continue using the Certificate.
      operationId: Certificate_Delete
      summary: Deletes a Certificate from the specified Account.
      x-ms-examples:
        Certificate delete:
          $ref: ./examples/CertificateDelete.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: >-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the Certificate to get.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: A response containing the Certificate.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Certificates
      description: Gets information about the specified Certificate.
      operationId: Certificate_Get
      x-ms-examples:
        Certificate get:
          $ref: ./examples/CertificateGet.json
      x-ms-request-id: request-id
  '/certificates(thumbprintAlgorithm={thumbprintAlgorithm},thumbprint={thumbprint})/canceldelete':
    post:
      parameters:
        - description: >-
            The algorithm used to derive the thumbprint parameter. This must be
            sha1.
          in: path
          name: thumbprintAlgorithm
          required: true
          schema:
            type: string
        - description: The thumbprint of the Certificate being deleted.
          in: path
          name: thumbprint
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Certificates
      description: >-
        If you try to delete a Certificate that is being used by a Pool or
        Compute Node, the status of the Certificate changes to deleteFailed. If
        you decide that you want to continue using the Certificate, you can use
        this operation to set the status of the Certificate back to active. If
        you intend to delete the Certificate, you do not need to run this
        operation after the deletion failed. You must make sure that the
        Certificate is not being used by any resources, and then you can try
        again to delete the Certificate.
      operationId: Certificate_CancelDeletion
      summary: Cancels a failed deletion of a Certificate from the specified Account.
      x-ms-examples:
        Certificate cancel delete:
          $ref: ./examples/CertificateCancelDelete.json
      x-ms-request-id: request-id
  /jobs:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Jobs can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudJobListResult'
          description: A response containing the list of Jobs.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      operationId: Job_List
      summary: Lists all of the Jobs in the specified Account.
      x-ms-examples:
        Job list:
          $ref: ./examples/JobList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        The Batch service supports two ways to control the work done as part of
        a Job. In the first approach, the user specifies a Job Manager Task. The
        Batch service launches this Task when it is ready to start the Job. The
        Job Manager Task controls all other Tasks that run under this Job, by
        using the Task APIs. In the second approach, the user directly controls
        the execution of Tasks under an active Job, by using the Task APIs. Also
        note: when naming Jobs, avoid including sensitive information such as
        user names or secret project names. This information may appear in
        telemetry logs accessible to Microsoft Support engineers.
      operationId: Job_Add
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobAddParameter'
        description: The Job to be added.
        required: true
      summary: Adds a Job to the specified Account.
      x-ms-examples:
        Add a basic job:
          $ref: ./examples/JobAdd_Basic.json
        Add a complex job:
          $ref: ./examples/JobAdd_Complex.json
      x-ms-request-id: request-id
  '/jobs/{jobId}':
    delete:
      parameters:
        - description: The ID of the Job to delete.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        Deleting a Job also deletes all Tasks that are part of that Job, and all
        Job statistics. This also overrides the retention period for Task data;
        that is, if the Job contains Tasks which are still retained on Compute
        Nodes, the Batch services deletes those Tasks' working directories and
        all their contents.  When a Delete Job request is received, the Batch
        service sets the Job to the deleting state. All update operations on a
        Job that is in deleting state will fail with status code 409 (Conflict),
        with additional information indicating that the Job is being deleted.
      operationId: Job_Delete
      summary: Deletes a Job.
      x-ms-examples:
        Delete Job:
          $ref: ./examples/JobDelete.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudJob'
          description: A response containing the Job.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      operationId: Job_Get
      summary: Gets information about the specified Job.
      x-ms-examples:
        Job get:
          $ref: ./examples/JobGet.json
      x-ms-request-id: request-id
    patch:
      parameters:
        - description: The ID of the Job whose properties you want to update.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        This replaces only the Job properties specified in the request. For
        example, if the Job has constraints, and a request does not specify the
        constraints element, then the Job keeps the existing constraints.
      operationId: Job_Patch
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobPatchParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Job.
      x-ms-examples:
        Job patch:
          $ref: ./examples/JobPatch.json
      x-ms-request-id: request-id
    put:
      parameters:
        - description: The ID of the Job whose properties you want to update.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        This fully replaces all the updatable properties of the Job. For
        example, if the Job has constraints associated with it and if
        constraints is not specified with this request, then the Batch service
        will remove the existing constraints.
      operationId: Job_Update
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobUpdateParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Job.
      x-ms-examples:
        Job update:
          $ref: ./examples/JobUpdate.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/addtaskcollection':
    post:
      parameters:
        - description: The ID of the Job to which the Task collection is to be added.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskAddCollectionResult'
          description: >-
            A response containing the results of the add Task collection
            operation.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: Unexpected error
      tags:
        - Tasks
      description: >-
        Note that each Task must have a unique ID. The Batch service may not
        return the results for each Task in the same order the Tasks were
        submitted in this request. If the server times out or the connection is
        closed during the request, the request may have been partially or fully
        processed, or not at all. In such cases, the user should re-issue the
        request. Note that it is up to the user to correctly handle failures
        when re-issuing a request. For example, you should use the same Task IDs
        during a retry so that if the prior operation succeeded, the retry will
        not create extra Tasks unexpectedly. If the response contains any Tasks
        which failed to add, a client can retry the request. In a retry, it is
        most efficient to resubmit only Tasks that failed to add, and to omit
        Tasks that were successfully added on the first attempt. The maximum
        lifetime of a Task from addition to completion is 180 days. If a Task
        has not completed within 180 days of being added it will be terminated
        by the Batch service and left in whatever state it was in at that time.
      operationId: Task_AddCollection
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/TaskAddCollectionParameter'
        description: The Tasks to be added.
        required: true
      summary: Adds a collection of Tasks to the specified Job.
      x-ms-examples:
        Add a basic collection of tasks:
          $ref: ./examples/TaskAddCollection_Basic.json
        Add a complex collection of tasks:
          $ref: ./examples/TaskAddCollection_Complex.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/disable':
    post:
      parameters:
        - description: The ID of the Job to disable.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        The Batch Service immediately moves the Job to the disabling state.
        Batch then uses the disableTasks parameter to determine what to do with
        the currently running Tasks of the Job. The Job remains in the disabling
        state until the disable operation is completed and all Tasks have been
        dealt with according to the disableTasks option; the Job then moves to
        the disabled state. No new Tasks are started under the Job until it
        moves back to active state. If you try to disable a Job that is in any
        state other than active, disabling, or disabled, the request fails with
        status code 409.
      operationId: Job_Disable
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobDisableParameter'
        description: The parameters for the request.
        required: true
      summary: 'Disables the specified Job, preventing new Tasks from running.'
      x-ms-examples:
        Job disable:
          $ref: ./examples/JobDisable.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/enable':
    post:
      parameters:
        - description: The ID of the Job to enable.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        When you call this API, the Batch service sets a disabled Job to the
        enabling state. After the this operation is completed, the Job moves to
        the active state, and scheduling of new Tasks under the Job resumes. The
        Batch service does not allow a Task to remain in the active state for
        more than 180 days. Therefore, if you enable a Job containing active
        Tasks which were added more than 180 days ago, those Tasks will not run.
      operationId: Job_Enable
      summary: 'Enables the specified Job, allowing new Tasks to run.'
      x-ms-examples:
        Job enable:
          $ref: ./examples/JobEnable.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/jobpreparationandreleasetaskstatus':
    get:
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Tasks can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudJobListPreparationAndReleaseTaskStatusResult
          description: >-
            A response containing a list of Job Preparation and Job Release Task
            statuses.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: >-
            The error from the Batch service. If this API is invoked on a Job
            which has no Job Preparation or Job Release Task, the Batch service
            returns HTTP status code 409.
      tags:
        - Jobs
      description: >-
        This API returns the Job Preparation and Job Release Task status on all
        Compute Nodes that have run the Job Preparation or Job Release Task.
        This includes Compute Nodes which have since been removed from the Pool.
        If this API is invoked on a Job which has no Job Preparation or Job
        Release Task, the Batch service returns HTTP status code 409 (Conflict)
        with an error code of JobPreparationTaskNotSpecified.
      operationId: Job_ListPreparationAndReleaseTaskStatus
      summary: >-
        Lists the execution status of the Job Preparation and Job Release Task
        for the specified Job across the Compute Nodes where the Job has run.
      x-ms-examples:
        Job list preparation and release task status:
          $ref: ./examples/JobListPreparationAndReleaseTaskStatus.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobs/{jobId}/taskcounts':
    get:
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCounts'
          description: A response containing the Task counts for the specified Job.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        Task counts provide a count of the Tasks by active, running or completed
        Task state, and a count of Tasks which succeeded or failed. Tasks in the
        preparing state are counted as running.
      operationId: Job_GetTaskCounts
      summary: Gets the Task counts for the specified Job.
      x-ms-examples:
        Job get task counts:
          $ref: ./examples/JobGetTaskCounts.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks':
    get:
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-tasks.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Tasks can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTaskListResult'
          description: A response containing the list of Tasks.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        For multi-instance Tasks, information such as affinityId, executionInfo
        and nodeInfo refer to the primary Task. Use the list subtasks API to
        retrieve information about subtasks.
      operationId: Task_List
      summary: Lists all of the Tasks that are associated with the specified Job.
      x-ms-examples:
        Task list:
          $ref: ./examples/TaskList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      parameters:
        - description: The ID of the Job to which the Task is to be added.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        The maximum lifetime of a Task from addition to completion is 180 days.
        If a Task has not completed within 180 days of being added it will be
        terminated by the Batch service and left in whatever state it was in at
        that time.
      operationId: Task_Add
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/TaskAddParameter'
        description: The Task to be added.
        required: true
      summary: Adds a Task to the specified Job.
      x-ms-examples:
        Add a basic task:
          $ref: ./examples/TaskAdd_Basic.json
        Add a task with container settings:
          $ref: ./examples/TaskAdd_ContainerSettings.json
        Add a task with exit conditions:
          $ref: ./examples/TaskAdd_ExitConditions.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}':
    delete:
      parameters:
        - description: The ID of the Job from which to delete the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task to delete.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        When a Task is deleted, all of the files in its directory on the Compute
        Node where it ran are also deleted (regardless of the retention time).
        For multi-instance Tasks, the delete Task operation applies
        synchronously to the primary task; subtasks and their files are then
        deleted asynchronously in the background.
      operationId: Task_Delete
      summary: Deletes a Task from the specified Job.
      x-ms-examples:
        Task delete:
          $ref: ./examples/TaskDelete.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task to get information about.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTask'
          description: A response containing the Task.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        For multi-instance Tasks, information such as affinityId, executionInfo
        and nodeInfo refer to the primary Task. Use the list subtasks API to
        retrieve information about subtasks.
      operationId: Task_Get
      summary: Gets information about the specified Task.
      x-ms-examples:
        Task get:
          $ref: ./examples/TaskGet.json
      x-ms-request-id: request-id
    put:
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task to update.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: Updates the properties of the specified Task.
      operationId: Task_Update
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/TaskUpdateParameter'
        description: The parameters for the request.
        required: true
      x-ms-examples:
        Task update:
          $ref: ./examples/TaskUpdate.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/files':
    get:
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task whose files you want to list.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-task-files.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether to list children of the Task directory. This parameter can
            be used in combination with the filter parameter to list specific
            type of files.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 files can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeFileListResult'
          description: A response containing the list of files.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      operationId: File_ListFromTask
      summary: Lists the files in a Task's directory on its Compute Node.
      x-ms-examples:
        File list from task:
          $ref: ./examples/FileListFromTask.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/files/{filePath}':
    delete:
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task whose file you want to delete.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the Task file or directory that you want to delete.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to
            true to delete the directory and all of the files and subdirectories
            in it. If recursive is false then the directory must be empty or
            deletion will fail.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      operationId: File_DeleteFromTask
      summary: >-
        Deletes the specified Task file from the Compute Node where the Task
        ran.
      x-ms-examples:
        File delete from task:
          $ref: ./examples/FileDeleteFromTask.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task whose file you want to retrieve.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the Task file that you want to get the content of.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The byte range to be retrieved. The default is to retrieve the
            entire file. The format is bytes=startRange-endRange.
          in: header
          name: ocp-range
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: file
                type: object
            application/octet-stream:
              schema:
                format: file
                type: object
          description: A response containing the file content.
          headers:
            Content-Length:
              description: The length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: The content type of the file.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              schema:
                type: string
            ocp-batch-file-url:
              description: The URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: The file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      description: Returns the content of the specified Task file.
      operationId: File_GetFromTask
      x-ms-examples:
        Get File From Task:
          $ref: ./examples/FileGetFromTask.json
      x-ms-request-id: request-id
    head:
      parameters:
        - description: The ID of the Job that contains the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task whose file you want to get the properties of.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: The path to the Task file that you want to get the properties of.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the file properties.
          headers:
            Content-Length:
              description: The length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: The content type of the file.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              schema:
                type: string
            ocp-batch-file-url:
              description: The URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: The file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      description: Gets the properties of the specified Task file.
      operationId: File_GetPropertiesFromTask
      x-ms-examples:
        File get properties from task:
          $ref: ./examples/FileGetPropertiesFromTask.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/reactivate':
    post:
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task to reactivate.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        Reactivation makes a Task eligible to be retried again up to its maximum
        retry count. The Task's state is changed to active. As the Task is no
        longer in the completed state, any previous exit code or failure
        information is no longer available after reactivation. Each time a Task
        is reactivated, its retry count is reset to 0. Reactivation will fail
        for Tasks that are not completed or that previously completed
        successfully (with an exit code of 0). Additionally, it will fail if the
        Job has completed (or is terminating or deleting).
      operationId: Task_Reactivate
      summary: >-
        Reactivates a Task, allowing it to run again even if its retry count has
        been exhausted.
      x-ms-examples:
        Task reactivate:
          $ref: ./examples/TaskReactivate.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/subtasksinfo':
    get:
      parameters:
        - description: The ID of the Job.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudTaskListSubtasksResult'
          description: A response containing the list of subtasks.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        If the Task is not a multi-instance Task then this returns an empty
        collection.
      operationId: Task_ListSubtasks
      summary: >-
        Lists all of the subtasks that are associated with the specified
        multi-instance Task.
      x-ms-examples:
        Task list subtasks:
          $ref: ./examples/TaskListSubtasks.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/tasks/{taskId}/terminate':
    post:
      parameters:
        - description: The ID of the Job containing the Task.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: The ID of the Task to terminate.
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Tasks
      description: >-
        When the Task has been terminated, it moves to the completed state. For
        multi-instance Tasks, the terminate Task operation applies synchronously
        to the primary task; subtasks are then terminated asynchronously in the
        background.
      operationId: Task_Terminate
      summary: Terminates the specified Task.
      x-ms-examples:
        Task terminate:
          $ref: ./examples/TaskTerminate.json
      x-ms-request-id: request-id
  '/jobs/{jobId}/terminate':
    post:
      parameters:
        - description: The ID of the Job to terminate.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        When a Terminate Job request is received, the Batch service sets the Job
        to the terminating state. The Batch service then terminates any running
        Tasks associated with the Job and runs any required Job release Tasks.
        Then the Job moves into the completed state. If there are any Tasks in
        the Job in the active state, they will remain in the active state. Once
        a Job is terminated, new Tasks cannot be added and any remaining active
        Tasks will not be scheduled.
      operationId: Job_Terminate
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobTerminateParameter'
        description: The parameters for the request.
      summary: 'Terminates the specified Job, marking it as completed.'
      x-ms-examples:
        Job terminate:
          $ref: ./examples/JobTerminate.json
      x-ms-request-id: request-id
  /jobschedules:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Job Schedules can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudJobScheduleListResult'
          description: A response containing the list of Job Schedules.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      operationId: JobSchedule_List
      summary: Lists all of the Job Schedules in the specified Account.
      x-ms-examples:
        JobSchedule list:
          $ref: ./examples/JobScheduleList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      operationId: JobSchedule_Add
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobScheduleAddParameter'
        description: The Job Schedule to be added.
        required: true
      summary: Adds a Job Schedule to the specified Account.
      x-ms-examples:
        Add a basic JobSchedule:
          $ref: ./examples/JobScheduleAdd_Basic.json
        Add a complex JobScheduleAdd:
          $ref: ./examples/JobScheduleAdd_Complex.json
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}':
    delete:
      parameters:
        - description: The ID of the Job Schedule to delete.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      description: >-
        When you delete a Job Schedule, this also deletes all Jobs and Tasks
        under that schedule. When Tasks are deleted, all the files in their
        working directories on the Compute Nodes are also deleted (the retention
        period is ignored). The Job Schedule statistics are no longer accessible
        once the Job Schedule is deleted, though they are still counted towards
        Account lifetime statistics.
      operationId: JobSchedule_Delete
      summary: Deletes a Job Schedule from the specified Account.
      x-ms-examples:
        JobSchedule delete:
          $ref: ./examples/JobScheduleDelete.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Job Schedule to get.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudJobSchedule'
          description: A response containing the Job Schedule.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      description: Gets information about the specified Job Schedule.
      operationId: JobSchedule_Get
      x-ms-examples:
        JobSchedule get:
          $ref: ./examples/JobScheduleGet.json
      x-ms-request-id: request-id
    head:
      parameters:
        - description: The ID of the Job Schedule which you want to check.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            A response containing headers related to the Job Schedule, if it
            exists.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        '404':
          description: The Job Schedule does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      operationId: JobSchedule_Exists
      summary: Checks the specified Job Schedule exists.
      x-ms-examples:
        Check Job Schedule Exists:
          $ref: ./examples/JobScheduleExists.json
      x-ms-request-id: request-id
    patch:
      parameters:
        - description: The ID of the Job Schedule to update.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      description: >-
        This replaces only the Job Schedule properties specified in the request.
        For example, if the schedule property is not specified with this
        request, then the Batch service will keep the existing schedule. Changes
        to a Job Schedule only impact Jobs created by the schedule after the
        update has taken place; currently running Jobs are unaffected.
      operationId: JobSchedule_Patch
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobSchedulePatchParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Job Schedule.
      x-ms-examples:
        JobSchedule patch:
          $ref: ./examples/JobSchedulePatch.json
      x-ms-request-id: request-id
    put:
      parameters:
        - description: The ID of the Job Schedule to update.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      description: >-
        This fully replaces all the updatable properties of the Job Schedule.
        For example, if the schedule property is not specified with this
        request, then the Batch service will remove the existing schedule.
        Changes to a Job Schedule only impact Jobs created by the schedule after
        the update has taken place; currently running Jobs are unaffected.
      operationId: JobSchedule_Update
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/JobScheduleUpdateParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Job Schedule.
      x-ms-examples:
        JobSchedule update:
          $ref: ./examples/JobScheduleUpdate.json
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/disable':
    post:
      parameters:
        - description: The ID of the Job Schedule to disable.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      description: No new Jobs will be created until the Job Schedule is enabled again.
      operationId: JobSchedule_Disable
      summary: Disables a Job Schedule.
      x-ms-examples:
        JobSchedule disable:
          $ref: ./examples/JobScheduleDisable.json
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/enable':
    post:
      parameters:
        - description: The ID of the Job Schedule to enable.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      operationId: JobSchedule_Enable
      summary: Enables a Job Schedule.
      x-ms-examples:
        JobSchedule enable:
          $ref: ./examples/JobScheduleEnable.json
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/jobs':
    get:
      parameters:
        - description: >-
            The ID of the Job Schedule from which you want to get a list of
            Jobs.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Jobs can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudJobListResult'
          description: A response containing the list of Jobs.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      operationId: Job_ListFromJobSchedule
      summary: Lists the Jobs that have been created under the specified Job Schedule.
      x-ms-examples:
        List Job Under Job Schedule:
          $ref: ./examples/JobListFromJobSchedule.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/jobschedules/{jobScheduleId}/terminate':
    post:
      parameters:
        - description: The ID of the Job Schedule to terminates.
          in: path
          name: jobScheduleId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - JobSchedules
      operationId: JobSchedule_Terminate
      summary: Terminates a Job Schedule.
      x-ms-examples:
        JobSchedule terminate:
          $ref: ./examples/JobScheduleTerminate.json
      x-ms-request-id: request-id
  /lifetimejobstats:
    get:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatistics'
          description: >-
            A response containing the Job statistics for the lifetime of the
            Batch Account.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Jobs
      description: >-
        Statistics are aggregated across all Jobs that have ever existed in the
        Account, from Account creation to the last update time of the
        statistics. The statistics may not be immediately available. The Batch
        service performs periodic roll-up of statistics. The typical delay is
        about 30 minutes.
      operationId: Job_GetAllLifetimeStatistics
      summary: >-
        Gets lifetime summary statistics for all of the Jobs in the specified
        Account.
      x-ms-examples:
        Job get lifetime statistics:
          $ref: ./examples/JobGetLifetimeStatistics.json
      x-ms-request-id: request-id
  /lifetimepoolstats:
    get:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolStatistics'
          description: >-
            A response containing the Pool statistics for the lifetime of the
            Batch Account.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        Statistics are aggregated across all Pools that have ever existed in the
        Account, from Account creation to the last update time of the
        statistics. The statistics may not be immediately available. The Batch
        service performs periodic roll-up of statistics. The typical delay is
        about 30 minutes.
      operationId: Pool_GetAllLifetimeStatistics
      summary: >-
        Gets lifetime summary statistics for all of the Pools in the specified
        Account.
      x-ms-examples:
        Pool get lifetime statistics:
          $ref: ./examples/PoolGetLifetimeStatistics.json
      x-ms-request-id: request-id
  /nodecounts:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: The maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            default: 10
            format: int32
            maximum: 10
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolNodeCountsListResult'
          description: >-
            The response contains the number of Compute Nodes in each Compute
            Node state, grouped by Pool.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Accounts
      description: 'Gets the number of Compute Nodes in each state, grouped by Pool.'
      operationId: Account_ListPoolNodeCounts
      x-ms-examples:
        NodeCountsPayload:
          $ref: ./examples/AccountListPoolNodeCounts.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
  /pools:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-pools.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Pools can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudPoolListResult'
          description: A response containing the list of Pools.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      operationId: Pool_List
      summary: Lists all of the Pools in the specified Account.
      x-ms-examples:
        Pool list:
          $ref: ./examples/PoolList_Basic.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
    post:
      parameters:
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        When naming Pools, avoid including sensitive information such as user
        names or secret project names. This information may appear in telemetry
        logs accessible to Microsoft Support engineers.
      operationId: Pool_Add
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolAddParameter'
        description: The Pool to be added.
        required: true
      summary: Adds a Pool to the specified Account.
      x-ms-examples:
        Add a CloudServiceConfiguration pool:
          $ref: ./examples/PoolAdd_CloudServiceConfiguration.json
        Add a VirtualMachineConfiguration pool:
          $ref: ./examples/PoolAdd_VirtualMachineConfiguration.json
        Add a VirtualMachineConfiguration pool with containers:
          $ref: ./examples/PoolAdd_VirtualMachineConfigurationWithContainers.json
      x-ms-request-id: request-id
  '/pools/{poolId}':
    delete:
      parameters:
        - description: The ID of the Pool to delete.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        When you request that a Pool be deleted, the following actions occur:
        the Pool state is set to deleting; any ongoing resize operation on the
        Pool are stopped; the Batch service starts resizing the Pool to zero
        Compute Nodes; any Tasks running on existing Compute Nodes are
        terminated and requeued (as if a resize Pool operation had been
        requested with the default requeue option); finally, the Pool is removed
        from the system. Because running Tasks are requeued, the user can rerun
        these Tasks by updating their Job to target a different Pool. The Tasks
        can then run on the new Pool. If you want to override the requeue
        behavior, then you should call resize Pool explicitly to shrink the Pool
        to zero size before deleting the Pool. If you call an Update, Patch or
        Delete API on a Pool in the deleting state, it will fail with HTTP
        status code 409 with error code PoolBeingDeleted.
      operationId: Pool_Delete
      summary: Deletes a Pool from the specified Account.
      x-ms-examples:
        Pool delete:
          $ref: ./examples/PoolDelete.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Pool to get.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $expand clause.
          in: query
          name: $expand
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudPool'
          description: A response containing the Pool.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: Gets information about the specified Pool.
      operationId: Pool_Get
      x-ms-examples:
        Pool get:
          $ref: ./examples/PoolGet_Basic.json
      x-ms-request-id: request-id
    head:
      parameters:
        - description: The ID of the Pool to get.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: 'A response containing headers related to the Pool, if it exists.'
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        '404':
          description: The Pool does not exist.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: Gets basic properties of a Pool.
      operationId: Pool_Exists
      x-ms-examples:
        Check Pool Exists:
          $ref: ./examples/PoolExists.json
      x-ms-request-id: request-id
    patch:
      parameters:
        - description: The ID of the Pool to update.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        This only replaces the Pool properties specified in the request. For
        example, if the Pool has a start Task associated with it, and a request
        does not specify a start Task element, then the Pool keeps the existing
        start Task.
      operationId: Pool_Patch
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolPatchParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Pool.
      x-ms-examples:
        Patch the Pool:
          $ref: ./examples/PoolPatch.json
      x-ms-request-id: request-id
  '/pools/{poolId}/disableautoscale':
    post:
      parameters:
        - description: The ID of the Pool on which to disable automatic scaling.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      operationId: Pool_DisableAutoScale
      summary: Disables automatic scaling for a Pool.
      x-ms-examples:
        Disable pool autoscale:
          $ref: ./examples/PoolDisableAutoScale.json
      x-ms-request-id: request-id
  '/pools/{poolId}/enableautoscale':
    post:
      parameters:
        - description: The ID of the Pool on which to enable automatic scaling.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        You cannot enable automatic scaling on a Pool if a resize operation is
        in progress on the Pool. If automatic scaling of the Pool is currently
        disabled, you must specify a valid autoscale formula as part of the
        request. If automatic scaling of the Pool is already enabled, you may
        specify a new autoscale formula and/or a new evaluation interval. You
        cannot call this API for the same Pool more than once every 30 seconds.
      operationId: Pool_EnableAutoScale
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolEnableAutoScaleParameter'
        description: The parameters for the request.
        required: true
      summary: Enables automatic scaling for a Pool.
      x-ms-examples:
        Pool enable autoscale:
          $ref: ./examples/PoolEnableAutoscale.json
      x-ms-request-id: request-id
  '/pools/{poolId}/evaluateautoscale':
    post:
      parameters:
        - description: >-
            The ID of the Pool on which to evaluate the automatic scaling
            formula.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoScaleRun'
          description: A response containing the results of the autoscale evaluation.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        This API is primarily for validating an autoscale formula, as it simply
        returns the result without applying the formula to the Pool. The Pool
        must have auto scaling enabled in order to evaluate a formula.
      operationId: Pool_EvaluateAutoScale
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolEvaluateAutoScaleParameter'
        description: The parameters for the request.
        required: true
      summary: Gets the result of evaluating an automatic scaling formula on the Pool.
      x-ms-examples:
        Pool evaluate autoscale:
          $ref: ./examples/PoolEvaluateAutoscale.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes':
    get:
      parameters:
        - description: The ID of the Pool from which you want to list Compute Nodes.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 Compute Nodes can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeNodeListResult'
          description: A response containing the list of Compute Nodes.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      operationId: ComputeNode_List
      summary: Lists the Compute Nodes in the specified Pool.
      x-ms-examples:
        Node list:
          $ref: ./examples/NodeList.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}':
    get:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node that you want to get information about.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: An OData $select clause.
          in: query
          name: $select
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeNode'
          description: A response containing the Compute Node.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      operationId: ComputeNode_Get
      summary: Gets information about the specified Compute Node.
      x-ms-examples:
        Node get:
          $ref: ./examples/NodeGet_Basic.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/disablescheduling':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The ID of the Compute Node on which you want to disable Task
            scheduling.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can disable Task scheduling on a Compute Node only if its current
        scheduling state is enabled.
      operationId: ComputeNode_DisableScheduling
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/NodeDisableSchedulingParameter'
        description: The parameters for the request.
      summary: Disables Task scheduling on the specified Compute Node.
      x-ms-examples:
        Node disable scheduling:
          $ref: ./examples/NodeDisableScheduling.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/enablescheduling':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The ID of the Compute Node on which you want to enable Task
            scheduling.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can enable Task scheduling on a Compute Node only if its current
        scheduling state is disabled
      operationId: ComputeNode_EnableScheduling
      summary: Enables Task scheduling on the specified Compute Node.
      x-ms-examples:
        Node enable scheduling:
          $ref: ./examples/NodeEnableScheduling.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/files':
    get:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node whose files you want to list.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: Whether to list children of a directory.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 files can be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeFileListResult'
          description: A response containing the list of files.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      operationId: File_ListFromComputeNode
      summary: >-
        Lists all of the files in Task directories on the specified Compute
        Node.
      x-ms-examples:
        File list from node:
          $ref: ./examples/FileListFromNode.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/files/{filePath}':
    delete:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node from which you want to delete the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The path to the file or directory that you want to delete.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            Whether to delete children of a directory. If the filePath parameter
            represents a directory instead of a file, you can set recursive to
            true to delete the directory and all of the files and subdirectories
            in it. If recursive is false then the directory must be empty or
            deletion will fail.
          in: query
          name: recursive
          required: false
          schema:
            type: boolean
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      operationId: File_DeleteFromComputeNode
      summary: Deletes the specified file from the Compute Node.
      x-ms-examples:
        File delete from node:
          $ref: ./examples/FileDeleteFromNode.json
      x-ms-request-id: request-id
    get:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node that contains the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The path to the Compute Node file that you want to get the content
            of.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The byte range to be retrieved. The default is to retrieve the
            entire file. The format is bytes=startRange-endRange.
          in: header
          name: ocp-range
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: file
                type: object
            application/octet-stream:
              schema:
                format: file
                type: object
          description: The file content.
          headers:
            Content-Length:
              description: The length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: The content type of the file.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              schema:
                type: string
            ocp-batch-file-url:
              description: The URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: The file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      description: Returns the content of the specified Compute Node file.
      operationId: File_GetFromComputeNode
      x-ms-examples:
        Get File From Compute Node:
          $ref: ./examples/FileGetFromNode.json
      x-ms-request-id: request-id
    head:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node that contains the file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The path to the Compute Node file that you want to get the
            properties of.
          in: path
          name: filePath
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: A response containing the file properties.
          headers:
            Content-Length:
              description: The length of the file.
              schema:
                format: int64
                type: integer
            Content-Type:
              description: The content type of the file.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            ocp-batch-file-isdirectory:
              description: Whether the object represents a directory.
              schema:
                type: boolean
            ocp-batch-file-mode:
              description: The file mode attribute in octal format.
              schema:
                type: string
            ocp-batch-file-url:
              description: The URL of the file.
              schema:
                type: string
            ocp-creation-time:
              description: The file creation time.
              schema:
                format: date-time-rfc1123
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Files
      description: Gets the properties of the specified Compute Node file.
      operationId: File_GetPropertiesFromComputeNode
      x-ms-examples:
        File get properties from node:
          $ref: ./examples/FileGetPropertiesFromNode.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/rdp':
    get:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The ID of the Compute Node for which you want to get the Remote
            Desktop Protocol file.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                format: file
                type: object
            application/octet-stream:
              schema:
                format: file
                type: object
          description: A response containing the RDP information.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        Before you can access a Compute Node by using the RDP file, you must
        create a user Account on the Compute Node. This API can only be invoked
        on Pools created with a cloud service configuration. For Pools created
        with a virtual machine configuration, see the GetRemoteLoginSettings
        API.
      operationId: ComputeNode_GetRemoteDesktop
      summary: Gets the Remote Desktop Protocol file for the specified Compute Node.
      x-ms-examples:
        Get RDP file of the compute node:
          $ref: ./examples/NodeGetRemoteDesktop.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/reboot':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node that you want to restart.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can restart a Compute Node only if it is in an idle or running
        state.
      operationId: ComputeNode_Reboot
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/NodeRebootParameter'
        description: The parameters for the request.
      summary: Restarts the specified Compute Node.
      x-ms-examples:
        Node reboot:
          $ref: ./examples/NodeReboot.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/reimage':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the Compute Node that you want to restart.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can reinstall the operating system on a Compute Node only if it is
        in an idle or running state. This API can be invoked only on Pools
        created with the cloud service configuration property.
      operationId: ComputeNode_Reimage
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/NodeReimageParameter'
        description: The parameters for the request.
      summary: Reinstalls the operating system on the specified Compute Node.
      x-ms-examples:
        Node reimage:
          $ref: ./examples/NodeReimage.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/remoteloginsettings':
    get:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The ID of the Compute Node for which to obtain the remote login
            settings.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputeNodeGetRemoteLoginSettingsResult'
          description: A response containing the login settings.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        Before you can remotely login to a Compute Node using the remote login
        settings, you must create a user Account on the Compute Node. This API
        can be invoked only on Pools created with the virtual machine
        configuration property. For Pools created with a cloud service
        configuration, see the GetRemoteDesktop API.
      operationId: ComputeNode_GetRemoteLoginSettings
      summary: Gets the settings required for remote login to a Compute Node.
      x-ms-examples:
        Node get remote login settings:
          $ref: ./examples/NodeGetRemoteLoginSettings.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/uploadbatchservicelogs':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The ID of the Compute Node from which you want to upload the Azure
            Batch service log files.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadBatchServiceLogsResult'
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        This is for gathering Azure Batch service log files in an automated
        fashion from Compute Nodes if you are experiencing an error and wish to
        escalate to Azure support. The Azure Batch service log files should be
        shared with Azure support to aid in debugging issues with the Batch
        service.
      operationId: ComputeNode_UploadBatchServiceLogs
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/UploadBatchServiceLogsConfiguration'
        description: The Azure Batch service log files upload configuration.
        required: true
      summary: >-
        Upload Azure Batch service log files from the specified Compute Node to
        Azure Blob Storage.
      x-ms-examples:
        Upload BatchService Logs:
          $ref: ./examples/NodeUploadBatchServiceLogs.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/users':
    post:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the machine on which you want to create a user Account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '201':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can add a user Account to a Compute Node only when it is in the idle
        or running state.
      operationId: ComputeNode_AddUser
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/ComputeNodeUser'
        description: The user Account to be created.
        required: true
      summary: Adds a user Account to the specified Compute Node.
      x-ms-examples:
        Node add user:
          $ref: ./examples/NodeAddUser.json
      x-ms-request-id: request-id
  '/pools/{poolId}/nodes/{nodeId}/users/{userName}':
    delete:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the machine on which you want to delete a user Account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The name of the user Account to delete.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        You can delete a user Account to a Compute Node only when it is in the
        idle or running state.
      operationId: ComputeNode_DeleteUser
      summary: Deletes a user Account from the specified Compute Node.
      x-ms-examples:
        Node delete user:
          $ref: ./examples/NodeDeleteUser.json
      x-ms-request-id: request-id
    put:
      parameters:
        - description: The ID of the Pool that contains the Compute Node.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: The ID of the machine on which you want to update a user Account.
          in: path
          name: nodeId
          required: true
          schema:
            type: string
        - description: The name of the user Account to update.
          in: path
          name: userName
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        This operation replaces of all the updatable properties of the Account.
        For example, if the expiryTime element is not specified, the current
        value is replaced with the default value, not left unmodified. You can
        update a user Account on a Compute Node only when it is in the idle or
        running state.
      operationId: ComputeNode_UpdateUser
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/NodeUpdateUserParameter'
        description: The parameters for the request.
        required: true
      summary: >-
        Updates the password and expiration time of a user Account on the
        specified Compute Node.
      x-ms-examples:
        Node update user:
          $ref: ./examples/NodeUpdateUser.json
      x-ms-request-id: request-id
  '/pools/{poolId}/removenodes':
    post:
      parameters:
        - description: The ID of the Pool from which you want to remove Compute Nodes.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - ComputeNodes
      description: >-
        This operation can only run when the allocation state of the Pool is
        steady. When this operation runs, the allocation state changes from
        steady to resizing.
      operationId: Pool_RemoveNodes
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/NodeRemoveParameter'
        description: The parameters for the request.
        required: true
      summary: Removes Compute Nodes from the specified Pool.
      x-ms-examples:
        Pool remove nodes:
          $ref: ./examples/PoolRemoveNodes.json
      x-ms-request-id: request-id
  '/pools/{poolId}/resize':
    post:
      parameters:
        - description: The ID of the Pool to resize.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        You can only resize a Pool when its allocation state is steady. If the
        Pool is already resizing, the request fails with status code 409. When
        you resize a Pool, the Pool's allocation state changes from steady to
        resizing. You cannot resize Pools which are configured for automatic
        scaling. If you try to do this, the Batch service returns an error 409.
        If you resize a Pool downwards, the Batch service chooses which Compute
        Nodes to remove. To remove specific Compute Nodes, use the Pool remove
        Compute Nodes API instead.
      operationId: Pool_Resize
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolResizeParameter'
        description: The parameters for the request.
        required: true
      summary: Changes the number of Compute Nodes that are assigned to a Pool.
      x-ms-examples:
        Pool resize:
          $ref: ./examples/PoolResize.json
      x-ms-request-id: request-id
  '/pools/{poolId}/stopresize':
    post:
      parameters:
        - description: The ID of the Pool whose resizing you want to stop.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service exactly matches the value specified by
            the client.
          in: header
          name: If-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An ETag value associated with the version of the resource known to
            the client. The operation will be performed only if the resource's
            current ETag on the service does not match the value specified by
            the client.
          in: header
          name: If-None-Match
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has been modified since the specified time.
          in: header
          name: If-Modified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            A timestamp indicating the last modified time of the resource known
            to the client. The operation will be performed only if the resource
            on the service has not been modified since the specified time.
          in: header
          name: If-Unmodified-Since
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '202':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: >-
            The error from the Batch service. If you call this API on a Pool
            which is not in the resizing state, the request fails with HTTP
            status code 409.
      tags:
        - Pools
      description: >-
        This does not restore the Pool to its previous state before the resize
        operation: it only stops any further changes being made, and the Pool
        maintains its current state. After stopping, the Pool stabilizes at the
        number of Compute Nodes it was at when the stop operation was done.
        During the stop operation, the Pool allocation state changes first to
        stopping and then to steady. A resize operation need not be an explicit
        resize Pool request; this API can also be used to halt the initial
        sizing of the Pool when it is created.
      operationId: Pool_StopResize
      summary: Stops an ongoing resize operation on the Pool.
      x-ms-examples:
        Pool stop resize:
          $ref: ./examples/PoolStopResize.json
      x-ms-request-id: request-id
  '/pools/{poolId}/updateproperties':
    post:
      parameters:
        - description: The ID of the Pool to update.
          in: path
          name: poolId
          required: true
          schema:
            type: string
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '204':
          description: The request to the Batch service was successful.
          headers:
            DataServiceId:
              description: The OData ID of the resource to which the request applied.
              schema:
                type: string
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        This fully replaces all the updatable properties of the Pool. For
        example, if the Pool has a start Task associated with it and if start
        Task is not specified with this request, then the Batch service will
        remove the existing start Task.
      operationId: Pool_UpdateProperties
      requestBody:
        content:
          application/json; odata=minimalmetadata:
            schema:
              $ref: '#/components/schemas/PoolUpdatePropertiesParameter'
        description: The parameters for the request.
        required: true
      summary: Updates the properties of the specified Pool.
      x-ms-examples:
        Pool update:
          $ref: ./examples/PoolUpdate.json
      x-ms-request-id: request-id
  /poolusagemetrics:
    get:
      parameters:
        - description: >-
            The earliest time from which to include metrics. This must be at
            least two and a half hours before the current time. If not specified
            this defaults to the start time of the last aggregation interval
            currently available.
          in: query
          name: starttime
          required: false
          schema:
            format: date-time
            type: string
          x-ms-client-name: startTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The latest time from which to include metrics. This must be at least
            two hours before the current time. If not specified this defaults to
            the end time of the last aggregation interval currently available.
          in: query
          name: endtime
          required: false
          schema:
            format: date-time
            type: string
          x-ms-client-name: endTime
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 results will be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoolListUsageMetricsResult'
          description: A response containing the list of Pool usage details.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Pools
      description: >-
        If you do not specify a $filter clause including a poolId, the response
        includes all Pools that existed in the Account in the time range of the
        returned aggregation intervals. If you do not specify a $filter clause
        including a startTime or endTime these filters default to the start and
        end times of the last aggregation interval currently available; that is,
        only the last aggregation interval is returned.
      operationId: Pool_ListUsageMetrics
      summary: >-
        Lists the usage metrics, aggregated by Pool across individual time
        intervals, for the specified Account.
      x-ms-examples:
        Pool list usage metrics:
          $ref: ./examples/PoolListUsageMetrics.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
  /supportedimages:
    get:
      parameters:
        - description: >-
            An OData $filter clause. For more information on constructing this
            filter, see
            https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-support-images.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum number of items to return in the response. A maximum of
            1000 results will be returned.
          in: query
          name: maxresults
          required: false
          schema:
            default: 1000
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
          x-ms-client-name: maxResults
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The maximum time that the server can spend processing the request,
            in seconds. The default is 30 seconds.
          in: query
          name: timeout
          required: false
          schema:
            default: 30
            format: int32
            type: integer
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The caller-generated request identity, in the form of a GUID with no
            decoration such as curly braces, e.g.
            9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
          in: header
          name: client-request-id
          required: false
          schema:
            format: uuid
            type: string
          x-ms-client-request-id: true
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            Whether the server should return the client-request-id in the
            response.
          in: header
          name: return-client-request-id
          required: false
          schema:
            default: false
            type: boolean
          x-ms-parameter-grouping:
            postfix: Options
        - description: >-
            The time the request was issued. Client libraries typically set this
            to the current system clock time; set it explicitly if you are
            calling the REST API directly.
          in: header
          name: ocp-date
          required: false
          schema:
            format: date-time-rfc1123
            type: string
          x-ms-parameter-grouping:
            postfix: Options
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListSupportedImagesResult'
          description: A response containing the list of supported Virtual Machine Images.
          headers:
            ETag:
              description: >-
                The ETag HTTP response header. This is an opaque string. You can
                use it to detect whether the resource has changed between
                requests. In particular, you can pass the ETag to one of the
                If-Modified-Since, If-Unmodified-Since, If-Match or
                If-None-Match headers.
              schema:
                type: string
            Last-Modified:
              description: The time at which the resource was last modified.
              schema:
                format: date-time-rfc1123
                type: string
            client-request-id:
              description: >-
                The client-request-id provided by the client during the request.
                This will be returned only if the return-client-request-id
                parameter was set to true.
              schema:
                format: uuid
                type: string
            request-id:
              description: >-
                A unique identifier for the request that was made to the Batch
                service. If a request is consistently failing and you have
                verified that the request is properly formulated, you may use
                this value to report the error to Microsoft. In your report,
                include the value of this request ID, the approximate time that
                the request was made, the Batch Account against which the
                request was made, and the region that Account resides in.
              schema:
                format: uuid
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchError'
          description: The error from the Batch service.
      tags:
        - Accounts
      operationId: Account_ListSupportedImages
      summary: Lists all Virtual Machine Images supported by the Azure Batch service.
      x-ms-examples:
        Account list node agent skus:
          $ref: ./examples/AccountListSupportedImages.json
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-ms-request-id: request-id
components:
  parameters:
    ApiVersionParameter:
      description: Client API Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    batchUrl:
      description: The base URL for all Azure Batch service requests.
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
  schemas:
    AccountListSupportedImagesResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/ImageInformation'
          title: The list of supported Virtual Machine Images.
          type: array
      title: The result of listing the supported Virtual Machine Images.
      type: object
    AffinityInformation:
      properties:
        affinityId:
          description: >-
            You can pass the affinityId of a Node to indicate that this Task
            needs to run on that Compute Node. Note that this is just a soft
            affinity. If the target Compute Node is busy or unavailable at the
            time the Task is scheduled, then the Task will be scheduled
            elsewhere.
          title: >-
            An opaque string representing the location of a Compute Node or a
            Task that has run previously.
          type: string
      required:
        - affinityId
      title: >-
        A locality hint that can be used by the Batch service to select a
        Compute Node on which to start a Task.
      type: object
    ApplicationListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/ApplicationSummary'
          title: The list of applications available in the Account.
          type: array
      title: The result of listing the applications available in an Account.
      type: object
    ApplicationPackageReference:
      properties:
        applicationId:
          title: The ID of the application to deploy.
          type: string
        version:
          description: >-
            If this is omitted on a Pool, and no default version is specified
            for this application, the request fails with the error code
            InvalidApplicationPackageReferences and HTTP status code 409. If
            this is omitted on a Task, and no default version is specified for
            this application, the Task fails with a pre-processing error.
          title: >-
            The version of the application to deploy. If omitted, the default
            version is deployed.
          type: string
      required:
        - applicationId
      title: A reference to an Package to be deployed to Compute Nodes.
      type: object
    ApplicationSummary:
      properties:
        displayName:
          title: The display name for the application.
          type: string
        id:
          title: >-
            A string that uniquely identifies the application within the
            Account.
          type: string
        versions:
          items:
            type: string
          title: The list of available versions of the application.
          type: array
      required:
        - id
        - displayName
        - versions
      title: Contains information about an application in an Azure Batch Account.
      type: object
    AuthenticationTokenSettings:
      properties:
        access:
          description: >-
            The authentication token grants access to a limited set of Batch
            service operations. Currently the only supported value for the
            access property is 'job', which grants access to all operations
            related to the Job which contains the Task.
          items:
            enum:
              - job
            nullable: false
            type: string
            x-ms-enum:
              modelAsString: false
              name: AccessScope
              values:
                - description: >-
                    Grants access to perform all operations on the Job
                    containing the Task.
                  value: job
          title: The Batch resources to which the token grants access.
          type: array
      title: >-
        The settings for an authentication token that the Task can use to
        perform Batch service operations.
      type: object
    AutoPoolSpecification:
      properties:
        autoPoolIdPrefix:
          description: >-
            The Batch service assigns each auto Pool a unique identifier on
            creation. To distinguish between Pools created for different
            purposes, you can specify this element to add a prefix to the ID
            that is assigned. The prefix can be up to 20 characters long.
          title: >-
            A prefix to be added to the unique identifier when a Pool is
            automatically created.
          type: string
        keepAlive:
          description: >-
            If false, the Batch service deletes the Pool once its lifetime (as
            determined by the poolLifetimeOption setting) expires; that is, when
            the Job or Job Schedule completes. If true, the Batch service does
            not delete the Pool automatically. It is up to the user to delete
            auto Pools created with this option.
          title: Whether to keep an auto Pool alive after its lifetime expires.
          type: boolean
        pool:
          $ref: '#/components/schemas/PoolSpecification'
          title: The Pool specification for the auto Pool.
        poolLifetimeOption:
          enum:
            - jobschedule
            - job
          title: >-
            The minimum lifetime of created auto Pools, and how multiple Jobs on
            a schedule are assigned to Pools.
          type: string
          x-ms-enum:
            modelAsString: false
            name: PoolLifetimeOption
            values:
              - description: >-
                  The Pool exists for the lifetime of the Job Schedule. The
                  Batch Service creates the Pool when it creates the first Job
                  on the schedule. You may apply this option only to Job
                  Schedules, not to Jobs.
                name: jobSchedule
                value: jobschedule
              - description: >-
                  The Pool exists for the lifetime of the Job to which it is
                  dedicated. The Batch service creates the Pool when it creates
                  the Job. If the 'job' option is applied to a Job Schedule, the
                  Batch service creates a new auto Pool for every Job created on
                  the schedule.
                value: job
      required:
        - poolLifetimeOption
      title: >-
        Specifies characteristics for a temporary 'auto pool'. The Batch service
        will create this auto Pool when the Job is submitted.
      type: object
    AutoScaleRun:
      properties:
        error:
          $ref: '#/components/schemas/AutoScaleRunError'
          title: >-
            Details of the error encountered evaluating the autoscale formula on
            the Pool, if the evaluation was unsuccessful.
        results:
          description: >-
            Each variable value is returned in the form $variable=value, and
            variables are separated by semicolons.
          title: >-
            The final values of all variables used in the evaluation of the
            autoscale formula.
          type: string
        timestamp:
          format: date-time
          title: The time at which the autoscale formula was last evaluated.
          type: string
      required:
        - timestamp
      title: The results and errors from an execution of a Pool autoscale formula.
      type: object
    AutoScaleRunError:
      properties:
        code:
          title: >-
            An identifier for the autoscale error. Codes are invariant and are
            intended to be consumed programmatically.
          type: string
        message:
          title: >-
            A message describing the autoscale error, intended to be suitable
            for display in a user interface.
          type: string
        values:
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: A list of additional error details related to the autoscale error.
          type: array
      title: >-
        An error that occurred when executing or evaluating a Pool autoscale
        formula.
      type: object
    AutoUserSpecification:
      properties:
        elevationLevel:
          $ref: '#/components/schemas/ElevationLevel'
          description: The default value is nonAdmin.
          title: The elevation level of the auto user.
        scope:
          description: The default value is Task.
          enum:
            - task
            - pool
          title: The scope for the auto user
          type: string
          x-ms-enum:
            modelAsString: false
            name: AutoUserScope
            values:
              - description: >-
                  Specifies that the service should create a new user for the
                  Task.
                value: task
              - description: >-
                  Specifies that the Task runs as the common auto user Account
                  which is created on every Compute Node in a Pool.
                value: pool
      title: >-
        Specifies the parameters for the auto user that runs a Task on the Batch
        service.
      type: object
    BatchError:
      properties:
        code:
          title: >-
            An identifier for the error. Codes are invariant and are intended to
            be consumed programmatically.
          type: string
        message:
          $ref: '#/components/schemas/ErrorMessage'
          title: >-
            A message describing the error, intended to be suitable for display
            in a user interface.
        values:
          items:
            $ref: '#/components/schemas/BatchErrorDetail'
          title: >-
            A collection of key-value pairs containing additional details about
            the error.
          type: array
      title: An error response received from the Azure Batch service.
      type: object
    BatchErrorDetail:
      properties:
        key:
          title: An identifier specifying the meaning of the Value property.
          type: string
        value:
          title: The additional information included with the error response.
          type: string
      title: >-
        An item of additional information included in an Azure Batch error
        response.
      type: object
    CachingType:
      description: >-
        The default value for caching is none. For information about the caching
        options see:
        https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
      enum:
        - none
        - readonly
        - readwrite
      title: The type of caching to enable for the disk.
      type: string
      x-ms-enum:
        modelAsString: false
        name: CachingType
        values:
          - description: The caching mode for the disk is not enabled.
            value: none
          - description: The caching mode for the disk is read only.
            name: readOnly
            value: readonly
          - description: The caching mode for the disk is read and write.
            name: readWrite
            value: readwrite
    Certificate:
      description: >-
        A Certificate that can be installed on Compute Nodes and can be used to
        authenticate operations on the machine.
      properties:
        deleteCertificateError:
          $ref: '#/components/schemas/DeleteCertificateError'
          description: >-
            This property is set only if the Certificate is in the DeleteFailed
            state.
          title: >-
            The error that occurred on the last attempt to delete this
            Certificate.
        previousState:
          $ref: '#/components/schemas/CertificateState'
          description: >-
            This property is not set if the Certificate is in its initial active
            state.
          title: The previous state of the Certificate.
        previousStateTransitionTime:
          description: >-
            This property is not set if the Certificate is in its initial Active
            state.
          format: date-time
          title: The time at which the Certificate entered its previous state.
          type: string
        publicData:
          title: The public part of the Certificate as a base-64 encoded .cer file.
          type: string
        state:
          $ref: '#/components/schemas/CertificateState'
          title: The current state of the Certificate.
        stateTransitionTime:
          format: date-time
          title: The time at which the Certificate entered its current state.
          type: string
        thumbprint:
          title: >-
            The X.509 thumbprint of the Certificate. This is a sequence of up to
            40 hex digits.
          type: string
        thumbprintAlgorithm:
          title: The algorithm used to derive the thumbprint.
          type: string
        url:
          title: The URL of the Certificate.
          type: string
      type: object
    CertificateAddParameter:
      properties:
        certificateFormat:
          enum:
            - pfx
            - cer
          title: The format of the Certificate data.
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateFormat
            values:
              - description: >-
                  The Certificate is a PFX (PKCS#12) formatted Certificate or
                  Certificate chain.
                value: pfx
              - description: The Certificate is a base64-encoded X.509 Certificate.
                value: cer
        data:
          title: >-
            The base64-encoded contents of the Certificate. The maximum size is
            10KB.
          type: string
        password:
          description: >-
            This is required if the Certificate format is pfx. It should be
            omitted if the Certificate format is cer.
          title: The password to access the Certificate's private key.
          type: string
        thumbprint:
          title: >-
            The X.509 thumbprint of the Certificate. This is a sequence of up to
            40 hex digits (it may include spaces but these are removed).
          type: string
        thumbprintAlgorithm:
          title: The algorithm used to derive the thumbprint. This must be sha1.
          type: string
      required:
        - thumbprint
        - thumbprintAlgorithm
        - data
      title: >-
        A Certificate that can be installed on Compute Nodes and can be used to
        authenticate operations on the machine.
      type: object
    CertificateListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/Certificate'
          title: The list of Certificates.
          type: array
      title: The result of listing the Certificates in the Account.
      type: object
    CertificateReference:
      properties:
        storeLocation:
          description: >-
            The default value is currentuser. This property is applicable only
            for Pools configured with Windows Compute Nodes (that is, created
            with cloudServiceConfiguration, or with virtualMachineConfiguration
            using a Windows Image reference). For Linux Compute Nodes, the
            Certificates are stored in a directory inside the Task working
            directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
            supplied to the Task to query for this location. For Certificates
            with visibility of 'remoteUser', a 'certs' directory is created in
            the user's home directory (e.g., /home/{user-name}/certs) and
            Certificates are placed in that directory.
          enum:
            - currentuser
            - localmachine
          title: >-
            The location of the Certificate store on the Compute Node into which
            to install the Certificate.
          type: string
          x-ms-enum:
            modelAsString: false
            name: CertificateStoreLocation
            values:
              - description: >-
                  Certificates should be installed to the CurrentUser
                  Certificate store.
                name: currentUser
                value: currentuser
              - description: >-
                  Certificates should be installed to the LocalMachine
                  Certificate store.
                name: localMachine
                value: localmachine
        storeName:
          description: >-
            This property is applicable only for Pools configured with Windows
            Compute Nodes (that is, created with cloudServiceConfiguration, or
            with virtualMachineConfiguration using a Windows Image reference).
            Common store names include: My, Root, CA, Trust, Disallowed,
            TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any
            custom store name can also be used. The default value is My.
          title: >-
            The name of the Certificate store on the Compute Node into which to
            install the Certificate.
          type: string
        thumbprint:
          title: The thumbprint of the Certificate.
          type: string
        thumbprintAlgorithm:
          title: >-
            The algorithm with which the thumbprint is associated. This must be
            sha1.
          type: string
        visibility:
          description: >-
            You can specify more than one visibility in this collection. The
            default is all Accounts.
          items:
            enum:
              - starttask
              - task
              - remoteuser
            nullable: false
            type: string
            x-ms-enum:
              modelAsString: false
              name: CertificateVisibility
              values:
                - description: >-
                    The Certificate should be visible to the user Account under
                    which the start Task is run.
                  name: startTask
                  value: starttask
                - description: >-
                    The Certificate should be visible to the user Accounts under
                    which Job Tasks are run.
                  value: task
                - description: >-
                    The Certificate should be visible to the user Accounts under
                    which users remotely access the Compute Node.
                  name: remoteUser
                  value: remoteuser
          title: >-
            Which user Accounts on the Compute Node should have access to the
            private data of the Certificate.
          type: array
      required:
        - thumbprint
        - thumbprintAlgorithm
      title: A reference to a Certificate to be installed on Compute Nodes in a Pool.
      type: object
    CertificateState:
      enum:
        - active
        - deleting
        - deletefailed
      title: The state of the Certificate.
      type: string
      x-ms-enum:
        modelAsString: false
        name: CertificateState
        values:
          - description: The Certificate is available for use in Pools.
            value: active
          - description: >-
              The user has requested that the Certificate be deleted, but the
              delete operation has not yet completed. You may not reference the
              Certificate when creating or updating Pools.
            value: deleting
          - description: >-
              The user requested that the Certificate be deleted, but there are
              Pools that still have references to the Certificate, or it is
              still installed on one or more Nodes. (The latter can occur if the
              Certificate has been removed from the Pool, but the Compute Node
              has not yet restarted. Compute Nodes refresh their Certificates
              only when they restart.) You may use the cancel Certificate delete
              operation to cancel the delete, or the delete Certificate
              operation to retry the delete.
            name: deleteFailed
            value: deletefailed
    CloudJob:
      properties:
        commonEnvironmentSettings:
          description: >-
            Individual Tasks can override an environment setting specified here
            by specifying the same setting name with a different value.
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: >-
            The list of common environment variable settings. These environment
            variables are set for all Tasks in the Job (including the Job
            Manager, Job Preparation and Job Release Tasks).
          type: array
        constraints:
          $ref: '#/components/schemas/JobConstraints'
          title: The execution constraints for the Job.
        creationTime:
          format: date-time
          title: The creation time of the Job.
          type: string
        displayName:
          title: The display name for the Job.
          type: string
        eTag:
          description: >-
            This is an opaque string. You can use it to detect whether the Job
            has changed between requests. In particular, you can be pass the
            ETag when updating a Job to specify that your changes should take
            effect only if nobody else has modified the Job in the meantime.
          title: The ETag of the Job.
          type: string
        executionInfo:
          $ref: '#/components/schemas/JobExecutionInformation'
          title: The execution information for the Job.
        id:
          description: >-
            The ID is case-preserving and case-insensitive (that is, you may not
            have two IDs within an Account that differ only by case).
          title: A string that uniquely identifies the Job within the Account.
          type: string
        jobManagerTask:
          $ref: '#/components/schemas/JobManagerTask'
          title: >-
            Details of a Job Manager Task to be launched when the Job is
            started.
        jobPreparationTask:
          $ref: '#/components/schemas/JobPreparationTask'
          description: >-
            The Job Preparation Task is a special Task run on each Compute Node
            before any other Task of the Job.
          title: The Job Preparation Task.
        jobReleaseTask:
          $ref: '#/components/schemas/JobReleaseTask'
          description: >-
            The Job Release Task is a special Task run at the end of the Job on
            each Compute Node that has run any other Task of the Job.
          title: The Job Release Task.
        lastModified:
          description: >-
            This is the last time at which the Job level data, such as the Job
            state or priority, changed. It does not factor in task-level changes
            such as adding new Tasks or Tasks changing state.
          format: date-time
          title: The last modified time of the Job.
          type: string
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Job as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/JobNetworkConfiguration'
          title: The network configuration for the Job.
        onAllTasksComplete:
          $ref: '#/components/schemas/OnAllTasksComplete'
          description: The default is noaction.
          title: >-
            The action the Batch service should take when all Tasks in the Job
            are in the completed state.
        onTaskFailure:
          $ref: '#/components/schemas/OnTaskFailure'
          description: >-
            A Task is considered to have failed if has a failureInfo. A
            failureInfo is set if the Task completes with a non-zero exit code
            after exhausting its retry count, or if there was an error starting
            the Task, for example due to a resource file download error. The
            default is noaction.
          title: >-
            The action the Batch service should take when any Task in the Job
            fails.
        poolInfo:
          $ref: '#/components/schemas/PoolInformation'
          title: The Pool settings associated with the Job.
        previousState:
          $ref: '#/components/schemas/JobState'
          description: This property is not set if the Job is in its initial Active state.
          title: The previous state of the Job.
        previousStateTransitionTime:
          description: This property is not set if the Job is in its initial Active state.
          format: date-time
          title: The time at which the Job entered its previous state.
          type: string
        priority:
          description: >-
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0.
          format: int32
          title: The priority of the Job.
          type: integer
        state:
          $ref: '#/components/schemas/JobState'
          title: The current state of the Job.
        stateTransitionTime:
          format: date-time
          title: The time at which the Job entered its current state.
          type: string
        stats:
          $ref: '#/components/schemas/JobStatistics'
          description: >-
            This property is populated only if the CloudJob was retrieved with
            an expand clause including the 'stats' attribute; otherwise it is
            null. The statistics may not be immediately available. The Batch
            service performs periodic roll-up of statistics. The typical delay
            is about 30 minutes.
          title: Resource usage statistics for the entire lifetime of the Job.
        url:
          title: The URL of the Job.
          type: string
        usesTaskDependencies:
          title: >-
            Whether Tasks in the Job can define dependencies on each other. The
            default is false.
          type: boolean
      title: An Azure Batch Job.
      type: object
    CloudJobListPreparationAndReleaseTaskStatusResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: >-
              #/components/schemas/JobPreparationAndReleaseTaskExecutionInformation
          title: >-
            A list of Job Preparation and Job Release Task execution
            information.
          type: array
      title: >-
        The result of listing the status of the Job Preparation and Job Release
        Tasks for a Job.
      type: object
    CloudJobListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/CloudJob'
          title: The list of Jobs.
          type: array
      title: The result of listing the Jobs in an Account.
      type: object
    CloudJobSchedule:
      properties:
        creationTime:
          format: date-time
          title: The creation time of the Job Schedule.
          type: string
        displayName:
          title: The display name for the schedule.
          type: string
        eTag:
          description: >-
            This is an opaque string. You can use it to detect whether the Job
            Schedule has changed between requests. In particular, you can be
            pass the ETag with an Update Job Schedule request to specify that
            your changes should take effect only if nobody else has modified the
            schedule in the meantime.
          title: The ETag of the Job Schedule.
          type: string
        executionInfo:
          $ref: '#/components/schemas/JobScheduleExecutionInformation'
          title: >-
            Information about Jobs that have been and will be run under this
            schedule.
        id:
          title: A string that uniquely identifies the schedule within the Account.
          type: string
        jobSpecification:
          $ref: '#/components/schemas/JobSpecification'
          title: The details of the Jobs to be created on this schedule.
        lastModified:
          description: >-
            This is the last time at which the schedule level data, such as the
            Job specification or recurrence information, changed. It does not
            factor in job-level changes such as new Jobs being created or Jobs
            changing state.
          format: date-time
          title: The last modified time of the Job Schedule.
          type: string
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the schedule as metadata.
          type: array
        previousState:
          $ref: '#/components/schemas/JobScheduleState'
          description: >-
            This property is not present if the Job Schedule is in its initial
            active state.
          title: The previous state of the Job Schedule.
        previousStateTransitionTime:
          description: >-
            This property is not present if the Job Schedule is in its initial
            active state.
          format: date-time
          title: The time at which the Job Schedule entered its previous state.
          type: string
        schedule:
          $ref: '#/components/schemas/Schedule'
          title: The schedule according to which Jobs will be created.
        state:
          $ref: '#/components/schemas/JobScheduleState'
          title: The current state of the Job Schedule.
        stateTransitionTime:
          format: date-time
          title: The time at which the Job Schedule entered the current state.
          type: string
        stats:
          $ref: '#/components/schemas/JobScheduleStatistics'
          title: >-
            The lifetime resource usage statistics for the Job Schedule. The
            statistics may not be immediately available. The Batch service
            performs periodic roll-up of statistics. The typical delay is about
            30 minutes.
        url:
          title: The URL of the Job Schedule.
          type: string
      title: >-
        A Job Schedule that allows recurring Jobs by specifying when to run Jobs
        and a specification used to create each Job.
      type: object
    CloudJobScheduleListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/CloudJobSchedule'
          title: The list of Job Schedules.
          type: array
      title: The result of listing the Job Schedules in an Account.
      type: object
    CloudPool:
      properties:
        allocationState:
          enum:
            - steady
            - resizing
            - stopping
          title: Whether the Pool is resizing.
          type: string
          x-ms-enum:
            modelAsString: false
            name: AllocationState
            values:
              - description: >-
                  The Pool is not resizing. There are no changes to the number
                  of Compute Nodes in the Pool in progress. A Pool enters this
                  state when it is created and when no operations are being
                  performed on the Pool to change the number of Compute Nodes.
                value: steady
              - description: >-
                  The Pool is resizing; that is, Compute Nodes are being added
                  to or removed from the Pool.
                value: resizing
              - description: >-
                  The Pool was resizing, but the user has requested that the
                  resize be stopped, but the stop request has not yet been
                  completed.
                value: stopping
        allocationStateTransitionTime:
          format: date-time
          title: The time at which the Pool entered its current allocation state.
          type: string
        applicationLicenses:
          description: >-
            The list of application licenses must be a subset of available Batch
            service application licenses. If a license is requested which is not
            supported, Pool creation will fail.
          items:
            type: string
          title: >-
            The list of application licenses the Batch service will make
            available on each Compute Node in the Pool.
          type: array
        applicationPackageReferences:
          description: >-
            Changes to Package references affect all new Nodes joining the Pool,
            but do not affect Compute Nodes that are already in the Pool until
            they are rebooted or reimaged. There is a maximum of 10 Package
            references on any given Pool.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            The list of Packages to be installed on each Compute Node in the
            Pool.
          type: array
        autoScaleEvaluationInterval:
          description: >-
            This property is set only if the Pool automatically scales, i.e.
            enableAutoScale is true.
          format: duration
          title: >-
            The time interval at which to automatically adjust the Pool size
            according to the autoscale formula.
          type: string
        autoScaleFormula:
          description: >-
            This property is set only if the Pool automatically scales, i.e.
            enableAutoScale is true.
          title: A formula for the desired number of Compute Nodes in the Pool.
          type: string
        autoScaleRun:
          $ref: '#/components/schemas/AutoScaleRun'
          description: >-
            This property is set only if the Pool automatically scales, i.e.
            enableAutoScale is true.
          title: >-
            The results and errors from the last execution of the autoscale
            formula.
        certificateReferences:
          description: >-
            For Windows Nodes, the Batch service installs the Certificates to
            the specified Certificate store and location. For Linux Compute
            Nodes, the Certificates are stored in a directory inside the Task
            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
            location. For Certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and Certificates are placed in that
            directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: >-
            The list of Certificates to be installed on each Compute Node in the
            Pool.
          type: array
        cloudServiceConfiguration:
          $ref: '#/components/schemas/CloudServiceConfiguration'
          description: >-
            This property and virtualMachineConfiguration are mutually exclusive
            and one of the properties must be specified. This property cannot be
            specified if the Batch Account was created with its
            poolAllocationMode property set to 'UserSubscription'.
          title: The cloud service configuration for the Pool.
        creationTime:
          format: date-time
          title: The creation time of the Pool.
          type: string
        currentDedicatedNodes:
          format: int32
          title: The number of dedicated Compute Nodes currently in the Pool.
          type: integer
        currentLowPriorityNodes:
          description: >-
            Low-priority Compute Nodes which have been preempted are included in
            this count.
          format: int32
          title: The number of low-priority Compute Nodes currently in the Pool.
          type: integer
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: The display name for the Pool.
          type: string
        eTag:
          description: >-
            This is an opaque string. You can use it to detect whether the Pool
            has changed between requests. In particular, you can be pass the
            ETag when updating a Pool to specify that your changes should take
            effect only if nobody else has modified the Pool in the meantime.
          title: The ETag of the Pool.
          type: string
        enableAutoScale:
          description: >-
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula property is required and the Pool automatically
            resizes according to the formula. The default value is false.
          title: Whether the Pool size should automatically adjust over time.
          type: boolean
        enableInterNodeCommunication:
          description: >-
            This imposes restrictions on which Compute Nodes can be assigned to
            the Pool. Specifying this value can reduce the chance of the
            requested number of Compute Nodes to be allocated in the Pool.
          title: Whether the Pool permits direct communication between Compute Nodes.
          type: boolean
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that is,
            you may not have two IDs within an Account that differ only by
            case).
          title: A string that uniquely identifies the Pool within the Account.
          type: string
        lastModified:
          description: >-
            This is the last time at which the Pool level data, such as the
            targetDedicatedNodes or enableAutoscale settings, changed. It does
            not factor in node-level changes such as a Compute Node changing
            state.
          format: date-time
          title: The last modified time of the Pool.
          type: string
        maxTasksPerNode:
          description: >-
            The default value is 1. The maximum value is the smaller of 4 times
            the number of cores of the vmSize of the Pool or 256.
          format: int32
          title: >-
            The maximum number of Tasks that can run concurrently on a single
            Compute Node in the Pool.
          type: integer
        metadata:
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Pool as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          title: The network configuration for the Pool.
        resizeErrors:
          description: >-
            This property is set only if one or more errors occurred during the
            last Pool resize, and only when the Pool allocationState is Steady.
          items:
            $ref: '#/components/schemas/ResizeError'
          title: >-
            A list of errors encountered while performing the last resize on the
            Pool.
          type: array
        resizeTimeout:
          description: >-
            This is the timeout for the most recent resize operation. (The
            initial sizing when the Pool is created counts as a resize.) The
            default value is 15 minutes.
          format: duration
          title: The timeout for allocation of Compute Nodes to the Pool.
          type: string
        startTask:
          $ref: '#/components/schemas/StartTask'
          title: A Task specified to run on each Compute Node as it joins the Pool.
        state:
          enum:
            - active
            - deleting
          title: The current state of the Pool.
          type: string
          x-ms-enum:
            modelAsString: false
            name: PoolState
            values:
              - description: >-
                  The Pool is available to run Tasks subject to the availability
                  of Compute Nodes.
                value: active
              - description: >-
                  The user has requested that the Pool be deleted, but the
                  delete operation has not yet completed.
                value: deleting
        stateTransitionTime:
          format: date-time
          title: The time at which the Pool entered its current state.
          type: string
        stats:
          $ref: '#/components/schemas/PoolStatistics'
          description: >-
            This property is populated only if the CloudPool was retrieved with
            an expand clause including the 'stats' attribute; otherwise it is
            null. The statistics may not be immediately available. The Batch
            service performs periodic roll-up of statistics. The typical delay
            is about 30 minutes.
          title: >-
            Utilization and resource usage statistics for the entire lifetime of
            the Pool.
        targetDedicatedNodes:
          format: int32
          title: The desired number of dedicated Compute Nodes in the Pool.
          type: integer
        targetLowPriorityNodes:
          format: int32
          title: The desired number of low-priority Compute Nodes in the Pool.
          type: integer
        taskSchedulingPolicy:
          $ref: '#/components/schemas/TaskSchedulingPolicy'
          description: 'If not specified, the default is spread.'
          title: How Tasks are distributed across Compute Nodes in a Pool.
        url:
          title: The URL of the Pool.
          type: string
        userAccounts:
          items:
            $ref: '#/components/schemas/UserAccount'
          title: >-
            The list of user Accounts to be created on each Compute Node in the
            Pool.
          type: array
        virtualMachineConfiguration:
          $ref: '#/components/schemas/VirtualMachineConfiguration'
          description: >-
            This property and cloudServiceConfiguration are mutually exclusive
            and one of the properties must be specified.
          title: The virtual machine configuration for the Pool.
        vmSize:
          description: >-
            For information about available sizes of virtual machines in Pools,
            see Choose a VM size for Compute Nodes in an Azure Batch Pool
            (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
          title: >-
            The size of virtual machines in the Pool. All virtual machines in a
            Pool are the same size.
          type: string
      title: A Pool in the Azure Batch service.
      type: object
    CloudPoolListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/CloudPool'
          title: The list of Pools.
          type: array
      title: The result of listing the Pools in an Account.
      type: object
    CloudServiceConfiguration:
      properties:
        osFamily:
          description: >-
            Possible values are:

            2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1.

            3 - OS Family 3, equivalent to Windows Server 2012.

            4 - OS Family 4, equivalent to Windows Server 2012 R2.

            5 - OS Family 5, equivalent to Windows Server 2016.

            6 - OS Family 6, equivalent to Windows Server 2019. For more
            information, see Azure Guest OS Releases
            (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
          title: >-
            The Azure Guest OS family to be installed on the virtual machines in
            the Pool.
          type: string
        osVersion:
          description: >-
            The default value is * which specifies the latest operating system
            version for the specified OS family.
          title: >-
            The Azure Guest OS version to be installed on the virtual machines
            in the Pool.
          type: string
      required:
        - osFamily
      title: >-
        The configuration for Compute Nodes in a Pool based on the Azure Cloud
        Services platform.
      type: object
    CloudTask:
      description: >-
        Batch will retry Tasks when a recovery operation is triggered on a Node.
        Examples of recovery operations include (but are not limited to) when an
        unhealthy Node is rebooted or a Compute Node disappeared due to host
        failure. Retries due to recovery operations are independent of and are
        not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount
        is 0, an internal retry due to a recovery operation may occur. Because
        of this, all Tasks should be idempotent. This means Tasks need to
        tolerate being interrupted and restarted without causing any corruption
        or duplicate data. The best practice for long running Tasks is to use
        some form of checkpointing.
      properties:
        affinityInfo:
          $ref: '#/components/schemas/AffinityInformation'
          title: >-
            A locality hint that can be used by the Batch service to select a
            Compute Node on which to start the new Task.
        applicationPackageReferences:
          description: >-
            Application packages are downloaded and deployed to a shared
            directory, not the Task working directory. Therefore, if a
            referenced package is already on the Node, and is up to date, then
            it is not re-downloaded; the existing copy on the Compute Node is
            used. If a referenced Package cannot be installed, for example
            because the package has been deleted or because download failed, the
            Task fails.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            A list of Packages that the Batch service will deploy to the Compute
            Node before running the command line.
          type: array
        authenticationTokenSettings:
          $ref: '#/components/schemas/AuthenticationTokenSettings'
          description: >-
            If this property is set, the Batch service provides the Task with an
            authentication token which can be used to authenticate Batch service
            operations without requiring an Account access key. The token is
            provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable.
            The operations that the Task can carry out using the token depend on
            the settings. For example, a Task can request Job permissions in
            order to add other Tasks to the Job, or check the status of the Job
            or of other Tasks under the Job.
          title: >-
            The settings for an authentication token that the Task can use to
            perform Batch service operations.
        commandLine:
          description: >-
            For multi-instance Tasks, the command line is executed as the
            primary Task, after the primary Task and all subtasks have finished
            executing the coordination command line. The command line does not
            run under a shell, and therefore cannot take advantage of shell
            features such as environment variable expansion. If you want to take
            advantage of such features, you should invoke the shell in the
            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c MyCommand" in Linux. If the command line refers to file
            paths, it should use a relative path (relative to the Task working
            directory), or use the Batch provided environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the Task.
          type: string
        constraints:
          $ref: '#/components/schemas/TaskConstraints'
          title: The execution constraints that apply to this Task.
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            If the Pool that will run this Task has containerConfiguration set,
            this must be set as well. If the Pool that will run this Task
            doesn't have containerConfiguration set, this must not be set. When
            this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: The settings for the container under which the Task runs.
        creationTime:
          format: date-time
          title: The creation time of the Task.
          type: string
        dependsOn:
          $ref: '#/components/schemas/TaskDependencies'
          description: >-
            This Task will not be scheduled until all Tasks that it depends on
            have completed successfully. If any of those Tasks fail and exhaust
            their retry counts, this Task will never be scheduled.
          title: The Tasks that this Task depends on.
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: A display name for the Task.
          type: string
        eTag:
          description: >-
            This is an opaque string. You can use it to detect whether the Task
            has changed between requests. In particular, you can be pass the
            ETag when updating a Task to specify that your changes should take
            effect only if nobody else has modified the Task in the meantime.
          title: The ETag of the Task.
          type: string
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: A list of environment variable settings for the Task.
          type: array
        executionInfo:
          $ref: '#/components/schemas/TaskExecutionInformation'
          title: Information about the execution of the Task.
        exitConditions:
          $ref: '#/components/schemas/ExitConditions'
          description: How the Batch service should respond when the Task completes.
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters.
          title: A string that uniquely identifies the Task within the Job.
          type: string
        lastModified:
          format: date-time
          title: The last modified time of the Task.
          type: string
        multiInstanceSettings:
          $ref: '#/components/schemas/MultiInstanceSettings'
          title: >-
            An object that indicates that the Task is a multi-instance Task, and
            contains information about how to run the multi-instance Task.
        nodeInfo:
          $ref: '#/components/schemas/ComputeNodeInformation'
          title: Information about the Compute Node on which the Task ran.
        outputFiles:
          description: >-
            For multi-instance Tasks, the files will only be uploaded from the
            Compute Node on which the primary Task is executed.
          items:
            $ref: '#/components/schemas/OutputFile'
          title: >-
            A list of files that the Batch service will upload from the Compute
            Node after running the command line.
          type: array
        previousState:
          $ref: '#/components/schemas/TaskState'
          description: This property is not set if the Task is in its initial Active state.
          title: The previous state of the Task.
        previousStateTransitionTime:
          description: This property is not set if the Task is in its initial Active state.
          format: date-time
          title: The time at which the Task entered its previous state.
          type: string
        resourceFiles:
          description: >-
            For multi-instance Tasks, the resource files will only be downloaded
            to the Compute Node on which the primary Task is executed. There is
            a maximum size for the list of resource files.  When the max size is
            exceeded, the request will fail and the response error code will be
            RequestEntityTooLarge. If this occurs, the collection of
            ResourceFiles must be reduced in size. This can be achieved using
            .zip files, Application Packages, or Docker Containers.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.
          type: array
        state:
          $ref: '#/components/schemas/TaskState'
          title: The current state of the Task.
        stateTransitionTime:
          format: date-time
          title: The time at which the Task entered its current state.
          type: string
        stats:
          $ref: '#/components/schemas/TaskStatistics'
          title: Resource usage statistics for the Task.
        url:
          title: The URL of the Task.
          type: string
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task.
          title: The user identity under which the Task runs.
      title: An Azure Batch Task.
      type: object
    CloudTaskListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/CloudTask'
          title: The list of Tasks.
          type: array
      title: The result of listing the Tasks in a Job.
      type: object
    CloudTaskListSubtasksResult:
      properties:
        value:
          items:
            $ref: '#/components/schemas/SubtaskInformation'
          title: The list of subtasks.
          type: array
      title: The result of listing the subtasks of a Task.
      type: object
    ComputeNode:
      properties:
        affinityId:
          description: >-
            Note that this is just a soft affinity. If the target Compute Node
            is busy or unavailable at the time the Task is scheduled, then the
            Task will be scheduled elsewhere.
          title: >-
            An identifier which can be passed when adding a Task to request that
            the Task be scheduled on this Compute Node.
          type: string
        allocationTime:
          description: >-
            This is the time when the Compute Node was initially allocated and
            doesn't change once set. It is not updated when the Compute Node is
            service healed or preempted.
          format: date-time
          title: The time at which this Compute Node was allocated to the Pool.
          type: string
        certificateReferences:
          description: >-
            For Windows Nodes, the Batch service installs the Certificates to
            the specified Certificate store and location. For Linux Compute
            Nodes, the Certificates are stored in a directory inside the Task
            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
            location. For Certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and Certificates are placed in that
            directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: The list of Certificates installed on the Compute Node.
          type: array
        endpointConfiguration:
          $ref: '#/components/schemas/ComputeNodeEndpointConfiguration'
          title: The endpoint configuration for the Compute Node.
        errors:
          items:
            $ref: '#/components/schemas/ComputeNodeError'
          title: >-
            The list of errors that are currently being encountered by the
            Compute Node.
          type: array
        id:
          description: >-
            Every Compute Node that is added to a Pool is assigned a unique ID.
            Whenever a Compute Node is removed from a Pool, all of its local
            files are deleted, and the ID is reclaimed and could be reused for
            new Compute Nodes.
          title: The ID of the Compute Node.
          type: string
        ipAddress:
          description: >-
            Every Compute Node that is added to a Pool is assigned a unique IP
            address. Whenever a Compute Node is removed from a Pool, all of its
            local files are deleted, and the IP address is reclaimed and could
            be reused for new Compute Nodes.
          title: >-
            The IP address that other Nodes can use to communicate with this
            Compute Node.
          type: string
        isDedicated:
          title: >-
            Whether this Compute Node is a dedicated Compute Node. If false, the
            Compute Node is a low-priority Compute Node.
          type: boolean
        lastBootTime:
          description: >-
            This property may not be present if the Compute Node state is
            unusable.
          format: date-time
          title: The last time at which the Compute Node was started.
          type: string
        nodeAgentInfo:
          $ref: '#/components/schemas/NodeAgentInformation'
          title: >-
            Information about the Compute Node agent version and the time the
            Compute Node upgraded to a new version.
        recentTasks:
          description: >-
            This property is present only if at least one Task has run on this
            Compute Node since it was assigned to the Pool.
          items:
            $ref: '#/components/schemas/TaskInformation'
          title: A list of Tasks whose state has recently changed.
          type: array
        runningTasksCount:
          format: int32
          title: >-
            The total number of currently running Job Tasks on the Compute Node.
            This includes Job Manager Tasks and normal Tasks, but not Job
            Preparation, Job Release or Start Tasks.
          type: integer
        schedulingState:
          enum:
            - enabled
            - disabled
          title: Whether the Compute Node is available for Task scheduling.
          type: string
          x-ms-enum:
            modelAsString: false
            name: SchedulingState
            values:
              - description: Tasks can be scheduled on the Compute Node.
                value: enabled
              - description: >-
                  No new Tasks will be scheduled on the Compute Node. Tasks
                  already running on the Compute Node may still run to
                  completion. All Compute Nodes start with scheduling enabled.
                value: disabled
        startTask:
          $ref: '#/components/schemas/StartTask'
          title: The Task specified to run on the Compute Node as it joins the Pool.
        startTaskInfo:
          $ref: '#/components/schemas/StartTaskInformation'
          title: >-
            Runtime information about the execution of the start Task on the
            Compute Node.
        state:
          description: >-
            The low-priority Compute Node has been preempted. Tasks which were
            running on the Compute Node when it was preempted will be
            rescheduled when another Compute Node becomes available.
          enum:
            - idle
            - rebooting
            - reimaging
            - running
            - unusable
            - creating
            - starting
            - waitingforstarttask
            - starttaskfailed
            - unknown
            - leavingpool
            - offline
            - preempted
          title: The current state of the Compute Node.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeState
            values:
              - description: The Compute Node is not currently running a Task.
                value: idle
              - description: The Compute Node is rebooting.
                value: rebooting
              - description: The Compute Node is reimaging.
                value: reimaging
              - description: >-
                  The Compute Node is running one or more Tasks (other than a
                  start task).
                value: running
              - description: >-
                  The Compute Node cannot be used for Task execution due to
                  errors.
                value: unusable
              - description: >-
                  The Batch service has obtained the underlying virtual machine
                  from Azure Compute, but it has not yet started to join the
                  Pool.
                value: creating
              - description: >-
                  The Batch service is starting on the underlying virtual
                  machine.
                value: starting
              - description: >-
                  The start Task has started running on the Compute Node, but
                  waitForSuccess is set and the start Task has not yet
                  completed.
                name: waitingForStartTask
                value: waitingforstarttask
              - description: >-
                  The start Task has failed on the Compute Node (and exhausted
                  all retries), and waitForSuccess is set. The Compute Node is
                  not usable for running Tasks.
                name: startTaskFailed
                value: starttaskfailed
              - description: >-
                  The Batch service has lost contact with the Compute Node, and
                  does not know its true state.
                value: unknown
              - description: >-
                  The Compute Node is leaving the Pool, either because the user
                  explicitly removed it or because the Pool is resizing or
                  autoscaling down.
                name: leavingPool
                value: leavingpool
              - description: >-
                  The Compute Node is not currently running a Task, and
                  scheduling of new Tasks to the Compute Node is disabled.
                value: offline
              - description: >-
                  The low-priority Compute Node has been preempted. Tasks which
                  were running on the Compute Node when it was preempted will be
                  rescheduled when another Compute Node becomes available.
                value: preempted
        stateTransitionTime:
          format: date-time
          title: The time at which the Compute Node entered its current state.
          type: string
        totalTasksRun:
          format: int32
          title: >-
            The total number of Job Tasks completed on the Compute Node. This
            includes Job Manager Tasks and normal Tasks, but not Job
            Preparation, Job Release or Start Tasks.
          type: integer
        totalTasksSucceeded:
          format: int32
          title: >-
            The total number of Job Tasks which completed successfully (with
            exitCode 0) on the Compute Node. This includes Job Manager Tasks and
            normal Tasks, but not Job Preparation, Job Release or Start Tasks.
          type: integer
        url:
          title: The URL of the Compute Node.
          type: string
        vmSize:
          description: >-
            For information about available sizes of virtual machines in Pools,
            see Choose a VM size for Compute Nodes in an Azure Batch Pool
            (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
          title: The size of the virtual machine hosting the Compute Node.
          type: string
      title: A Compute Node in the Batch service.
      type: object
    ComputeNodeDeallocationOption:
      description: The default value is requeue.
      enum:
        - requeue
        - terminate
        - taskcompletion
        - retaineddata
      title: >-
        Determines what to do with a Compute Node and its running task(s) after
        it has been selected for deallocation.
      type: string
      x-ms-enum:
        modelAsString: false
        name: ComputeNodeDeallocationOption
        values:
          - description: >-
              Terminate running Task processes and requeue the Tasks. The Tasks
              will run again when a Compute Node is available. Remove Compute
              Nodes as soon as Tasks have been terminated.
            value: requeue
          - description: >-
              Terminate running Tasks. The Tasks will be completed with
              failureInfo indicating that they were terminated, and will not run
              again. Remove Compute Nodes as soon as Tasks have been terminated.
            value: terminate
          - description: >-
              Allow currently running Tasks to complete. Schedule no new Tasks
              while waiting. Remove Compute Nodes when all Tasks have completed.
            name: taskCompletion
            value: taskcompletion
          - description: >-
              Allow currently running Tasks to complete, then wait for all Task
              data retention periods to expire. Schedule no new Tasks while
              waiting. Remove Compute Nodes when all Task retention periods have
              expired.
            name: retainedData
            value: retaineddata
    ComputeNodeEndpointConfiguration:
      properties:
        inboundEndpoints:
          items:
            $ref: '#/components/schemas/InboundEndpoint'
          title: >-
            The list of inbound endpoints that are accessible on the Compute
            Node.
          type: array
      required:
        - inboundEndpoints
      title: The endpoint configuration for the Compute Node.
      type: object
    ComputeNodeError:
      properties:
        code:
          title: >-
            An identifier for the Compute Node error. Codes are invariant and
            are intended to be consumed programmatically.
          type: string
        errorDetails:
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: >-
            The list of additional error details related to the Compute Node
            error.
          type: array
        message:
          title: >-
            A message describing the Compute Node error, intended to be suitable
            for display in a user interface.
          type: string
      title: An error encountered by a Compute Node.
      type: object
    ComputeNodeGetRemoteLoginSettingsResult:
      properties:
        remoteLoginIPAddress:
          title: The IP address used for remote login to the Compute Node.
          type: string
        remoteLoginPort:
          format: int32
          title: The port used for remote login to the Compute Node.
          type: integer
      required:
        - remoteLoginIPAddress
        - remoteLoginPort
      title: The remote login settings for a Compute Node.
      type: object
    ComputeNodeInformation:
      properties:
        affinityId:
          title: >-
            An identifier for the Node on which the Task ran, which can be
            passed when adding a Task to request that the Task be scheduled on
            this Compute Node.
          type: string
        nodeId:
          title: The ID of the Compute Node on which the Task ran.
          type: string
        nodeUrl:
          title: 'The URL of the Compute Node on which the Task ran. '
          type: string
        poolId:
          title: The ID of the Pool on which the Task ran.
          type: string
        taskRootDirectory:
          title: The root directory of the Task on the Compute Node.
          type: string
        taskRootDirectoryUrl:
          title: The URL to the root directory of the Task on the Compute Node.
          type: string
      title: Information about the Compute Node on which a Task ran.
      type: object
    ComputeNodeListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/ComputeNode'
          title: The list of Compute Nodes.
          type: array
      title: The result of listing the Compute Nodes in a Pool.
      type: object
    ComputeNodeUser:
      properties:
        expiryTime:
          description: >-
            If omitted, the default is 1 day from the current time. For Linux
            Compute Nodes, the expiryTime has a precision up to a day.
          format: date-time
          title: The time at which the Account should expire.
          type: string
        isAdmin:
          description: The default value is false.
          title: Whether the Account should be an administrator on the Compute Node.
          type: boolean
        name:
          title: The user name of the Account.
          type: string
        password:
          description: >-
            The password is required for Windows Compute Nodes (those created
            with 'cloudServiceConfiguration', or created with
            'virtualMachineConfiguration' using a Windows Image reference). For
            Linux Compute Nodes, the password can optionally be specified along
            with the sshPublicKey property.
          title: The password of the Account.
          type: string
        sshPublicKey:
          description: >-
            The public key should be compatible with OpenSSH encoding and should
            be base 64 encoded. This property can be specified only for Linux
            Compute Nodes. If this is specified for a Windows Compute Node, then
            the Batch service rejects the request; if you are calling the REST
            API directly, the HTTP status code is 400 (Bad Request).
          title: >-
            The SSH public key that can be used for remote login to the Compute
            Node.
          type: string
      required:
        - name
      title: A user Account for RDP or SSH access on a Compute Node.
      type: object
    ContainerConfiguration:
      properties:
        containerImageNames:
          description: >-
            This is the full Image reference, as would be specified to "docker
            pull". An Image will be sourced from the default Docker registry
            unless the Image is fully qualified with an alternative registry.
          items:
            type: string
          title: The collection of container Image names.
          type: array
        containerRegistries:
          description: >-
            If any Images must be downloaded from a private registry which
            requires credentials, then those credentials must be provided here.
          items:
            $ref: '#/components/schemas/ContainerRegistry'
          title: Additional private registries from which containers can be pulled.
          type: array
        type:
          enum:
            - dockerCompatible
          title: The container technology to be used.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerType
            values:
              - description: >-
                  A Docker compatible container technology will be used to
                  launch the containers.
                value: dockerCompatible
      required:
        - type
      title: The configuration for container-enabled Pools.
      type: object
    ContainerRegistry:
      properties:
        password:
          title: The password to log into the registry server.
          type: string
        registryServer:
          description: 'If omitted, the default is "docker.io".'
          title: The registry URL.
          type: string
        username:
          title: The user name to log into the registry server.
          type: string
          x-ms-client-name: userName
      required:
        - username
        - password
      title: A private container registry.
      type: object
    DataDisk:
      properties:
        caching:
          $ref: '#/components/schemas/CachingType'
          description: >-
            The default value for caching is readwrite. For information about
            the caching options see:
            https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
          title: The type of caching to be enabled for the data disks.
        diskSizeGB:
          format: int32
          title: The initial disk size in gigabytes.
          type: integer
        lun:
          description: >-
            The lun is used to uniquely identify each data disk. If attaching
            multiple disks, each should have a distinct lun.
          format: int32
          title: The logical unit number.
          type: integer
        storageAccountType:
          $ref: '#/components/schemas/StorageAccountType'
          description: 'If omitted, the default is "standard_lrs".'
          title: The storage Account type to be used for the data disk.
      required:
        - lun
        - diskSizeGB
      title: >-
        Settings which will be used by the data disks associated to Compute
        Nodes in the Pool.
      type: object
    DeleteCertificateError:
      properties:
        code:
          title: >-
            An identifier for the Certificate deletion error. Codes are
            invariant and are intended to be consumed programmatically.
          type: string
        message:
          title: >-
            A message describing the Certificate deletion error, intended to be
            suitable for display in a user interface.
          type: string
        values:
          description: >-
            This list includes details such as the active Pools and Compute
            Nodes referencing this Certificate. However, if a large number of
            resources reference the Certificate, the list contains only about
            the first hundred.
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: >-
            A list of additional error details related to the Certificate
            deletion error.
          type: array
      title: An error encountered by the Batch service when deleting a Certificate.
      type: object
    ElevationLevel:
      enum:
        - nonadmin
        - admin
      title: The elevation level of the user.
      type: string
      x-ms-enum:
        modelAsString: false
        name: ElevationLevel
        values:
          - description: The user is a standard user without elevated access.
            name: nonAdmin
            value: nonadmin
          - description: >-
              The user is a user with elevated access and operates with full
              Administrator permissions.
            value: admin
    EnvironmentSetting:
      properties:
        name:
          title: The name of the environment variable.
          type: string
        value:
          title: The value of the environment variable.
          type: string
      required:
        - name
      title: An environment variable to be set on a Task process.
      type: object
    ErrorCategory:
      enum:
        - usererror
        - servererror
      title: The category of the error.
      type: string
      x-ms-enum:
        modelAsString: false
        name: ErrorCategory
        values:
          - description: 'The error is due to a user issue, such as misconfiguration.'
            name: userError
            value: usererror
          - description: The error is due to an internal server issue.
            name: serverError
            value: servererror
    ErrorMessage:
      properties:
        lang:
          title: The language code of the error message
          type: string
        value:
          title: The text of the message.
          type: string
      title: An error message received in an Azure Batch error response.
      type: object
    ExitCodeMapping:
      properties:
        code:
          format: int32
          title: A process exit code.
          type: integer
        exitOptions:
          $ref: '#/components/schemas/ExitOptions'
          title: >-
            How the Batch service should respond if the Task exits with this
            exit code.
      required:
        - code
        - exitOptions
      title: >-
        How the Batch service should respond if a Task exits with a particular
        exit code.
      type: object
    ExitCodeRangeMapping:
      properties:
        end:
          format: int32
          title: The last exit code in the range.
          type: integer
        exitOptions:
          $ref: '#/components/schemas/ExitOptions'
          title: >-
            How the Batch service should respond if the Task exits with an exit
            code in the range start to end (inclusive).
        start:
          format: int32
          title: The first exit code in the range.
          type: integer
      required:
        - start
        - end
        - exitOptions
      title: >-
        A range of exit codes and how the Batch service should respond to exit
        codes within that range.
      type: object
    ExitConditions:
      properties:
        default:
          $ref: '#/components/schemas/ExitOptions'
          description: >-
            This value is used if the Task exits with any nonzero exit code not
            listed in the exitCodes or exitCodeRanges collection, with a
            pre-processing error if the preProcessingError property is not
            present, or with a file upload error if the fileUploadError property
            is not present. If you want non-default behavior on exit code 0, you
            must list it explicitly using the exitCodes or exitCodeRanges
            collection.
          title: >-
            How the Batch service should respond if the Task fails with an exit
            condition not covered by any of the other properties.
        exitCodeRanges:
          items:
            $ref: '#/components/schemas/ExitCodeRangeMapping'
          title: >-
            A list of Task exit code ranges and how the Batch service should
            respond to them.
          type: array
        exitCodes:
          items:
            $ref: '#/components/schemas/ExitCodeMapping'
          title: >-
            A list of individual Task exit codes and how the Batch service
            should respond to them.
          type: array
        fileUploadError:
          $ref: '#/components/schemas/ExitOptions'
          description: >-
            If the Task exited with an exit code that was specified via
            exitCodes or exitCodeRanges, and then encountered a file upload
            error, then the action specified by the exit code takes precedence.
          title: How the Batch service should respond if a file upload error occurs.
        preProcessingError:
          $ref: '#/components/schemas/ExitOptions'
          title: >-
            How the Batch service should respond if the Task fails to start due
            to an error.
      title: Specifies how the Batch service should respond when the Task completes.
      type: object
    ExitOptions:
      properties:
        dependencyAction:
          description: >-
            The default is 'satisfy' for exit code 0, and 'block' for all other
            exit conditions. If the Job's usesTaskDependencies property is set
            to false, then specifying the dependencyAction property returns an
            error and the add Task request fails with an invalid property value
            error; if you are calling the REST API directly, the HTTP status
            code is 400  (Bad Request).
          enum:
            - satisfy
            - block
          title: >-
            An action that the Batch service performs on Tasks that depend on
            this Task.
          type: string
          x-ms-enum:
            modelAsString: false
            name: DependencyAction
            values:
              - description: Satisfy the Task's dependencies.
                value: satisfy
              - description: Block the Task's dependencies.
                value: block
        jobAction:
          description: >-
            The default is none for exit code 0 and terminate for all other exit
            conditions. If the Job's onTaskFailed property is noaction, then
            specifying this property returns an error and the add Task request
            fails with an invalid property value error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
          enum:
            - none
            - disable
            - terminate
          title: >-
            An action to take on the Job containing the Task, if the Task
            completes with the given exit condition and the Job's onTaskFailed
            property is 'performExitOptionsJobAction'.
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobAction
            values:
              - description: Take no action.
                value: none
              - description: >-
                  Disable the Job. This is equivalent to calling the disable Job
                  API, with a disableTasks value of requeue.
                value: disable
              - description: >-
                  Terminate the Job. The terminateReason in the Job's
                  executionInfo is set to "TaskFailed".
                value: terminate
      title: Specifies how the Batch service responds to a particular exit condition.
      type: object
    FileProperties:
      properties:
        contentLength:
          format: int64
          title: The length of the file.
          type: integer
        contentType:
          title: The content type of the file.
          type: string
        creationTime:
          description: The creation time is not returned for files on Linux Compute Nodes.
          format: date-time
          title: The file creation time.
          type: string
        fileMode:
          description: The file mode is returned only for files on Linux Compute Nodes.
          title: The file mode attribute in octal format.
          type: string
        lastModified:
          format: date-time
          title: The time at which the file was last modified.
          type: string
      required:
        - lastModified
        - contentLength
      title: The properties of a file on a Compute Node.
      type: object
    ImageInformation:
      properties:
        batchSupportEndOfLife:
          format: date-time
          title: >-
            The time when the Azure Batch service will stop accepting create
            Pool requests for the Image.
          type: string
        capabilities:
          description: >-
            Not every capability of the Image is listed. Capabilities in this
            list are considered of special interest and are generally related to
            integration with other features in the Azure Batch service.
          items:
            type: string
          title: The capabilities or features which the Image supports.
          type: array
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          title: The reference to the Azure Virtual Machine's Marketplace Image.
        nodeAgentSKUId:
          title: The ID of the Compute Node agent SKU which the Image supports.
          type: string
        osType:
          enum:
            - linux
            - windows
          title: The type of operating system (e.g. Windows or Linux) of the Image.
          type: string
          x-ms-enum:
            modelAsString: false
            name: OSType
            values:
              - description: The Linux operating system.
                value: linux
              - description: The Windows operating system.
                value: windows
        verificationType:
          enum:
            - verified
            - unverified
          title: >-
            Whether the Azure Batch service actively verifies that the Image is
            compatible with the associated Compute Node agent SKU.
          type: string
          x-ms-enum:
            modelAsString: false
            name: VerificationType
            values:
              - description: >-
                  The Image is guaranteed to be compatible with the associated
                  Compute Node agent SKU and all Batch features have been
                  confirmed to work as expected.
                value: verified
              - description: >-
                  The associated Compute Node agent SKU should have binary
                  compatibility with the Image, but specific functionality has
                  not been verified.
                value: unverified
      required:
        - imageReference
        - verificationType
        - osType
        - nodeAgentSKUId
      title: >-
        A reference to the Azure Virtual Machines Marketplace Image and
        additional information about the Image.
      type: object
    ImageReference:
      properties:
        offer:
          description: 'For example, UbuntuServer or WindowsServer.'
          title: The offer type of the Azure Virtual Machines Marketplace Image.
          type: string
        publisher:
          description: 'For example, Canonical or MicrosoftWindowsServer.'
          title: The publisher of the Azure Virtual Machines Marketplace Image.
          type: string
        sku:
          description: 'For example, 14.04.0-LTS or 2012-R2-Datacenter.'
          title: The SKU of the Azure Virtual Machines Marketplace Image.
          type: string
        version:
          description: >-
            A value of 'latest' can be specified to select the latest version of
            an Image. If omitted, the default is 'latest'.
          title: The version of the Azure Virtual Machines Marketplace Image.
          type: string
        virtualMachineImageId:
          description: >-
            This property is mutually exclusive with other ImageReference
            properties. The Virtual Machine Image must be in the same region and
            subscription as the Azure Batch Account. For information about the
            firewall settings for the Batch Compute Node agent to communicate
            with the Batch service see
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
          title: >-
            The ARM resource identifier of the Virtual Machine Image. Computes
            Compute Nodes of the Pool will be created using this custom Image.
            This is of the form
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/images/{imageName}
          type: string
      title: >-
        A reference to an Azure Virtual Machines Marketplace Image or a custom
        Azure Virtual Machine Image. To get the list of all Azure Marketplace
        Image references verified by Azure Batch, see the 'List supported
        Images' operation.
      type: object
    InboundEndpoint:
      properties:
        backendPort:
          format: int32
          title: The backend port number of the endpoint.
          type: integer
        frontendPort:
          format: int32
          title: The public port number of the endpoint.
          type: integer
        name:
          title: The name of the endpoint.
          type: string
        protocol:
          $ref: '#/components/schemas/InboundEndpointProtocol'
          title: The protocol of the endpoint.
        publicFQDN:
          title: The public fully qualified domain name for the Compute Node.
          type: string
        publicIPAddress:
          title: The public IP address of the Compute Node.
          type: string
      required:
        - name
        - protocol
        - publicIPAddress
        - publicFQDN
        - frontendPort
        - backendPort
      title: An inbound endpoint on a Compute Node.
      type: object
    InboundEndpointProtocol:
      enum:
        - tcp
        - udp
      title: The protocol of the endpoint.
      type: string
      x-ms-enum:
        modelAsString: false
        name: InboundEndpointProtocol
        values:
          - description: Use TCP for the endpoint.
            name: tcp
            value: tcp
          - description: Use UDP for the endpoint.
            name: udp
            value: udp
    InboundNATPool:
      properties:
        backendPort:
          description: >-
            This must be unique within a Batch Pool. Acceptable values are
            between 1 and 65535 except for 22, 3389, 29876 and 29877 as these
            are reserved. If any reserved values are provided the request fails
            with HTTP status code 400.
          format: int32
          title: The port number on the Compute Node.
          type: integer
        frontendPortRangeEnd:
          description: >-
            Acceptable values range between 1 and 65534 except ports from 50000
            to 55000 which are reserved by the Batch service. All ranges within
            a Pool must be distinct and cannot overlap. Each range must contain
            at least 40 ports. If any reserved or overlapping values are
            provided the request fails with HTTP status code 400.
          format: int32
          title: >-
            The last port number in the range of external ports that will be
            used to provide inbound access to the backendPort on individual
            Compute Nodes.
          type: integer
        frontendPortRangeStart:
          description: >-
            Acceptable values range between 1 and 65534 except ports from 50000
            to 55000 which are reserved. All ranges within a Pool must be
            distinct and cannot overlap. Each range must contain at least 40
            ports. If any reserved or overlapping values are provided the
            request fails with HTTP status code 400.
          format: int32
          title: >-
            The first port number in the range of external ports that will be
            used to provide inbound access to the backendPort on individual
            Compute Nodes.
          type: integer
        name:
          description: >-
            The name must be unique within a Batch Pool, can contain letters,
            numbers, underscores, periods, and hyphens. Names must start with a
            letter or number, must end with a letter, number, or underscore, and
            cannot exceed 77 characters.  If any invalid values are provided the
            request fails with HTTP status code 400.
          title: The name of the endpoint.
          type: string
        networkSecurityGroupRules:
          description: >-
            The maximum number of rules that can be specified across all the
            endpoints on a Batch Pool is 25. If no network security group rules
            are specified, a default rule will be created to allow inbound
            access to the specified backendPort. If the maximum number of
            network security group rules is exceeded the request fails with HTTP
            status code 400.
          items:
            $ref: '#/components/schemas/NetworkSecurityGroupRule'
          title: >-
            A list of network security group rules that will be applied to the
            endpoint.
          type: array
        protocol:
          $ref: '#/components/schemas/InboundEndpointProtocol'
          title: The protocol of the endpoint.
      required:
        - name
        - protocol
        - backendPort
        - frontendPortRangeStart
        - frontendPortRangeEnd
      title: >-
        A inbound NAT Pool that can be used to address specific ports on Compute
        Nodes in a Batch Pool externally.
      type: object
    JobAddParameter:
      properties:
        commonEnvironmentSettings:
          description: >-
            Individual Tasks can override an environment setting specified here
            by specifying the same setting name with a different value.
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: >-
            The list of common environment variable settings. These environment
            variables are set for all Tasks in the Job (including the Job
            Manager, Job Preparation and Job Release Tasks).
          type: array
        constraints:
          $ref: '#/components/schemas/JobConstraints'
          description: The execution constraints for the Job.
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: The display name for the Job.
          type: string
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that is,
            you may not have two IDs within an Account that differ only by
            case).
          title: A string that uniquely identifies the Job within the Account.
          type: string
        jobManagerTask:
          $ref: '#/components/schemas/JobManagerTask'
          description: >-
            If the Job does not specify a Job Manager Task, the user must
            explicitly add Tasks to the Job. If the Job does specify a Job
            Manager Task, the Batch service creates the Job Manager Task when
            the Job is created, and will try to schedule the Job Manager Task
            before scheduling other Tasks in the Job. The Job Manager Task's
            typical purpose is to control and/or monitor Job execution, for
            example by deciding what additional Tasks to run, determining when
            the work is complete, etc. (However, a Job Manager Task is not
            restricted to these activities - it is a fully-fledged Task in the
            system and perform whatever actions are required for the Job.) For
            example, a Job Manager Task might download a file specified as a
            parameter, analyze the contents of that file and submit additional
            Tasks based on those contents.
          title: >-
            Details of a Job Manager Task to be launched when the Job is
            started.
        jobPreparationTask:
          $ref: '#/components/schemas/JobPreparationTask'
          description: >-
            If a Job has a Job Preparation Task, the Batch service will run the
            Job Preparation Task on a Node before starting any Tasks of that Job
            on that Compute Node.
          title: The Job Preparation Task.
        jobReleaseTask:
          $ref: '#/components/schemas/JobReleaseTask'
          description: >-
            A Job Release Task cannot be specified without also specifying a Job
            Preparation Task for the Job. The Batch service runs the Job Release
            Task on the Nodes that have run the Job Preparation Task. The
            primary purpose of the Job Release Task is to undo changes to
            Compute Nodes made by the Job Preparation Task. Example activities
            include deleting local files, or shutting down services that were
            started as part of Job preparation.
          title: The Job Release Task.
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Job as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/JobNetworkConfiguration'
          title: The network configuration for the Job.
        onAllTasksComplete:
          $ref: '#/components/schemas/OnAllTasksComplete'
          description: >-
            Note that if a Job contains no Tasks, then all Tasks are considered
            complete. This option is therefore most commonly used with a Job
            Manager task; if you want to use automatic Job termination without a
            Job Manager, you should initially set onAllTasksComplete to noaction
            and update the Job properties to set onAllTasksComplete to
            terminatejob once you have finished adding Tasks. The default is
            noaction.
          title: >-
            The action the Batch service should take when all Tasks in the Job
            are in the completed state.
        onTaskFailure:
          $ref: '#/components/schemas/OnTaskFailure'
          description: >-
            A Task is considered to have failed if has a failureInfo. A
            failureInfo is set if the Task completes with a non-zero exit code
            after exhausting its retry count, or if there was an error starting
            the Task, for example due to a resource file download error. The
            default is noaction.
          title: >-
            The action the Batch service should take when any Task in the Job
            fails.
        poolInfo:
          $ref: '#/components/schemas/PoolInformation'
          title: The Pool on which the Batch service runs the Job's Tasks.
        priority:
          description: >-
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0.
          format: int32
          title: The priority of the Job.
          type: integer
        usesTaskDependencies:
          title: >-
            Whether Tasks in the Job can define dependencies on each other. The
            default is false.
          type: boolean
      required:
        - id
        - poolInfo
      title: An Azure Batch Job to add.
      type: object
    JobConstraints:
      properties:
        maxTaskRetryCount:
          description: >-
            Note that this value specifically controls the number of retries.
            The Batch service will try each Task once, and may then retry up to
            this limit. For example, if the maximum retry count is 3, Batch
            tries a Task up to 4 times (one initial try and 3 retries). If the
            maximum retry count is 0, the Batch service does not retry Tasks. If
            the maximum retry count is -1, the Batch service retries Tasks
            without limit. The default value is 0 (no retries).
          format: int32
          title: >-
            The maximum number of times each Task may be retried. The Batch
            service retries a Task if its exit code is nonzero.
          type: integer
        maxWallClockTime:
          description: >-
            If the Job does not complete within the time limit, the Batch
            service terminates it and any Tasks that are still running. In this
            case, the termination reason will be MaxWallClockTimeExpiry. If this
            property is not specified, there is no time limit on how long the
            Job may run.
          format: duration
          title: >-
            The maximum elapsed time that the Job may run, measured from the
            time the Job is created.
          type: string
      title: The execution constraints for a Job.
      type: object
    JobDisableParameter:
      properties:
        disableTasks:
          enum:
            - requeue
            - terminate
            - wait
          title: What to do with active Tasks associated with the Job.
          type: string
          x-ms-enum:
            modelAsString: false
            name: DisableJobOption
            values:
              - description: >-
                  Terminate running Tasks and requeue them. The Tasks will run
                  again when the Job is enabled.
                value: requeue
              - description: >-
                  Terminate running Tasks. The Tasks will be completed with
                  failureInfo indicating that they were terminated, and will not
                  run again.
                value: terminate
              - description: Allow currently running Tasks to complete.
                value: wait
      required:
        - disableTasks
      title: Options when disabling a Job.
      type: object
    JobExecutionInformation:
      properties:
        endTime:
          description: This property is set only if the Job is in the completed state.
          format: date-time
          title: The completion time of the Job.
          type: string
        poolId:
          description: >-
            This element contains the actual Pool where the Job is assigned.
            When you get Job details from the service, they also contain a
            poolInfo element, which contains the Pool configuration data from
            when the Job was added or updated. That poolInfo element may also
            contain a poolId element. If it does, the two IDs are the same. If
            it does not, it means the Job ran on an auto Pool, and this property
            contains the ID of that auto Pool.
          title: The ID of the Pool to which this Job is assigned.
          type: string
        schedulingError:
          $ref: '#/components/schemas/JobSchedulingError'
          description: This property is not set if there was no error starting the Job.
          title: Details of any error encountered by the service in starting the Job.
        startTime:
          description: This is the time at which the Job was created.
          format: date-time
          title: The start time of the Job.
          type: string
        terminateReason:
          description: >-
            This property is set only if the Job is in the completed state. If
            the Batch service terminates the Job, it sets the reason as follows:
            JMComplete - the Job Manager Task completed, and killJobOnCompletion
            was set to true. MaxWallClockTimeExpiry - the Job reached its
            maxWallClockTime constraint. TerminateJobSchedule - the Job ran as
            part of a schedule, and the schedule terminated. AllTasksComplete -
            the Job's onAllTasksComplete attribute is set to terminatejob, and
            all Tasks in the Job are complete. TaskFailed - the Job's
            onTaskFailure attribute is set to performExitOptionsJobAction, and a
            Task in the Job failed with an exit condition that specified a
            jobAction of terminatejob. Any other string is a user-defined reason
            specified in a call to the 'Terminate a Job' operation.
          title: A string describing the reason the Job ended.
          type: string
      required:
        - startTime
      title: >-
        Contains information about the execution of a Job in the Azure Batch
        service.
      type: object
    JobManagerTask:
      description: >-
        The Job Manager Task is automatically started when the Job is created.
        The Batch service tries to schedule the Job Manager Task before any
        other Tasks in the Job. When shrinking a Pool, the Batch service tries
        to preserve Nodes where Job Manager Tasks are running for as long as
        possible (that is, Compute Nodes running 'normal' Tasks are removed
        before Compute Nodes running Job Manager Tasks). When a Job Manager Task
        fails and needs to be restarted, the system tries to schedule it at the
        highest priority. If there are no idle Compute Nodes available, the
        system may terminate one of the running Tasks in the Pool and return it
        to the queue in order to make room for the Job Manager Task to restart.
        Note that a Job Manager Task in one Job does not have priority over
        Tasks in other Jobs. Across Jobs, only Job level priorities are
        observed. For example, if a Job Manager in a priority 0 Job needs to be
        restarted, it will not displace Tasks of a priority 1 Job. Batch will
        retry Tasks when a recovery operation is triggered on a Node. Examples
        of recovery operations include (but are not limited to) when an
        unhealthy Node is rebooted or a Compute Node disappeared due to host
        failure. Retries due to recovery operations are independent of and are
        not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount
        is 0, an internal retry due to a recovery operation may occur. Because
        of this, all Tasks should be idempotent. This means Tasks need to
        tolerate being interrupted and restarted without causing any corruption
        or duplicate data. The best practice for long running Tasks is to use
        some form of checkpointing.
      properties:
        allowLowPriorityNode:
          description: The default value is true.
          title: Whether the Job Manager Task may run on a low-priority Compute Node.
          type: boolean
        applicationPackageReferences:
          description: >-
            Application Packages are downloaded and deployed to a shared
            directory, not the Task working directory. Therefore, if a
            referenced Application Package is already on the Compute Node, and
            is up to date, then it is not re-downloaded; the existing copy on
            the Compute Node is used. If a referenced Application Package cannot
            be installed, for example because the package has been deleted or
            because download failed, the Task fails.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            A list of Application Packages that the Batch service will deploy to
            the Compute Node before running the command line.
          type: array
        authenticationTokenSettings:
          $ref: '#/components/schemas/AuthenticationTokenSettings'
          description: >-
            If this property is set, the Batch service provides the Task with an
            authentication token which can be used to authenticate Batch service
            operations without requiring an Account access key. The token is
            provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable.
            The operations that the Task can carry out using the token depend on
            the settings. For example, a Task can request Job permissions in
            order to add other Tasks to the Job, or check the status of the Job
            or of other Tasks under the Job.
          title: >-
            The settings for an authentication token that the Task can use to
            perform Batch service operations.
        commandLine:
          description: >-
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command line refers to file paths, it should use a relative path
            (relative to the Task working directory), or use the Batch provided
            environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the Job Manager Task.
          type: string
        constraints:
          $ref: '#/components/schemas/TaskConstraints'
          title: Constraints that apply to the Job Manager Task.
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            If the Pool that will run this Task has containerConfiguration set,
            this must be set as well. If the Pool that will run this Task
            doesn't have containerConfiguration set, this must not be set. When
            this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: >-
            The settings for the container under which the Job Manager Task
            runs.
        displayName:
          description: >-
            It need not be unique and can contain any Unicode characters up to a
            maximum length of 1024.
          title: The display name of the Job Manager Task.
          type: string
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: A list of environment variable settings for the Job Manager Task.
          type: array
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters.
          title: >-
            A string that uniquely identifies the Job Manager Task within the
            Job.
          type: string
        killJobOnCompletion:
          description: >-
            If true, when the Job Manager Task completes, the Batch service
            marks the Job as complete. If any Tasks are still running at this
            time (other than Job Release), those Tasks are terminated. If false,
            the completion of the Job Manager Task does not affect the Job
            status. In this case, you should either use the onAllTasksComplete
            attribute to terminate the Job, or have a client or user terminate
            the Job explicitly. An example of this is if the Job Manager creates
            a set of Tasks but then takes no further role in their execution.
            The default value is true. If you are using the onAllTasksComplete
            and onTaskFailure attributes to control Job lifetime, and using the
            Job Manager Task only to create the Tasks for the Job (not to
            monitor progress), then it is important to set killJobOnCompletion
            to false.
          title: >-
            Whether completion of the Job Manager Task signifies completion of
            the entire Job.
          type: boolean
        outputFiles:
          description: >-
            For multi-instance Tasks, the files will only be uploaded from the
            Compute Node on which the primary Task is executed.
          items:
            $ref: '#/components/schemas/OutputFile'
          title: >-
            A list of files that the Batch service will upload from the Compute
            Node after running the command line.
          type: array
        resourceFiles:
          description: >-
            Files listed under this element are located in the Task's working
            directory. There is a maximum size for the list of resource files. 
            When the max size is exceeded, the request will fail and the
            response error code will be RequestEntityTooLarge. If this occurs,
            the collection of ResourceFiles must be reduced in size. This can be
            achieved using .zip files, Application Packages, or Docker
            Containers.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.
          type: array
        runExclusive:
          description: >-
            If true, no other Tasks will run on the same Node for as long as the
            Job Manager is running. If false, other Tasks can run simultaneously
            with the Job Manager on a Compute Node. The Job Manager Task counts
            normally against the Compute Node's concurrent Task limit, so this
            is only relevant if the Compute Node allows multiple concurrent
            Tasks. The default value is true.
          title: >-
            Whether the Job Manager Task requires exclusive use of the Compute
            Node where it runs.
          type: boolean
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task.
          title: The user identity under which the Job Manager Task runs.
      required:
        - id
        - commandLine
      title: Specifies details of a Job Manager Task.
      type: object
    JobNetworkConfiguration:
      properties:
        subnetId:
          externalDocs:
            description: Setting up RBAC for Azure Batch VNETs
            url: >-
              https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor
          description: >-
            The virtual network must be in the same region and subscription as
            the Azure Batch Account. The specified subnet should have enough
            free IP addresses to accommodate the number of Compute Nodes which
            will run Tasks from the Job. This can be up to the number of Compute
            Nodes in the Pool. The 'MicrosoftAzureBatch' service principal must
            have the 'Classic Virtual Machine Contributor' Role-Based Access
            Control (RBAC) role for the specified VNet so that Azure Batch
            service can schedule Tasks on the Nodes. This can be verified by
            checking if the specified VNet has any associated Network Security
            Groups (NSG). If communication to the Nodes in the specified subnet
            is denied by an NSG, then the Batch service will set the state of
            the Compute Nodes to unusable. This is of the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
            If the specified VNet has any associated Network Security Groups
            (NSG), then a few reserved system ports must be enabled for inbound
            communication from the Azure Batch service. For Pools created with a
            Virtual Machine configuration, enable ports 29876 and 29877, as well
            as port 22 for Linux and port 3389 for Windows. Port 443 is also
            required to be open for outbound connections for communications to
            Azure Storage. For more details see:
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
          title: >-
            The ARM resource identifier of the virtual network subnet which
            Compute Nodes running Tasks from the Job will join for the duration
            of the Task. This will only work with a VirtualMachineConfiguration
            Pool.
          type: string
      required:
        - subnetId
      title: The network configuration for the Job.
      type: object
    JobPatchParameter:
      properties:
        constraints:
          $ref: '#/components/schemas/JobConstraints'
          description: 'If omitted, the existing execution constraints are left unchanged.'
          title: The execution constraints for the Job.
        metadata:
          description: 'If omitted, the existing Job metadata is left unchanged.'
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Job as metadata.
          type: array
        onAllTasksComplete:
          $ref: '#/components/schemas/OnAllTasksComplete'
          description: >-
            If omitted, the completion behavior is left unchanged. You may not
            change the value from terminatejob to noaction - that is, once you
            have engaged automatic Job termination, you cannot turn it off
            again. If you try to do this, the request fails with an 'invalid
            property value' error response; if you are calling the REST API
            directly, the HTTP status code is 400 (Bad Request).
          title: >-
            The action the Batch service should take when all Tasks in the Job
            are in the completed state.
        poolInfo:
          $ref: '#/components/schemas/PoolInformation'
          description: >-
            You may change the Pool for a Job only when the Job is disabled. The
            Patch Job call will fail if you include the poolInfo element and the
            Job is not disabled. If you specify an autoPoolSpecification
            specification in the poolInfo, only the keepAlive property can be
            updated, and then only if the auto Pool has a poolLifetimeOption of
            Job. If omitted, the Job continues to run on its current Pool.
          title: The Pool on which the Batch service runs the Job's Tasks.
        priority:
          description: >-
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. If omitted, the
            priority of the Job is left unchanged.
          format: int32
          title: The priority of the Job.
          type: integer
      title: The set of changes to be made to a Job.
      type: object
    JobPreparationAndReleaseTaskExecutionInformation:
      properties:
        jobPreparationTaskExecutionInfo:
          $ref: '#/components/schemas/JobPreparationTaskExecutionInformation'
          title: >-
            Information about the execution status of the Job Preparation Task
            on this Compute Node.
        jobReleaseTaskExecutionInfo:
          $ref: '#/components/schemas/JobReleaseTaskExecutionInformation'
          description: >-
            This property is set only if the Job Release Task has run on the
            Compute Node.
          title: >-
            Information about the execution status of the Job Release Task on
            this Compute Node.
        nodeId:
          title: The ID of the Compute Node to which this entry refers.
          type: string
        nodeUrl:
          title: The URL of the Compute Node to which this entry refers.
          type: string
        poolId:
          title: >-
            The ID of the Pool containing the Compute Node to which this entry
            refers.
          type: string
      title: >-
        The status of the Job Preparation and Job Release Tasks on a Compute
        Node.
      type: object
    JobPreparationTask:
      description: >-
        You can use Job Preparation to prepare a Node to run Tasks for the Job.
        Activities commonly performed in Job Preparation include: Downloading
        common resource files used by all the Tasks in the Job. The Job
        Preparation Task can download these common resource files to the shared
        location on the Node. (AZ_BATCH_NODE_ROOT_DIR\shared), or starting a
        local service on the Node so that all Tasks of that Job can communicate
        with it. If the Job Preparation Task fails (that is, exhausts its retry
        count before exiting with exit code 0), Batch will not run Tasks of this
        Job on the Node. The Compute Node remains ineligible to run Tasks of
        this Job until it is reimaged. The Compute Node remains active and can
        be used for other Jobs. The Job Preparation Task can run multiple times
        on the same Node. Therefore, you should write the Job Preparation Task
        to handle re-execution. If the Node is rebooted, the Job Preparation
        Task is run again on the Compute Node before scheduling any other Task
        of the Job, if rerunOnNodeRebootAfterSuccess is true or if the Job
        Preparation Task did not previously complete. If the Node is reimaged,
        the Job Preparation Task is run again before scheduling any Task of the
        Job. Batch will retry Tasks when a recovery operation is triggered on a
        Node. Examples of recovery operations include (but are not limited to)
        when an unhealthy Node is rebooted or a Compute Node disappeared due to
        host failure. Retries due to recovery operations are independent of and
        are not counted against the maxTaskRetryCount. Even if the
        maxTaskRetryCount is 0, an internal retry due to a recovery operation
        may occur. Because of this, all Tasks should be idempotent. This means
        Tasks need to tolerate being interrupted and restarted without causing
        any corruption or duplicate data. The best practice for long running
        Tasks is to use some form of checkpointing.
      properties:
        commandLine:
          description: >-
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command line refers to file paths, it should use a relative path
            (relative to the Task working directory), or use the Batch provided
            environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the Job Preparation Task.
          type: string
        constraints:
          $ref: '#/components/schemas/TaskConstraints'
          title: Constraints that apply to the Job Preparation Task.
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            When this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: >-
            The settings for the container under which the Job Preparation Task
            runs.
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: >-
            A list of environment variable settings for the Job Preparation
            Task.
          type: array
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters. If you do not specify this property, the Batch service
            assigns a default value of 'jobpreparation'. No other Task in the
            Job can have the same ID as the Job Preparation Task. If you try to
            submit a Task with the same id, the Batch service rejects the
            request with error code TaskIdSameAsJobPreparationTask; if you are
            calling the REST API directly, the HTTP status code is 409
            (Conflict).
          title: >-
            A string that uniquely identifies the Job Preparation Task within
            the Job.
          type: string
        rerunOnNodeRebootAfterSuccess:
          description: >-
            The Job Preparation Task is always rerun if a Compute Node is
            reimaged, or if the Job Preparation Task did not complete (e.g.
            because the reboot occurred while the Task was running). Therefore,
            you should always write a Job Preparation Task to be idempotent and
            to behave correctly if run multiple times. The default value is
            true.
          title: >-
            Whether the Batch service should rerun the Job Preparation Task
            after a Compute Node reboots.
          type: boolean
        resourceFiles:
          description: >-
            Files listed under this element are located in the Task's working
            directory.  There is a maximum size for the list of resource files. 
            When the max size is exceeded, the request will fail and the
            response error code will be RequestEntityTooLarge. If this occurs,
            the collection of ResourceFiles must be reduced in size. This can be
            achieved using .zip files, Application Packages, or Docker
            Containers.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.
          type: array
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task on Windows Compute Nodes, or a non-administrative user unique
            to the Pool on Linux Compute Nodes.
          title: The user identity under which the Job Preparation Task runs.
        waitForSuccess:
          description: >-
            If true and the Job Preparation Task fails on a Node, the Batch
            service retries the Job Preparation Task up to its maximum retry
            count (as specified in the constraints element). If the Task has
            still not completed successfully after all retries, then the Batch
            service will not schedule Tasks of the Job to the Node. The Node
            remains active and eligible to run Tasks of other Jobs. If false,
            the Batch service will not wait for the Job Preparation Task to
            complete. In this case, other Tasks of the Job can start executing
            on the Compute Node while the Job Preparation Task is still running;
            and even if the Job Preparation Task fails, new Tasks will continue
            to be scheduled on the Compute Node. The default value is true.
          title: >-
            Whether the Batch service should wait for the Job Preparation Task
            to complete successfully before scheduling any other Tasks of the
            Job on the Compute Node. A Job Preparation Task has completed
            successfully if it exits with exit code 0.
          type: boolean
      required:
        - commandLine
      title: >-
        A Job Preparation Task to run before any Tasks of the Job on any given
        Compute Node.
      type: object
    JobPreparationTaskExecutionInformation:
      properties:
        containerInfo:
          $ref: '#/components/schemas/TaskContainerExecutionInformation'
          description: This property is set only if the Task runs in a container context.
          title: Information about the container under which the Task is executing.
        endTime:
          description: This property is set only if the Task is in the Completed state.
          format: date-time
          title: The time at which the Job Preparation Task completed.
          type: string
        exitCode:
          description: >-
            This parameter is returned only if the Task is in the completed
            state. The exit code for a process reflects the specific convention
            implemented by the application developer for that process. If you
            use the exit code value to make decisions in your code, be sure that
            you know the exit code convention used by the application process.
            Note that the exit code may also be generated by the Compute Node
            operating system, such as when a process is forcibly terminated.
          format: int32
          title: The exit code of the program specified on the Task command line.
          type: integer
        failureInfo:
          $ref: '#/components/schemas/TaskFailureInformation'
          description: >-
            This property is set only if the Task is in the completed state and
            encountered a failure.
          title: 'Information describing the Task failure, if any.'
        lastRetryTime:
          description: >-
            This property is set only if the Task was retried (i.e. retryCount
            is nonzero). If present, this is typically the same as startTime,
            but may be different if the Task has been restarted for reasons
            other than retry; for example, if the Compute Node was rebooted
            during a retry, then the startTime is updated but the lastRetryTime
            is not.
          format: date-time
          title: >-
            The most recent time at which a retry of the Job Preparation Task
            started running.
          type: string
        result:
          $ref: '#/components/schemas/TaskExecutionResult'
          description: >-
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property.
          title: The result of the Task execution.
        retryCount:
          description: >-
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the Task could not be run) and file upload
            errors are not retried. The Batch service will retry the Task up to
            the limit specified by the constraints.
          format: int32
          title: >-
            The number of times the Task has been retried by the Batch service.
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the Task could not be run) and file upload
            errors are not retried. The Batch service will retry the Task up to
            the limit specified by the constraints.
          type: integer
        startTime:
          description: >-
            If the Task has been restarted or retried, this is the most recent
            time at which the Task started running.
          format: date-time
          title: The time at which the Task started running.
          type: string
        state:
          enum:
            - running
            - completed
          title: The current state of the Job Preparation Task on the Compute Node.
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobPreparationTaskState
            values:
              - description: The Task is currently running (including retrying).
                value: running
              - description: >-
                  The Task has exited with exit code 0, or the Task has
                  exhausted its retry limit, or the Batch service was unable to
                  start the Task due to Task preparation errors (such as
                  resource file download failures).
                value: completed
        taskRootDirectory:
          title: >-
            The root directory of the Job Preparation Task on the Compute Node.
            You can use this path to retrieve files created by the Task, such as
            log files.
          type: string
        taskRootDirectoryUrl:
          title: >-
            The URL to the root directory of the Job Preparation Task on the
            Compute Node.
          type: string
      required:
        - startTime
        - retryCount
        - state
      title: >-
        Contains information about the execution of a Job Preparation Task on a
        Compute Node.
      type: object
    JobReleaseTask:
      description: >-
        The Job Release Task runs when the Job ends, because of one of the
        following: The user calls the Terminate Job API, or the Delete Job API
        while the Job is still active, the Job's maximum wall clock time
        constraint is reached, and the Job is still active, or the Job's Job
        Manager Task completed, and the Job is configured to terminate when the
        Job Manager completes. The Job Release Task runs on each Node where
        Tasks of the Job have run and the Job Preparation Task ran and
        completed. If you reimage a Node after it has run the Job Preparation
        Task, and the Job ends without any further Tasks of the Job running on
        that Node (and hence the Job Preparation Task does not re-run), then the
        Job Release Task does not run on that Compute Node. If a Node reboots
        while the Job Release Task is still running, the Job Release Task runs
        again when the Compute Node starts up. The Job is not marked as complete
        until all Job Release Tasks have completed. The Job Release Task runs in
        the background. It does not occupy a scheduling slot; that is, it does
        not count towards the maxTasksPerNode limit specified on the Pool.
      properties:
        commandLine:
          description: >-
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command line refers to file paths, it should use a relative path
            (relative to the Task working directory), or use the Batch provided
            environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the Job Release Task.
          type: string
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            When this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: >-
            The settings for the container under which the Job Release Task
            runs.
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: A list of environment variable settings for the Job Release Task.
          type: array
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores and cannot contain more than 64
            characters. If you do not specify this property, the Batch service
            assigns a default value of 'jobrelease'. No other Task in the Job
            can have the same ID as the Job Release Task. If you try to submit a
            Task with the same id, the Batch service rejects the request with
            error code TaskIdSameAsJobReleaseTask; if you are calling the REST
            API directly, the HTTP status code is 409 (Conflict).
          title: >-
            A string that uniquely identifies the Job Release Task within the
            Job.
          type: string
        maxWallClockTime:
          format: duration
          title: >-
            The maximum elapsed time that the Job Release Task may run on a
            given Compute Node, measured from the time the Task starts. If the
            Task does not complete within the time limit, the Batch service
            terminates it. The default value is 15 minutes. You may not specify
            a timeout longer than 15 minutes. If you do, the Batch service
            rejects it with an error; if you are calling the REST API directly,
            the HTTP status code is 400 (Bad Request).
          type: string
        resourceFiles:
          description: >-
            Files listed under this element are located in the Task's working
            directory.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.  There is a maximum size for
            the list of resource files.  When the max size is exceeded, the
            request will fail and the response error code will be
            RequestEntityTooLarge. If this occurs, the collection of
            ResourceFiles must be reduced in size. This can be achieved using
            .zip files, Application Packages, or Docker Containers.
          type: array
        retentionTime:
          description: >-
            The default is 7 days, i.e. the Task directory will be retained for
            7 days unless the Compute Node is removed or the Job is deleted.
          format: duration
          title: >-
            The minimum time to retain the Task directory for the Job Release
            Task on the Compute Node. After this time, the Batch service may
            delete the Task directory and all its contents.
          type: string
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task.
          title: The user identity under which the Job Release Task runs.
      required:
        - commandLine
      title: >-
        A Job Release Task to run on Job completion on any Compute Node where
        the Job has run.
      type: object
    JobReleaseTaskExecutionInformation:
      properties:
        containerInfo:
          $ref: '#/components/schemas/TaskContainerExecutionInformation'
          description: This property is set only if the Task runs in a container context.
          title: Information about the container under which the Task is executing.
        endTime:
          description: This property is set only if the Task is in the Completed state.
          format: date-time
          title: The time at which the Job Release Task completed.
          type: string
        exitCode:
          description: >-
            This parameter is returned only if the Task is in the completed
            state. The exit code for a process reflects the specific convention
            implemented by the application developer for that process. If you
            use the exit code value to make decisions in your code, be sure that
            you know the exit code convention used by the application process.
            Note that the exit code may also be generated by the Compute Node
            operating system, such as when a process is forcibly terminated.
          format: int32
          title: The exit code of the program specified on the Task command line.
          type: integer
        failureInfo:
          $ref: '#/components/schemas/TaskFailureInformation'
          description: >-
            This property is set only if the Task is in the completed state and
            encountered a failure.
          title: 'Information describing the Task failure, if any.'
        result:
          $ref: '#/components/schemas/TaskExecutionResult'
          description: >-
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property.
          title: The result of the Task execution.
        startTime:
          description: >-
            If the Task has been restarted or retried, this is the most recent
            time at which the Task started running.
          format: date-time
          title: The time at which the Task started running.
          type: string
        state:
          enum:
            - running
            - completed
          title: The current state of the Job Release Task on the Compute Node.
          type: string
          x-ms-enum:
            modelAsString: false
            name: JobReleaseTaskState
            values:
              - description: The Task is currently running (including retrying).
                value: running
              - description: >-
                  The Task has exited with exit code 0, or the Task has
                  exhausted its retry limit, or the Batch service was unable to
                  start the Task due to Task preparation errors (such as
                  resource file download failures).
                value: completed
        taskRootDirectory:
          title: >-
            The root directory of the Job Release Task on the Compute Node. You
            can use this path to retrieve files created by the Task, such as log
            files.
          type: string
        taskRootDirectoryUrl:
          title: >-
            The URL to the root directory of the Job Release Task on the Compute
            Node.
          type: string
      required:
        - startTime
        - state
      title: >-
        Contains information about the execution of a Job Release Task on a
        Compute Node.
      type: object
    JobScheduleAddParameter:
      properties:
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: The display name for the schedule.
          type: string
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that is,
            you may not have two IDs within an Account that differ only by
            case).
          title: A string that uniquely identifies the schedule within the Account.
          type: string
        jobSpecification:
          $ref: '#/components/schemas/JobSpecification'
          title: The details of the Jobs to be created on this schedule.
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the schedule as metadata.
          type: array
        schedule:
          $ref: '#/components/schemas/Schedule'
          title: The schedule according to which Jobs will be created.
      required:
        - id
        - schedule
        - jobSpecification
      title: >-
        A Job Schedule that allows recurring Jobs by specifying when to run Jobs
        and a specification used to create each Job.
      type: object
    JobScheduleExecutionInformation:
      properties:
        endTime:
          description: >-
            This property is set only if the Job Schedule is in the completed
            state.
          format: date-time
          title: The time at which the schedule ended.
          type: string
        nextRunTime:
          description: >-
            This property is meaningful only if the schedule is in the active
            state when the time comes around. For example, if the schedule is
            disabled, no Job will be created at nextRunTime unless the Job is
            enabled before then.
          format: date-time
          title: The next time at which a Job will be created under this schedule.
          type: string
        recentJob:
          $ref: '#/components/schemas/RecentJob'
          description: >-
            This property is present only if the at least one Job has run under
            the schedule.
          title: Information about the most recent Job under the Job Schedule.
      title: >-
        Contains information about Jobs that have been and will be run under a
        Job Schedule.
      type: object
    JobSchedulePatchParameter:
      properties:
        jobSpecification:
          $ref: '#/components/schemas/JobSpecification'
          description: >-
            Updates affect only Jobs that are started after the update has taken
            place. Any currently active Job continues with the older
            specification.
          title: The details of the Jobs to be created on this schedule.
        metadata:
          description: >-
            If you do not specify this element, existing metadata is left
            unchanged.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: >-
            A list of name-value pairs associated with the Job Schedule as
            metadata.
          type: array
        schedule:
          $ref: '#/components/schemas/Schedule'
          description: >-
            If you do not specify this element, the existing schedule is left
            unchanged.
          title: The schedule according to which Jobs will be created.
      title: The set of changes to be made to a Job Schedule.
      type: object
    JobScheduleState:
      enum:
        - active
        - completed
        - disabled
        - terminating
        - deleting
      title: The state of the Job Schedule.
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobScheduleState
        values:
          - description: >-
              The Job Schedule is active and will create Jobs as per its
              schedule.
            value: active
          - description: >-
              The Job Schedule has terminated, either by reaching its end time
              or by the user terminating it explicitly.
            value: completed
          - description: >-
              The user has disabled the Job Schedule. The scheduler will not
              initiate any new Jobs will on this schedule, but any existing
              active Job will continue to run.
            value: disabled
          - description: >-
              The Job Schedule has no more work to do, or has been explicitly
              terminated by the user, but the termination operation is still in
              progress. The scheduler will not initiate any new Jobs for this
              Job Schedule, nor is any existing Job active.
            value: terminating
          - description: >-
              The user has requested that the Job Schedule be deleted, but the
              delete operation is still in progress. The scheduler will not
              initiate any new Jobs for this Job Schedule, and will delete any
              existing Jobs and Tasks under the Job Schedule, including any
              active Job. The Job Schedule will be deleted when all Jobs and
              Tasks under the Job Schedule have been deleted.
            value: deleting
    JobScheduleStatistics:
      properties:
        kernelCPUTime:
          format: duration
          title: >-
            The total kernel mode CPU time (summed across all cores and all
            Compute Nodes) consumed by all Tasks in all Jobs created under the
            schedule.
          type: string
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        numFailedTasks:
          format: int64
          title: >-
            The total number of Tasks that failed during the given time range in
            Jobs created under the schedule. A Task fails if it exhausts its
            maximum retry count without returning exit code 0.
          type: integer
        numSucceededTasks:
          format: int64
          title: >-
            The total number of Tasks successfully completed during the given
            time range in Jobs created under the schedule. A Task completes
            successfully if it returns exit code 0.
          type: integer
        numTaskRetries:
          format: int64
          title: >-
            The total number of retries during the given time range on all Tasks
            in all Jobs created under the schedule.
          type: integer
        readIOGiB:
          format: double
          title: >-
            The total gibibytes read from disk by all Tasks in all Jobs created
            under the schedule.
          type: number
        readIOps:
          format: int64
          title: >-
            The total number of disk read operations made by all Tasks in all
            Jobs created under the schedule.
          type: integer
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
        url:
          title: The URL of the statistics.
          type: string
        userCPUTime:
          format: duration
          title: >-
            The total user mode CPU time (summed across all cores and all
            Compute Nodes) consumed by all Tasks in all Jobs created under the
            schedule.
          type: string
        waitTime:
          description: >-
            This value is only reported in the Account lifetime statistics; it
            is not included in the Job statistics.
          format: duration
          title: >-
            The total wait time of all Tasks in all Jobs created under the
            schedule. The wait time for a Task is defined as the elapsed time
            between the creation of the Task and the start of Task execution.
            (If the Task is retried due to failures, the wait time is the time
            to the most recent Task execution.)
          type: string
        wallClockTime:
          description: >-
            The wall clock time is the elapsed time from when the Task started
            running on a Compute Node to when it finished (or to the last time
            the statistics were updated, if the Task had not finished by then).
            If a Task was retried, this includes the wall clock time of all the
            Task retries.
          format: duration
          title: >-
            The total wall clock time of all the Tasks in all the Jobs created
            under the schedule.
          type: string
        writeIOGiB:
          format: double
          title: >-
            The total gibibytes written to disk by all Tasks in all Jobs created
            under the schedule.
          type: number
        writeIOps:
          format: int64
          title: >-
            The total number of disk write operations made by all Tasks in all
            Jobs created under the schedule.
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - numSucceededTasks
        - numFailedTasks
        - numTaskRetries
        - waitTime
      title: Resource usage statistics for a Job Schedule.
      type: object
    JobScheduleUpdateParameter:
      properties:
        jobSpecification:
          $ref: '#/components/schemas/JobSpecification'
          description: >-
            Updates affect only Jobs that are started after the update has taken
            place. Any currently active Job continues with the older
            specification.
          title: Details of the Jobs to be created on this schedule.
        metadata:
          description: >-
            If you do not specify this element, it takes the default value of an
            empty list; in effect, any existing metadata is deleted.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: >-
            A list of name-value pairs associated with the Job Schedule as
            metadata.
          type: array
        schedule:
          $ref: '#/components/schemas/Schedule'
          description: >-
            If you do not specify this element, it is equivalent to passing the
            default schedule: that is, a single Job scheduled to run
            immediately.
          title: The schedule according to which Jobs will be created.
      required:
        - schedule
        - jobSpecification
      title: The set of changes to be made to a Job Schedule.
      type: object
    JobSchedulingError:
      properties:
        category:
          $ref: '#/components/schemas/ErrorCategory'
          title: The category of the Job scheduling error.
        code:
          title: >-
            An identifier for the Job scheduling error. Codes are invariant and
            are intended to be consumed programmatically.
          type: string
        details:
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: A list of additional error details related to the scheduling error.
          type: array
        message:
          title: >-
            A message describing the Job scheduling error, intended to be
            suitable for display in a user interface.
          type: string
      required:
        - category
      title: An error encountered by the Batch service when scheduling a Job.
      type: object
    JobSpecification:
      properties:
        commonEnvironmentSettings:
          description: >-
            Individual Tasks can override an environment setting specified here
            by specifying the same setting name with a different value.
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: >-
            A list of common environment variable settings. These environment
            variables are set for all Tasks in Jobs created under this schedule
            (including the Job Manager, Job Preparation and Job Release Tasks).
          type: array
        constraints:
          $ref: '#/components/schemas/JobConstraints'
          title: The execution constraints for Jobs created under this schedule.
        displayName:
          description: >-
            The name need not be unique and can contain any Unicode characters
            up to a maximum length of 1024.
          title: The display name for Jobs created under this schedule.
          type: string
        jobManagerTask:
          $ref: '#/components/schemas/JobManagerTask'
          description: >-
            If the Job does not specify a Job Manager Task, the user must
            explicitly add Tasks to the Job using the Task API. If the Job does
            specify a Job Manager Task, the Batch service creates the Job
            Manager Task when the Job is created, and will try to schedule the
            Job Manager Task before scheduling other Tasks in the Job.
          title: >-
            The details of a Job Manager Task to be launched when a Job is
            started under this schedule.
        jobPreparationTask:
          $ref: '#/components/schemas/JobPreparationTask'
          description: >-
            If a Job has a Job Preparation Task, the Batch service will run the
            Job Preparation Task on a Node before starting any Tasks of that Job
            on that Compute Node.
          title: The Job Preparation Task for Jobs created under this schedule.
        jobReleaseTask:
          $ref: '#/components/schemas/JobReleaseTask'
          description: >-
            The primary purpose of the Job Release Task is to undo changes to
            Nodes made by the Job Preparation Task. Example activities include
            deleting local files, or shutting down services that were started as
            part of Job preparation. A Job Release Task cannot be specified
            without also specifying a Job Preparation Task for the Job. The
            Batch service runs the Job Release Task on the Compute Nodes that
            have run the Job Preparation Task.
          title: The Job Release Task for Jobs created under this schedule.
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: >-
            A list of name-value pairs associated with each Job created under
            this schedule as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/JobNetworkConfiguration'
          title: The network configuration for the Job.
        onAllTasksComplete:
          $ref: '#/components/schemas/OnAllTasksComplete'
          description: >-
            Note that if a Job contains no Tasks, then all Tasks are considered
            complete. This option is therefore most commonly used with a Job
            Manager task; if you want to use automatic Job termination without a
            Job Manager, you should initially set onAllTasksComplete to noaction
            and update the Job properties to set onAllTasksComplete to
            terminatejob once you have finished adding Tasks. The default is
            noaction.
          title: >-
            The action the Batch service should take when all Tasks in a Job
            created under this schedule are in the completed state.
        onTaskFailure:
          $ref: '#/components/schemas/OnTaskFailure'
          description: The default is noaction.
          title: >-
            The action the Batch service should take when any Task fails in a
            Job created under this schedule. A Task is considered to have failed
            if it have failed if has a failureInfo. A failureInfo is set if the
            Task completes with a non-zero exit code after exhausting its retry
            count, or if there was an error starting the Task, for example due
            to a resource file download error.
        poolInfo:
          $ref: '#/components/schemas/PoolInformation'
          title: >-
            The Pool on which the Batch service runs the Tasks of Jobs created
            under this schedule.
        priority:
          description: >-
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. The default
            value is 0. This priority is used as the default for all Jobs under
            the Job Schedule. You can update a Job's priority after it has been
            created using by using the update Job API.
          format: int32
          title: The priority of Jobs created under this schedule.
          type: integer
        usesTaskDependencies:
          title: >-
            Whether Tasks in the Job can define dependencies on each other. The
            default is false.
          type: boolean
      required:
        - poolInfo
      title: Specifies details of the Jobs to be created on a schedule.
      type: object
    JobState:
      enum:
        - active
        - disabling
        - disabled
        - enabling
        - terminating
        - completed
        - deleting
      title: The state of the Job.
      type: string
      x-ms-enum:
        modelAsString: false
        name: JobState
        values:
          - description: The Job is available to have Tasks scheduled.
            value: active
          - description: >-
              A user has requested that the Job be disabled, but the disable
              operation is still in progress (for example, waiting for Tasks to
              terminate).
            value: disabling
          - description: >-
              A user has disabled the Job. No Tasks are running, and no new
              Tasks will be scheduled.
            value: disabled
          - description: >-
              A user has requested that the Job be enabled, but the enable
              operation is still in progress.
            value: enabling
          - description: >-
              The Job is about to complete, either because a Job Manager Task
              has completed or because the user has terminated the Job, but the
              terminate operation is still in progress (for example, because Job
              Release Tasks are running).
            value: terminating
          - description: >-
              All Tasks have terminated, and the system will not accept any more
              Tasks or any further changes to the Job.
            value: completed
          - description: >-
              A user has requested that the Job be deleted, but the delete
              operation is still in progress (for example, because the system is
              still terminating running Tasks).
            value: deleting
    JobStatistics:
      properties:
        kernelCPUTime:
          format: duration
          title: >-
            The total kernel mode CPU time (summed across all cores and all
            Compute Nodes) consumed by all Tasks in the Job.
          type: string
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        numFailedTasks:
          description: >-
            A Task fails if it exhausts its maximum retry count without
            returning exit code 0.
          format: int64
          title: >-
            The total number of Tasks in the Job that failed during the given
            time range.
          type: integer
        numSucceededTasks:
          description: A Task completes successfully if it returns exit code 0.
          format: int64
          title: >-
            The total number of Tasks successfully completed in the Job during
            the given time range.
          type: integer
        numTaskRetries:
          format: int64
          title: >-
            The total number of retries on all the Tasks in the Job during the
            given time range.
          type: integer
        readIOGiB:
          format: double
          title: >-
            The total amount of data in GiB read from disk by all Tasks in the
            Job.
          type: number
        readIOps:
          format: int64
          title: >-
            The total number of disk read operations made by all Tasks in the
            Job.
          type: integer
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
        url:
          title: The URL of the statistics.
          type: string
        userCPUTime:
          format: duration
          title: >-
            The total user mode CPU time (summed across all cores and all
            Compute Nodes) consumed by all Tasks in the Job.
          type: string
        waitTime:
          description: >-
            The wait time for a Task is defined as the elapsed time between the
            creation of the Task and the start of Task execution. (If the Task
            is retried due to failures, the wait time is the time to the most
            recent Task execution.) This value is only reported in the Account
            lifetime statistics; it is not included in the Job statistics.
          format: duration
          title: The total wait time of all Tasks in the Job.
          type: string
        wallClockTime:
          description: ' The wall clock time is the elapsed time from when the Task started running on a Compute Node to when it finished (or to the last time the statistics were updated, if the Task had not finished by then). If a Task was retried, this includes the wall clock time of all the Task retries.'
          format: duration
          title: The total wall clock time of all Tasks in the Job.
          type: string
        writeIOGiB:
          format: double
          title: >-
            The total amount of data in GiB written to disk by all Tasks in the
            Job.
          type: number
        writeIOps:
          format: int64
          title: >-
            The total number of disk write operations made by all Tasks in the
            Job.
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - numSucceededTasks
        - numFailedTasks
        - numTaskRetries
        - waitTime
      title: Resource usage statistics for a Job.
      type: object
    JobTerminateParameter:
      properties:
        terminateReason:
          title: >-
            The text you want to appear as the Job's TerminateReason. The
            default is 'UserTerminate'.
          type: string
      title: Options when terminating a Job.
      type: object
    JobUpdateParameter:
      properties:
        constraints:
          $ref: '#/components/schemas/JobConstraints'
          description: 'If omitted, the constraints are cleared.'
          title: The execution constraints for the Job.
        metadata:
          description: >-
            If omitted, it takes the default value of an empty list; in effect,
            any existing metadata is deleted.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Job as metadata.
          type: array
        onAllTasksComplete:
          $ref: '#/components/schemas/OnAllTasksComplete'
          description: >-
            If omitted, the completion behavior is set to noaction. If the
            current value is terminatejob, this is an error because a Job's
            completion behavior may not be changed from terminatejob to
            noaction. You may not change the value from terminatejob to noaction
            - that is, once you have engaged automatic Job termination, you
            cannot turn it off again. If you try to do this, the request fails
            and Batch returns status code 400 (Bad Request) and an 'invalid
            property value' error response. If you do not specify this element
            in a PUT request, it is equivalent to passing noaction. This is an
            error if the current value is terminatejob.
          title: >-
            The action the Batch service should take when all Tasks in the Job
            are in the completed state.
        poolInfo:
          $ref: '#/components/schemas/PoolInformation'
          description: >-
            You may change the Pool for a Job only when the Job is disabled. The
            Update Job call will fail if you include the poolInfo element and
            the Job is not disabled. If you specify an autoPoolSpecification
            specification in the poolInfo, only the keepAlive property can be
            updated, and then only if the auto Pool has a poolLifetimeOption of
            Job.
          title: The Pool on which the Batch service runs the Job's Tasks.
        priority:
          description: >-
            Priority values can range from -1000 to 1000, with -1000 being the
            lowest priority and 1000 being the highest priority. If omitted, it
            is set to the default value 0.
          format: int32
          title: The priority of the Job.
          type: integer
      required:
        - poolInfo
      title: The set of changes to be made to a Job.
      type: object
    LinuxUserConfiguration:
      properties:
        gid:
          description: >-
            The uid and gid properties must be specified together or not at all.
            If not specified the underlying operating system picks the gid.
          format: int32
          title: The group ID for the user Account.
          type: integer
        sshPrivateKey:
          description: >-
            The private key must not be password protected. The private key is
            used to automatically configure asymmetric-key based authentication
            for SSH between Compute Nodes in a Linux Pool when the Pool's
            enableInterNodeCommunication property is true (it is ignored if
            enableInterNodeCommunication is false). It does this by placing the
            key pair into the user's .ssh directory. If not specified,
            password-less SSH is not configured between Compute Nodes (no
            modification of the user's .ssh directory is done).
          title: The SSH private key for the user Account.
          type: string
        uid:
          description: >-
            The uid and gid properties must be specified together or not at all.
            If not specified the underlying operating system picks the uid.
          format: int32
          title: The user ID of the user Account.
          type: integer
      title: Properties used to create a user Account on a Linux Compute Node.
      type: object
    MetadataItem:
      description: >-
        The Batch service does not assign any meaning to this metadata; it is
        solely for the use of user code.
      properties:
        name:
          title: The name of the metadata item.
          type: string
        value:
          title: The value of the metadata item.
          type: string
      required:
        - name
        - value
      title: A name-value pair associated with a Batch service resource.
      type: object
    MultiInstanceSettings:
      description: >-
        Multi-instance Tasks are commonly used to support MPI Tasks. In the MPI
        case, if any of the subtasks fail (for example due to exiting with a
        non-zero exit code) the entire multi-instance Task fails. The
        multi-instance Task is then terminated and retried, up to its retry
        limit.
      properties:
        commonResourceFiles:
          description: >-
            The difference between common resource files and Task resource files
            is that common resource files are downloaded for all subtasks
            including the primary, whereas Task resource files are downloaded
            only for the primary. Also note that these resource files are not
            downloaded to the Task working directory, but instead are downloaded
            to the Task root directory (one directory above the working
            directory).  There is a maximum size for the list of resource
            files.  When the max size is exceeded, the request will fail and the
            response error code will be RequestEntityTooLarge. If this occurs,
            the collection of ResourceFiles must be reduced in size. This can be
            achieved using .zip files, Application Packages, or Docker
            Containers.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download before running
            the coordination command line.
          type: array
        coordinationCommandLine:
          description: >-
            A typical coordination command line launches a background service
            and verifies that the service is ready to process inter-node
            messages.
          title: >-
            The command line to run on all the Compute Nodes to enable them to
            coordinate when the primary runs the main Task command.
          type: string
        numberOfInstances:
          description: 'If omitted, the default is 1.'
          format: int32
          title: The number of Compute Nodes required by the Task.
          type: integer
      required:
        - coordinationCommandLine
      title: Settings which specify how to run a multi-instance Task.
      type: object
    NameValuePair:
      properties:
        name:
          title: The name in the name-value pair.
          type: string
        value:
          title: The value in the name-value pair.
          type: string
      title: Represents a name-value pair.
      type: object
    NetworkConfiguration:
      description: The network configuration for a Pool.
      properties:
        dynamicVNetAssignmentScope:
          enum:
            - none
            - job
          title: The scope of dynamic vnet assignment.
          type: string
          x-ms-enum:
            modelAsString: false
            name: DynamicVNetAssignmentScope
            values:
              - description: No dynamic VNet assignment is enabled.
                value: none
              - description: Dynamic VNet assignment is done per-job.
                value: job
        endpointConfiguration:
          $ref: '#/components/schemas/PoolEndpointConfiguration'
          description: >-
            Pool endpoint configuration is only supported on Pools with the
            virtualMachineConfiguration property.
          title: The configuration for endpoints on Compute Nodes in the Batch Pool.
        subnetId:
          externalDocs:
            description: Setting up RBAC for Azure Batch VNETs
            url: >-
              https://azure.microsoft.com/en-us/documentation/articles/role-based-access-built-in-roles/#classic-virtual-machine-contributor
          description: >-
            The virtual network must be in the same region and subscription as
            the Azure Batch Account. The specified subnet should have enough
            free IP addresses to accommodate the number of Compute Nodes in the
            Pool. If the subnet doesn't have enough free IP addresses, the Pool
            will partially allocate Nodes, and a resize error will occur. The
            'MicrosoftAzureBatch' service principal must have the 'Classic
            Virtual Machine Contributor' Role-Based Access Control (RBAC) role
            for the specified VNet. The specified subnet must allow
            communication from the Azure Batch service to be able to schedule
            Tasks on the Nodes. This can be verified by checking if the
            specified VNet has any associated Network Security Groups (NSG). If
            communication to the Nodes in the specified subnet is denied by an
            NSG, then the Batch service will set the state of the Compute Nodes
            to unusable. For Pools created with virtualMachineConfiguration only
            ARM virtual networks ('Microsoft.Network/virtualNetworks') are
            supported, but for Pools created with cloudServiceConfiguration both
            ARM and classic virtual networks are supported. If the specified
            VNet has any associated Network Security Groups (NSG), then a few
            reserved system ports must be enabled for inbound communication. For
            Pools created with a virtual machine configuration, enable ports
            29876 and 29877, as well as port 22 for Linux and port 3389 for
            Windows. For Pools created with a cloud service configuration,
            enable ports 10100, 20100, and 30100. Also enable outbound
            connections to Azure Storage on port 443. For more details see:
            https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
          title: >-
            The ARM resource identifier of the virtual network subnet which the
            Compute Nodes of the Pool will join. This is of the form
            /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.
          type: string
      type: object
    NetworkSecurityGroupRule:
      properties:
        access:
          enum:
            - allow
            - deny
          title: >-
            The action that should be taken for a specified IP address, subnet
            range or tag.
          type: string
          x-ms-enum:
            modelAsString: false
            name: NetworkSecurityGroupRuleAccess
            values:
              - description: Allow access.
                value: allow
              - description: Deny access.
                value: deny
        priority:
          description: >-
            Priorities within a Pool must be unique and are evaluated in order
            of priority. The lower the number the higher the priority. For
            example, rules could be specified with order numbers of 150, 250,
            and 350. The rule with the order number of 150 takes precedence over
            the rule that has an order of 250. Allowed priorities are 150 to
            3500. If any reserved or duplicate values are provided the request
            fails with HTTP status code 400.
          format: int32
          title: The priority for this rule.
          type: integer
        sourceAddressPrefix:
          description: >-
            Valid values are a single IP address (i.e. 10.10.10.10), IP subnet
            (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If
            any other values are provided the request fails with HTTP status
            code 400.
          title: The source address prefix or tag to match for the rule.
          type: string
        sourcePortRanges:
          description: >-
            Valid values are '*' (for all ports 0 - 65535), a specific port
            (i.e. 22), or a port range (i.e. 100-200). The ports must be in the
            range of 0 to 65535. Each entry in this collection must not overlap
            any other entry (either a range or an individual port). If any other
            values are provided the request fails with HTTP status code 400. The
            default value is '*'.
          items:
            type: string
          title: The source port ranges to match for the rule.
          type: array
      required:
        - priority
        - access
        - sourceAddressPrefix
      title: A network security group rule to apply to an inbound endpoint.
      type: object
    NodeAgentInformation:
      description: >-
        The Batch Compute Node agent is a program that runs on each Compute Node
        in the Pool and provides Batch capability on the Compute Node.
      properties:
        lastUpdateTime:
          description: >-
            This is the most recent time that the Compute Node agent was updated
            to a new version.
          format: date-time
          title: >-
            The time when the Compute Node agent was updated on the Compute
            Node.
          type: string
        version:
          description: >-
            This version number can be checked against the Compute Node agent
            release notes located at
            https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.
          title: >-
            The version of the Batch Compute Node agent running on the Compute
            Node.
          type: string
      required:
        - version
        - lastUpdateTime
      title: Information about the Compute Node agent.
      type: object
    NodeCounts:
      properties:
        creating:
          format: int32
          title: The number of Compute Nodes in the creating state.
          type: integer
        idle:
          format: int32
          title: The number of Compute Nodes in the idle state.
          type: integer
        leavingPool:
          format: int32
          title: The number of Compute Nodes in the leavingPool state.
          type: integer
        offline:
          format: int32
          title: The number of Compute Nodes in the offline state.
          type: integer
        preempted:
          format: int32
          title: The number of Compute Nodes in the preempted state.
          type: integer
        rebooting:
          format: int32
          title: The count of Compute Nodes in the rebooting state.
          type: integer
        reimaging:
          format: int32
          title: The number of Compute Nodes in the reimaging state.
          type: integer
        running:
          format: int32
          title: The number of Compute Nodes in the running state.
          type: integer
        startTaskFailed:
          format: int32
          title: The number of Compute Nodes in the startTaskFailed state.
          type: integer
        starting:
          format: int32
          title: The number of Compute Nodes in the starting state.
          type: integer
        total:
          format: int32
          title: The total number of Compute Nodes.
          type: integer
        unknown:
          format: int32
          title: The number of Compute Nodes in the unknown state.
          type: integer
        unusable:
          format: int32
          title: The number of Compute Nodes in the unusable state.
          type: integer
        waitingForStartTask:
          format: int32
          title: The number of Compute Nodes in the waitingForStartTask state.
          type: integer
      required:
        - creating
        - idle
        - offline
        - preempted
        - rebooting
        - reimaging
        - running
        - starting
        - startTaskFailed
        - leavingPool
        - unknown
        - unusable
        - waitingForStartTask
        - total
      title: The number of Compute Nodes in each Compute Node state.
      type: object
    NodeDisableSchedulingParameter:
      properties:
        nodeDisableSchedulingOption:
          description: The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
          title: >-
            What to do with currently running Tasks when disabling Task
            scheduling on the Compute Node.
          type: string
          x-ms-enum:
            modelAsString: false
            name: DisableComputeNodeSchedulingOption
            values:
              - description: >-
                  Terminate running Task processes and requeue the Tasks. The
                  Tasks may run again on other Compute Nodes, or when Task
                  scheduling is re-enabled on this Compute Node. Enter offline
                  state as soon as Tasks have been terminated.
                value: requeue
              - description: >-
                  Terminate running Tasks. The Tasks will be completed with
                  failureInfo indicating that they were terminated, and will not
                  run again. Enter offline state as soon as Tasks have been
                  terminated.
                value: terminate
              - description: >-
                  Allow currently running Tasks to complete. Schedule no new
                  Tasks while waiting. Enter offline state when all Tasks have
                  completed.
                name: taskCompletion
                value: taskcompletion
      title: Options for disabling scheduling on a Compute Node.
      type: object
    NodeFile:
      properties:
        isDirectory:
          title: Whether the object represents a directory.
          type: boolean
        name:
          title: The file path.
          type: string
        properties:
          $ref: '#/components/schemas/FileProperties'
          title: The file properties.
        url:
          title: The URL of the file.
          type: string
      title: Information about a file or directory on a Compute Node.
      type: object
    NodeFileListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/NodeFile'
          title: The list of files.
          type: array
      title: >-
        The result of listing the files on a Compute Node, or the files
        associated with a Task on a Compute Node.
      type: object
    NodeRebootParameter:
      properties:
        nodeRebootOption:
          description: The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          title: >-
            When to reboot the Compute Node and what to do with currently
            running Tasks.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeRebootOption
            values:
              - description: >-
                  Terminate running Task processes and requeue the Tasks. The
                  Tasks will run again when a Compute Node is available. Restart
                  the Compute Node as soon as Tasks have been terminated.
                value: requeue
              - description: >-
                  Terminate running Tasks. The Tasks will be completed with
                  failureInfo indicating that they were terminated, and will not
                  run again. Restart the Compute Node as soon as Tasks have been
                  terminated.
                value: terminate
              - description: >-
                  Allow currently running Tasks to complete. Schedule no new
                  Tasks while waiting. Restart the Compute Node when all Tasks
                  have completed.
                name: taskCompletion
                value: taskcompletion
              - description: >-
                  Allow currently running Tasks to complete, then wait for all
                  Task data retention periods to expire. Schedule no new Tasks
                  while waiting. Restart the Compute Node when all Task
                  retention periods have expired.
                name: retainedData
                value: retaineddata
      title: Options for rebooting a Compute Node.
      type: object
    NodeReimageParameter:
      properties:
        nodeReimageOption:
          description: The default value is requeue.
          enum:
            - requeue
            - terminate
            - taskcompletion
            - retaineddata
          title: >-
            When to reimage the Compute Node and what to do with currently
            running Tasks.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeReimageOption
            values:
              - description: >-
                  Terminate running Task processes and requeue the Tasks. The
                  Tasks will run again when a Compute Node is available. Reimage
                  the Compute Node as soon as Tasks have been terminated.
                value: requeue
              - description: >-
                  Terminate running Tasks. The Tasks will be completed with
                  failureInfo indicating that they were terminated, and will not
                  run again. Reimage the Compute Node as soon as Tasks have been
                  terminated.
                value: terminate
              - description: >-
                  Allow currently running Tasks to complete. Schedule no new
                  Tasks while waiting. Reimage the Compute Node when all Tasks
                  have completed.
                name: taskCompletion
                value: taskcompletion
              - description: >-
                  Allow currently running Tasks to complete, then wait for all
                  Task data retention periods to expire. Schedule no new Tasks
                  while waiting. Reimage the Compute Node when all Task
                  retention periods have expired.
                name: retainedData
                value: retaineddata
      title: Options for reimaging a Compute Node.
      type: object
    NodeRemoveParameter:
      properties:
        nodeDeallocationOption:
          $ref: '#/components/schemas/ComputeNodeDeallocationOption'
          description: The default value is requeue.
          title: >-
            Determines what to do with a Compute Node and its running task(s)
            after it has been selected for deallocation.
        nodeList:
          items:
            type: string
          maxItems: 100
          title: >-
            A list containing the IDs of the Compute Nodes to be removed from
            the specified Pool.
          type: array
        resizeTimeout:
          description: >-
            The default value is 15 minutes. The minimum value is 5 minutes. If
            you specify a value less than 5 minutes, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
          format: duration
          title: The timeout for removal of Compute Nodes to the Pool.
          type: string
      required:
        - nodeList
      title: Options for removing Compute Nodes from a Pool.
      type: object
    NodeUpdateUserParameter:
      properties:
        expiryTime:
          description: >-
            If omitted, the default is 1 day from the current time. For Linux
            Compute Nodes, the expiryTime has a precision up to a day.
          format: date-time
          title: The time at which the Account should expire.
          type: string
        password:
          description: >-
            The password is required for Windows Compute Nodes (those created
            with 'cloudServiceConfiguration', or created with
            'virtualMachineConfiguration' using a Windows Image reference). For
            Linux Compute Nodes, the password can optionally be specified along
            with the sshPublicKey property. If omitted, any existing password is
            removed.
          title: The password of the Account.
          type: string
        sshPublicKey:
          description: >-
            The public key should be compatible with OpenSSH encoding and should
            be base 64 encoded. This property can be specified only for Linux
            Compute Nodes. If this is specified for a Windows Compute Node, then
            the Batch service rejects the request; if you are calling the REST
            API directly, the HTTP status code is 400 (Bad Request). If omitted,
            any existing SSH public key is removed.
          title: >-
            The SSH public key that can be used for remote login to the Compute
            Node.
          type: string
      title: The set of changes to be made to a user Account on a Compute Node.
      type: object
    OnAllTasksComplete:
      enum:
        - noaction
        - terminatejob
      title: >-
        The action the Batch service should take when all Tasks in the Job are
        in the completed state.
      type: string
      x-ms-enum:
        modelAsString: false
        name: OnAllTasksComplete
        values:
          - description: >-
              Do nothing. The Job remains active unless terminated or disabled
              by some other means.
            name: noAction
            value: noaction
          - description: >-
              Terminate the Job. The Job's terminateReason is set to
              'AllTasksComplete'.
            name: terminateJob
            value: terminatejob
    OnTaskFailure:
      description: >-
        A Task is considered to have failed if has a failureInfo. A failureInfo
        is set if the Task completes with a non-zero exit code after exhausting
        its retry count, or if there was an error starting the Task, for example
        due to a resource file download error. The default is noaction.
      enum:
        - noaction
        - performexitoptionsjobaction
      title: The action the Batch service should take when any Task in the Job fails.
      type: string
      x-ms-enum:
        modelAsString: false
        name: OnTaskFailure
        values:
          - description: >-
              Do nothing. The Job remains active unless terminated or disabled
              by some other means.
            name: noAction
            value: noaction
          - description: >-
              Take the action associated with the Task exit condition in the
              Task's exitConditions collection. (This may still result in no
              action being taken, if that is what the Task specifies.)
            name: performExitOptionsJobAction
            value: performexitoptionsjobaction
    OutputFile:
      properties:
        destination:
          $ref: '#/components/schemas/OutputFileDestination'
          title: The destination for the output file(s).
        filePattern:
          description: >-
            Both relative and absolute paths are supported. Relative paths are
            relative to the Task working directory. The following wildcards are
            supported: * matches 0 or more characters (for example pattern abc*
            would match abc or abcdef), ** matches any directory, ? matches any
            single character, [abc] matches one character in the brackets, and
            [a-c] matches one character in the range. Brackets can include a
            negation to match any character not specified (for example [!abc]
            matches any character but a, b, or c). If a file name starts with
            "." it is ignored by default but may be matched by specifying it
            explicitly (for example *.gif will not match .a.gif, but .*.gif
            will). A simple example: **\*.txt matches any file that does not
            start in '.' and ends with .txt in the Task working directory or any
            subdirectory. If the filename contains a wildcard character it can
            be escaped using brackets (for example abc[*] would match a file
            named abc*). Note that both \ and / are treated as directory
            separators on Windows, but only / is on Linux. Environment variables
            (%var% on Windows or $var on Linux) are expanded prior to the
            pattern being applied.
          title: A pattern indicating which file(s) to upload.
          type: string
        uploadOptions:
          $ref: '#/components/schemas/OutputFileUploadOptions'
          title: >-
            Additional options for the upload operation, including under what
            conditions to perform the upload.
      required:
        - filePattern
        - destination
        - uploadOptions
      title: >-
        A specification for uploading files from an Azure Batch Compute Node to
        another location after the Batch service has finished executing the Task
        process.
      type: object
    OutputFileBlobContainerDestination:
      properties:
        containerUrl:
          description: >-
            The URL must include a Shared Access Signature (SAS) granting write
            permissions to the container.
          title: >-
            The URL of the container within Azure Blob Storage to which to
            upload the file(s).
          type: string
        path:
          description: >-
            If filePattern refers to a specific file (i.e. contains no
            wildcards), then path is the name of the blob to which to upload
            that file. If filePattern contains one or more wildcards (and
            therefore may match multiple files), then path is the name of the
            blob virtual directory (which is prepended to each blob name) to
            which to upload the file(s). If omitted, file(s) are uploaded to the
            root of the container with a blob name matching their file name.
          title: >-
            The destination blob or virtual directory within the Azure Storage
            container.
          type: string
      required:
        - containerUrl
      title: >-
        Specifies a file upload destination within an Azure blob storage
        container.
      type: object
    OutputFileDestination:
      properties:
        container:
          $ref: '#/components/schemas/OutputFileBlobContainerDestination'
          title: A location in Azure blob storage to which files are uploaded.
      title: The destination to which a file should be uploaded.
      type: object
    OutputFileUploadCondition:
      enum:
        - tasksuccess
        - taskfailure
        - taskcompletion
      title: >-
        The conditions under which a Task output file or set of files should be
        uploaded.
      type: string
      x-ms-enum:
        modelAsString: false
        name: OutputFileUploadCondition
        values:
          - description: >-
              Upload the file(s) only after the Task process exits with an exit
              code of 0.
            name: taskSuccess
            value: tasksuccess
          - description: >-
              Upload the file(s) only after the Task process exits with a
              nonzero exit code.
            name: taskFailure
            value: taskfailure
          - description: >-
              Upload the file(s) after the Task process exits, no matter what
              the exit code was.
            name: taskCompletion
            value: taskcompletion
    OutputFileUploadOptions:
      properties:
        uploadCondition:
          $ref: '#/components/schemas/OutputFileUploadCondition'
          description: The default is taskcompletion.
          title: >-
            The conditions under which the Task output file or set of files
            should be uploaded.
      required:
        - uploadCondition
      title: >-
        Details about an output file upload operation, including under what
        conditions to perform the upload.
      type: object
    PoolAddParameter:
      properties:
        applicationLicenses:
          description: >-
            The list of application licenses must be a subset of available Batch
            service application licenses. If a license is requested which is not
            supported, Pool creation will fail.
          items:
            type: string
          title: >-
            The list of application licenses the Batch service will make
            available on each Compute Node in the Pool.
          type: array
        applicationPackageReferences:
          description: >-
            Changes to Package references affect all new Nodes joining the Pool,
            but do not affect Compute Nodes that are already in the Pool until
            they are rebooted or reimaged. There is a maximum of 10 Package
            references on any given Pool.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            The list of Packages to be installed on each Compute Node in the
            Pool.
          type: array
        autoScaleEvaluationInterval:
          description: >-
            The default value is 15 minutes. The minimum and maximum value are 5
            minutes and 168 hours respectively. If you specify a value less than
            5 minutes or greater than 168 hours, the Batch service returns an
            error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
          format: duration
          title: >-
            The time interval at which to automatically adjust the Pool size
            according to the autoscale formula.
          type: string
        autoScaleFormula:
          description: >-
            This property must not be specified if enableAutoScale is set to
            false. It is required if enableAutoScale is set to true. The formula
            is checked for validity before the Pool is created. If the formula
            is not valid, the Batch service rejects the request with detailed
            error information. For more information about specifying this
            formula, see 'Automatically scale Compute Nodes in an Azure Batch
            Pool'
            (https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/).
          title: A formula for the desired number of Compute Nodes in the Pool.
          type: string
        certificateReferences:
          description: >-
            For Windows Nodes, the Batch service installs the Certificates to
            the specified Certificate store and location. For Linux Compute
            Nodes, the Certificates are stored in a directory inside the Task
            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
            location. For Certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and Certificates are placed in that
            directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: >-
            The list of Certificates to be installed on each Compute Node in the
            Pool.
          type: array
        cloudServiceConfiguration:
          $ref: '#/components/schemas/CloudServiceConfiguration'
          description: >-
            This property and virtualMachineConfiguration are mutually exclusive
            and one of the properties must be specified. This property cannot be
            specified if the Batch Account was created with its
            poolAllocationMode property set to 'UserSubscription'.
          title: The cloud service configuration for the Pool.
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: The display name for the Pool.
          type: string
        enableAutoScale:
          description: >-
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula property is required and the Pool automatically
            resizes according to the formula. The default value is false.
          title: Whether the Pool size should automatically adjust over time.
          type: boolean
        enableInterNodeCommunication:
          description: >-
            Enabling inter-node communication limits the maximum size of the
            Pool due to deployment restrictions on the Compute Nodes of the
            Pool. This may result in the Pool not reaching its desired size. The
            default value is false.
          title: Whether the Pool permits direct communication between Compute Nodes.
          type: boolean
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that is,
            you may not have two Pool IDs within an Account that differ only by
            case).
          title: A string that uniquely identifies the Pool within the Account.
          type: string
        maxTasksPerNode:
          description: >-
            The default value is 1. The maximum value is the smaller of 4 times
            the number of cores of the vmSize of the Pool or 256.
          format: int32
          title: >-
            The maximum number of Tasks that can run concurrently on a single
            Compute Node in the Pool.
          type: integer
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Pool as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          title: The network configuration for the Pool.
        resizeTimeout:
          description: >-
            This timeout applies only to manual scaling; it has no effect when
            enableAutoScale is set to true. The default value is 15 minutes. The
            minimum value is 5 minutes. If you specify a value less than 5
            minutes, the Batch service returns an error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
          format: duration
          title: The timeout for allocation of Compute Nodes to the Pool.
          type: string
        startTask:
          $ref: '#/components/schemas/StartTask'
          description: >-
            The Task runs when the Compute Node is added to the Pool or when the
            Compute Node is restarted.
          title: A Task specified to run on each Compute Node as it joins the Pool.
        targetDedicatedNodes:
          description: >-
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
          format: int32
          title: The desired number of dedicated Compute Nodes in the Pool.
          type: integer
        targetLowPriorityNodes:
          description: >-
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
          format: int32
          title: The desired number of low-priority Compute Nodes in the Pool.
          type: integer
        taskSchedulingPolicy:
          $ref: '#/components/schemas/TaskSchedulingPolicy'
          description: 'If not specified, the default is spread.'
          title: How Tasks are distributed across Compute Nodes in a Pool.
        userAccounts:
          items:
            $ref: '#/components/schemas/UserAccount'
          title: >-
            The list of user Accounts to be created on each Compute Node in the
            Pool.
          type: array
        virtualMachineConfiguration:
          $ref: '#/components/schemas/VirtualMachineConfiguration'
          description: >-
            This property and cloudServiceConfiguration are mutually exclusive
            and one of the properties must be specified.
          title: The virtual machine configuration for the Pool.
        vmSize:
          description: >-
            For information about available sizes of virtual machines for Cloud
            Services Pools (pools created with cloudServiceConfiguration), see
            Sizes for Cloud Services
            (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/).
            Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2
            and A2V2. For information about available VM sizes for Pools using
            Images from the Virtual Machines Marketplace (pools created with
            virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/)
            or Sizes for Virtual Machines (Windows)
            (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/).
            Batch supports all Azure VM sizes except STANDARD_A0 and those with
            premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2
            series).
          title: >-
            The size of virtual machines in the Pool. All virtual machines in a
            Pool are the same size.
          type: string
      required:
        - id
        - vmSize
      title: A Pool in the Azure Batch service to add.
      type: object
    PoolEnableAutoScaleParameter:
      properties:
        autoScaleEvaluationInterval:
          description: >-
            The default value is 15 minutes. The minimum and maximum value are 5
            minutes and 168 hours respectively. If you specify a value less than
            5 minutes or greater than 168 hours, the Batch service rejects the
            request with an invalid property value error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request). If you
            specify a new interval, then the existing autoscale evaluation
            schedule will be stopped and a new autoscale evaluation schedule
            will be started, with its starting time being the time when this
            request was issued.
          format: duration
          title: >-
            The time interval at which to automatically adjust the Pool size
            according to the autoscale formula.
          type: string
        autoScaleFormula:
          description: >-
            The formula is checked for validity before it is applied to the
            Pool. If the formula is not valid, the Batch service rejects the
            request with detailed error information. For more information about
            specifying this formula, see Automatically scale Compute Nodes in an
            Azure Batch Pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
          title: The formula for the desired number of Compute Nodes in the Pool.
          type: string
      title: Options for enabling automatic scaling on a Pool.
      type: object
    PoolEndpointConfiguration:
      properties:
        inboundNATPools:
          description: >-
            The maximum number of inbound NAT Pools per Batch Pool is 5. If the
            maximum number of inbound NAT Pools is exceeded the request fails
            with HTTP status code 400.
          items:
            $ref: '#/components/schemas/InboundNATPool'
          title: >-
            A list of inbound NAT Pools that can be used to address specific
            ports on an individual Compute Node externally.
          type: array
      required:
        - inboundNATPools
      title: The endpoint configuration for a Pool.
      type: object
    PoolEvaluateAutoScaleParameter:
      properties:
        autoScaleFormula:
          description: >-
            The formula is validated and its results calculated, but it is not
            applied to the Pool. To apply the formula to the Pool, 'Enable
            automatic scaling on a Pool'. For more information about specifying
            this formula, see Automatically scale Compute Nodes in an Azure
            Batch Pool
            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
          title: The formula for the desired number of Compute Nodes in the Pool.
          type: string
      required:
        - autoScaleFormula
      title: Options for evaluating an automatic scaling formula on a Pool.
      type: object
    PoolInformation:
      properties:
        autoPoolSpecification:
          $ref: '#/components/schemas/AutoPoolSpecification'
          description: >-
            If auto Pool creation fails, the Batch service moves the Job to a
            completed state, and the Pool creation error is set in the Job's
            scheduling error property. The Batch service manages the lifetime
            (both creation and, unless keepAlive is specified, deletion) of the
            auto Pool. Any user actions that affect the lifetime of the auto
            Pool while the Job is active will result in unexpected behavior. You
            must specify either the Pool ID or the auto Pool specification, but
            not both.
          title: >-
            Characteristics for a temporary 'auto pool'. The Batch service will
            create this auto Pool when the Job is submitted.
        poolId:
          description: >-
            You must ensure that the Pool referenced by this property exists. If
            the Pool does not exist at the time the Batch service tries to
            schedule a Job, no Tasks for the Job will run until you create a
            Pool with that id. Note that the Batch service will not reject the
            Job request; it will simply not run Tasks until the Pool exists. You
            must specify either the Pool ID or the auto Pool specification, but
            not both.
          title: >-
            The ID of an existing Pool. All the Tasks of the Job will run on the
            specified Pool.
          type: string
      title: Specifies how a Job should be assigned to a Pool.
      type: object
    PoolListUsageMetricsResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          items:
            $ref: '#/components/schemas/PoolUsageMetrics'
          title: The Pool usage metrics data.
          type: array
      title: The result of a listing the usage metrics for an Account.
      type: object
    PoolNodeCounts:
      properties:
        dedicated:
          $ref: '#/components/schemas/NodeCounts'
          title: The number of dedicated Compute Nodes in each state.
        lowPriority:
          $ref: '#/components/schemas/NodeCounts'
          title: The number of low priority Compute Nodes in each state.
        poolId:
          title: The ID of the Pool.
          type: string
      required:
        - poolId
      title: The number of Compute Nodes in each state for a Pool.
      type: object
    PoolNodeCountsListResult:
      properties:
        odata.nextLink:
          title: The URL to get the next set of results.
          type: string
        value:
          description: A list of Compute Node counts by Pool.
          items:
            $ref: '#/components/schemas/PoolNodeCounts'
          type: array
      title: The result of listing the Compute Node counts in the Account.
      type: object
    PoolPatchParameter:
      properties:
        applicationPackageReferences:
          description: >-
            Changes to Package references affect all new Nodes joining the Pool,
            but do not affect Compute Nodes that are already in the Pool until
            they are rebooted or reimaged. If this element is present, it
            replaces any existing Package references. If you specify an empty
            collection, then all Package references are removed from the Pool.
            If omitted, any existing Package references are left unchanged.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: A list of Packages to be installed on each Compute Node in the Pool.
          type: array
        certificateReferences:
          description: >-
            If this element is present, it replaces any existing Certificate
            references configured on the Pool. If omitted, any existing
            Certificate references are left unchanged. For Windows Nodes, the
            Batch service installs the Certificates to the specified Certificate
            store and location. For Linux Compute Nodes, the Certificates are
            stored in a directory inside the Task working directory and an
            environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the
            Task to query for this location. For Certificates with visibility of
            'remoteUser', a 'certs' directory is created in the user's home
            directory (e.g., /home/{user-name}/certs) and Certificates are
            placed in that directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: >-
            A list of Certificates to be installed on each Compute Node in the
            Pool.
          type: array
        metadata:
          description: >-
            If this element is present, it replaces any existing metadata
            configured on the Pool. If you specify an empty collection, any
            metadata is removed from the Pool. If omitted, any existing metadata
            is left unchanged.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Pool as metadata.
          type: array
        startTask:
          $ref: '#/components/schemas/StartTask'
          description: >-
            If this element is present, it overwrites any existing start Task.
            If omitted, any existing start Task is left unchanged.
          title: >-
            A Task to run on each Compute Node as it joins the Pool. The Task
            runs when the Compute Node is added to the Pool or when the Compute
            Node is restarted.
      title: The set of changes to be made to a Pool.
      type: object
    PoolResizeParameter:
      properties:
        nodeDeallocationOption:
          $ref: '#/components/schemas/ComputeNodeDeallocationOption'
          description: The default value is requeue.
          title: >-
            Determines what to do with a Compute Node and its running task(s) if
            the Pool size is decreasing.
        resizeTimeout:
          description: >-
            The default value is 15 minutes. The minimum value is 5 minutes. If
            you specify a value less than 5 minutes, the Batch service returns
            an error; if you are calling the REST API directly, the HTTP status
            code is 400 (Bad Request).
          format: duration
          title: >-
            The timeout for allocation of Nodes to the Pool or removal of
            Compute Nodes from the Pool.
          type: string
        targetDedicatedNodes:
          format: int32
          title: The desired number of dedicated Compute Nodes in the Pool.
          type: integer
        targetLowPriorityNodes:
          format: int32
          title: The desired number of low-priority Compute Nodes in the Pool.
          type: integer
      title: Options for changing the size of a Pool.
      type: object
    PoolSpecification:
      properties:
        applicationLicenses:
          description: >-
            The list of application licenses must be a subset of available Batch
            service application licenses. If a license is requested which is not
            supported, Pool creation will fail. The permitted licenses available
            on the Pool are 'maya', 'vray', '3dsmax', 'arnold'. An additional
            charge applies for each application license added to the Pool.
          items:
            type: string
          title: >-
            The list of application licenses the Batch service will make
            available on each Compute Node in the Pool.
          type: array
        applicationPackageReferences:
          description: >-
            Changes to Package references affect all new Nodes joining the Pool,
            but do not affect Compute Nodes that are already in the Pool until
            they are rebooted or reimaged. There is a maximum of 10 Package
            references on any given Pool.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            The list of Packages to be installed on each Compute Node in the
            Pool.
          type: array
        autoScaleEvaluationInterval:
          description: >-
            The default value is 15 minutes. The minimum and maximum value are 5
            minutes and 168 hours respectively. If you specify a value less than
            5 minutes or greater than 168 hours, the Batch service rejects the
            request with an invalid property value error; if you are calling the
            REST API directly, the HTTP status code is 400 (Bad Request).
          format: duration
          title: >-
            The time interval at which to automatically adjust the Pool size
            according to the autoscale formula.
          type: string
        autoScaleFormula:
          description: >-
            This property must not be specified if enableAutoScale is set to
            false. It is required if enableAutoScale is set to true. The formula
            is checked for validity before the Pool is created. If the formula
            is not valid, the Batch service rejects the request with detailed
            error information.
          title: The formula for the desired number of Compute Nodes in the Pool.
          type: string
        certificateReferences:
          description: >-
            For Windows Nodes, the Batch service installs the Certificates to
            the specified Certificate store and location. For Linux Compute
            Nodes, the Certificates are stored in a directory inside the Task
            working directory and an environment variable
            AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
            location. For Certificates with visibility of 'remoteUser', a
            'certs' directory is created in the user's home directory (e.g.,
            /home/{user-name}/certs) and Certificates are placed in that
            directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: >-
            A list of Certificates to be installed on each Compute Node in the
            Pool.
          type: array
        cloudServiceConfiguration:
          $ref: '#/components/schemas/CloudServiceConfiguration'
          description: >-
            This property must be specified if the Pool needs to be created with
            Azure PaaS VMs. This property and virtualMachineConfiguration are
            mutually exclusive and one of the properties must be specified. If
            neither is specified then the Batch service returns an error; if you
            are calling the REST API directly, the HTTP status code is 400 (Bad
            Request). This property cannot be specified if the Batch Account was
            created with its poolAllocationMode property set to
            'UserSubscription'.
          title: The cloud service configuration for the Pool.
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: The display name for the Pool.
          type: string
        enableAutoScale:
          description: >-
            If false, at least one of targetDedicateNodes and
            targetLowPriorityNodes must be specified. If true, the
            autoScaleFormula element is required. The Pool automatically resizes
            according to the formula. The default value is false.
          title: Whether the Pool size should automatically adjust over time.
          type: boolean
        enableInterNodeCommunication:
          description: >-
            Enabling inter-node communication limits the maximum size of the
            Pool due to deployment restrictions on the Compute Nodes of the
            Pool. This may result in the Pool not reaching its desired size. The
            default value is false.
          title: Whether the Pool permits direct communication between Compute Nodes.
          type: boolean
        maxTasksPerNode:
          description: >-
            The default value is 1. The maximum value is the smaller of 4 times
            the number of cores of the vmSize of the Pool or 256.
          format: int32
          title: >-
            The maximum number of Tasks that can run concurrently on a single
            Compute Node in the Pool.
          type: integer
        metadata:
          description: >-
            The Batch service does not assign any meaning to metadata; it is
            solely for the use of user code.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Pool as metadata.
          type: array
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
          title: The network configuration for the Pool.
        resizeTimeout:
          description: >-
            This timeout applies only to manual scaling; it has no effect when
            enableAutoScale is set to true. The default value is 15 minutes. The
            minimum value is 5 minutes. If you specify a value less than 5
            minutes, the Batch service rejects the request with an error; if you
            are calling the REST API directly, the HTTP status code is 400 (Bad
            Request).
          format: duration
          title: The timeout for allocation of Compute Nodes to the Pool.
          type: string
        startTask:
          $ref: '#/components/schemas/StartTask'
          title: >-
            A Task to run on each Compute Node as it joins the Pool. The Task
            runs when the Compute Node is added to the Pool or when the Compute
            Node is restarted.
        targetDedicatedNodes:
          description: >-
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
          format: int32
          title: The desired number of dedicated Compute Nodes in the Pool.
          type: integer
        targetLowPriorityNodes:
          description: >-
            This property must not be specified if enableAutoScale is set to
            true. If enableAutoScale is set to false, then you must set either
            targetDedicatedNodes, targetLowPriorityNodes, or both.
          format: int32
          title: The desired number of low-priority Compute Nodes in the Pool.
          type: integer
        taskSchedulingPolicy:
          $ref: '#/components/schemas/TaskSchedulingPolicy'
          description: 'If not specified, the default is spread.'
          title: How Tasks are distributed across Compute Nodes in a Pool.
        userAccounts:
          items:
            $ref: '#/components/schemas/UserAccount'
          title: >-
            The list of user Accounts to be created on each Compute Node in the
            Pool.
          type: array
        virtualMachineConfiguration:
          $ref: '#/components/schemas/VirtualMachineConfiguration'
          description: >-
            This property must be specified if the Pool needs to be created with
            Azure IaaS VMs. This property and cloudServiceConfiguration are
            mutually exclusive and one of the properties must be specified. If
            neither is specified then the Batch service returns an error; if you
            are calling the REST API directly, the HTTP status code is 400 (Bad
            Request).
          title: The virtual machine configuration for the Pool.
        vmSize:
          description: >-
            For information about available sizes of virtual machines in Pools,
            see Choose a VM size for Compute Nodes in an Azure Batch Pool
            (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
          title: >-
            The size of the virtual machines in the Pool. All virtual machines
            in a Pool are the same size.
          type: string
      required:
        - vmSize
      title: Specification for creating a new Pool.
      type: object
    PoolStatistics:
      properties:
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        resourceStats:
          $ref: '#/components/schemas/ResourceStatistics'
          title: >-
            Statistics related to resource consumption by Compute Nodes in the
            Pool.
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
        url:
          title: The URL for the statistics.
          type: string
        usageStats:
          $ref: '#/components/schemas/UsageStatistics'
          title: >-
            Statistics related to Pool usage, such as the amount of core-time
            used.
      required:
        - url
        - startTime
        - lastUpdateTime
      title: >-
        Contains utilization and resource usage statistics for the lifetime of a
        Pool.
      type: object
    PoolUpdatePropertiesParameter:
      properties:
        applicationPackageReferences:
          description: >-
            The list replaces any existing Application Package references on the
            Pool. Changes to Application Package references affect all new
            Compute Nodes joining the Pool, but do not affect Compute Nodes that
            are already in the Pool until they are rebooted or reimaged. There
            is a maximum of 10 Application Package references on any given Pool.
            If omitted, or if you specify an empty collection, any existing
            Application Packages references are removed from the Pool. A maximum
            of 10 references may be specified on a given Pool.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            The list of Application Packages to be installed on each Compute
            Node in the Pool.
          type: array
        certificateReferences:
          description: >-
            This list replaces any existing Certificate references configured on
            the Pool. If you specify an empty collection, any existing
            Certificate references are removed from the Pool. For Windows Nodes,
            the Batch service installs the Certificates to the specified
            Certificate store and location. For Linux Compute Nodes, the
            Certificates are stored in a directory inside the Task working
            directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
            supplied to the Task to query for this location. For Certificates
            with visibility of 'remoteUser', a 'certs' directory is created in
            the user's home directory (e.g., /home/{user-name}/certs) and
            Certificates are placed in that directory.
          items:
            $ref: '#/components/schemas/CertificateReference'
          title: >-
            A list of Certificates to be installed on each Compute Node in the
            Pool.
          type: array
        metadata:
          description: >-
            This list replaces any existing metadata configured on the Pool. If
            omitted, or if you specify an empty collection, any existing
            metadata is removed from the Pool.
          items:
            $ref: '#/components/schemas/MetadataItem'
          title: A list of name-value pairs associated with the Pool as metadata.
          type: array
        startTask:
          $ref: '#/components/schemas/StartTask'
          description: >-
            If this element is present, it overwrites any existing start Task.
            If omitted, any existing start Task is removed from the Pool.
          title: >-
            A Task to run on each Compute Node as it joins the Pool. The Task
            runs when the Compute Node is added to the Pool or when the Compute
            Node is restarted.
      required:
        - certificateReferences
        - metadata
        - applicationPackageReferences
      title: The set of changes to be made to a Pool.
      type: object
    PoolUsageMetrics:
      properties:
        endTime:
          format: date-time
          title: The end time of the aggregation interval covered by this entry.
          type: string
        poolId:
          title: The ID of the Pool whose metrics are aggregated in this entry.
          type: string
        startTime:
          format: date-time
          title: The start time of the aggregation interval covered by this entry.
          type: string
        totalCoreHours:
          format: double
          title: >-
            The total core hours used in the Pool during this aggregation
            interval.
          type: number
        vmSize:
          description: >-
            For information about available sizes of virtual machines in Pools,
            see Choose a VM size for Compute Nodes in an Azure Batch Pool
            (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
          title: >-
            The size of virtual machines in the Pool. All VMs in a Pool are the
            same size.
          type: string
      required:
        - poolId
        - startTime
        - endTime
        - vmSize
        - totalCoreHours
      title: Usage metrics for a Pool across an aggregation interval.
      type: object
    RecentJob:
      properties:
        id:
          title: The ID of the Job.
          type: string
        url:
          title: The URL of the Job.
          type: string
      title: Information about the most recent Job to run under the Job Schedule.
      type: object
    ResizeError:
      properties:
        code:
          title: >-
            An identifier for the Pool resize error. Codes are invariant and are
            intended to be consumed programmatically.
          type: string
        message:
          title: >-
            A message describing the Pool resize error, intended to be suitable
            for display in a user interface.
          type: string
        values:
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: A list of additional error details related to the Pool resize error.
          type: array
      title: An error that occurred when resizing a Pool.
      type: object
    ResourceFile:
      properties:
        autoStorageContainerName:
          description: >-
            The autoStorageContainerName, storageContainerUrl and httpUrl
            properties are mutually exclusive and one of them must be specified.
          title: The storage container name in the auto storage Account.
          type: string
        blobPrefix:
          description: >-
            The property is valid only when autoStorageContainerName or
            storageContainerUrl is used. This prefix can be a partial filename
            or a subdirectory. If a prefix is not specified, all the files in
            the container will be downloaded.
          title: >-
            The blob prefix to use when downloading blobs from an Azure Storage
            container. Only the blobs whose names begin with the specified
            prefix will be downloaded.
          type: string
        fileMode:
          description: >-
            This property applies only to files being downloaded to Linux
            Compute Nodes. It will be ignored if it is specified for a
            resourceFile which will be downloaded to a Windows Compute Node. If
            this property is not specified for a Linux Compute Node, then a
            default value of 0770 is applied to the file.
          title: The file permission mode attribute in octal format.
          type: string
        filePath:
          description: >-
            If the httpUrl property is specified, the filePath is required and
            describes the path which the file will be downloaded to, including
            the filename. Otherwise, if the autoStorageContainerName or
            storageContainerUrl property is specified, filePath is optional and
            is the directory to download the files to. In the case where
            filePath is used as a directory, any directory structure already
            associated with the input data will be retained in full and appended
            to the specified filePath directory. The specified relative path
            cannot break out of the Task's working directory (for example by
            using '..').
          title: >-
            The location on the Compute Node to which to download the file(s),
            relative to the Task's working directory.
          type: string
        httpUrl:
          description: >-
            The autoStorageContainerName, storageContainerUrl and httpUrl
            properties are mutually exclusive and one of them must be specified.
            If the URL points to Azure Blob Storage, it must be readable using
            anonymous access; that is, the Batch service does not present any
            credentials when downloading the blob. There are two ways to get
            such a URL for a blob in Azure storage: include a Shared Access
            Signature (SAS) granting read permissions on the blob, or set the
            ACL for the blob or its container to allow public access.
          title: The URL of the file to download.
          type: string
        storageContainerUrl:
          description: >-
            The autoStorageContainerName, storageContainerUrl and httpUrl
            properties are mutually exclusive and one of them must be specified.
            This URL must be readable and listable using anonymous access; that
            is, the Batch service does not present any credentials when
            downloading blobs from the container. There are two ways to get such
            a URL for a container in Azure storage: include a Shared Access
            Signature (SAS) granting read and list permissions on the container,
            or set the ACL for the container to allow public access.
          title: The URL of the blob container within Azure Blob Storage.
          type: string
      title: A single file or multiple files to be downloaded to a Compute Node.
      type: object
    ResourceStatistics:
      properties:
        avgCPUPercentage:
          format: double
          title: >-
            The average CPU usage across all Compute Nodes in the Pool
            (percentage per node).
          type: number
        avgDiskGiB:
          format: double
          title: >-
            The average used disk space in GiB across all Compute Nodes in the
            Pool.
          type: number
        avgMemoryGiB:
          format: double
          title: >-
            The average memory usage in GiB across all Compute Nodes in the
            Pool.
          type: number
        diskReadGiB:
          format: double
          title: >-
            The total amount of data in GiB of disk reads across all Compute
            Nodes in the Pool.
          type: number
        diskReadIOps:
          format: int64
          title: >-
            The total number of disk read operations across all Compute Nodes in
            the Pool.
          type: integer
        diskWriteGiB:
          format: double
          title: >-
            The total amount of data in GiB of disk writes across all Compute
            Nodes in the Pool.
          type: number
        diskWriteIOps:
          format: int64
          title: >-
            The total number of disk write operations across all Compute Nodes
            in the Pool.
          type: integer
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        networkReadGiB:
          format: double
          title: >-
            The total amount of data in GiB of network reads across all Compute
            Nodes in the Pool.
          type: number
        networkWriteGiB:
          format: double
          title: >-
            The total amount of data in GiB of network writes across all Compute
            Nodes in the Pool.
          type: number
        peakDiskGiB:
          format: double
          title: >-
            The peak used disk space in GiB across all Compute Nodes in the
            Pool.
          type: number
        peakMemoryGiB:
          format: double
          title: The peak memory usage in GiB across all Compute Nodes in the Pool.
          type: number
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
      required:
        - startTime
        - lastUpdateTime
        - avgCPUPercentage
        - avgMemoryGiB
        - peakMemoryGiB
        - avgDiskGiB
        - peakDiskGiB
        - diskReadIOps
        - diskWriteIOps
        - diskReadGiB
        - diskWriteGiB
        - networkReadGiB
        - networkWriteGiB
      title: Statistics related to resource consumption by Compute Nodes in a Pool.
      type: object
    Schedule:
      properties:
        doNotRunAfter:
          description: >-
            If you do not specify a doNotRunAfter time, and you are creating a
            recurring Job Schedule, the Job Schedule will remain active until
            you explicitly terminate it.
          format: date-time
          title: >-
            A time after which no Job will be created under this Job Schedule.
            The schedule will move to the completed state as soon as this
            deadline is past and there is no active Job under this Job Schedule.
          type: string
        doNotRunUntil:
          description: >-
            If you do not specify a doNotRunUntil time, the schedule becomes
            ready to create Jobs immediately.
          format: date-time
          title: >-
            The earliest time at which any Job may be created under this Job
            Schedule.
          type: string
        recurrenceInterval:
          description: >-
            Because a Job Schedule can have at most one active Job under it at
            any given time, if it is time to create a new Job under a Job
            Schedule, but the previous Job is still running, the Batch service
            will not create the new Job until the previous Job finishes. If the
            previous Job does not finish within the startWindow period of the
            new recurrenceInterval, then no new Job will be scheduled for that
            interval. For recurring Jobs, you should normally specify a
            jobManagerTask in the jobSpecification. If you do not use
            jobManagerTask, you will need an external process to monitor when
            Jobs are created, add Tasks to the Jobs and terminate the Jobs ready
            for the next recurrence. The default is that the schedule does not
            recur: one Job is created, within the startWindow after the
            doNotRunUntil time, and the schedule is complete as soon as that Job
            finishes. The minimum value is 1 minute. If you specify a lower
            value, the Batch service rejects the schedule with an error; if you
            are calling the REST API directly, the HTTP status code is 400 (Bad
            Request).
          format: duration
          title: >-
            The time interval between the start times of two successive Jobs
            under the Job Schedule. A Job Schedule can have at most one active
            Job under it at any given time.
          type: string
        startWindow:
          description: >-
            If a Job is not created within the startWindow interval, then the
            'opportunity' is lost; no Job will be created until the next
            recurrence of the schedule. If the schedule is recurring, and the
            startWindow is longer than the recurrence interval, then this is
            equivalent to an infinite startWindow, because the Job that is 'due'
            in one recurrenceInterval is not carried forward into the next
            recurrence interval. The default is infinite. The minimum value is 1
            minute. If you specify a lower value, the Batch service rejects the
            schedule with an error; if you are calling the REST API directly,
            the HTTP status code is 400 (Bad Request).
          format: duration
          title: >-
            The time interval, starting from the time at which the schedule
            indicates a Job should be created, within which a Job must be
            created.
          type: string
      title: The schedule according to which Jobs will be created
      type: object
    StartTask:
      description: >-
        Batch will retry Tasks when a recovery operation is triggered on a Node.
        Examples of recovery operations include (but are not limited to) when an
        unhealthy Node is rebooted or a Compute Node disappeared due to host
        failure. Retries due to recovery operations are independent of and are
        not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount
        is 0, an internal retry due to a recovery operation may occur. Because
        of this, all Tasks should be idempotent. This means Tasks need to
        tolerate being interrupted and restarted without causing any corruption
        or duplicate data. The best practice for long running Tasks is to use
        some form of checkpointing. In some cases the start Task may be re-run
        even though the Compute Node was not rebooted. Special care should be
        taken to avoid start Tasks which create breakaway process or
        install/launch services from the start Task working directory, as this
        will block Batch from being able to re-run the start Task.
      properties:
        commandLine:
          description: >-
            The command line does not run under a shell, and therefore cannot
            take advantage of shell features such as environment variable
            expansion. If you want to take advantage of such features, you
            should invoke the shell in the command line, for example using "cmd
            /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. If the
            command line refers to file paths, it should use a relative path
            (relative to the Task working directory), or use the Batch provided
            environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the start Task.
          type: string
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            When this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: The settings for the container under which the start Task runs.
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: A list of environment variable settings for the start Task.
          type: array
        maxTaskRetryCount:
          description: >-
            The Batch service retries a Task if its exit code is nonzero. Note
            that this value specifically controls the number of retries. The
            Batch service will try the Task once, and may then retry up to this
            limit. For example, if the maximum retry count is 3, Batch tries the
            Task up to 4 times (one initial try and 3 retries). If the maximum
            retry count is 0, the Batch service does not retry the Task. If the
            maximum retry count is -1, the Batch service retries the Task
            without limit.
          format: int32
          title: The maximum number of times the Task may be retried.
          type: integer
        resourceFiles:
          description: >-
            Files listed under this element are located in the Task's working
            directory.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.  There is a maximum size for
            the list of resource files. When the max size is exceeded, the
            request will fail and the response error code will be
            RequestEntityTooLarge. If this occurs, the collection of
            ResourceFiles must be reduced in size. This can be achieved using
            .zip files, Application Packages, or Docker Containers.
          type: array
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task.
          title: The user identity under which the start Task runs.
        waitForSuccess:
          description: >-
            If true and the start Task fails on a Node, the Batch service
            retries the start Task up to its maximum retry count
            (maxTaskRetryCount). If the Task has still not completed
            successfully after all retries, then the Batch service marks the
            Node unusable, and will not schedule Tasks to it. This condition can
            be detected via the Compute Node state and failure info details. If
            false, the Batch service will not wait for the start Task to
            complete. In this case, other Tasks can start executing on the
            Compute Node while the start Task is still running; and even if the
            start Task fails, new Tasks will continue to be scheduled on the
            Compute Node. The default is false.
          title: >-
            Whether the Batch service should wait for the start Task to complete
            successfully (that is, to exit with exit code 0) before scheduling
            any Tasks on the Compute Node.
          type: boolean
      required:
        - commandLine
      title: >-
        A Task which is run when a Node joins a Pool in the Azure Batch service,
        or when the Compute Node is rebooted or reimaged.
      type: object
    StartTaskInformation:
      properties:
        containerInfo:
          $ref: '#/components/schemas/TaskContainerExecutionInformation'
          description: This property is set only if the Task runs in a container context.
          title: Information about the container under which the Task is executing.
        endTime:
          description: >-
            This is the end time of the most recent run of the start Task, if
            that run has completed (even if that run failed and a retry is
            pending). This element is not present if the start Task is currently
            running.
          format: date-time
          title: The time at which the start Task stopped running.
          type: string
        exitCode:
          description: >-
            This property is set only if the start Task is in the completed
            state. In general, the exit code for a process reflects the specific
            convention implemented by the application developer for that
            process. If you use the exit code value to make decisions in your
            code, be sure that you know the exit code convention used by the
            application process. However, if the Batch service terminates the
            start Task (due to timeout, or user termination via the API) you may
            see an operating system-defined exit code.
          format: int32
          title: >-
            The exit code of the program specified on the start Task command
            line.
          type: integer
        failureInfo:
          $ref: '#/components/schemas/TaskFailureInformation'
          description: >-
            This property is set only if the Task is in the completed state and
            encountered a failure.
          title: 'Information describing the Task failure, if any.'
        lastRetryTime:
          description: >-
            This element is present only if the Task was retried (i.e.
            retryCount is nonzero). If present, this is typically the same as
            startTime, but may be different if the Task has been restarted for
            reasons other than retry; for example, if the Compute Node was
            rebooted during a retry, then the startTime is updated but the
            lastRetryTime is not.
          format: date-time
          title: The most recent time at which a retry of the Task started running.
          type: string
        result:
          $ref: '#/components/schemas/TaskExecutionResult'
          description: >-
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property.
          title: The result of the Task execution.
        retryCount:
          description: >-
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the Task could not be run) and file upload
            errors are not retried. The Batch service will retry the Task up to
            the limit specified by the constraints.
          format: int32
          title: The number of times the Task has been retried by the Batch service.
          type: integer
        startTime:
          description: >-
            This value is reset every time the Task is restarted or retried
            (that is, this is the most recent time at which the start Task
            started running).
          format: date-time
          title: The time at which the start Task started running.
          type: string
        state:
          enum:
            - running
            - completed
          title: The state of the start Task on the Compute Node.
          type: string
          x-ms-enum:
            modelAsString: false
            name: StartTaskState
            values:
              - description: The start Task is currently running.
                value: running
              - description: >-
                  The start Task has exited with exit code 0, or the start Task
                  has failed and the retry limit has reached, or the start Task
                  process did not run due to Task preparation errors (such as
                  resource file download failures).
                value: completed
      required:
        - state
        - startTime
        - retryCount
      title: Information about a start Task running on a Compute Node.
      type: object
    StorageAccountType:
      enum:
        - standard_lrs
        - premium_lrs
      title: The storage Account type for use in creating data disks.
      type: string
      x-ms-enum:
        modelAsString: false
        name: StorageAccountType
        values:
          - description: The data disk should use standard locally redundant storage.
            name: StandardLRS
            value: standard_lrs
          - description: The data disk should use premium locally redundant storage.
            name: PremiumLRS
            value: premium_lrs
    SubtaskInformation:
      properties:
        containerInfo:
          $ref: '#/components/schemas/TaskContainerExecutionInformation'
          description: This property is set only if the Task runs in a container context.
          title: Information about the container under which the Task is executing.
        endTime:
          description: This property is set only if the subtask is in the Completed state.
          format: date-time
          title: The time at which the subtask completed.
          type: string
        exitCode:
          description: >-
            This property is set only if the subtask is in the completed state.
            In general, the exit code for a process reflects the specific
            convention implemented by the application developer for that
            process. If you use the exit code value to make decisions in your
            code, be sure that you know the exit code convention used by the
            application process. However, if the Batch service terminates the
            subtask (due to timeout, or user termination via the API) you may
            see an operating system-defined exit code.
          format: int32
          title: The exit code of the program specified on the subtask command line.
          type: integer
        failureInfo:
          $ref: '#/components/schemas/TaskFailureInformation'
          description: >-
            This property is set only if the Task is in the completed state and
            encountered a failure.
          title: 'Information describing the Task failure, if any.'
        id:
          format: int32
          title: The ID of the subtask.
          type: integer
        nodeInfo:
          $ref: '#/components/schemas/ComputeNodeInformation'
          title: Information about the Compute Node on which the subtask ran.
        previousState:
          $ref: '#/components/schemas/SubtaskState'
          description: >-
            This property is not set if the subtask is in its initial running
            state.
          title: The previous state of the subtask.
        previousStateTransitionTime:
          description: >-
            This property is not set if the subtask is in its initial running
            state.
          format: date-time
          title: The time at which the subtask entered its previous state.
          type: string
        result:
          $ref: '#/components/schemas/TaskExecutionResult'
          description: >-
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property.
          title: The result of the Task execution.
        startTime:
          format: date-time
          title: >-
            The time at which the subtask started running. If the subtask has
            been restarted or retried, this is the most recent time at which the
            subtask started running.
          type: string
        state:
          $ref: '#/components/schemas/SubtaskState'
          title: The current state of the subtask.
        stateTransitionTime:
          format: date-time
          title: The time at which the subtask entered its current state.
          type: string
      title: Information about an Azure Batch subtask.
      type: object
    SubtaskState:
      enum:
        - preparing
        - running
        - completed
      title: The state of the subtask.
      type: string
      x-ms-enum:
        modelAsString: false
        name: SubtaskState
        values:
          - description: >-
              The Task has been assigned to a Compute Node, but is waiting for a
              required Job Preparation Task to complete on the Compute Node. If
              the Job Preparation Task succeeds, the Task will move to running.
              If the Job Preparation Task fails, the Task will return to active
              and will be eligible to be assigned to a different Compute Node.
            value: preparing
          - description: >-
              The Task is running on a Compute Node. This includes task-level
              preparation such as downloading resource files or deploying
              Packages specified on the Task - it does not necessarily mean that
              the Task command line has started executing.
            value: running
          - description: >-
              The Task is no longer eligible to run, usually because the Task
              has finished successfully, or the Task has finished unsuccessfully
              and has exhausted its retry limit. A Task is also marked as
              completed if an error occurred launching the Task, or when the
              Task has been terminated.
            value: completed
    TaskAddCollectionParameter:
      properties:
        value:
          description: >-
            The total serialized size of this collection must be less than 1MB.
            If it is greater than 1MB (for example if each Task has 100's of
            resource files or environment variables), the request will fail with
            code 'RequestBodyTooLarge' and should be retried again with fewer
            Tasks.
          items:
            $ref: '#/components/schemas/TaskAddParameter'
          maxItems: 100
          title: The collection of Tasks to add. The maximum count of Tasks is 100.
          type: array
      required:
        - value
      title: A collection of Azure Batch Tasks to add.
      type: object
    TaskAddCollectionResult:
      properties:
        value:
          items:
            $ref: '#/components/schemas/TaskAddResult'
          title: The results of the add Task collection operation.
          type: array
      title: The result of adding a collection of Tasks to a Job.
      type: object
    TaskAddParameter:
      description: >-
        Batch will retry Tasks when a recovery operation is triggered on a Node.
        Examples of recovery operations include (but are not limited to) when an
        unhealthy Node is rebooted or a Compute Node disappeared due to host
        failure. Retries due to recovery operations are independent of and are
        not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount
        is 0, an internal retry due to a recovery operation may occur. Because
        of this, all Tasks should be idempotent. This means Tasks need to
        tolerate being interrupted and restarted without causing any corruption
        or duplicate data. The best practice for long running Tasks is to use
        some form of checkpointing.
      properties:
        affinityInfo:
          $ref: '#/components/schemas/AffinityInformation'
          title: >-
            A locality hint that can be used by the Batch service to select a
            Compute Node on which to start the new Task.
        applicationPackageReferences:
          description: >-
            Application packages are downloaded and deployed to a shared
            directory, not the Task working directory. Therefore, if a
            referenced package is already on the Node, and is up to date, then
            it is not re-downloaded; the existing copy on the Compute Node is
            used. If a referenced Package cannot be installed, for example
            because the package has been deleted or because download failed, the
            Task fails.
          items:
            $ref: '#/components/schemas/ApplicationPackageReference'
          title: >-
            A list of Packages that the Batch service will deploy to the Compute
            Node before running the command line.
          type: array
        authenticationTokenSettings:
          $ref: '#/components/schemas/AuthenticationTokenSettings'
          description: >-
            If this property is set, the Batch service provides the Task with an
            authentication token which can be used to authenticate Batch service
            operations without requiring an Account access key. The token is
            provided via the AZ_BATCH_AUTHENTICATION_TOKEN environment variable.
            The operations that the Task can carry out using the token depend on
            the settings. For example, a Task can request Job permissions in
            order to add other Tasks to the Job, or check the status of the Job
            or of other Tasks under the Job.
          title: >-
            The settings for an authentication token that the Task can use to
            perform Batch service operations.
        commandLine:
          description: >-
            For multi-instance Tasks, the command line is executed as the
            primary Task, after the primary Task and all subtasks have finished
            executing the coordination command line. The command line does not
            run under a shell, and therefore cannot take advantage of shell
            features such as environment variable expansion. If you want to take
            advantage of such features, you should invoke the shell in the
            command line, for example using "cmd /c MyCommand" in Windows or
            "/bin/sh -c MyCommand" in Linux. If the command line refers to file
            paths, it should use a relative path (relative to the Task working
            directory), or use the Batch provided environment variable
            (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
          title: The command line of the Task.
          type: string
        constraints:
          $ref: '#/components/schemas/TaskConstraints'
          description: >-
            If you do not specify constraints, the maxTaskRetryCount is the
            maxTaskRetryCount specified for the Job, the maxWallClockTime is
            infinite, and the retentionTime is 7 days.
          title: The execution constraints that apply to this Task.
        containerSettings:
          $ref: '#/components/schemas/TaskContainerSettings'
          description: >-
            If the Pool that will run this Task has containerConfiguration set,
            this must be set as well. If the Pool that will run this Task
            doesn't have containerConfiguration set, this must not be set. When
            this is specified, all directories recursively below the
            AZ_BATCH_NODE_ROOT_DIR (the root of Azure Batch directories on the
            node) are mapped into the container, all Task environment variables
            are mapped into the container, and the Task command line is executed
            in the container. Files produced in the container outside of
            AZ_BATCH_NODE_ROOT_DIR might not be reflected to the host disk,
            meaning that Batch file APIs will not be able to access those files.
          title: The settings for the container under which the Task runs.
        dependsOn:
          $ref: '#/components/schemas/TaskDependencies'
          description: >-
            This Task will not be scheduled until all Tasks that it depends on
            have completed successfully. If any of those Tasks fail and exhaust
            their retry counts, this Task will never be scheduled. If the Job
            does not have usesTaskDependencies set to true, and this element is
            present, the request fails with error code
            TaskDependenciesNotSpecifiedOnJob.
          title: The Tasks that this Task depends on.
        displayName:
          description: >-
            The display name need not be unique and can contain any Unicode
            characters up to a maximum length of 1024.
          title: A display name for the Task.
          type: string
        environmentSettings:
          items:
            $ref: '#/components/schemas/EnvironmentSetting'
          title: A list of environment variable settings for the Task.
          type: array
        exitConditions:
          $ref: '#/components/schemas/ExitConditions'
          description: How the Batch service should respond when the Task completes.
        id:
          description: >-
            The ID can contain any combination of alphanumeric characters
            including hyphens and underscores, and cannot contain more than 64
            characters. The ID is case-preserving and case-insensitive (that is,
            you may not have two IDs within a Job that differ only by case).
          title: A string that uniquely identifies the Task within the Job.
          type: string
        multiInstanceSettings:
          $ref: '#/components/schemas/MultiInstanceSettings'
          title: >-
            An object that indicates that the Task is a multi-instance Task, and
            contains information about how to run the multi-instance Task.
        outputFiles:
          description: >-
            For multi-instance Tasks, the files will only be uploaded from the
            Compute Node on which the primary Task is executed.
          items:
            $ref: '#/components/schemas/OutputFile'
          title: >-
            A list of files that the Batch service will upload from the Compute
            Node after running the command line.
          type: array
        resourceFiles:
          description: >-
            For multi-instance Tasks, the resource files will only be downloaded
            to the Compute Node on which the primary Task is executed. There is
            a maximum size for the list of resource files.  When the max size is
            exceeded, the request will fail and the response error code will be
            RequestEntityTooLarge. If this occurs, the collection of
            ResourceFiles must be reduced in size. This can be achieved using
            .zip files, Application Packages, or Docker Containers.
          items:
            $ref: '#/components/schemas/ResourceFile'
          title: >-
            A list of files that the Batch service will download to the Compute
            Node before running the command line.
          type: array
        userIdentity:
          $ref: '#/components/schemas/UserIdentity'
          description: >-
            If omitted, the Task runs as a non-administrative user unique to the
            Task.
          title: The user identity under which the Task runs.
      required:
        - id
        - commandLine
      title: An Azure Batch Task to add.
      type: object
    TaskAddResult:
      properties:
        eTag:
          description: >-
            You can use this to detect whether the Task has changed between
            requests. In particular, you can be pass the ETag with an Update
            Task request to specify that your changes should take effect only if
            nobody else has modified the Job in the meantime.
          title: 'The ETag of the Task, if the Task was successfully added.'
          type: string
        error:
          $ref: '#/components/schemas/BatchError'
          title: The error encountered while attempting to add the Task.
        lastModified:
          format: date-time
          title: The last modified time of the Task.
          type: string
        location:
          title: 'The URL of the Task, if the Task was successfully added.'
          type: string
        status:
          enum:
            - success
            - clienterror
            - servererror
          title: The status of the add Task request.
          type: string
          x-ms-enum:
            modelAsString: false
            name: TaskAddStatus
            values:
              - description: The Task was added successfully.
                value: success
              - description: >-
                  The Task failed to add due to a client error and should not be
                  retried without modifying the request as appropriate.
                name: clientError
                value: clienterror
              - description: >-
                  Task failed to add due to a server error and can be retried
                  without modification.
                name: serverError
                value: servererror
        taskId:
          title: The ID of the Task for which this is the result.
          type: string
      required:
        - status
        - taskId
      title: >-
        Result for a single Task added as part of an add Task collection
        operation.
      type: object
    TaskConstraints:
      properties:
        maxTaskRetryCount:
          description: >-
            Note that this value specifically controls the number of retries for
            the Task executable due to a nonzero exit code. The Batch service
            will try the Task once, and may then retry up to this limit. For
            example, if the maximum retry count is 3, Batch tries the Task up to
            4 times (one initial try and 3 retries). If the maximum retry count
            is 0, the Batch service does not retry the Task after the first
            attempt. If the maximum retry count is -1, the Batch service retries
            the Task without limit.
          format: int32
          title: >-
            The maximum number of times the Task may be retried. The Batch
            service retries a Task if its exit code is nonzero.
          type: integer
        maxWallClockTime:
          description: >-
            If this is not specified, there is no time limit on how long the
            Task may run.
          format: duration
          title: >-
            The maximum elapsed time that the Task may run, measured from the
            time the Task starts. If the Task does not complete within the time
            limit, the Batch service terminates it.
          type: string
        retentionTime:
          description: >-
            The default is 7 days, i.e. the Task directory will be retained for
            7 days unless the Compute Node is removed or the Job is deleted.
          format: duration
          title: >-
            The minimum time to retain the Task directory on the Compute Node
            where it ran, from the time it completes execution. After this time,
            the Batch service may delete the Task directory and all its
            contents.
          type: string
      title: Execution constraints to apply to a Task.
      type: object
    TaskContainerExecutionInformation:
      properties:
        containerId:
          title: The ID of the container.
          type: string
        error:
          description: >-
            This is the detailed error string from the Docker service, if
            available. It is equivalent to the error field returned by "docker
            inspect".
          title: Detailed error information about the container.
          type: string
        state:
          description: >-
            This is the state of the container according to the Docker service.
            It is equivalent to the status field returned by "docker inspect".
          title: The state of the container.
          type: string
      title: Contains information about the container which a Task is executing.
      type: object
    TaskContainerSettings:
      properties:
        containerRunOptions:
          description: >-
            These additional options are supplied as arguments to the "docker
            create" command, in addition to those controlled by the Batch
            Service.
          title: Additional options to the container create command.
          type: string
        imageName:
          description: >-
            This is the full Image reference, as would be specified to "docker
            pull". If no tag is provided as part of the Image name, the tag
            ":latest" is used as a default.
          title: The Image to use to create the container in which the Task will run.
          type: string
        registry:
          $ref: '#/components/schemas/ContainerRegistry'
          description: >-
            This setting can be omitted if was already provided at Pool
            creation.
          title: The private registry which contains the container Image.
        workingDirectory:
          description: The default is 'taskWorkingDirectory'.
          enum:
            - taskWorkingDirectory
            - containerImageDefault
          title: The location of the container Task working directory.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ContainerWorkingDirectory
            values:
              - description: >-
                  Use the standard Batch service Task working directory, which
                  will contain the Task Resource Files populated by Batch.
                value: taskWorkingDirectory
              - description: >-
                  Use the working directory defined in the container Image.
                  Beware that this directory will not contain the Resource Files
                  downloaded by Batch.
                value: containerImageDefault
      required:
        - imageName
      title: The container settings for a Task.
      type: object
    TaskCounts:
      properties:
        active:
          format: int32
          title: The number of Tasks in the active state.
          type: integer
        completed:
          format: int32
          title: The number of Tasks in the completed state.
          type: integer
        failed:
          format: int32
          title: >-
            The number of Tasks which failed. A Task fails if its result (found
            in the executionInfo property) is 'failure'.
          type: integer
        running:
          format: int32
          title: The number of Tasks in the running or preparing state.
          type: integer
        succeeded:
          format: int32
          title: >-
            The number of Tasks which succeeded. A Task succeeds if its result
            (found in the executionInfo property) is 'success'.
          type: integer
      required:
        - active
        - running
        - completed
        - succeeded
        - failed
      title: The Task counts for a Job.
      type: object
    TaskDependencies:
      properties:
        taskIdRanges:
          items:
            $ref: '#/components/schemas/TaskIdRange'
          title: >-
            The list of Task ID ranges that this Task depends on. All Tasks in
            all ranges must complete successfully before the dependent Task can
            be scheduled.
          type: array
        taskIds:
          description: >-
            The taskIds collection is limited to 64000 characters total (i.e.
            the combined length of all Task IDs). If the taskIds collection
            exceeds the maximum length, the Add Task request fails with error
            code TaskDependencyListTooLong. In this case consider using Task ID
            ranges instead.
          items:
            type: string
          title: >-
            The list of Task IDs that this Task depends on. All Tasks in this
            list must complete successfully before the dependent Task can be
            scheduled.
          type: array
      title: >-
        Specifies any dependencies of a Task. Any Task that is explicitly
        specified or within a dependency range must complete before the
        dependant Task will be scheduled.
      type: object
    TaskExecutionInformation:
      properties:
        containerInfo:
          $ref: '#/components/schemas/TaskContainerExecutionInformation'
          description: This property is set only if the Task runs in a container context.
          title: Information about the container under which the Task is executing.
        endTime:
          description: This property is set only if the Task is in the Completed state.
          format: date-time
          title: The time at which the Task completed.
          type: string
        exitCode:
          description: >-
            This property is set only if the Task is in the completed state. In
            general, the exit code for a process reflects the specific
            convention implemented by the application developer for that
            process. If you use the exit code value to make decisions in your
            code, be sure that you know the exit code convention used by the
            application process. However, if the Batch service terminates the
            Task (due to timeout, or user termination via the API) you may see
            an operating system-defined exit code.
          format: int32
          title: The exit code of the program specified on the Task command line.
          type: integer
        failureInfo:
          $ref: '#/components/schemas/TaskFailureInformation'
          description: >-
            This property is set only if the Task is in the completed state and
            encountered a failure.
          title: 'Information describing the Task failure, if any.'
        lastRequeueTime:
          description: This property is set only if the requeueCount is nonzero.
          format: date-time
          title: >-
            The most recent time at which the Task has been requeued by the
            Batch service as the result of a user request.
          type: string
        lastRetryTime:
          description: >-
            This element is present only if the Task was retried (i.e.
            retryCount is nonzero). If present, this is typically the same as
            startTime, but may be different if the Task has been restarted for
            reasons other than retry; for example, if the Compute Node was
            rebooted during a retry, then the startTime is updated but the
            lastRetryTime is not.
          format: date-time
          title: The most recent time at which a retry of the Task started running.
          type: string
        requeueCount:
          description: >-
            When the user removes Compute Nodes from a Pool (by
            resizing/shrinking the pool) or when the Job is being disabled, the
            user can specify that running Tasks on the Compute Nodes be requeued
            for execution. This count tracks how many times the Task has been
            requeued for these reasons.
          format: int32
          title: >-
            The number of times the Task has been requeued by the Batch service
            as the result of a user request.
          type: integer
        result:
          $ref: '#/components/schemas/TaskExecutionResult'
          description: >-
            If the value is 'failed', then the details of the failure can be
            found in the failureInfo property.
          title: The result of the Task execution.
        retryCount:
          description: >-
            Task application failures (non-zero exit code) are retried,
            pre-processing errors (the Task could not be run) and file upload
            errors are not retried. The Batch service will retry the Task up to
            the limit specified by the constraints.
          format: int32
          title: The number of times the Task has been retried by the Batch service.
          type: integer
        startTime:
          description: >-
            'Running' corresponds to the running state, so if the Task specifies
            resource files or Packages, then the start time reflects the time at
            which the Task started downloading or deploying these. If the Task
            has been restarted or retried, this is the most recent time at which
            the Task started running. This property is present only for Tasks
            that are in the running or completed state.
          format: date-time
          title: The time at which the Task started running.
          type: string
      required:
        - requeueCount
        - retryCount
      title: Information about the execution of a Task.
      type: object
    TaskExecutionResult:
      enum:
        - success
        - failure
      title: The result of Task execution.
      type: string
      x-ms-enum:
        modelAsString: false
        name: TaskExecutionResult
        values:
          - description: The Task ran successfully.
            name: success
            value: success
          - description: >-
              There was an error during processing of the Task. The failure may
              have occurred before the Task process was launched, while the Task
              process was executing, or after the Task process exited.
            name: failure
            value: failure
    TaskFailureInformation:
      properties:
        category:
          $ref: '#/components/schemas/ErrorCategory'
          title: The category of the Task error.
        code:
          title: >-
            An identifier for the Task error. Codes are invariant and are
            intended to be consumed programmatically.
          type: string
        details:
          items:
            $ref: '#/components/schemas/NameValuePair'
          title: A list of additional details related to the error.
          type: array
        message:
          title: >-
            A message describing the Task error, intended to be suitable for
            display in a user interface.
          type: string
      required:
        - category
      title: Information about a Task failure.
      type: object
    TaskIdRange:
      description: >-
        The start and end of the range are inclusive. For example, if a range
        has start 9 and end 12, then it represents Tasks '9', '10', '11' and
        '12'.
      properties:
        end:
          format: int32
          title: The last Task ID in the range.
          type: integer
        start:
          format: int32
          title: The first Task ID in the range.
          type: integer
      required:
        - start
        - end
      title: >-
        A range of Task IDs that a Task can depend on. All Tasks with IDs in the
        range must complete successfully before the dependent Task can be
        scheduled.
      type: object
    TaskInformation:
      properties:
        executionInfo:
          $ref: '#/components/schemas/TaskExecutionInformation'
          title: Information about the execution of the Task.
        jobId:
          title: The ID of the Job to which the Task belongs.
          type: string
        subtaskId:
          format: int32
          title: The ID of the subtask if the Task is a multi-instance Task.
          type: integer
        taskId:
          title: The ID of the Task.
          type: string
        taskState:
          $ref: '#/components/schemas/TaskState'
          title: The current state of the Task.
        taskUrl:
          title: The URL of the Task.
          type: string
      required:
        - taskState
      title: Information about a Task running on a Compute Node.
      type: object
    TaskSchedulingPolicy:
      properties:
        nodeFillType:
          description: 'If not specified, the default is spread.'
          enum:
            - spread
            - pack
          title: How Tasks are distributed across Compute Nodes in a Pool.
          type: string
          x-ms-enum:
            modelAsString: false
            name: ComputeNodeFillType
            values:
              - description: >-
                  Tasks should be assigned evenly across all Compute Nodes in
                  the Pool.
                value: spread
              - description: >-
                  As many Tasks as possible (maxTasksPerNode) should be assigned
                  to each Compute Node in the Pool before any Tasks are assigned
                  to the next Compute Node in the Pool.
                value: pack
      required:
        - nodeFillType
      title: Specifies how Tasks should be distributed across Compute Nodes.
      type: object
    TaskState:
      enum:
        - active
        - preparing
        - running
        - completed
      title: The state of the Task.
      type: string
      x-ms-enum:
        modelAsString: false
        name: TaskState
        values:
          - description: >-
              The Task is queued and able to run, but is not currently assigned
              to a Compute Node. A Task enters this state when it is created,
              when it is enabled after being disabled, or when it is awaiting a
              retry after a failed run.
            value: active
          - description: >-
              The Task has been assigned to a Compute Node, but is waiting for a
              required Job Preparation Task to complete on the Compute Node. If
              the Job Preparation Task succeeds, the Task will move to running.
              If the Job Preparation Task fails, the Task will return to active
              and will be eligible to be assigned to a different Compute Node.
            value: preparing
          - description: >-
              The Task is running on a Compute Node. This includes task-level
              preparation such as downloading resource files or deploying
              Packages specified on the Task - it does not necessarily mean that
              the Task command line has started executing.
            value: running
          - description: >-
              The Task is no longer eligible to run, usually because the Task
              has finished successfully, or the Task has finished unsuccessfully
              and has exhausted its retry limit. A Task is also marked as
              completed if an error occurred launching the Task, or when the
              Task has been terminated.
            value: completed
    TaskStatistics:
      properties:
        kernelCPUTime:
          format: duration
          title: >-
            The total kernel mode CPU time (summed across all cores and all
            Compute Nodes) consumed by the Task.
          type: string
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        readIOGiB:
          format: double
          title: The total gibibytes read from disk by the Task.
          type: number
        readIOps:
          format: int64
          title: The total number of disk read operations made by the Task.
          type: integer
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
        url:
          title: The URL of the statistics.
          type: string
        userCPUTime:
          format: duration
          title: >-
            The total user mode CPU time (summed across all cores and all
            Compute Nodes) consumed by the Task.
          type: string
        waitTime:
          format: duration
          title: >-
            The total wait time of the Task. The wait time for a Task is defined
            as the elapsed time between the creation of the Task and the start
            of Task execution. (If the Task is retried due to failures, the wait
            time is the time to the most recent Task execution.)
          type: string
        wallClockTime:
          description: >-
            The wall clock time is the elapsed time from when the Task started
            running on a Compute Node to when it finished (or to the last time
            the statistics were updated, if the Task had not finished by then).
            If the Task was retried, this includes the wall clock time of all
            the Task retries.
          format: duration
          title: The total wall clock time of the Task.
          type: string
        writeIOGiB:
          format: double
          title: The total gibibytes written to disk by the Task.
          type: number
        writeIOps:
          format: int64
          title: The total number of disk write operations made by the Task.
          type: integer
      required:
        - url
        - startTime
        - lastUpdateTime
        - userCPUTime
        - kernelCPUTime
        - wallClockTime
        - readIOps
        - writeIOps
        - readIOGiB
        - writeIOGiB
        - waitTime
      title: Resource usage statistics for a Task.
      type: object
    TaskUpdateParameter:
      properties:
        constraints:
          $ref: '#/components/schemas/TaskConstraints'
          description: >-
            If omitted, the Task is given the default constraints. For
            multi-instance Tasks, updating the retention time applies only to
            the primary Task and not subtasks.
          title: Constraints that apply to this Task.
      title: The set of changes to be made to a Task.
      type: object
    UploadBatchServiceLogsConfiguration:
      properties:
        containerUrl:
          description: >-
            The URL must include a Shared Access Signature (SAS) granting write
            permissions to the container. The SAS duration must allow enough
            time for the upload to finish. The start time for SAS is optional
            and recommended to not be specified.
          title: >-
            The URL of the container within Azure Blob Storage to which to
            upload the Batch Service log file(s).
          type: string
        endTime:
          description: >-
            Any log file containing a log message in the time range will be
            uploaded. This means that the operation might retrieve more logs
            than have been requested since the entire log file is always
            uploaded, but the operation should not retrieve fewer logs than have
            been requested. If omitted, the default is to upload all logs
            available after the startTime.
          format: date-time
          title: >-
            The end of the time range from which to upload Batch Service log
            file(s).
          type: string
        startTime:
          description: >-
            Any log file containing a log message in the time range will be
            uploaded. This means that the operation might retrieve more logs
            than have been requested since the entire log file is always
            uploaded, but the operation should not retrieve fewer logs than have
            been requested.
          format: date-time
          title: >-
            The start of the time range from which to upload Batch Service log
            file(s).
          type: string
      required:
        - containerUrl
        - startTime
      title: >-
        The Azure Batch service log files upload configuration for a Compute
        Node.
      type: object
    UploadBatchServiceLogsResult:
      properties:
        numberOfFilesUploaded:
          format: int32
          title: The number of log files which will be uploaded.
          type: integer
        virtualDirectoryName:
          description: >-
            The virtual directory name is part of the blob name for each log
            file uploaded, and it is built based poolId, nodeId and a unique
            identifier.
          title: >-
            The virtual directory within Azure Blob Storage container to which
            the Batch Service log file(s) will be uploaded.
          type: string
      required:
        - virtualDirectoryName
        - numberOfFilesUploaded
      title: >-
        The result of uploading Batch service log files from a specific Compute
        Node.
      type: object
    UsageStatistics:
      properties:
        dedicatedCoreTime:
          format: duration
          title: >-
            The aggregated wall-clock time of the dedicated Compute Node cores
            being part of the Pool.
          type: string
        lastUpdateTime:
          format: date-time
          title: >-
            The time at which the statistics were last updated. All statistics
            are limited to the range between startTime and lastUpdateTime.
          type: string
        startTime:
          format: date-time
          title: The start time of the time range covered by the statistics.
          type: string
      required:
        - startTime
        - lastUpdateTime
        - dedicatedCoreTime
      title: Statistics related to Pool usage information.
      type: object
    UserAccount:
      properties:
        elevationLevel:
          $ref: '#/components/schemas/ElevationLevel'
          description: The default value is nonAdmin.
          title: The elevation level of the user Account.
        linuxUserConfiguration:
          $ref: '#/components/schemas/LinuxUserConfiguration'
          description: >-
            This property is ignored if specified on a Windows Pool. If not
            specified, the user is created with the default options.
          title: The Linux-specific user configuration for the user Account.
        name:
          title: The name of the user Account.
          type: string
        password:
          title: The password for the user Account.
          type: string
        windowsUserConfiguration:
          $ref: '#/components/schemas/WindowsUserConfiguration'
          description: >-
            This property can only be specified if the user is on a Windows
            Pool. If not specified and on a Windows Pool, the user is created
            with the default options.
          title: The Windows-specific user configuration for the user Account.
      required:
        - name
        - password
      title: >-
        Properties used to create a user used to execute Tasks on an Azure Batch
        Compute Node.
      type: object
    UserIdentity:
      description: 'Specify either the userName or autoUser property, but not both.'
      properties:
        autoUser:
          $ref: '#/components/schemas/AutoUserSpecification'
          description: >-
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
          title: The auto user under which the Task is run.
        username:
          description: >-
            The userName and autoUser properties are mutually exclusive; you
            must specify one but not both.
          title: The name of the user identity under which the Task is run.
          type: string
          x-ms-client-name: userName
      title: The definition of the user identity under which the Task is run.
      type: object
    VirtualMachineConfiguration:
      properties:
        containerConfiguration:
          $ref: '#/components/schemas/ContainerConfiguration'
          description: >-
            If specified, setup is performed on each Compute Node in the Pool to
            allow Tasks to run in containers. All regular Tasks and Job manager
            Tasks run on this Pool must specify the containerSettings property,
            and all other Tasks may specify it.
          title: The container configuration for the Pool.
        dataDisks:
          description: >-
            This property must be specified if the Compute Nodes in the Pool
            need to have empty data disks attached to them. This cannot be
            updated. Each Compute Node gets its own disk (the disk is not a file
            share). Existing disks cannot be attached, each attached disk is
            empty. When the Compute Node is removed from the Pool, the disk and
            all data associated with it is also deleted. The disk is not
            formatted after being attached, it must be formatted before use -
            for more information see
            https://docs.microsoft.com/en-us/azure/virtual-machines/linux/classic/attach-disk#initialize-a-new-data-disk-in-linux
            and
            https://docs.microsoft.com/en-us/azure/virtual-machines/windows/attach-disk-ps#add-an-empty-data-disk-to-a-virtual-machine.
          items:
            $ref: '#/components/schemas/DataDisk'
          title: >-
            The configuration for data disks attached to the Compute Nodes in
            the Pool.
          type: array
        imageReference:
          $ref: '#/components/schemas/ImageReference'
          title: >-
            A reference to the Azure Virtual Machines Marketplace Image or the
            custom Virtual Machine Image to use.
        licenseType:
          description: >
            This only applies to Images that contain the Windows operating
            system, and should only be used when you hold valid on-premises
            licenses for the Compute Nodes which will be deployed. If omitted,
            no on-premises licensing discount is applied. Values are:

             Windows_Server - The on-premises license is for Windows Server.
             Windows_Client - The on-premises license is for Windows Client.
          title: >-
            The type of on-premises license to be used when deploying the
            operating system.
          type: string
        nodeAgentSKUId:
          description: >-
            The Batch Compute Node agent is a program that runs on each Compute
            Node in the Pool, and provides the command-and-control interface
            between the Compute Node and the Batch service. There are different
            implementations of the Compute Node agent, known as SKUs, for
            different operating systems. You must specify a Compute Node agent
            SKU which matches the selected Image reference. To get the list of
            supported Compute Node agent SKUs along with their list of verified
            Image references, see the 'List supported Compute Node agent SKUs'
            operation.
          title: >-
            The SKU of the Batch Compute Node agent to be provisioned on Compute
            Nodes in the Pool.
          type: string
        windowsConfiguration:
          $ref: '#/components/schemas/WindowsConfiguration'
          description: >-
            This property must not be specified if the imageReference property
            specifies a Linux OS Image.
          title: Windows operating system settings on the virtual machine.
      required:
        - nodeAgentSKUId
        - imageReference
      title: >-
        The configuration for Compute Nodes in a Pool based on the Azure Virtual
        Machines infrastructure.
      type: object
    WindowsConfiguration:
      properties:
        enableAutomaticUpdates:
          description: 'If omitted, the default value is true.'
          title: Whether automatic updates are enabled on the virtual machine.
          type: boolean
      title: Windows operating system settings to apply to the virtual machine.
      type: object
    WindowsUserConfiguration:
      properties:
        loginMode:
          description: >-
            The default value for VirtualMachineConfiguration Pools is 'batch'
            and for CloudServiceConfiguration Pools is 'interactive'.
          enum:
            - batch
            - interactive
          title: The login mode for the user
          type: string
          x-ms-enum:
            modelAsString: false
            name: LoginMode
            values:
              - description: >-
                  The LOGON32_LOGON_BATCH Win32 login mode. The batch login mode
                  is recommended for long running parallel processes.
                value: batch
              - description: >-
                  The LOGON32_LOGON_INTERACTIVE Win32 login mode. UAC is enabled
                  on Windows VirtualMachineConfiguration Pools. If this option
                  is used with an elevated user identity in a Windows
                  VirtualMachineConfiguration Pool, the user session will not be
                  elevated unless the application executed by the Task command
                  line is configured to always require administrative privilege
                  or to always require maximum privilege.
                value: interactive
      title: Properties used to create a user Account on a Windows Compute Node.
      type: object
  securitySchemes:
    api_key:
      in: header
      name: Authorization
      type: apiKey
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: Impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation
  - api_key: []

