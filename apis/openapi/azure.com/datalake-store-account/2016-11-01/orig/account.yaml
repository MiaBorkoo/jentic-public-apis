openapi: 3.0.0
info:
  description: Creates an Azure Data Lake Store account management client.
  title: DataLakeStoreAccountManagementClient
  version: '2016-11-01'
  x-ms-code-generation-settings:
    internalConstructors: true
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.DataLakeStore/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: Successfully listed the available operations for Data Lake Store.
      tags:
        - Operations
      description: Lists all of the available Data Lake Store REST API operations.
      operationId: Operations_List
      x-ms-examples:
        Lists all of the available Data Lake Store REST API operations:
          $ref: ./examples/Operations_List.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/accounts':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            The Boolean value of true or false to request a count of the
            matching resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
          description: Successfully retrieved the list of accounts.
      tags:
        - Accounts
      description: >-
        Lists the Data Lake Store accounts within the subscription. The response
        includes a link to the next page of results, if any.
      operationId: Accounts_List
      x-ms-examples:
        Lists the Data Lake Store accounts within the subscription:
          $ref: ./examples/Accounts_List.json
      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityInformation'
          description: >-
            Successfully retrieved the subscription-level properties and limits
            for Data Lake Store specified by resource location.
        '404':
          description: Subscription not found.
      tags:
        - Locations
      description: >-
        Gets subscription-level properties and limits for Data Lake Store
        specified by resource location.
      operationId: Locations_GetCapability
      x-ms-examples:
        Gets subscription-level properties and limits for Data Lake Store specified by resource location:
          $ref: ./examples/Locations_GetCapability.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/checkNameAvailability':
    post:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameAvailabilityInformation'
          description: >-
            Successfully retrieved the Data Lake Store account name availability
            information.
      tags:
        - Accounts
      description: Checks whether the specified account name is available or taken.
      operationId: Accounts_CheckNameAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailabilityParameters'
        description: >-
          Parameters supplied to check the Data Lake Store account name
          availability.
        required: true
      x-ms-examples:
        Checks whether the specified account name is available or taken:
          $ref: ./examples/Accounts_CheckNameAvailability.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/usages':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - description: The resource location without whitespace.
          in: path
          name: location
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListResult'
          description: >-
            OK -- current usage count and limit retrieved and returned
            successfully.
      tags:
        - LocationUsage
      description: >-
        Gets the current usage count and the limit for the resources of the
        location under the subscription.
      operationId: Locations_GetUsage
      x-ms-examples:
        UsageList:
          $ref: ./examples/Locations_GetUsage.json
      x-ms-pageable:
        nextLinkName: null
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - description: OData filter. Optional.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The number of items to return. Optional.
          in: query
          name: $top
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            The number of items to skip over before returning elements.
            Optional.
          in: query
          name: $skip
          required: false
          schema:
            format: int32
            minimum: 1
            type: integer
        - description: >-
            OData Select statement. Limits the properties on each entry to just
            those requested, e.g. Categories?$select=CategoryName,Description.
            Optional.
          in: query
          name: $select
          required: false
          schema:
            type: string
        - description: >-
            OrderBy clause. One or more comma-separated expressions with an
            optional "asc" (the default) or "desc" depending on the order you'd
            like the values sorted, e.g. Categories?$orderby=CategoryName desc.
            Optional.
          in: query
          name: $orderby
          required: false
          schema:
            type: string
        - description: >-
            A Boolean value of true or false to request a count of the matching
            resources included with the resources in the response, e.g.
            Categories?$count=true. Optional.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccountListResult'
          description: >-
            Successfully retrieved the list of accounts in the specified
            resource group.
      tags:
        - Accounts
      description: >-
        Lists the Data Lake Store accounts within a specific resource group. The
        response includes a link to the next page of results, if any.
      operationId: Accounts_ListByResourceGroup
      x-ms-examples:
        Lists the Data Lake Store accounts within a specific resource group:
          $ref: ./examples/Accounts_ListByResourceGroup.json
      x-ms-odata: '#/components/schemas/DataLakeStoreAccountBasic'
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the specified account.
        '202':
          description: Successfully initiated the deletion of the specified account.
        '204':
          description: The specified account was not found.
      tags:
        - Accounts
      description: Deletes the specified Data Lake Store account.
      operationId: Accounts_Delete
      x-ms-examples:
        Deletes the specified Data Lake Store account:
          $ref: ./examples/Accounts_Delete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully retrieved details of the specified account.
      tags:
        - Accounts
      description: Gets the specified Data Lake Store account.
      operationId: Accounts_Get
      x-ms-examples:
        Gets the specified Data Lake Store account:
          $ref: ./examples/Accounts_Get.json
    patch:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully updated the account details.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated the update of the account details.
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated the update of the account details.
      tags:
        - Accounts
      description: Updates the specified Data Lake Store account information.
      operationId: Accounts_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataLakeStoreAccountParameters'
        description: Parameters supplied to update the Data Lake Store account.
        required: true
      x-ms-examples:
        Updates the specified Data Lake Store account information:
          $ref: ./examples/Accounts_Update.json
      x-ms-long-running-operation: true
    put:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully created the account.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataLakeStoreAccount'
          description: Successfully initiated creation of the account.
      tags:
        - Accounts
      description: Creates the specified Data Lake Store account.
      operationId: Accounts_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataLakeStoreAccountParameters'
        description: Parameters supplied to create the Data Lake Store account.
        required: true
      x-ms-examples:
        Creates the specified Data Lake Store account:
          $ref: ./examples/Accounts_Create.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/enableKeyVault':
    post:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully enabled the user-managed Key Vault settings used for
            encrypting this Data Lake Store account.
      tags:
        - Accounts
      description: >-
        Attempts to enable a user managed Key Vault for encryption of the
        specified Data Lake Store account.
      operationId: Accounts_EnableKeyVault
      x-ms-examples:
        Attempts to enable a user managed Key Vault for encryption of the specified Data Lake Store account:
          $ref: ./examples/Accounts_EnableKeyVault.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRuleListResult'
          description: Successfully retrieved the list of firewall rules.
      tags:
        - FirewallRules
      description: >-
        Lists the Data Lake Store firewall rules within the specified Data Lake
        Store account.
      operationId: FirewallRules_ListByAccount
      x-ms-examples:
        Lists the Data Lake Store firewall rules within the specified Data Lake Store account.:
          $ref: ./examples/FirewallRules_ListByAccount.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/firewallRules/{firewallRuleName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the firewall rule to delete.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the specified firewall rule.
        '204':
          description: The specified firewall rule does not exist or was already deleted.
      tags:
        - FirewallRules
      description: >-
        Deletes the specified firewall rule from the specified Data Lake Store
        account.
      operationId: FirewallRules_Delete
      x-ms-examples:
        Deletes the specified firewall rule from the specified Data Lake Store account.:
          $ref: ./examples/FirewallRules_Delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the firewall rule to retrieve.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully retrieved the firewall rule.
      tags:
        - FirewallRules
      description: Gets the specified Data Lake Store firewall rule.
      operationId: FirewallRules_Get
      x-ms-examples:
        Gets the specified Data Lake Store firewall rule.:
          $ref: ./examples/FirewallRules_Get.json
    patch:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the firewall rule to update.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully updated the specified firewall rule.
      tags:
        - FirewallRules
      description: Updates the specified firewall rule.
      operationId: FirewallRules_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirewallRuleParameters'
        description: Parameters supplied to update the firewall rule.
      x-ms-examples:
        Updates the specified firewall rule.:
          $ref: ./examples/FirewallRules_Update.json
    put:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the firewall rule to create or update.
          in: path
          name: firewallRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirewallRule'
          description: Successfully created or updated the specified firewall rule.
      tags:
        - FirewallRules
      description: >-
        Creates or updates the specified firewall rule. During update, the
        firewall rule with the specified name will be replaced with this new
        firewall rule.
      operationId: FirewallRules_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateFirewallRuleParameters'
        description: Parameters supplied to create or update the firewall rule.
        required: true
      x-ms-examples:
        'Creates or updates the specified firewall rule. During update, the firewall rule with the specified name will be replaced with this new firewall rule':
          $ref: ./examples/FirewallRules_CreateOrUpdate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProviderListResult'
          description: Successfully retrieved the list of trusted identity providers.
      tags:
        - TrustedIdProviders
      description: >-
        Lists the Data Lake Store trusted identity providers within the
        specified Data Lake Store account.
      operationId: TrustedIdProviders_ListByAccount
      x-ms-examples:
        Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account:
          $ref: ./examples/TrustedIdProviders_ListByAccount.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the trusted identity provider to delete.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: >-
            Successfully deleted the specified trusted identity provider
            details.
        '204':
          description: The specified trusted identity provider was not found.
      tags:
        - TrustedIdProviders
      description: >-
        Deletes the specified trusted identity provider from the specified Data
        Lake Store account
      operationId: TrustedIdProviders_Delete
      x-ms-examples:
        Deletes the specified trusted identity provider from the specified Data Lake Store account:
          $ref: ./examples/TrustedIdProviders_Delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the trusted identity provider to retrieve.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: >-
            Successfully retrieved details of the specified trusted identity
            provider.
      tags:
        - TrustedIdProviders
      description: Gets the specified Data Lake Store trusted identity provider.
      operationId: TrustedIdProviders_Get
      x-ms-examples:
        Gets the specified Data Lake Store trusted identity provider:
          $ref: ./examples/TrustedIdProviders_Get.json
    patch:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: >-
            The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: Successfully added the trusted identity provider.
      tags:
        - TrustedIdProviders
      description: Updates the specified trusted identity provider.
      operationId: TrustedIdProviders_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrustedIdProviderParameters'
        description: Parameters supplied to update the trusted identity provider.
      x-ms-examples:
        Updates the specified trusted identity provider:
          $ref: ./examples/TrustedIdProviders_Update.json
    put:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: >-
            The name of the trusted identity provider. This is used for
            differentiation of providers in the account.
          in: path
          name: trustedIdProviderName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedIdProvider'
          description: Successfully added the trusted identity provider.
      tags:
        - TrustedIdProviders
      description: >-
        Creates or updates the specified trusted identity provider. During
        update, the trusted identity provider with the specified name will be
        replaced with this new provider
      operationId: TrustedIdProviders_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderParameters'
        description: >-
          Parameters supplied to create or replace the trusted identity
          provider.
        required: true
      x-ms-examples:
        'Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider':
          $ref: ./examples/TrustedIdProviders_CreateOrUpdate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules':
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRuleListResult'
          description: Successfully retrieved the list of virtual network rules.
      tags:
        - VirtualNetworkRules
      description: >-
        Lists the Data Lake Store virtual network rules within the specified
        Data Lake Store account.
      operationId: VirtualNetworkRules_ListByAccount
      x-ms-examples:
        Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.:
          $ref: ./examples/VirtualNetworkRules_ListByAccount.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the virtual network rule to delete.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          description: Successfully deleted the specified virtual network rule.
        '204':
          description: >-
            The specified virtual network rule does not exist or was already
            deleted.
      tags:
        - VirtualNetworkRules
      description: >-
        Deletes the specified virtual network rule from the specified Data Lake
        Store account.
      operationId: VirtualNetworkRules_Delete
      x-ms-examples:
        Deletes the specified virtual network rule from the specified Data Lake Store account.:
          $ref: ./examples/VirtualNetworkRules_Delete.json
    get:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the virtual network rule to retrieve.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully retrieved the virtual network rule.
      tags:
        - VirtualNetworkRules
      description: Gets the specified Data Lake Store virtual network rule.
      operationId: VirtualNetworkRules_Get
      x-ms-examples:
        Gets the specified Data Lake Store virtual network rule.:
          $ref: ./examples/VirtualNetworkRules_Get.json
    patch:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the virtual network rule to update.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully updated the specified virtual network rule.
      tags:
        - VirtualNetworkRules
      description: Updates the specified virtual network rule.
      operationId: VirtualNetworkRules_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVirtualNetworkRuleParameters'
        description: Parameters supplied to update the virtual network rule.
      x-ms-examples:
        Updates the specified virtual network rule.:
          $ref: ./examples/VirtualNetworkRules_Update.json
    put:
      parameters:
        - $ref: '#/components/parameters/SubscriptionIdParameter'
        - $ref: '#/components/parameters/ResourceGroupNameParameter'
        - $ref: '#/components/parameters/AccountNameParameter'
        - description: The name of the virtual network rule to create or update.
          in: path
          name: virtualNetworkRuleName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualNetworkRule'
          description: Successfully created or updated the specified virtual network rule.
      tags:
        - VirtualNetworkRules
      description: >-
        Creates or updates the specified virtual network rule. During update,
        the virtual network rule with the specified name will be replaced with
        this new virtual network rule.
      operationId: VirtualNetworkRules_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleParameters'
        description: Parameters supplied to create or update the virtual network rule.
        required: true
      x-ms-examples:
        'Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.':
          $ref: ./examples/VirtualNetworkRules_CreateOrUpdate.json
components:
  parameters:
    AccountNameParameter:
      description: The name of the Data Lake Store account.
      in: path
      name: accountName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ApiVersionParameter:
      description: Client Api Version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    ResourceGroupNameParameter:
      description: The name of the Azure resource group.
      in: path
      name: resourceGroupName
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    SubscriptionIdParameter:
      description: >-
        Gets subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
  schemas:
    CapabilityInformation:
      description: Subscription-level properties and limits for Data Lake Store.
      properties:
        accountCount:
          description: The current number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        maxAccountCount:
          description: The maximum supported number of accounts under this subscription.
          format: int32
          readOnly: true
          type: integer
        migrationState:
          description: >-
            The Boolean value of true or false to indicate the maintenance
            state.
          readOnly: true
          type: boolean
        state:
          description: The subscription state.
          enum:
            - Registered
            - Suspended
            - Deleted
            - Unregistered
            - Warned
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: SubscriptionState
        subscriptionId:
          description: >-
            The subscription credentials that uniquely identifies the
            subscription.
          format: uuid
          readOnly: true
          type: string
      type: object
    CheckNameAvailabilityParameters:
      description: Data Lake Store account name availability check parameters.
      properties:
        name:
          description: The Data Lake Store name to check availability for.
          type: string
        type:
          description: >-
            The resource type. Note: This should not be set by the user, as the
            constant value is Microsoft.DataLakeStore/accounts
          enum:
            - Microsoft.DataLakeStore/accounts
          type: string
      required:
        - name
        - type
      type: object
    CreateDataLakeStoreAccountParameters:
      properties:
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: 'The Key Vault encryption identity, if any.'
        location:
          description: The resource location.
          type: string
        properties:
          $ref: '#/components/schemas/CreateDataLakeStoreAccountProperties'
          description: The Data Lake Store account properties to use for creating.
          x-ms-client-flatten: true
      required:
        - location
      type: object
    CreateDataLakeStoreAccountProperties:
      properties:
        defaultGroup:
          description: >-
            The default owner group for all new folders and files created in the
            Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The Key Vault encryption configuration.
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: >-
            The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: >-
            The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/CreateFirewallRuleWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
        firewallState:
          description: >-
            The current state of the IP address firewall for this Data Lake
            Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: >-
            The current state of the trusted identity provider feature for this
            Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: >-
            The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/CreateTrustedIdProviderWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
        virtualNetworkRules:
          description: >-
            The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: '#/components/schemas/CreateVirtualNetworkRuleWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
      type: object
    CreateFirewallRuleWithAccountParameters:
      description: >-
        The parameters used to create a new firewall rule while creating a new
        Data Lake Store account.
      properties:
        name:
          description: The unique name of the firewall rule to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: >-
            The firewall rule properties to use when creating a new firewall
            rule.
          x-ms-client-flatten: true
      required:
        - name
        - properties
      type: object
    CreateOrUpdateFirewallRuleParameters:
      description: The parameters used to create a new firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateFirewallRuleProperties'
          description: >-
            The firewall rule properties to use when creating a new firewall
            rule.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    CreateOrUpdateFirewallRuleProperties:
      description: The firewall rule properties to use when creating a new firewall rule.
      properties:
        endIpAddress:
          description: >-
            The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: >-
            The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          type: string
      required:
        - startIpAddress
        - endIpAddress
      type: object
    CreateOrUpdateTrustedIdProviderParameters:
      description: The parameters used to create a new trusted identity provider.
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
          description: >-
            The trusted identity provider properties to use when creating a new
            trusted identity provider.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    CreateOrUpdateTrustedIdProviderProperties:
      description: >-
        The trusted identity provider properties to use when creating a new
        trusted identity provider.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
      required:
        - idProvider
      type: object
    CreateOrUpdateVirtualNetworkRuleParameters:
      description: The parameters used to create a new virtual network rule.
      properties:
        properties:
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
          description: >-
            The virtual network rule properties to use when creating a new
            virtual network rule.
          x-ms-client-flatten: true
      required:
        - properties
      type: object
    CreateOrUpdateVirtualNetworkRuleProperties:
      description: >-
        The virtual network rule properties to use when creating a new virtual
        network rule.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
      required:
        - subnetId
      type: object
    CreateTrustedIdProviderWithAccountParameters:
      description: >-
        The parameters used to create a new trusted identity provider while
        creating a new Data Lake Store account.
      properties:
        name:
          description: The unique name of the trusted identity provider to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateTrustedIdProviderProperties'
          description: >-
            The trusted identity provider properties to use when creating a new
            trusted identity provider.
          x-ms-client-flatten: true
      required:
        - name
        - properties
      type: object
    CreateVirtualNetworkRuleWithAccountParameters:
      description: >-
        The parameters used to create a new virtual network rule while creating
        a new Data Lake Store account.
      properties:
        name:
          description: The unique name of the virtual network rule to create.
          type: string
        properties:
          $ref: '#/components/schemas/CreateOrUpdateVirtualNetworkRuleProperties'
          description: >-
            The virtual network rule properties to use when creating a new
            virtual network rule.
          x-ms-client-flatten: true
      required:
        - name
        - properties
      type: object
    DataLakeStoreAccount:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Data Lake Store account information.
      properties:
        identity:
          $ref: '#/components/schemas/EncryptionIdentity'
          description: 'The Key Vault encryption identity, if any.'
          readOnly: true
        properties:
          $ref: '#/components/schemas/DataLakeStoreAccountProperties'
          description: The Data Lake Store account properties.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    DataLakeStoreAccountBasic:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: 'Basic Data Lake Store account information, returned on list calls.'
      properties:
        properties:
          $ref: '#/components/schemas/DataLakeStoreAccountPropertiesBasic'
          description: The basic Data Lake Store account properties.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    DataLakeStoreAccountListResult:
      description: Data Lake Store account list information response.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/DataLakeStoreAccountBasic'
          readOnly: true
          type: array
      type: object
    DataLakeStoreAccountProperties:
      allOf:
        - $ref: '#/components/schemas/DataLakeStoreAccountPropertiesBasic'
      description: Data Lake Store account properties information.
      properties:
        currentTier:
          description: The commitment tier in use for the current month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        defaultGroup:
          description: >-
            The default owner group for all new folders and files created in the
            Data Lake Store account.
          readOnly: true
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
          description: The Key Vault encryption configuration.
          readOnly: true
        encryptionProvisioningState:
          description: >-
            The current state of encryption provisioning for this Data Lake
            Store account.
          enum:
            - Creating
            - Succeeded
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionProvisioningState
        encryptionState:
          description: The current state of encryption for this Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionState
        firewallAllowAzureIps:
          description: >-
            The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: >-
            The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/FirewallRule'
          readOnly: true
          type: array
        firewallState:
          description: >-
            The current state of the IP address firewall for this Data Lake
            Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: >-
            The current state of the trusted identity provider feature for this
            Data Lake Store account.
          enum:
            - Enabled
            - Disabled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: >-
            The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          readOnly: true
          type: array
        virtualNetworkRules:
          description: >-
            The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
          type: array
      type: object
    DataLakeStoreAccountPropertiesBasic:
      description: >-
        The basic account specific properties that are associated with an
        underlying Data Lake Store account.
      properties:
        accountId:
          description: The unique identifier associated with this Data Lake Store account.
          format: uuid
          readOnly: true
          type: string
        creationTime:
          description: The account creation time.
          format: date-time
          readOnly: true
          type: string
        endpoint:
          description: The full CName endpoint for this account.
          readOnly: true
          type: string
        lastModifiedTime:
          description: The account last modified time.
          format: date-time
          readOnly: true
          type: string
        provisioningState:
          description: The provisioning status of the Data Lake Store account.
          enum:
            - Failed
            - Creating
            - Running
            - Succeeded
            - Patching
            - Suspending
            - Resuming
            - Deleting
            - Deleted
            - Undeleting
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountStatus
        state:
          description: The state of the Data Lake Store account.
          enum:
            - Active
            - Suspended
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: DataLakeStoreAccountState
      type: object
    EncryptionConfig:
      description: The encryption configuration for the account.
      properties:
        keyVaultMetaInfo:
          $ref: '#/components/schemas/KeyVaultMetaInfo'
          description: >-
            The Key Vault information for connecting to user managed encryption
            keys.
        type:
          description: >-
            The type of encryption configuration being used. Currently the only
            supported types are 'UserManaged' and 'ServiceManaged'.
          enum:
            - UserManaged
            - ServiceManaged
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionConfigType
      required:
        - type
      type: object
    EncryptionIdentity:
      description: The encryption identity properties.
      properties:
        principalId:
          description: The principal identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        tenantId:
          description: The tenant identifier associated with the encryption.
          format: uuid
          readOnly: true
          type: string
        type:
          description: >-
            The type of encryption being used. Currently the only supported type
            is 'SystemAssigned'.
          enum:
            - SystemAssigned
          type: string
          x-ms-enum:
            modelAsString: false
            name: EncryptionIdentityType
      required:
        - type
      type: object
    FirewallRule:
      allOf:
        - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store firewall rule information.
      properties:
        properties:
          $ref: '#/components/schemas/FirewallRuleProperties'
          description: The firewall rule properties.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    FirewallRuleListResult:
      description: Data Lake Store firewall rule list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/FirewallRule'
          readOnly: true
          type: array
      type: object
    FirewallRuleProperties:
      description: The firewall rule properties.
      properties:
        endIpAddress:
          description: >-
            The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
        startIpAddress:
          description: >-
            The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          readOnly: true
          type: string
      type: object
    KeyVaultMetaInfo:
      description: Metadata information used by account encryption.
      properties:
        encryptionKeyName:
          description: The name of the user managed encryption key.
          type: string
        encryptionKeyVersion:
          description: The version of the user managed encryption key.
          type: string
        keyVaultResourceId:
          description: >-
            The resource identifier for the user managed Key Vault being used to
            encrypt.
          type: string
      required:
        - keyVaultResourceId
        - encryptionKeyName
        - encryptionKeyVersion
      type: object
    NameAvailabilityInformation:
      description: Data Lake Store account name availability result information.
      properties:
        message:
          description: >-
            The message describing why the Data Lake Store account name is not
            available, if nameAvailable is false.
          readOnly: true
          type: string
        nameAvailable:
          description: >-
            The Boolean value of true or false to indicate whether the Data Lake
            Store account name is available or not.
          readOnly: true
          type: boolean
        reason:
          description: >-
            The reason why the Data Lake Store account name is not available, if
            nameAvailable is false.
          readOnly: true
          type: string
      type: object
    Operation:
      description: An available operation for Data Lake Store.
      properties:
        display:
          $ref: '#/components/schemas/OperationDisplay'
          description: The display information for the operation.
        name:
          description: The name of the operation.
          readOnly: true
          type: string
        origin:
          description: The intended executor of the operation.
          enum:
            - user
            - system
            - 'user,system'
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperationOrigin
      type: object
    OperationDisplay:
      description: The display information for a particular operation.
      properties:
        description:
          description: A friendly description of the operation.
          readOnly: true
          type: string
        operation:
          description: A friendly name of the operation.
          readOnly: true
          type: string
        provider:
          description: The resource provider of the operation.
          readOnly: true
          type: string
        resource:
          description: The resource type of the operation.
          readOnly: true
          type: string
      type: object
    OperationListResult:
      description: The list of available operations for Data Lake Store.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/Operation'
          readOnly: true
          type: array
          x-ms-identifiers:
            - name
      type: object
    Resource:
      description: The resource model definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          readOnly: true
          type: object
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        location:
          description: The resource location.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    SubResource:
      description: The resource model definition for a nested resource.
      properties:
        id:
          description: The resource identifier.
          readOnly: true
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    TrustedIdProvider:
      allOf:
        - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store trusted identity provider information.
      properties:
        properties:
          $ref: '#/components/schemas/TrustedIdProviderProperties'
          description: The trusted identity provider properties.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    TrustedIdProviderListResult:
      description: Data Lake Store trusted identity provider list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/TrustedIdProvider'
          readOnly: true
          type: array
      type: object
    TrustedIdProviderProperties:
      description: The trusted identity provider properties.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          readOnly: true
          type: string
      type: object
    UpdateDataLakeStoreAccountParameters:
      description: Data Lake Store account information to update.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        properties:
          $ref: '#/components/schemas/UpdateDataLakeStoreAccountProperties'
          description: The Data Lake Store account properties to update.
          x-ms-client-flatten: true
      type: object
    UpdateDataLakeStoreAccountProperties:
      description: Data Lake Store account properties information to be updated.
      properties:
        defaultGroup:
          description: >-
            The default owner group for all new folders and files created in the
            Data Lake Store account.
          type: string
        encryptionConfig:
          $ref: '#/components/schemas/UpdateEncryptionConfig'
          description: >-
            Used for rotation of user managed Key Vault keys. Can only be used
            to rotate a user managed encryption Key Vault key.
        firewallAllowAzureIps:
          description: >-
            The current state of allowing or disallowing IPs originating within
            Azure through the firewall. If the firewall is disabled, this is not
            enforced.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallAllowAzureIpsState
        firewallRules:
          description: >-
            The list of firewall rules associated with this Data Lake Store
            account.
          items:
            $ref: '#/components/schemas/UpdateFirewallRuleWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
        firewallState:
          description: >-
            The current state of the IP address firewall for this Data Lake
            Store account. Disabling the firewall does not remove existing
            rules, they will just be ignored until the firewall is re-enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: FirewallState
        newTier:
          description: The commitment tier to use for next month.
          enum:
            - Consumption
            - Commitment_1TB
            - Commitment_10TB
            - Commitment_100TB
            - Commitment_500TB
            - Commitment_1PB
            - Commitment_5PB
          type: string
          x-ms-enum:
            modelAsString: false
            name: TierType
        trustedIdProviderState:
          description: >-
            The current state of the trusted identity provider feature for this
            Data Lake Store account. Disabling trusted identity provider
            functionality does not remove the providers, they will just be
            ignored until this feature is re-enabled.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: TrustedIdProviderState
        trustedIdProviders:
          description: >-
            The list of trusted identity providers associated with this Data
            Lake Store account.
          items:
            $ref: '#/components/schemas/UpdateTrustedIdProviderWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
        virtualNetworkRules:
          description: >-
            The list of virtual network rules associated with this Data Lake
            Store account.
          items:
            $ref: '#/components/schemas/UpdateVirtualNetworkRuleWithAccountParameters'
          type: array
          x-ms-identifiers:
            - name
      type: object
    UpdateEncryptionConfig:
      description: >-
        The encryption configuration used to update a user managed Key Vault
        key.
      properties:
        keyVaultMetaInfo:
          $ref: '#/components/schemas/UpdateKeyVaultMetaInfo'
          description: The updated Key Vault key to use in user managed key rotation.
      type: object
    UpdateFirewallRuleParameters:
      description: The parameters used to update a firewall rule.
      properties:
        properties:
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
          x-ms-client-flatten: true
      type: object
    UpdateFirewallRuleProperties:
      description: The firewall rule properties to use when updating a firewall rule.
      properties:
        endIpAddress:
          description: >-
            The end IP address for the firewall rule. This can be either ipv4 or
            ipv6. Start and End should be in the same protocol.
          type: string
        startIpAddress:
          description: >-
            The start IP address for the firewall rule. This can be either ipv4
            or ipv6. Start and End should be in the same protocol.
          type: string
      type: object
    UpdateFirewallRuleWithAccountParameters:
      description: >-
        The parameters used to update a firewall rule while updating a Data Lake
        Store account.
      properties:
        name:
          description: The unique name of the firewall rule to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateFirewallRuleProperties'
          description: The firewall rule properties to use when updating a firewall rule.
          x-ms-client-flatten: true
      required:
        - name
      type: object
    UpdateKeyVaultMetaInfo:
      description: The Key Vault update information used for user managed key rotation.
      properties:
        encryptionKeyVersion:
          description: >-
            The version of the user managed encryption key to update through a
            key rotation.
          type: string
      type: object
    UpdateTrustedIdProviderParameters:
      description: The parameters used to update a trusted identity provider.
      properties:
        properties:
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
          description: >-
            The trusted identity provider properties to use when updating a
            trusted identity provider.
          x-ms-client-flatten: true
      type: object
    UpdateTrustedIdProviderProperties:
      description: >-
        The trusted identity provider properties to use when updating a trusted
        identity provider.
      properties:
        idProvider:
          description: The URL of this trusted identity provider.
          type: string
      type: object
    UpdateTrustedIdProviderWithAccountParameters:
      description: >-
        The parameters used to update a trusted identity provider while updating
        a Data Lake Store account.
      properties:
        name:
          description: The unique name of the trusted identity provider to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateTrustedIdProviderProperties'
          description: >-
            The trusted identity provider properties to use when updating a
            trusted identity provider.
          x-ms-client-flatten: true
      required:
        - name
      type: object
    UpdateVirtualNetworkRuleParameters:
      description: The parameters used to update a virtual network rule.
      properties:
        properties:
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
          description: >-
            The virtual network rule properties to use when updating a virtual
            network rule.
          x-ms-client-flatten: true
      type: object
    UpdateVirtualNetworkRuleProperties:
      description: >-
        The virtual network rule properties to use when updating a virtual
        network rule.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          type: string
      type: object
    UpdateVirtualNetworkRuleWithAccountParameters:
      description: >-
        The parameters used to update a virtual network rule while updating a
        Data Lake Store account.
      properties:
        name:
          description: The unique name of the virtual network rule to update.
          type: string
        properties:
          $ref: '#/components/schemas/UpdateVirtualNetworkRuleProperties'
          description: >-
            The virtual network rule properties to use when updating a virtual
            network rule.
          x-ms-client-flatten: true
      required:
        - name
      type: object
    Usage:
      description: Describes the Resource Usage.
      properties:
        currentValue:
          description: >-
            Gets the current count of the allocated resources in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        id:
          description: Resource identifier.
          readOnly: true
          type: string
        limit:
          description: >-
            Gets the maximum count of the resources that can be allocated in the
            subscription.
          format: int32
          readOnly: true
          type: integer
        name:
          $ref: '#/components/schemas/UsageName'
          description: Gets the name of the type of usage.
          readOnly: true
        unit:
          description: Gets the unit of measurement.
          enum:
            - Count
            - Bytes
            - Seconds
            - Percent
            - CountsPerSecond
            - BytesPerSecond
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: UsageUnit
      type: object
    UsageListResult:
      description: The response from the List Usages operation.
      properties:
        value:
          description: Gets or sets the list of Storage Resource Usages.
          items:
            $ref: '#/components/schemas/Usage'
          type: array
      type: object
    UsageName:
      description: The usage names that can be used.
      properties:
        localizedValue:
          description: Gets a localized string describing the resource name.
          readOnly: true
          type: string
        value:
          description: Gets a string describing the resource name.
          readOnly: true
          type: string
      type: object
    VirtualNetworkRule:
      allOf:
        - $ref: '#/components/schemas/SubResource'
      description: Data Lake Store virtual network rule information.
      properties:
        properties:
          $ref: '#/components/schemas/VirtualNetworkRuleProperties'
          description: The virtual network rule properties.
          readOnly: true
          x-ms-client-flatten: true
      type: object
    VirtualNetworkRuleListResult:
      description: Data Lake Store virtual network rule list information.
      properties:
        nextLink:
          description: The link (url) to the next page of results.
          readOnly: true
          type: string
        value:
          description: The results of the list operation.
          items:
            $ref: '#/components/schemas/VirtualNetworkRule'
          readOnly: true
          type: array
      type: object
    VirtualNetworkRuleProperties:
      description: The virtual network rule properties.
      properties:
        subnetId:
          description: The resource identifier for the subnet.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

