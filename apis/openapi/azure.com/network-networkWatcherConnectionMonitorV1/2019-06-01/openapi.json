{
  "openapi": "3.0.0",
  "info": {
    "description": "The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.",
    "title": "NetworkManagementClient",
    "version": "2019-06-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/network/resource-manager/Microsoft.Network/stable/2019-06-01/networkWatcherConnectionMonitorV1.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors": {
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorListResult"
                }
              }
            },
            "description": "Successful connection monitor enumeration request."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Lists all connection monitors for the specified Network Watcher.",
        "operationId": "ConnectionMonitors_List",
        "x-ms-examples": {
          "List connection monitors": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}": {
      "delete": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          },
          "204": {
            "description": "Delete successful."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Deletes the specified connection monitor.",
        "operationId": "ConnectionMonitors_Delete",
        "x-ms-examples": {
          "Delete connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "get": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorResult"
                }
              }
            },
            "description": "Request successful. The operation returns a connection monitor."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Gets a connection monitor by name.",
        "operationId": "ConnectionMonitors_Get",
        "x-ms-examples": {
          "Get connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "description": "The name of the resource group.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the network watcher.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorResult"
                }
              }
            },
            "description": "Request successful. The operation returns updated connection monitor."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Update tags of the specified connection monitor.",
        "operationId": "ConnectionMonitors_UpdateTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./network.json#/definitions/TagsObject"
              }
            }
          },
          "description": "Parameters supplied to update connection monitor tags.",
          "required": true
        },
        "x-ms-examples": {
          "Update connection monitor tags": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorUpdateTags.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorResult"
                }
              }
            },
            "description": "Update successful. The operation returns the resulting network watcher resource."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorResult"
                }
              }
            },
            "description": "Create successful. The operation returns the resulting network watcher resource."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Create or update a connection monitor.",
        "operationId": "ConnectionMonitors_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionMonitor"
              }
            }
          },
          "description": "Parameters that define the operation to create a connection monitor.",
          "required": true
        },
        "x-ms-examples": {
          "Create connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/query": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name given to the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorQueryResult"
                }
              }
            },
            "description": "Successful query of connection states."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionMonitorQueryResult"
                }
              }
            },
            "description": "Accepted query of connection states."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Query a snapshot of the most recent connection states.",
        "operationId": "ConnectionMonitors_Query",
        "x-ms-examples": {
          "Query connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorQuery.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/start": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation starts the connection monitor."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Starts the specified connection monitor.",
        "operationId": "ConnectionMonitors_Start",
        "x-ms-examples": {
          "Start connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorStart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkWatchers/{networkWatcherName}/connectionMonitors/{connectionMonitorName}/stop": {
      "post": {
        "parameters": [
          {
            "description": "The name of the resource group containing Network Watcher.",
            "in": "path",
            "name": "resourceGroupName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the Network Watcher resource.",
            "in": "path",
            "name": "networkWatcherName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The name of the connection monitor.",
            "in": "path",
            "name": "connectionMonitorName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "./network.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./network.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation stops the connection monitor."
          },
          "202": {
            "description": "Accepted. The operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./networkWatcher.json#/definitions/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "ConnectionMonitors"
        ],
        "description": "Stops the specified connection monitor.",
        "operationId": "ConnectionMonitors_Stop",
        "x-ms-examples": {
          "Stop connection monitor": {
            "$ref": "./examples/NetworkWatcherConnectionMonitorStop.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConnectionMonitor": {
        "description": "Parameters that define the operation to create a connection monitor.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Connection monitor tags.",
            "type": "object"
          },
          "location": {
            "description": "Connection monitor location.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ConnectionMonitorParameters",
            "description": "Properties of the connection monitor.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "ConnectionMonitorDestination": {
        "description": "Describes the destination of connection monitor.",
        "properties": {
          "address": {
            "description": "Address of the connection monitor destination (IP or domain name).",
            "type": "string"
          },
          "port": {
            "description": "The destination port used by connection monitor.",
            "type": "integer"
          },
          "resourceId": {
            "description": "The ID of the resource used as the destination by connection monitor.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectionMonitorListResult": {
        "description": "List of connection monitors.",
        "properties": {
          "value": {
            "description": "Information about connection monitors.",
            "items": {
              "$ref": "#/components/schemas/ConnectionMonitorResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConnectionMonitorParameters": {
        "description": "Parameters that define the operation to create a connection monitor.",
        "properties": {
          "autoStart": {
            "default": true,
            "description": "Determines if the connection monitor will start automatically once created.",
            "type": "boolean"
          },
          "destination": {
            "$ref": "#/components/schemas/ConnectionMonitorDestination",
            "description": "Describes the destination of connection monitor."
          },
          "monitoringIntervalInSeconds": {
            "default": 60,
            "description": "Monitoring interval in seconds.",
            "type": "integer"
          },
          "source": {
            "$ref": "#/components/schemas/ConnectionMonitorSource",
            "description": "Describes the source of connection monitor."
          }
        },
        "required": [
          "source",
          "destination"
        ],
        "type": "object"
      },
      "ConnectionMonitorQueryResult": {
        "description": "List of connection states snapshots.",
        "properties": {
          "sourceStatus": {
            "description": "Status of connection monitor source.",
            "enum": [
              "Unknown",
              "Active",
              "Inactive"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConnectionMonitorSourceStatus"
            }
          },
          "states": {
            "description": "Information about connection states.",
            "items": {
              "$ref": "#/components/schemas/ConnectionStateSnapshot"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConnectionMonitorResult": {
        "description": "Information about the connection monitor.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Connection monitor tags.",
            "type": "object"
          },
          "etag": {
            "default": "A unique read-only string that changes whenever the resource is updated.",
            "description": "A unique read-only string that changes whenever the resource is updated.",
            "type": "string"
          },
          "id": {
            "description": "ID of the connection monitor.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Connection monitor location.",
            "type": "string"
          },
          "name": {
            "description": "Name of the connection monitor.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ConnectionMonitorResultProperties",
            "description": "Properties of the connection monitor result.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "Connection monitor type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ConnectionMonitorResultProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ConnectionMonitorParameters"
          }
        ],
        "description": "Describes the properties of a connection monitor.",
        "properties": {
          "monitoringStatus": {
            "description": "The monitoring status of the connection monitor.",
            "type": "string"
          },
          "provisioningState": {
            "$ref": "./network.json#/definitions/ProvisioningState",
            "description": "The provisioning state of the connection monitor."
          },
          "startTime": {
            "description": "The date and time when the connection monitor was started.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConnectionMonitorSource": {
        "description": "Describes the source of connection monitor.",
        "properties": {
          "port": {
            "description": "The source port used by connection monitor.",
            "type": "integer"
          },
          "resourceId": {
            "description": "The ID of the resource used as the source by connection monitor.",
            "type": "string"
          }
        },
        "required": [
          "resourceId"
        ],
        "type": "object"
      },
      "ConnectionStateSnapshot": {
        "description": "Connection state snapshot.",
        "properties": {
          "avgLatencyInMs": {
            "description": "Average latency in ms.",
            "type": "integer"
          },
          "connectionState": {
            "description": "The connection state.",
            "enum": [
              "Reachable",
              "Unreachable",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConnectionState"
            }
          },
          "endTime": {
            "description": "The end time of the connection snapshot.",
            "format": "date-time",
            "type": "string"
          },
          "evaluationState": {
            "description": "Connectivity analysis evaluation state.",
            "enum": [
              "NotStarted",
              "InProgress",
              "Completed"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EvaluationState"
            }
          },
          "hops": {
            "description": "List of hops between the source and the destination.",
            "items": {
              "$ref": "./networkWatcher.json#/definitions/ConnectivityHop"
            },
            "readOnly": true,
            "type": "array"
          },
          "maxLatencyInMs": {
            "description": "Maximum latency in ms.",
            "type": "integer"
          },
          "minLatencyInMs": {
            "description": "Minimum latency in ms.",
            "type": "integer"
          },
          "probesFailed": {
            "description": "The number of failed probes.",
            "type": "integer"
          },
          "probesSent": {
            "description": "The number of sent probes.",
            "type": "integer"
          },
          "startTime": {
            "description": "The start time of the connection snapshot.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow.",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}