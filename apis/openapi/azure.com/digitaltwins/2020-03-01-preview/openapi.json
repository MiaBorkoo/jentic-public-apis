{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Digital Twins Client for managing DigitalTwinsInstance",
    "title": "AzureDigitalTwinsManagementClient",
    "version": "2020-03-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/digitaltwins/resource-manager/Microsoft.DigitalTwins/preview/2020-03-01-preview/digitaltwins.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.DigitalTwins/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available DigitalTwins service REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "Get available operations": {
            "$ref": "./examples/DigitalTwinsOperationsList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DigitalTwins/digitalTwinsInstances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescriptionListResult"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DigitalTwinsInstances in the subscription."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Get all the DigitalTwinsInstances in a subscription.",
        "operationId": "DigitalTwins_List",
        "x-ms-examples": {
          "Get DigitalTwinsInstance resources by subscription": {
            "$ref": "./examples/DigitalTwinsList_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DigitalTwins/locations/{location}/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/location"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckNameResult"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized response that specifies whether the DigitalTwins service name is available. If the name is not available, the body contains the reason."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "CheckNameAvailability"
        ],
        "description": "Check if a DigitalTwinsInstance name is available.",
        "operationId": "DigitalTwins_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNameRequest"
              }
            }
          },
          "description": "Set the name parameter in the DigitalTwinsInstanceCheckName structure to the name of the DigitalTwinsInstance to check.",
          "required": true
        },
        "x-ms-examples": {
          "Check name Availability": {
            "$ref": "./examples/DigitalTwinsCheckNameAvailability_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescriptionListResult"
                }
              }
            },
            "description": "This is a synchronous operation. The body contains a JSON-serialized array of the metadata from all the DigitalTwinsInstances in the resource group."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Get all the DigitalTwinsInstances in a resource group.",
        "operationId": "DigitalTwins_ListByResourceGroup",
        "x-ms-examples": {
          "Get DigitalTwinsInstance resources by resource group": {
            "$ref": "./examples/DigitalTwinsListByResourceGroup_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescription"
                }
              }
            },
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the DigitalTwins service metadata in the service and the status of the delete operation is set to a completed state."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Delete a DigitalTwinsInstance.",
        "operationId": "DigitalTwins_Delete",
        "x-ms-examples": {
          "Delete a DigitalTwinsInstance resource": {
            "$ref": "./examples/DigitalTwinsDelete_example.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescription"
                }
              }
            },
            "description": "The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Get DigitalTwinsInstances resource.",
        "operationId": "DigitalTwins_Get",
        "x-ms-examples": {
          "Get a DigitalTwinsInstance resource": {
            "$ref": "./examples/DigitalTwinsGet_example.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescription"
                }
              }
            },
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "201": {
            "description": "Accepted - Put request accepted; the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Update metadata of DigitalTwinsInstance.",
        "operationId": "DigitalTwins_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalTwinsPatchDescription"
              }
            }
          },
          "description": "The DigitalTwinsInstance and security metadata.",
          "required": true
        },
        "x-ms-examples": {
          "Patch a DigitalTwinsInstance resource": {
            "$ref": "./examples/DigitalTwinsPatch_example.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescription"
                }
              }
            },
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsDescription"
                }
              }
            },
            "description": "Created - Put request accepted; the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "DigitalTwinsInstance"
        ],
        "description": "Create or update the metadata of a DigitalTwinsInstance. The usual pattern to modify a property is to retrieve the DigitalTwinsInstance and security metadata, and then combine them with the modified values in a new body to update the DigitalTwinsInstance.",
        "operationId": "DigitalTwins_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalTwinsDescription"
              }
            }
          },
          "description": "The DigitalTwinsInstance and security metadata.",
          "required": true
        },
        "x-ms-examples": {
          "Put a DigitalTwinsInstance resource": {
            "$ref": "./examples/DigitalTwinsPut_example.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsEndpointResourceListResult"
                }
              }
            },
            "description": "The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "Get DigitalTwinsInstance Endpoints.",
        "operationId": "DigitalTwinsEndpoint_List",
        "x-ms-examples": {
          "Get a DigitalTwinsInstance endpoints": {
            "$ref": "./examples/DigitalTwinsEndpointsGet_example.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DigitalTwins/digitalTwinsInstances/{resourceName}/endpoints/{endpointName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          },
          {
            "$ref": "#/components/parameters/endpointName"
          }
        ],
        "responses": {
          "200": {
            "description": "This is returned as a response to the status polling request for the delete operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
                }
              }
            },
            "description": "Accepted - Delete request accepted; the operation will complete asynchronously."
          },
          "204": {
            "description": "Once the long running delete operation completes successfully, a 204 No Content status code is returned when the status polling request finds the DigitalTwins service metadata in the service and the status of the delete operation is set to a completed state."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "Delete a DigitalTwinsInstance endpoint.",
        "operationId": "DigitalTwinsEndpoint_Delete",
        "x-ms-examples": {
          "Delete a DigitalTwinsInstance endpoint": {
            "$ref": "./examples/DigitalTwinsEndpointDelete_example.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          },
          {
            "$ref": "#/components/parameters/endpointName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
                }
              }
            },
            "description": "The body contains all the non-security properties of the DigitalTwinsInstance. Security-related properties are set to null."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Default error response"
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "Get DigitalTwinsInstances Endpoint.",
        "operationId": "DigitalTwinsEndpoint_Get",
        "x-ms-examples": {
          "Get a DigitalTwinsInstance endpoint": {
            "$ref": "./examples/DigitalTwinsEndpointGet_example.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/api-version"
          },
          {
            "$ref": "#/components/parameters/subscriptionId"
          },
          {
            "$ref": "#/components/parameters/resourceGroupName"
          },
          {
            "$ref": "#/components/parameters/resourceName"
          },
          {
            "$ref": "#/components/parameters/endpointName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
                }
              }
            },
            "description": "This is returned as a response to the status polling request for the create or update operation. The body contains the resource representation that indicates a transitional provisioning state."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
                }
              }
            },
            "description": "Created - Put request accepted; the operation will complete asynchronously."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "Create or update DigitalTwinsInstance endpoint.",
        "operationId": "DigitalTwinsEndpoint_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
              }
            }
          },
          "description": "The DigitalTwinsInstance endpoint metadata and security metadata.",
          "required": true
        },
        "x-ms-examples": {
          "Put a DigitalTwinsInstance resource": {
            "$ref": "./examples/DigitalTwinsEndpointPut_example.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "components": {
    "parameters": {
      "api-version": {
        "description": "Version of the DigitalTwinsInstance Management API.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2020-03-01-preview"
          ],
          "minLength": 10,
          "type": "string"
        }
      },
      "endpointName": {
        "description": "Name of Endpoint Resource.",
        "in": "path",
        "name": "endpointName",
        "required": true,
        "schema": {
          "maxLength": 64,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9-._]{1,64}$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "location": {
        "description": "Location of DigitalTwinsInstance.",
        "in": "path",
        "name": "location",
        "required": true,
        "schema": {
          "minLength": 3,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceGroupName": {
        "description": "The name of the resource group that contains the DigitalTwinsInstance.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "resourceName": {
        "description": "The name of the DigitalTwinsInstance.",
        "in": "path",
        "name": "resourceName",
        "required": true,
        "schema": {
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "subscriptionId": {
        "description": "The subscription identifier.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "CheckNameRequest": {
        "description": "The result returned from a database check name availability request.",
        "properties": {
          "name": {
            "description": "Resource name.",
            "type": "string"
          },
          "type": {
            "description": "The type of resource, for instance Microsoft.DigitalTwins/digitalTwinsInstances.",
            "enum": [
              "Microsoft.DigitalTwins/digitalTwinsInstances"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "Type"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "CheckNameResult": {
        "description": "The result returned from a check name availability request.",
        "properties": {
          "message": {
            "description": "Message indicating an unavailable name due to a conflict, or a description of the naming rules that are violated.",
            "type": "string"
          },
          "name": {
            "description": "The name that was checked.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "Specifies a Boolean value that indicates if the name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "Message providing the reason why the given name is invalid.",
            "enum": [
              "Invalid",
              "AlreadyExists"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "reason"
            }
          }
        },
        "type": "object"
      },
      "DigitalTwinsDescription": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DigitalTwinsResource"
          }
        ],
        "description": "The description of the DigitalTwins service.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DigitalTwinsProperties",
            "description": "DigitalTwins instance properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "DigitalTwinsDescriptionListResult": {
        "description": "A list of DigitalTwins description objects with a next link.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of DigitalTwins description objects.",
            "type": "string"
          },
          "value": {
            "description": "A list of DigitalTwins description objects.",
            "items": {
              "$ref": "#/components/schemas/DigitalTwinsDescription"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DigitalTwinsEndpointResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExternalResource"
          }
        ],
        "description": "DigitalTwinsInstance endpoint resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DigitalTwinsEndpointResourceProperties",
            "description": "DigitalTwinsInstance endpoint resource properties."
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "DigitalTwinsEndpointResourceListResult": {
        "description": "A list of DigitalTwinsInstance Endpoints with a next link.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of DigitalTwinsInstance Endpoints.",
            "type": "string"
          },
          "value": {
            "description": "A list of DigitalTwinsInstance Endpoints.",
            "items": {
              "$ref": "#/components/schemas/DigitalTwinsEndpointResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DigitalTwinsEndpointResourceProperties": {
        "description": "Properties related to Digital Twins Endpoint",
        "discriminator": {
          "propertyName": "endpointType"
        },
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "createdTime": {
            "description": "Time when the Endpoint was added to DigitalTwinsInstance.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endpointType": {
            "description": "The type of Digital Twins endpoint",
            "enum": [
              "EventHub",
              "EventGrid",
              "ServiceBus"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "endpointType"
            }
          },
          "provisioningState": {
            "description": "The provisioning state.",
            "enum": [
              "Provisioning",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EndpointProvisioningState"
            }
          }
        },
        "required": [
          "endpointType"
        ],
        "type": "object"
      },
      "DigitalTwinsPatchDescription": {
        "description": "The description of the DigitalTwins service.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Instance tags",
            "type": "object"
          }
        },
        "type": "object"
      },
      "DigitalTwinsProperties": {
        "description": "The properties of a DigitalTwinsInstance.",
        "properties": {
          "createdTime": {
            "description": "Time when DigitalTwinsInstance was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "hostName": {
            "description": "Api endpoint to work with DigitalTwinsInstance.",
            "readOnly": true,
            "type": "string"
          },
          "lastUpdatedTime": {
            "description": "Time when DigitalTwinsInstance was created.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning state.",
            "enum": [
              "Provisioning",
              "Deleting",
              "Succeeded",
              "Failed",
              "Canceled"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          }
        },
        "type": "object"
      },
      "DigitalTwinsResource": {
        "description": "The common properties of a DigitalTwinsInstance.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The resource tags.",
            "type": "object"
          },
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The resource location.",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "The resource name.",
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
            "readOnly": true,
            "type": "string"
          },
          "sku": {
            "$ref": "#/components/schemas/DigitalTwinsSkuInfo",
            "description": "This property is reserved for future use, and will be ignored/omitted"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "DigitalTwinsSkuInfo": {
        "description": "Information about the SKU of the DigitalTwinsInstance.",
        "properties": {
          "name": {
            "description": "The name of the SKU.",
            "enum": [
              "F1"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DigitalTwinsSku"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "ErrorDefinition": {
        "description": "Error definition.",
        "properties": {
          "code": {
            "description": "Service specific error code which serves as the substatus for the HTTP error code.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "Internal error details.",
            "items": {
              "$ref": "#/components/schemas/ErrorDefinition"
            },
            "readOnly": true,
            "type": "array"
          },
          "message": {
            "description": "Description of the error.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Error response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorDefinition",
            "description": "Error description"
          }
        },
        "type": "object"
      },
      "EventGrid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DigitalTwinsEndpointResourceProperties"
          },
          {
            "properties": {
              "TopicEndpoint": {
                "description": "EventGrid Topic Endpoint",
                "type": "string"
              },
              "accessKey1": {
                "description": "EventGrid secondary accesskey. Will be obfuscated during read",
                "type": "string"
              },
              "accessKey2": {
                "description": "EventGrid secondary accesskey. Will be obfuscated during read",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "properties related to eventgrid.",
        "required": [
          "accessKey1",
          "accessKey2"
        ],
        "x-ms-discriminator-value": "EventGrid"
      },
      "EventHub": {
        "allOf": [
          {
            "properties": {
              "connectionString-PrimaryKey": {
                "description": "PrimaryConnectionString of the endpoint. Will be obfuscated during read",
                "type": "string"
              },
              "connectionString-SecondaryKey": {
                "description": "SecondaryConnectionString of the endpoint. Will be obfuscated during read",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/DigitalTwinsEndpointResourceProperties"
          }
        ],
        "description": "properties related to eventhub.",
        "required": [
          "connectionString-PrimaryKey",
          "connectionString-SecondaryKey"
        ],
        "x-ms-discriminator-value": "EventHub"
      },
      "ExternalResource": {
        "description": "Definition of a Resource.",
        "properties": {
          "id": {
            "description": "The resource identifier.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Extension resource name.",
            "pattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The resource type.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Operation": {
        "description": "DigitalTwins service REST API operation",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "Operation properties display"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{read | write | action | delete}",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "The object that represents the operation.",
        "properties": {
          "description": {
            "description": "Friendly description for the operation,",
            "readOnly": true,
            "type": "string"
          },
          "operation": {
            "description": "Name of the operation",
            "readOnly": true,
            "type": "string"
          },
          "provider": {
            "description": "Service provider: Microsoft DigitalTwins",
            "readOnly": true,
            "type": "string"
          },
          "resource": {
            "description": "Resource Type: DigitalTwinsInstances",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "A list of DigitalTwins service operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "nextLink": {
            "description": "The link used to get the next page of DigitalTwins description objects.",
            "type": "string"
          },
          "value": {
            "description": "A list of DigitalTwins operations supported by the Microsoft.DigitalTwins resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ServiceBus": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DigitalTwinsEndpointResourceProperties"
          },
          {
            "properties": {
              "primaryConnectionString": {
                "description": "PrimaryConnectionString of the endpoint. Will be obfuscated during read",
                "type": "string"
              },
              "secondaryConnectionString": {
                "description": "SecondaryConnectionString of the endpoint. Will be obfuscated during read",
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "properties related to servicebus.",
        "required": [
          "primaryConnectionString",
          "secondaryConnectionString"
        ],
        "x-ms-discriminator-value": "ServiceBus"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}