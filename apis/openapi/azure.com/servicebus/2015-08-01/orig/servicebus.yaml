openapi: 3.0.0
info:
  description: Azure Service Bus client
  title: ServiceBusManagementClient
  version: '2015-08-01'
servers:
  - url: 'https://management.azure.com/'
paths:
  /providers/Microsoft.ServiceBus/operations:
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationListResult'
          description: OK. The request has succeeded.
      tags:
        - Operations
      description: Lists all of the available ServiceBus REST API operations.
      operationId: Operations_List
      x-ms-examples:
        OperationsList:
          $ref: ./examples/SBOperations_List.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/CheckNameAvailability':
    post:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckNameAvailabilityResult'
          description: check availability returned successfully.
      tags:
        - Namespaces
      description: Check the give namespace name availability.
      operationId: Namespaces_CheckNameAvailability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckNameAvailability'
        description: Parameters to check availability of the given namespace name
        required: true
      x-ms-examples:
        NameSpaceCheckNameAvailability:
          $ref: ./examples/SBNameSpaceCheckNameAvailability.json
  '/subscriptions/{subscriptionId}/providers/Microsoft.ServiceBus/namespaces':
    get:
      parameters:
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
          description: Namespaces successfully returned.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx'
      description: >-
        Gets all the available namespaces within the subscription, irrespective
        of the resource groups.
      operationId: Namespaces_ListBySubscription
      x-ms-examples:
        NameSpaceList:
          $ref: ./examples/SBNameSpaceList.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceListResult'
          description: Namespaces successfully returned.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639412.aspx'
      description: Gets the available namespaces within a resource group.
      operationId: Namespaces_ListByResourceGroup
      x-ms-examples:
        NameSpaceListByResourceGroup:
          $ref: ./examples/SBNameSpaceListByResourceGroup.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace successfully deleted.
        '202':
          description: Namespace delete request accepted.
        '204':
          description: No content.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639389.aspx'
      description: >-
        Deletes an existing namespace. This operation also removes all
        associated resources under the namespace.
      operationId: Namespaces_Delete
      x-ms-examples:
        NameSpaceDelete:
          $ref: ./examples/SBNameSpaceDelete.json
      x-ms-long-running-operation: true
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
          description: Namespace successfully returned.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639379.aspx'
      description: Gets a description for the specified namespace.
      operationId: Namespaces_Get
      x-ms-examples:
        NameSpaceGet:
          $ref: ./examples/SBNameSpaceGet.json
    patch:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
          description: Namespace updated successfully.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
          description: Namespace update request accepted.
        '202':
          description: Namespace update request accepted.
      tags:
        - Namespaces
      description: >-
        Updates a service namespace. Once created, this namespace's resource
        manifest is immutable. This operation is idempotent.
      operationId: Namespaces_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceUpdateParameters'
        description: Parameters supplied to update a namespace resource.
        required: true
      x-ms-examples:
        NameSpaceUpdate:
          $ref: ./examples/SBNameSpaceUpdate.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - description: The namespace name.
          in: path
          name: namespaceName
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
          description: Namespace created successfully.
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResource'
          description: Namespace create request accepted.
        '202':
          description: Namespace create or update request accepted.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639408.aspx'
      description: >-
        Creates or updates a service namespace. Once created, this namespace's
        resource manifest is immutable. This operation is idempotent.
      operationId: Namespaces_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamespaceCreateOrUpdateParameters'
        description: Parameters supplied to create a namespace resource.
        required: true
      x-ms-examples:
        NameSpaceCreate:
          $ref: ./examples/SBNameSpaceCreate.json
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
          description: Namespace authorization rules returned successfully.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639376.aspx'
      description: Gets the authorization rules for a namespace.
      operationId: Namespaces_ListAuthorizationRules
      x-ms-examples:
        NameSpaceAuthorizationRuleListAll:
          $ref: ./examples/SBNameSpaceAuthorizationRuleListAll.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule successfully deleted.
        '204':
          description: No content.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639417.aspx'
      description: Deletes a namespace authorization rule.
      operationId: Namespaces_DeleteAuthorizationRule
      x-ms-examples:
        NameSpaceAuthorizationRuleDelete:
          $ref: ./examples/SBNameSpaceAuthorizationRuleDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Namespace authorization rule returned successfully.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639392.aspx'
      description: Gets an authorization rule for a namespace by rule name.
      operationId: Namespaces_GetAuthorizationRule
      x-ms-examples:
        NameSpaceAuthorizationRuleGet:
          $ref: ./examples/SBNameSpaceAuthorizationRuleGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Namespace authorization rule created.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639410.aspx'
      description: Creates or updates an authorization rule for a namespace.
      operationId: Namespaces_CreateOrUpdateAuthorizationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters
        description: The shared access authorization rule.
        required: true
      x-ms-examples:
        NameSpaceAuthorizationRuleCreate:
          $ref: ./examples/SBNameSpaceAuthorizationRuleCreate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Connection strings successfully returned.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639398.aspx'
      description: Gets the primary and secondary connection strings for the namespace.
      operationId: Namespaces_ListKeys
      x-ms-examples:
        NameSpaceAuthorizationRuleListKey:
          $ref: ./examples/SBNameSpaceAuthorizationRuleListKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Authorization rule successfully regenerated.
      tags:
        - Namespaces
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt718977.aspx'
      description: >-
        Regenerates the primary or secondary connection strings for the
        namespace.
      operationId: Namespaces_RegenerateKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeysParameters'
        description: Parameters supplied to regenerate the authorization rule.
        required: true
      x-ms-examples:
        NameSpaceAuthorizationRuleRegenerateKey:
          $ref: ./examples/SBNameSpaceAuthorizationRuleRegenerateKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueListResult'
          description: Queues successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639415.aspx'
      description: Gets the queues within a namespace.
      operationId: Queues_ListAll
      x-ms-examples:
        QueueListByNameSpace:
          $ref: ./examples/SBQueueListByNameSpace.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Queue successfully deleted.
        '204':
          description: No content.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639411.aspx'
      description: Deletes a queue from the specified namespace in a resource group.
      operationId: Queues_Delete
      x-ms-examples:
        QueueDelete:
          $ref: ./examples/SBQueueDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResource'
          description: Queue description successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639380.aspx'
      description: Returns a description for the specified queue.
      operationId: Queues_Get
      x-ms-examples:
        QueueGet:
          $ref: ./examples/SBQueueGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResource'
          description: Queue successfully created.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639395.aspx'
      description: Creates or updates a Service Bus queue. This operation is idempotent.
      operationId: Queues_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueueCreateOrUpdateParameters'
        description: Parameters supplied to create or update a queue resource.
        required: true
      x-ms-examples:
        QueueCreate:
          $ref: ./examples/SBQueueCreate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
          description: Authorization rules successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705607.aspx'
      description: Gets all authorization rules for a queue.
      operationId: Queues_ListAuthorizationRules
      x-ms-examples:
        QueueAuthorizationRuleListAll:
          $ref: ./examples/SBQueueAuthorizationRuleListAll.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Authorization rule successfully deleted.
        '204':
          description: No content.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705609.aspx'
      description: Deletes a queue authorization rule.
      operationId: Queues_DeleteAuthorizationRule
      x-ms-examples:
        QueueAuthorizationRuleDelete:
          $ref: ./examples/SBQueueAuthorizationRuleDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Authorization rule successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705611.aspx'
      description: Gets an authorization rule for a queue by rule name.
      operationId: Queues_GetAuthorizationRule
      x-ms-examples:
        QueueAuthorizationRuleGet:
          $ref: ./examples/SBQueueAuthorizationRuleGet.json
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Authorization rule successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705611.aspx'
      description: Gets an authorization rule for a queue by rule name.
      operationId: Queues_PostAuthorizationRule
      x-ms-examples:
        QueueAuthorizationRuleGet:
          $ref: ./examples/SBQueueAuthorizationRuleGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Authorization rule successfully created.
      tags:
        - Queues
      description: Creates an authorization rule for a queue.
      operationId: Queues_CreateOrUpdateAuthorizationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters
        description: The shared access authorization rule.
        required: true
      x-ms-examples:
        QueueAuthorizationRuleCreate:
          $ref: ./examples/SBQueueAuthorizationRuleCreate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/ListKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Connection strings successfully returned.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705608.aspx'
      description: Primary and secondary connection strings to the queue.
      operationId: Queues_ListKeys
      x-ms-examples:
        QueueAuthorizationRuleListKey:
          $ref: ./examples/SBQueueAuthorizationRuleListKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}/authorizationRules/{authorizationRuleName}/regenerateKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/queueNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Connection strings successfully regenerated.
      tags:
        - Queues
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt705606.aspx'
      description: Regenerates the primary or secondary connection strings to the queue.
      operationId: Queues_RegenerateKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeysParameters'
        description: Parameters supplied to regenerate the authorization rule.
        required: true
      x-ms-examples:
        QueueAuthorizationRuleRegenerateKey:
          $ref: ./examples/SBQueueAuthorizationRuleRegenerateKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicListResult'
          description: Successfully retrieved list of topics.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639388.aspx'
      description: Gets all the topics in a namespace.
      operationId: Topics_ListAll
      x-ms-examples:
        TopicGet:
          $ref: ./examples/SBTopicListByNameSpace.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Topic successfully deleted.
        '204':
          description: No Content
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639404.aspx'
      description: Deletes a topic from the specified namespace and resource group.
      operationId: Topics_Delete
      x-ms-examples:
        TopicDelete:
          $ref: ./examples/SBTopicDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicResource'
          description: Topic description successfully retrieved.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639399.aspx'
      description: Returns a description for the specified topic.
      operationId: Topics_Get
      x-ms-examples:
        TopicGet:
          $ref: ./examples/SBTopicGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicResource'
          description: Topic successfully created.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639409.aspx'
      description: Creates a topic in the specified namespace.
      operationId: Topics_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicCreateOrUpdateParameters'
        description: Parameters supplied to create a topic resource.
        required: true
      x-ms-examples:
        TopicCreate:
          $ref: ./examples/SBTopicCreate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleListResult'
          description: Authorization rules successfully returned.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx'
      description: Gets authorization rules for a topic.
      operationId: Topics_ListAuthorizationRules
      x-ms-examples:
        TopicAuthorizationRuleListAll:
          $ref: ./examples/SBTopicAuthorizationRuleListAll.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Topic authorization rule successfully deleted.
        '204':
          description: No content.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720681.aspx'
      description: Deletes a topic authorization rule.
      operationId: Topics_DeleteAuthorizationRule
      x-ms-examples:
        TopicAuthorizationRuleDelete:
          $ref: ./examples/SBTopicAuthorizationRuleDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Topic authorization rule returned successfully.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720676.aspx'
      description: Returns the specified authorization rule.
      operationId: Topics_GetAuthorizationRule
      x-ms-examples:
        TopicAuthorizationRuleGet:
          $ref: ./examples/SBTopicAuthorizationRuleGet.json
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Topic authorization rule returned successfully.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720676.aspx'
      description: Returns the specified authorization rule.
      operationId: Topics_PostAuthorizationRule
      x-ms-examples:
        TopicAuthorizationRuleGet:
          $ref: ./examples/SBTopicAuthorizationRuleGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          description: Topic authorization rule successfully created.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720678.aspx'
      description: Creates an authorization rule for the specified topic.
      operationId: Topics_CreateOrUpdateAuthorizationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters
        description: The shared access authorization rule.
        required: true
      x-ms-examples:
        TopicAuthorizationRuleCreate:
          $ref: ./examples/SBTopicAuthorizationRuleCreate.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/ListKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Connection strings successfully retrieved.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720677.aspx'
      description: Gets the primary and secondary connection strings for the topic.
      operationId: Topics_ListKeys
      x-ms-examples:
        TopicAuthorizationRuleListKey:
          $ref: ./examples/SBTopicAuthorizationRuleListKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/authorizationRules/{authorizationRuleName}/regenerateKeys':
    post:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/authorizationRuleNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListKeys'
          description: Connection strings successfully regenerated.
      tags:
        - Topics
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt720679.aspx'
      description: Regenerates primary or secondary connection strings for the topic.
      operationId: Topics_RegenerateKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateKeysParameters'
        description: Parameters supplied to regenerate the authorization rule.
        required: true
      x-ms-examples:
        TopicAuthorizationRuleRegenerateKey:
          $ref: ./examples/SBTopicAuthorizationRuleRegenerateKey.json
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions':
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResult'
          description: Successfully retrieved list of subscriptions.
      tags:
        - Subscriptions
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639400.aspx'
      description: List all the subscriptions under a specified topic.
      operationId: Subscriptions_ListAll
      x-ms-examples:
        SubscriptionListByTopic:
          $ref: ./examples/SBSubscriptionListByTopic.json
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/topics/{topicName}/subscriptions/{subscriptionName}':
    delete:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/subscriptionNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Subscription successfully deleted.
        '204':
          description: No content.
      tags:
        - Subscriptions
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639381.aspx'
      description: Deletes a subscription from the specified topic.
      operationId: Subscriptions_Delete
      x-ms-examples:
        SubscriptionDelete:
          $ref: ./examples/SBSubscriptionDelete.json
    get:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/subscriptionNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResource'
          description: Successfully retrieved subscription description.
      tags:
        - Subscriptions
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639402.aspx'
      description: Returns a subscription description for the specified topic.
      operationId: Subscriptions_Get
      x-ms-examples:
        SubscriptionGet:
          $ref: ./examples/SBSubscriptionGet.json
    put:
      parameters:
        - $ref: '#/components/parameters/resourceGroupNameParameter'
        - $ref: '#/components/parameters/namespaceNameParameter'
        - $ref: '#/components/parameters/topicNameParameter'
        - $ref: '#/components/parameters/subscriptionNameParameter'
        - $ref: '#/components/parameters/ApiVersionParameter'
        - $ref: '#/components/parameters/SubscriptionIdParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResource'
          description: Subscription create request accepted.
      tags:
        - Subscriptions
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639385.aspx'
      description: Creates a topic subscription.
      operationId: Subscriptions_CreateOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateOrUpdateParameters'
        description: Parameters supplied to create a subscription resource.
        required: true
      x-ms-examples:
        SubscriptionCreate:
          $ref: ./examples/SBSubscriptionCreate.json
components:
  parameters:
    ApiVersionParameter:
      description: Client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
    SubscriptionIdParameter:
      description: >-
        Subscription credentials that uniquely identify a Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
    authorizationRuleNameParameter:
      description: The authorization rule name.
      in: path
      name: authorizationRuleName
      required: true
      schema:
        maxLength: 50
        minLength: 1
        type: string
      x-ms-parameter-location: method
    namespaceNameParameter:
      description: The namespace name
      in: path
      name: namespaceName
      required: true
      schema:
        maxLength: 50
        minLength: 6
        type: string
      x-ms-parameter-location: method
    queueNameParameter:
      description: The queue name.
      in: path
      name: queueName
      required: true
      schema:
        maxLength: 50
        minLength: 1
        type: string
      x-ms-parameter-location: method
    resourceGroupNameParameter:
      description: Name of the Resource group within the Azure subscription.
      in: path
      name: resourceGroupName
      required: true
      schema:
        maxLength: 90
        minLength: 1
        type: string
      x-ms-parameter-location: method
    subscriptionNameParameter:
      description: The subscription name.
      in: path
      name: subscriptionName
      required: true
      schema:
        maxLength: 50
        minLength: 1
        type: string
      x-ms-parameter-location: method
    topicNameParameter:
      description: The topic name.
      in: path
      name: topicName
      required: true
      schema:
        maxLength: 50
        minLength: 1
        type: string
      x-ms-parameter-location: method
  requestBodies:
    RegenerateKeysParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegenerateKeysParameters'
      description: Parameters supplied to regenerate the authorization rule.
      required: true
    SharedAccessAuthorizationRuleCreateOrUpdateParameters:
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/SharedAccessAuthorizationRuleCreateOrUpdateParameters
      description: The shared access authorization rule.
      required: true
  schemas:
    CheckNameAvailability:
      description: Description of a Check Name availability request properties.
      properties:
        name:
          description: >-
            The Name to check the namespace name availability and The namespace
            name can contain only letters, numbers, and hyphens. The namespace
            must start with a letter, and it must end with a letter or number.
          type: string
      required:
        - name
      type: object
    CheckNameAvailabilityResult:
      description: Description of a Check Name availability request properties.
      properties:
        message:
          description: >-
            The detailed info regarding the reason associated with the
            namespace.
          readOnly: true
          type: string
        nameAvailable:
          description: >-
            Value indicating namespace is availability, true if the namespace is
            available; otherwise, false.
          type: boolean
        reason:
          $ref: '#/components/schemas/UnavailableReason'
          description: The reason for unavailability of a namespace.
      type: object
    EntityAvailabilityStatus:
      description: Entity availability status.
      enum:
        - Available
        - Limited
        - Renaming
        - Restoring
        - Unknown
      type: string
      x-ms-enum:
        modelAsString: false
        name: EntityAvailabilityStatus
    EntityStatus:
      description: Entity status.
      enum:
        - Active
        - Creating
        - Deleting
        - Disabled
        - ReceiveDisabled
        - Renaming
        - Restoring
        - SendDisabled
        - Unknown
      type: string
      x-ms-enum:
        modelAsString: false
        name: EntityStatus
    MessageCountDetails:
      description: Message Count Details.
      properties:
        activeMessageCount:
          description: 'Number of active messages in the queue, topic, or subscription.'
          format: int64
          readOnly: true
          type: integer
        deadLetterMessageCount:
          description: Number of messages that are dead lettered.
          format: int64
          readOnly: true
          type: integer
        scheduledMessageCount:
          description: Number of scheduled messages.
          format: int64
          readOnly: true
          type: integer
        transferDeadLetterMessageCount:
          description: Number of messages transferred into dead letters.
          format: int64
          readOnly: true
          type: integer
        transferMessageCount:
          description: >-
            Number of messages transferred to another queue, topic, or
            subscription.
          format: int64
          readOnly: true
          type: integer
      type: object
    NamespaceCreateOrUpdateParameters:
      description: Parameters supplied to the Create Or Update Namespace operation.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Namespace tags.
          type: object
        location:
          description: Namespace location.
          type: string
        properties:
          $ref: '#/components/schemas/NamespaceProperties'
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/Sku'
      required:
        - location
      type: object
    NamespaceListResult:
      description: The response of the List Namespace operation.
      properties:
        nextLink:
          description: >-
            Link to the next set of results. Not empty if Value contains
            incomplete list of Namespaces.
          type: string
        value:
          description: Result of the List Namespace operation.
          items:
            $ref: '#/components/schemas/NamespaceResource'
          type: array
      type: object
    NamespaceProperties:
      description: Properties of the namespace.
      properties:
        createACSNamespace:
          description: Indicates whether to create an ACS namespace.
          type: boolean
        createdAt:
          description: The time the namespace was created.
          format: date-time
          readOnly: true
          type: string
        enabled:
          description: Specifies whether this instance is enabled.
          type: boolean
        provisioningState:
          description: Provisioning state of the namespace.
          readOnly: true
          type: string
        serviceBusEndpoint:
          description: Endpoint you can use to perform Service Bus operations.
          readOnly: true
          type: string
        status:
          description: State of the namespace.
          enum:
            - Unknown
            - Creating
            - Created
            - Activating
            - Enabling
            - Active
            - Disabling
            - Disabled
            - SoftDeleting
            - SoftDeleted
            - Removing
            - Removed
            - Failed
          type: string
          x-ms-enum:
            modelAsString: false
            name: NamespaceState
        updatedAt:
          description: The time the namespace was updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    NamespaceResource:
      allOf:
        - $ref: '#/components/schemas/TrackedResource'
      description: Description of a namespace resource.
      properties:
        properties:
          $ref: '#/components/schemas/NamespaceProperties'
          x-ms-client-flatten: true
        sku:
          $ref: '#/components/schemas/Sku'
      type: object
    NamespaceUpdateParameters:
      description: Parameters supplied to the Patch Namespace operation.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        sku:
          $ref: '#/components/schemas/Sku'
          description: The sku of the created namespace
      type: object
    Operation:
      description: A ServiceBus REST API operation
      properties:
        display:
          description: The object that represents the operation.
          properties:
            operation:
              description: 'Operation type: Read, write, delete, etc.'
              readOnly: true
              type: string
            provider:
              description: 'Service provider: Microsoft.ServiceBus'
              readOnly: true
              type: string
            resource:
              description: 'Resource on which the operation is performed: Invoice, etc.'
              readOnly: true
              type: string
          type: object
        name:
          description: 'Operation name: {provider}/{resource}/{operation}'
          readOnly: true
          type: string
      type: object
    OperationListResult:
      description: >-
        Result of the request to list ServiceBus operations. It contains a list
        of operations and a URL link to get the next set of results.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: >-
            List of ServiceBus operations supported by the Microsoft.ServiceBus
            resource provider.
          items:
            $ref: '#/components/schemas/Operation'
          readOnly: true
          type: array
      type: object
    QueueCreateOrUpdateParameters:
      description: Parameters supplied to the Create Or Update Queue operation.
      properties:
        location:
          description: location of the resource.
          type: string
        name:
          description: Queue name.
          type: string
        properties:
          $ref: '#/components/schemas/QueueProperties'
          x-ms-client-flatten: true
      required:
        - location
      type: object
    QueueListResult:
      description: The response to the List Queues operation.
      properties:
        nextLink:
          description: >-
            Link to the next set of results. Not empty if Value contains
            incomplete list of queues.
          type: string
        value:
          description: Result of the List Queues operation.
          items:
            $ref: '#/components/schemas/QueueResource'
          type: array
      type: object
    QueueProperties:
      description: The Queue Properties definition.
      properties:
        accessedAt:
          description: >-
            Last time a message was sent, or the last time there was a receive
            request to this queue.
          format: date-time
          readOnly: true
          type: string
        autoDeleteOnIdle:
          description: >-
            the TimeSpan idle interval after which the queue is automatically
            deleted. The minimum duration is 5 minutes.
          type: string
        countDetails:
          $ref: '#/components/schemas/MessageCountDetails'
          readOnly: true
        createdAt:
          description: The exact time the message was created.
          format: date-time
          readOnly: true
          type: string
        deadLetteringOnMessageExpiration:
          description: >-
            A value that indicates whether this queue has dead letter support
            when a message expires.
          type: boolean
        defaultMessageTimeToLive:
          description: >-
            The default message time to live value. This is the duration after
            which the message expires, starting from when the message is sent to
            Service Bus. This is the default value used when TimeToLive is not
            set on a message itself.
          type: string
        duplicateDetectionHistoryTimeWindow:
          description: >-
            TimeSpan structure that defines the duration of the duplicate
            detection history. The default value is 10 minutes.
          type: string
        enableBatchedOperations:
          description: >-
            A value that indicates whether server-side batched operations are
            enabled.
          type: boolean
        enableExpress:
          description: >-
            A value that indicates whether Express Entities are enabled. An
            express queue holds a message in memory temporarily before writing
            it to persistent storage.
          type: boolean
        enablePartitioning:
          description: >-
            A value that indicates whether the queue is to be partitioned across
            multiple message brokers.
          type: boolean
        entityAvailabilityStatus:
          $ref: '#/components/schemas/EntityAvailabilityStatus'
          description: Entity availability status for the queue.
        isAnonymousAccessible:
          description: >-
            A value that indicates whether the message is accessible
            anonymously.
          type: boolean
        lockDuration:
          description: >-
            The duration of a peek-lock; that is, the amount of time that the
            message is locked for other receivers. The maximum value for
            LockDuration is 5 minutes; the default value is 1 minute.
          type: string
        maxDeliveryCount:
          description: >-
            The maximum delivery count. A message is automatically deadlettered
            after this number of deliveries.
          format: int32
          type: integer
        maxSizeInMegabytes:
          description: >-
            The maximum size of the queue in megabytes, which is the size of
            memory allocated for the queue.
          format: int64
          type: integer
        messageCount:
          description: The number of messages in the queue.
          format: int64
          readOnly: true
          type: integer
        requiresDuplicateDetection:
          description: A value indicating if this queue requires duplicate detection.
          type: boolean
        requiresSession:
          description: >-
            A value that indicates whether the queue supports the concept of
            sessions.
          type: boolean
        sizeInBytes:
          description: 'The size of the queue, in bytes.'
          format: int64
          readOnly: true
          type: integer
        status:
          $ref: '#/components/schemas/EntityStatus'
          description: Enumerates the possible values for the status of a messaging entity.
        supportOrdering:
          description: A value that indicates whether the queue supports ordering.
          type: boolean
        updatedAt:
          description: The exact time the message was updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    QueueResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of queue Resource.
      properties:
        properties:
          $ref: '#/components/schemas/QueueProperties'
          x-ms-client-flatten: true
      type: object
    RegenerateKeysParameters:
      description: Parameters supplied to the Regenerate Authorization Rule operation.
      properties:
        Policykey:
          description: Key that needs to be regenerated.
          enum:
            - PrimaryKey
            - SecondaryKey
          type: string
          x-ms-enum:
            modelAsString: false
            name: Policykey
      type: object
    Resource:
      description: The Resource definition for other than namespace.
      properties:
        id:
          description: Resource Id
          readOnly: true
          type: string
        location:
          description: Resource location.
          type: string
        name:
          description: Resource name
          readOnly: true
          type: string
        type:
          description: Resource type
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ResourceListKeys:
      description: Namespace/ServiceBus Connection String
      properties:
        keyName:
          description: A string that describes the authorization rule.
          type: string
        primaryConnectionString:
          description: >-
            Primary connection string of the created namespace authorization
            rule.
          type: string
        primaryKey:
          description: >-
            A base64-encoded 256-bit primary key for signing and validating the
            SAS token.
          type: string
        secondaryConnectionString:
          description: >-
            Secondary connection string of the created namespace authorization
            rule.
          type: string
        secondaryKey:
          description: >-
            A base64-encoded 256-bit primary key for signing and validating the
            SAS token.
          type: string
      type: object
    SharedAccessAuthorizationRuleCreateOrUpdateParameters:
      description: >-
        Parameters supplied to the Create Or Update Authorization Rules
        operation.
      properties:
        location:
          description: data center location.
          type: string
        name:
          description: Name of the authorization rule.
          type: string
        properties:
          $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          x-ms-client-flatten: true
      type: object
    SharedAccessAuthorizationRuleListResult:
      description: The response to the List Namespace operation.
      properties:
        nextLink:
          description: >-
            Link to the next set of results. Not empty if Value contains
            incomplete list of Authorization Rules.
          type: string
        value:
          description: Result of the List Authorization Rules operation.
          items:
            $ref: '#/components/schemas/SharedAccessAuthorizationRuleResource'
          type: array
      type: object
    SharedAccessAuthorizationRuleProperties:
      description: SharedAccessAuthorizationRule properties.
      properties:
        rights:
          description: The rights associated with the rule.
          items:
            enum:
              - Manage
              - Send
              - Listen
            type: string
            x-ms-enum:
              modelAsString: false
              name: AccessRights
          type: array
      required:
        - rights
      type: object
    SharedAccessAuthorizationRuleResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of a namespace authorization rule.
      properties:
        properties:
          $ref: '#/components/schemas/SharedAccessAuthorizationRuleProperties'
          x-ms-client-flatten: true
      type: object
    Sku:
      description: SKU of the namespace.
      properties:
        capacity:
          description: The specified messaging units for the tier.
          format: int32
          type: integer
        name:
          description: Name of this SKU.
          enum:
            - Basic
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuName
        tier:
          description: The billing tier of this particular SKU.
          enum:
            - Basic
            - Standard
            - Premium
          type: string
          x-ms-enum:
            modelAsString: true
            name: SkuTier
      required:
        - tier
      type: object
    SubscriptionCreateOrUpdateParameters:
      description: Parameters supplied to the Create Or Update Subscription operation.
      properties:
        location:
          description: Subscription data center location.
          type: string
        properties:
          $ref: '#/components/schemas/SubscriptionProperties'
          x-ms-client-flatten: true
        type:
          description: Resource manager type of the resource.
          type: string
      required:
        - location
      type: object
    SubscriptionListResult:
      description: The response to the List Subscriptions operation.
      properties:
        nextLink:
          description: >-
            Link to the next set of results. Not empty if Value contains
            incomplete list of subscriptions.
          type: string
        value:
          description: Result of the List Subscriptions operation.
          items:
            $ref: '#/components/schemas/SubscriptionResource'
          type: array
      type: object
    SubscriptionProperties:
      description: Description of Subscription Resource.
      properties:
        accessedAt:
          description: Last time there was a receive request to this subscription.
          format: date-time
          readOnly: true
          type: string
        autoDeleteOnIdle:
          description: >-
            TimeSpan idle interval after which the topic is automatically
            deleted. The minimum duration is 5 minutes.
          type: string
        countDetails:
          $ref: '#/components/schemas/MessageCountDetails'
          readOnly: true
        createdAt:
          description: Exact time the message was created.
          format: date-time
          readOnly: true
          type: string
        deadLetteringOnFilterEvaluationExceptions:
          description: >-
            Value that indicates whether a subscription has dead letter support
            on filter evaluation exceptions.
          type: boolean
        deadLetteringOnMessageExpiration:
          description: >-
            Value that indicates whether a subscription has dead letter support
            when a message expires.
          type: boolean
        defaultMessageTimeToLive:
          description: >-
            Default message time to live value. This is the duration after which
            the message expires, starting from when the message is sent to
            Service Bus. This is the default value used when TimeToLive is not
            set on a message itself.
          type: string
        enableBatchedOperations:
          description: >-
            Value that indicates whether server-side batched operations are
            enabled.
          type: boolean
        entityAvailabilityStatus:
          $ref: '#/components/schemas/EntityAvailabilityStatus'
          description: Entity availability status for the topic.
        isReadOnly:
          description: Value that indicates whether the entity description is read-only.
          type: boolean
        lockDuration:
          description: The lock duration time span for the subscription.
          type: string
        maxDeliveryCount:
          description: Number of maximum deliveries.
          format: int32
          type: integer
        messageCount:
          description: Number of messages.
          format: int64
          readOnly: true
          type: integer
        requiresSession:
          description: Value indicating if a subscription supports the concept of sessions.
          type: boolean
        status:
          $ref: '#/components/schemas/EntityStatus'
          description: Enumerates the possible values for the status of a messaging entity.
        updatedAt:
          description: The exact time the message was updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    SubscriptionResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of subscription resource.
      properties:
        properties:
          $ref: '#/components/schemas/SubscriptionProperties'
          x-ms-client-flatten: true
      type: object
    TopicCreateOrUpdateParameters:
      description: Parameters supplied to the Create Or Update Topic operation.
      properties:
        location:
          description: Location of the resource.
          type: string
        name:
          description: Topic name.
          type: string
        properties:
          $ref: '#/components/schemas/TopicProperties'
          x-ms-client-flatten: true
      required:
        - location
      type: object
    TopicListResult:
      description: The response to the List Topics operation.
      properties:
        nextLink:
          description: >-
            Link to the next set of results. Not empty if Value contains
            incomplete list of topics.
          type: string
        value:
          description: Result of the List Topics operation.
          items:
            $ref: '#/components/schemas/TopicResource'
          type: array
      type: object
    TopicProperties:
      description: The Topic Properties definition.
      properties:
        accessedAt:
          description: >-
            Last time the message was sent, or a request was received, for this
            topic.
          format: date-time
          readOnly: true
          type: string
        autoDeleteOnIdle:
          description: >-
            TimeSpan idle interval after which the topic is automatically
            deleted. The minimum duration is 5 minutes.
          type: string
        countDetails:
          $ref: '#/components/schemas/MessageCountDetails'
          readOnly: true
        createdAt:
          description: Exact time the message was created.
          format: date-time
          readOnly: true
          type: string
        defaultMessageTimeToLive:
          description: >-
            Default message time to live value. This is the duration after which
            the message expires, starting from when the message is sent to
            Service Bus. This is the default value used when TimeToLive is not
            set on a message itself.
          type: string
        duplicateDetectionHistoryTimeWindow:
          description: >-
            TimeSpan structure that defines the duration of the duplicate
            detection history. The default value is 10 minutes.
          type: string
        enableBatchedOperations:
          description: >-
            Value that indicates whether server-side batched operations are
            enabled.
          type: boolean
        enableExpress:
          description: >-
            Value that indicates whether Express Entities are enabled. An
            express topic holds a message in memory temporarily before writing
            it to persistent storage.
          type: boolean
        enablePartitioning:
          description: >-
            Value that indicates whether the topic to be partitioned across
            multiple message brokers is enabled.
          type: boolean
        entityAvailabilityStatus:
          $ref: '#/components/schemas/EntityAvailabilityStatus'
          description: Entity availability status for the topic.
        filteringMessagesBeforePublishing:
          description: Whether messages should be filtered before publishing.
          type: boolean
        isAnonymousAccessible:
          description: Value that indicates whether the message is accessible anonymously.
          type: boolean
        isExpress:
          description: ''
          type: boolean
        maxSizeInMegabytes:
          description: >-
            Maximum size of the topic in megabytes, which is the size of the
            memory allocated for the topic.
          format: int64
          type: integer
        requiresDuplicateDetection:
          description: Value indicating if this topic requires duplicate detection.
          type: boolean
        sizeInBytes:
          description: 'Size of the topic, in bytes.'
          format: int64
          readOnly: true
          type: integer
        status:
          $ref: '#/components/schemas/EntityStatus'
          description: Enumerates the possible values for the status of a messaging entity.
        subscriptionCount:
          description: Number of subscriptions.
          format: int32
          readOnly: true
          type: integer
        supportOrdering:
          description: Value that indicates whether the topic supports ordering.
          type: boolean
        updatedAt:
          description: The exact time the message was updated.
          format: date-time
          readOnly: true
          type: string
      type: object
    TopicResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: Description of topic resource.
      properties:
        properties:
          $ref: '#/components/schemas/TopicProperties'
          x-ms-client-flatten: true
      type: object
    TrackedResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
      description: The Resource definition.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags
          type: object
        location:
          description: Resource location
          type: string
      required:
        - location
      type: object
    UnavailableReason:
      description: Specifies the reason for the unavailability of the service.
      enum:
        - None
        - InvalidName
        - SubscriptionIsDisabled
        - NameInUse
        - NameInLockdown
        - TooManyNamespaceInCurrentSubscription
      type: string
      x-ms-enum:
        modelAsString: true
        name: UnavailableReason
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
security:
  - azure_auth:
      - user_impersonation

