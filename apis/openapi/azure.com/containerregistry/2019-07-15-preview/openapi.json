{
  "openapi": "3.0.0",
  "info": {
    "description": "Metadata API definition for the Azure Container Registry runtime",
    "title": "Azure Container Registry",
    "version": "2019-07-15-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/data-plane/Microsoft.ContainerRegistry/preview/2019-07-15/containerregistry.json"
  },
  "servers": [
    {
      "url": "{url}",
      "variables": {
        "url": {
          "description": "Registry login URL",
          "x-ms-client-name": "loginUri",
          "x-ms-parameter-location": "client",
          "x-ms-skip-url-encoding": true
        }
      }
    }
  ],
  "paths": {
    "/acr/v1/_catalog": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryLast"
          },
          {
            "$ref": "#/components/parameters/QueryNum"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repositories"
                }
              }
            },
            "description": "Returns a list of repositories"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrRepository"
        ],
        "description": "List repositories",
        "operationId": "GetAcrRepositories",
        "x-ms-examples": {
          "Get repositories in a registry": {
            "$ref": "./examples/GetRepositories.json"
          }
        }
      }
    },
    "/acr/v1/{name}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          }
        ],
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletedRepository"
                }
              }
            },
            "description": "The repository is deleted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrRepository"
        ],
        "description": "Delete the repository identified by `name`",
        "operationId": "DeleteAcrRepository",
        "x-ms-examples": {
          "Delete a repository": {
            "$ref": "./examples/DeleteAcrRepository.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryAttributes"
                }
              }
            },
            "description": "Returns a list of attributes"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrRepository",
          "AcrMetadata"
        ],
        "description": "Get repository attributes",
        "operationId": "GetAcrRepositoryAttributes",
        "x-ms-examples": {
          "Get details of repository": {
            "$ref": "./examples/GetAcrRepositoryAttributes.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          }
        ],
        "responses": {
          "200": {
            "description": "The attributes is updated"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrRepository",
          "AcrMetadata"
        ],
        "description": "Update the attribute identified by `name` where `reference` is the name of the repository.",
        "operationId": "UpdateAcrRepositoryAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeableAttributes"
              }
            }
          },
          "description": "Repository attribute value"
        },
        "x-ms-examples": {
          "Update repository attributes": {
            "$ref": "./examples/UpdateAcrRepository.json"
          }
        }
      }
    },
    "/acr/v1/{name}/_manifests": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/QueryLast"
          },
          {
            "$ref": "#/components/parameters/QueryNum"
          },
          {
            "$ref": "#/components/parameters/QueryOrderBy"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrManifests"
                }
              }
            },
            "description": "Returns a list of manifests"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrManifest",
          "AcrMetadata"
        ],
        "description": "List manifests of a repository",
        "operationId": "GetAcrManifests",
        "x-ms-examples": {
          "Get details of repository": {
            "$ref": "./examples/GetAcrManifests.json"
          }
        }
      }
    },
    "/acr/v1/{name}/_manifests/{reference}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ImageReference"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrManifestAttributes"
                }
              }
            },
            "description": "List of attributes"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrManifest",
          "AcrMetadata"
        ],
        "description": "Get manifest attributes",
        "operationId": "GetAcrManifestAttributes",
        "x-ms-examples": {
          "Get manifest attributes": {
            "$ref": "./examples/GetAcrManifestAttributes.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ImageReference"
          }
        ],
        "responses": {
          "200": {
            "description": "The attributes are updated"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrManifest",
          "AcrMetadata"
        ],
        "description": "Update attributes of a manifest",
        "operationId": "UpdateAcrManifestAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeableAttributes"
              }
            }
          },
          "description": "Repository attribute value"
        },
        "x-ms-examples": {
          "Update attributes of a manifest": {
            "$ref": "./examples/UpdateAcrManifestAttributes.json"
          }
        }
      }
    },
    "/acr/v1/{name}/_tags": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/QueryLast"
          },
          {
            "$ref": "#/components/parameters/QueryNum"
          },
          {
            "$ref": "#/components/parameters/QueryOrderBy"
          },
          {
            "$ref": "#/components/parameters/QueryDigest"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrRepositoryTags"
                }
              }
            },
            "description": "Tag details of a repository"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrTag",
          "AcrMetadata"
        ],
        "description": "List tags of a repository",
        "operationId": "GetAcrTags",
        "x-ms-examples": {
          "Get tags of a repository": {
            "$ref": "./examples/GetAcrTags.json"
          }
        }
      }
    },
    "/acr/v1/{name}/_tags/{reference}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ManifestReference"
          }
        ],
        "responses": {
          "202": {
            "description": "The tag is deleted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrTag",
          "AcrMetadata"
        ],
        "description": "Delete tag",
        "operationId": "DeleteAcrTag",
        "x-ms-examples": {
          "Update attributes of a manifest": {
            "$ref": "./examples/DeleteAcrTag.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ManifestReference"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrTagAttributes"
                }
              }
            },
            "description": "Tag attributes"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrTag",
          "AcrMetadata"
        ],
        "description": "Get tag attributes by tag",
        "operationId": "GetAcrTagAttributes",
        "x-ms-examples": {
          "Get tag attributes": {
            "$ref": "./examples/GetAcrTagAttributes.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ManifestReference"
          }
        ],
        "responses": {
          "200": {
            "description": "The attributes are updated"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "AcrTag",
          "AcrMetadata"
        ],
        "description": "Update tag attributes",
        "operationId": "UpdateAcrTagAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeableAttributes"
              }
            }
          },
          "description": "Repository attribute value"
        },
        "x-ms-examples": {
          "Update attributes of a manifest": {
            "$ref": "./examples/UpdateAcrTagAttributes.json"
          }
        }
      }
    },
    "/oauth2/exchange": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshToken"
                }
              }
            },
            "description": "Refresh token acquired"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "security": [],
        "tags": [
          "AcrToken",
          "RefreshToken"
        ],
        "description": "Exchange AAD tokens for an ACR refresh Token",
        "operationId": "GetAcrRefreshTokenFromExchange",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "access_token": {
                    "description": "AAD access token, mandatory when grant_type is access_token_refresh_token or access_token.",
                    "type": "string"
                  },
                  "grant_type": {
                    "description": "Can take a value of access_token_refresh_token, or access_token, or refresh_token",
                    "type": "string"
                  },
                  "refresh_token": {
                    "description": "AAD refresh token, mandatory when grant_type is access_token_refresh_token or refresh_token",
                    "type": "string"
                  },
                  "service": {
                    "description": "Indicates the name of your Azure container registry.",
                    "type": "string"
                  },
                  "tenant": {
                    "description": "AAD tenant associated to the AAD credentials.",
                    "type": "string"
                  }
                },
                "required": [
                  "grant_type"
                ],
                "type": "object"
              }
            }
          }
        },
        "x-ms-examples": {
          "Exchange AAD Token for ACR Refresh": {
            "$ref": "./examples/PostRefreshToken.json"
          }
        }
      }
    },
    "/oauth2/token": {
      "get": {
        "parameters": [
          {
            "description": "Indicates the name of your Azure container registry.",
            "in": "query",
            "name": "service",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Expected to be a valid scope, and can be specified more than once for multiple scope requests. You can obtain this from the Www-Authenticate response header from the challenge.",
            "in": "query",
            "name": "scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            },
            "description": "Access token acquired"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "security": [
          {
            "registry_auth": []
          }
        ],
        "tags": [
          "AcrToken",
          "AccessToken",
          "userLogin"
        ],
        "description": "Exchange Username, Password and Scope an ACR Access Token",
        "operationId": "GetAcrAccessTokenFromLogin",
        "x-ms-examples": {
          "Get Access Token with username and password": {
            "$ref": "./examples/GetAccessToken.json"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            },
            "description": "Access token acquired"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "security": [],
        "tags": [
          "AcrToken",
          "AccessToken"
        ],
        "description": "Exchange ACR Refresh token for an ACR Access Token",
        "operationId": "GetAcrAccessToken",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "grant_type": {
                    "description": "Grant type is expected to be refresh_token",
                    "enum": [
                      "refresh_token"
                    ],
                    "type": "string"
                  },
                  "refresh_token": {
                    "description": "Must be a valid ACR refresh token",
                    "type": "string"
                  },
                  "scope": {
                    "description": "Which is expected to be a valid scope, and can be specified more than once for multiple scope requests. You obtained this from the Www-Authenticate response header from the challenge.",
                    "type": "string"
                  },
                  "service": {
                    "description": "Indicates the name of your Azure container registry.",
                    "type": "string"
                  }
                },
                "required": [
                  "grant_type"
                ],
                "type": "object"
              }
            }
          }
        },
        "x-ms-examples": {
          "Get Access Token with Refresh Token": {
            "$ref": "./examples/PostAccessToken.json"
          }
        }
      }
    },
    "/v2/": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful response. API v2 supported"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "v2"
        ],
        "description": "Tells whether this Docker Registry instance supports Docker Registry HTTP API v2",
        "operationId": "GetDockerRegistryV2Support",
        "x-ms-examples": {
          "Check Docker Registry V2 Support": {
            "$ref": "./examples/GetDockerRegistryV2Support.json"
          }
        }
      }
    },
    "/v2/_catalog": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/QueryLast"
          },
          {
            "$ref": "#/components/parameters/QueryNum"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repositories"
                }
              }
            },
            "description": "Returns a list of repositories",
            "headers": {
              "Link": {
                "description": "next paginated result",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "Repository"
        ],
        "description": "List repositories",
        "operationId": "GetRepositories",
        "x-ms-examples": {
          "Get repositories in a registry": {
            "$ref": "./examples/GetRepositories.json"
          }
        }
      }
    },
    "/v2/{name}/manifests/{reference}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ImageReference"
          }
        ],
        "responses": {
          "202": {
            "description": "The manifest has been deleted"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "Manifest"
        ],
        "description": "Delete the manifest identified by `name` and `reference`. Note that a manifest can _only_ be deleted by `digest`.",
        "operationId": "DeleteManifest",
        "x-ms-examples": {
          "Delete manifest": {
            "$ref": "./examples/DeleteManifest.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ImageReference"
          },
          {
            "description": "Accept header string delimited by comma. For example, application/vnd.docker.distribution.manifest.v2+json",
            "in": "header",
            "name": "accept",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Manifest"
                }
              }
            },
            "description": "Returns the requested manifest file"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "Manifest"
        ],
        "description": "Pulls the image manifest file associated with the specified name and reference. Reference may be a tag or a digest",
        "operationId": "GetManifest",
        "x-ms-examples": {
          "Get manifest": {
            "$ref": "./examples/GetManifest.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          },
          {
            "$ref": "#/components/parameters/ImageReference"
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "The manifest is updated",
            "headers": {
              "Content-Length": {
                "description": "The canonical location url of the uploaded manifest.",
                "schema": {
                  "type": "integer"
                }
              },
              "Docker-Content-Digest": {
                "description": "Identifies the docker upload uuid for the current request.",
                "schema": {
                  "type": "string"
                }
              },
              "Location": {
                "description": "The canonical location url of the uploaded manifest.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "Manifest"
        ],
        "description": "Put the manifest identified by `name` and `reference` where `reference` can be a tag or digest.",
        "operationId": "CreateManifest",
        "requestBody": {
          "content": {
            "application/vnd.docker.distribution.manifest.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/Manifest"
              }
            }
          },
          "description": "Manifest body, can take v1 or v2 values depending on accept header",
          "required": true
        },
        "x-ms-examples": {
          "Put manifest": {
            "$ref": "./examples/CreateManifest.json"
          }
        },
        "x-ms-long-running-operation": false
      }
    },
    "/v2/{name}/tags/list": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ImageName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryTags"
                }
              }
            },
            "description": "Gives a list of tags for the names repository.",
            "headers": {
              "Link": {
                "description": "next paginated result",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcrErrors"
                }
              }
            },
            "description": "ACR error response describing why the operation failed."
          }
        },
        "tags": [
          "Tag"
        ],
        "description": "Fetch the tags under the repository identified by name",
        "operationId": "GetTagList",
        "x-ms-examples": {
          "List tags": {
            "$ref": "./examples/GetTagList.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Digest": {
        "description": "Digest of a desired BLOB",
        "in": "path",
        "name": "digest",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ImageName": {
        "description": "Name of the image (including the namespace)",
        "in": "path",
        "name": "name",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ImageReference": {
        "description": "A tag or a digest, pointing to a specific image",
        "in": "path",
        "name": "reference",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ManifestReference": {
        "description": "Tag or digest of the target manifest",
        "in": "path",
        "name": "reference",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryDigest": {
        "description": "filter by digest",
        "in": "query",
        "name": "digest",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryLast": {
        "description": "Query parameter for the last item in previous query. Result set will include values lexically after last.",
        "in": "query",
        "name": "last",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryNum": {
        "description": "query parameter for max number of items",
        "in": "query",
        "name": "n",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "QueryOrderBy": {
        "description": "orderby query parameter",
        "in": "query",
        "name": "orderby",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "Url": {
        "description": "Registry login URL",
        "x-ms-client-name": "loginUri",
        "x-ms-parameter-location": "client",
        "x-ms-skip-url-encoding": true
      },
      "metadata": {
        "description": "Name of the metadata",
        "in": "path",
        "name": "metadata",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "property": {
        "description": "Name of the property",
        "in": "path",
        "name": "property",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "ChangeableAttributes": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ChangeableAttributes"
            }
          }
        },
        "description": "Repository attribute value"
      }
    },
    "schemas": {
      "AccessToken": {
        "properties": {
          "access_token": {
            "description": "The access token for performing authenticated requests",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrErrorInfo": {
        "description": "Error information",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "string"
          },
          "detail": {
            "description": "Error details",
            "type": "object"
          },
          "message": {
            "description": "Error message",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrErrors": {
        "description": "Acr error response describing why the operation failed",
        "properties": {
          "errors": {
            "description": "Array of detailed error",
            "items": {
              "$ref": "#/components/schemas/AcrErrorInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AcrManifestAttributes": {
        "description": "Manifest attributes details",
        "example": {
          "imageName": "nanoserver",
          "manifest": {
            "tags": [
              "4.7.2-20180905-nanoserver-1803"
            ],
            "architecture": "amd64",
            "changeableAttributes": {
              "deleteEnabled": true,
              "listEnabled": true,
              "readEnabled": true,
              "writeEnabled": true
            },
            "configMediaType": "application/vnd.docker.container.image.v1+json",
            "createdTime": "2018-09-06T06:17:20.9983915Z",
            "digest": "sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086",
            "imageSize": 2401606,
            "lastUpdateTime": "2018-09-06T06:17:20.9983915Z",
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "os": "windows"
          },
          "registry": "acrapi.azurecr-test.io"
        },
        "properties": {
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "manifest": {
            "$ref": "#/components/schemas/AcrManifestAttributesBase",
            "description": "Manifest attributes",
            "x-ms-client-name": "ManifestAttributes"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrManifestAttributesBase": {
        "description": "Manifest details",
        "example": {
          "tags": [
            "tags",
            "tags"
          ],
          "architecture": "architecture",
          "changeableAttributes": {
            "deleteEnabled": true,
            "listEnabled": true,
            "readEnabled": true,
            "writeEnabled": true
          },
          "configMediaType": "configMediaType",
          "createdTime": "createdTime",
          "digest": "digest",
          "imageSize": 2401606,
          "lastUpdateTime": "lastUpdateTime",
          "mediaType": "mediaType",
          "os": "os"
        },
        "properties": {
          "tags": {
            "description": "List of tags",
            "items": {
              "description": "Tag name",
              "type": "string"
            },
            "type": "array"
          },
          "architecture": {
            "description": "CPU architecture",
            "type": "string"
          },
          "changeableAttributes": {
            "$ref": "#/components/schemas/ChangeableAttributes",
            "description": "Changeable attributes"
          },
          "configMediaType": {
            "description": "Config blob media type",
            "type": "string"
          },
          "createdTime": {
            "description": "Created time",
            "type": "string"
          },
          "digest": {
            "description": "Manifest",
            "type": "string"
          },
          "imageSize": {
            "description": "Image size",
            "type": "integer"
          },
          "lastUpdateTime": {
            "description": "Last update time",
            "type": "string"
          },
          "mediaType": {
            "description": "Media type",
            "type": "string"
          },
          "os": {
            "description": "Operating system",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrManifests": {
        "description": "Manifest attributes",
        "example": {
          "imageName": "imageName",
          "manifests": [
            {
              "tags": [
                "tags",
                "tags"
              ],
              "architecture": "architecture",
              "changeableAttributes": {
                "deleteEnabled": true,
                "listEnabled": true,
                "quarantineDetails": "quarantineDetails",
                "quarantineState": "quarantineState",
                "readEnabled": true,
                "writeEnabled": true
              },
              "configMediaType": "configMediaType",
              "createdTime": "createdTime",
              "digest": "digest",
              "imageSize": 2401606,
              "lastUpdateTime": "lastUpdateTime",
              "mediaType": "mediaType",
              "os": "os"
            },
            {
              "tags": [
                "tags",
                "tags"
              ],
              "architecture": "architecture",
              "changeableAttributes": {
                "deleteEnabled": true,
                "listEnabled": true,
                "quarantineDetails": "quarantineDetails",
                "quarantineState": "quarantineState",
                "readEnabled": true,
                "writeEnabled": true
              },
              "configMediaType": "configMediaType",
              "createdTime": "createdTime",
              "digest": "digest",
              "imageSize": 2401606,
              "lastUpdateTime": "lastUpdateTime",
              "mediaType": "mediaType",
              "os": "os"
            }
          ],
          "registry": "registry"
        },
        "properties": {
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "manifests": {
            "description": "List of manifests",
            "items": {
              "$ref": "#/components/schemas/AcrManifestAttributesBase",
              "description": "Manifest details"
            },
            "type": "array",
            "x-ms-client-name": "ManifestsAttributes"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrRepositoryTags": {
        "description": "List of tag details",
        "example": {
          "tags": [
            {
              "changeableAttributes": {
                "deleteEnabled": true,
                "listEnabled": true,
                "readEnabled": true,
                "writeEnabled": true
              },
              "createdTime": "createdTime",
              "digest": "digest",
              "lastUpdateTime": "lastUpdateTime",
              "name": "name",
              "signed": true
            },
            {
              "changeableAttributes": {
                "deleteEnabled": true,
                "listEnabled": true,
                "readEnabled": true,
                "writeEnabled": true
              },
              "createdTime": "createdTime",
              "digest": "digest",
              "lastUpdateTime": "lastUpdateTime",
              "name": "name",
              "signed": true
            }
          ],
          "imageName": "imageName",
          "registry": "registry"
        },
        "properties": {
          "tags": {
            "description": "List of tag attribute details",
            "items": {
              "$ref": "#/components/schemas/AcrTagAttributesBase"
            },
            "type": "array",
            "x-ms-client-name": "TagsAttributes"
          },
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrTagAttributes": {
        "description": "Tag attributes",
        "example": {
          "imageName": "imageName",
          "registry": "registry",
          "tag": {
            "changeableAttributes": {
              "deleteEnabled": true,
              "listEnabled": true,
              "readEnabled": true,
              "writeEnabled": true
            },
            "createdTime": "createdTime",
            "digest": "digest",
            "lastUpdateTime": "lastUpdateTime",
            "name": "name",
            "signed": true
          }
        },
        "properties": {
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/AcrTagAttributesBase",
            "description": "List of tag attribute details",
            "x-ms-client-name": "TagAttributes"
          }
        },
        "type": "object"
      },
      "AcrTagAttributesBase": {
        "description": "Tag attribute details",
        "example": {
          "changeableAttributes": {
            "deleteEnabled": true,
            "listEnabled": true,
            "readEnabled": true,
            "writeEnabled": true
          },
          "createdTime": "2018-08-10T17:28:44.1082945Z",
          "digest": "sha256:0873c923e00e0fd2ba78041bfb64a105e1ecb7678916d1f7776311e45bf5634b",
          "lastUpdateTime": "2018-08-10T17:28:44.1082945Z",
          "name": "tagname",
          "signed": true
        },
        "properties": {
          "changeableAttributes": {
            "$ref": "#/components/schemas/ChangeableAttributes",
            "description": "Changeable attributes"
          },
          "createdTime": {
            "description": "Tag created time",
            "type": "string"
          },
          "digest": {
            "description": "Tag digest",
            "type": "string"
          },
          "lastUpdateTime": {
            "description": "Tag last update time",
            "type": "string"
          },
          "name": {
            "description": "Tag name",
            "type": "string"
          },
          "signed": {
            "description": "Is signed",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "ChangeableAttributes": {
        "example": {
          "deleteEnabled": true,
          "listEnabled": true,
          "readEnabled": true,
          "writeEnabled": true
        },
        "properties": {
          "deleteEnabled": {
            "description": "Delete enabled",
            "type": "boolean"
          },
          "listEnabled": {
            "description": "List enabled",
            "type": "boolean"
          },
          "readEnabled": {
            "description": "Read enabled",
            "type": "boolean"
          },
          "writeEnabled": {
            "description": "Write enabled",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DeletedRepository": {
        "description": "Deleted repository",
        "properties": {
          "manifestsDeleted": {
            "description": "SHA of the deleted image",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tagsDeleted": {
            "description": "Tag of the deleted image",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "FsLayer": {
        "description": "Image layer information",
        "example": {
          "blobSum": "sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30"
        },
        "properties": {
          "blobSum": {
            "description": "SHA of an image layer",
            "type": "string"
          }
        },
        "type": "object"
      },
      "History": {
        "description": "A list of unstructured historical data for v1 compatibility",
        "example": {
          "v1Compatibility": "v1 compatibility info"
        },
        "properties": {
          "v1Compatibility": {
            "description": "The raw v1 compatibility information",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageSignature": {
        "description": "Signature of a signed manifest",
        "example": {
          "header": {
            "alg": "ES256",
            "jwk": {
              "crv": "P-256",
              "kid": "WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q",
              "kty": "EC",
              "x": "OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY",
              "y": "EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc"
            }
          },
          "protected": "eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ",
          "signature": "p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg"
        },
        "properties": {
          "header": {
            "$ref": "#/components/schemas/JWK",
            "description": "A JSON web signature"
          },
          "protected": {
            "description": "The signed protected header",
            "type": "string"
          },
          "signature": {
            "description": "A signature for the image manifest, signed by a libtrust private key",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JWK": {
        "description": "A JSON web signature",
        "properties": {
          "alg": {
            "description": "The algorithm used to sign or encrypt the JWT",
            "type": "string"
          },
          "jwk": {
            "$ref": "#/components/schemas/JWKHeader"
          }
        },
        "type": "object"
      },
      "JWKHeader": {
        "description": "JSON web key parameter",
        "properties": {
          "crv": {
            "description": "crv value",
            "type": "string"
          },
          "kid": {
            "description": "kid value",
            "type": "string"
          },
          "kty": {
            "description": "kty value",
            "type": "string"
          },
          "x": {
            "description": "x value",
            "type": "string"
          },
          "y": {
            "description": "y value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Manifest": {
        "description": "Returns the requested manifest file",
        "example": {
          "config": {
            "digest": "sha256:6d1ef012b5674ad8a127ecfa9b5e6f5178d171b90ee462846974177fd9bdd39f",
            "mediaType": "application/vnd.docker.container.image.v1+json",
            "size": 1512
          },
          "layers": [
            {
              "digest": "sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6",
              "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
              "size": 2107098
            }
          ],
          "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
          "schemaVersion": 2
        },
        "properties": {
          "architecture": {
            "description": "CPU architecture",
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/V2Descriptor",
            "description": "V2 image config descriptor"
          },
          "fsLayers": {
            "description": "List of layer information",
            "items": {
              "$ref": "#/components/schemas/FsLayer"
            },
            "type": "array"
          },
          "history": {
            "description": "Image history",
            "items": {
              "$ref": "#/components/schemas/History"
            },
            "type": "array"
          },
          "layers": {
            "description": "List of V2 image layer information",
            "items": {
              "$ref": "#/components/schemas/V2Descriptor"
            },
            "type": "array"
          },
          "mediaType": {
            "description": "Media type usually application/vnd.docker.distribution.manifest.v2+json if this is in the accept header",
            "type": "string"
          },
          "name": {
            "description": "Image name",
            "type": "string"
          },
          "schemaVersion": {
            "description": "Schema version",
            "type": "integer"
          },
          "signatures": {
            "description": "Image signature",
            "items": {
              "$ref": "#/components/schemas/ImageSignature"
            },
            "type": "array"
          },
          "tag": {
            "description": "Image tag",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManifestAttributes_manifest": {
        "description": "List of manifest attributes",
        "example": {
          "quarantineTag": "quarantineTag",
          "references": [
            {
              "architecture": "architecture",
              "digest": "digest",
              "os": "os"
            },
            {
              "architecture": "architecture",
              "digest": "digest",
              "os": "os"
            }
          ]
        },
        "properties": {
          "quarantineTag": {
            "description": "Quarantine tag name",
            "type": "string"
          },
          "references": {
            "description": "List of manifest attributes details",
            "items": {
              "$ref": "#/components/schemas/ManifestAttributes_manifest_references",
              "description": "Manifest attributes details"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ManifestAttributes_manifest_references": {
        "description": "Manifest attributes details",
        "example": {
          "architecture": "architecture",
          "digest": "digest",
          "os": "os"
        },
        "properties": {
          "architecture": {
            "description": "CPU architecture",
            "type": "string"
          },
          "digest": {
            "description": "Manifest digest",
            "type": "string"
          },
          "os": {
            "description": "Operating system",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManifestChangeableAttributes": {
        "description": "Changeable attributes",
        "example": {
          "deleteEnabled": true,
          "listEnabled": true,
          "quarantineDetails": "quarantineDetails",
          "quarantineState": "quarantineState",
          "readEnabled": true,
          "writeEnabled": true
        },
        "properties": {
          "deleteEnabled": {
            "description": "Delete enabled",
            "type": "boolean"
          },
          "listEnabled": {
            "description": "List enabled",
            "type": "boolean"
          },
          "quarantineDetails": {
            "description": "Quarantine details",
            "type": "string"
          },
          "quarantineState": {
            "description": "Quarantine state",
            "type": "string"
          },
          "readEnabled": {
            "description": "Read enabled",
            "type": "boolean"
          },
          "writeEnabled": {
            "description": "Write enabled",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "RefreshToken": {
        "properties": {
          "refresh_token": {
            "description": "The refresh token to be used for generating access tokens",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Repositories": {
        "description": "List of repositories",
        "example": {
          "repositories": [
            "production/alpine",
            "testing/alpine"
          ]
        },
        "properties": {
          "repositories": {
            "description": "Repository names",
            "items": {
              "type": "string"
            },
            "type": "array",
            "x-ms-client-name": "Names"
          }
        },
        "type": "object"
      },
      "RepositoryAttributes": {
        "description": "Repository attributes",
        "example": {
          "changeableAttributes": {
            "deleteEnabled": true,
            "listEnabled": true,
            "readEnabled": true,
            "writeEnabled": true
          },
          "createdTime": "2018-09-07T16:30:46.6583219Z",
          "imageName": "imageName",
          "lastUpdateTime": "2018-09-07T16:30:46.6583219Z",
          "manifestCount": 2,
          "registry": "registryname.azurecr.io",
          "tagCount": 6
        },
        "properties": {
          "changeableAttributes": {
            "$ref": "#/components/schemas/ChangeableAttributes",
            "description": "Changeable attributes"
          },
          "createdTime": {
            "description": "Image created time",
            "type": "string"
          },
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "lastUpdateTime": {
            "description": "Image last update time",
            "type": "string"
          },
          "manifestCount": {
            "description": "Number of the manifests",
            "type": "integer"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          },
          "tagCount": {
            "description": "Number of the tags",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RepositoryTags": {
        "description": "Result of the request to list tags of the image",
        "example": {
          "tags": [
            "tags",
            "tags"
          ],
          "name": "name"
        },
        "properties": {
          "tags": {
            "description": "List of tags",
            "items": {
              "description": "Tag name",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the image",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TagAttributes": {
        "description": "Tag attributes",
        "example": {
          "imageName": "imageName",
          "registry": "registry",
          "tag": {
            "signatureRecord": "signatureRecord"
          }
        },
        "properties": {
          "imageName": {
            "description": "Image name",
            "type": "string"
          },
          "registry": {
            "description": "Registry name",
            "type": "string"
          },
          "tag": {
            "$ref": "#/components/schemas/TagAttributes_tag",
            "description": "Tag attributes"
          }
        },
        "type": "object"
      },
      "TagAttributes_tag": {
        "description": "Tag",
        "example": {
          "signatureRecord": "signatureRecord"
        },
        "properties": {
          "signatureRecord": {
            "description": "SignatureRecord value",
            "type": "string"
          }
        },
        "type": "object"
      },
      "V2Descriptor": {
        "description": "Docker V2 image layer descriptor including config and layers",
        "example": {
          "digest": "sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6",
          "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
          "size": 2107098
        },
        "properties": {
          "digest": {
            "description": "Layer digest",
            "type": "string"
          },
          "mediaType": {
            "description": "Layer media type",
            "type": "string"
          },
          "size": {
            "description": "Layer size",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "registry_auth": {
        "scheme": "basic",
        "type": "http"
      },
      "registry_oauth2": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "security": [
    {
      "registry_auth": [],
      "registry_oauth2": []
    }
  ],
  "tags": [
    {
      "description": "Root API",
      "name": "v2"
    },
    {
      "description": "Everything about manifests",
      "name": "Manifest"
    },
    {
      "description": "Everything about tags",
      "name": "Tag"
    },
    {
      "description": "Everything about layers",
      "name": "Layer"
    },
    {
      "description": "Everything about repository",
      "name": "Repository"
    },
    {
      "description": "ACR APIs related to repositories",
      "name": "AcrRepository"
    },
    {
      "description": "ACR APIs related to manifests",
      "name": "AcrManifest"
    },
    {
      "description": "ACR APIs related to tags",
      "name": "AcrTag"
    }
  ]
}