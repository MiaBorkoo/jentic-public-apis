{
  "openapi": "3.0.0",
  "info": {
    "title": "ContainerRegistryManagementClient",
    "version": "2017-03-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/stable/2017-03-01/containerregistry.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.ContainerRegistry/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Operation"
        ],
        "description": "Lists all of the available Azure Container Registry REST API operations.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/checkNameAvailability": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryNameStatus"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Operation"
        ],
        "description": "Checks whether the container registry name is available for use. The name must contain only alphanumeric characters, be globally unique, and between 5 and 50 characters in length.",
        "operationId": "Registries_CheckNameAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistryNameCheckRequest"
              }
            }
          },
          "description": "The object containing information for the availability request.",
          "required": true
        },
        "x-ms-examples": {
          "RegistryCheckNameAvailable": {
            "$ref": "./examples/RegistryCheckNameAvailable.json"
          },
          "RegistryCheckNameNotAvailable": {
            "$ref": "./examples/RegistryCheckNameNotAvailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerRegistry/registries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Lists all the container registries under the specified subscription.",
        "operationId": "Registries_List",
        "x-ms-examples": {
          "RegistryList": {
            "$ref": "./examples/RegistryList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryListResult"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Lists all the container registries under the specified resource group.",
        "operationId": "Registries_ListByResourceGroup",
        "x-ms-examples": {
          "RegistryListByResourceGroup": {
            "$ref": "./examples/RegistryListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "204": {
            "description": "The container registry does not exist in the subscription."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Deletes a container registry.",
        "operationId": "Registries_Delete",
        "x-ms-examples": {
          "RegistryDelete": {
            "$ref": "./examples/RegistryDelete.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registry"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Gets the properties of the specified container registry.",
        "operationId": "Registries_Get",
        "x-ms-examples": {
          "RegistryGet": {
            "$ref": "./examples/RegistryGet.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registry"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Updates a container registry with the specified parameters.",
        "operationId": "Registries_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistryUpdateParameters"
              }
            }
          },
          "description": "The parameters for updating a container registry.",
          "required": true
        },
        "x-ms-examples": {
          "RegistryUpdate": {
            "$ref": "./examples/RegistryUpdate.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registry"
                }
              }
            },
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Creates a container registry with the specified parameters.",
        "operationId": "Registries_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistryCreateParameters"
              }
            }
          },
          "description": "The parameters for creating a container registry.",
          "required": true
        },
        "x-ms-examples": {
          "RegistryCreate": {
            "$ref": "./examples/RegistryCreate.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/listCredentials": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryListCredentialsResult"
                }
              }
            },
            "description": "The request was successful; the list of credentials retrieved and returned successfully."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Lists the login credentials for the specified container registry.",
        "operationId": "Registries_ListCredentials",
        "x-ms-examples": {
          "RegistryListCredentials": {
            "$ref": "./examples/RegistryListCredentials.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/regenerateCredential": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/RegistryNameParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryListCredentialsResult"
                }
              }
            },
            "description": "The request was successful; the specified credential regenerated successfully."
          }
        },
        "tags": [
          "Registries"
        ],
        "description": "Regenerates one of the login credentials for the specified container registry.",
        "operationId": "Registries_RegenerateCredential",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateCredentialParameters"
              }
            }
          },
          "description": "Specifies name of the password which should be regenerated -- password or password2.",
          "required": true
        },
        "x-ms-examples": {
          "RegistryRegenerateCredential": {
            "$ref": "./examples/RegistryRegenerateCredential.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The client API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "RegistryNameParameter": {
        "description": "The name of the container registry.",
        "in": "path",
        "name": "registryName",
        "required": true,
        "schema": {
          "maxLength": 50,
          "minLength": 5,
          "pattern": "^[a-zA-Z0-9]*$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupParameter": {
        "description": "The name of the resource group to which the container registry belongs.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionIdParameter": {
        "description": "The Microsoft Azure subscription ID.",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "OperationDefinition": {
        "description": "The definition of a container registry operation.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplayDefinition",
            "description": "The display information for the container registry operation."
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDisplayDefinition": {
        "description": "The display information for a container registry operation.",
        "properties": {
          "description": {
            "description": "The description for the operation.",
            "type": "string"
          },
          "operation": {
            "description": "The operation that users can perform.",
            "type": "string"
          },
          "provider": {
            "description": "The resource provider name: Microsoft.ContainerRegistry.",
            "type": "string"
          },
          "resource": {
            "description": "The resource on which the operation is performed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "The result of a request to list container registry operations.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next list of container registry operations.",
            "type": "string"
          },
          "value": {
            "description": "The list of container registry operations. Since this list may be incomplete, the nextLink field should be used to request the next list of operations.",
            "items": {
              "$ref": "#/components/schemas/OperationDefinition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RegenerateCredentialParameters": {
        "description": "The parameters used to regenerate the login credential.",
        "properties": {
          "name": {
            "description": "Specifies name of the password which should be regenerated -- password or password2.",
            "enum": [
              "password",
              "password2"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "PasswordName"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "Registry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "An object that represents a container registry.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RegistryProperties",
            "description": "The properties of the container registry.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU of the container registry."
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "RegistryCreateParameters": {
        "description": "The parameters for creating a container registry.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags for the container registry.",
            "type": "object"
          },
          "location": {
            "description": "The location of the container registry. This cannot be changed after the resource is created.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RegistryPropertiesCreateParameters",
            "description": "The properties that the container registry will be created with.",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "The SKU of the container registry."
          }
        },
        "required": [
          "location",
          "sku"
        ],
        "type": "object"
      },
      "RegistryListCredentialsResult": {
        "description": "The response from the ListCredentials operation.",
        "properties": {
          "passwords": {
            "description": "The list of passwords for a container registry.",
            "items": {
              "$ref": "#/components/schemas/RegistryPassword"
            },
            "type": "array"
          },
          "username": {
            "description": "The username for a container registry.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegistryListResult": {
        "description": "The result of a request to list container registries.",
        "properties": {
          "nextLink": {
            "description": "The URI that can be used to request the next list of container registries.",
            "type": "string"
          },
          "value": {
            "description": "The list of container registries. Since this list may be incomplete, the nextLink field should be used to request the next list of container registries.",
            "items": {
              "$ref": "#/components/schemas/Registry"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RegistryNameCheckRequest": {
        "description": "A request to check whether a container registry name is available.",
        "properties": {
          "name": {
            "description": "The name of the container registry.",
            "maxLength": 50,
            "minLength": 5,
            "pattern": "^[a-zA-Z0-9]*$",
            "type": "string"
          },
          "type": {
            "description": "The resource type of the container registry. This field must be set to 'Microsoft.ContainerRegistry/registries'.",
            "enum": [
              "Microsoft.ContainerRegistry/registries"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ContainerRegistryResourceType"
            }
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "RegistryNameStatus": {
        "description": "The result of a request to check the availability of a container registry name.",
        "properties": {
          "message": {
            "description": "If any, the error message that provides more detail for the reason that the name is not available.",
            "type": "string"
          },
          "nameAvailable": {
            "description": "The value that indicates whether the name is available.",
            "type": "boolean"
          },
          "reason": {
            "description": "If any, the reason that the name is not available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegistryPassword": {
        "description": "The login password for the container registry.",
        "properties": {
          "name": {
            "description": "The password name.",
            "enum": [
              "password",
              "password2"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "PasswordName"
            }
          },
          "value": {
            "description": "The password value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegistryProperties": {
        "description": "The properties of a container registry.",
        "properties": {
          "adminUserEnabled": {
            "default": false,
            "description": "The value that indicates whether the admin user is enabled.",
            "type": "boolean"
          },
          "creationDate": {
            "description": "The creation date of the container registry in ISO8601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "loginServer": {
            "description": "The URL that can be used to log into the container registry.",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "The provisioning state of the container registry at the time the operation was called.",
            "enum": [
              "Creating",
              "Succeeded"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ProvisioningState"
            }
          },
          "storageAccount": {
            "$ref": "#/components/schemas/StorageAccountProperties",
            "description": "The properties of the storage account for the container registry."
          }
        },
        "type": "object"
      },
      "RegistryPropertiesCreateParameters": {
        "description": "The parameters for creating the properties of a container registry.",
        "properties": {
          "adminUserEnabled": {
            "default": false,
            "description": "The value that indicates whether the admin user is enabled.",
            "type": "boolean"
          },
          "storageAccount": {
            "$ref": "#/components/schemas/StorageAccountParameters",
            "description": "The parameters of a storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry."
          }
        },
        "required": [
          "storageAccount"
        ],
        "type": "object"
      },
      "RegistryPropertiesUpdateParameters": {
        "description": "The parameters for updating the properties of a container registry.",
        "properties": {
          "adminUserEnabled": {
            "description": "The value that indicates whether the admin user is enabled.",
            "type": "boolean"
          },
          "storageAccount": {
            "$ref": "#/components/schemas/StorageAccountParameters",
            "description": "The parameters of a storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry."
          }
        },
        "type": "object"
      },
      "RegistryUpdateParameters": {
        "description": "The parameters for updating a container registry.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags for the container registry.",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/RegistryPropertiesUpdateParameters",
            "description": "The properties that the container registry will be updated with.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "An Azure resource.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "The tags of the resource.",
            "type": "object"
          },
          "id": {
            "description": "The resource ID.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "The location of the resource. This cannot be changed after the resource is created.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "name": {
            "description": "The name of the resource.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "The type of the resource.",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Sku": {
        "description": "The SKU of a container registry.",
        "properties": {
          "name": {
            "description": "The SKU name of the container registry. Required for registry creation. Allowed value: Basic.",
            "type": "string"
          },
          "tier": {
            "description": "The SKU tier based on the SKU name.",
            "enum": [
              "Basic"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SkuTier"
            }
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "StorageAccountParameters": {
        "description": "The parameters of a storage account for a container registry.",
        "properties": {
          "accessKey": {
            "description": "The access key to the storage account.",
            "type": "string"
          },
          "name": {
            "description": "The name of the storage account.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "accessKey"
        ],
        "type": "object"
      },
      "StorageAccountProperties": {
        "description": "The properties of a storage account for a container registry.",
        "properties": {
          "name": {
            "description": "The name of the storage account.",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}