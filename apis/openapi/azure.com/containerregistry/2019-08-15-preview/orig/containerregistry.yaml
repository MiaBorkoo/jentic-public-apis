openapi: 3.0.0
info:
  description: Metadata API definition for the Azure Container Registry runtime
  title: Azure Container Registry
  version: 2019-08-15-preview
servers:
  - url: '{url}'
    variables:
      url:
        description: Registry login URL
        x-ms-client-name: loginUri
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
paths:
  /acr/v1/_catalog:
    get:
      parameters:
        - $ref: '#/components/parameters/QueryLast'
        - $ref: '#/components/parameters/QueryNum'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repositories'
          description: Returns a list of repositories
          headers:
            Link:
              description: next paginated result
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrRepository
      description: List repositories
      operationId: Repository_GetList
      x-ms-examples:
        Get repositories in a registry:
          $ref: ./examples/GetRepositoryList.json
  '/acr/v1/{name}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ImageName'
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedRepository'
          description: The repository is deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrRepository
      description: Delete the repository identified by `name`
      operationId: Repository_Delete
      x-ms-examples:
        Delete a repository:
          $ref: ./examples/DeleteAcrRepository.json
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryAttributes'
          description: Returns a list of attributes
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrRepository
        - AcrMetadata
      description: Get repository attributes
      operationId: Repository_GetAttributes
      x-ms-examples:
        Get details of repository:
          $ref: ./examples/GetRepositoryAttributes.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ImageName'
      responses:
        '200':
          description: The attributes are updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrRepository
        - AcrMetadata
      description: >-
        Update the attribute identified by `name` where `reference` is the name
        of the repository.
      operationId: Repository_UpdateAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryChangeableAttributes'
        description: Repository attribute value
      x-ms-examples:
        Update repository attributes:
          $ref: ./examples/UpdateRepositoryAttributes.json
  '/acr/v1/{name}/_manifests':
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/QueryLast'
        - $ref: '#/components/parameters/QueryNum'
        - $ref: '#/components/parameters/QueryOrderBy'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrManifests'
          description: Returns a list of manifests
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrManifest
        - AcrMetadata
      description: List manifests of a repository
      operationId: Manifests_GetList
      x-ms-examples:
        Get list of available manifests:
          $ref: ./examples/GetManifestList.json
  '/acr/v1/{name}/_manifests/{reference}':
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/ImageReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestAttributes'
          description: List of attributes
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrManifest
        - AcrMetadata
      description: Get manifest attributes
      operationId: Manifests_GetAttributes
      x-ms-examples:
        Get manifest attributes:
          $ref: ./examples/GetManifestAttributes.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/ImageReference'
      responses:
        '200':
          description: The attributes are updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrManifest
        - AcrMetadata
      description: Update attributes of a manifest
      operationId: Manifests_UpdateAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManifestChangeableAttributes'
        description: Manifest attribute value
      x-ms-examples:
        Update attributes of a manifest:
          $ref: ./examples/UpdateManifestAttributes.json
  '/acr/v1/{name}/_tags':
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/QueryLast'
        - $ref: '#/components/parameters/QueryNum'
        - $ref: '#/components/parameters/QueryOrderBy'
        - $ref: '#/components/parameters/QueryDigest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
          description: Tag details of a repository
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrTag
        - AcrMetadata
      description: List tags of a repository
      operationId: Tag_GetList
      x-ms-examples:
        Get tags of a repository:
          $ref: ./examples/GetTagList.json
  '/acr/v1/{name}/_tags/{reference}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/TagReference'
      responses:
        '202':
          description: The tag is deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrTag
        - AcrMetadata
      description: Delete tag
      operationId: Tag_Delete
      x-ms-examples:
        Delete a tag:
          $ref: ./examples/DeleteTag.json
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/TagReference'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagAttributes'
          description: Tag attributes
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrTag
        - AcrMetadata
      description: Get tag attributes by tag
      operationId: Tag_GetAttributes
      x-ms-examples:
        Get tag attributes:
          $ref: ./examples/GetTagAttributes.json
    patch:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/TagReference'
      responses:
        '200':
          description: The attributes are updated
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - AcrTag
        - AcrMetadata
      description: Update tag attributes
      operationId: Tag_UpdateAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagChangeableAttributes'
        description: Tag attribute value
      x-ms-examples:
        Update attributes of a tag:
          $ref: ./examples/UpdateTagAttributes.json
  /oauth2/exchange:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshToken'
          description: Refresh token acquired
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      security: []
      tags:
        - AcrToken
        - RefreshToken
      description: Exchange AAD tokens for an ACR refresh Token
      operationId: RefreshTokens_GetFromExchange
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                access_token:
                  description: >-
                    AAD access token, mandatory when grant_type is
                    access_token_refresh_token or access_token.
                  type: string
                grant_type:
                  description: >-
                    Can take a value of access_token_refresh_token, or
                    access_token, or refresh_token
                  type: string
                refresh_token:
                  description: >-
                    AAD refresh token, mandatory when grant_type is
                    access_token_refresh_token or refresh_token
                  type: string
                service:
                  description: Indicates the name of your Azure container registry.
                  type: string
                tenant:
                  description: AAD tenant associated to the AAD credentials.
                  type: string
              required:
                - grant_type
              type: object
      x-ms-examples:
        Exchange AAD Token for ACR Refresh:
          $ref: ./examples/PostRefreshToken.json
  /oauth2/token:
    get:
      parameters:
        - description: Indicates the name of your Azure container registry.
          in: query
          name: service
          required: true
          schema:
            type: string
        - description: >-
            Expected to be a valid scope, and can be specified more than once
            for multiple scope requests. You can obtain this from the
            Www-Authenticate response header from the challenge.
          in: query
          name: scope
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Access token acquired
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      security:
        - registry_auth: []
      tags:
        - AcrToken
        - AccessToken
        - userLogin
      description: 'Exchange Username, Password and Scope an ACR Access Token'
      operationId: AccessTokens_GetFromLogin
      x-ms-examples:
        Get Access Token with username and password:
          $ref: ./examples/GetAccessToken.json
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: Access token acquired
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      security: []
      tags:
        - AcrToken
        - AccessToken
      description: Exchange ACR Refresh token for an ACR Access Token
      operationId: AccessTokens_Get
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                grant_type:
                  description: Grant type is expected to be refresh_token
                  enum:
                    - refresh_token
                  type: string
                refresh_token:
                  description: Must be a valid ACR refresh token
                  type: string
                scope:
                  description: >-
                    Which is expected to be a valid scope, and can be specified
                    more than once for multiple scope requests. You obtained
                    this from the Www-Authenticate response header from the
                    challenge.
                  type: string
                service:
                  description: Indicates the name of your Azure container registry.
                  type: string
              required:
                - grant_type
              type: object
      x-ms-examples:
        Get Access Token with Refresh Token:
          $ref: ./examples/PostAccessToken.json
  /v2/:
    get:
      responses:
        '200':
          description: Successful response. API v2 supported
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - v2
      description: >-
        Tells whether this Docker Registry instance supports Docker Registry
        HTTP API v2
      operationId: V2Support_Check
      x-ms-examples:
        Check Docker Registry V2 Support:
          $ref: ./examples/GetDockerRegistryV2Support.json
  '/v2/{name}/blobs/uploads/':
    post:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/From'
        - $ref: '#/components/parameters/Mount'
      responses:
        '201':
          description: >-
            The blob has been created in the registry and is available at the
            provided location.
          headers:
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: >-
        Mount a blob identified by the `mount` parameter from another
        repository.
      operationId: Blob_Mount
      x-ms-examples:
        Mount a blob from repository:
          $ref: ./examples/MountBlob.json
  '/v2/{name}/blobs/{digest}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/Digest'
      responses:
        '202':
          content:
            application/json: {}
            application/octet-stream: {}
          description: >-
            The blob identified by digest is available. The blob content will be
            present in the body of the response.
          headers:
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: Removes an already uploaded blob.
      operationId: Blob_Delete
      x-ms-examples:
        Delete a blob:
          $ref: ./examples/DeleteBlob.json
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/Digest'
      responses:
        '200':
          content:
            application/json: {}
            application/octet-stream: {}
          description: >-
            The blob identified by digest is available. The blob content will be
            present in the body of the response.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                format: int64
                type: integer
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
        '307':
          description: The blob identified by digest is available at the provided location.
          headers:
            Location:
              description: The location where the layer should be accessible.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: Retrieve the blob from the registry identified by digest.
      operationId: Blob_Get
      x-ms-examples:
        Get a blob from digest:
          $ref: ./examples/GetBlob.json
    head:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/Digest'
      responses:
        '200':
          description: >-
            The blob identified by digest is available. The blob content will be
            present in the body of the response.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                format: int64
                type: integer
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
        '307':
          description: The blob identified by digest is available at the provided location.
          headers:
            Location:
              description: The location where the layer should be accessible.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: 'Same as GET, except only the headers are returned.'
      operationId: Blob_Check
      x-ms-examples:
        Head for a Blob Chunk:
          $ref: ./examples/CheckBlob.json
  '/v2/{name}/manifests/{reference}':
    delete:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/ImageReference'
      responses:
        '202':
          description: The manifest has been deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Manifest
      description: >-
        Delete the manifest identified by `name` and `reference`. Note that a
        manifest can _only_ be deleted by `digest`.
      operationId: Manifests_Delete
      x-ms-examples:
        Delete manifest:
          $ref: ./examples/DeleteManifest.json
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/ImageReference'
        - description: >-
            Accept header string delimited by comma. For example,
            application/vnd.docker.distribution.manifest.v2+json
          in: header
          name: accept
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestWrapper'
          description: Returns the requested manifest file in a larger combined group
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Manifest
      description: >-
        Get the manifest identified by `name` and `reference` where `reference`
        can be a tag or digest.
      operationId: Manifests_Get
      x-ms-examples:
        Get manifest:
          $ref: ./examples/GetManifest.json
    put:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/ImageReference'
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: The manifest is updated
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                format: int64
                type: integer
            Docker-Content-Digest:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: The canonical location url of the uploaded manifest.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Manifest
      description: >-
        Put the manifest identified by `name` and `reference` where `reference`
        can be a tag or digest.
      operationId: Manifests_Create
      requestBody:
        content:
          application/vnd.docker.distribution.manifest.v2+json:
            schema:
              $ref: '#/components/schemas/Manifest'
        description: 'Manifest body, can take v1 or v2 values depending on accept header'
        required: true
      x-ms-examples:
        Put manifest:
          $ref: ./examples/CreateManifest.json
      x-ms-long-running-operation: false
  '/{nextBlobUuidLink}':
    delete:
      parameters:
        - $ref: '#/components/parameters/NextLink'
      responses:
        '204':
          description: The upload has been successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: >-
        Cancel outstanding upload processes, releasing associated resources. If
        this is not called, the unfinished uploads will eventually timeout.
      operationId: Blob_CancelUpload
      x-ms-examples:
        End a blob upload:
          $ref: ./examples/CancelBlobUpload.json
    get:
      parameters:
        - $ref: '#/components/parameters/NextLink'
      responses:
        '204':
          description: >-
            The upload is known and in progress. The last received offset is
            available in the Range header.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: >-
        Retrieve status of upload identified by uuid. The primary purpose of
        this endpoint is to resolve the current status of a resumable upload.
      operationId: Blob_GetStatus
      x-ms-examples:
        Get blob status:
          $ref: ./examples/GetBlobStatus.json
    patch:
      parameters:
        - $ref: '#/components/parameters/NextLink'
      responses:
        '202':
          description: >-
            The stream of data has been accepted and the current progress is
            available in the range header. The updated upload location is
            available in the Location header.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      security:
        - registry_auth: []
          registry_oauth2: []
      tags:
        - Layer
      description: Upload a stream of data without completing the upload.
      operationId: Blob_Upload
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: file
              type: object
        description: Raw data of blob
        required: true
      x-ms-examples:
        Upload Blob:
          $ref: ./examples/UploadBlob.json
    put:
      parameters:
        - $ref: '#/components/parameters/BlobQueryDigest'
        - $ref: '#/components/parameters/NextLink'
      responses:
        '201':
          description: The upload has been completed and accepted by the registry.
          headers:
            Docker-Content-Digest:
              description: Digest of the targeted content for the request.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: >-
        Complete the upload, providing all the data in the body, if necessary. A
        request without a body will just complete the upload with previously
        uploaded content.
      operationId: Blob_EndUpload
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: file
              type: object
        description: Optional raw data of blob
      x-ms-examples:
        End a blob upload:
          $ref: ./examples/EndBlobUpload.json
components:
  parameters:
    BlobQueryDigest:
      description: Digest of a BLOB
      in: query
      name: digest
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    Content-Range:
      description: >-
        Range of bytes identifying the desired block of content represented by
        the body. Start must the end offset retrieved via status check plus one.
        Note that this is a non-standard use of the `Content-Range` header.
      in: header
      name: Content-Range
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    Digest:
      description: Digest of a BLOB
      in: path
      name: digest
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    From:
      description: Name of the source repository.
      in: query
      name: from
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ImageName:
      description: Name of the image (including the namespace)
      in: path
      name: name
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ImageReference:
      description: 'A tag or a digest, pointing to a specific image'
      in: path
      name: reference
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    ManifestReference:
      description: Tag or digest of the target manifest
      in: path
      name: reference
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    Mount:
      description: Digest of blob to mount from the source repository.
      in: query
      name: mount
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    NextLink:
      allowReserved: true
      description: >-
        Link acquired from upload start or previous chunk. Note, do not include
        initial / (must do substring(1) )
      in: path
      name: nextBlobUuidLink
      required: true
      schema:
        type: string
      x-ms-client-name: location
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
    NoUploadCache:
      description: Acquired from NextLink
      in: query
      name: _nouploadcache
      required: false
      schema:
        type: boolean
      x-ms-parameter-location: method
    QueryDigest:
      description: filter by digest
      in: query
      name: digest
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    QueryLast:
      description: >-
        Query parameter for the last item in previous query. Result set will
        include values lexically after last.
      in: query
      name: last
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    QueryNum:
      description: query parameter for max number of items
      in: query
      name: 'n'
      required: false
      schema:
        type: integer
      x-ms-parameter-location: method
    QueryOrderBy:
      description: orderby query parameter
      in: query
      name: orderby
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    Range:
      description: 'Format : bytes=<start>-<end>,  HTTP Range header specifying blob chunk.'
      in: header
      name: Range
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    State:
      description: Acquired from NextLink
      in: query
      name: _state
      required: false
      schema:
        type: string
      x-ms-parameter-location: method
    TagReference:
      description: Tag name
      in: path
      name: reference
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
    Url:
      description: Registry login URL
      x-ms-client-name: loginUri
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
    Uuid:
      description: A uuid identifying the upload.
      in: path
      name: uuid
      required: true
      schema:
        type: string
      x-ms-parameter-location: method
  schemas:
    AccessToken:
      properties:
        access_token:
          description: The access token for performing authenticated requests
          type: string
      type: object
    AcrErrorInfo:
      description: Error information
      properties:
        code:
          description: Error code
          type: string
        detail:
          description: Error details
          type: object
        message:
          description: Error message
          type: string
      type: object
    AcrErrors:
      description: Acr error response describing why the operation failed
      properties:
        errors:
          description: Array of detailed error
          items:
            $ref: '#/components/schemas/AcrErrorInfo'
          type: array
      type: object
    AcrManifests:
      description: Manifest attributes
      example:
        imageName: imageName
        manifests:
          - tags:
              - tags
              - tags
            architecture: architecture
            changeableAttributes:
              deleteEnabled: true
              listEnabled: true
              quarantineDetails: quarantineDetails
              quarantineState: quarantineState
              readEnabled: true
              writeEnabled: true
            configMediaType: configMediaType
            createdTime: createdTime
            digest: digest
            imageSize: 2401606
            lastUpdateTime: lastUpdateTime
            mediaType: mediaType
            os: os
          - tags:
              - tags
              - tags
            architecture: architecture
            changeableAttributes:
              deleteEnabled: true
              listEnabled: true
              quarantineDetails: quarantineDetails
              quarantineState: quarantineState
              readEnabled: true
              writeEnabled: true
            configMediaType: configMediaType
            createdTime: createdTime
            digest: digest
            imageSize: 2401606
            lastUpdateTime: lastUpdateTime
            mediaType: mediaType
            os: os
        registry: registry
      properties:
        imageName:
          description: Image name
          type: string
        manifests:
          description: List of manifests
          items:
            $ref: '#/components/schemas/ManifestAttributesBase'
            description: Manifest details
          type: array
          x-ms-client-name: ManifestsAttributes
        registry:
          description: Registry name
          type: string
      type: object
    Annotations:
      additionalProperties:
        type: object
      description: Additional information provided through arbitrary metadata.
      nullable: true
      properties:
        org.opencontainers.image.authors:
          description: >-
            Contact details of the people or organization responsible for the
            image.
          type: string
          x-ms-client-name: Authors
        org.opencontainers.image.created:
          description: >-
            Date and time on which the image was built (string, date-time as
            defined by https://tools.ietf.org/html/rfc3339#section-5.6)
          format: date-time
          type: string
          x-ms-client-name: Created
        org.opencontainers.image.description:
          description: Human-readable description of the software packaged in the image
          type: string
          x-ms-client-name: Description
        org.opencontainers.image.documentation:
          description: URL to get documentation on the image.
          type: string
          x-ms-client-name: Documentation
        org.opencontainers.image.licenses:
          description: >-
            License(s) under which contained software is distributed as an SPDX
            License Expression.
          type: string
          x-ms-client-name: Licenses
        org.opencontainers.image.ref.name:
          description: Name of the reference for a target.
          type: string
          x-ms-client-name: Name
        org.opencontainers.image.revision:
          description: Source control revision identifier for the packaged software.
          type: string
          x-ms-client-name: Revision
        org.opencontainers.image.source:
          description: URL to get source code for building the image.
          type: string
          x-ms-client-name: Source
        org.opencontainers.image.title:
          description: Human-readable title of the image
          type: string
          x-ms-client-name: Title
        org.opencontainers.image.url:
          description: URL to find more information on the image.
          type: string
          x-ms-client-name: Url
        org.opencontainers.image.vendor:
          description: 'Name of the distributing entity, organization or individual.'
          type: string
          x-ms-client-name: Vendor
        org.opencontainers.image.version:
          description: >-
            Version of the packaged software. The version MAY match a label or
            tag in the source code repository, may also be Semantic
            versioning-compatible
          type: string
          x-ms-client-name: Version
      type: object
    DeletedRepository:
      description: Deleted repository
      properties:
        manifestsDeleted:
          description: SHA of the deleted image
          items:
            type: string
          type: array
        tagsDeleted:
          description: Tag of the deleted image
          items:
            type: string
          type: array
      type: object
    Descriptor:
      description: Docker V2 image layer descriptor including config and layers
      example:
        digest: >-
          sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6
        mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip
        size: 2107098
      properties:
        annotations:
          $ref: '#/components/schemas/Annotations'
        digest:
          description: Layer digest
          type: string
        mediaType:
          description: Layer media type
          type: string
        size:
          description: Layer size
          format: int64
          type: integer
        urls:
          description: Specifies a list of URIs from which this object may be downloaded.
          items:
            description: >-
              Must conform to RFC 3986. Entries should use the http and https
              schemes, as defined in RFC 7230.
            type: string
          type: array
      type: object
    FsLayer:
      description: Image layer information
      example:
        blobSum: >-
          sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30
      properties:
        blobSum:
          description: SHA of an image layer
          type: string
      type: object
    History:
      description: A list of unstructured historical data for v1 compatibility
      example:
        v1Compatibility: v1 compatibility info
      properties:
        v1Compatibility:
          description: The raw v1 compatibility information
          type: string
      type: object
    ImageSignature:
      description: Signature of a signed manifest
      example:
        header:
          alg: ES256
          jwk:
            crv: P-256
            kid: 'WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q'
            kty: EC
            x: OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY
            'y': EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc
        protected: >-
          eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ
        signature: >-
          p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg
      properties:
        header:
          $ref: '#/components/schemas/JWK'
          description: A JSON web signature
        protected:
          description: The signed protected header
          type: string
        signature:
          description: 'A signature for the image manifest, signed by a libtrust private key'
          type: string
      type: object
    JWK:
      description: A JSON web signature
      properties:
        alg:
          description: The algorithm used to sign or encrypt the JWT
          type: string
        jwk:
          $ref: '#/components/schemas/JWKHeader'
      type: object
    JWKHeader:
      description: JSON web key parameter
      properties:
        crv:
          description: crv value
          type: string
        kid:
          description: kid value
          type: string
        kty:
          description: kty value
          type: string
        x:
          description: x value
          type: string
        'y':
          description: y value
          type: string
      type: object
    Manifest:
      description: Returns the requested manifest file
      properties:
        schemaVersion:
          description: Schema version
          type: integer
      type: object
    ManifestAttributes:
      description: Manifest attributes details
      example:
        imageName: nanoserver
        manifest:
          tags:
            - 4.7.2-20180905-nanoserver-1803
          architecture: amd64
          changeableAttributes:
            deleteEnabled: true
            listEnabled: true
            readEnabled: true
            writeEnabled: true
          configMediaType: application/vnd.docker.container.image.v1+json
          createdTime: '2018-09-06T06:17:20.9983915Z'
          digest: >-
            sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086
          imageSize: 2401606
          lastUpdateTime: '2018-09-06T06:17:20.9983915Z'
          mediaType: application/vnd.docker.distribution.manifest.v2+json
          os: windows
        registry: acrapi.azurecr-test.io
      properties:
        imageName:
          description: Image name
          type: string
        manifest:
          $ref: '#/components/schemas/ManifestAttributesBase'
          description: Manifest attributes
          x-ms-client-name: attributes
        registry:
          description: Registry name
          type: string
      type: object
    ManifestAttributesBase:
      description: Manifest details
      example:
        tags:
          - tags
          - tags
        architecture: architecture
        changeableAttributes:
          deleteEnabled: true
          listEnabled: true
          readEnabled: true
          writeEnabled: true
        configMediaType: configMediaType
        createdTime: createdTime
        digest: digest
        imageSize: 2401606
        lastUpdateTime: lastUpdateTime
        mediaType: mediaType
        os: os
      properties:
        tags:
          description: List of tags
          items:
            description: Tag name
            type: string
          type: array
        architecture:
          description: CPU architecture
          type: string
        changeableAttributes:
          $ref: '#/components/schemas/ManifestChangeableAttributes'
          description: Changeable attributes
        configMediaType:
          description: Config blob media type
          type: string
        createdTime:
          description: Created time
          type: string
        digest:
          description: Manifest
          type: string
        imageSize:
          description: Image size
          format: int64
          type: integer
        lastUpdateTime:
          description: Last update time
          type: string
        mediaType:
          description: Media type
          type: string
        os:
          description: Operating system
          type: string
      type: object
    ManifestAttributes_manifest:
      description: List of manifest attributes
      example:
        quarantineTag: quarantineTag
        references:
          - architecture: architecture
            digest: digest
            os: os
          - architecture: architecture
            digest: digest
            os: os
      properties:
        quarantineTag:
          description: Quarantine tag name
          type: string
        references:
          description: List of manifest attributes details
          items:
            $ref: '#/components/schemas/ManifestAttributes_manifest_references'
            description: Manifest attributes details
          type: array
      type: object
    ManifestAttributes_manifest_references:
      description: Manifest attributes details
      example:
        architecture: architecture
        digest: digest
        os: os
      properties:
        architecture:
          description: CPU architecture
          type: string
        digest:
          description: Manifest digest
          type: string
        os:
          description: Operating system
          type: string
      type: object
    ManifestChangeableAttributes:
      description: Changeable attributes
      example:
        deleteEnabled: true
        listEnabled: true
        quarantineDetails: quarantineDetails
        quarantineState: quarantineState
        readEnabled: true
        writeEnabled: true
      properties:
        deleteEnabled:
          description: Delete enabled
          type: boolean
        listEnabled:
          description: List enabled
          type: boolean
        quarantineDetails:
          description: Quarantine details
          type: string
          x-accessibility: internal
        quarantineState:
          description: Quarantine state
          type: string
          x-accessibility: internal
        readEnabled:
          description: Read enabled
          type: boolean
        writeEnabled:
          description: Write enabled
          type: boolean
      type: object
    ManifestList:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested Docker multi-arch-manifest file
      properties:
        manifests:
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
          type: array
        mediaType:
          description: Media type for this Manifest
          type: string
      type: object
      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.list.v2+json
    ManifestListAttributes:
      properties:
        digest:
          description: >-
            The digest of the content, as defined by the Registry V2 HTTP API
            Specification
          type: string
        mediaType:
          description: >-
            The MIME type of the referenced object. This will generally be
            application/vnd.docker.image.manifest.v2+json, but it could also be
            application/vnd.docker.image.manifest.v1+json
          type: string
        platform:
          $ref: '#/components/schemas/Platform'
        size:
          description: The size in bytes of the object
          format: int64
          type: integer
      type: object
    ManifestWrapper:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested manifest file
      properties:
        annotations:
          $ref: '#/components/schemas/Annotations'
          description: '(OCI, OCIIndex) Additional metadata'
        architecture:
          description: (V1) CPU architecture
          type: string
        config:
          $ref: '#/components/schemas/Descriptor'
          description: '(V2, OCI) Image config descriptor'
        fsLayers:
          description: (V1) List of layer information
          items:
            $ref: '#/components/schemas/FsLayer'
          type: array
        history:
          description: (V1) Image history
          items:
            $ref: '#/components/schemas/History'
          type: array
        layers:
          description: '(V2, OCI) List of V2 image layer information'
          items:
            $ref: '#/components/schemas/Descriptor'
          type: array
        manifests:
          description: '(ManifestList, OCIIndex) List of V2 image layer information'
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
          type: array
        mediaType:
          description: Media type for this Manifest
          type: string
        name:
          description: (V1) Image name
          type: string
        signatures:
          description: (V1) Image signature
          items:
            $ref: '#/components/schemas/ImageSignature'
          type: array
        tag:
          description: (V1) Image tag
          type: string
      type: object
    OCIIndex:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested OCI index file
      properties:
        annotations:
          $ref: '#/components/schemas/Annotations'
        manifests:
          description: List of OCI image layer information
          items:
            $ref: '#/components/schemas/ManifestListAttributes'
          type: array
      type: object
      x-ms-discriminator-value: application/vnd.oci.image.index.v1+json
    OCIManifest:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested OCI Manifest file
      properties:
        annotations:
          $ref: '#/components/schemas/Annotations'
        config:
          $ref: '#/components/schemas/Descriptor'
          description: V2 image config descriptor
        layers:
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/Descriptor'
          type: array
      type: object
      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json
    Platform:
      description: >-
        The platform object describes the platform which the image in the
        manifest runs on. A full list of valid operating system and architecture
        values are listed in the Go language documentation for $GOOS and $GOARCH
      properties:
        architecture:
          description: 'Specifies the CPU architecture, for example amd64 or ppc64le.'
          type: string
        features:
          description: >-
            The optional features field specifies an array of strings, each
            listing a required CPU feature (for example sse4 or aes
          items:
            type: string
          type: array
        os:
          description: >-
            The os field specifies the operating system, for example linux or
            windows.
          type: string
        os.features:
          description: >-
            The optional os.features field specifies an array of strings, each
            listing a required OS feature (for example on Windows win32k
          items:
            type: string
          type: array
        os.version:
          description: >-
            The optional os.version field specifies the operating system
            version, for example 10.0.10586.
          type: string
        variant:
          description: >-
            The optional variant field specifies a variant of the CPU, for
            example armv6l to specify a particular CPU variant of the ARM CPU.
          type: string
      type: object
    RefreshToken:
      properties:
        refresh_token:
          description: The refresh token to be used for generating access tokens
          type: string
      type: object
    Repositories:
      description: List of repositories
      example:
        repositories:
          - production/alpine
          - testing/alpine
      properties:
        repositories:
          description: Repository names
          items:
            type: string
          type: array
          x-ms-client-name: Names
      type: object
    RepositoryAttributes:
      description: Repository attributes
      example:
        changeableAttributes:
          deleteEnabled: true
          listEnabled: true
          readEnabled: true
          teleportEnabled: false
          writeEnabled: true
        createdTime: '2018-09-07T16:30:46.6583219Z'
        imageName: imageName
        lastUpdateTime: '2018-09-07T16:30:46.6583219Z'
        manifestCount: 2
        registry: registryname.azurecr.io
        tagCount: 6
      properties:
        changeableAttributes:
          $ref: '#/components/schemas/RepositoryChangeableAttributes'
          description: Changeable attributes
        createdTime:
          description: Image created time
          type: string
        imageName:
          description: Image name
          type: string
        lastUpdateTime:
          description: Image last update time
          type: string
        manifestCount:
          description: Number of the manifests
          type: integer
        registry:
          description: Registry name
          type: string
        tagCount:
          description: Number of the tags
          type: integer
      type: object
    RepositoryChangeableAttributes:
      description: Changeable attributes for Repository
      example:
        deleteEnabled: true
        listEnabled: true
        readEnabled: true
        teleportEnabled: true
        writeEnabled: true
      properties:
        deleteEnabled:
          description: Delete enabled
          type: boolean
        listEnabled:
          description: List enabled
          type: boolean
        readEnabled:
          description: Read enabled
          type: boolean
        teleportEnabled:
          description: >-
            Enables Teleport functionality on new images in the repository
            improving Container startup performance
          type: boolean
        writeEnabled:
          description: Write enabled
          type: boolean
      type: object
    RepositoryTags:
      description: Result of the request to list tags of the image
      example:
        tags:
          - tags
          - tags
        name: name
      properties:
        tags:
          description: List of tags
          items:
            description: Tag name
            type: string
          type: array
        name:
          description: Name of the image
          type: string
      type: object
    TagAttributes:
      description: Tag attributes
      example:
        imageName: imageName
        registry: registry
        tag:
          changeableAttributes:
            deleteEnabled: true
            listEnabled: true
            readEnabled: true
            writeEnabled: true
          createdTime: createdTime
          digest: digest
          lastUpdateTime: lastUpdateTime
          name: name
          signed: true
      properties:
        imageName:
          description: Image name
          type: string
        registry:
          description: Registry name
          type: string
        tag:
          $ref: '#/components/schemas/TagAttributesBase'
          description: List of tag attribute details
          x-ms-client-name: attributes
      type: object
    TagAttributesBase:
      description: Tag attribute details
      example:
        changeableAttributes:
          deleteEnabled: true
          listEnabled: true
          readEnabled: true
          writeEnabled: true
        createdTime: '2018-08-10T17:28:44.1082945Z'
        digest: >-
          sha256:0873c923e00e0fd2ba78041bfb64a105e1ecb7678916d1f7776311e45bf5634b
        lastUpdateTime: '2018-08-10T17:28:44.1082945Z'
        name: tagname
        signed: true
      properties:
        changeableAttributes:
          $ref: '#/components/schemas/TagChangeableAttributes'
          description: Tag Changeable attributes
        createdTime:
          description: Tag created time
          type: string
        digest:
          description: Tag digest
          type: string
        lastUpdateTime:
          description: Tag last update time
          type: string
        name:
          description: Tag name
          type: string
        signed:
          description: Is signed
          type: boolean
      type: object
    TagAttributes_tag:
      description: Tag
      example:
        signatureRecord: signatureRecord
      properties:
        signatureRecord:
          description: SignatureRecord value
          type: string
      type: object
    TagChangeableAttributes:
      example:
        deleteEnabled: true
        listEnabled: true
        readEnabled: true
        writeEnabled: true
      properties:
        deleteEnabled:
          description: Delete enabled
          type: boolean
        listEnabled:
          description: List enabled
          type: boolean
        readEnabled:
          description: Read enabled
          type: boolean
        writeEnabled:
          description: Write enabled
          type: boolean
      type: object
    TagList:
      description: List of tag details
      example:
        tags:
          - changeableAttributes:
              deleteEnabled: true
              listEnabled: true
              readEnabled: true
              writeEnabled: true
            createdTime: createdTime
            digest: digest
            lastUpdateTime: lastUpdateTime
            name: name
            signed: true
          - changeableAttributes:
              deleteEnabled: true
              listEnabled: true
              readEnabled: true
              writeEnabled: true
            createdTime: createdTime
            digest: digest
            lastUpdateTime: lastUpdateTime
            name: name
            signed: true
        imageName: imageName
        registry: registry
      properties:
        tags:
          description: List of tag attribute details
          items:
            $ref: '#/components/schemas/TagAttributesBase'
          type: array
        imageName:
          description: Image name
          type: string
        registry:
          description: Registry name
          type: string
      type: object
    V1Manifest:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested V1 manifest file
      properties:
        architecture:
          description: CPU architecture
          type: string
        fsLayers:
          description: List of layer information
          items:
            $ref: '#/components/schemas/FsLayer'
          type: array
        history:
          description: Image history
          items:
            $ref: '#/components/schemas/History'
          type: array
        name:
          description: Image name
          type: string
        signatures:
          description: Image signature
          items:
            $ref: '#/components/schemas/ImageSignature'
          type: array
        tag:
          description: Image tag
          type: string
      type: object
      x-ms-discriminator-value: application/vnd.oci.image.manifest.v1+json
    V2Manifest:
      allOf:
        - $ref: '#/components/schemas/Manifest'
      description: Returns the requested Docker V2 Manifest file
      example:
        config:
          digest: >-
            sha256:6d1ef012b5674ad8a127ecfa9b5e6f5178d171b90ee462846974177fd9bdd39f
          mediaType: application/vnd.docker.container.image.v1+json
          size: 1512
        layers:
          - digest: >-
              sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6
            mediaType: application/vnd.docker.image.rootfs.diff.tar.gzip
            size: 2107098
        mediaType: application/vnd.docker.distribution.manifest.v2+json
        schemaVersion: 2
      properties:
        config:
          $ref: '#/components/schemas/Descriptor'
          description: V2 image config descriptor
        layers:
          description: List of V2 image layer information
          items:
            $ref: '#/components/schemas/Descriptor'
          type: array
        mediaType:
          description: Media type for this Manifest
          type: string
      type: object
      x-ms-discriminator-value: application/vnd.docker.distribution.manifest.v2+json
  securitySchemes:
    registry_auth:
      scheme: basic
      type: http
    registry_oauth2:
      in: header
      name: Authorization
      type: apiKey
security:
  - registry_auth: []
    registry_oauth2: []
tags:
  - description: Root API
    name: v2
  - description: Everything about manifests
    name: Manifest
  - description: Everything about tags
    name: Tag
  - description: Everything about layers
    name: Layer
  - description: Everything about repository
    name: Repository
  - description: ACR APIs related to repositories
    name: AcrRepository
  - description: ACR APIs related to manifests
    name: AcrManifest
  - description: ACR APIs related to tags
    name: AcrTag
x-ms-paths:
  '/v2/{name}/blobs/uploads/?mode=resumable':
    post:
      parameters:
        - $ref: '#/components/parameters/ImageName'
      responses:
        '202':
          description: >-
            The upload has been created. The Location header must be used to
            complete the upload. The response should be identical to a GET
            request on the contents of the returned Location header.
          headers:
            Docker-Upload-UUID:
              description: Identifies the docker upload uuid for the current request.
              schema:
                type: string
            Location:
              description: Provided location for blob
              schema:
                type: string
            Range:
              description: Range indicating the current progress of the upload.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: Initiate a resumable blob upload with an empty request body.
      operationId: Blob_StartUpload
      x-ms-examples:
        Start a blob upload:
          $ref: ./examples/StartBlobUpload.json
  '/v2/{name}/blobs/{digest}?mode=chunk':
    get:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/Digest'
        - $ref: '#/components/parameters/Range'
      responses:
        '206':
          content:
            application/json: {}
            application/octet-stream: {}
          description: >-
            The blob identified by digest is available. The specified chunk of
            blob content will be present in the body of the request.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                format: int64
                type: integer
            Content-Range:
              description: Content range of blob chunk.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: >-
        Retrieve the blob from the registry identified by `digest`. This
        endpoint may also support RFC7233 compliant range requests. Support can
        be detected by issuing a HEAD request. If the header `Accept-Range:
        bytes` is returned, range requests can be used to fetch partial content.
      operationId: Blob_GetChunk
      x-ms-examples:
        Get a blob Chunk:
          $ref: ./examples/GetBlobChunk.json
    head:
      parameters:
        - $ref: '#/components/parameters/ImageName'
        - $ref: '#/components/parameters/Digest'
        - $ref: '#/components/parameters/Range'
      responses:
        '200':
          description: >-
            The blob identified by digest is available. The specified chunk of
            blob content will be present in the body of the request.
          headers:
            Content-Length:
              description: The length of the requested blob content.
              schema:
                format: int64
                type: integer
            Content-Range:
              description: Content range of blob chunk.
              schema:
                type: string
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcrErrors'
          description: ACR error response describing why the operation failed.
      tags:
        - Layer
      description: 'Same as GET, except only the headers are returned.'
      operationId: Blob_CheckChunk
      x-ms-examples:
        Get headers without blob Chunk:
          $ref: ./examples/CheckBlobChunk.json

