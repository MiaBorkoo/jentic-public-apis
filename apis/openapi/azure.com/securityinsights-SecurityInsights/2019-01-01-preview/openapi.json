{
  "openapi": "3.0.0",
  "info": {
    "description": "API spec for Microsoft.SecurityInsights (Azure Security Insights) resource provider",
    "title": "Security Insights",
    "version": "2019-01-01-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/securityinsights/resource-manager/Microsoft.SecurityInsights/preview/2019-01-01-preview/SecurityInsights.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.SecurityInsights/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationsList"
                }
              }
            },
            "description": "OK. Successfully retrieved operations list."
          }
        },
        "description": "Lists all operations available Azure Security Insights Resource Provider.",
        "operationId": "Operations_List",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleTemplatesList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets all alert rule templates.",
        "operationId": "AlertRuleTemplates_List",
        "x-ms-examples": {
          "Get all alert rule templates.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplates.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRuleTemplates/{alertRuleTemplateId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/AlertRuleTemplateId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRuleTemplate"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rule Templates"
        ],
        "description": "Gets the alert rule template.",
        "operationId": "AlertRuleTemplates_Get",
        "x-ms-examples": {
          "Get alert rule template by Id.": {
            "$ref": "./examples/alertRuleTemplates/GetAlertRuleTemplateById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRulesList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets all alert rules.",
        "operationId": "AlertRules_List",
        "x-ms-examples": {
          "Get all alert rules.": {
            "$ref": "./examples/alertRules/GetAllAlertRules.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Delete the alert rule.",
        "operationId": "AlertRules_Delete",
        "x-ms-examples": {
          "Delete an alert rule.": {
            "$ref": "./examples/alertRules/DeleteAlertRule.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRule"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Gets the alert rule.",
        "operationId": "AlertRules_Get",
        "x-ms-examples": {
          "Get a Fusion alert rule.": {
            "$ref": "./examples/alertRules/GetFusionAlertRule.json"
          },
          "Get a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/GetMicrosoftSecurityIncidentCreationAlertRule.json"
          },
          "Get a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/GetScheduledAlertRule.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRule"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlertRule"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Alert Rules"
        ],
        "description": "Creates or updates the alert rule.",
        "operationId": "AlertRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertRule"
              }
            }
          },
          "description": "The alert rule",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates a Fusion alert rule.": {
            "$ref": "./examples/alertRules/CreateFusionAlertRule.json"
          },
          "Creates or updates a MicrosoftSecurityIncidentCreation rule.": {
            "$ref": "./examples/alertRules/CreateMicrosoftSecurityIncidentCreationAlertRule.json"
          },
          "Creates or updates a Scheduled alert rule.": {
            "$ref": "./examples/alertRules/CreateScheduledAlertRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionsList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets all actions of alert rule.",
        "operationId": "Actions_ListByAlertRule",
        "x-ms-examples": {
          "Get all actions of alert rule.": {
            "$ref": "./examples/actions/GetAllActionsByAlertRule.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/alertRules/{ruleId}/actions/{actionId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          },
          {
            "$ref": "#/components/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Delete the action of alert rule.",
        "operationId": "Actions_Delete",
        "x-ms-examples": {
          "Delete an action of alert rule.": {
            "$ref": "./examples/actions/DeleteActionOfAlertRule.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          },
          {
            "$ref": "#/components/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Gets the action of alert rule.",
        "operationId": "Actions_Get",
        "x-ms-examples": {
          "Get an action of alert rule.": {
            "$ref": "./examples/actions/GetActionOfAlertRuleById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/RuleId"
          },
          {
            "$ref": "#/components/parameters/ActionId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResponse"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Actions"
        ],
        "description": "Creates or updates the action of alert rule.",
        "operationId": "Actions_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionRequest"
              }
            }
          },
          "description": "The action",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates an action of alert rule.": {
            "$ref": "./examples/actions/CreateActionOfAlertRule.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnectorList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets all data connectors.",
        "operationId": "DataConnectors_List",
        "x-ms-examples": {
          "Get all data connectors.": {
            "$ref": "./examples/dataConnectors/GetDataConnectors.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/dataConnectors/{dataConnectorId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Delete the data connector.",
        "operationId": "DataConnectors_Delete",
        "x-ms-examples": {
          "Delete an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/DeleteOfficeDataConnetor.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnector"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Gets a data connector.",
        "operationId": "DataConnectors_Get",
        "x-ms-examples": {
          "Get a ASC data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureSecurityCenterById.json"
          },
          "Get a Dynamics365 data connector": {
            "$ref": "./examples/dataConnectors/GetDynamics365DataConnectorById.json"
          },
          "Get a MCAS data connector.": {
            "$ref": "./examples/dataConnectors/GetMicrosoftCloudAppSecurityById.json"
          },
          "Get a MDATP data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftDefenderAdvancedThreatProtectionById.json"
          },
          "Get a MicrosoftThreatIntelligence data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftThreatIntelligenceById.json"
          },
          "Get a MicrosoftThreatProtection data connector": {
            "$ref": "./examples/dataConnectors/GetMicrosoftThreatProtectionById.json"
          },
          "Get a Office ATP data connector": {
            "$ref": "./examples/dataConnectors/GetOffice365AdvancedThreatProtectionById.json"
          },
          "Get a TI Taxii data connector.": {
            "$ref": "./examples/dataConnectors/GetThreatIntelligenceTaxiiById.json"
          },
          "Get a TI data connector.": {
            "$ref": "./examples/dataConnectors/GetThreatIntelligenceById.json"
          },
          "Get an AAD data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureActiveDirectoryById.json"
          },
          "Get an AATP data connector.": {
            "$ref": "./examples/dataConnectors/GetAzureAdvancedThreatProtectionById.json"
          },
          "Get an AwsCloudTrail data connector.": {
            "$ref": "./examples/dataConnectors/GetAmazonWebServicesCloudTrailById.json"
          },
          "Get an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/GetOfficeDataConnetorById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/DataConnectorId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnector"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataConnector"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Data Connectors"
        ],
        "description": "Creates or updates the data connector.",
        "operationId": "DataConnectors_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DataConnector"
              }
            }
          },
          "description": "The data connector",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates a Dynamics365 data connector.": {
            "$ref": "./examples/dataConnectors/CreateDynamics365DataConnetor.json"
          },
          "Creates or updates a Threat Intelligence Taxii data connector.": {
            "$ref": "./examples/dataConnectors/CreateThreatIntelligenceTaxiiDataConnector.json"
          },
          "Creates or updates an Office365 data connector.": {
            "$ref": "./examples/dataConnectors/CreateOfficeDataConnetor.json"
          },
          "Creates or updates an Threat Intelligence Platform data connector.": {
            "$ref": "./examples/dataConnectors/CreateThreatIntelligenceDataConnector.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entityQueries": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityQueryList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EntityQueries"
        ],
        "description": "Gets all entity queries.",
        "operationId": "EntityQueries_List",
        "x-ms-examples": {
          "Get all entity queries.": {
            "$ref": "./examples/entityQueries/GetEntityQueries.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/entityQueries/{entityQueryId}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/EntityQueryId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityQuery"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "EntityQueries"
        ],
        "description": "Gets an entity query.",
        "operationId": "EntityQueries_Get",
        "x-ms-examples": {
          "Get an entity query.": {
            "$ref": "./examples/entityQueries/GetExpansionEntityQueryById.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/ODataFilter"
          },
          {
            "$ref": "#/components/parameters/ODataOrderBy"
          },
          {
            "description": "Returns only the first n results. Optional.",
            "in": "query",
            "name": "$top",
            "schema": {
              "format": "int32",
              "maximum": 1000,
              "type": "integer"
            },
            "x-ms-parameter-location": "method"
          },
          {
            "$ref": "#/components/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Gets all incidents.",
        "operationId": "Incidents_List",
        "x-ms-examples": {
          "Get all incidents.": {
            "$ref": "./examples/incidents/GetIncidents.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Delete the incident.",
        "operationId": "Incidents_Delete",
        "x-ms-examples": {
          "Delete an incident.": {
            "$ref": "./examples/incidents/DeleteIncident.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Gets an incident.",
        "operationId": "Incidents_Get",
        "x-ms-examples": {
          "Get an incident.": {
            "$ref": "./examples/incidents/GetIncidentById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Incident"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Incidents"
        ],
        "description": "Creates or updates the incident.",
        "operationId": "Incidents_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Incident"
              }
            }
          },
          "description": "The incident",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates an incident.": {
            "$ref": "./examples/incidents/CreateIncident.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/alerts": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentAlertList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentAlerts"
        ],
        "description": "Gets all incident alerts.",
        "operationId": "Incidents_ListOfAlerts",
        "x-ms-examples": {
          "Get all incident alerts.": {
            "$ref": "./examples/incidents/GetAllIncidentAlerts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/bookmarks": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentBookmarkList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentBookmarks"
        ],
        "description": "Gets all incident bookmarks.",
        "operationId": "Incidents_ListOfBookmarks",
        "x-ms-examples": {
          "Get all incident bookmarks.": {
            "$ref": "./examples/incidents/GetAllIncidentBookmarks.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/ODataFilter"
          },
          {
            "$ref": "#/components/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/components/parameters/ODataTop"
          },
          {
            "$ref": "#/components/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentCommentList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets all incident comments.",
        "operationId": "IncidentComments_ListByIncident",
        "x-ms-examples": {
          "Get all incident comments.": {
            "$ref": "./examples/incidents/comments/GetAllIncidentComments.json"
          }
        },
        "x-ms-odata": "#/components/schemas/IncidentComment",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/comments/{incidentCommentId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/IncidentCommentId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Delete the incident comment.",
        "operationId": "IncidentComments_DeleteComment",
        "x-ms-examples": {
          "Delete the incident comment.": {
            "$ref": "./examples/incidents/comments/DeleteIncidentComment.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/IncidentCommentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentComment"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Gets an incident comment.",
        "operationId": "IncidentComments_GetComment",
        "x-ms-examples": {
          "Get an incident comment.": {
            "$ref": "./examples/incidents/comments/GetIncidentCommentById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/IncidentCommentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentComment"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentComment"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentComments"
        ],
        "description": "Creates or updates the incident comment.",
        "operationId": "IncidentComments_CreateComment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncidentComment"
              }
            }
          },
          "description": "The incident comment",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates an incident comment.": {
            "$ref": "./examples/incidents/comments/CreateIncidentComment.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/entities": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentEntitiesResponse"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentEntities"
        ],
        "description": "Gets all incident related entities.",
        "operationId": "Incidents_ListOfEntities",
        "x-ms-examples": {
          "Gets all incident related entities": {
            "$ref": "./examples/incidents/entities/GetAllIncidentEntities.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/ODataFilter"
          },
          {
            "$ref": "#/components/parameters/ODataOrderBy"
          },
          {
            "$ref": "#/components/parameters/ODataTop"
          },
          {
            "$ref": "#/components/parameters/ODataSkipToken"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Gets all incident relations.",
        "operationId": "IncidentRelations_List",
        "x-ms-examples": {
          "Get all incident relations.": {
            "$ref": "./examples/incidents/relations/GetAllIncidentRelations.json"
          }
        },
        "x-ms-odata": "#/components/schemas/Relation",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/incidents/{incidentId}/relations/{relationName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/RelationName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Delete the incident relation.",
        "operationId": "IncidentRelations_DeleteRelation",
        "x-ms-examples": {
          "Delete the incident relation.": {
            "$ref": "./examples/incidents/relations/DeleteIncidentRelation.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/RelationName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relation"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Gets an incident relation.",
        "operationId": "IncidentRelations_GetRelation",
        "x-ms-examples": {
          "Get an incident relation.": {
            "$ref": "./examples/incidents/relations/GetIncidentRelationByName.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/IncidentId"
          },
          {
            "$ref": "#/components/parameters/RelationName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relation"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Relation"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "IncidentRelations"
        ],
        "description": "Creates or updates the incident relation.",
        "operationId": "IncidentRelations_CreateOrUpdateRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Relation"
              }
            }
          },
          "description": "The relation model",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates an incident relation.": {
            "$ref": "./examples/incidents/relations/CreateIncidentRelation.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/settings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "List of all the settings",
        "operationId": "ProductSettings_GetAll",
        "x-ms-examples": {
          "Get EyesOn settings.": {
            "$ref": "./examples/settings/GetAllSettings.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/settings/{settingsName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/SettingsName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Delete setting of the product.",
        "operationId": "ProductSettings_Delete",
        "x-ms-examples": {
          "Delete EyesOn settings.": {
            "$ref": "./examples/settings/DeleteEyesOnSetting.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/SettingsName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Gets a setting.",
        "operationId": "ProductSettings_Get",
        "x-ms-examples": {
          "Get EyesOn settings.": {
            "$ref": "./examples/settings/GetEyesOnSetting.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/SettingsName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settings"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Updates setting.",
        "operationId": "ProductSettings_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Settings"
              }
            }
          },
          "description": "The setting",
          "required": true
        },
        "x-ms-examples": {
          "Update EyesOn settings.": {
            "$ref": "./examples/settings/UpdateEyesOnSetting.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Gets all watchlists, without watchlist items.",
        "operationId": "Watchlists_List",
        "x-ms-examples": {
          "Get all watchlists.": {
            "$ref": "./examples/watchlists/GetWatchlists.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Delete a watchlist.",
        "operationId": "Watchlists_Delete",
        "x-ms-examples": {
          "Delete a watchlist.": {
            "$ref": "./examples/watchlists/DeleteWatchlist.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Gets a watchlist, without its watchlist items.",
        "operationId": "Watchlists_Get",
        "x-ms-examples": {
          "Get a watchlist.": {
            "$ref": "./examples/watchlists/GetWatchlistByAlias.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Watchlist"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Watchlists"
        ],
        "description": "Creates a watchlist and its watchlist items (bulk creation, e.g. through text/csv content type). To create a Watchlist and its Items, we should call this endpoint twice : the first call will create an empty Watchlist, and the second one will create its Items.",
        "operationId": "Watchlists_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Watchlist"
              }
            }
          },
          "description": "The watchlist",
          "required": true
        },
        "x-ms-examples": {
          "Creates a watchlist.": {
            "$ref": "./examples/watchlists/CreateWatchlist.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistItemList"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Gets all watchlist Items.",
        "operationId": "WatchlistItems_List",
        "x-ms-examples": {
          "Get all watchlist Items.": {
            "$ref": "./examples/watchlists/GetWatchlistItems.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{operationalInsightsResourceProvider}/workspaces/{workspaceName}/providers/Microsoft.SecurityInsights/watchlists/{watchlistAlias}/watchlistItems/{watchlistItemId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/components/parameters/WatchlistItemId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Delete a watchlist item.",
        "operationId": "WatchlistItems_Delete",
        "x-ms-examples": {
          "Delete a watchlist Item.": {
            "$ref": "./examples/watchlists/DeleteWatchlistItem.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/components/parameters/WatchlistItemId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistItem"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Gets a watchlist, without its watchlist items.",
        "operationId": "WatchlistItems_Get",
        "x-ms-examples": {
          "Get a watchlist item.": {
            "$ref": "./examples/watchlists/GetWatchlistItemById.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersion"
          },
          {
            "$ref": "#/components/parameters/SubscriptionId"
          },
          {
            "$ref": "#/components/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/components/parameters/OperationalInsightsResourceProvider"
          },
          {
            "$ref": "#/components/parameters/WorkspaceName"
          },
          {
            "$ref": "#/components/parameters/WatchlistAlias"
          },
          {
            "$ref": "#/components/parameters/WatchlistItemId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistItem"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WatchlistItem"
                }
              }
            },
            "description": "Created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "WatchlistItems"
        ],
        "description": "Creates or updates a watchlist item.",
        "operationId": "WatchlistItems_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WatchlistItem"
              }
            }
          },
          "description": "The watchlist item",
          "required": true
        },
        "x-ms-examples": {
          "Creates or updates a watchlist item.": {
            "$ref": "./examples/watchlists/CreateWatchlistItem.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ActionId": {
        "description": "Action ID",
        "in": "path",
        "name": "actionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "AlertRuleTemplateId": {
        "description": "Alert rule template ID",
        "in": "path",
        "name": "alertRuleTemplateId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ApiVersion": {
        "description": "API version for the operation",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "enum": [
            "2019-01-01-preview"
          ],
          "type": "string"
        }
      },
      "DataConnectorId": {
        "description": "Connector ID",
        "in": "path",
        "name": "dataConnectorId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "EntityQueryId": {
        "description": "entity query ID",
        "in": "path",
        "name": "entityQueryId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "IncidentCommentId": {
        "description": "Incident comment ID",
        "in": "path",
        "name": "incidentCommentId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "IncidentId": {
        "description": "Incident ID",
        "in": "path",
        "name": "incidentId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ODataFilter": {
        "description": "Filters the results, based on a Boolean condition. Optional.",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ODataOrderBy": {
        "description": "Sorts the results. Optional.",
        "in": "query",
        "name": "$orderby",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ODataSkipToken": {
        "description": "Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls. Optional.",
        "in": "query",
        "name": "$skipToken",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ODataTop": {
        "description": "Returns only the first n results. Optional.",
        "in": "query",
        "name": "$top",
        "required": false,
        "schema": {
          "format": "int32",
          "type": "integer"
        },
        "x-ms-parameter-location": "method"
      },
      "OperationalInsightsResourceProvider": {
        "description": "The namespace of workspaces resource provider- Microsoft.OperationalInsights.",
        "in": "path",
        "name": "operationalInsightsResourceProvider",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "RelationName": {
        "description": "Relation Name",
        "in": "path",
        "name": "relationName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ResourceGroupName": {
        "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
        "in": "path",
        "name": "resourceGroupName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "RuleId": {
        "description": "Alert rule ID",
        "in": "path",
        "name": "ruleId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SettingsName": {
        "description": "The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba",
        "in": "path",
        "name": "settingsName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "SubscriptionId": {
        "description": "Azure subscription ID",
        "in": "path",
        "name": "subscriptionId",
        "required": true,
        "schema": {
          "pattern": "^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
          "type": "string"
        }
      },
      "WatchlistAlias": {
        "description": "Watchlist Alias",
        "in": "path",
        "name": "watchlistAlias",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "WatchlistItemId": {
        "description": "Watchlist Item Id (GUID)",
        "in": "path",
        "name": "watchlistItemId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "WorkspaceName": {
        "description": "The name of the workspace.",
        "in": "path",
        "name": "workspaceName",
        "required": true,
        "schema": {
          "maxLength": 90,
          "minLength": 1,
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "AADDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents AAD (Azure Active Directory) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AADDataConnectorProperties",
            "description": "AAD (Azure Active Directory) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureActiveDirectory"
      },
      "AADDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          },
          {
            "$ref": "#/components/schemas/DataConnectorWithAlertsProperties"
          }
        ],
        "description": "AAD (Azure Active Directory) data connector properties.",
        "type": "object"
      },
      "AATPDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents AATP (Azure Advanced Threat Protection) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AATPDataConnectorProperties",
            "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureAdvancedThreatProtection"
      },
      "AATPDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          },
          {
            "$ref": "#/components/schemas/DataConnectorWithAlertsProperties"
          }
        ],
        "description": "AATP (Azure Advanced Threat Protection) data connector properties.",
        "type": "object"
      },
      "ASCDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents ASC (Azure Security Center) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ASCDataConnectorProperties",
            "description": "ASC (Azure Security Center) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureSecurityCenter"
      },
      "ASCDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorWithAlertsProperties"
          }
        ],
        "description": "ASC (Azure Security Center) data connector properties.",
        "properties": {
          "subscriptionId": {
            "description": "The subscription id to connect to, and get the data from.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AccountEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents an account entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AccountEntityProperties",
            "description": "Account entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Account"
      },
      "AccountEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Account entity property bag.",
        "properties": {
          "aadTenantId": {
            "description": "The Azure Active Directory tenant id.",
            "readOnly": true,
            "type": "string"
          },
          "aadUserId": {
            "description": "The Azure Active Directory user id.",
            "readOnly": true,
            "type": "string"
          },
          "accountName": {
            "description": "The name of the account. This field should hold only the name without any domain added to it, i.e. administrator.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the account.",
            "readOnly": true,
            "type": "string"
          },
          "dnsDomain": {
            "description": "The fully qualified domain DNS name.",
            "readOnly": true,
            "type": "string"
          },
          "hostEntityId": {
            "description": "The Host entity id that contains the account in case it is a local account (not domain joined)",
            "readOnly": true,
            "type": "string"
          },
          "isDomainJoined": {
            "description": "Determines whether this is a domain account.",
            "readOnly": true,
            "type": "boolean"
          },
          "ntDomain": {
            "description": "The NetBIOS domain name as it appears in the alert format \u2013 domain\\username. Examples: NT AUTHORITY.",
            "readOnly": true,
            "type": "string"
          },
          "objectGuid": {
            "description": "The objectGUID attribute is a single-value attribute that is the unique identifier for the object, assigned by active directory.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "puid": {
            "description": "The Azure Active Directory Passport User ID.",
            "readOnly": true,
            "type": "string"
          },
          "sid": {
            "description": "The account security identifier, e.g. S-1-5-18.",
            "readOnly": true,
            "type": "string"
          },
          "upnSuffix": {
            "description": "The user principal name suffix for the account, in some cases it is also the domain name. Examples: contoso.com.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActionPropertiesBase": {
        "description": "Action property bag base.",
        "properties": {
          "logicAppResourceId": {
            "description": "Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.",
            "type": "string"
          }
        },
        "required": [
          "logicAppResourceId"
        ],
        "type": "object"
      },
      "ActionRequest": {
        "allOf": [
          {
            "$ref": "../../../common/1.0/types.json#/definitions/ResourceWithEtag"
          }
        ],
        "description": "Action for alert rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ActionRequestProperties",
            "description": "Action properties for put request",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ActionRequestProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionPropertiesBase"
          }
        ],
        "description": "Action property bag.",
        "properties": {
          "triggerUri": {
            "description": "Logic App Callback URL for this specific workflow.",
            "type": "string"
          }
        },
        "required": [
          "triggerUri"
        ],
        "type": "object"
      },
      "ActionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "Action for alert rule.",
        "properties": {
          "etag": {
            "description": "Etag of the action.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ActionResponseProperties",
            "description": "Action properties for get request",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "ActionResponseProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionPropertiesBase"
          }
        ],
        "description": "Action property bag.",
        "properties": {
          "workflowId": {
            "description": "The name of the logic app's workflow.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ActionsList": {
        "description": "List all the actions.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of actions.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of actions.",
            "items": {
              "$ref": "#/components/schemas/ActionResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Aggregations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "$ref": "#/components/schemas/AggregationsKind"
          }
        ],
        "description": "The aggregation.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "AggregationsKind": {
        "description": "Describes an Azure resource with kind.",
        "properties": {
          "kind": {
            "description": "The kind of the setting",
            "enum": [
              "CasesAggregation"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AggregationsKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "AlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          },
          {
            "$ref": "#/components/schemas/AlertRuleKind"
          }
        ],
        "description": "Alert rule.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "AlertRuleKind": {
        "description": "Describes an Azure resource with kind.",
        "properties": {
          "kind": {
            "description": "The kind of the alert rule",
            "enum": [
              "Scheduled",
              "MicrosoftSecurityIncidentCreation",
              "Fusion",
              "MLBehaviorAnalytics",
              "ThreatIntelligence"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertRuleKind",
              "values": [
                {
                  "value": "Scheduled"
                },
                {
                  "value": "MicrosoftSecurityIncidentCreation"
                },
                {
                  "value": "Fusion"
                },
                {
                  "value": "MLBehaviorAnalytics"
                },
                {
                  "value": "ThreatIntelligence"
                }
              ]
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "AlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "$ref": "#/components/schemas/AlertRuleKind"
          }
        ],
        "description": "Alert rule template.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "AlertRuleTemplateDataSource": {
        "description": "alert rule template data sources",
        "properties": {
          "connectorId": {
            "description": "The connector id that provides the following data types",
            "type": "string"
          },
          "dataTypes": {
            "description": "The data types used by the alert rule template",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AlertRuleTemplatePropertiesBase": {
        "description": "Base alert rule template property bag.",
        "properties": {
          "alertRulesCreatedByTemplateCount": {
            "description": "the number of alert rules that were created by this template",
            "type": "integer"
          },
          "createdDateUTC": {
            "description": "The time that this alert rule template has been added.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule template.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alert rule template.",
            "type": "string"
          },
          "lastUpdatedDateUTC": {
            "description": "The last time that this alert rule template has been updated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "requiredDataConnectors": {
            "description": "The required data sources for this template",
            "items": {
              "$ref": "#/components/schemas/AlertRuleTemplateDataSource"
            },
            "type": "array"
          },
          "status": {
            "description": "The alert rule template status.",
            "enum": [
              "Installed",
              "Available",
              "NotAvailable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "TemplateStatus",
              "values": [
                {
                  "description": "Alert rule template installed. and can not use more then once",
                  "value": "Installed"
                },
                {
                  "description": "Alert rule template is available.",
                  "value": "Available"
                },
                {
                  "description": "Alert rule template is not available",
                  "value": "NotAvailable"
                }
              ]
            }
          }
        },
        "type": "object"
      },
      "AlertRuleTemplatesList": {
        "description": "List all the alert rule templates.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of alert rule templates.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of alert rule templates.",
            "items": {
              "$ref": "#/components/schemas/AlertRuleTemplate"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AlertRuleTriggerOperator": {
        "description": "The operation against the threshold that triggers alert rule.",
        "enum": [
          "GreaterThan",
          "LessThan",
          "Equal",
          "NotEqual"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "TriggerOperator"
        }
      },
      "AlertRulesList": {
        "description": "List all the alert rules.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of alert rules.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of alert rules.",
            "items": {
              "$ref": "#/components/schemas/AlertRule"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "AlertSeverity": {
        "description": "The severity of the alert",
        "enum": [
          "High",
          "Medium",
          "Low",
          "Informational"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertSeverity",
          "values": [
            {
              "description": "High severity",
              "value": "High"
            },
            {
              "description": "Medium severity",
              "value": "Medium"
            },
            {
              "description": "Low severity",
              "value": "Low"
            },
            {
              "description": "Informational severity",
              "value": "Informational"
            }
          ]
        }
      },
      "AlertsDataTypeOfDataConnector": {
        "description": "Alerts data type for data connectors.",
        "properties": {
          "alerts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Alerts data type connection.",
            "type": "object"
          }
        },
        "required": [
          "alerts"
        ],
        "type": "object"
      },
      "Anomalies": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Settings"
          }
        ],
        "description": "Settings with single toggle.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AnomaliesProperties",
            "description": "Anomalies properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Anomalies"
      },
      "AnomaliesProperties": {
        "description": "Anomalies property bag.",
        "properties": {
          "isEnabled": {
            "description": "Determines whether the setting is enable or disabled.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AttackTactic": {
        "description": "The severity for alerts created by this alert rule.",
        "enum": [
          "InitialAccess",
          "Execution",
          "Persistence",
          "PrivilegeEscalation",
          "DefenseEvasion",
          "CredentialAccess",
          "Discovery",
          "LateralMovement",
          "Collection",
          "Exfiltration",
          "CommandAndControl",
          "Impact",
          "PreAttack"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AttackTactic"
        }
      },
      "AwsCloudTrailDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents Amazon Web Services CloudTrail data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AwsCloudTrailDataConnectorProperties",
            "description": "Amazon Web Services CloudTrail data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AmazonWebServicesCloudTrail"
      },
      "AwsCloudTrailDataConnectorDataTypes": {
        "description": "The available data types for Amazon Web Services CloudTrail data connector.",
        "properties": {
          "logs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Logs data type.",
            "type": "object"
          }
        },
        "required": [
          "logs"
        ],
        "type": "object"
      },
      "AwsCloudTrailDataConnectorProperties": {
        "description": "Amazon Web Services CloudTrail data connector properties.",
        "properties": {
          "awsRoleArn": {
            "description": "The Aws Role Arn (with CloudTrailReadOnly policy) that is used to access the Aws account.",
            "type": "string"
          },
          "dataTypes": {
            "$ref": "#/components/schemas/AwsCloudTrailDataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "AzureResourceEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents an azure resource entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/AzureResourceEntityProperties",
            "description": "AzureResource entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "AzureResource"
      },
      "AzureResourceEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "AzureResource entity property bag.",
        "properties": {
          "resourceId": {
            "description": "The azure resource id of the resource",
            "readOnly": true,
            "type": "string"
          },
          "subscriptionId": {
            "description": "The subscription id of the resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CasesAggregation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Aggregations"
          }
        ],
        "description": "Represents aggregations results for cases.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CasesAggregationProperties",
            "description": "Properties of aggregations results of cases.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "CasesAggregation"
      },
      "CasesAggregationBySeverityProperties": {
        "description": "Aggregative results of cases by severity property bag.",
        "properties": {
          "totalCriticalSeverity": {
            "description": "Total amount of open cases with severity Critical",
            "readOnly": true,
            "type": "integer"
          },
          "totalHighSeverity": {
            "description": "Total amount of open cases with severity High",
            "readOnly": true,
            "type": "integer"
          },
          "totalInformationalSeverity": {
            "description": "Total amount of open cases with severity Informational",
            "readOnly": true,
            "type": "integer"
          },
          "totalLowSeverity": {
            "description": "Total amount of open cases with severity Low",
            "readOnly": true,
            "type": "integer"
          },
          "totalMediumSeverity": {
            "description": "Total amount of open cases with severity medium",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CasesAggregationByStatusProperties": {
        "description": "Aggregative results of cases by status property bag.",
        "properties": {
          "totalDismissedStatus": {
            "description": "Total amount of closed cases with status Dismissed",
            "readOnly": true,
            "type": "integer"
          },
          "totalFalsePositiveStatus": {
            "description": "Total amount of closed cases with status Closed and Close reason of False positive",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "totalInProgressStatus": {
            "description": "Total amount of open cases with status InProgress",
            "readOnly": true,
            "type": "integer"
          },
          "totalNewStatus": {
            "description": "Total amount of open cases with status New",
            "readOnly": true,
            "type": "integer"
          },
          "totalResolvedStatus": {
            "description": "Total amount of closed cases with status Resolved",
            "readOnly": true,
            "type": "integer"
          },
          "totalTruePositiveStatus": {
            "description": "Total amount of closed cases with status Closed and Close reason of True positive",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CasesAggregationProperties": {
        "description": "Aggregative results of cases property bag.",
        "properties": {
          "aggregationBySeverity": {
            "$ref": "#/components/schemas/CasesAggregationBySeverityProperties",
            "description": "Aggregations results by case severity."
          },
          "aggregationByStatus": {
            "$ref": "#/components/schemas/CasesAggregationByStatusProperties",
            "description": "Aggregations results by case status."
          }
        },
        "type": "object"
      },
      "ClientInfo": {
        "description": "Information on the client (user or application) that made some action",
        "properties": {
          "email": {
            "description": "The email of the client.",
            "type": "string"
          },
          "name": {
            "description": "The name of the client.",
            "type": "string"
          },
          "objectId": {
            "description": "The object id of the client.",
            "format": "uuid",
            "type": "string"
          },
          "userPrincipalName": {
            "description": "The user principal name of the client.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudApplicationEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a cloud application entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/CloudApplicationEntityProperties",
            "description": "CloudApplication entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "CloudApplication"
      },
      "CloudApplicationEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "CloudApplication entity property bag.",
        "properties": {
          "appId": {
            "description": "The technical identifier of the application.",
            "readOnly": true,
            "type": "integer"
          },
          "appName": {
            "description": "The name of the related cloud application.",
            "readOnly": true,
            "type": "string"
          },
          "instanceName": {
            "description": "The user defined instance name of the cloud application. It is often used to distinguish between several applications of the same type that a customer has.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "Error response structure.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody",
            "description": "Error data",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "Error details.",
        "properties": {
          "code": {
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "A message describing the error, intended to be suitable for display in a user interface.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "ConnectedEntity": {
        "description": "Expansion result connected entities",
        "properties": {
          "additionalData": {
            "description": "key-value pairs for a connected entity mapping",
            "type": "object"
          },
          "targetEntityId": {
            "description": "Entity Id of the connected entity",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          },
          {
            "$ref": "#/components/schemas/DataConnectorKind"
          }
        ],
        "description": "Data connector.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DataConnectorDataTypeCommon": {
        "description": "Common field for data type in data connectors.",
        "properties": {
          "state": {
            "description": "Describe whether this data type connection is enabled or not.",
            "enum": [
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataTypeState"
            }
          }
        },
        "required": [
          "state"
        ],
        "type": "object"
      },
      "DataConnectorKind": {
        "description": "Describes an Azure resource with kind.",
        "properties": {
          "kind": {
            "description": "The kind of the data connector",
            "enum": [
              "AzureActiveDirectory",
              "AzureSecurityCenter",
              "MicrosoftCloudAppSecurity",
              "ThreatIntelligence",
              "ThreatIntelligenceTaxii",
              "Office365",
              "OfficeATP",
              "AmazonWebServicesCloudTrail",
              "AzureAdvancedThreatProtection",
              "MicrosoftDefenderAdvancedThreatProtection",
              "Dynamics365",
              "MicrosoftThreatProtection",
              "MicrosoftThreatIntelligence"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "DataConnectorKind",
              "values": [
                {
                  "value": "AzureActiveDirectory"
                },
                {
                  "value": "AzureSecurityCenter"
                },
                {
                  "value": "MicrosoftCloudAppSecurity"
                },
                {
                  "value": "ThreatIntelligence"
                },
                {
                  "value": "ThreatIntelligenceTaxii"
                },
                {
                  "value": "Office365"
                },
                {
                  "value": "OfficeATP"
                },
                {
                  "value": "AmazonWebServicesCloudTrail"
                },
                {
                  "value": "AzureAdvancedThreatProtection"
                },
                {
                  "value": "MicrosoftDefenderAdvancedThreatProtection"
                },
                {
                  "value": "Dynamics365"
                },
                {
                  "value": "MicrosoftThreatProtection"
                },
                {
                  "value": "MicrosoftThreatIntelligence"
                }
              ]
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "DataConnectorList": {
        "description": "List all the data connectors.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of data connectors.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of data connectors.",
            "items": {
              "$ref": "#/components/schemas/DataConnector"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "DataConnectorTenantId": {
        "description": "Properties data connector on tenant level.",
        "properties": {
          "tenantId": {
            "description": "The tenant id to connect to, and get the data from.",
            "type": "string"
          }
        },
        "required": [
          "tenantId"
        ],
        "type": "object"
      },
      "DataConnectorWithAlertsProperties": {
        "description": "Data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/AlertsDataTypeOfDataConnector",
            "description": "The available data types for the connector."
          }
        },
        "type": "object"
      },
      "DnsEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a dns entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/DnsEntityProperties",
            "description": "Dns entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "DnsResolution"
      },
      "DnsEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Dns entity property bag.",
        "properties": {
          "dnsServerIpEntityId": {
            "description": "An ip entity id for the dns server resolving the request",
            "readOnly": true,
            "type": "string"
          },
          "domainName": {
            "description": "The name of the dns record associated with the alert",
            "readOnly": true,
            "type": "string"
          },
          "hostIpAddressEntityId": {
            "description": "An ip entity id for the dns request client",
            "readOnly": true,
            "type": "string"
          },
          "ipAddressEntityIds": {
            "description": "Ip entity identifiers for the resolved ip address.",
            "items": {
              "description": "Ip entity id",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Dynamics365DataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents Dynamics365 data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/Dynamics365DataConnectorProperties",
            "description": "Dynamics365 data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Dynamics365"
      },
      "Dynamics365DataConnectorDataTypes": {
        "description": "The available data types for Dynamics365 data connector.",
        "properties": {
          "dynamics365CdsActivities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Common Data Service data type connection.",
            "type": "object"
          }
        },
        "required": [
          "dynamics365CdsActivities"
        ],
        "type": "object"
      },
      "Dynamics365DataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "Dynamics365 data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/Dynamics365DataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "Entity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          },
          {
            "$ref": "#/components/schemas/EntityKind"
          }
        ],
        "description": "Specific entity.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EntityAnalytics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Settings"
          }
        ],
        "description": "Settings with single toggle.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EntityAnalyticsProperties",
            "description": "EntityAnalytics properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "EntityAnalytics"
      },
      "EntityAnalyticsProperties": {
        "description": "EntityAnalytics property bag.",
        "properties": {
          "isEnabled": {
            "description": "Determines whether the setting is enable or disabled.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "EntityCommonProperties": {
        "description": "Entity common property bag.",
        "properties": {
          "additionalData": {
            "additionalProperties": {
              "type": "object"
            },
            "description": "A bag of custom fields that should be part of the entity and will be presented to the user.",
            "readOnly": true,
            "type": "object"
          },
          "friendlyName": {
            "description": "The graph item display name which is a short humanly readable description of the graph item instance. This property is optional and might be system generated.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "EntityInnerKind": {
        "description": "The kind of the entity",
        "enum": [
          "Account",
          "Host",
          "File",
          "AzureResource",
          "CloudApplication",
          "DnsResolution",
          "FileHash",
          "Ip",
          "Malware",
          "Process",
          "RegistryKey",
          "RegistryValue",
          "SecurityGroup",
          "Url",
          "IoTDevice",
          "SecurityAlert",
          "Bookmark",
          "Mailbox",
          "MailCluster",
          "MailMessage",
          "SubmissionMail"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EntityKind",
          "values": [
            {
              "description": "Entity represents account in the system.",
              "value": "Account"
            },
            {
              "description": "Entity represents host in the system.",
              "value": "Host"
            },
            {
              "description": "Entity represents file in the system.",
              "value": "File"
            },
            {
              "description": "Entity represents azure resource in the system.",
              "value": "AzureResource"
            },
            {
              "description": "Entity represents cloud application in the system.",
              "value": "CloudApplication"
            },
            {
              "description": "Entity represents dns resolution in the system.",
              "value": "DnsResolution"
            },
            {
              "description": "Entity represents file hash in the system.",
              "value": "FileHash"
            },
            {
              "description": "Entity represents ip in the system.",
              "value": "Ip"
            },
            {
              "description": "Entity represents malware in the system.",
              "value": "Malware"
            },
            {
              "description": "Entity represents process in the system.",
              "value": "Process"
            },
            {
              "description": "Entity represents registry key in the system.",
              "value": "RegistryKey"
            },
            {
              "description": "Entity represents registry value in the system.",
              "value": "RegistryValue"
            },
            {
              "description": "Entity represents security group in the system.",
              "value": "SecurityGroup"
            },
            {
              "description": "Entity represents url in the system.",
              "value": "Url"
            },
            {
              "description": "Entity represents IoT device in the system.",
              "value": "IoTDevice"
            },
            {
              "description": "Entity represents security alert in the system.",
              "value": "SecurityAlert"
            },
            {
              "description": "Entity represents bookmark in the system.",
              "value": "Bookmark"
            },
            {
              "description": "Entity represents mail cluster in the system.",
              "value": "MailCluster"
            },
            {
              "description": "Entity represents mail message in the system.",
              "value": "MailMessage"
            },
            {
              "description": "Entity represents mailbox in the system.",
              "value": "Mailbox"
            },
            {
              "description": "Entity represents submission mail in the system.",
              "value": "SubmissionMail"
            }
          ]
        }
      },
      "EntityInnerType": {
        "description": "The type of the entity",
        "enum": [
          "Account",
          "Host",
          "File",
          "AzureResource",
          "CloudApplication",
          "DNS",
          "FileHash",
          "IP",
          "Malware",
          "Process",
          "RegistryKey",
          "RegistryValue",
          "SecurityGroup",
          "URL",
          "IoTDevice",
          "SecurityAlert",
          "HuntingBookmark",
          "MailCluster",
          "MailMessage",
          "Mailbox",
          "SubmissionMail"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EntityType",
          "values": [
            {
              "description": "Entity represents account in the system.",
              "value": "Account"
            },
            {
              "description": "Entity represents host in the system.",
              "value": "Host"
            },
            {
              "description": "Entity represents file in the system.",
              "value": "File"
            },
            {
              "description": "Entity represents azure resource in the system.",
              "value": "AzureResource"
            },
            {
              "description": "Entity represents cloud application in the system.",
              "value": "CloudApplication"
            },
            {
              "description": "Entity represents dns in the system.",
              "value": "DNS"
            },
            {
              "description": "Entity represents file hash in the system.",
              "value": "FileHash"
            },
            {
              "description": "Entity represents ip in the system.",
              "value": "IP"
            },
            {
              "description": "Entity represents malware in the system.",
              "value": "Malware"
            },
            {
              "description": "Entity represents process in the system.",
              "value": "Process"
            },
            {
              "description": "Entity represents registry key in the system.",
              "value": "RegistryKey"
            },
            {
              "description": "Entity represents registry value in the system.",
              "value": "RegistryValue"
            },
            {
              "description": "Entity represents security group in the system.",
              "value": "SecurityGroup"
            },
            {
              "description": "Entity represents url in the system.",
              "value": "URL"
            },
            {
              "description": "Entity represents IoT device in the system.",
              "value": "IoTDevice"
            },
            {
              "description": "Entity represents security alert in the system.",
              "value": "SecurityAlert"
            },
            {
              "description": "Entity represents HuntingBookmark in the system.",
              "value": "HuntingBookmark"
            },
            {
              "description": "Entity represents mail cluster in the system.",
              "value": "MailCluster"
            },
            {
              "description": "Entity represents mail message in the system.",
              "value": "MailMessage"
            },
            {
              "description": "Entity represents mailbox in the system.",
              "value": "Mailbox"
            },
            {
              "description": "Entity represents submission mail in the system.",
              "value": "SubmissionMail"
            }
          ]
        }
      },
      "EntityKind": {
        "description": "Describes an entity with kind.",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/EntityInnerKind",
            "description": "The kind of the entity."
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EntityQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          },
          {
            "$ref": "#/components/schemas/EntityQueryKind"
          }
        ],
        "description": "Specific entity query.",
        "discriminator": {
          "propertyName": "kind"
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EntityQueryKind": {
        "description": "Describes an Entity query resource with kind.",
        "properties": {
          "kind": {
            "description": "The kind of the entity query",
            "enum": [
              "Expansion",
              "Insight"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EntityQueryKind",
              "values": [
                {
                  "value": "Expansion"
                },
                {
                  "value": "Insight"
                }
              ]
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "EntityQueryList": {
        "description": "List of all the entity queries.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of entity queries.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of entity queries.",
            "items": {
              "$ref": "#/components/schemas/EntityQuery"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "EventGroupingAggregationKind": {
        "description": "The event grouping aggregation kinds",
        "enum": [
          "SingleAlert",
          "AlertPerResult"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "EventGroupingAggregationKind"
        }
      },
      "EventGroupingSettings": {
        "description": "Event grouping settings property bag.",
        "properties": {
          "aggregationKind": {
            "$ref": "#/components/schemas/EventGroupingAggregationKind"
          }
        },
        "type": "object"
      },
      "ExpansionEntityQueriesProperties": {
        "description": "Describes expansion entity query properties",
        "properties": {
          "dataSources": {
            "description": "List of the data sources that are required to run the query",
            "items": {
              "description": "data source",
              "type": "string"
            },
            "type": "array"
          },
          "displayName": {
            "description": "The query display name",
            "type": "string"
          },
          "inputEntityType": {
            "$ref": "#/components/schemas/EntityInnerType",
            "description": "The type of the query's source entity"
          },
          "inputFields": {
            "description": "List of the fields of the source entity that are required to run the query",
            "items": {
              "description": "input field",
              "type": "string"
            },
            "type": "array"
          },
          "outputEntityTypes": {
            "description": "List of the desired output types to be constructed from the result",
            "items": {
              "$ref": "#/components/schemas/EntityInnerType",
              "description": "output entity type"
            },
            "type": "array"
          },
          "queryTemplate": {
            "description": "The template query string to be parsed and formatted",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ExpansionEntityQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityQuery"
          }
        ],
        "description": "Represents Expansion entity query.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ExpansionEntityQueriesProperties",
            "description": "Expansion entity query properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Expansion"
      },
      "ExpansionResultAggregation": {
        "description": "Information of a specific aggregation in the expansion result.",
        "properties": {
          "aggregationType": {
            "description": "The common type of the aggregation. (for e.g. entity field name)",
            "type": "string"
          },
          "count": {
            "description": "Total number of aggregations of the given kind (and aggregationType if given) in the expansion result.",
            "type": "integer"
          },
          "displayName": {
            "description": "The display name of the aggregation by type.",
            "type": "string"
          },
          "entityKind": {
            "$ref": "#/components/schemas/EntityInnerKind",
            "description": "The kind of the aggregated entity."
          }
        },
        "required": [
          "entityKind",
          "count"
        ],
        "type": "object"
      },
      "ExpansionResultsMetadata": {
        "description": "Expansion result metadata.",
        "properties": {
          "aggregations": {
            "description": "Information of the aggregated nodes in the expansion result.",
            "items": {
              "$ref": "#/components/schemas/ExpansionResultAggregation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "EyesOn": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Settings"
          }
        ],
        "description": "Settings with single toggle.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/EyesOnSettingsProperties",
            "description": "EyesOn properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "EyesOn"
      },
      "EyesOnSettingsProperties": {
        "description": "EyesOn property bag.",
        "properties": {
          "isEnabled": {
            "description": "Determines whether the setting is enable or disabled.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "FileEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a file entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FileEntityProperties",
            "description": "File entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "File"
      },
      "FileEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "File entity property bag.",
        "properties": {
          "directory": {
            "description": "The full path to the file.",
            "readOnly": true,
            "type": "string"
          },
          "fileHashEntityIds": {
            "description": "The file hash entity identifiers associated with this file",
            "items": {
              "description": "file hash id",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "fileName": {
            "description": "The file name without path (some alerts might not include path).",
            "readOnly": true,
            "type": "string"
          },
          "hostEntityId": {
            "description": "The Host entity id which the file belongs to",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FileHashEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a file hash entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FileHashEntityProperties",
            "description": "FileHash entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "FileHash"
      },
      "FileHashEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "FileHash entity property bag.",
        "properties": {
          "algorithm": {
            "description": "The hash algorithm type.",
            "enum": [
              "Unknown",
              "MD5",
              "SHA1",
              "SHA256",
              "SHA256AC"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "FileHashAlgorithm",
              "values": [
                {
                  "description": "Unknown hash algorithm",
                  "value": "Unknown"
                },
                {
                  "description": "MD5 hash type",
                  "value": "MD5"
                },
                {
                  "description": "SHA1 hash type",
                  "value": "SHA1"
                },
                {
                  "description": "SHA256 hash type",
                  "value": "SHA256"
                },
                {
                  "description": "SHA256 Authenticode hash type",
                  "value": "SHA256AC"
                }
              ]
            }
          },
          "hashValue": {
            "description": "The file hash value.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "FusionAlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRule"
          }
        ],
        "description": "Represents Fusion alert rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/FusionAlertRuleProperties",
            "description": "Fusion alert rule properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Fusion"
      },
      "FusionAlertRuleProperties": {
        "description": "Fusion alert rule base property bag.",
        "properties": {
          "alertRuleTemplateName": {
            "description": "The Name of the alert rule template used to create this rule.",
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alerts created by this alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "description": "Determines whether this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "lastModifiedUtc": {
            "description": "The last time that this alert has been modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "The severity for alerts created by this alert rule.",
            "readOnly": true
          },
          "tactics": {
            "description": "The tactics of the alert rule",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "alertRuleTemplateName",
          "enabled"
        ],
        "type": "object"
      },
      "FusionAlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRuleTemplate"
          }
        ],
        "description": "Represents Fusion alert rule template.",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRuleTemplatePropertiesBase"
              }
            ],
            "description": "Fusion alert rule template properties",
            "properties": {
              "severity": {
                "$ref": "#/components/schemas/AlertSeverity",
                "description": "The severity for alerts created by this alert rule."
              },
              "tactics": {
                "description": "The tactics of the alert rule template",
                "items": {
                  "$ref": "#/components/schemas/AttackTactic"
                },
                "type": "array"
              }
            },
            "required": [
              "displayName",
              "description",
              "status",
              "severity",
              "alertRulesCreatedByTemplateCount"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Fusion"
      },
      "GeoLocation": {
        "description": "The geo-location context attached to the ip entity",
        "properties": {
          "asn": {
            "description": "Autonomous System Number",
            "readOnly": true,
            "type": "integer"
          },
          "city": {
            "description": "City name",
            "readOnly": true,
            "type": "string"
          },
          "countryCode": {
            "description": "The country code according to ISO 3166 format",
            "readOnly": true,
            "type": "string"
          },
          "countryName": {
            "description": "Country name according to ISO 3166 Alpha 2: the lowercase of the English Short Name",
            "readOnly": true,
            "type": "string"
          },
          "latitude": {
            "description": "The longitude of the identified location, expressed as a floating point number with range of -180 to 180, with positive numbers representing East and negative numbers representing West. Latitude and longitude are derived from the city or postal code.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "longitude": {
            "description": "The latitude of the identified location, expressed as a floating point number with range of - 90 to 90, with positive numbers representing North and negative numbers representing South. Latitude and longitude are derived from the city or postal code.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "state": {
            "description": "State name",
            "readOnly": true,
            "type": "string"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "GroupingConfiguration": {
        "description": "Grouping configuration property bag.",
        "properties": {
          "enabled": {
            "description": "Grouping enabled",
            "type": "boolean"
          },
          "entitiesMatchingMethod": {
            "description": "Grouping matching method",
            "enum": [
              "All",
              "None",
              "Custom"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "EntitiesMatchingMethod",
              "values": [
                {
                  "description": "Grouping alerts into a single incident if all the entities match",
                  "value": "All"
                },
                {
                  "description": "Grouping all alerts triggered by this rule into a single incident",
                  "value": "None"
                },
                {
                  "description": "Grouping alerts into a single incident if the selected entities match",
                  "value": "Custom"
                }
              ]
            }
          },
          "groupByEntities": {
            "description": "A list of entity types to group by (when entitiesMatchingMethod is Custom)",
            "items": {
              "description": "Grouping entity type",
              "enum": [
                "Account",
                "Host",
                "Ip",
                "Url",
                "FileHash"
              ],
              "type": "string",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "GroupingEntityType",
                "values": [
                  {
                    "description": "Account entity",
                    "value": "Account"
                  },
                  {
                    "description": "Host entity",
                    "value": "Host"
                  },
                  {
                    "description": "Ip entity",
                    "value": "Ip"
                  },
                  {
                    "description": "Url entity",
                    "value": "Url"
                  },
                  {
                    "description": "FileHash entity",
                    "value": "FileHash"
                  }
                ]
              }
            },
            "type": "array"
          },
          "lookbackDuration": {
            "description": "Limit the group to alerts created within the lookback duration (in ISO 8601 duration format)",
            "format": "duration",
            "type": "string"
          },
          "reopenClosedIncident": {
            "description": "Re-open closed matching incidents",
            "type": "boolean"
          }
        },
        "required": [
          "enabled",
          "reopenClosedIncident",
          "lookbackDuration",
          "entitiesMatchingMethod"
        ],
        "type": "object"
      },
      "HostEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a host entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/HostEntityProperties",
            "description": "Host entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Host"
      },
      "HostEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Host entity property bag.",
        "properties": {
          "azureID": {
            "description": "The azure resource id of the VM.",
            "readOnly": true,
            "type": "string"
          },
          "dnsDomain": {
            "description": "The DNS domain that this host belongs to. Should contain the compete DNS suffix for the domain",
            "readOnly": true,
            "type": "string"
          },
          "hostName": {
            "description": "The hostname without the domain suffix.",
            "readOnly": true,
            "type": "string"
          },
          "isDomainJoined": {
            "description": "Determines whether this host belongs to a domain.",
            "readOnly": true,
            "type": "boolean"
          },
          "netBiosName": {
            "description": "The host name (pre-windows2000).",
            "readOnly": true,
            "type": "string"
          },
          "ntDomain": {
            "description": "The NT domain that this host belongs to.",
            "readOnly": true,
            "type": "string"
          },
          "omsAgentID": {
            "description": "The OMS agent id, if the host has OMS agent installed.",
            "readOnly": true,
            "type": "string"
          },
          "osFamily": {
            "description": "The operating system type.",
            "enum": [
              "Linux",
              "Windows",
              "Android",
              "IOS",
              "Unknown"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "OSFamily",
              "values": [
                {
                  "description": "Host with Linux operating system.",
                  "value": "Linux"
                },
                {
                  "description": "Host with Windows operating system.",
                  "value": "Windows"
                },
                {
                  "description": "Host with Android operating system.",
                  "value": "Android"
                },
                {
                  "description": "Host with IOS operating system.",
                  "value": "IOS"
                },
                {
                  "description": "Host with Unknown operating system.",
                  "value": "Unknown"
                }
              ]
            }
          },
          "osVersion": {
            "description": "A free text representation of the operating system. This field is meant to hold specific versions the are more fine grained than OSFamily or future values not supported by OSFamily enumeration",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HuntingBookmark": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a Hunting bookmark entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/HuntingBookmarkProperties",
            "description": "HuntingBookmark entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Bookmark"
      },
      "HuntingBookmarkProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Describes bookmark properties",
        "properties": {
          "created": {
            "description": "The time the bookmark was created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that created the bookmark",
            "type": "object"
          },
          "displayName": {
            "description": "The display name of the bookmark",
            "type": "string"
          },
          "eventTime": {
            "description": "The time of the event",
            "format": "date-time",
            "type": "string"
          },
          "incidentInfo": {
            "$ref": "#/components/schemas/IncidentInfo",
            "description": "Describes an incident that relates to bookmark",
            "type": "object"
          },
          "labels": {
            "description": "List of labels relevant to this bookmark",
            "items": {
              "$ref": "#/components/schemas/Label"
            },
            "type": "array"
          },
          "notes": {
            "description": "The notes of the bookmark",
            "type": "string"
          },
          "query": {
            "description": "The query of the bookmark.",
            "type": "string"
          },
          "queryResult": {
            "description": "The query result of the bookmark.",
            "type": "string"
          },
          "updated": {
            "description": "The last time the bookmark was updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that updated the bookmark",
            "type": "object"
          }
        },
        "required": [
          "displayName",
          "query"
        ],
        "type": "object"
      },
      "IPSyncer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Settings"
          }
        ],
        "description": "Settings with single toggle.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IPSyncerSettingsProperties",
            "description": "IPSyncer properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IPSyncer"
      },
      "IPSyncerSettingsProperties": {
        "description": "IPSyncer property bag.",
        "properties": {
          "isEnabled": {
            "description": "Determines whether the setting is enable or disabled.",
            "readOnly": true,
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "Incident": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          }
        ],
        "description": "Represents an incident in Azure Security Insights.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IncidentProperties",
            "description": "Incident properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "IncidentAdditionalData": {
        "description": "Incident additional data property bag.",
        "properties": {
          "alertProductNames": {
            "description": "List of product names of alerts in the incident",
            "items": {
              "description": "Alert product name",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "alertsCount": {
            "description": "The number of alerts in the incident",
            "readOnly": true,
            "type": "integer"
          },
          "bookmarksCount": {
            "description": "The number of bookmarks in the incident",
            "readOnly": true,
            "type": "integer"
          },
          "commentsCount": {
            "description": "The number of comments in the incident",
            "readOnly": true,
            "type": "integer"
          },
          "tactics": {
            "description": "The tactics associated with incident",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "IncidentAlertList": {
        "description": "List of incident alerts.",
        "properties": {
          "value": {
            "description": "Array of incident alerts.",
            "items": {
              "$ref": "#/components/schemas/SecurityAlert"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IncidentBookmarkList": {
        "description": "List of incident bookmarks.",
        "properties": {
          "value": {
            "description": "Array of incident bookmarks.",
            "items": {
              "$ref": "#/components/schemas/HuntingBookmark"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IncidentClassification": {
        "description": "The reason the incident was closed",
        "enum": [
          "Undetermined",
          "TruePositive",
          "BenignPositive",
          "FalsePositive"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "IncidentClassification",
          "values": [
            {
              "description": "Incident classification was undetermined",
              "value": "Undetermined"
            },
            {
              "description": "Incident was true positive",
              "value": "TruePositive"
            },
            {
              "description": "Incident was benign positive",
              "value": "BenignPositive"
            },
            {
              "description": "Incident was false positive",
              "value": "FalsePositive"
            }
          ]
        }
      },
      "IncidentClassificationReason": {
        "description": "The classification reason the incident was closed with",
        "enum": [
          "SuspiciousActivity",
          "SuspiciousButExpected",
          "IncorrectAlertLogic",
          "InaccurateData"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "IncidentClassificationReason",
          "values": [
            {
              "description": "Classification reason was suspicious activity",
              "value": "SuspiciousActivity"
            },
            {
              "description": "Classification reason was suspicious but expected",
              "value": "SuspiciousButExpected"
            },
            {
              "description": "Classification reason was incorrect alert logic",
              "value": "IncorrectAlertLogic"
            },
            {
              "description": "Classification reason was inaccurate data",
              "value": "InaccurateData"
            }
          ]
        }
      },
      "IncidentComment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          }
        ],
        "description": "Represents an incident comment",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IncidentCommentProperties",
            "description": "Incident comment properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "IncidentCommentList": {
        "description": "List of incident comments.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of comments.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of comments.",
            "items": {
              "$ref": "#/components/schemas/IncidentComment"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IncidentCommentProperties": {
        "description": "Incident comment property bag.",
        "properties": {
          "author": {
            "$ref": "#/components/schemas/ClientInfo",
            "description": "Describes the client that created the comment",
            "readOnly": true,
            "type": "object"
          },
          "createdTimeUtc": {
            "description": "The time the comment was created",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastModifiedTimeUtc": {
            "description": "The time the comment was updated",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "message": {
            "description": "The comment message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "IncidentConfiguration": {
        "description": "Incident Configuration property bag.",
        "properties": {
          "createIncident": {
            "description": "Create incidents from alerts triggered by this analytics rule",
            "type": "boolean"
          },
          "groupingConfiguration": {
            "$ref": "#/components/schemas/GroupingConfiguration",
            "description": "Set how the alerts that are triggered by this analytics rule, are grouped into incidents"
          }
        },
        "required": [
          "createIncident"
        ],
        "type": "object"
      },
      "IncidentEntitiesResponse": {
        "description": "The incident related entities response.",
        "properties": {
          "entities": {
            "description": "Array of the incident related entities.",
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "type": "array"
          },
          "metaData": {
            "description": "The metadata from the incident related entities results.",
            "items": {
              "$ref": "#/components/schemas/IncidentEntitiesResultsMetadata"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "IncidentEntitiesResultsMetadata": {
        "description": "Information of a specific aggregation in the incident related entities result.",
        "properties": {
          "count": {
            "description": "Total number of aggregations of the given kind in the incident related entities result.",
            "format": "int32",
            "type": "integer"
          },
          "entityKind": {
            "$ref": "#/components/schemas/EntityInnerKind",
            "description": "The kind of the aggregated entity."
          }
        },
        "required": [
          "entityKind",
          "count"
        ],
        "type": "object"
      },
      "IncidentInfo": {
        "description": "Describes related incident information for the bookmark",
        "properties": {
          "incidentId": {
            "description": "Incident Id",
            "type": "string"
          },
          "relationName": {
            "description": "Relation Name",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/IncidentSeverity",
            "description": "The severity of the incident",
            "type": "string"
          },
          "title": {
            "description": "The title of the incident",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IncidentLabel": {
        "description": "Represents an incident label",
        "properties": {
          "labelName": {
            "description": "The name of the label",
            "type": "string"
          },
          "labelType": {
            "description": "The type of the label",
            "enum": [
              "User",
              "System"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "IncidentLabelType",
              "values": [
                {
                  "description": "Label manually created by a user",
                  "value": "User"
                },
                {
                  "description": "Label automatically created by the system",
                  "value": "System"
                }
              ]
            }
          }
        },
        "required": [
          "labelName"
        ],
        "type": "object"
      },
      "IncidentList": {
        "description": "List all the incidents.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of incidents.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of incidents.",
            "items": {
              "$ref": "#/components/schemas/Incident"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "IncidentOwnerInfo": {
        "description": "Information on the user an incident is assigned to",
        "properties": {
          "assignedTo": {
            "description": "The name of the user the incident is assigned to.",
            "type": "string"
          },
          "email": {
            "description": "The email of the user the incident is assigned to.",
            "type": "string"
          },
          "objectId": {
            "description": "The object id of the user the incident is assigned to.",
            "format": "uuid",
            "type": "string"
          },
          "userPrincipalName": {
            "description": "The user principal name of the user the incident is assigned to.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IncidentProperties": {
        "description": "Describes incident properties",
        "properties": {
          "additionalData": {
            "$ref": "#/components/schemas/IncidentAdditionalData",
            "description": "Additional data on the incident",
            "readOnly": true,
            "type": "object"
          },
          "classification": {
            "$ref": "#/components/schemas/IncidentClassification",
            "description": "The reason the incident was closed"
          },
          "classificationComment": {
            "description": "Describes the reason the incident was closed",
            "type": "string"
          },
          "classificationReason": {
            "$ref": "#/components/schemas/IncidentClassificationReason",
            "description": "The classification reason the incident was closed with"
          },
          "createdTimeUtc": {
            "description": "The time the incident was created",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the incident",
            "type": "string"
          },
          "firstActivityTimeUtc": {
            "description": "The time of the first activity in the incident",
            "format": "date-time",
            "type": "string"
          },
          "incidentNumber": {
            "description": "A sequential number",
            "readOnly": true,
            "type": "integer"
          },
          "incidentUrl": {
            "description": "The deep-link url to the incident in Azure portal",
            "readOnly": true,
            "type": "string"
          },
          "labels": {
            "description": "List of labels relevant to this incident",
            "items": {
              "$ref": "#/components/schemas/IncidentLabel"
            },
            "type": "array"
          },
          "lastActivityTimeUtc": {
            "description": "The time of the last activity in the incident",
            "format": "date-time",
            "type": "string"
          },
          "lastModifiedTimeUtc": {
            "description": "The last time the incident was updated",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "owner": {
            "$ref": "#/components/schemas/IncidentOwnerInfo",
            "description": "Describes a user that the incident is assigned to",
            "type": "object"
          },
          "providerIncidentId": {
            "description": "The incident ID assigned by the incident provider",
            "type": "string"
          },
          "providerName": {
            "description": "The name of the source provider that generated the incident",
            "type": "string"
          },
          "relatedAnalyticRuleIds": {
            "description": "List of resource ids of Analytic rules related to the incident",
            "items": {
              "description": "Related Analytic rule resource id",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "severity": {
            "$ref": "#/components/schemas/IncidentSeverity",
            "description": "The severity of the incident"
          },
          "status": {
            "$ref": "#/components/schemas/IncidentStatus",
            "description": "The status of the incident"
          },
          "title": {
            "description": "The title of the incident",
            "type": "string"
          }
        },
        "required": [
          "title",
          "severity",
          "status"
        ],
        "type": "object"
      },
      "IncidentSeverity": {
        "description": "The severity of the incident",
        "enum": [
          "High",
          "Medium",
          "Low",
          "Informational"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "IncidentSeverity",
          "values": [
            {
              "description": "High severity",
              "value": "High"
            },
            {
              "description": "Medium severity",
              "value": "Medium"
            },
            {
              "description": "Low severity",
              "value": "Low"
            },
            {
              "description": "Informational severity",
              "value": "Informational"
            }
          ]
        }
      },
      "IncidentStatus": {
        "description": "The status of the incident",
        "enum": [
          "New",
          "Active",
          "Closed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "IncidentStatus",
          "values": [
            {
              "description": "An active incident which isn't being handled currently",
              "value": "New"
            },
            {
              "description": "An active incident which is being handled",
              "value": "Active"
            },
            {
              "description": "A non-active incident",
              "value": "Closed"
            }
          ]
        }
      },
      "IoTDeviceEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents an IoT device entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IoTDeviceEntityProperties",
            "description": "IoTDevice entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "IoTDevice"
      },
      "IoTDeviceEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "IoTDevice entity property bag.",
        "properties": {
          "deviceId": {
            "description": "The ID of the IoT Device in the IoT Hub",
            "readOnly": true,
            "type": "string"
          },
          "deviceName": {
            "description": "The friendly name of the device",
            "readOnly": true,
            "type": "string"
          },
          "deviceType": {
            "description": "The type of the device",
            "readOnly": true,
            "type": "string"
          },
          "edgeId": {
            "description": "The ID of the edge device",
            "readOnly": true,
            "type": "string"
          },
          "firmwareVersion": {
            "description": "The firmware version of the device",
            "readOnly": true,
            "type": "string"
          },
          "hostEntityId": {
            "description": "The Host entity id of this device",
            "readOnly": true,
            "type": "string"
          },
          "iotHubEntityId": {
            "description": "The AzureResource entity id of the IoT Hub",
            "readOnly": true,
            "type": "string"
          },
          "iotSecurityAgentId": {
            "description": "The ID of the security agent running on the device",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "ipAddressEntityId": {
            "description": "The IP entity if of this device",
            "readOnly": true,
            "type": "string"
          },
          "macAddress": {
            "description": "The MAC address of the device",
            "readOnly": true,
            "type": "string"
          },
          "model": {
            "description": "The model of the device",
            "readOnly": true,
            "type": "string"
          },
          "operatingSystem": {
            "description": "The operating system of the device",
            "readOnly": true,
            "type": "string"
          },
          "protocols": {
            "description": "A list of protocols of the IoTDevice entity.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "serialNumber": {
            "description": "The serial number of the device",
            "readOnly": true,
            "type": "string"
          },
          "source": {
            "description": "The source of the device",
            "readOnly": true,
            "type": "string"
          },
          "threatIntelligence": {
            "description": "A list of TI contexts attached to the IoTDevice entity.",
            "items": {
              "$ref": "#/components/schemas/ThreatIntelligence"
            },
            "readOnly": true,
            "type": "array"
          },
          "vendor": {
            "description": "The vendor of the device",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "IpEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents an ip entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/IpEntityProperties",
            "description": "Ip entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Ip"
      },
      "IpEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Ip entity property bag.",
        "properties": {
          "address": {
            "description": "The IP address as string, e.g. 127.0.0.1 (either in Ipv4 or Ipv6)",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/GeoLocation",
            "description": "The geo-location context attached to the ip entity"
          },
          "threatIntelligence": {
            "description": "A list of TI contexts attached to the ip entity.",
            "items": {
              "$ref": "#/components/schemas/ThreatIntelligence"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Label": {
        "description": "Label that will be used to tag and filter on.",
        "type": "string"
      },
      "MCASDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents MCAS (Microsoft Cloud App Security) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MCASDataConnectorProperties",
            "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftCloudAppSecurity"
      },
      "MCASDataConnectorDataTypes": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertsDataTypeOfDataConnector"
          }
        ],
        "description": "The available data types for MCAS (Microsoft Cloud App Security) data connector.",
        "properties": {
          "discoveryLogs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Discovery log data type connection.",
            "type": "object"
          }
        },
        "type": "object"
      },
      "MCASDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "MCAS (Microsoft Cloud App Security) data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/MCASDataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "MDATPDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents MDATP (Microsoft Defender Advanced Threat Protection) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MDATPDataConnectorProperties",
            "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftDefenderAdvancedThreatProtection"
      },
      "MDATPDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          },
          {
            "$ref": "#/components/schemas/DataConnectorWithAlertsProperties"
          }
        ],
        "description": "MDATP (Microsoft Defender Advanced Threat Protection) data connector properties.",
        "type": "object"
      },
      "MLBehaviorAnalyticsAlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRule"
          }
        ],
        "description": "Represents MLBehaviorAnalytics alert rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MLBehaviorAnalyticsAlertRuleProperties",
            "description": "MLBehaviorAnalytics alert rule properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MLBehaviorAnalytics"
      },
      "MLBehaviorAnalyticsAlertRuleProperties": {
        "description": "MLBehaviorAnalytics alert rule base property bag.",
        "properties": {
          "alertRuleTemplateName": {
            "description": "The Name of the alert rule template used to create this rule.",
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alerts created by this alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "description": "Determines whether this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "lastModifiedUtc": {
            "description": "The last time that this alert rule has been modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "The severity for alerts created by this alert rule.",
            "readOnly": true
          },
          "tactics": {
            "description": "The tactics of the alert rule",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "alertRuleTemplateName",
          "enabled"
        ],
        "type": "object"
      },
      "MLBehaviorAnalyticsAlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRuleTemplate"
          }
        ],
        "description": "Represents MLBehaviorAnalytics alert rule template.",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRuleTemplatePropertiesBase"
              }
            ],
            "description": "MLBehaviorAnalytics alert rule template properties.",
            "properties": {
              "severity": {
                "$ref": "#/components/schemas/AlertSeverity",
                "description": "The severity for alerts created by this alert rule."
              },
              "tactics": {
                "description": "The tactics of the alert rule template.",
                "items": {
                  "$ref": "#/components/schemas/AttackTactic"
                },
                "type": "array"
              }
            },
            "required": [
              "displayName",
              "description",
              "status",
              "severity",
              "alertRulesCreatedByTemplateCount"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MLBehaviorAnalytics"
      },
      "MSTIDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents Microsoft Threat Intelligence data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MSTIDataConnectorProperties",
            "description": "Microsoft Threat Intelligence data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftThreatIntelligence"
      },
      "MSTIDataConnectorDataTypes": {
        "description": "The available data types for Microsoft Threat Intelligence Platforms data connector.",
        "properties": {
          "bingSafetyPhishingURL": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Data type for Microsoft Threat Intelligence Platforms data connector.",
            "properties": {
              "lookbackPeriod": {
                "description": "lookback period",
                "type": "string"
              }
            },
            "required": [
              "lookbackPeriod"
            ],
            "type": "object"
          },
          "microsoftEmergingThreatFeed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Data type for Microsoft Threat Intelligence Platforms data connector.",
            "properties": {
              "lookbackPeriod": {
                "description": "lookback period",
                "type": "string"
              }
            },
            "required": [
              "lookbackPeriod"
            ],
            "type": "object"
          }
        },
        "required": [
          "bingSafetyPhishingURL",
          "microsoftEmergingThreatFeed"
        ],
        "type": "object"
      },
      "MSTIDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "Microsoft Threat Intelligence data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/MSTIDataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "MTPDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents MTP (Microsoft Threat Protection) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MTPDataConnectorProperties",
            "description": "MTP (Microsoft Threat Protection) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftThreatProtection"
      },
      "MTPDataConnectorDataTypes": {
        "description": "The available data types for Microsoft Threat Protection Platforms data connector.",
        "properties": {
          "incidents": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Data type for Microsoft Threat Protection Platforms data connector.",
            "type": "object"
          }
        },
        "required": [
          "incidents"
        ],
        "type": "object"
      },
      "MTPDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "MTP (Microsoft Threat Protection) data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/MTPDataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "MailClusterEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a mail cluster entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MailClusterEntityProperties",
            "description": "Mail cluster entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MailCluster"
      },
      "MailClusterEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Mail cluster entity property bag.",
        "properties": {
          "clusterGroup": {
            "description": "The cluster group",
            "readOnly": true,
            "type": "string"
          },
          "clusterQueryEndTime": {
            "description": "The cluster query end time",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "clusterQueryStartTime": {
            "description": "The cluster query start time",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "clusterSourceIdentifier": {
            "description": "The id of the cluster source",
            "readOnly": true,
            "type": "string"
          },
          "clusterSourceType": {
            "description": "The type of the cluster source",
            "readOnly": true,
            "type": "string"
          },
          "countByDeliveryStatus": {
            "description": "Count of mail messages by DeliveryStatus string representation",
            "readOnly": true,
            "type": "object"
          },
          "countByProtectionStatus": {
            "description": "Count of mail messages by ProtectionStatus string representation",
            "readOnly": true,
            "type": "object"
          },
          "countByThreatType": {
            "description": "Count of mail messages by ThreatType string representation",
            "readOnly": true,
            "type": "object"
          },
          "isVolumeAnomaly": {
            "description": "Is this a volume anomaly mail cluster",
            "readOnly": true,
            "type": "boolean"
          },
          "mailCount": {
            "description": "The number of mail messages that are part of the mail cluster",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "networkMessageIds": {
            "description": "The mail message IDs that are part of the mail cluster",
            "items": {
              "description": "A mail message ID",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "query": {
            "description": "The query that was used to identify the messages of the mail cluster",
            "readOnly": true,
            "type": "string"
          },
          "queryTime": {
            "description": "The query time",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "source": {
            "description": "The source of the mail cluster (default is 'O365 ATP')",
            "readOnly": true,
            "type": "string"
          },
          "threats": {
            "description": "The threats of mail messages that are part of the mail cluster",
            "items": {
              "description": "A threat",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MailMessageEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a mail message entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MailMessageEntityProperties",
            "description": "Mail message entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MailMessage"
      },
      "MailMessageEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Mail message entity property bag.",
        "properties": {
          "antispamDirection": {
            "description": "The directionality of this mail message",
            "enum": [
              "Unknown",
              "Inbound",
              "Outbound",
              "Intraorg"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AntispamMailDirection",
              "values": [
                {
                  "description": "Unknown",
                  "value": "Unknown"
                },
                {
                  "description": "Inbound",
                  "value": "Inbound"
                },
                {
                  "description": "Outbound",
                  "value": "Outbound"
                },
                {
                  "description": "Intraorg",
                  "value": "Intraorg"
                }
              ]
            }
          },
          "bodyFingerprintBin1": {
            "description": "The bodyFingerprintBin1",
            "format": "int32",
            "type": "integer"
          },
          "bodyFingerprintBin2": {
            "description": "The bodyFingerprintBin2",
            "format": "int32",
            "type": "integer"
          },
          "bodyFingerprintBin3": {
            "description": "The bodyFingerprintBin3",
            "format": "int32",
            "type": "integer"
          },
          "bodyFingerprintBin4": {
            "description": "The bodyFingerprintBin4",
            "format": "int32",
            "type": "integer"
          },
          "bodyFingerprintBin5": {
            "description": "The bodyFingerprintBin5",
            "format": "int32",
            "type": "integer"
          },
          "deliveryAction": {
            "description": "The delivery action of this mail message like Delivered, Blocked, Replaced etc",
            "enum": [
              "Unknown",
              "DeliveredAsSpam",
              "Delivered",
              "Blocked",
              "Replaced"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeliveryAction",
              "values": [
                {
                  "description": "Unknown",
                  "value": "Unknown"
                },
                {
                  "description": "DeliveredAsSpam",
                  "value": "DeliveredAsSpam"
                },
                {
                  "description": "Delivered",
                  "value": "Delivered"
                },
                {
                  "description": "Blocked",
                  "value": "Blocked"
                },
                {
                  "description": "Replaced",
                  "value": "Replaced"
                }
              ]
            }
          },
          "deliveryLocation": {
            "description": "The delivery location of this mail message like Inbox, JunkFolder etc",
            "enum": [
              "Unknown",
              "Inbox",
              "JunkFolder",
              "DeletedFolder",
              "Quarantine",
              "External",
              "Failed",
              "Dropped",
              "Forwarded"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DeliveryLocation",
              "values": [
                {
                  "description": "Unknown",
                  "value": "Unknown"
                },
                {
                  "description": "Inbox",
                  "value": "Inbox"
                },
                {
                  "description": "JunkFolder",
                  "value": "JunkFolder"
                },
                {
                  "description": "DeletedFolder",
                  "value": "DeletedFolder"
                },
                {
                  "description": "Quarantine",
                  "value": "Quarantine"
                },
                {
                  "description": "External",
                  "value": "External"
                },
                {
                  "description": "Failed",
                  "value": "Failed"
                },
                {
                  "description": "Dropped",
                  "value": "Dropped"
                },
                {
                  "description": "Forwarded",
                  "value": "Forwarded"
                }
              ]
            }
          },
          "fileEntityIds": {
            "description": "The File entity ids of this mail message's attachments",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "internetMessageId": {
            "description": "The internet message id of this mail message",
            "readOnly": true,
            "type": "string"
          },
          "language": {
            "description": "The language of this mail message",
            "readOnly": true,
            "type": "string"
          },
          "networkMessageId": {
            "description": "The network message id of this mail message",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "p1Sender": {
            "description": "The p1 sender's email address",
            "readOnly": true,
            "type": "string"
          },
          "p1SenderDisplayName": {
            "description": "The p1 sender's display name",
            "readOnly": true,
            "type": "string"
          },
          "p1SenderDomain": {
            "description": "The p1 sender's domain",
            "readOnly": true,
            "type": "string"
          },
          "p2Sender": {
            "description": "The p2 sender's email address",
            "readOnly": true,
            "type": "string"
          },
          "p2SenderDisplayName": {
            "description": "The p2 sender's display name",
            "readOnly": true,
            "type": "string"
          },
          "p2SenderDomain": {
            "description": "The p2 sender's domain",
            "readOnly": true,
            "type": "string"
          },
          "receiveDate": {
            "description": "The receive date of this message",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "recipient": {
            "description": "The recipient of this mail message. Note that in case of multiple recipients the mail message is forked and each copy has one recipient",
            "readOnly": true,
            "type": "string"
          },
          "senderIP": {
            "description": "The sender's IP address",
            "readOnly": true,
            "type": "string"
          },
          "subject": {
            "description": "The subject of this mail message",
            "readOnly": true,
            "type": "string"
          },
          "threatDetectionMethods": {
            "description": "The threat detection methods",
            "items": {
              "description": "A threat detection method",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "threats": {
            "description": "The threats of this mail message",
            "items": {
              "description": "A threat of the mail message",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "urls": {
            "description": "The Urls contained in this mail message",
            "items": {
              "description": "A Url contained in this mail message",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MailboxEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a mailbox entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MailboxEntityProperties",
            "description": "Mailbox entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Mailbox"
      },
      "MailboxEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Mailbox entity property bag.",
        "properties": {
          "displayName": {
            "description": "The mailbox's display name",
            "readOnly": true,
            "type": "string"
          },
          "externalDirectoryObjectId": {
            "description": "The AzureAD identifier of mailbox. Similar to AadUserId in account entity but this property is specific to mailbox object on office side",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "mailboxPrimaryAddress": {
            "description": "The mailbox's primary address",
            "readOnly": true,
            "type": "string"
          },
          "upn": {
            "description": "The mailbox's UPN",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MalwareEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a malware entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MalwareEntityProperties",
            "description": "File entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Malware"
      },
      "MalwareEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Malware entity property bag.",
        "properties": {
          "category": {
            "description": "The malware category by the vendor, e.g. Trojan",
            "readOnly": true,
            "type": "string"
          },
          "fileEntityIds": {
            "description": "List of linked file entity identifiers on which the malware was found",
            "items": {
              "description": "file entity id",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "malwareName": {
            "description": "The malware name by the vendor, e.g. Win32/Toga!rfn",
            "readOnly": true,
            "type": "string"
          },
          "processEntityIds": {
            "description": "List of linked process entity identifiers on which the malware was found.",
            "items": {
              "description": "process entity id",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MicrosoftSecurityIncidentCreationAlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRule"
          }
        ],
        "description": "Represents MicrosoftSecurityIncidentCreation rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/MicrosoftSecurityIncidentCreationAlertRuleProperties",
            "description": "MicrosoftSecurityIncidentCreation rule properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftSecurityIncidentCreation"
      },
      "MicrosoftSecurityIncidentCreationAlertRuleCommonProperties": {
        "description": "MicrosoftSecurityIncidentCreation rule common property bag.",
        "properties": {
          "displayNamesExcludeFilter": {
            "description": "the alerts' displayNames on which the cases will not be generated",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "displayNamesFilter": {
            "description": "the alerts' displayNames on which the cases will be generated",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "productFilter": {
            "description": "The alerts' productName on which the cases will be generated",
            "enum": [
              "Microsoft Cloud App Security",
              "Azure Security Center",
              "Azure Advanced Threat Protection",
              "Azure Active Directory Identity Protection",
              "Azure Security Center for IoT",
              "Office 365 Advanced Threat Protection",
              "Microsoft Defender Advanced Threat Protection"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "MicrosoftSecurityProductName"
            }
          },
          "severitiesFilter": {
            "description": "the alerts' severities on which the cases will be generated",
            "items": {
              "$ref": "#/components/schemas/AlertSeverity"
            },
            "type": "array"
          }
        },
        "required": [
          "productFilter"
        ],
        "type": "object"
      },
      "MicrosoftSecurityIncidentCreationAlertRuleProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
          }
        ],
        "description": "MicrosoftSecurityIncidentCreation rule property bag.",
        "properties": {
          "alertRuleTemplateName": {
            "description": "The Name of the alert rule template used to create this rule.",
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alerts created by this alert rule.",
            "type": "string"
          },
          "enabled": {
            "description": "Determines whether this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "lastModifiedUtc": {
            "description": "The last time that this alert has been modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "enabled",
          "productFilter"
        ],
        "type": "object"
      },
      "MicrosoftSecurityIncidentCreationAlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRuleTemplate"
          }
        ],
        "description": "Represents MicrosoftSecurityIncidentCreation rule template.",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRuleTemplatePropertiesBase"
              },
              {
                "$ref": "#/components/schemas/MicrosoftSecurityIncidentCreationAlertRuleCommonProperties"
              }
            ],
            "description": "MicrosoftSecurityIncidentCreation rule template properties",
            "required": [
              "displayName",
              "description",
              "createdDateUTC",
              "status",
              "alertRulesCreatedByTemplateCount",
              "productFilter"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "MicrosoftSecurityIncidentCreation"
      },
      "OfficeATPDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents OfficeATP (Office 365 Advanced Threat Protection) data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/OfficeATPDataConnectorProperties",
            "description": "OfficeATP (Office 365 Advanced Threat Protection) data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "OfficeATP"
      },
      "OfficeATPDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          },
          {
            "$ref": "#/components/schemas/DataConnectorWithAlertsProperties"
          }
        ],
        "description": "OfficeATP (Office 365 Advanced Threat Protection) data connector properties.",
        "type": "object"
      },
      "OfficeDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Represents office data connector.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/OfficeDataConnectorProperties",
            "description": "Office data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Office365"
      },
      "OfficeDataConnectorDataTypes": {
        "description": "The available data types for office data connector.",
        "properties": {
          "exchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Exchange data type connection.",
            "type": "object"
          },
          "sharePoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "SharePoint data type connection.",
            "type": "object"
          },
          "teams": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Teams data type connection.",
            "type": "object"
          }
        },
        "required": [
          "exchange",
          "sharePoint",
          "teams"
        ],
        "type": "object"
      },
      "OfficeDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "Office data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/OfficeDataConnectorDataTypes",
            "description": "The available data types for the connector."
          }
        },
        "required": [
          "dataTypes"
        ],
        "type": "object"
      },
      "Operation": {
        "description": "Operation provided by provider",
        "properties": {
          "display": {
            "description": "Properties of the operation",
            "properties": {
              "description": {
                "description": "Description of the operation",
                "type": "string"
              },
              "operation": {
                "description": "Operation name",
                "type": "string"
              },
              "provider": {
                "description": "Provider name",
                "type": "string"
              },
              "resource": {
                "description": "Resource name",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Name of the operation",
            "type": "string"
          },
          "origin": {
            "description": "The origin of the operation",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationsList": {
        "description": "Lists the operations available in the SecurityInsights RP.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of operations.",
            "type": "string"
          },
          "value": {
            "description": "Array of operations",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "ProcessEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a process entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ProcessEntityProperties",
            "description": "Process entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Process"
      },
      "ProcessEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Process entity property bag.",
        "properties": {
          "accountEntityId": {
            "description": "The account entity id running the processes.",
            "readOnly": true,
            "type": "string"
          },
          "commandLine": {
            "description": "The command line used to create the process",
            "readOnly": true,
            "type": "string"
          },
          "creationTimeUtc": {
            "description": "The time when the process started to run",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "elevationToken": {
            "description": "The elevation token associated with the process.",
            "enum": [
              "Default",
              "Full",
              "Limited"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ElevationToken",
              "values": [
                {
                  "description": "Default elevation token",
                  "value": "Default"
                },
                {
                  "description": "Full elevation token",
                  "value": "Full"
                },
                {
                  "description": "Limited elevation token",
                  "value": "Limited"
                }
              ]
            }
          },
          "hostEntityId": {
            "description": "The host entity id on which the process was running",
            "readOnly": true,
            "type": "string"
          },
          "hostLogonSessionEntityId": {
            "description": "The session entity id in which the process was running",
            "readOnly": true,
            "type": "string"
          },
          "imageFileEntityId": {
            "description": "Image file entity id",
            "readOnly": true,
            "type": "string"
          },
          "parentProcessEntityId": {
            "description": "The parent process entity id.",
            "readOnly": true,
            "type": "string"
          },
          "processId": {
            "description": "The process ID",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegistryKeyEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a registry key entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RegistryKeyEntityProperties",
            "description": "RegistryKey entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "RegistryKey"
      },
      "RegistryKeyEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "RegistryKey entity property bag.",
        "properties": {
          "hive": {
            "description": "the hive that holds the registry key.",
            "enum": [
              "HKEY_LOCAL_MACHINE",
              "HKEY_CLASSES_ROOT",
              "HKEY_CURRENT_CONFIG",
              "HKEY_USERS",
              "HKEY_CURRENT_USER_LOCAL_SETTINGS",
              "HKEY_PERFORMANCE_DATA",
              "HKEY_PERFORMANCE_NLSTEXT",
              "HKEY_PERFORMANCE_TEXT",
              "HKEY_A",
              "HKEY_CURRENT_USER"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RegistryHive",
              "values": [
                {
                  "description": "HKEY_LOCAL_MACHINE",
                  "value": "HKEY_LOCAL_MACHINE"
                },
                {
                  "description": "HKEY_CLASSES_ROOT",
                  "value": "HKEY_CLASSES_ROOT"
                },
                {
                  "description": "HKEY_CURRENT_CONFIG",
                  "value": "HKEY_CURRENT_CONFIG"
                },
                {
                  "description": "HKEY_USERS",
                  "value": "HKEY_USERS"
                },
                {
                  "description": "HKEY_CURRENT_USER_LOCAL_SETTINGS",
                  "value": "HKEY_CURRENT_USER_LOCAL_SETTINGS"
                },
                {
                  "description": "HKEY_PERFORMANCE_DATA",
                  "value": "HKEY_PERFORMANCE_DATA"
                },
                {
                  "description": "HKEY_PERFORMANCE_NLSTEXT",
                  "value": "HKEY_PERFORMANCE_NLSTEXT"
                },
                {
                  "description": "HKEY_PERFORMANCE_TEXT",
                  "value": "HKEY_PERFORMANCE_TEXT"
                },
                {
                  "description": "HKEY_A",
                  "value": "HKEY_A"
                },
                {
                  "description": "HKEY_CURRENT_USER",
                  "value": "HKEY_CURRENT_USER"
                }
              ]
            }
          },
          "key": {
            "description": "The registry key path.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "RegistryValueEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a registry value entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RegistryValueEntityProperties",
            "description": "RegistryKey entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "RegistryValue"
      },
      "RegistryValueEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "RegistryValue entity property bag.",
        "properties": {
          "keyEntityId": {
            "description": "The registry key entity id.",
            "readOnly": true,
            "type": "string"
          },
          "valueData": {
            "description": "String formatted representation of the value data.",
            "readOnly": true,
            "type": "string"
          },
          "valueName": {
            "description": "The registry value name.",
            "readOnly": true,
            "type": "string"
          },
          "valueType": {
            "description": "Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.",
            "enum": [
              "None",
              "Unknown",
              "String",
              "ExpandString",
              "Binary",
              "DWord",
              "MultiString",
              "QWord"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "RegistryValueKind",
              "values": [
                {
                  "description": "None",
                  "value": "None"
                },
                {
                  "description": "Unknown value type",
                  "value": "Unknown"
                },
                {
                  "description": "String value type",
                  "value": "String"
                },
                {
                  "description": "ExpandString value type",
                  "value": "ExpandString"
                },
                {
                  "description": "Binary value type",
                  "value": "Binary"
                },
                {
                  "description": "DWord value type",
                  "value": "DWord"
                },
                {
                  "description": "MultiString value type",
                  "value": "MultiString"
                },
                {
                  "description": "QWord value type",
                  "value": "QWord"
                }
              ]
            }
          }
        },
        "type": "object"
      },
      "Relation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          }
        ],
        "description": "Represents a relation between two resources",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RelationProperties",
            "description": "Relation properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "RelationList": {
        "description": "List of relations.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of relations.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of relations.",
            "items": {
              "$ref": "#/components/schemas/Relation"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "RelationProperties": {
        "description": "Relation property bag.",
        "properties": {
          "relatedResourceId": {
            "description": "The resource ID of the related resource",
            "type": "string"
          },
          "relatedResourceKind": {
            "description": "The resource kind of the related resource",
            "readOnly": true,
            "type": "string"
          },
          "relatedResourceName": {
            "description": "The name of the related resource",
            "readOnly": true,
            "type": "string"
          },
          "relatedResourceType": {
            "description": "The resource type of the related resource",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "relatedResourceId"
        ],
        "type": "object"
      },
      "Resource": {
        "description": "An azure resource object",
        "properties": {
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Azure resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ResourceWithEtag": {
        "description": "An azure resource object with an Etag property",
        "properties": {
          "etag": {
            "description": "Etag of the azure resource",
            "type": "string"
          },
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "Azure resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "ScheduledAlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRule"
          }
        ],
        "description": "Represents scheduled alert rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ScheduledAlertRuleProperties",
            "description": "Scheduled alert rule properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Scheduled"
      },
      "ScheduledAlertRuleCommonProperties": {
        "description": "Scheduled alert rule template property bag.",
        "properties": {
          "eventGroupingSettings": {
            "$ref": "#/components/schemas/EventGroupingSettings",
            "description": "The event grouping settings."
          },
          "query": {
            "description": "The query that creates alerts for this rule.",
            "type": "string"
          },
          "queryFrequency": {
            "description": "The frequency (in ISO 8601 duration format) for this alert rule to run.",
            "format": "duration",
            "type": "string"
          },
          "queryPeriod": {
            "description": "The period (in ISO 8601 duration format) that this alert rule looks at.",
            "format": "duration",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "The severity for alerts created by this alert rule."
          },
          "triggerOperator": {
            "$ref": "#/components/schemas/AlertRuleTriggerOperator",
            "description": "The operation against the threshold that triggers alert rule."
          },
          "triggerThreshold": {
            "description": "The threshold triggers this alert rule.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ScheduledAlertRuleProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ScheduledAlertRuleCommonProperties"
          }
        ],
        "description": "Scheduled alert rule base property bag.",
        "properties": {
          "alertRuleTemplateName": {
            "description": "The Name of the alert rule template used to create this rule.",
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alerts created by this alert rule.",
            "type": "string"
          },
          "enabled": {
            "description": "Determines whether this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "incidentConfiguration": {
            "$ref": "#/components/schemas/IncidentConfiguration",
            "description": "The settings of the incidents that created from alerts triggered by this analytics rule"
          },
          "lastModifiedUtc": {
            "description": "The last time that this alert rule has been modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "suppressionDuration": {
            "description": "The suppression (in ISO 8601 duration format) to wait since last time this alert rule been triggered.",
            "format": "duration",
            "type": "string"
          },
          "suppressionEnabled": {
            "description": "Determines whether the suppression for this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "tactics": {
            "description": "The tactics of the alert rule",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "type": "array"
          }
        },
        "required": [
          "displayName",
          "enabled",
          "severity",
          "query",
          "queryFrequency",
          "queryPeriod",
          "triggerOperator",
          "triggerThreshold",
          "suppressionEnabled",
          "suppressionDuration"
        ],
        "type": "object"
      },
      "ScheduledAlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRuleTemplate"
          }
        ],
        "description": "Represents scheduled alert rule template.",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRuleTemplatePropertiesBase"
              },
              {
                "$ref": "#/components/schemas/ScheduledAlertRuleCommonProperties"
              }
            ],
            "description": "Scheduled alert rule template properties",
            "properties": {
              "tactics": {
                "description": "The tactics of the alert rule template",
                "items": {
                  "$ref": "#/components/schemas/AttackTactic"
                },
                "type": "array"
              }
            },
            "required": [
              "displayName",
              "description",
              "status",
              "alertRulesCreatedByTemplateCount",
              "severity",
              "query",
              "queryFrequency",
              "queryPeriod",
              "triggerOperator",
              "triggerThreshold"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Scheduled"
      },
      "SecurityAlert": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a security alert entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SecurityAlertProperties",
            "description": "SecurityAlert entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "SecurityAlert"
      },
      "SecurityAlertProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "SecurityAlert entity property bag.",
        "properties": {
          "alertDisplayName": {
            "description": "The display name of the alert.",
            "readOnly": true,
            "type": "string"
          },
          "alertLink": {
            "description": "The uri link of the alert.",
            "readOnly": true,
            "type": "string"
          },
          "alertType": {
            "description": "The type name of the alert.",
            "readOnly": true,
            "type": "string"
          },
          "compromisedEntity": {
            "description": "Display name of the main entity being reported on.",
            "readOnly": true,
            "type": "string"
          },
          "confidenceLevel": {
            "description": "The confidence level of this alert.",
            "enum": [
              "Unknown",
              "Low",
              "High"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConfidenceLevel",
              "values": [
                {
                  "description": "Unknown confidence, the is the default value",
                  "value": "Unknown"
                },
                {
                  "description": "Low confidence, meaning we have some doubts this is indeed malicious or part of an attack",
                  "value": "Low"
                },
                {
                  "description": "High confidence that the alert is true positive malicious",
                  "value": "High"
                }
              ]
            }
          },
          "confidenceReasons": {
            "description": "The confidence reasons",
            "items": {
              "description": "confidence reason item",
              "properties": {
                "reason": {
                  "description": "The reason's description",
                  "readOnly": true,
                  "type": "string"
                },
                "reasonType": {
                  "description": "The type (category) of the reason",
                  "readOnly": true,
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "confidenceScore": {
            "description": "The confidence score of the alert.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "confidenceScoreStatus": {
            "description": "The confidence score calculation status, i.e. indicating if score calculation is pending for this alert, not applicable or final.",
            "enum": [
              "NotApplicable",
              "InProcess",
              "NotFinal",
              "Final"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "ConfidenceScoreStatus",
              "values": [
                {
                  "description": "Score will not be calculated for this alert as it is not supported by virtual analyst",
                  "value": "NotApplicable"
                },
                {
                  "description": "No score was set yet and calculation is in progress",
                  "value": "InProcess"
                },
                {
                  "description": "Score is calculated and shown as part of the alert, but may be updated again at a later time following the processing of additional data",
                  "value": "NotFinal"
                },
                {
                  "description": "Final score was calculated and available",
                  "value": "Final"
                }
              ]
            }
          },
          "description": {
            "description": "Alert description.",
            "readOnly": true,
            "type": "string"
          },
          "endTimeUtc": {
            "description": "The impact end time of the alert (the time of the last event contributing to the alert).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "intent": {
            "description": "Holds the alert intent stage(s) mapping for this alert.",
            "enum": [
              "Unknown",
              "Probing",
              "Exploitation",
              "Persistence",
              "PrivilegeEscalation",
              "DefenseEvasion",
              "CredentialAccess",
              "Discovery",
              "LateralMovement",
              "Execution",
              "Collection",
              "Exfiltration",
              "CommandAndControl",
              "Impact"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "KillChainIntent",
              "values": [
                {
                  "description": "The default value.",
                  "value": "Unknown"
                },
                {
                  "description": "Probing could be an attempt to access a certain resource regardless of a malicious intent or a failed attempt to gain access to a target system to gather information prior to exploitation. This step is usually detected as an attempt originating from outside the network in attempt to scan the target system and find a way in.",
                  "value": "Probing"
                },
                {
                  "description": "Exploitation is the stage where an attacker manage to get foothold on the attacked resource. This stage is applicable not only for compute hosts, but also for resources such as user accounts, certificates etc. Adversaries will often be able to control the resource after this stage.",
                  "value": "Exploitation"
                },
                {
                  "description": "Persistence is any access, action, or configuration change to a system that gives an adversary a persistent presence on that system. Adversaries will often need to maintain access to systems through interruptions such as system restarts, loss of credentials, or other failures that would require a remote access tool to restart or alternate backdoor for them to regain access.",
                  "value": "Persistence"
                },
                {
                  "description": "Privilege escalation is the result of actions that allow an adversary to obtain a higher level of permissions on a system or network. Certain tools or actions require a higher level of privilege to work and are likely necessary at many points throughout an operation. User accounts with permissions to access specific systems or perform specific functions necessary for adversaries to achieve their objective may also be considered an escalation of privilege.",
                  "value": "PrivilegeEscalation"
                },
                {
                  "description": "Defense evasion consists of techniques an adversary may use to evade detection or avoid other defenses. Sometimes these actions are the same as or variations of techniques in other categories that have the added benefit of subverting a particular defense or mitigation. ",
                  "value": "DefenseEvasion"
                },
                {
                  "description": "Credential access represents techniques resulting in access to or control over system, domain, or service credentials that are used within an enterprise environment. Adversaries will likely attempt to obtain legitimate credentials from users or administrator accounts (local system administrator or domain users with administrator access) to use within the network. With sufficient access within a network, an adversary can create accounts for later use within the environment.",
                  "value": "CredentialAccess"
                },
                {
                  "description": "Discovery consists of techniques that allow the adversary to gain knowledge about the system and internal network. When adversaries gain access to a new system, they must orient themselves to what they now have control of and what benefits operating from that system give to their current objective or overall goals during the intrusion. The operating system provides many native tools that aid in this post-compromise information-gathering phase.",
                  "value": "Discovery"
                },
                {
                  "description": "Lateral movement consists of techniques that enable an adversary to access and control remote systems on a network and could, but does not necessarily, include execution of tools on remote systems. The lateral movement techniques could allow an adversary to gather information from a system without needing additional tools, such as a remote access tool. An adversary can use lateral movement for many purposes, including remote Execution of tools, pivoting to additional systems, access to specific information or files, access to additional credentials, or to cause an effect.",
                  "value": "LateralMovement"
                },
                {
                  "description": "The execution tactic represents techniques that result in execution of adversary-controlled code on a local or remote system. This tactic is often used in conjunction with lateral movement to expand access to remote systems on a network.",
                  "value": "Execution"
                },
                {
                  "description": "Collection consists of techniques used to identify and gather information, such as sensitive files, from a target network prior to exfiltration. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                  "value": "Collection"
                },
                {
                  "description": "Exfiltration refers to techniques and attributes that result or aid in the adversary removing files and information from a target network. This category also covers locations on a system or network where the adversary may look for information to exfiltrate.",
                  "value": "Exfiltration"
                },
                {
                  "description": "The command and control tactic represents how adversaries communicate with systems under their control within a target network.",
                  "value": "CommandAndControl"
                },
                {
                  "description": "The impact intent primary objective is to directly reduce the availability or integrity of a system, service, or network; including manipulation of data to impact a business or operational process. This would often refer to techniques such as ransom-ware, defacement, data manipulation and others.",
                  "value": "Impact"
                }
              ]
            }
          },
          "processingEndTime": {
            "description": "The time the alert was made available for consumption.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "productComponentName": {
            "description": "The name of a component inside the product which generated the alert.",
            "readOnly": true,
            "type": "string"
          },
          "productName": {
            "description": "The name of the product which published this alert.",
            "readOnly": true,
            "type": "string"
          },
          "productVersion": {
            "description": "The version of the product generating the alert.",
            "readOnly": true,
            "type": "string"
          },
          "providerAlertId": {
            "description": "The identifier of the alert inside the product which generated the alert.",
            "readOnly": true,
            "type": "string"
          },
          "remediationSteps": {
            "description": "Manual action items to take to remediate the alert.",
            "items": {
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "resourceIdentifiers": {
            "description": "The list of resource identifiers of the alert.",
            "items": {
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "The severity of the alert"
          },
          "startTimeUtc": {
            "description": "The impact start time of the alert (the time of the first event contributing to the alert).",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "description": "The lifecycle status of the alert.",
            "enum": [
              "Unknown",
              "New",
              "Resolved",
              "Dismissed",
              "InProgress"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "AlertStatus",
              "values": [
                {
                  "description": "Unknown value",
                  "value": "Unknown"
                },
                {
                  "description": "New alert",
                  "value": "New"
                },
                {
                  "description": "Alert closed after handling",
                  "value": "Resolved"
                },
                {
                  "description": "Alert dismissed as false positive",
                  "value": "Dismissed"
                },
                {
                  "description": "Alert is being handled",
                  "value": "InProgress"
                }
              ]
            }
          },
          "systemAlertId": {
            "description": "Holds the product identifier of the alert for the product.",
            "readOnly": true,
            "type": "string"
          },
          "tactics": {
            "description": "The tactics of the alert",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "readOnly": true,
            "type": "array"
          },
          "timeGenerated": {
            "description": "The time the alert was generated.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "vendorName": {
            "description": "The name of the vendor that raise the alert.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SecurityGroupEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a security group entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SecurityGroupEntityProperties",
            "description": "SecurityGroup entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "SecurityGroup"
      },
      "SecurityGroupEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "SecurityGroup entity property bag.",
        "properties": {
          "distinguishedName": {
            "description": "The group distinguished name",
            "readOnly": true,
            "type": "string"
          },
          "objectGuid": {
            "description": "A single-value attribute that is the unique identifier for the object, assigned by active directory.",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "sid": {
            "description": "The SID attribute is a single-value attribute that specifies the security identifier (SID) of the group",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SettingList": {
        "description": "List of all the settings.",
        "properties": {
          "value": {
            "description": "Array of settings.",
            "items": {
              "$ref": "#/components/schemas/Settings"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "Settings": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          },
          {
            "$ref": "#/components/schemas/SettingsKind"
          }
        ],
        "description": "The Setting.",
        "discriminator": {
          "propertyName": "kind"
        },
        "type": "object"
      },
      "SettingsKind": {
        "description": "Describes an Azure resource with kind.",
        "properties": {
          "kind": {
            "description": "The kind of the setting",
            "enum": [
              "Anomalies",
              "EyesOn",
              "EntityAnalytics",
              "Ueba"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SettingKind"
            }
          }
        },
        "required": [
          "kind"
        ],
        "type": "object"
      },
      "SubmissionMailEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a submission mail entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/SubmissionMailEntityProperties",
            "description": "Submission mail entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "SubmissionMail"
      },
      "SubmissionMailEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Submission mail entity property bag.",
        "properties": {
          "networkMessageId": {
            "description": "The network message id of email to which submission belongs",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "recipient": {
            "description": "The recipient of the mail",
            "readOnly": true,
            "type": "string"
          },
          "reportType": {
            "description": "The submission type for the given instance. This maps to Junk, Phish, Malware or NotJunk.",
            "readOnly": true,
            "type": "string"
          },
          "sender": {
            "description": "The sender of the mail",
            "readOnly": true,
            "type": "string"
          },
          "senderIp": {
            "description": "The sender's IP",
            "readOnly": true,
            "type": "string"
          },
          "subject": {
            "description": "The subject of submission mail",
            "readOnly": true,
            "type": "string"
          },
          "submissionDate": {
            "description": "The submission date",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "submissionId": {
            "description": "The submission id",
            "format": "uuid",
            "readOnly": true,
            "type": "string"
          },
          "submitter": {
            "description": "The submitter",
            "readOnly": true,
            "type": "string"
          },
          "timestamp": {
            "description": "The Time stamp when the message is received (Mail)",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "TIDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Data connector to pull threat intelligence data from TIP products.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TIDataConnectorProperties",
            "description": "Threat Intelligence Platforms data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ThreatIntelligence"
      },
      "TIDataConnectorDataTypes": {
        "description": "The available data types for Threat Intelligence Platforms data connector.",
        "properties": {
          "indicators": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Data type for Threat Intelligence Platforms data connector.",
            "type": "object"
          }
        },
        "required": [
          "indicators"
        ],
        "type": "object"
      },
      "TIDataConnectorProperties": {
        "description": "TI (Threat Intelligence) data connector properties.",
        "properties": {
          "dataTypes": {
            "$ref": "#/components/schemas/TIDataConnectorDataTypes",
            "description": "The available data types for the connector."
          },
          "tenantId": {
            "description": "The tenant id to connect to, and get the data from.",
            "type": "string"
          },
          "tipLookbackPeriod": {
            "description": "The lookback period for the feed to be imported.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "tenantId",
          "dataTypes"
        ],
        "type": "object"
      },
      "ThreatIntelligence": {
        "description": "ThreatIntelligence property bag.",
        "properties": {
          "confidence": {
            "description": "Confidence (must be between 0 and 1)",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "providerName": {
            "description": "Name of the provider from whom this Threat Intelligence information was received",
            "readOnly": true,
            "type": "string"
          },
          "reportLink": {
            "description": "Report link",
            "readOnly": true,
            "type": "string"
          },
          "threatDescription": {
            "description": "Threat description (free text)",
            "readOnly": true,
            "type": "string"
          },
          "threatName": {
            "description": "Threat name (e.g. \"Jedobot malware\")",
            "readOnly": true,
            "type": "string"
          },
          "threatType": {
            "description": "Threat type (e.g. \"Botnet\")",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ThreatIntelligenceAlertRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRule"
          }
        ],
        "description": "Represents Threat Intelligence alert rule.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/ThreatIntelligenceAlertRuleProperties",
            "description": "Threat Intelligence alert rule properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ThreatIntelligence"
      },
      "ThreatIntelligenceAlertRuleProperties": {
        "description": "Threat Intelligence alert rule base property bag.",
        "properties": {
          "alertRuleTemplateName": {
            "description": "The Name of the alert rule template used to create this rule.",
            "type": "string"
          },
          "description": {
            "description": "The description of the alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "displayName": {
            "description": "The display name for alerts created by this alert rule.",
            "readOnly": true,
            "type": "string"
          },
          "enabled": {
            "description": "Determines whether this alert rule is enabled or disabled.",
            "type": "boolean"
          },
          "lastModifiedUtc": {
            "description": "The last time that this alert has been modified.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "The severity for alerts created by this alert rule.",
            "readOnly": true
          },
          "tactics": {
            "description": "The tactics of the alert rule",
            "items": {
              "$ref": "#/components/schemas/AttackTactic"
            },
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "alertRuleTemplateName",
          "enabled"
        ],
        "type": "object"
      },
      "ThreatIntelligenceAlertRuleTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AlertRuleTemplate"
          }
        ],
        "description": "Represents Threat Intelligence alert rule template.",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlertRuleTemplatePropertiesBase"
              }
            ],
            "description": "Threat Intelligence alert rule template properties",
            "properties": {
              "severity": {
                "$ref": "#/components/schemas/AlertSeverity",
                "description": "The severity for alerts created by this alert rule."
              },
              "tactics": {
                "description": "The tactics of the alert rule template",
                "items": {
                  "$ref": "#/components/schemas/AttackTactic"
                },
                "type": "array"
              }
            },
            "required": [
              "displayName",
              "description",
              "status",
              "severity",
              "alertRulesCreatedByTemplateCount"
            ],
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ThreatIntelligence"
      },
      "TiTaxiiDataConnector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnector"
          }
        ],
        "description": "Data connector to pull Threat intelligence data from TAXII 2.0/2.1 server",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/TiTaxiiDataConnectorProperties",
            "description": "Threat intelligence TAXII data connector properties.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "ThreatIntelligenceTaxii"
      },
      "TiTaxiiDataConnectorDataTypes": {
        "description": "The available data types for Threat Intelligence TAXII data connector.",
        "properties": {
          "taxiiClient": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataConnectorDataTypeCommon"
              }
            ],
            "description": "Data type for TAXII connector.",
            "type": "object"
          }
        },
        "required": [
          "taxiiClient"
        ],
        "type": "object"
      },
      "TiTaxiiDataConnectorProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DataConnectorTenantId"
          }
        ],
        "description": "Threat Intelligence TAXII data connector properties.",
        "properties": {
          "collectionId": {
            "description": "The collection id of the TAXII server.",
            "type": "string"
          },
          "dataTypes": {
            "$ref": "#/components/schemas/TiTaxiiDataConnectorDataTypes",
            "description": "The available data types for Threat Intelligence TAXII data connector."
          },
          "friendlyName": {
            "description": "The friendly name for the TAXII server.",
            "type": "string"
          },
          "password": {
            "description": "The password for the TAXII server.",
            "type": "string"
          },
          "pollingFrequency": {
            "description": "The polling frequency for the TAXII server.",
            "enum": [
              "OnceAMinute",
              "OnceAnHour",
              "OnceADay"
            ],
            "nullable": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "PollingFrequency",
              "values": [
                {
                  "description": "Once a minute",
                  "value": "OnceAMinute"
                },
                {
                  "description": "Once an hour",
                  "value": "OnceAnHour"
                },
                {
                  "description": "Once a day",
                  "value": "OnceADay"
                }
              ]
            }
          },
          "taxiiLookbackPeriod": {
            "description": "The lookback period for the TAXII server.",
            "format": "date-time",
            "nullable": true,
            "type": "string"
          },
          "taxiiServer": {
            "description": "The API root for the TAXII server.",
            "type": "string"
          },
          "userName": {
            "description": "The userName for the TAXII server.",
            "type": "string"
          },
          "workspaceId": {
            "description": "The workspace id.",
            "type": "string"
          }
        },
        "required": [
          "dataTypes",
          "pollingFrequency"
        ],
        "type": "object"
      },
      "Ueba": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Settings"
          }
        ],
        "description": "Settings with single toggle.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UebaProperties",
            "description": "Ueba properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Ueba"
      },
      "UebaDataSources": {
        "description": "The data source that enriched by ueba.",
        "enum": [
          "AuditLogs",
          "AzureActivity",
          "SecurityEvent",
          "SigninLogs"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "UebaDataSources"
        }
      },
      "UebaProperties": {
        "description": "Ueba property bag.",
        "properties": {
          "dataSources": {
            "description": "The relevant data sources that enriched by ueba",
            "items": {
              "$ref": "#/components/schemas/UebaDataSources"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UrlEntity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          }
        ],
        "description": "Represents a url entity.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/UrlEntityProperties",
            "description": "Url entity properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object",
        "x-ms-discriminator-value": "Url"
      },
      "UrlEntityProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityCommonProperties"
          }
        ],
        "description": "Url entity property bag.",
        "properties": {
          "url": {
            "description": "A full URL the entity points to",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserInfo": {
        "description": "User information that made some action",
        "properties": {
          "email": {
            "description": "The email of the user.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the user.",
            "readOnly": true,
            "type": "string"
          },
          "objectId": {
            "description": "The object id of the user.",
            "format": "uuid",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "Watchlist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          }
        ],
        "description": "Represents a Watchlist in Azure Security Insights.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WatchlistProperties",
            "description": "Watchlist properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WatchlistItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResourceWithEtag"
          }
        ],
        "description": "Represents a Watchlist item in Azure Security Insights.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WatchlistItemProperties",
            "description": "Watchlist Item properties",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "WatchlistItemList": {
        "description": "List all the watchlist items.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of watchlist item.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of watchlist items.",
            "items": {
              "$ref": "#/components/schemas/WatchlistItem"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WatchlistItemProperties": {
        "description": "Describes watchlist item properties",
        "properties": {
          "created": {
            "description": "The time the watchlist item was created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that created the watchlist item",
            "type": "object"
          },
          "entityMapping": {
            "description": "key-value pairs for a watchlist item entity mapping",
            "type": "object"
          },
          "isDeleted": {
            "description": "A flag that indicates if the watchlist item is deleted or not",
            "type": "boolean"
          },
          "itemsKeyValue": {
            "description": "key-value pairs for a watchlist item",
            "type": "object"
          },
          "tenantId": {
            "description": "The tenantId to which the watchlist item belongs to",
            "type": "string"
          },
          "updated": {
            "description": "The last time the watchlist item was updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that updated the watchlist item",
            "type": "object"
          },
          "watchlistItemId": {
            "description": "The id (a Guid) of the watchlist item",
            "type": "string"
          },
          "watchlistItemType": {
            "description": "The type of the watchlist item",
            "type": "string"
          }
        },
        "required": [
          "itemsKeyValue"
        ],
        "type": "object"
      },
      "WatchlistList": {
        "description": "List all the watchlists.",
        "properties": {
          "nextLink": {
            "description": "URL to fetch the next set of watchlists.",
            "readOnly": true,
            "type": "string"
          },
          "value": {
            "description": "Array of watchlist.",
            "items": {
              "$ref": "#/components/schemas/Watchlist"
            },
            "type": "array"
          }
        },
        "required": [
          "value"
        ],
        "type": "object"
      },
      "WatchlistProperties": {
        "description": "Describes watchlist properties",
        "properties": {
          "contentType": {
            "description": "The content type of the raw content. Example : text/csv or text/tsv ",
            "type": "string"
          },
          "created": {
            "description": "The time the watchlist was created",
            "format": "date-time",
            "type": "string"
          },
          "createdBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that created the watchlist",
            "type": "object"
          },
          "defaultDuration": {
            "description": "The default duration of a watchlist (in ISO 8601 duration format)",
            "format": "duration",
            "type": "string"
          },
          "description": {
            "description": "A description of the watchlist",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the watchlist",
            "type": "string"
          },
          "isDeleted": {
            "description": "A flag that indicates if the watchlist is deleted or not",
            "type": "boolean"
          },
          "labels": {
            "description": "List of labels relevant to this watchlist",
            "items": {
              "$ref": "#/components/schemas/Label"
            },
            "type": "array"
          },
          "numberOfLinesToSkip": {
            "description": "The number of lines in a csv/tsv content to skip before the header",
            "format": "int32",
            "type": "integer"
          },
          "provider": {
            "description": "The provider of the watchlist",
            "type": "string"
          },
          "rawContent": {
            "description": "The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint",
            "type": "string"
          },
          "source": {
            "description": "The source of the watchlist",
            "enum": [
              "Local file",
              "Remote storage"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "source"
            }
          },
          "tenantId": {
            "description": "The tenantId where the watchlist belongs to",
            "type": "string"
          },
          "updated": {
            "description": "The last time the watchlist was updated",
            "format": "date-time",
            "type": "string"
          },
          "updatedBy": {
            "$ref": "#/components/schemas/UserInfo",
            "description": "Describes a user that updated the watchlist",
            "type": "object"
          },
          "uploadStatus": {
            "description": "The status of the Watchlist upload : New, InProgress or Complete. Pls note : When a Watchlist upload status is equal to InProgress, the Watchlist cannot be deleted",
            "type": "string"
          },
          "watchlistAlias": {
            "description": "The alias of the watchlist",
            "type": "string"
          },
          "watchlistId": {
            "description": "The id (a Guid) of the watchlist",
            "type": "string"
          },
          "watchlistItemsCount": {
            "description": "The number of Watchlist Items in the Watchlist",
            "format": "int32",
            "type": "integer"
          },
          "watchlistType": {
            "description": "The type of the watchlist",
            "type": "string"
          }
        },
        "required": [
          "displayName",
          "source",
          "provider"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}