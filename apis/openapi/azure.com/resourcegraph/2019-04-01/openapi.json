{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Resource Graph API Reference",
    "title": "Azure Resource Graph",
    "version": "2019-04-01",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/resourcegraph/resource-manager/Microsoft.ResourceGraph/stable/2019-04-01/resourcegraph.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/providers/Microsoft.ResourceGraph/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationListResult"
                }
              }
            },
            "description": "OK. The request has succeeded."
          }
        },
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available REST API operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/providers/Microsoft.ResourceGraph/resources": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            },
            "description": "Result of the query operation"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "An error occurred while processing the request. See the error.code parameter to identify the specific error."
          }
        },
        "tags": [
          "Resources"
        ],
        "externalDocs": {
          "description": "Learn more about the query syntax here",
          "url": "https://aka.ms/resource-graph/learntoquery"
        },
        "description": "Queries the resources managed by Azure Resource Manager for all subscriptions specified in the request.",
        "operationId": "Resources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "description": "Request specifying query and its options.",
          "required": true
        },
        "x-ms-examples": {
          "Access a properties field": {
            "$ref": "./examples/ResourcesPropertiesQuery.json"
          },
          "Access a properties field through alias": {
            "$ref": "./examples/ResourcesAliasQuery.json"
          },
          "Basic query": {
            "$ref": "./examples/ResourcesBasicQuery.json"
          },
          "Complex query": {
            "$ref": "./examples/ResourcesComplexQuery.json"
          },
          "Filter resources": {
            "$ref": "./examples/ResourcesFilterQuery.json"
          },
          "First page query": {
            "$ref": "./examples/ResourcesFirstPageQuery.json"
          },
          "Next page query": {
            "$ref": "./examples/ResourcesNextPageQuery.json"
          },
          "Query options": {
            "$ref": "./examples/ResourcesQueryOptions.json"
          },
          "Query with a facet request": {
            "$ref": "./examples/ResourcesFacetQuery.json"
          },
          "Random page query": {
            "$ref": "./examples/ResourcesRandomPageQuery.json"
          },
          "Summarize resources by location": {
            "$ref": "./examples/ResourcesSummarizeQuery.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "API version.",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Column": {
        "description": "Query result column descriptor.",
        "properties": {
          "name": {
            "description": "Column name.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ColumnDataType",
            "description": "Column data type."
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object"
      },
      "ColumnDataType": {
        "description": "Data type of a column in a table.",
        "enum": [
          "string",
          "integer",
          "number",
          "boolean",
          "object"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": false,
          "name": "ColumnDataType"
        }
      },
      "Error": {
        "description": "Error details.",
        "properties": {
          "code": {
            "description": "Error code identifying the specific error.",
            "type": "string"
          },
          "details": {
            "description": "Error details",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            },
            "type": "array"
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "Error info.",
        "type": "object"
      },
      "ErrorDetails": {
        "additionalProperties": {
          "type": "object"
        },
        "properties": {
          "code": {
            "description": "Error code identifying the specific error.",
            "type": "string"
          },
          "message": {
            "description": "A human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "title": "Error details.",
        "type": "object"
      },
      "ErrorResponse": {
        "description": "An error response from the API.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error",
            "description": "Error information."
          }
        },
        "required": [
          "error"
        ],
        "title": "Error response.",
        "type": "object"
      },
      "Facet": {
        "description": "A facet containing additional statistics on the response of a query. Can be either FacetResult or FacetError.",
        "discriminator": {
          "propertyName": "resultType"
        },
        "properties": {
          "expression": {
            "description": "Facet expression, same as in the corresponding facet request.",
            "type": "string"
          },
          "resultType": {
            "description": "Result type",
            "type": "string"
          }
        },
        "required": [
          "expression",
          "resultType"
        ],
        "type": "object"
      },
      "FacetError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Facet"
          }
        ],
        "description": "A facet whose execution resulted in an error.",
        "properties": {
          "errors": {
            "description": "An array containing detected facet errors with details.",
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            },
            "type": "array"
          }
        },
        "required": [
          "errors"
        ],
        "type": "object",
        "x-ms-discriminator-value": "FacetError"
      },
      "FacetRequest": {
        "description": "A request to compute additional statistics (facets) over the query results.",
        "properties": {
          "expression": {
            "description": "The column or list of columns to summarize by",
            "type": "string"
          },
          "options": {
            "$ref": "#/components/schemas/FacetRequestOptions",
            "description": "The options for facet evaluation"
          }
        },
        "required": [
          "expression"
        ],
        "type": "object"
      },
      "FacetRequestOptions": {
        "description": "The options for facet evaluation",
        "properties": {
          "$top": {
            "description": "The maximum number of facet rows that should be returned.",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer"
          },
          "filter": {
            "description": "Specifies the filter condition for the 'where' clause which will be run on main query's result, just before the actual faceting.",
            "type": "string"
          },
          "sortBy": {
            "description": "The column name or query expression to sort on. Defaults to count if not present.",
            "type": "string"
          },
          "sortOrder": {
            "default": "desc",
            "description": "The sorting order by the selected column (count by default).",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "FacetSortOrder"
            }
          }
        },
        "type": "object"
      },
      "FacetResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Facet"
          }
        ],
        "description": "Successfully executed facet containing additional statistics on the response of a query.",
        "properties": {
          "count": {
            "description": "Number of records returned in the facet response.",
            "format": "int32",
            "type": "integer"
          },
          "data": {
            "description": "A table containing the desired facets. Only present if the facet is valid.",
            "type": "object"
          },
          "totalRecords": {
            "description": "Number of total records in the facet results.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "totalRecords",
          "count",
          "data"
        ],
        "type": "object",
        "x-ms-discriminator-value": "FacetResult"
      },
      "Operation": {
        "description": "Resource Graph REST API operation definition.",
        "properties": {
          "display": {
            "description": "Display metadata associated with the operation.",
            "properties": {
              "description": {
                "description": "Description for the operation.",
                "type": "string"
              },
              "operation": {
                "description": "Type of operation: get, read, delete, etc.",
                "type": "string"
              },
              "provider": {
                "description": "Service provider: Microsoft Resource Graph.",
                "type": "string"
              },
              "resource": {
                "description": "Resource on which the operation is performed etc.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "Operation name: {provider}/{resource}/{operation}",
            "type": "string"
          },
          "origin": {
            "description": "The origin of operations.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationListResult": {
        "description": "Result of the request to list Resource Graph operations. It contains a list of operations and a URL link to get the next set of results.",
        "properties": {
          "value": {
            "description": "List of Resource Graph operations supported by the Resource Graph resource provider.",
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "QueryRequest": {
        "description": "Describes a query to be executed.",
        "properties": {
          "facets": {
            "description": "An array of facet requests to be computed against the query result.",
            "items": {
              "$ref": "#/components/schemas/FacetRequest"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/QueryRequestOptions",
            "description": "The query evaluation options"
          },
          "query": {
            "description": "The resources query.",
            "type": "string"
          },
          "subscriptions": {
            "description": "Azure subscriptions against which to execute the query.",
            "items": {
              "description": "Subscription Id.",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "subscriptions",
          "query"
        ],
        "type": "object"
      },
      "QueryRequestOptions": {
        "description": "The options for query evaluation",
        "properties": {
          "$skip": {
            "description": "The number of rows to skip from the beginning of the results. Overrides the next page offset when ```$skipToken``` property is present.",
            "format": "int32",
            "minimum": 0,
            "type": "integer"
          },
          "$skipToken": {
            "description": "Continuation token for pagination, capturing the next page size and offset, as well as the context of the query.",
            "type": "string"
          },
          "$top": {
            "description": "The maximum number of rows that the query should return. Overrides the page size when ```$skipToken``` property is present.",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer"
          },
          "resultFormat": {
            "description": "Defines in which format query result returned.",
            "enum": [
              "table",
              "objectArray"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ResultFormat"
            }
          }
        },
        "type": "object"
      },
      "QueryResponse": {
        "description": "Query result.",
        "properties": {
          "$skipToken": {
            "description": "When present, the value can be passed to a subsequent query call (together with the same query and subscriptions used in the current request) to retrieve the next page of data.",
            "type": "string"
          },
          "count": {
            "description": "Number of records returned in the current response. In the case of paging, this is the number of records in the current page.",
            "format": "int64",
            "type": "integer"
          },
          "data": {
            "description": "Query output in tabular format.",
            "type": "object"
          },
          "facets": {
            "description": "Query facets.",
            "items": {
              "$ref": "#/components/schemas/Facet"
            },
            "type": "array"
          },
          "resultTruncated": {
            "description": "Indicates whether the query results are truncated.",
            "enum": [
              "true",
              "false"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ResultTruncated"
            }
          },
          "totalRecords": {
            "description": "Number of total records matching the query.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "totalRecords",
          "count",
          "resultTruncated",
          "data"
        ],
        "type": "object"
      },
      "Row": {
        "description": "Query result row.",
        "items": {
          "description": "Cell value.",
          "type": "object"
        },
        "type": "array"
      },
      "Table": {
        "description": "Query output in tabular format.",
        "properties": {
          "columns": {
            "description": "Query result column descriptors.",
            "items": {
              "$ref": "#/components/schemas/Column",
              "description": "Column descriptor."
            },
            "type": "array"
          },
          "rows": {
            "description": "Query result rows.",
            "items": {
              "$ref": "#/components/schemas/Row",
              "description": "Query result row."
            },
            "type": "array"
          }
        },
        "required": [
          "columns",
          "rows"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}