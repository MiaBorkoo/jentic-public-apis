{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure software plans let users create and manage licenses for various software used in Azure.",
    "title": "Software Plan RP",
    "version": "2019-12-01",
    "x-ms-code-generation-settings": {
      "name": "SoftwareplanClient"
    },
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/softwareplan/resource-manager/Microsoft.SoftwarePlan/stable/2019-12-01/softwareplan.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.SoftwarePlan/register": {
      "post": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "OK - Microsoft.SoftwarePlan is registered"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Software plan"
        ],
        "description": "Register to Microsoft.SoftwarePlan resource provider.",
        "operationId": "SoftwarePlan_Register",
        "x-ms-examples": {
          "HybridUseBenefitListResult": {
            "$ref": "./examples/RegisterSubscription.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          },
          {
            "description": "Supports applying filter on the type of SKU",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridUseBenefitListResult"
                }
              }
            },
            "description": "OK - returns an array of plans at that scope"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefits"
        ],
        "description": "Get all hybrid use benefits associated with an ARM resource.",
        "operationId": "HybridUseBenefit_List",
        "x-ms-examples": {
          "HybridUseBenefitListResult": {
            "$ref": "./examples/GetAllHybridUseBenefits.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}": {
      "delete": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/PlanIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - successfully deleted the given plan"
          },
          "204": {
            "description": "OK - there was no plan to delete"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefit"
        ],
        "description": "Deletes a given plan ID",
        "operationId": "HybridUseBenefit_Delete",
        "x-ms-examples": {
          "HybridUseBenefit": {
            "$ref": "./examples/DeleteHybridUseBenefit.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/PlanIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridUseBenefitModel"
                }
              }
            },
            "description": "OK - returns the plan that is created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefit"
        ],
        "description": "Gets a given plan ID",
        "operationId": "HybridUseBenefit_Get",
        "x-ms-examples": {
          "HybridUseBenefit": {
            "$ref": "./examples/GetSingleHybridUseBenefit.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/PlanIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridUseBenefitModel"
                }
              }
            },
            "description": "OK - successfully updated the given hybrid use benefit"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefit"
        ],
        "description": "Updates an existing hybrid use benefit",
        "operationId": "HybridUseBenefit_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HybridUseBenefitModel"
              }
            }
          },
          "description": "Request body for creating a hybrid use benefit",
          "required": true
        },
        "x-ms-examples": {
          "HybridUseBenefit": {
            "$ref": "./examples/PatchHybridUseBenefit.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/PlanIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridUseBenefitModel"
                }
              }
            },
            "description": "OK - returns the plan that is created"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefit"
        ],
        "description": "Create a new hybrid use benefit under a given scope",
        "operationId": "HybridUseBenefit_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HybridUseBenefitModel"
              }
            }
          },
          "description": "Request body for creating a hybrid use benefit",
          "required": true
        },
        "x-ms-examples": {
          "HybridUseBenefit": {
            "$ref": "./examples/PutHybridUseBenefit.json"
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/hybridUseBenefits/{planId}/revisions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/PlanIdParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HybridUseBenefitListResult"
                }
              }
            },
            "description": "OK - returns an array of plans ordered by revision"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "Hybrid use benefit revisions"
        ],
        "description": "Gets the version history of a hybrid use benefit",
        "operationId": "HybridUseBenefitRevision_List",
        "x-ms-examples": {
          "HybridUseBenefitRevisionsResponse": {
            "$ref": "./examples/GetHybridUseBenefitRevisions.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.SoftwarePlan/operations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/ScopeParameter"
          },
          {
            "$ref": "#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationList"
                }
              }
            },
            "description": "List all the operations."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Error response describing why the operation failed"
          }
        },
        "tags": [
          "Software plan operations"
        ],
        "description": "List all the operations.",
        "operationId": "Operations_List",
        "summary": "Get operations.",
        "x-ms-examples": {
          "GetOperations": {
            "$ref": "./examples/GetOperations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ApiVersionParameter": {
        "description": "The api-version to be used by the service",
        "in": "query",
        "name": "api-version",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "client"
      },
      "PlanIdParameter": {
        "description": "This is a unique identifier for a plan. Should be a guid.",
        "in": "path",
        "name": "planId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "ScopeParameter": {
        "description": "The scope at which the operation is performed. This is limited to Microsoft.Compute/virtualMachines and Microsoft.Compute/hostGroups/hosts for now",
        "in": "path",
        "name": "scope",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "requestBodies": {
      "HybridUseBenefitModel": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HybridUseBenefitModel"
            }
          }
        },
        "description": "Request body for creating a hybrid use benefit",
        "required": true
      }
    },
    "schemas": {
      "Error": {
        "description": "Error object returned by the RP",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCode",
            "description": "Error code"
          },
          "message": {
            "description": "A user readable error message. Localized based on x-ms-effective-locale header in the request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ErrorCode": {
        "description": "Defined error codes to be returned to the client.",
        "enum": [
          "InvalidRequestParameter",
          "MissingRequestParameter"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ErrorCode"
        }
      },
      "HybridUseBenefitListResult": {
        "description": "List of hybrid use benefits",
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of items.",
            "type": "string"
          },
          "value": {
            "description": "List of hybrid use benefits",
            "items": {
              "$ref": "#/components/schemas/HybridUseBenefitModel"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "HybridUseBenefitModel": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/Resource"
          }
        ],
        "description": "Response on GET of a hybrid use benefit",
        "properties": {
          "etag": {
            "description": "Indicates the revision of the hybrid use benefit",
            "format": "int32",
            "readOnly": true,
            "type": "integer"
          },
          "properties": {
            "$ref": "#/components/schemas/HybridUseBenefitProperties",
            "description": "Property bag for a hybrid use benefit response",
            "x-ms-client-flatten": true
          },
          "sku": {
            "$ref": "#/components/schemas/Sku",
            "description": "Hybrid use benefit SKU"
          }
        },
        "required": [
          "sku"
        ],
        "type": "object"
      },
      "HybridUseBenefitProperties": {
        "description": "Hybrid use benefit properties",
        "properties": {
          "createdDate": {
            "description": "Created date",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "Last updated date",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "$ref": "#/components/schemas/ProvisioningState",
            "description": "Provisioning state",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationDisplay": {
        "description": "Display fields for an operation.",
        "properties": {
          "description": {
            "description": "Description of the operation",
            "type": "string"
          },
          "operation": {
            "description": "Operation to be performed",
            "type": "string"
          },
          "provider": {
            "description": "Resource Provider name",
            "type": "string"
          },
          "resource": {
            "description": "Resource that is acted upon",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OperationList": {
        "description": "List all the operations.",
        "properties": {
          "nextLink": {
            "description": "Url to get the next page of items.",
            "type": "string"
          },
          "value": {
            "description": "List of all operations",
            "items": {
              "$ref": "#/components/schemas/OperationResponse"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          }
        },
        "type": "object"
      },
      "OperationResponse": {
        "description": "Operation response.",
        "properties": {
          "display": {
            "$ref": "#/components/schemas/OperationDisplay",
            "description": "Display properties for the operation"
          },
          "name": {
            "description": "Name of the operation",
            "type": "string"
          },
          "origin": {
            "description": "Origin of the response",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProvisioningState": {
        "description": "Represent the current state of the Reservation.",
        "enum": [
          "Succeeded",
          "Cancelled",
          "Failed"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ProvisioningState"
        }
      },
      "Sku": {
        "description": "The SKU to be applied for this resource",
        "properties": {
          "name": {
            "description": "Name of the SKU to be applied",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}