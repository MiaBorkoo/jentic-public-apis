{
  "openapi": "3.0.0",
  "info": {
    "description": "Client for managing DNS zones and record.",
    "title": "DnsManagementClient",
    "version": "2015-05-04-preview",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/dns/resource-manager/Microsoft.Network/preview/2015-05-04-preview/dns.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnszones": {
      "get": {
        "parameters": [
          {
            "description": "Query parameters. If null is passed returns the default number of zones.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Lists the DNS zones within a resource group.",
        "operationId": "Zones_ListZonesInSubscription",
        "x-ms-odata": "#/components/schemas/Zone",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "Query parameters. If null is passed returns the default number of zones.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Lists the DNS zones within a resource group.",
        "operationId": "Zones_ListZonesInResourceGroup",
        "x-ms-odata": "#/components/schemas/Zone",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Defines the If-Match condition. The delete operation will be performed only if the ETag of the zone on the server matches this value.",
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Removes a DNS zone from a resource group.",
        "operationId": "Zones_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Gets a DNS zone.",
        "operationId": "Zones_Get"
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The etag of Zone.",
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Defines the If-None-Match condition. Set to '*' to force Create-If-Not-Exist. Other values will be ignored.",
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zone"
                }
              }
            },
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Creates a DNS zone within a resource group.",
        "operationId": "Zones_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Zone"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate operation.",
          "required": true
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/recordsets": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone from which to enumerate RecordSets.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Query parameters. If null is passed returns the default number of zones.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSetListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSetListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "RecordSets"
        ],
        "description": "Lists all RecordSets in a DNS zone.",
        "operationId": "RecordSets_ListAll",
        "x-ms-odata": "#/components/schemas/RecordSet",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone from which to enumerate RecordsSets.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of record sets to enumerate.",
            "in": "path",
            "name": "recordType",
            "required": true,
            "schema": {
              "enum": [
                "A",
                "AAAA",
                "CNAME",
                "MX",
                "NS",
                "PTR",
                "SOA",
                "SRV",
                "TXT"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "RecordType"
            }
          },
          {
            "description": "Query parameters. If null is passed returns the default number of zones.",
            "in": "query",
            "name": "$top",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The filter to apply on the operation.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSetListResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSetListResult"
                }
              }
            },
            "description": "OK"
          }
        },
        "tags": [
          "RecordSets"
        ],
        "description": "Lists the RecordSets of a specified type in a DNS zone.",
        "operationId": "RecordSets_List",
        "x-ms-odata": "#/components/schemas/RecordSet",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnszones/{zoneName}/{recordType}/{relativeRecordSetName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of DNS record.",
            "in": "path",
            "name": "recordType",
            "required": true,
            "schema": {
              "enum": [
                "A",
                "AAAA",
                "CNAME",
                "MX",
                "NS",
                "PTR",
                "SOA",
                "SRV",
                "TXT"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "RecordType"
            }
          },
          {
            "allowReserved": true,
            "description": "The name of the RecordSet, relative to the name of the zone.",
            "in": "path",
            "name": "relativeRecordSetName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "Defines the If-Match condition. The delete operation will be performed only if the ETag of the zone on the server matches this value.",
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No content. RecordSet was not found."
          }
        },
        "tags": [
          "RecordSets"
        ],
        "description": "Removes a RecordSet from a DNS zone.",
        "operationId": "RecordSets_Delete"
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of DNS record.",
            "in": "path",
            "name": "recordType",
            "required": true,
            "schema": {
              "enum": [
                "A",
                "AAAA",
                "CNAME",
                "MX",
                "NS",
                "PTR",
                "SOA",
                "SRV",
                "TXT"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "RecordType"
            }
          },
          {
            "allowReserved": true,
            "description": "The name of the RecordSet, relative to the name of the zone.",
            "in": "path",
            "name": "relativeRecordSetName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              }
            },
            "description": "OK"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudError"
                }
              }
            },
            "description": "Default response. It will be deserialized as per the Error definition."
          }
        },
        "tags": [
          "RecordSets"
        ],
        "description": "Gets a RecordSet.",
        "operationId": "RecordSets_Get"
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "description": "The name of the zone without a terminating dot.",
            "in": "path",
            "name": "zoneName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of DNS record.",
            "in": "path",
            "name": "recordType",
            "required": true,
            "schema": {
              "enum": [
                "A",
                "AAAA",
                "CNAME",
                "MX",
                "NS",
                "PTR",
                "SOA",
                "SRV",
                "TXT"
              ],
              "type": "string"
            },
            "x-ms-enum": {
              "name": "RecordType"
            }
          },
          {
            "allowReserved": true,
            "description": "The name of the RecordSet, relative to the name of the zone.",
            "in": "path",
            "name": "relativeRecordSetName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-ms-skip-url-encoding": true
          },
          {
            "description": "The etag of RecordSet.",
            "in": "header",
            "name": "If-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Defines the If-None-Match condition. Set to '*' to force Create-If-Not-Exist. Other values will be ignored.",
            "in": "header",
            "name": "If-None-Match",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              }
            },
            "description": "OK"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordSet"
                }
              }
            },
            "description": "RecordSet was created"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "RecordSets"
        ],
        "description": "Creates a RecordSet within a DNS zone.",
        "operationId": "RecordSets_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordSet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordSet"
              }
            }
          },
          "description": "Parameters supplied to the CreateOrUpdate operation.",
          "required": true
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ARecord": {
        "description": "An A record.",
        "properties": {
          "ipv4Address": {
            "description": "Gets or sets the IPv4 address of this A record in string notation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AaaaRecord": {
        "description": "An AAAA record.",
        "properties": {
          "ipv6Address": {
            "description": "Gets or sets the IPv6 address of this AAAA record in string notation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CloudError": {
        "description": "An error response from the service.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/CloudErrorBody",
            "description": "Cloud error body."
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "An error response from the service.",
        "properties": {
          "code": {
            "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
            "type": "string"
          },
          "details": {
            "description": "A list of additional details about the error.",
            "items": {
              "$ref": "#/components/schemas/CloudErrorBody"
            },
            "type": "array"
          },
          "message": {
            "description": "A message describing the error, intended to be suitable for display in a user interface.",
            "type": "string"
          },
          "target": {
            "description": "The target of the particular error. For example, the name of the property in error.",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "CnameRecord": {
        "description": "A CNAME record.",
        "properties": {
          "cname": {
            "description": "Gets or sets the canonical name for this record without a terminating dot.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MxRecord": {
        "description": "An MX record.",
        "properties": {
          "exchange": {
            "description": "Gets or sets the domain name of the mail host, without a terminating dot.",
            "type": "string"
          },
          "preference": {
            "description": "Gets or sets the preference metric for this record.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "NsRecord": {
        "description": "An NS record.",
        "properties": {
          "nsdname": {
            "description": "Gets or sets the name server name for this record, without a terminating dot.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PtrRecord": {
        "description": "A PTR record.",
        "properties": {
          "ptrdname": {
            "description": "Gets or sets the PTR target domain name for this record without a terminating dot.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RecordSet": {
        "description": "Describes a DNS record set (a collection of DNS records with the same name and type).",
        "properties": {
          "etag": {
            "description": "The etag of the record set.",
            "type": "string"
          },
          "id": {
            "description": "The ID of the record set.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The name of the record set.",
            "readOnly": true,
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/RecordSetProperties",
            "description": "The properties of the record set.",
            "x-ms-client-flatten": true
          },
          "type": {
            "description": "The type of the record set.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-azure-resource": true
      },
      "RecordSetListResult": {
        "description": "The response to a RecordSet List operation.",
        "properties": {
          "nextLink": {
            "description": "Gets or sets the continuation token for the next page.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets information about the RecordSets in the response.",
            "items": {
              "$ref": "#/components/schemas/RecordSet"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "RecordSetProperties": {
        "description": "Represents the properties of the records in the RecordSet.",
        "properties": {
          "AAAARecords": {
            "description": "Gets or sets the list of AAAA records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/AaaaRecord"
            },
            "type": "array"
          },
          "ARecords": {
            "description": "Gets or sets the list of A records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/ARecord"
            },
            "type": "array"
          },
          "CNAMERecord": {
            "$ref": "#/components/schemas/CnameRecord",
            "description": "Gets or sets the CNAME record in the RecordSet."
          },
          "MXRecords": {
            "description": "Gets or sets the list of MX records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/MxRecord"
            },
            "type": "array"
          },
          "NSRecords": {
            "description": "Gets or sets the list of NS records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/NsRecord"
            },
            "type": "array"
          },
          "PTRRecords": {
            "description": "Gets or sets the list of PTR records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/PtrRecord"
            },
            "type": "array"
          },
          "SOARecord": {
            "$ref": "#/components/schemas/SoaRecord",
            "description": "Gets or sets the SOA record in the RecordSet."
          },
          "SRVRecords": {
            "description": "Gets or sets the list of SRV records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/SrvRecord"
            },
            "type": "array"
          },
          "TTL": {
            "description": "Gets or sets the TTL of the records in the RecordSet.",
            "format": "int64",
            "type": "integer"
          },
          "TXTRecords": {
            "description": "Gets or sets the list of TXT records in the RecordSet.",
            "items": {
              "$ref": "#/components/schemas/TxtRecord"
            },
            "type": "array"
          },
          "fqdn": {
            "description": "Fully qualified domain name of the record set.",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SoaRecord": {
        "description": "An SOA record.",
        "properties": {
          "host": {
            "description": "Gets or sets the domain name of the authoritative name server, without a terminating dot.",
            "type": "string"
          },
          "email": {
            "description": "Gets or sets the email for this record.",
            "type": "string"
          },
          "expireTime": {
            "description": "Gets or sets the expire time for this record.",
            "format": "int64",
            "type": "integer"
          },
          "minimumTTL": {
            "description": "Gets or sets the minimum TTL value for this record.",
            "format": "int64",
            "type": "integer"
          },
          "refreshTime": {
            "description": "Gets or sets the refresh value for this record.",
            "format": "int64",
            "type": "integer"
          },
          "retryTime": {
            "description": "Gets or sets the retry time for this record.",
            "format": "int64",
            "type": "integer"
          },
          "serialNumber": {
            "description": "Gets or sets the serial number for this record.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SrvRecord": {
        "description": "An SRV record.",
        "properties": {
          "port": {
            "description": "Gets or sets the port of the service for this record.",
            "format": "int32",
            "type": "integer"
          },
          "priority": {
            "description": "Gets or sets the priority metric for this record.",
            "format": "int32",
            "type": "integer"
          },
          "target": {
            "description": "Gets or sets the domain name of the target for this record, without a terminating dot.",
            "type": "string"
          },
          "weight": {
            "description": "Gets or sets the weight metric for this record.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SubResource": {
        "properties": {
          "id": {
            "description": "Resource Id",
            "type": "string"
          }
        },
        "type": "object",
        "x-ms-external": true
      },
      "TxtRecord": {
        "description": "A TXT record.",
        "properties": {
          "value": {
            "description": "Gets or sets the text value of this record.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Zone": {
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/TrackedResource"
          }
        ],
        "description": "Describes a DNS zone.",
        "properties": {
          "etag": {
            "description": "Gets or sets the ETag of the zone that is being updated, as received from a Get operation.",
            "type": "string"
          },
          "properties": {
            "$ref": "#/components/schemas/ZoneProperties",
            "description": "Gets or sets the properties of the zone."
          }
        },
        "type": "object"
      },
      "ZoneListResult": {
        "description": "The response to a Zone List or ListAll operation.",
        "properties": {
          "nextLink": {
            "description": "Gets or sets the continuation token for the next page.",
            "type": "string"
          },
          "value": {
            "description": "Gets or sets information about the zones in the response.",
            "items": {
              "$ref": "#/components/schemas/Zone"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ZoneProperties": {
        "description": "Represents the properties of the zone.",
        "properties": {
          "maxNumberOfRecordSets": {
            "description": "Gets or sets the maximum number of record sets that can be created in this zone.",
            "format": "int64",
            "type": "integer"
          },
          "maxNumberOfRecordsPerRecordSet": {
            "description": "The maximum number of records per record set that can be created in this DNS zone.  This is a read-only property and any attempt to set this value will be ignored.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "numberOfRecordSets": {
            "description": "Gets or sets the current number of record sets in this zone.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}