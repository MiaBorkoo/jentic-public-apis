{
  "openapi": "3.0.0",
  "info": {
    "description": "Azure Monitor client to create/update/delete Scheduled Query Rules",
    "title": "Microsoft Insights API",
    "version": "2018-04-16",
    "x-jentic-source-url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/monitor/resource-manager/Microsoft.Insights/stable/2018-04-16/scheduledQueryRule_API.json"
  },
  "servers": [
    {
      "url": "https://management.azure.com/"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.Insights/scheduledQueryRules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResourceCollection"
                }
              }
            },
            "description": "Successful request for a list of alert rules"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "List the Log Search rules within a subscription group.",
        "operationId": "ScheduledQueryRules_ListBySubscription",
        "x-ms-examples": {
          "List rules": {
            "$ref": "./examples/listScheduledQueryRules.json"
          }
        },
        "x-ms-odata": "#/components/schemas/LogSearchRuleResource",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules": {
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/FilterParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResourceCollection"
                }
              }
            },
            "description": "Successful request for a list of alert rules"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "List the Log Search rules within a resource group.",
        "operationId": "ScheduledQueryRules_ListByResourceGroup",
        "x-ms-examples": {
          "List rules": {
            "$ref": "./examples/listScheduledQueryRules.json"
          }
        },
        "x-ms-odata": "#/components/schemas/LogSearchRuleResource",
        "x-ms-pageable": {
          "nextLinkName": null
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Insights/scheduledQueryRules/{ruleName}": {
      "delete": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete a  Log Search rule"
          },
          "204": {
            "description": "No Content. Resource not found"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "Deletes a Log Search rule",
        "operationId": "ScheduledQueryRules_Delete",
        "x-ms-examples": {
          "Delete rule": {
            "$ref": "./examples/deleteScheduledQueryRules.json"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResource"
                }
              }
            },
            "description": "Successful request to get a Log Search rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "Gets an Log Search rule",
        "operationId": "ScheduledQueryRules_Get",
        "x-ms-examples": {
          "Get rule": {
            "$ref": "./examples/getScheduledQueryRules.json"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResource"
                }
              }
            },
            "description": "Successful request to update an Log Search rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "Update log search Rule.",
        "operationId": "ScheduledQueryRules_Update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogSearchRuleResourcePatch"
              }
            }
          },
          "description": "The parameters of the rule to update.",
          "required": true
        },
        "x-ms-examples": {
          "Patch Log Search Rule": {
            "$ref": "./examples/patchScheduledQueryRules.json"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/components/parameters/RuleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/components/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResource"
                }
              }
            },
            "description": "Successful request to update an Log Search rule"
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogSearchRuleResource"
                }
              }
            },
            "description": "Created alert rule"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorContract"
                }
              }
            },
            "description": "Error response describing why the operation failed."
          }
        },
        "tags": [
          "scheduledQueryRules"
        ],
        "description": "Creates or updates an log search rule.",
        "operationId": "ScheduledQueryRules_CreateOrUpdate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogSearchRuleResource"
              }
            }
          },
          "description": "The parameters of the rule to create or update.",
          "required": true
        },
        "x-ms-examples": {
          "Create or Update rule - AlertingAction": {
            "$ref": "./examples/createOrUpdateScheduledQueryRules.json"
          },
          "Create or Update rule - AlertingAction with Cross-Resource": {
            "$ref": "./examples/createOrUpdateScheduledQueryRuleswithCrossResource.json"
          },
          "Create or Update rule - LogToMetricAction": {
            "$ref": "./examples/createOrUpdateScheduledQueryRule-LogToMetricAction.json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "FilterParameter": {
        "description": "The filter to apply on the operation. For more information please see https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx",
        "in": "query",
        "name": "$filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      },
      "RuleNameParameter": {
        "description": "The name of the rule.",
        "in": "path",
        "name": "ruleName",
        "required": true,
        "schema": {
          "type": "string"
        },
        "x-ms-parameter-location": "method"
      }
    },
    "schemas": {
      "Action": {
        "description": "Action descriptor.",
        "discriminator": {
          "propertyName": "odata.type"
        },
        "properties": {
          "odata.type": {
            "description": "Specifies the action. Supported values - AlertingAction, LogToMetricAction",
            "type": "string"
          }
        },
        "required": [
          "odata.type"
        ],
        "type": "object"
      },
      "AlertSeverity": {
        "description": "Severity Level of Alert",
        "enum": [
          "0",
          "1",
          "2",
          "3",
          "4"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "AlertSeverity"
        }
      },
      "AlertingAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Action"
          }
        ],
        "description": "Specify action need to be taken when rule type is Alert",
        "properties": {
          "aznsAction": {
            "$ref": "#/components/schemas/AzNsActionGroup",
            "description": "Azure action group reference."
          },
          "severity": {
            "$ref": "#/components/schemas/AlertSeverity",
            "description": "Severity of the alert"
          },
          "throttlingInMin": {
            "description": "time (in minutes) for which Alerts should be throttled or suppressed.",
            "format": "int32",
            "type": "integer"
          },
          "trigger": {
            "$ref": "#/components/schemas/TriggerCondition",
            "description": "The trigger condition that results in the alert rule being."
          }
        },
        "required": [
          "trigger",
          "severity"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
      },
      "AzNsActionGroup": {
        "description": "Azure action group",
        "properties": {
          "actionGroup": {
            "description": "Azure Action Group reference.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "customWebhookPayload": {
            "description": "Custom payload to be sent for all webhook URI in Azure action group",
            "type": "string"
          },
          "emailSubject": {
            "description": "Custom subject override for all email ids in Azure action group",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConditionalOperator": {
        "default": "GreaterThanOrEqual",
        "description": "Result Condition Evaluation criteria.",
        "enum": [
          "GreaterThanOrEqual",
          "LessThanOrEqual",
          "GreaterThan",
          "LessThan",
          "Equal"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "ConditionalOperator"
        }
      },
      "Criteria": {
        "description": "Specifies the criteria for converting log to metric.",
        "properties": {
          "dimensions": {
            "description": "List of Dimensions for creating metric",
            "items": {
              "$ref": "#/components/schemas/Dimension"
            },
            "type": "array",
            "x-ms-identifiers": [
              "name"
            ]
          },
          "metricName": {
            "description": "Name of the metric",
            "type": "string"
          }
        },
        "required": [
          "metricName"
        ],
        "type": "object"
      },
      "Dimension": {
        "description": "Specifies the criteria for converting log to metric.",
        "properties": {
          "name": {
            "description": "Name of the dimension",
            "type": "string"
          },
          "operator": {
            "description": "Operator for dimension values",
            "enum": [
              "Include"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "operator"
            }
          },
          "values": {
            "description": "List of dimension values",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "operator",
          "values"
        ],
        "type": "object"
      },
      "ErrorContract": {
        "description": "Describes the format of Error response.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorResponse",
            "description": "The error details."
          }
        },
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Describes the format of Error response.",
        "properties": {
          "code": {
            "description": "Error code",
            "type": "string"
          },
          "message": {
            "description": "Error message indicating why the operation failed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LogMetricTrigger": {
        "description": "A log metrics trigger descriptor.",
        "properties": {
          "metricColumn": {
            "description": "Evaluation of metric on a particular column",
            "type": "string"
          },
          "metricTriggerType": {
            "$ref": "#/components/schemas/MetricTriggerType",
            "description": "Metric Trigger Type - 'Consecutive' or 'Total'"
          },
          "threshold": {
            "description": "The threshold of the metric trigger.",
            "format": "double",
            "type": "number"
          },
          "thresholdOperator": {
            "$ref": "#/components/schemas/ConditionalOperator",
            "description": "Evaluation operation for Metric -'GreaterThan' or 'LessThan' or 'Equal'."
          }
        },
        "type": "object"
      },
      "LogSearchRule": {
        "description": "Log Search Rule Definition",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action",
            "description": "Action needs to be taken on rule execution."
          },
          "autoMitigate": {
            "default": false,
            "description": "The flag that indicates whether the alert should be automatically resolved or not. The default is false.",
            "type": "boolean"
          },
          "createdWithApiVersion": {
            "description": "The api-version used when creating this alert rule",
            "readOnly": true,
            "type": "string"
          },
          "description": {
            "description": "The description of the Log Search rule.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the alert rule",
            "type": "string"
          },
          "enabled": {
            "description": "The flag which indicates whether the Log Search rule is enabled. Value should be true or false",
            "enum": [
              "true",
              "false"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "enabled"
            }
          },
          "isLegacyLogAnalyticsRule": {
            "description": "True if alert rule is legacy Log Analytic rule",
            "readOnly": true,
            "type": "boolean"
          },
          "lastUpdatedTime": {
            "description": "Last time the rule was updated in IS08601 format.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "provisioningState": {
            "description": "Provisioning state of the scheduled query rule",
            "enum": [
              "Succeeded",
              "Deploying",
              "Canceled",
              "Failed"
            ],
            "readOnly": true,
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "provisioningState"
            }
          },
          "schedule": {
            "$ref": "#/components/schemas/Schedule",
            "description": "Schedule (Frequency, Time Window) for rule. Required for action type - AlertingAction"
          },
          "source": {
            "$ref": "#/components/schemas/Source",
            "description": "Data Source against which rule will Query Data"
          }
        },
        "required": [
          "source",
          "action"
        ],
        "type": "object"
      },
      "LogSearchRulePatch": {
        "description": "Log Search Rule Definition for Patching",
        "properties": {
          "enabled": {
            "description": "The flag which indicates whether the Log Search rule is enabled. Value should be true or false",
            "enum": [
              "true",
              "false"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "enabled"
            }
          }
        },
        "type": "object"
      },
      "LogSearchRuleResource": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Resource"
          }
        ],
        "description": "The Log Search Rule resource.",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/LogSearchRule",
            "description": "The rule properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "required": [
          "properties"
        ],
        "type": "object"
      },
      "LogSearchRuleResourceCollection": {
        "description": "Represents a collection of Log Search rule resources.",
        "properties": {
          "value": {
            "description": "The values for the Log Search Rule resources.",
            "items": {
              "$ref": "#/components/schemas/LogSearchRuleResource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LogSearchRuleResourcePatch": {
        "description": "The log search rule resource for patch operations.",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "properties": {
            "$ref": "#/components/schemas/LogSearchRulePatch",
            "description": "The log search rule properties of the resource.",
            "x-ms-client-flatten": true
          }
        },
        "type": "object"
      },
      "LogToMetricAction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Action"
          }
        ],
        "description": "Specify action need to be taken when rule type is converting log to metric",
        "properties": {
          "criteria": {
            "description": "Criteria of Metric",
            "items": {
              "$ref": "#/components/schemas/Criteria"
            },
            "type": "array",
            "x-ms-identifiers": [
              "metricName"
            ]
          }
        },
        "required": [
          "criteria"
        ],
        "type": "object",
        "x-ms-discriminator-value": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.LogToMetricAction"
      },
      "MetricTriggerType": {
        "default": "Consecutive",
        "description": "Metric Trigger Evaluation Type",
        "enum": [
          "Consecutive",
          "Total"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "metricTriggerType"
        }
      },
      "QueryType": {
        "description": "Set value to 'ResultAccount'",
        "enum": [
          "ResultCount"
        ],
        "type": "string",
        "x-ms-enum": {
          "modelAsString": true,
          "name": "QueryType"
        }
      },
      "Resource": {
        "description": "An azure resource object",
        "properties": {
          "tags": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags",
            "type": "object"
          },
          "etag": {
            "description": "The etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal etag convention.  Entity tags are used for comparing two or more entities from the same requested resource. HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26), and If-Range (section 14.27) header fields. ",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "Azure resource Id",
            "readOnly": true,
            "type": "string"
          },
          "kind": {
            "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
            "readOnly": true,
            "type": "string"
          },
          "location": {
            "description": "Resource location",
            "type": "string",
            "x-ms-mutability": [
              "create",
              "read"
            ]
          },
          "name": {
            "description": "Azure resource name",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "description": "Azure resource type",
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object",
        "x-ms-azure-resource": true
      },
      "Schedule": {
        "description": "Defines how often to run the search and the time interval.",
        "properties": {
          "frequencyInMinutes": {
            "description": "frequency (in minutes) at which rule condition should be evaluated.",
            "format": "int32",
            "type": "integer"
          },
          "timeWindowInMinutes": {
            "description": "Time window for which data needs to be fetched for query (should be greater than or equal to frequencyInMinutes).",
            "format": "int32",
            "type": "integer"
          }
        },
        "required": [
          "frequencyInMinutes",
          "timeWindowInMinutes"
        ],
        "type": "object"
      },
      "Source": {
        "description": "Specifies the log search query.",
        "properties": {
          "authorizedResources": {
            "description": "List of  Resource referred into query",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dataSourceId": {
            "description": "The resource uri over which log search query is to be run.",
            "type": "string"
          },
          "query": {
            "description": "Log search query. Required for action type - AlertingAction",
            "type": "string"
          },
          "queryType": {
            "$ref": "#/components/schemas/QueryType",
            "description": "Set value to 'ResultCount' ."
          }
        },
        "required": [
          "dataSourceId"
        ],
        "type": "object"
      },
      "TriggerCondition": {
        "description": "The condition that results in the Log Search rule.",
        "properties": {
          "metricTrigger": {
            "$ref": "#/components/schemas/LogMetricTrigger",
            "description": "Trigger condition for metric query rule"
          },
          "threshold": {
            "description": "Result or count threshold based on which rule should be triggered.",
            "format": "double",
            "type": "number"
          },
          "thresholdOperator": {
            "$ref": "#/components/schemas/ConditionalOperator",
            "description": "Evaluation operation for rule - 'GreaterThan' or 'LessThan."
          }
        },
        "required": [
          "thresholdOperator",
          "threshold"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "description": "Azure Active Directory OAuth2 Flow",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "type": "oauth2"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}