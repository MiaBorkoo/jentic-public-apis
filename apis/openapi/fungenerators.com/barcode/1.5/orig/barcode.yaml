openapi: 3.0.0
info:
  termsOfService: https://fungenerators.com/terms
  description: >
    Generate Barcode images for a given barcode number. You can decode Barcode
    images and get the barcodes in a numberic form as well. Many industry
    standard barcode types are supported. The best and complete Barcode API on
    the cloud. [Click here to subscribe](http://fungenerators.com/api/barcode/) 
  title: Barcode API
  version: "1.5"
  contact:
    name: Fun Generators
    url: http://fungenerators.com/api/barcode/
tags:
  - name: Barcode
    description: Barcode API
    externalDocs:
      description: Find out more
      url: http://fungenerators.com/api/barcode/
paths:
  /barcode/encode/types:
    get:
      tags:
        - Barcode
      description: Get the supported barcode types for encoding / image generation.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 200  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "success": {"total":28},
                      "contents": {"types":
                           {
                              "C39":"Code 39",
                              "C39CKSUM":"Code 39 with Checksum",
                              "C39E":"Extended Code 39",
                              "C39ECKSUM":"Extended Code 39 With Checksum",
                              "C93":"Code 93",
                              "S25":"Standard 2 of 5",
                              "S25CKSUM":"Standard 2 of 5 with Checksum",
                              "I25":"Interleaved 2 of 5",
                              "I25CKSUM":"Interleaved 2 of 5 with Checksum",
                              "UPCA":"UPC-A",
                              "UPCE":"UPC-E",
                              "C128":"Code 128 (Standard)",
                              "C128A":"Code 128-A",
                              "C128B":"Code 128-B",
                              "C128C":"Code 128-C",
                              "EAN8":"EAN-8",
                              "EAN13":"EAN-13",
                              "MSI":"MSI Plessey",
                              "MSICKSUM":"MSI with Checksum",
                              "POSTNET":"POSTNET",
                              "PLANET":"PLANET",
                              "RMS4CC":"RMS4CC \/ CBC",
                              "KIX":"KIX",
                              "IMB":"IMB",
                              "CODABAR":"CODABAR",
                              "CODE11":"Code 11",
                              "PHARMA":"Pharma One-Track",
                              "PHARMA2T":"Pharma Two-Track"
                           }
                      }
                    }
        "401":
          description: 401  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "error": {
                            "code": 401,
                            "message": "Unauthorized"
                        }
                    }
  /barcode/encode:
    get:
      tags:
        - Barcode
      description: Get a Bar Code image for the given barcode number
      security:
        - bearerAuth: []
      parameters:
        - description: Barcode number
          in: query
          name: number
          required: true
          schema:
            type: string
            format: string
        - description: Barcode format default C39. Valid values are the keys to those
            returned from /barcode/encode/types.
          in: query
          name: barcodeformat
          required: false
          schema:
            type: string
            format: string
        - description: Output image format. Must be one of png/html/jpg/svg
          in: query
          name: outputformat
          required: false
          schema:
            type: string
            format: string
        - description: Width factor of the image
          in: query
          name: widthfactor
          required: false
          schema:
            type: integer
            format: integer
        - description: Total height of the image
          in: query
          name: totalheight
          required: false
          schema:
            type: integer
            format: integer
      responses:
        "200":
          description: 200  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "success": {
                            "total": 1
                        },
                        "contents": [
                            {
                                "encoding": "base64",
                                "format": "png",
                                "content": "",
                            }
                        ]
                    }
        "401":
          description: 401  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "error": {
                            "code": 401,
                            "message": "Unauthorized"
                        }
                    }                    
  /barcode/decode/types:
    get:
      tags:
        - Barcode
      description: Get the supported barcode types for the decoding process.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 200  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "success": {"total":28},
                      "contents": 
                      {
                         "types":
                         {
                           "C39":"Code 39",
                           "C39CKSUM":"Code 39 with Checksum",
                           "C39E":"Extended Code 39",
                           "C39ECKSUM":"Extended Code 39 With Checksum",
                           "C93":"Code 93",
                           "I25":"Interleaved 2 of 5",
                           "I25CKSUM":"Interleaved 2 of 5 with Checksum",
                           "C128":"Code 128 (Standard)",
                           "C128A":"Code 128-A",
                           "C128B":"Code 128-B",
                           "C128C":"Code 128-C",
                           "CODABAR":"CODABAR"
                           
                         }
                      }
                    }
        "401":
          description: 401  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "error": {
                            "code": 401,
                            "message": "Unauthorized"
                        }
                    }                    
  /barcode/decode:
    post:
      description: Decode a Barcode image and return the cotents if successful
      tags:
        - Barcode
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                barimage:
                  description: Barcode image to decode and get the content value
                  type: string
                  format: binary
              required:
                - barimage
      responses:
        "200":
          description: 200  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                      "success": {
                        "total": 1
                      },
                      "contents": [
                          {
                                   "value": 234567,
                                   "format": 'C39',
                                   "content_type": "number"
                          }
                      ]
                    }
        "401":
          description: 401  response
          content:
            application/json:
              examples:
                response:
                  value: |-
                    {
                        "error": {
                            "code": 401,
                            "message": "Unauthorized"
                        }
                    }              
servers:
  - url: http://api.fungenerators.com
  - url: https://api.fungenerators.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
