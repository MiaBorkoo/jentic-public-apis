{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/nfusionsolutions.biz/main/1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "retrieve-current-currency-summary-data",
      "summary": "Allows a user to first discover all currency pairs for which summary data is available, and then retrieve the latest summary information for a selection of those pairs. This is useful for getting a quick overview of current and daily performance metrics for currency exchange rates.",
      "description": "Allows a user to first discover all currency pairs for which summary data is available, and then retrieve the latest summary information for a selection of those pairs. This is useful for getting a quick overview of current and daily performance metrics for currency exchange rates.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "pairs": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-summary-currency-pairs",
          "description": "Retrieves a list of currency pairs supported by the Summary endpoint. These pairs are in a specific direction (e.g., USD/CAD is not CAD/USD).",
          "operationId": "Currencies_SupportedCurrencies_Summary_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedPairs": "$response.body#/0/supportedPairs"
          }
        },
        {
          "stepId": "get-currency-summary",
          "description": "Retrieves the latest summary information (current and daily) for specified currency pairs. The 'pairs' input should be a comma-separated string of currency pairs obtained from the previous step.",
          "operationId": "Currencies_Summary_GET",
          "parameters": [
            {
              "name": "pairs",
              "in": "query",
              "value": "$steps.get-supported-summary-currency-pairs.outputs.supportedPairs"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "currencySummaryData": "$response.body#/0/currencySummaryData"
          }
        }
      ],
      "outputs": {
        "supportedPairs": "$steps.get-supported-summary-currency-pairs.outputs.supportedPairs",
        "currencySummaryData": "$steps.get-currency-summary.outputs.currencySummaryData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-historical-currency-data",
      "summary": "Enables a user to discover supported currency pairs for historical data and then retrieve their historical prices (OHLC data) over a specified period and aggregation interval. This is valuable for trend analysis and backtesting strategies.",
      "description": "Enables a user to discover supported currency pairs for historical data and then retrieve their historical prices (OHLC data) over a specified period and aggregation interval. This is valuable for trend analysis and backtesting strategies.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "pairs": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-history-currency-pairs",
          "description": "Retrieves a list of currency pairs supported by the History endpoint. These pairs are in a specific direction (e.g., USD/CAD is not CAD/USD).",
          "operationId": "Currencies_SupportedCurrencies_History_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedPairs": "$response.body#/0/supportedPairs"
          }
        },
        {
          "stepId": "get-currency-history",
          "description": "Retrieves historical OHLC data for specified currency pairs, period, and aggregation interval. The 'pairs' input should be a comma-separated string of currency pairs obtained from the previous step.",
          "operationId": "Currencies_History_GET",
          "parameters": [
            {
              "name": "pairs",
              "in": "query",
              "value": "$steps.get-supported-history-currency-pairs.outputs.supportedPairs"
            },
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "end",
              "in": "query",
              "value": "$inputs.end"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "currencyHistoryData": "$response.body#/0/currencyHistoryData"
          }
        }
      ],
      "outputs": {
        "supportedPairs": "$steps.get-supported-history-currency-pairs.outputs.supportedPairs",
        "currencyHistoryData": "$steps.get-currency-history.outputs.currencyHistoryData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-current-metal-spot-summary",
      "summary": "Allows a user to first discover all precious metals for which spot summary data is available, and then retrieve the latest summary information for a selection of those metals. This provides current and daily performance insights for precious metals.",
      "description": "Allows a user to first discover all precious metals for which spot summary data is available, and then retrieve the latest summary information for a selection of those metals. This provides current and daily performance insights for precious metals.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "metals": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitofmeasure": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-spot-metals",
          "description": "Retrieves a list of metal symbols supported by the spot endpoints (e.g., Gold, Silver, Platinum, Palladium).",
          "operationId": "Metals_SpotSupportedMetals_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedMetals": "$response.body#/0/supportedMetals"
          }
        },
        {
          "stepId": "get-metal-spot-summary",
          "description": "Retrieves the latest spot summary information (current and daily) for specified metals, optionally converted to a specific currency and unit of measure. The 'metals' input should be a comma-separated string of metal symbols obtained from the previous step.",
          "operationId": "Metals_SpotSummary_GET",
          "parameters": [
            {
              "name": "metals",
              "in": "query",
              "value": "$steps.get-supported-spot-metals.outputs.supportedMetals"
            },
            {
              "name": "currency",
              "in": "query",
              "value": "$inputs.currency"
            },
            {
              "name": "unitofmeasure",
              "in": "query",
              "value": "$inputs.unitofmeasure"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metalSpotSummaryData": "$response.body#/0/metalSpotSummaryData"
          }
        }
      ],
      "outputs": {
        "supportedMetals": "$steps.get-supported-spot-metals.outputs.supportedMetals",
        "metalSpotSummaryData": "$steps.get-metal-spot-summary.outputs.metalSpotSummaryData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-historical-metal-spot-prices",
      "summary": "Enables a user to discover supported metals for spot pricing and then retrieve their historical spot prices (OHLC data) over a specified period and aggregation interval. This is crucial for analyzing long-term trends and price movements of precious metals.",
      "description": "Enables a user to discover supported metals for spot pricing and then retrieve their historical spot prices (OHLC data) over a specified period and aggregation interval. This is crucial for analyzing long-term trends and price movements of precious metals.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "metals": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "historicalfx": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitofmeasure": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-spot-metals",
          "description": "Retrieves a list of metal symbols supported by the spot endpoints (e.g., Gold, Silver, Platinum, Palladium).",
          "operationId": "Metals_SpotSupportedMetals_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedMetals": "$response.body#/0/supportedMetals"
          }
        },
        {
          "stepId": "get-metal-spot-history",
          "description": "Retrieves historical OHLC data for specified metals, period, and aggregation interval, with options for currency conversion and historical FX rates. The 'metals' input should be a comma-separated string of metal symbols obtained from the previous step.",
          "operationId": "Metals_SpotHistory_GET",
          "parameters": [
            {
              "name": "metals",
              "in": "query",
              "value": "$steps.get-supported-spot-metals.outputs.supportedMetals"
            },
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "end",
              "in": "query",
              "value": "$inputs.end"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "historicalfx",
              "in": "query",
              "value": "$inputs.historicalfx"
            },
            {
              "name": "currency",
              "in": "query",
              "value": "$inputs.currency"
            },
            {
              "name": "unitofmeasure",
              "in": "query",
              "value": "$inputs.unitofmeasure"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metalSpotHistoryData": "$response.body#/0/metalSpotHistoryData"
          }
        }
      ],
      "outputs": {
        "supportedMetals": "$steps.get-supported-spot-metals.outputs.supportedMetals",
        "metalSpotHistoryData": "$steps.get-metal-spot-history.outputs.metalSpotHistoryData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-historical-metal-benchmark-prices",
      "summary": "Allows a user to discover supported metals for benchmark pricing and then retrieve their historical benchmark prices over a specified period and aggregation interval. This is useful for tracking official or reference prices of precious metals over time.",
      "description": "Allows a user to discover supported metals for benchmark pricing and then retrieve their historical benchmark prices over a specified period and aggregation interval. This is useful for tracking official or reference prices of precious metals over time.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "metals": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "historicalfx": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitofmeasure": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-benchmark-metals",
          "description": "Retrieves a list of metal symbols supported by the benchmark endpoints.",
          "operationId": "Metals_BenchmarkSupportedMetals_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedMetals": "$response.body#/0/supportedMetals"
          }
        },
        {
          "stepId": "get-metal-benchmark-history",
          "description": "Retrieves historical OHLC data for specified metals benchmark prices, period, and aggregation interval, with options for currency conversion and historical FX rates. The 'metals' input should be a comma-separated string of metal symbols obtained from the previous step.",
          "operationId": "Metals_BenchmarkHistory_GET",
          "parameters": [
            {
              "name": "metals",
              "in": "query",
              "value": "$steps.get-supported-benchmark-metals.outputs.supportedMetals"
            },
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "end",
              "in": "query",
              "value": "$inputs.end"
            },
            {
              "name": "interval",
              "in": "query",
              "value": "$inputs.interval"
            },
            {
              "name": "historicalfx",
              "in": "query",
              "value": "$inputs.historicalfx"
            },
            {
              "name": "currency",
              "in": "query",
              "value": "$inputs.currency"
            },
            {
              "name": "unitofmeasure",
              "in": "query",
              "value": "$inputs.unitofmeasure"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metalBenchmarkHistoryData": "$response.body#/0/metalBenchmarkHistoryData"
          }
        }
      ],
      "outputs": {
        "supportedMetals": "$steps.get-supported-benchmark-metals.outputs.supportedMetals",
        "metalBenchmarkHistoryData": "$steps.get-metal-benchmark-history.outputs.metalBenchmarkHistoryData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "analyze-metal-spot-performance",
      "summary": "Enables a user to discover supported metals for spot pricing and then retrieve their overall historical performance data. This provides insights into how metals have performed over various periods.",
      "description": "Enables a user to discover supported metals for spot pricing and then retrieve their overall historical performance data. This provides insights into how metals have performed over various periods.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "metals": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitofmeasure": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-spot-metals",
          "description": "Retrieves a list of metal symbols supported by the spot endpoints.",
          "operationId": "Metals_SpotSupportedMetals_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedMetals": "$response.body#/0/supportedMetals"
          }
        },
        {
          "stepId": "get-metal-spot-performance",
          "description": "Retrieves historical performance information for specified metals, optionally converted to a specific currency and unit of measure. The 'metals' input should be a comma-separated string of metal symbols obtained from the previous step.",
          "operationId": "Metals_SpotHistoricalPerformance_GET",
          "parameters": [
            {
              "name": "metals",
              "in": "query",
              "value": "$steps.get-supported-spot-metals.outputs.supportedMetals"
            },
            {
              "name": "currency",
              "in": "query",
              "value": "$inputs.currency"
            },
            {
              "name": "unitofmeasure",
              "in": "query",
              "value": "$inputs.unitofmeasure"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metalPerformanceData": "$response.body#/0/metalPerformanceData"
          }
        }
      ],
      "outputs": {
        "supportedMetals": "$steps.get-supported-spot-metals.outputs.supportedMetals",
        "metalPerformanceData": "$steps.get-metal-spot-performance.outputs.metalPerformanceData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "analyze-annual-metal-spot-performance",
      "summary": "Allows a user to discover supported metals for spot pricing and then retrieve their annual historical performance data. This is useful for year-over-year comparison and long-term investment analysis.",
      "description": "Allows a user to discover supported metals for spot pricing and then retrieve their annual historical performance data. This is useful for year-over-year comparison and long-term investment analysis.",
      "inputs": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string"
          },
          "metals": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "unitofmeasure": {
            "type": "string"
          },
          "years": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-supported-spot-metals",
          "description": "Retrieves a list of metal symbols supported by the spot endpoints.",
          "operationId": "Metals_SpotSupportedMetals_GET",
          "parameters": [
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "supportedMetals": "$response.body#/0/supportedMetals"
          }
        },
        {
          "stepId": "get-metal-annual-spot-performance",
          "description": "Retrieves annual historical performance information for specified metals over a given number of years, optionally converted to a specific currency and unit of measure. The 'metals' input should be a comma-separated string of metal symbols obtained from the previous step.",
          "operationId": "Metals_SpotAnnualHistoricalPerformance_GET",
          "parameters": [
            {
              "name": "metals",
              "in": "query",
              "value": "$steps.get-supported-spot-metals.outputs.supportedMetals"
            },
            {
              "name": "currency",
              "in": "query",
              "value": "$inputs.currency"
            },
            {
              "name": "unitofmeasure",
              "in": "query",
              "value": "$inputs.unitofmeasure"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "years",
              "in": "query",
              "value": "$inputs.years"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "metalAnnualPerformanceData": "$response.body#/0/metalAnnualPerformanceData"
          }
        }
      ],
      "outputs": {
        "supportedMetals": "$steps.get-supported-spot-metals.outputs.supportedMetals",
        "metalAnnualPerformanceData": "$steps.get-metal-annual-spot-performance.outputs.metalAnnualPerformanceData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
