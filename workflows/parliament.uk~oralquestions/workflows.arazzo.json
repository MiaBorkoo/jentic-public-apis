{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/parliament.uk/oralquestions/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "track-departmental-oral-questions-for-a-specific-day",
      "summary": "Identify the scheduled Oral Question Times (OQTs) for a specific government department (Answering Body) on a given date, and then retrieve the list of oral questions associated with one of those scheduled times.",
      "description": "Identify the scheduled Oral Question Times (OQTs) for a specific government department (Answering Body) on a given date, and then retrieve the list of oral questions associated with one of those scheduled times.",
      "inputs": {
        "type": "object",
        "properties": {
          "parameters.answeringDateStart": {
            "type": "string"
          },
          "parameters.answeringDateEnd": {
            "type": "string"
          },
          "parameters.deadlineDateStart": {
            "type": "string"
          },
          "parameters.deadlineDateEnd": {
            "type": "string"
          },
          "parameters.oralQuestionTimeId": {
            "type": "string"
          },
          "parameters.answeringBodyIds": {
            "type": "string"
          },
          "parameters.skip": {
            "type": "string"
          },
          "parameters.take": {
            "type": "string"
          },
          "parameters.questionType": {
            "type": "string"
          },
          "parameters.statuses": {
            "type": "string"
          },
          "parameters.askingMemberIds": {
            "type": "string"
          },
          "parameters.uINs": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-departmental-oqts",
          "description": "Find Oral Question Times for a specific answering body within a date range.",
          "operationId": "PublishedOralQuestionTime_Get",
          "parameters": [
            {
              "name": "parameters.answeringDateStart",
              "in": "query",
              "value": "$inputs.parameters.answeringDateStart"
            },
            {
              "name": "parameters.answeringDateEnd",
              "in": "query",
              "value": "$inputs.parameters.answeringDateEnd"
            },
            {
              "name": "parameters.deadlineDateStart",
              "in": "query",
              "value": "$inputs.parameters.deadlineDateStart"
            },
            {
              "name": "parameters.deadlineDateEnd",
              "in": "query",
              "value": "$inputs.parameters.deadlineDateEnd"
            },
            {
              "name": "parameters.oralQuestionTimeId",
              "in": "query",
              "value": "$inputs.parameters.oralQuestionTimeId"
            },
            {
              "name": "parameters.answeringBodyIds",
              "in": "query",
              "value": "$inputs.parameters.answeringBodyIds"
            },
            {
              "name": "parameters.skip",
              "in": "query",
              "value": "$inputs.parameters.skip"
            },
            {
              "name": "parameters.take",
              "in": "query",
              "value": "$inputs.parameters.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "oqt_list": "$response.body"
          }
        },
        {
          "stepId": "list-questions-for-oqt",
          "description": "Retrieve the list of oral questions scheduled for a specific Oral Question Time ID.",
          "operationId": "PublishedOralQuestion_Get",
          "parameters": [
            {
              "name": "parameters.answeringDateStart",
              "in": "query",
              "value": "$inputs.parameters.answeringDateStart"
            },
            {
              "name": "parameters.answeringDateEnd",
              "in": "query",
              "value": "$inputs.parameters.answeringDateEnd"
            },
            {
              "name": "parameters.questionType",
              "in": "query",
              "value": "$inputs.parameters.questionType"
            },
            {
              "name": "parameters.oralQuestionTimeId",
              "in": "query",
              "value": "$steps.find-departmental-oqts.outputs.oqt_list.Response[0].Id"
            },
            {
              "name": "parameters.statuses",
              "in": "query",
              "value": "$inputs.parameters.statuses"
            },
            {
              "name": "parameters.askingMemberIds",
              "in": "query",
              "value": "$inputs.parameters.askingMemberIds"
            },
            {
              "name": "parameters.uINs",
              "in": "query",
              "value": "$inputs.parameters.uINs"
            },
            {
              "name": "parameters.answeringBodyIds",
              "in": "query",
              "value": "$inputs.parameters.answeringBodyIds"
            },
            {
              "name": "parameters.skip",
              "in": "query",
              "value": "$inputs.parameters.skip"
            },
            {
              "name": "parameters.take",
              "in": "query",
              "value": "$inputs.parameters.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "oral_question_list": "$response.body"
          }
        }
      ],
      "outputs": {
        "oqt_list": "$steps.find-departmental-oqts.outputs.oqt_list",
        "oral_question_list": "$steps.list-questions-for-oqt.outputs.oral_question_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-and-view-specific-early-day-motion",
      "summary": "Search for Early Day Motions (EDMs) based on criteria like keywords or the tabling Member of Parliament (MP), and then retrieve the full details of a specific EDM identified in the search results.",
      "description": "Search for Early Day Motions (EDMs) based on criteria like keywords or the tabling Member of Parliament (MP), and then retrieve the full details of a specific EDM identified in the search results.",
      "inputs": {
        "type": "object",
        "properties": {
          "parameters.edmIds": {
            "type": "string"
          },
          "parameters.uINWithAmendmentSuffix": {
            "type": "string"
          },
          "parameters.searchTerm": {
            "type": "string"
          },
          "parameters.currentStatusDateStart": {
            "type": "string"
          },
          "parameters.currentStatusDateEnd": {
            "type": "string"
          },
          "parameters.isPrayer": {
            "type": "string"
          },
          "parameters.memberId": {
            "type": "string"
          },
          "parameters.includeSponsoredByMember": {
            "type": "string"
          },
          "parameters.tabledStartDate": {
            "type": "string"
          },
          "parameters.tabledEndDate": {
            "type": "string"
          },
          "parameters.statuses": {
            "type": "string"
          },
          "parameters.orderBy": {
            "type": "string"
          },
          "parameters.skip": {
            "type": "string"
          },
          "parameters.take": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-edms",
          "description": "Search for EDMs using filters like search term, member ID, dates, etc.",
          "operationId": "PublishedEarlyDayMotion_Get",
          "parameters": [
            {
              "name": "parameters.edmIds",
              "in": "query",
              "value": "$inputs.parameters.edmIds"
            },
            {
              "name": "parameters.uINWithAmendmentSuffix",
              "in": "query",
              "value": "$inputs.parameters.uINWithAmendmentSuffix"
            },
            {
              "name": "parameters.searchTerm",
              "in": "query",
              "value": "$inputs.parameters.searchTerm"
            },
            {
              "name": "parameters.currentStatusDateStart",
              "in": "query",
              "value": "$inputs.parameters.currentStatusDateStart"
            },
            {
              "name": "parameters.currentStatusDateEnd",
              "in": "query",
              "value": "$inputs.parameters.currentStatusDateEnd"
            },
            {
              "name": "parameters.isPrayer",
              "in": "query",
              "value": "$inputs.parameters.isPrayer"
            },
            {
              "name": "parameters.memberId",
              "in": "query",
              "value": "$inputs.parameters.memberId"
            },
            {
              "name": "parameters.includeSponsoredByMember",
              "in": "query",
              "value": "$inputs.parameters.includeSponsoredByMember"
            },
            {
              "name": "parameters.tabledStartDate",
              "in": "query",
              "value": "$inputs.parameters.tabledStartDate"
            },
            {
              "name": "parameters.tabledEndDate",
              "in": "query",
              "value": "$inputs.parameters.tabledEndDate"
            },
            {
              "name": "parameters.statuses",
              "in": "query",
              "value": "$inputs.parameters.statuses"
            },
            {
              "name": "parameters.orderBy",
              "in": "query",
              "value": "$inputs.parameters.orderBy"
            },
            {
              "name": "parameters.skip",
              "in": "query",
              "value": "$inputs.parameters.skip"
            },
            {
              "name": "parameters.take",
              "in": "query",
              "value": "$inputs.parameters.take"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "edm_list": "$response.body"
          }
        },
        {
          "stepId": "get-edm-details",
          "description": "Retrieve the full details of a specific Early Day Motion using its ID.",
          "operationId": "PublishedEarlyDayMotion_Get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.search-edms.outputs.edm_list.Response[0].Id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "edm_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "edm_list": "$steps.search-edms.outputs.edm_list",
        "edm_details": "$steps.get-edm-details.outputs.edm_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}