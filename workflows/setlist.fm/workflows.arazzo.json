{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/setlist.fm/main/1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "find-artist-concert-history",
      "summary": "Allows a user to search for an artist by name and then retrieve a list of all concerts (setlists) performed by that artist. This is a fundamental user journey for music enthusiasts.",
      "description": "Allows a user to search for an artist by name and then retrieve a list of all concerts (setlists) performed by that artist. This is a fundamental user journey for music enthusiasts.",
      "inputs": {
        "type": "object",
        "properties": {
          "artistMbid": {
            "type": "string"
          },
          "artistName": {
            "type": "string"
          },
          "artistTmid": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "mbid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-artist-by-name",
          "description": "Searches for artists based on a provided name. This step identifies the specific artist to query for their setlists.",
          "operationId": "resource__1.0_search_artists_getArtists_GET",
          "parameters": [
            {
              "name": "artistMbid",
              "in": "query",
              "value": "$inputs.artistMbid"
            },
            {
              "name": "artistName",
              "in": "query",
              "value": "$inputs.artistName"
            },
            {
              "name": "artistTmid",
              "in": "query",
              "value": "$inputs.artistTmid"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "artists": "$response.body#/artist",
            "totalArtists": "$response.body#/totalArtists"
          }
        },
        {
          "stepId": "get-artist-setlists",
          "description": "Retrieves a paginated list of setlists for the identified artist using their Musicbrainz ID (MBID).",
          "operationId": "resource__1.0_artist__mbid__setlists_getArtistSetlists_GET",
          "parameters": [
            {
              "name": "mbid",
              "in": "path",
              "value": "$steps.search-artist-by-name.outputs.artists.mbid"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setlists": "$response.body#/setlist",
            "totalSetlists": "$response.body#/totalSetlists"
          }
        }
      ],
      "outputs": {
        "artists": "$steps.search-artist-by-name.outputs.artists",
        "totalArtists": "$steps.search-artist-by-name.outputs.totalArtists",
        "setlists": "$steps.get-artist-setlists.outputs.setlists",
        "totalSetlists": "$steps.get-artist-setlists.outputs.totalSetlists"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-venue-concerts",
      "summary": "Enables a user to search for a concert venue by name and then view all setlists (concerts) that have taken place at that specific venue. Useful for exploring a venue's history.",
      "description": "Enables a user to search for a concert venue by name and then view all setlists (concerts) that have taken place at that specific venue. Useful for exploring a venue's history.",
      "inputs": {
        "type": "object",
        "properties": {
          "cityId": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "venueId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-venue-by-name",
          "description": "Searches for concert venues based on criteria like name, city, or country. This step identifies the venue of interest.",
          "operationId": "resource__1.0_search_venues_getVenues_GET",
          "parameters": [
            {
              "name": "cityId",
              "in": "query",
              "value": "$inputs.cityId"
            },
            {
              "name": "cityName",
              "in": "query",
              "value": "$inputs.cityName"
            },
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            },
            {
              "name": "state",
              "in": "query",
              "value": "$inputs.state"
            },
            {
              "name": "stateCode",
              "in": "query",
              "value": "$inputs.stateCode"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "venues": "$response.body#/venue",
            "totalVenues": "$response.body#/totalVenues"
          }
        },
        {
          "stepId": "get-venue-setlists",
          "description": "Retrieves a paginated list of setlists for the identified venue using its unique ID.",
          "operationId": "resource__1.0_venue__venueId__setlists_getVenueSetlists_GET",
          "parameters": [
            {
              "name": "venueId",
              "in": "path",
              "value": "$steps.search-venue-by-name.outputs.venues.id"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setlists": "$response.body#/setlist",
            "totalSetlists": "$response.body#/totalSetlists"
          }
        }
      ],
      "outputs": {
        "venues": "$steps.search-venue-by-name.outputs.venues",
        "totalVenues": "$steps.search-venue-by-name.outputs.totalVenues",
        "setlists": "$steps.get-venue-setlists.outputs.setlists",
        "totalSetlists": "$steps.get-venue-setlists.outputs.totalSetlists"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-detailed-setlist",
      "summary": "Allows a user to search for setlists based on various criteria (e.g., artist, year, city) and then retrieve the full details of a specific setlist, including its songs and other information.",
      "description": "Allows a user to search for setlists based on various criteria (e.g., artist, year, city) and then retrieve the full details of a specific setlist, including its songs and other information.",
      "inputs": {
        "type": "object",
        "properties": {
          "artistMbid": {
            "type": "string"
          },
          "artistName": {
            "type": "string"
          },
          "artistTmid": {
            "type": "string"
          },
          "cityId": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "lastFm": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "tourName": {
            "type": "string"
          },
          "venueId": {
            "type": "string"
          },
          "venueName": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "setlistId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-setlists",
          "description": "Searches for setlists using a combination of parameters such as artist name, year, city, or date. This provides a list of potential setlists.",
          "operationId": "resource__1.0_search_setlists_getSetlists_GET",
          "parameters": [
            {
              "name": "artistMbid",
              "in": "query",
              "value": "$inputs.artistMbid"
            },
            {
              "name": "artistName",
              "in": "query",
              "value": "$inputs.artistName"
            },
            {
              "name": "artistTmid",
              "in": "query",
              "value": "$inputs.artistTmid"
            },
            {
              "name": "cityId",
              "in": "query",
              "value": "$inputs.cityId"
            },
            {
              "name": "cityName",
              "in": "query",
              "value": "$inputs.cityName"
            },
            {
              "name": "countryCode",
              "in": "query",
              "value": "$inputs.countryCode"
            },
            {
              "name": "date",
              "in": "query",
              "value": "$inputs.date"
            },
            {
              "name": "lastFm",
              "in": "query",
              "value": "$inputs.lastFm"
            },
            {
              "name": "lastUpdated",
              "in": "query",
              "value": "$inputs.lastUpdated"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            },
            {
              "name": "state",
              "in": "query",
              "value": "$inputs.state"
            },
            {
              "name": "stateCode",
              "in": "query",
              "value": "$inputs.stateCode"
            },
            {
              "name": "tourName",
              "in": "query",
              "value": "$inputs.tourName"
            },
            {
              "name": "venueId",
              "in": "query",
              "value": "$inputs.venueId"
            },
            {
              "name": "venueName",
              "in": "query",
              "value": "$inputs.venueName"
            },
            {
              "name": "year",
              "in": "query",
              "value": "$inputs.year"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setlists": "$response.body#/setlist",
            "totalSetlists": "$response.body#/totalSetlists"
          }
        },
        {
          "stepId": "retrieve-setlist-details",
          "description": "Fetches the complete and current details of a specific setlist using its unique ID, including the full song list and concert information.",
          "operationId": "resource__1.0_setlist__setlistId__getSetlist_GET",
          "parameters": [
            {
              "name": "setlistId",
              "in": "path",
              "value": "$steps.search-setlists.outputs.setlists.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setlistDetails": "$response.body#/setlistDetails"
          }
        }
      ],
      "outputs": {
        "setlists": "$steps.search-setlists.outputs.setlists",
        "totalSetlists": "$steps.search-setlists.outputs.totalSetlists",
        "setlistDetails": "$steps.retrieve-setlist-details.outputs.setlistDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "discover-artists-by-city",
      "summary": "Enables a user to find a city and then discover artists who have performed concerts in that city by retrieving setlists and extracting artist information. This helps in exploring local music scenes.",
      "description": "Enables a user to find a city and then discover artists who have performed concerts in that city by retrieving setlists and extracting artist information. This helps in exploring local music scenes.",
      "inputs": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "artistMbid": {
            "type": "string"
          },
          "artistName": {
            "type": "string"
          },
          "artistTmid": {
            "type": "string"
          },
          "cityId": {
            "type": "string"
          },
          "cityName": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "lastFm": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string"
          },
          "tourName": {
            "type": "string"
          },
          "venueId": {
            "type": "string"
          },
          "venueName": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "mbid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-city",
          "description": "Searches for a city by name, country, or state to get its unique geoId.",
          "operationId": "resource__1.0_search_cities_getCities_GET",
          "parameters": [
            {
              "name": "country",
              "in": "query",
              "value": "$inputs.country"
            },
            {
              "name": "name",
              "in": "query",
              "value": "$inputs.name"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            },
            {
              "name": "state",
              "in": "query",
              "value": "$inputs.state"
            },
            {
              "name": "stateCode",
              "in": "query",
              "value": "$inputs.stateCode"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "cities": "$response.body#/cities",
            "totalCities": "$response.body#/totalCities"
          }
        },
        {
          "stepId": "search-setlists-by-city",
          "description": "Searches for setlists that took place in the identified city using its geoId. This provides concert events from which artists can be extracted.",
          "operationId": "resource__1.0_search_setlists_getSetlists_GET",
          "parameters": [
            {
              "name": "artistMbid",
              "in": "query",
              "value": "$inputs.artistMbid"
            },
            {
              "name": "artistName",
              "in": "query",
              "value": "$inputs.artistName"
            },
            {
              "name": "artistTmid",
              "in": "query",
              "value": "$inputs.artistTmid"
            },
            {
              "name": "cityId",
              "in": "query",
              "value": "$steps.search-city.outputs.cities.id"
            },
            {
              "name": "cityName",
              "in": "query",
              "value": "$inputs.cityName"
            },
            {
              "name": "countryCode",
              "in": "query",
              "value": "$inputs.countryCode"
            },
            {
              "name": "date",
              "in": "query",
              "value": "$inputs.date"
            },
            {
              "name": "lastFm",
              "in": "query",
              "value": "$inputs.lastFm"
            },
            {
              "name": "lastUpdated",
              "in": "query",
              "value": "$inputs.lastUpdated"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            },
            {
              "name": "state",
              "in": "query",
              "value": "$inputs.state"
            },
            {
              "name": "stateCode",
              "in": "query",
              "value": "$inputs.stateCode"
            },
            {
              "name": "tourName",
              "in": "query",
              "value": "$inputs.tourName"
            },
            {
              "name": "venueId",
              "in": "query",
              "value": "$inputs.venueId"
            },
            {
              "name": "venueName",
              "in": "query",
              "value": "$inputs.venueName"
            },
            {
              "name": "year",
              "in": "query",
              "value": "$inputs.year"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setlists": "$response.body#/setlist",
            "totalSetlists": "$response.body#/totalSetlists"
          }
        },
        {
          "stepId": "get-artist-details-from-setlists",
          "description": "Retrieves detailed information for a specific artist found in the setlists from the previous step. This operation would typically be called for each unique artist MBID found.",
          "operationId": "resource__1.0_artist__mbid__getArtist_GET",
          "parameters": [
            {
              "name": "mbid",
              "in": "path",
              "value": "$steps.search-setlists-by-city.outputs.setlists.artist.mbid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "artistDetails": "$response.body#/artistDetails"
          }
        }
      ],
      "outputs": {
        "cities": "$steps.search-city.outputs.cities",
        "totalCities": "$steps.search-city.outputs.totalCities",
        "setlists": "$steps.search-setlists-by-city.outputs.setlists",
        "totalSetlists": "$steps.search-setlists-by-city.outputs.totalSetlists",
        "artistDetails": "$steps.get-artist-details-from-setlists.outputs.artistDetails"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "view-user-concert-activity",
      "summary": "Allows an application to retrieve lists of concerts a specific user has marked as attended or has edited on setlist.fm. This provides insight into a user's engagement with the platform.",
      "description": "Allows an application to retrieve lists of concerts a specific user has marked as attended or has edited on setlist.fm. This provides insight into a user's engagement with the platform.",
      "inputs": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "p": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-user-attended-setlists",
          "description": "Fetches a paginated list of setlists for concerts that a specific user has marked as attended.",
          "operationId": "resource__1.0_user__userId__attended_getUserAttendedSetlists_GET",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "attendedSetlists": "$response.body#/attendedSetlists",
            "totalAttended": "$response.body#/totalAttended"
          }
        },
        {
          "stepId": "get-user-edited-setlists",
          "description": "Fetches a paginated list of setlists that a specific user has edited. This shows their contributions to the setlist.fm database.",
          "operationId": "resource__1.0_user__userId__edited_getUserEditedSetlists_GET",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "p",
              "in": "query",
              "value": "$inputs.p"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "editedSetlists": "$response.body#/editedSetlists",
            "totalEdited": "$response.body#/totalEdited"
          }
        }
      ],
      "outputs": {
        "attendedSetlists": "$steps.get-user-attended-setlists.outputs.attendedSetlists",
        "totalAttended": "$steps.get-user-attended-setlists.outputs.totalAttended",
        "editedSetlists": "$steps.get-user-edited-setlists.outputs.editedSetlists",
        "totalEdited": "$steps.get-user-edited-setlists.outputs.totalEdited"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}