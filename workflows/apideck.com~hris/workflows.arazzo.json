{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/apideck.com/hris/10.14.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "create-employee-and-verify-details",
      "summary": "Adds a new employee record to the HRIS system and then retrieves the full details to confirm successful creation and potentially populate a local system.",
      "description": "Adds a new employee record to the HRIS system and then retrieves the full details to confirm successful creation and potentially populate a local system.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "create-employee_body": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-employee",
          "description": "Creates a new employee record with provided details.",
          "operationId": "employeesAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-employee_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "get-new-employee-details",
          "description": "Retrieves the full details of the newly created employee using their ID.",
          "operationId": "employeesOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Employee object (full details)": "$response.body"
          }
        }
      ],
      "outputs": {
        "employee_id": "$steps.create-employee.outputs.employee_id",
        "Employee object (full details)": "$steps.get-new-employee-details.outputs.Employee object (full details)"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "create-and-approve-time-off-request",
      "summary": "Allows creating a time off request for an employee and subsequently updating its status to 'approved'.",
      "description": "Allows creating a time off request for an employee and subsequently updating its status to 'approved'.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "create-time-off-request_body": {
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "employee_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-employee-for-time-off",
          "description": "Find the employee for whom to create the time off request. Assumes filter returns a unique employee.",
          "operationId": "employeesAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "create-time-off-request",
          "description": "Creates a new time off request for the specified employee.",
          "operationId": "timeOffRequestsAdd",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-time-off-request_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "time_off_request_id": "$response.body"
          }
        },
        {
          "stepId": "approve-time-off-request",
          "description": "Updates the status of the created time off request to 'approved'.",
          "operationId": "timeOffRequestsUpdate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "employee_id",
              "in": "path",
              "value": "$steps.find-employee-for-time-off.outputs.employee_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "employee_id": "$steps.find-employee-for-time-off.outputs.employee_id",
              "time_off_request_id": "$steps.create-time-off-request.outputs.time_off_request_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updated_time_off_request_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "employee_id": "$steps.find-employee-for-time-off.outputs.employee_id",
        "time_off_request_id": "$steps.create-time-off-request.outputs.time_off_request_id",
        "updated_time_off_request_id": "$steps.approve-time-off-request.outputs.updated_time_off_request_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-employee-termination-details",
      "summary": "Updates an existing employee's record to reflect their termination, including setting the end date and status.",
      "description": "Updates an existing employee's record to reflect their termination, including setting the end date and status.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-employee-to-terminate",
          "description": "Find the employee to terminate using filter parameters like employee number or email. Assumes filter returns a unique employee.",
          "operationId": "employeesAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "update-employee-termination-info",
          "description": "Updates the specified employee's record with termination details like end date and status.",
          "operationId": "employeesUpdate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "employee_id": "$steps.find-employee-to-terminate.outputs.employee_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updated_employee_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "employee_id": "$steps.find-employee-to-terminate.outputs.employee_id",
        "updated_employee_id": "$steps.update-employee-termination-info.outputs.updated_employee_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "process-pending-time-off-request",
      "summary": "Finds pending time off requests, retrieves details for a specific one, and allows updating its status (e.g., approve or decline).",
      "description": "Finds pending time off requests, retrieves details for a specific one, and allows updating its status (e.g., approve or decline).",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "employee_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-pending-time-off-requests",
          "description": "Lists time off requests with a 'requested' status using filters.",
          "operationId": "timeOffRequestsAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pending_requests_list (array of TimeOffRequest objects, containing id and employee_id)": "$response.body"
          }
        },
        {
          "stepId": "get-specific-pending-request-details",
          "description": "Retrieves the full details of a specific pending time off request selected from the list.",
          "operationId": "timeOffRequestsOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "employee_id",
              "in": "path",
              "value": "$inputs.employee_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "TimeOffRequest object (full details)": "$response.body"
          }
        },
        {
          "stepId": "update-time-off-request-status",
          "description": "Updates the status of the selected time off request (e.g., to 'approved' or 'declined').",
          "operationId": "timeOffRequestsUpdate",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "employee_id",
              "in": "path",
              "value": "$inputs.employee_id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "employee_id": "$inputs.employee_id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updated_time_off_request_id": "$response.body"
          }
        }
      ],
      "outputs": {
        "pending_requests_list (array of TimeOffRequest objects, containing id and employee_id)": "$steps.list-pending-time-off-requests.outputs.pending_requests_list (array of TimeOffRequest objects, containing id and employee_id)",
        "TimeOffRequest object (full details)": "$steps.get-specific-pending-request-details.outputs.TimeOffRequest object (full details)",
        "updated_time_off_request_id": "$steps.update-time-off-request-status.outputs.updated_time_off_request_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-employee-payroll-history",
      "summary": "Fetches the payroll history for a specific employee, useful for reporting or providing employees access to their pay stubs.",
      "description": "Fetches the payroll history for a specific employee, useful for reporting or providing employees access to their pay stubs.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "employee_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-employee-for-payroll",
          "description": "Find the employee using filter parameters. Assumes filter returns a unique employee.",
          "operationId": "employeesAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "list-employee-payrolls",
          "description": "Retrieves a list of payroll records associated with the specified employee ID.",
          "operationId": "employeePayrollsAll",
          "parameters": [
            {
              "name": "employee_id",
              "in": "path",
              "value": "$steps.find-employee-for-payroll.outputs.employee_id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "payrolls_list (array of EmployeePayroll objects)": "$response.body"
          }
        }
      ],
      "outputs": {
        "employee_id": "$steps.find-employee-for-payroll.outputs.employee_id",
        "payrolls_list (array of EmployeePayroll objects)": "$steps.list-employee-payrolls.outputs.payrolls_list (array of EmployeePayroll objects)"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-employee-details-and-schedule",
      "summary": "Retrieves the full details of an employee along with their work schedule/pattern.",
      "description": "Retrieves the full details of an employee along with their work schedule/pattern.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "raw": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "employee_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-employee-info",
          "description": "Retrieves the full details for a specific employee ID.",
          "operationId": "employeesOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "Employee object": "$response.body",
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "get-employee-schedule-info",
          "description": "Retrieves the work schedule(s) for the specified employee.",
          "operationId": "employeeSchedulesAll",
          "parameters": [
            {
              "name": "employee_id",
              "in": "path",
              "value": "$steps.get-employee-info.outputs.employee_id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "EmployeeSchedules object": "$response.body"
          }
        }
      ],
      "outputs": {
        "Employee object": "$steps.get-employee-info.outputs.Employee object",
        "employee_id": "$steps.get-employee-info.outputs.employee_id",
        "EmployeeSchedules object": "$steps.get-employee-schedule-info.outputs.EmployeeSchedules object"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "review-specific-employee-payroll-details",
      "summary": "Retrieves the detailed information for a single, specific payroll run for a given employee.",
      "description": "Retrieves the detailed information for a single, specific payroll run for a given employee.",
      "inputs": {
        "type": "object",
        "properties": {
          "raw": {
            "type": "string"
          },
          "x-apideck-consumer-id": {
            "type": "string"
          },
          "x-apideck-app-id": {
            "type": "string"
          },
          "x-apideck-service-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "sort": {
            "type": "string"
          },
          "pass_through": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "employee_id": {
            "type": "string"
          },
          "payroll_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-employee-for-specific-payroll",
          "description": "Find the employee using filter parameters. Assumes filter returns a unique employee.",
          "operationId": "employeesAll",
          "parameters": [
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "sort",
              "in": "query",
              "value": "$inputs.sort"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "employee_id": "$response.body"
          }
        },
        {
          "stepId": "list-payrolls-for-employee",
          "description": "Retrieves a list of payroll records for the employee to identify the target payroll ID.",
          "operationId": "employeePayrollsAll",
          "parameters": [
            {
              "name": "employee_id",
              "in": "path",
              "value": "$steps.find-employee-for-specific-payroll.outputs.employee_id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            },
            {
              "name": "pass_through",
              "in": "query",
              "value": "$inputs.pass_through"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "payrolls_list (containing payroll_ids)": "$response.body"
          }
        },
        {
          "stepId": "get-specific-employee-payroll-detail",
          "description": "Retrieves the full details of a specific payroll run for the employee.",
          "operationId": "employeePayrollsOne",
          "parameters": [
            {
              "name": "payroll_id",
              "in": "path",
              "value": "$inputs.payroll_id"
            },
            {
              "name": "employee_id",
              "in": "path",
              "value": "$steps.find-employee-for-specific-payroll.outputs.employee_id"
            },
            {
              "name": "raw",
              "in": "query",
              "value": "$inputs.raw"
            },
            {
              "name": "x-apideck-consumer-id",
              "in": "header",
              "value": "$inputs.x-apideck-consumer-id"
            },
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "x-apideck-service-id",
              "in": "header",
              "value": "$inputs.x-apideck-service-id"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "EmployeePayroll object (full details)": "$response.body"
          }
        }
      ],
      "outputs": {
        "employee_id": "$steps.find-employee-for-specific-payroll.outputs.employee_id",
        "payrolls_list (containing payroll_ids)": "$steps.list-payrolls-for-employee.outputs.payrolls_list (containing payroll_ids)",
        "EmployeePayroll object (full details)": "$steps.get-specific-employee-payroll-detail.outputs.EmployeePayroll object (full details)"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}