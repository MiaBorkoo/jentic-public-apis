{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/randommer.io/main/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "generate-iban-for-a-specific-country",
      "summary": "Retrieves a list of supported countries and then generates a random IBAN number for a selected country. Useful for populating financial test data.",
      "description": "Retrieves a list of supported countries and then generates a random IBAN number for a selected country. Useful for populating financial test data.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-finance-countries",
          "description": "Get the list of available countries for which IBANs can be generated.",
          "operationPath": "openapi_source#/paths/~1api~1Finance~1Countries/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_countries": "$response.body"
          }
        },
        {
          "stepId": "generate-iban",
          "description": "Generate a random IBAN for the specified country code.",
          "operationPath": "openapi_source#/paths/~1api~1Finance~1Iban~1{countryCode}/get",
          "parameters": [
            {
              "name": "countryCode",
              "in": "path",
              "value": "$steps.list-finance-countries.outputs.available_countries.code"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "iban_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_countries": "$steps.list-finance-countries.outputs.available_countries",
        "iban_data": "$steps.generate-iban.outputs.iban_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-card-number-for-a-specific-type",
      "summary": "Retrieves the list of supported card types (e.g., Visa, Mastercard) and then generates a random card number for a selected type. Useful for populating payment form test data.",
      "description": "Retrieves the list of supported card types (e.g., Visa, Mastercard) and then generates a random card number for a selected type. Useful for populating payment form test data.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-card-types",
          "description": "Get the list of available card types.",
          "operationPath": "openapi_source#/paths/~1api~1Card~1Types/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_card_types": "$response.body"
          }
        },
        {
          "stepId": "generate-card-number",
          "description": "Generate a random card number for the specified type.",
          "operationPath": "openapi_source#/paths/~1api~1Card/get",
          "parameters": [
            {
              "name": "type",
              "in": "query",
              "value": "$steps.list-card-types.outputs.available_card_types"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "card_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_card_types": "$steps.list-card-types.outputs.available_card_types",
        "card_data": "$steps.generate-card-number.outputs.card_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-crypto-address-for-a-specific-type",
      "summary": "Retrieves the list of supported cryptocurrency types and then generates a random address for a selected crypto type. Useful for testing crypto-related features.",
      "description": "Retrieves the list of supported cryptocurrency types and then generates a random address for a selected crypto type. Useful for testing crypto-related features.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "cryptoType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-crypto-types",
          "description": "Get the list of available cryptocurrency types.",
          "operationPath": "openapi_source#/paths/~1api~1Finance~1CryptoAddress~1Types/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_crypto_types": "$response.body"
          }
        },
        {
          "stepId": "generate-crypto-address",
          "description": "Generate a random crypto address for the specified type.",
          "operationPath": "openapi_source#/paths/~1api~1Finance~1CryptoAddress/get",
          "parameters": [
            {
              "name": "cryptoType",
              "in": "query",
              "value": "$steps.list-crypto-types.outputs.available_crypto_types"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "crypto_address_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_crypto_types": "$steps.list-crypto-types.outputs.available_crypto_types",
        "crypto_address_data": "$steps.generate-crypto-address.outputs.crypto_address_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-phone-numbers-for-a-specific-country",
      "summary": "Retrieves a list of supported countries and then generates a specified quantity of random phone numbers for a selected country. Useful for generating bulk test user data.",
      "description": "Retrieves a list of supported countries and then generates a specified quantity of random phone numbers for a selected country. Useful for generating bulk test user data.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "Quantity": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-phone-countries",
          "description": "Get the list of available countries for which phone numbers can be generated.",
          "operationPath": "openapi_source#/paths/~1api~1Phone~1Countries/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_countries": "$response.body"
          }
        },
        {
          "stepId": "generate-phone-numbers",
          "description": "Generate a bulk quantity of random phone numbers for the specified country code.",
          "operationPath": "openapi_source#/paths/~1api~1Phone~1Generate/get",
          "parameters": [
            {
              "name": "CountryCode",
              "in": "query",
              "value": "$steps.list-phone-countries.outputs.available_countries.code"
            },
            {
              "name": "Quantity",
              "in": "query",
              "value": "$inputs.Quantity"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "phone_numbers": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_countries": "$steps.list-phone-countries.outputs.available_countries",
        "phone_numbers": "$steps.generate-phone-numbers.outputs.phone_numbers"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-culture-specific-business-names",
      "summary": "Retrieves a list of supported cultures and then generates a specified number of random business names appropriate for a selected culture.",
      "description": "Retrieves a list of supported cultures and then generates a specified number of random business names appropriate for a selected culture.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "cultureCode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-name-cultures",
          "description": "Get the list of available cultures for name generation.",
          "operationPath": "openapi_source#/paths/~1api~1Name~1Cultures/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_cultures": "$response.body"
          }
        },
        {
          "stepId": "generate-business-names",
          "description": "Generate random business names for the specified culture code.",
          "operationPath": "openapi_source#/paths/~1api~1Name~1BusinessName/post",
          "parameters": [
            {
              "name": "number",
              "in": "query",
              "value": "$inputs.number"
            },
            {
              "name": "cultureCode",
              "in": "query",
              "value": "$steps.list-name-cultures.outputs.available_cultures"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "business_names": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_cultures": "$steps.list-name-cultures.outputs.available_cultures",
        "business_names": "$steps.generate-business-names.outputs.business_names"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "validate-phone-number",
      "summary": "Optionally retrieves a list of supported countries to find the correct country code, then validates a given phone number, potentially using the country code for context.",
      "description": "Optionally retrieves a list of supported countries to find the correct country code, then validates a given phone number, potentially using the country code for context.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-phone-countries-for-validation",
          "description": "Get the list of available countries to help identify the correct country code for validation.",
          "operationPath": "openapi_source#/paths/~1api~1Phone~1Countries/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_countries": "$response.body"
          }
        },
        {
          "stepId": "validate-phone-number",
          "description": "Validate the provided phone number. Optionally provide a country code.",
          "operationPath": "openapi_source#/paths/~1api~1Phone~1Validate/get",
          "parameters": [
            {
              "name": "telephone",
              "in": "query",
              "value": "$inputs.telephone"
            },
            {
              "name": "CountryCode",
              "in": "query",
              "value": "$steps.list-phone-countries-for-validation.outputs.available_countries.code"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "validation_result": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_countries": "$steps.list-phone-countries-for-validation.outputs.available_countries",
        "validation_result": "$steps.validate-phone-number.outputs.validation_result"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "generate-culture-specific-random-addresses",
      "summary": "Retrieves a list of supported cultures and then generates a specified number of random addresses formatted according to a selected culture.",
      "description": "Retrieves a list of supported cultures and then generates a specified number of random addresses formatted according to a selected culture.",
      "inputs": {
        "type": "object",
        "properties": {
          "X-Api-Key": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "culture": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-misc-cultures",
          "description": "Get the list of available cultures for address generation.",
          "operationPath": "openapi_source#/paths/~1api~1Misc~1Cultures/get",
          "parameters": [
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "available_cultures": "$response.body"
          }
        },
        {
          "stepId": "generate-random-addresses",
          "description": "Generate random addresses for the specified culture.",
          "operationPath": "openapi_source#/paths/~1api~1Misc~1Random-Address/get",
          "parameters": [
            {
              "name": "number",
              "in": "query",
              "value": "$inputs.number"
            },
            {
              "name": "culture",
              "in": "query",
              "value": "$steps.list-misc-cultures.outputs.available_cultures"
            },
            {
              "name": "X-Api-Key",
              "in": "header",
              "value": "$inputs.X-Api-Key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "random_addresses": "$response.body"
          }
        }
      ],
      "outputs": {
        "available_cultures": "$steps.list-misc-cultures.outputs.available_cultures",
        "random_addresses": "$steps.generate-random-addresses.outputs.random_addresses"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}