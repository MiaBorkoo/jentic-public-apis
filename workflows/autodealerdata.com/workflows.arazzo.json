{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/autodealerdata.com/main/1.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "regional-brand-market-analysis",
      "summary": "Analyze a specific brand's market performance within a chosen region, looking at market share, pricing, and supply metrics.",
      "description": "Analyze a specific brand's market performance within a chosen region, looking at market share, pricing, and supply metrics.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "get-regions",
          "description": "Fetch available region names to select one for analysis.",
          "operationId": "getRegions_getRegions_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "region_names": "$response.body"
          }
        },
        {
          "stepId": "get-brands",
          "description": "Fetch available brand names to select one for analysis.",
          "operationId": "getBrandNames_getBrands_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "brand_names": "$response.body"
          }
        },
        {
          "stepId": "get-brand-market-share",
          "description": "Get the market share for the selected brand in the selected region.",
          "operationId": "getRegionBrandMarketShare_getRegionBrandMarketShare_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$steps.get-regions.outputs.region_names"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "market_share_data": "$response.body"
          }
        },
        {
          "stepId": "get-brand-list-price",
          "description": "Get list price statistics for the selected brand in the selected region.",
          "operationId": "getAvgListPrice_listPrice_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$steps.get-regions.outputs.region_names"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "list_price_stats": "$response.body"
          }
        },
        {
          "stepId": "get-brand-sale-price",
          "description": "Get sale price statistics for the selected brand in the selected region.",
          "operationId": "getAvgSalePrice_salePrice_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$steps.get-regions.outputs.region_names"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sale_price_stats": "$response.body"
          }
        },
        {
          "stepId": "get-brand-days-supply",
          "description": "Get days of supply statistics for the selected brand in the selected region.",
          "operationId": "daysSupply_daysSupply_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$steps.get-regions.outputs.region_names"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "days_supply_stats": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "region_names": "$steps.get-regions.outputs.region_names",
        "brand_names": "$steps.get-brands.outputs.brand_names",
        "market_share_data": "$steps.get-brand-market-share.outputs.market_share_data",
        "list_price_stats": "$steps.get-brand-list-price.outputs.list_price_stats",
        "sale_price_stats": "$steps.get-brand-sale-price.outputs.sale_price_stats",
        "days_supply_stats": "$steps.get-brand-days-supply.outputs.days_supply_stats"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "vehicle-valuation-using-vin",
      "summary": "Determine the market value of a specific vehicle identified by its VIN by analyzing sales data of similar vehicles in a region.",
      "description": "Determine the market value of a specific vehicle identified by its VIN by analyzing sales data of similar vehicles in a region.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "daysBack": {
            "type": "string"
          },
          "sameYear": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "get-regions",
          "description": "Fetch available region names to select one for valuation context.",
          "operationId": "getRegions_getRegions_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "region_names": "$response.body"
          }
        },
        {
          "stepId": "get-similar-sale-price",
          "description": "Get average sale price, standard deviation, and count for similar new and used vehicles based on the provided VIN and region.",
          "operationId": "getMarket3_similarSalePrice_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "vin",
              "in": "query",
              "value": "$inputs.vin"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$steps.get-regions.outputs.region_names"
            },
            {
              "name": "daysBack",
              "in": "query",
              "value": "$inputs.daysBack"
            },
            {
              "name": "sameYear",
              "in": "query",
              "value": "$inputs.sameYear"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "similar_vehicle_market_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "region_names": "$steps.get-regions.outputs.region_names",
        "similar_vehicle_market_data": "$steps.get-similar-sale-price.outputs.similar_vehicle_market_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-local-vehicle-inventory",
      "summary": "Search for vehicle listings based on geographic location (Zip Code or GPS coordinates) and optionally filter by brand, model, year, etc.",
      "description": "Search for vehicle listings based on geographic location (Zip Code or GPS coordinates) and optionally filter by brand, model, year, etc.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "dealerID": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "latitude": {
            "type": "string"
          },
          "longitude": {
            "type": "string"
          },
          "radius": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "modelName": {
            "type": "string"
          },
          "modelYear": {
            "type": "string"
          },
          "mileageLow": {
            "type": "string"
          },
          "mileageHigh": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "daysBack": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "newCars": {
            "type": "string"
          },
          "extendedSearch": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "search-listings",
          "description": "Perform a flexible search for vehicle listings using criteria like zipCode, radius, brandName, modelName, newCars.",
          "operationId": "getListings2_listings2_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "dealerID",
              "in": "query",
              "value": "$inputs.dealerID"
            },
            {
              "name": "zipCode",
              "in": "query",
              "value": "$inputs.zipCode"
            },
            {
              "name": "latitude",
              "in": "query",
              "value": "$inputs.latitude"
            },
            {
              "name": "longitude",
              "in": "query",
              "value": "$inputs.longitude"
            },
            {
              "name": "radius",
              "in": "query",
              "value": "$inputs.radius"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$inputs.regionName"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$inputs.brandName"
            },
            {
              "name": "modelName",
              "in": "query",
              "value": "$inputs.modelName"
            },
            {
              "name": "modelYear",
              "in": "query",
              "value": "$inputs.modelYear"
            },
            {
              "name": "mileageLow",
              "in": "query",
              "value": "$inputs.mileageLow"
            },
            {
              "name": "mileageHigh",
              "in": "query",
              "value": "$inputs.mileageHigh"
            },
            {
              "name": "startDate",
              "in": "query",
              "value": "$inputs.startDate"
            },
            {
              "name": "endDate",
              "in": "query",
              "value": "$inputs.endDate"
            },
            {
              "name": "daysBack",
              "in": "query",
              "value": "$inputs.daysBack"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "newCars",
              "in": "query",
              "value": "$inputs.newCars"
            },
            {
              "name": "extendedSearch",
              "in": "query",
              "value": "$inputs.extendedSearch"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "listings_response": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "listings_response": "$steps.search-listings.outputs.listings_response"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "analyze-model-sales-price-distribution",
      "summary": "Understand the distribution of sales prices for a specific vehicle model within a region using a histogram.",
      "description": "Understand the distribution of sales prices for a specific vehicle model within a region using a histogram.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "brandName": {
            "type": "string"
          },
          "filtered": {
            "type": "string"
          },
          "modelName": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "get-brands",
          "description": "Fetch available brand names.",
          "operationId": "getBrandNames_getBrands_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "brand_names": "$response.body"
          }
        },
        {
          "stepId": "get-models",
          "description": "Fetch active model names for the selected brand.",
          "operationId": "getModelNames_getModels_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "filtered",
              "in": "query",
              "value": "$inputs.filtered"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "model_names": "$response.body"
          }
        },
        {
          "stepId": "get-sale-price-histogram",
          "description": "Get a histogram of sale prices for the selected model and brand in a specific region.",
          "operationId": "getModelSaleBuckets_salePriceHistogram_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "modelName",
              "in": "query",
              "value": "$steps.get-models.outputs.model_names.data[0].modelName"
            },
            {
              "name": "brandName",
              "in": "query",
              "value": "$steps.get-brands.outputs.brand_names"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$inputs.regionName"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "price_histogram_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "brand_names": "$steps.get-brands.outputs.brand_names",
        "model_names": "$steps.get-models.outputs.model_names",
        "price_histogram_data": "$steps.get-sale-price-histogram.outputs.price_histogram_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "track-specific-vehicle-history",
      "summary": "Check if a specific vehicle (by VIN) has been seen on the market recently and retrieve its dealership sales history if found.",
      "description": "Check if a specific vehicle (by VIN) has been seen on the market recently and retrieve its dealership sales history if found.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "afterDate": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "check-vehicle-seen",
          "description": "Check if the vehicle VIN appeared on the market on or after a specified date.",
          "operationId": "getVehicleSeen_vehicleSeen_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "vin",
              "in": "query",
              "value": "$inputs.vin"
            },
            {
              "name": "afterDate",
              "in": "query",
              "value": "$inputs.afterDate"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "seen_status": "$response.body"
          }
        },
        {
          "stepId": "get-vehicle-history",
          "description": "Retrieve the detailed sales history for the vehicle VIN. This step is typically performed if 'check-vehicle-seen' returns true.",
          "operationId": "getHistory2_vehicleHistory_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "vin",
              "in": "query",
              "value": "$inputs.vin"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "vehicle_history_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "seen_status": "$steps.check-vehicle-seen.outputs.seen_status",
        "vehicle_history_data": "$steps.get-vehicle-history.outputs.vehicle_history_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "competitor-dealer-inventory-analysis",
      "summary": "Identify dealerships in a specific region or zip code and retrieve their current vehicle listings.",
      "description": "Identify dealerships in a specific region or zip code and retrieve their current vehicle listings.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "regionName": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "dealerID": {
            "type": "string"
          },
          "newCars": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "find-dealers",
          "description": "Find dealerships within a specified region (paginated). Alternatively, /getDealers could be used with a zipCode.",
          "operationId": "getDealers_getDealersByRegion_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "regionName",
              "in": "query",
              "value": "$inputs.regionName"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dealership_list_response": "$response.body"
          }
        },
        {
          "stepId": "get-dealer-listings",
          "description": "Retrieve the vehicle listings for a specific dealer identified by their ID (obtained from the 'find-dealers' step). Loop this step for multiple dealers.",
          "operationId": "getListingsByDealer_listings_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "dealerID",
              "in": "query",
              "value": "$steps.find-dealers.outputs.dealership_list_response.data.dealers[0].ids[0]"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "newCars",
              "in": "query",
              "value": "$inputs.newCars"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "dealer_listings": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "dealership_list_response": "$steps.find-dealers.outputs.dealership_list_response",
        "dealer_listings": "$steps.get-dealer-listings.outputs.dealer_listings"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "decode-vin-and-check-recalls",
      "summary": "Decode a Vehicle Identification Number (VIN) to get vehicle specifications and check for any associated safety recalls.",
      "description": "Decode a Vehicle Identification Number (VIN) to get vehicle specifications and check for any associated safety recalls.",
      "inputs": {
        "type": "object",
        "properties": {
          "apiID": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          },
          "jwt": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "passEmpty": {
            "type": "string"
          },
          "includeRecall": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-token",
          "description": "Authenticate and get JWT.",
          "operationId": "makeToken_getToken_get",
          "parameters": [
            {
              "name": "apiID",
              "in": "query",
              "value": "$inputs.apiID"
            },
            {
              "name": "apiKey",
              "in": "query",
              "value": "$inputs.apiKey"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jwt_token": "$response.body"
          }
        },
        {
          "stepId": "decode-vin",
          "description": "Decode the provided VIN and optionally include recall information.",
          "operationId": "vinDecode_vinDecode_get",
          "parameters": [
            {
              "name": "jwt",
              "in": "query",
              "value": "$steps.get-token.outputs.jwt_token"
            },
            {
              "name": "vin",
              "in": "query",
              "value": "$inputs.vin"
            },
            {
              "name": "passEmpty",
              "in": "query",
              "value": "$inputs.passEmpty"
            },
            {
              "name": "includeRecall",
              "in": "query",
              "value": "$inputs.includeRecall"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "vin_decode_data": "$response.body",
            "recall_info": "$response.body"
          }
        }
      ],
      "outputs": {
        "jwt_token": "$steps.get-token.outputs.jwt_token",
        "vin_decode_data": "$steps.decode-vin.outputs.vin_decode_data",
        "recall_info": "$steps.decode-vin.outputs.recall_info"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}