{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/exhibitday.com/main/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "comprehensive-event-performance-review",
      "summary": "Retrieve detailed information for a specific event, including its associated costs and tasks, to get a full overview of its performance and progress. This workflow is crucial for event managers and analysts to assess the success and status of their events.",
      "description": "Retrieve detailed information for a specific event, including its associated costs and tasks, to get a full overview of its performance and progress. This workflow is crucial for event managers and analysts to assess the success and status of their events.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "filter_by_event_id": {
            "type": "string"
          },
          "filter_by_event_start_date_greater_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_event_start_date_smaller_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_event_end_date_greater_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_event_end_date_smaller_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_general_tasks_only": {
            "type": "string"
          },
          "filter_by_incomplete_only": {
            "type": "string"
          },
          "filter_by_completed_only": {
            "type": "string"
          },
          "filter_by_no_due_date": {
            "type": "string"
          },
          "filter_by_due_date_greater_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_due_date_smaller_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_has_assignee": {
            "type": "string"
          },
          "filter_by_assignee_user_id": {
            "type": "string"
          },
          "filter_by_task_name_contains_text": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_1": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_2": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_3": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_4": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_5": {
            "type": "string"
          },
          "hydrate_task_comments": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-event-details",
          "description": "Retrieve the full details of a specific event by its ID. This step provides the foundational information for the subsequent data retrieval.",
          "operationId": "events_info_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "id",
              "in": "header",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_object": "$response.body#/event_object"
          }
        },
        {
          "stepId": "get-event-costs",
          "description": "Retrieve all financial costs associated with the specific event identified in the previous step.",
          "operationId": "financials_event_costs_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "filter_by_event_id",
              "in": "header",
              "value": "$steps.get-event-details.outputs.event_object.id"
            },
            {
              "name": "filter_by_event_start_date_greater_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_event_start_date_greater_than_or_equal_to"
            },
            {
              "name": "filter_by_event_start_date_smaller_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_event_start_date_smaller_than_or_equal_to"
            },
            {
              "name": "filter_by_event_end_date_greater_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_event_end_date_greater_than_or_equal_to"
            },
            {
              "name": "filter_by_event_end_date_smaller_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_event_end_date_smaller_than_or_equal_to"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_costs_data": "$response.body#/event_costs_data"
          }
        },
        {
          "stepId": "get-event-tasks",
          "description": "Retrieve all tasks that are linked to the specific event, allowing for a review of operational progress.",
          "operationId": "tasks__0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "filter_by_event_id",
              "in": "header",
              "value": "$steps.get-event-details.outputs.event_object.id"
            },
            {
              "name": "filter_by_general_tasks_only",
              "in": "header",
              "value": "$inputs.filter_by_general_tasks_only"
            },
            {
              "name": "filter_by_incomplete_only",
              "in": "header",
              "value": "$inputs.filter_by_incomplete_only"
            },
            {
              "name": "filter_by_completed_only",
              "in": "header",
              "value": "$inputs.filter_by_completed_only"
            },
            {
              "name": "filter_by_no_due_date",
              "in": "header",
              "value": "$inputs.filter_by_no_due_date"
            },
            {
              "name": "filter_by_due_date_greater_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_due_date_greater_than_or_equal_to"
            },
            {
              "name": "filter_by_due_date_smaller_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_due_date_smaller_than_or_equal_to"
            },
            {
              "name": "filter_by_has_assignee",
              "in": "header",
              "value": "$inputs.filter_by_has_assignee"
            },
            {
              "name": "filter_by_assignee_user_id",
              "in": "header",
              "value": "$inputs.filter_by_assignee_user_id"
            },
            {
              "name": "filter_by_task_name_contains_text",
              "in": "header",
              "value": "$inputs.filter_by_task_name_contains_text"
            },
            {
              "name": "filter_by_integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_1"
            },
            {
              "name": "filter_by_integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_2"
            },
            {
              "name": "filter_by_integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_3"
            },
            {
              "name": "filter_by_integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_4"
            },
            {
              "name": "filter_by_integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_5"
            },
            {
              "name": "hydrate_task_comments",
              "in": "header",
              "value": "$inputs.hydrate_task_comments"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_tasks_data": "$response.body#/event_tasks_data"
          }
        }
      ],
      "outputs": {
        "event_object": "$steps.get-event-details.outputs.event_object",
        "event_costs_data": "$steps.get-event-costs.outputs.event_costs_data",
        "event_tasks_data": "$steps.get-event-tasks.outputs.event_tasks_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "event-setup-with-task-assignment",
      "summary": "Automate the creation of a new event and immediately assign a critical initial task to a specific user. This workflow streamlines the onboarding of new events into the ExhibitDay system.",
      "description": "Automate the creation of a new event and immediately assign a critical initial task to a specific user. This workflow streamlines the onboarding of new events into the ExhibitDay system.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "format_id": {
            "type": "string"
          },
          "participation_type_id": {
            "type": "string"
          },
          "integration_metadata_field_1": {
            "type": "string"
          },
          "integration_metadata_field_2": {
            "type": "string"
          },
          "integration_metadata_field_3": {
            "type": "string"
          },
          "integration_metadata_field_4": {
            "type": "string"
          },
          "integration_metadata_field_5": {
            "type": "string"
          },
          "event_id": {
            "type": "string"
          },
          "task_section_id": {
            "type": "string"
          },
          "is_completed": {
            "type": "string"
          },
          "due_date": {
            "type": "string"
          },
          "assignee_user_id": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-users-for-assignment",
          "description": "Retrieve a list of available users and resources to identify a suitable assignee for the new task.",
          "operationId": "references_users_and_resources_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "users_list": "$response.body#/users_list"
          }
        },
        {
          "stepId": "create-new-event",
          "description": "Add a new event to the ExhibitDay system with essential details like name, start date, and end date.",
          "operationId": "events__1_post",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "name",
              "in": "header",
              "value": "$inputs.name"
            },
            {
              "name": "start_date",
              "in": "header",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "header",
              "value": "$inputs.end_date"
            },
            {
              "name": "format_id",
              "in": "header",
              "value": "$inputs.format_id"
            },
            {
              "name": "participation_type_id",
              "in": "header",
              "value": "$inputs.participation_type_id"
            },
            {
              "name": "integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.integration_metadata_field_1"
            },
            {
              "name": "integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.integration_metadata_field_2"
            },
            {
              "name": "integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.integration_metadata_field_3"
            },
            {
              "name": "integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.integration_metadata_field_4"
            },
            {
              "name": "integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.integration_metadata_field_5"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "new_event_id": "$response.body#/new_event_id"
          }
        },
        {
          "stepId": "add-task-to-event-and-assign",
          "description": "Create a new task, associate it with the newly created event, and assign it to a user retrieved in the first step.",
          "operationId": "tasks__1_post",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "name",
              "in": "header",
              "value": "$inputs.name"
            },
            {
              "name": "event_id",
              "in": "header",
              "value": "$steps.create-new-event.outputs.new_event_id"
            },
            {
              "name": "task_section_id",
              "in": "header",
              "value": "$inputs.task_section_id"
            },
            {
              "name": "is_completed",
              "in": "header",
              "value": "$inputs.is_completed"
            },
            {
              "name": "due_date",
              "in": "header",
              "value": "$inputs.due_date"
            },
            {
              "name": "assignee_user_id",
              "in": "header",
              "value": "$steps.get-users-for-assignment.outputs.users_list.id"
            },
            {
              "name": "details",
              "in": "query",
              "value": "$inputs.details"
            },
            {
              "name": "integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.integration_metadata_field_1"
            },
            {
              "name": "integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.integration_metadata_field_2"
            },
            {
              "name": "integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.integration_metadata_field_3"
            },
            {
              "name": "integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.integration_metadata_field_4"
            },
            {
              "name": "integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.integration_metadata_field_5"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "new_task_id": "$response.body#/new_task_id"
          }
        }
      ],
      "outputs": {
        "users_list": "$steps.get-users-for-assignment.outputs.users_list",
        "new_event_id": "$steps.create-new-event.outputs.new_event_id",
        "new_task_id": "$steps.add-task-to-event-and-assign.outputs.new_task_id"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "update-event-financials-and-roi",
      "summary": "Update the budget and Return on Investment (ROI) metrics for an existing event. This workflow is essential for tracking and reporting the financial performance and impact of events.",
      "description": "Update the budget and Return on Investment (ROI) metrics for an existing event. This workflow is essential for tracking and reporting the financial performance and impact of events.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "participation_type_id": {
            "type": "string"
          },
          "format_id": {
            "type": "string"
          },
          "star_rating": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          },
          "venue_name": {
            "type": "string"
          },
          "booth_size": {
            "type": "string"
          },
          "booth_number": {
            "type": "string"
          },
          "event_notes": {
            "type": "string"
          },
          "booth_notes": {
            "type": "string"
          },
          "budget_notes": {
            "type": "string"
          },
          "roi_notes": {
            "type": "string"
          },
          "budget_booth_reservation": {
            "type": "string"
          },
          "budget_booth_services": {
            "type": "string"
          },
          "budget_attendee_registrations": {
            "type": "string"
          },
          "budget_travel": {
            "type": "string"
          },
          "budget_giveaways": {
            "type": "string"
          },
          "budget_shipments": {
            "type": "string"
          },
          "budget_misc_expenses": {
            "type": "string"
          },
          "budget_sponsorships": {
            "type": "string"
          },
          "roi_num_leads": {
            "type": "string"
          },
          "roi_num_impressions_booth": {
            "type": "string"
          },
          "roi_num_impressions_sponsorships": {
            "type": "string"
          },
          "roi_num_impressions_media": {
            "type": "string"
          },
          "roi_num_meetings_existing_customers": {
            "type": "string"
          },
          "roi_num_meetings_new_customers": {
            "type": "string"
          },
          "roi_amount_actual_sales": {
            "type": "string"
          },
          "roi_amount_potential_sales": {
            "type": "string"
          },
          "integration_metadata_field_1": {
            "type": "string"
          },
          "integration_metadata_field_2": {
            "type": "string"
          },
          "integration_metadata_field_3": {
            "type": "string"
          },
          "integration_metadata_field_4": {
            "type": "string"
          },
          "integration_metadata_field_5": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-event-to-update",
          "description": "Retrieve the event details to confirm its existence and obtain its ID for the update operation.",
          "operationId": "events_info_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "id",
              "in": "header",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "event_object": "$response.body#/event_object"
          }
        },
        {
          "stepId": "update-event-financials",
          "description": "Update specific financial and ROI fields for the identified event, such as booth reservation budget, leads generated, and actual sales.",
          "operationId": "events__2_patch",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "id",
              "in": "header",
              "value": "$steps.get-event-to-update.outputs.event_object.id"
            },
            {
              "name": "name",
              "in": "header",
              "value": "$inputs.name"
            },
            {
              "name": "start_date",
              "in": "header",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "header",
              "value": "$inputs.end_date"
            },
            {
              "name": "participation_type_id",
              "in": "header",
              "value": "$inputs.participation_type_id"
            },
            {
              "name": "format_id",
              "in": "header",
              "value": "$inputs.format_id"
            },
            {
              "name": "star_rating",
              "in": "header",
              "value": "$inputs.star_rating"
            },
            {
              "name": "website_url",
              "in": "query",
              "value": "$inputs.website_url"
            },
            {
              "name": "venue_name",
              "in": "query",
              "value": "$inputs.venue_name"
            },
            {
              "name": "booth_size",
              "in": "header",
              "value": "$inputs.booth_size"
            },
            {
              "name": "booth_number",
              "in": "header",
              "value": "$inputs.booth_number"
            },
            {
              "name": "event_notes",
              "in": "query",
              "value": "$inputs.event_notes"
            },
            {
              "name": "booth_notes",
              "in": "query",
              "value": "$inputs.booth_notes"
            },
            {
              "name": "budget_notes",
              "in": "query",
              "value": "$inputs.budget_notes"
            },
            {
              "name": "roi_notes",
              "in": "query",
              "value": "$inputs.roi_notes"
            },
            {
              "name": "budget_booth_reservation",
              "in": "header",
              "value": "$inputs.budget_booth_reservation"
            },
            {
              "name": "budget_booth_services",
              "in": "header",
              "value": "$inputs.budget_booth_services"
            },
            {
              "name": "budget_attendee_registrations",
              "in": "header",
              "value": "$inputs.budget_attendee_registrations"
            },
            {
              "name": "budget_travel",
              "in": "header",
              "value": "$inputs.budget_travel"
            },
            {
              "name": "budget_giveaways",
              "in": "header",
              "value": "$inputs.budget_giveaways"
            },
            {
              "name": "budget_shipments",
              "in": "header",
              "value": "$inputs.budget_shipments"
            },
            {
              "name": "budget_misc_expenses",
              "in": "header",
              "value": "$inputs.budget_misc_expenses"
            },
            {
              "name": "budget_sponsorships",
              "in": "header",
              "value": "$inputs.budget_sponsorships"
            },
            {
              "name": "roi_num_leads",
              "in": "header",
              "value": "$inputs.roi_num_leads"
            },
            {
              "name": "roi_num_impressions_booth",
              "in": "header",
              "value": "$inputs.roi_num_impressions_booth"
            },
            {
              "name": "roi_num_impressions_sponsorships",
              "in": "header",
              "value": "$inputs.roi_num_impressions_sponsorships"
            },
            {
              "name": "roi_num_impressions_media",
              "in": "header",
              "value": "$inputs.roi_num_impressions_media"
            },
            {
              "name": "roi_num_meetings_existing_customers",
              "in": "header",
              "value": "$inputs.roi_num_meetings_existing_customers"
            },
            {
              "name": "roi_num_meetings_new_customers",
              "in": "header",
              "value": "$inputs.roi_num_meetings_new_customers"
            },
            {
              "name": "roi_amount_actual_sales",
              "in": "header",
              "value": "$inputs.roi_amount_actual_sales"
            },
            {
              "name": "roi_amount_potential_sales",
              "in": "header",
              "value": "$inputs.roi_amount_potential_sales"
            },
            {
              "name": "integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.integration_metadata_field_1"
            },
            {
              "name": "integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.integration_metadata_field_2"
            },
            {
              "name": "integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.integration_metadata_field_3"
            },
            {
              "name": "integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.integration_metadata_field_4"
            },
            {
              "name": "integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.integration_metadata_field_5"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "update_confirmation": "$response.body#/update_confirmation"
          }
        }
      ],
      "outputs": {
        "event_object": "$steps.get-event-to-update.outputs.event_object",
        "update_confirmation": "$steps.update-event-financials.outputs.update_confirmation"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "automated-event-status-update",
      "summary": "Automatically update the participation status of an event based on an external identifier (integration metadata field). This workflow supports seamless integration with other systems that manage event lifecycle.",
      "description": "Automatically update the participation status of an event based on an external identifier (integration metadata field). This workflow supports seamless integration with other systems that manage event lifecycle.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "filter_by_event_name_contains_text": {
            "type": "string"
          },
          "filter_by_start_date_greater_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_start_date_smaller_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_end_date_greater_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_end_date_smaller_than_or_equal_to": {
            "type": "string"
          },
          "filter_by_event_participation_type_id": {
            "type": "string"
          },
          "filter_by_event_format_id": {
            "type": "string"
          },
          "filter_by_event_star_rating": {
            "type": "string"
          },
          "filter_by_event_tag": {
            "type": "string"
          },
          "filter_by_custom_event_field__custom_NNNNNN": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_1": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_2": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_3": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_4": {
            "type": "string"
          },
          "filter_by_integration_metadata_field_5": {
            "type": "string"
          },
          "hydrate_tasks": {
            "type": "string"
          },
          "hydrate_task_sections_list": {
            "type": "string"
          },
          "hydrate_custom_fields": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "participation_type_id": {
            "type": "string"
          },
          "format_id": {
            "type": "string"
          },
          "star_rating": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          },
          "venue_name": {
            "type": "string"
          },
          "booth_size": {
            "type": "string"
          },
          "booth_number": {
            "type": "string"
          },
          "event_notes": {
            "type": "string"
          },
          "booth_notes": {
            "type": "string"
          },
          "budget_notes": {
            "type": "string"
          },
          "roi_notes": {
            "type": "string"
          },
          "budget_booth_reservation": {
            "type": "string"
          },
          "budget_booth_services": {
            "type": "string"
          },
          "budget_attendee_registrations": {
            "type": "string"
          },
          "budget_travel": {
            "type": "string"
          },
          "budget_giveaways": {
            "type": "string"
          },
          "budget_shipments": {
            "type": "string"
          },
          "budget_misc_expenses": {
            "type": "string"
          },
          "budget_sponsorships": {
            "type": "string"
          },
          "roi_num_leads": {
            "type": "string"
          },
          "roi_num_impressions_booth": {
            "type": "string"
          },
          "roi_num_impressions_sponsorships": {
            "type": "string"
          },
          "roi_num_impressions_media": {
            "type": "string"
          },
          "roi_num_meetings_existing_customers": {
            "type": "string"
          },
          "roi_num_meetings_new_customers": {
            "type": "string"
          },
          "roi_amount_actual_sales": {
            "type": "string"
          },
          "roi_amount_potential_sales": {
            "type": "string"
          },
          "integration_metadata_field_1": {
            "type": "string"
          },
          "integration_metadata_field_2": {
            "type": "string"
          },
          "integration_metadata_field_3": {
            "type": "string"
          },
          "integration_metadata_field_4": {
            "type": "string"
          },
          "integration_metadata_field_5": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-event-by-integration-id",
          "description": "Find an event using a unique identifier stored in one of its integration metadata fields. This allows external systems to reference events without knowing their internal ExhibitDay ID.",
          "operationId": "events__0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "filter_by_event_name_contains_text",
              "in": "header",
              "value": "$inputs.filter_by_event_name_contains_text"
            },
            {
              "name": "filter_by_start_date_greater_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_start_date_greater_than_or_equal_to"
            },
            {
              "name": "filter_by_start_date_smaller_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_start_date_smaller_than_or_equal_to"
            },
            {
              "name": "filter_by_end_date_greater_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_end_date_greater_than_or_equal_to"
            },
            {
              "name": "filter_by_end_date_smaller_than_or_equal_to",
              "in": "header",
              "value": "$inputs.filter_by_end_date_smaller_than_or_equal_to"
            },
            {
              "name": "filter_by_event_participation_type_id",
              "in": "header",
              "value": "$inputs.filter_by_event_participation_type_id"
            },
            {
              "name": "filter_by_event_format_id",
              "in": "header",
              "value": "$inputs.filter_by_event_format_id"
            },
            {
              "name": "filter_by_event_star_rating",
              "in": "header",
              "value": "$inputs.filter_by_event_star_rating"
            },
            {
              "name": "filter_by_event_tag",
              "in": "header",
              "value": "$inputs.filter_by_event_tag"
            },
            {
              "name": "filter_by_custom_event_field__custom_NNNNNN",
              "in": "query",
              "value": "$inputs.filter_by_custom_event_field__custom_NNNNNN"
            },
            {
              "name": "filter_by_integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_1"
            },
            {
              "name": "filter_by_integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_2"
            },
            {
              "name": "filter_by_integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_3"
            },
            {
              "name": "filter_by_integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_4"
            },
            {
              "name": "filter_by_integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.filter_by_integration_metadata_field_5"
            },
            {
              "name": "hydrate_tasks",
              "in": "header",
              "value": "$inputs.hydrate_tasks"
            },
            {
              "name": "hydrate_task_sections_list",
              "in": "header",
              "value": "$inputs.hydrate_task_sections_list"
            },
            {
              "name": "hydrate_custom_fields",
              "in": "header",
              "value": "$inputs.hydrate_custom_fields"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "events_list": "$response.body#/events_list"
          }
        },
        {
          "stepId": "update-event-participation-status",
          "description": "Update the participation type (e.g., Committed, Considering, Not Going) for the event found in the previous step.",
          "operationId": "events__2_patch",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "id",
              "in": "header",
              "value": "$steps.find-event-by-integration-id.outputs.events_list.id"
            },
            {
              "name": "name",
              "in": "header",
              "value": "$inputs.name"
            },
            {
              "name": "start_date",
              "in": "header",
              "value": "$inputs.start_date"
            },
            {
              "name": "end_date",
              "in": "header",
              "value": "$inputs.end_date"
            },
            {
              "name": "participation_type_id",
              "in": "header",
              "value": "$inputs.participation_type_id"
            },
            {
              "name": "format_id",
              "in": "header",
              "value": "$inputs.format_id"
            },
            {
              "name": "star_rating",
              "in": "header",
              "value": "$inputs.star_rating"
            },
            {
              "name": "website_url",
              "in": "query",
              "value": "$inputs.website_url"
            },
            {
              "name": "venue_name",
              "in": "query",
              "value": "$inputs.venue_name"
            },
            {
              "name": "booth_size",
              "in": "header",
              "value": "$inputs.booth_size"
            },
            {
              "name": "booth_number",
              "in": "header",
              "value": "$inputs.booth_number"
            },
            {
              "name": "event_notes",
              "in": "query",
              "value": "$inputs.event_notes"
            },
            {
              "name": "booth_notes",
              "in": "query",
              "value": "$inputs.booth_notes"
            },
            {
              "name": "budget_notes",
              "in": "query",
              "value": "$inputs.budget_notes"
            },
            {
              "name": "roi_notes",
              "in": "query",
              "value": "$inputs.roi_notes"
            },
            {
              "name": "budget_booth_reservation",
              "in": "header",
              "value": "$inputs.budget_booth_reservation"
            },
            {
              "name": "budget_booth_services",
              "in": "header",
              "value": "$inputs.budget_booth_services"
            },
            {
              "name": "budget_attendee_registrations",
              "in": "header",
              "value": "$inputs.budget_attendee_registrations"
            },
            {
              "name": "budget_travel",
              "in": "header",
              "value": "$inputs.budget_travel"
            },
            {
              "name": "budget_giveaways",
              "in": "header",
              "value": "$inputs.budget_giveaways"
            },
            {
              "name": "budget_shipments",
              "in": "header",
              "value": "$inputs.budget_shipments"
            },
            {
              "name": "budget_misc_expenses",
              "in": "header",
              "value": "$inputs.budget_misc_expenses"
            },
            {
              "name": "budget_sponsorships",
              "in": "header",
              "value": "$inputs.budget_sponsorships"
            },
            {
              "name": "roi_num_leads",
              "in": "header",
              "value": "$inputs.roi_num_leads"
            },
            {
              "name": "roi_num_impressions_booth",
              "in": "header",
              "value": "$inputs.roi_num_impressions_booth"
            },
            {
              "name": "roi_num_impressions_sponsorships",
              "in": "header",
              "value": "$inputs.roi_num_impressions_sponsorships"
            },
            {
              "name": "roi_num_impressions_media",
              "in": "header",
              "value": "$inputs.roi_num_impressions_media"
            },
            {
              "name": "roi_num_meetings_existing_customers",
              "in": "header",
              "value": "$inputs.roi_num_meetings_existing_customers"
            },
            {
              "name": "roi_num_meetings_new_customers",
              "in": "header",
              "value": "$inputs.roi_num_meetings_new_customers"
            },
            {
              "name": "roi_amount_actual_sales",
              "in": "header",
              "value": "$inputs.roi_amount_actual_sales"
            },
            {
              "name": "roi_amount_potential_sales",
              "in": "header",
              "value": "$inputs.roi_amount_potential_sales"
            },
            {
              "name": "integration_metadata_field_1",
              "in": "query",
              "value": "$inputs.integration_metadata_field_1"
            },
            {
              "name": "integration_metadata_field_2",
              "in": "query",
              "value": "$inputs.integration_metadata_field_2"
            },
            {
              "name": "integration_metadata_field_3",
              "in": "query",
              "value": "$inputs.integration_metadata_field_3"
            },
            {
              "name": "integration_metadata_field_4",
              "in": "query",
              "value": "$inputs.integration_metadata_field_4"
            },
            {
              "name": "integration_metadata_field_5",
              "in": "query",
              "value": "$inputs.integration_metadata_field_5"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "update_confirmation": "$response.body#/update_confirmation"
          }
        }
      ],
      "outputs": {
        "events_list": "$steps.find-event-by-integration-id.outputs.events_list",
        "update_confirmation": "$steps.update-event-participation-status.outputs.update_confirmation"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-task-comments",
      "summary": "Add a new comment to an existing task and then retrieve all comments for that task to verify the addition and review existing discussions. This supports collaborative task management.",
      "description": "Add a new comment to an existing task and then retrieve all comments for that task to verify the addition and review existing discussions. This supports collaborative task management.",
      "inputs": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "task_id": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "filter_by_event_id": {
            "type": "string"
          },
          "filter_by_task_id": {
            "type": "string"
          },
          "hydrate_task": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-task-details",
          "description": "Retrieve the details of a specific task to confirm its existence and obtain its ID.",
          "operationId": "tasks_info_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "id",
              "in": "header",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "task_object": "$response.body#/task_object"
          }
        },
        {
          "stepId": "add-comment-to-task",
          "description": "Add a new text comment to the identified task.",
          "operationId": "tasks_comment_1_post",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "task_id",
              "in": "header",
              "value": "$steps.get-task-details.outputs.task_object.id"
            },
            {
              "name": "comment",
              "in": "query",
              "value": "$inputs.comment"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "new_comment_id": "$response.body#/new_comment_id"
          }
        },
        {
          "stepId": "retrieve-all-task-comments",
          "description": "Retrieve all comments associated with the task, including the one just added, to get a complete conversation history.",
          "operationId": "tasks_comments_0_get",
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "value": "$inputs.api_key"
            },
            {
              "name": "filter_by_event_id",
              "in": "header",
              "value": "$inputs.filter_by_event_id"
            },
            {
              "name": "filter_by_task_id",
              "in": "header",
              "value": "$steps.get-task-details.outputs.task_object.id"
            },
            {
              "name": "hydrate_task",
              "in": "header",
              "value": "$inputs.hydrate_task"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "task_comments_data": "$response.body#/task_comments_data"
          }
        }
      ],
      "outputs": {
        "task_object": "$steps.get-task-details.outputs.task_object",
        "new_comment_id": "$steps.add-comment-to-task.outputs.new_comment_id",
        "task_comments_data": "$steps.retrieve-all-task-comments.outputs.task_comments_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}
