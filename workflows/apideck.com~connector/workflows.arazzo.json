{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/apideck.com/connector/10.14.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "understand-connector-resource-implementation-details",
      "summary": "For a specific connector and Unified API resource (e.g., Salesforce 'Companies' in CRM API), retrieve its supported operations, data schema, and an example payload.",
      "description": "For a specific connector and Unified API resource (e.g., Salesforce 'Companies' in CRM API), retrieve its supported operations, data schema, and an example payload.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-app-id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "resource_id": {
            "type": "string"
          },
          "unified_api": {
            "type": "string"
          },
          "api_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-connector-resource-capabilities",
          "description": "Get details about a specific resource (e.g., 'companies') as supported by a specific connector (e.g., 'salesforce') within a Unified API context (e.g., 'crm'). Provides supported operations, fields, filters.",
          "operationId": "connectorResourcesOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "resource_id",
              "in": "path",
              "value": "$inputs.resource_id"
            },
            {
              "name": "unified_api",
              "in": "query",
              "value": "$inputs.unified_api"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "connector_resource_details": "$response.body"
          }
        },
        {
          "stepId": "get-connector-resource-schema",
          "description": "Retrieves the specific JSON schema for the resource as implemented by the connector for the Unified API.",
          "operationId": "connectorResourcesSchema",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "resource_id",
              "in": "path",
              "value": "$steps.get-connector-resource-capabilities.outputs.connector_resource_details.data.id"
            },
            {
              "name": "api_id",
              "in": "path",
              "value": "$inputs.api_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "resource_schema": "$response.body"
          }
        },
        {
          "stepId": "get-connector-resource-example",
          "description": "Retrieves an example request/response payload for the resource as implemented by the connector for the Unified API.",
          "operationId": "connectorResourcesExample",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "resource_id",
              "in": "path",
              "value": "$steps.get-connector-resource-capabilities.outputs.connector_resource_details.data.id"
            },
            {
              "name": "api_id",
              "in": "path",
              "value": "$inputs.api_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "resource_example": "$response.body"
          }
        }
      ],
      "outputs": {
        "connector_resource_details": "$steps.get-connector-resource-capabilities.outputs.connector_resource_details",
        "resource_schema": "$steps.get-connector-resource-schema.outputs.resource_schema",
        "resource_example": "$steps.get-connector-resource-example.outputs.resource_example"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-connectors-for-a-specific-unified-api",
      "summary": "Discovers available connectors for a chosen Unified API (e.g., CRM, File Storage) and retrieves detailed information about a selected connector.",
      "description": "Discovers available connectors for a chosen Unified API (e.g., CRM, File Storage) and retrieves detailed information about a selected connector.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-app-id": {
            "type": "string"
          },
          "cursor": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "filter": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-connectors-for-api",
          "description": "Lists all connectors, filtered by a specific Unified API ID.",
          "operationId": "connectorsAll",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "cursor",
              "in": "query",
              "value": "$inputs.cursor"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "filter",
              "in": "query",
              "value": "$inputs.filter"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "connectors_list": "$response.body"
          }
        },
        {
          "stepId": "get-connector-details",
          "description": "Retrieves detailed information about a specific connector identified in the previous step.",
          "operationId": "connectorsOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "connector_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "connectors_list": "$steps.list-connectors-for-api.outputs.connectors_list",
        "connector_details": "$steps.get-connector-details.outputs.connector_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "explore-unified-api-structure-and-resource-coverage",
      "summary": "Investigates the structure of a specific Unified API (e.g., CRM), identifies its resources (e.g., Companies, Contacts), and checks which connectors support a specific resource.",
      "description": "Investigates the structure of a specific Unified API (e.g., CRM), identifies its resources (e.g., Companies, Contacts), and checks which connectors support a specific resource.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-app-id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "resource_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-unified-api-details",
          "description": "Retrieves details for a specific Unified API, including the list of resources it defines.",
          "operationId": "apisOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "api_details": "$response.body",
            "resource_list": "$response.body"
          }
        },
        {
          "stepId": "get-unified-api-resource-definition",
          "description": "Gets the general definition and schema for a specific resource within the Unified API.",
          "operationId": "apiResourcesOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "resource_id",
              "in": "path",
              "value": "$steps.get-unified-api-details.outputs.resource_list.data.resources[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "api_resource_details": "$response.body"
          }
        },
        {
          "stepId": "get-unified-api-resource-coverage",
          "description": "Retrieves information on which connectors support this specific resource within the Unified API and their level of support (operations, fields, etc.).",
          "operationId": "apiResourceCoverageOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "resource_id",
              "in": "path",
              "value": "$steps.get-unified-api-resource-definition.outputs.api_resource_details.data.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "resource_coverage_details": "$response.body"
          }
        }
      ],
      "outputs": {
        "api_details": "$steps.get-unified-api-details.outputs.api_details",
        "resource_list": "$steps.get-unified-api-details.outputs.resource_list",
        "api_resource_details": "$steps.get-unified-api-resource-definition.outputs.api_resource_details",
        "resource_coverage_details": "$steps.get-unified-api-resource-coverage.outputs.resource_coverage_details"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-connector-documentation",
      "summary": "Fetches specific documentation content (like setup guides or connection instructions) for a given connector.",
      "description": "Fetches specific documentation content (like setup guides or connection instructions) for a given connector.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-apideck-app-id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "doc_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-connector-info-for-docs",
          "description": "Retrieves details about a specific connector, including a list of available documentation.",
          "operationId": "connectorsOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "connector_details": "$response.body",
            "docs_list": "$response.body"
          }
        },
        {
          "stepId": "get-specific-connector-doc",
          "description": "Fetches the content of a specific document identified in the previous step.",
          "operationId": "connectorDocsOne",
          "parameters": [
            {
              "name": "x-apideck-app-id",
              "in": "header",
              "value": "$inputs.x-apideck-app-id"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "doc_id",
              "in": "path",
              "value": "$steps.get-connector-info-for-docs.outputs.docs_list.data.docs[0].id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "doc_content": "$response.body"
          }
        }
      ],
      "outputs": {
        "connector_details": "$steps.get-connector-info-for-docs.outputs.connector_details",
        "docs_list": "$steps.get-connector-info-for-docs.outputs.docs_list",
        "doc_content": "$steps.get-specific-connector-doc.outputs.doc_content"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}