{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/spinitron.com/main/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "browse-past-playlists-and-spins",
      "summary": "Allows users to explore historical playlists and then view the individual songs (spins) played within a selected playlist. This is valuable for listeners looking up what was played on a past show.",
      "description": "Allows users to explore historical playlists and then view the individual songs (spins) played within a selected playlist. This is valuable for listeners looking up what was played on a past show.",
      "inputs": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "show_id": {
            "type": "string"
          },
          "persona_id": {
            "type": "string"
          },
          "count": {
            "type": "string"
          },
          "page": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "expand": {
            "type": "string"
          },
          "playlist_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-past-playlists",
          "description": "Retrieves a list of past playlists, optionally filtered by time range, show, or persona. The response includes basic playlist information and their unique IDs.",
          "operationPath": "openapi_source#/paths/~1playlists/get",
          "parameters": [
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "end",
              "in": "query",
              "value": "$inputs.end"
            },
            {
              "name": "show_id",
              "in": "query",
              "value": "$inputs.show_id"
            },
            {
              "name": "persona_id",
              "in": "query",
              "value": "$inputs.persona_id"
            },
            {
              "name": "count",
              "in": "query",
              "value": "$inputs.count"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body#/items",
            "_meta": "$response.body#/_meta"
          }
        },
        {
          "stepId": "get-playlist-spins",
          "description": "Retrieves all spins (individual songs played) associated with a specific playlist ID obtained from the previous step.",
          "operationPath": "openapi_source#/paths/~1spins/get",
          "parameters": [
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "end",
              "in": "query",
              "value": "$inputs.end"
            },
            {
              "name": "playlist_id",
              "in": "query",
              "value": "$steps.get-past-playlists.outputs.items.id"
            },
            {
              "name": "show_id",
              "in": "query",
              "value": "$inputs.show_id"
            },
            {
              "name": "count",
              "in": "query",
              "value": "$inputs.count"
            },
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "items": "$response.body#/items",
            "_meta": "$response.body#/_meta"
          }
        }
      ],
      "outputs": {
        "items": "$steps.get-playlist-spins.outputs.items",
        "_meta": "$steps.get-playlist-spins.outputs._meta"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-detailed-show-info-with-djs",
      "summary": "Retrieves comprehensive details for a specific radio show, including information about its associated DJs/hosts. This is useful for creating dedicated show pages with full descriptions and DJ bios.",
      "description": "Retrieves comprehensive details for a specific radio show, including information about its associated DJs/hosts. This is useful for creating dedicated show pages with full descriptions and DJ bios.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "expand": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-show-details",
          "description": "Fetches detailed information for a single show by its unique ID. The response includes links to associated personas (DJs).",
          "operationPath": "openapi_source#/paths/~1shows~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "title": "$response.body#/title",
            "description": "$response.body#/description",
            "_links": "$response.body#/_links"
          }
        },
        {
          "stepId": "get-persona-details",
          "description": "Retrieves detailed information for a specific persona (DJ/host) using the ID extracted from the links provided in the show details.",
          "operationPath": "openapi_source#/paths/~1personas~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-show-details.outputs._links.personas[].href"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "bio": "$response.body#/bio",
            "email": "$response.body#/email",
            "website": "$response.body#/website"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-persona-details.outputs.id",
        "title": "$steps.get-show-details.outputs.title",
        "description": "$steps.get-show-details.outputs.description",
        "_links": "$steps.get-show-details.outputs._links",
        "name": "$steps.get-persona-details.outputs.name",
        "bio": "$steps.get-persona-details.outputs.bio",
        "email": "$steps.get-persona-details.outputs.email",
        "website": "$steps.get-persona-details.outputs.website"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "get-detailed-playlist-info-with-show-and-dj",
      "summary": "Retrieves comprehensive details for a specific playlist, including information about the show it belongs to and the DJ/host who curated it. This allows for rich display of playlist context.",
      "description": "Retrieves comprehensive details for a specific playlist, including information about the show it belongs to and the DJ/host who curated it. This allows for rich display of playlist context.",
      "inputs": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "expand": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-playlist-details",
          "description": "Fetches detailed information for a single playlist by its unique ID. The response includes direct IDs for the associated show and persona.",
          "operationPath": "openapi_source#/paths/~1playlists~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "title": "$response.body#/title",
            "description": "$response.body#/description",
            "show_id": "$response.body#/show_id",
            "persona_id": "$response.body#/persona_id"
          }
        },
        {
          "stepId": "get-associated-show-details",
          "description": "Retrieves detailed information for the show associated with the playlist, using the 'show_id' obtained from the playlist details.",
          "operationPath": "openapi_source#/paths/~1shows~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-playlist-details.outputs.show_id"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "title": "$response.body#/title",
            "description": "$response.body#/description"
          }
        },
        {
          "stepId": "get-associated-persona-details",
          "description": "Retrieves detailed information for the persona (DJ/host) associated with the playlist, using the 'persona_id' obtained from the playlist details.",
          "operationPath": "openapi_source#/paths/~1personas~1{id}/get",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "value": "$steps.get-playlist-details.outputs.persona_id"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "expand",
              "in": "query",
              "value": "$inputs.expand"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "id": "$response.body#/id",
            "name": "$response.body#/name",
            "bio": "$response.body#/bio"
          }
        }
      ],
      "outputs": {
        "id": "$steps.get-associated-persona-details.outputs.id",
        "title": "$steps.get-associated-show-details.outputs.title",
        "description": "$steps.get-associated-show-details.outputs.description",
        "show_id": "$steps.get-playlist-details.outputs.show_id",
        "persona_id": "$steps.get-playlist-details.outputs.persona_id",
        "name": "$steps.get-associated-persona-details.outputs.name",
        "bio": "$steps.get-associated-persona-details.outputs.bio"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}