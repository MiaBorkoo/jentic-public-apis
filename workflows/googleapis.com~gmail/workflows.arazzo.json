{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/gmail/v1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "create-and-send-email",
      "summary": "Creates a draft email, allows for potential review/modification (though not shown in this specific sequence), and then sends it.",
      "description": "Creates a draft email, allows for potential review/modification (though not shown in this specific sequence), and then sends it.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "create-draft_body": {
            "type": "object"
          },
          "send-draft_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-draft",
          "description": "Creates a new draft email message.",
          "operationId": "gmail.users.drafts.create",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "message/cpim",
            "payload": "$inputs.create-draft_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "draftId": "$response.body",
            "draftMessageId": "$response.body"
          }
        },
        {
          "stepId": "send-draft",
          "description": "Sends an existing draft email.",
          "operationId": "gmail.users.drafts.send",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "message/cpim",
            "payload": "$inputs.send-draft_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sentMessageId": "$response.body",
            "sentMessageThreadId": "$response.body"
          }
        }
      ],
      "outputs": {
        "draftId": "$steps.create-draft.outputs.draftId",
        "draftMessageId": "$steps.create-draft.outputs.draftMessageId",
        "sentMessageId": "$steps.send-draft.outputs.sentMessageId",
        "sentMessageThreadId": "$steps.send-draft.outputs.sentMessageThreadId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "retrieve-email-attachment",
      "summary": "Finds a specific email message and retrieves a specific attachment from it.",
      "description": "Finds a specific email message and retrieves a specific attachment from it.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "metadataHeaders": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-message",
          "description": "Retrieve a specific message using its ID, requesting the full format to get payload details.",
          "operationId": "gmail.users.messages.get",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            },
            {
              "name": "format",
              "in": "query",
              "value": "$inputs.format"
            },
            {
              "name": "metadataHeaders",
              "in": "query",
              "value": "$inputs.metadataHeaders"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "messagePayload": "$response.body",
            "attachmentId": "$response.body"
          }
        },
        {
          "stepId": "get-attachment",
          "description": "Retrieve the content of a specific attachment.",
          "operationId": "gmail.users.messages.attachments.get",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "messageId",
              "in": "path",
              "value": "$inputs.messageId"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "attachmentData": "$response.body"
          }
        }
      ],
      "outputs": {
        "messagePayload": "$steps.get-message.outputs.messagePayload",
        "attachmentId": "$steps.get-message.outputs.attachmentId",
        "attachmentData": "$steps.get-attachment.outputs.attachmentData"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "organize-emails-with-new-label",
      "summary": "Creates a new label, searches for messages matching specific criteria, and applies the new label to them in batch.",
      "description": "Creates a new label, searches for messages matching specific criteria, and applies the new label to them in batch.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "create-label_body": {
            "type": "object"
          },
          "includeSpamTrash": {
            "type": "string"
          },
          "labelIds": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "q": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-label",
          "description": "Creates a new label in the user's mailbox.",
          "operationId": "gmail.users.labels.create",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-label_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "labelId": "$response.body"
          }
        },
        {
          "stepId": "search-messages",
          "description": "Lists messages matching a specific query.",
          "operationId": "gmail.users.messages.list",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "includeSpamTrash",
              "in": "query",
              "value": "$inputs.includeSpamTrash"
            },
            {
              "name": "labelIds",
              "in": "query",
              "value": "$inputs.labelIds"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "messageIds": "$response.body"
          }
        },
        {
          "stepId": "batch-apply-label",
          "description": "Applies the newly created label to the found messages.",
          "operationId": "gmail.users.messages.batchModify",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "messageIds": "$steps.search-messages.outputs.messageIds",
              "addLabelId": "$steps.create-label.outputs.labelId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "batchModifyStatus": "$response.body"
          }
        }
      ],
      "outputs": {
        "labelId": "$steps.create-label.outputs.labelId",
        "messageIds": "$steps.search-messages.outputs.messageIds",
        "batchModifyStatus": "$steps.batch-apply-label.outputs.batchModifyStatus"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "monitor-mailbox-for-new-messages",
      "summary": "Sets up push notifications for mailbox changes and retrieves the history of changes since the last check.",
      "description": "Sets up push notifications for mailbox changes and retrieves the history of changes since the last check.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "setup-watch_body": {
            "type": "object"
          },
          "historyTypes": {
            "type": "string"
          },
          "labelId": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "startHistoryId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "setup-watch",
          "description": "Register for push notifications on mailbox updates.",
          "operationId": "gmail.users.watch",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.setup-watch_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "historyId": "$response.body",
            "expiration": "$response.body"
          }
        },
        {
          "stepId": "list-history",
          "description": "Retrieve mailbox changes since the provided history ID.",
          "operationId": "gmail.users.history.list",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "historyTypes",
              "in": "query",
              "value": "$inputs.historyTypes"
            },
            {
              "name": "labelId",
              "in": "query",
              "value": "$inputs.labelId"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "startHistoryId",
              "in": "query",
              "value": "$steps.setup-watch.outputs.historyId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "historyRecords": "$response.body",
            "nextHistoryId": "$response.body"
          }
        }
      ],
      "outputs": {
        "historyId": "$steps.setup-watch.outputs.historyId",
        "expiration": "$steps.setup-watch.outputs.expiration",
        "historyRecords": "$steps.list-history.outputs.historyRecords",
        "nextHistoryId": "$steps.list-history.outputs.nextHistoryId"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "configure-vacation-responder",
      "summary": "Retrieves current vacation settings and then updates them to enable or modify the auto-reply.",
      "description": "Retrieves current vacation settings and then updates them to enable or modify the auto-reply.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "update-vacation-settings_body": {
            "type": "object"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-vacation-settings",
          "description": "Gets the current vacation responder settings.",
          "operationId": "gmail.users.settings.getVacation",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "currentVacationSettings": "$response.body"
          }
        },
        {
          "stepId": "update-vacation-settings",
          "description": "Updates the vacation responder settings (e.g., enable, set message, dates).",
          "operationId": "gmail.users.settings.updateVacation",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.update-vacation-settings_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "updatedVacationSettings": "$response.body"
          }
        }
      ],
      "outputs": {
        "currentVacationSettings": "$steps.get-vacation-settings.outputs.currentVacationSettings",
        "updatedVacationSettings": "$steps.update-vacation-settings.outputs.updatedVacationSettings"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "configure-smime-for-send-as-alias",
      "summary": "Sets up S/MIME signing/encryption for a specific custom 'From' address by uploading certificate information and setting it as the default for that alias.",
      "description": "Sets up S/MIME signing/encryption for a specific custom 'From' address by uploading certificate information and setting it as the default for that alias.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sendAsEmail": {
            "type": "string"
          },
          "insert-smime-info_body": {
            "type": "object"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "insert-smime-info",
          "description": "Uploads S/MIME configuration (certificate and key info) for a send-as alias.",
          "operationId": "gmail.users.settings.sendAs.smimeInfo.insert",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "sendAsEmail",
              "in": "path",
              "value": "$inputs.sendAsEmail"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.insert-smime-info_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "smimeInfoId": "$response.body"
          }
        },
        {
          "stepId": "set-smime-default",
          "description": "Sets the uploaded S/MIME configuration as the default for the specified send-as alias.",
          "operationId": "gmail.users.settings.sendAs.smimeInfo.setDefault",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "sendAsEmail",
              "in": "path",
              "value": "$inputs.sendAsEmail"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "setDefaultStatus": "$response.body"
          }
        }
      ],
      "outputs": {
        "smimeInfoId": "$steps.insert-smime-info.outputs.smimeInfoId",
        "setDefaultStatus": "$steps.set-smime-default.outputs.setDefaultStatus"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "import-email-and-apply-label",
      "summary": "Imports an email message into the user's mailbox using the import method (which performs scanning/classification) and then applies specific labels.",
      "description": "Imports an email message into the user's mailbox using the import method (which performs scanning/classification) and then applies specific labels.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "deleted": {
            "type": "string"
          },
          "internalDateSource": {
            "type": "string"
          },
          "neverMarkSpam": {
            "type": "string"
          },
          "processForCalendar": {
            "type": "string"
          },
          "import-message_body": {
            "type": "object"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "import-message",
          "description": "Imports a message into the user's mailbox with standard scanning.",
          "operationId": "gmail.users.messages.import",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "deleted",
              "in": "query",
              "value": "$inputs.deleted"
            },
            {
              "name": "internalDateSource",
              "in": "query",
              "value": "$inputs.internalDateSource"
            },
            {
              "name": "neverMarkSpam",
              "in": "query",
              "value": "$inputs.neverMarkSpam"
            },
            {
              "name": "processForCalendar",
              "in": "query",
              "value": "$inputs.processForCalendar"
            }
          ],
          "requestBody": {
            "contentType": "message/cpim",
            "payload": "$inputs.import-message_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "importedMessageId": "$response.body",
            "importedMessageThreadId": "$response.body"
          }
        },
        {
          "stepId": "modify-imported-message-labels",
          "description": "Applies labels to the newly imported message.",
          "operationId": "gmail.users.messages.modify",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "messageId": "$steps.import-message.outputs.importedMessageId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "modifiedMessage": "$response.body"
          }
        }
      ],
      "outputs": {
        "importedMessageId": "$steps.import-message.outputs.importedMessageId",
        "importedMessageThreadId": "$steps.import-message.outputs.importedMessageThreadId",
        "modifiedMessage": "$steps.modify-imported-message-labels.outputs.modifiedMessage"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "trash-specific-emails",
      "summary": "Searches for emails based on a query and moves the found emails to the trash.",
      "description": "Searches for emails based on a query and moves the found emails to the trash.",
      "inputs": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "includeSpamTrash": {
            "type": "string"
          },
          "labelIds": {
            "type": "string"
          },
          "maxResults": {
            "type": "string"
          },
          "pageToken": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "find-emails-to-trash",
          "description": "Lists messages matching a specific query.",
          "operationId": "gmail.users.messages.list",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "includeSpamTrash",
              "in": "query",
              "value": "$inputs.includeSpamTrash"
            },
            {
              "name": "labelIds",
              "in": "query",
              "value": "$inputs.labelIds"
            },
            {
              "name": "maxResults",
              "in": "query",
              "value": "$inputs.maxResults"
            },
            {
              "name": "pageToken",
              "in": "query",
              "value": "$inputs.pageToken"
            },
            {
              "name": "q",
              "in": "query",
              "value": "$inputs.q"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "messageIds": "$response.body"
          }
        },
        {
          "stepId": "trash-email",
          "description": "Moves a single specified message to the trash. This step would typically be looped over the IDs found in the previous step.",
          "operationId": "gmail.users.messages.trash",
          "parameters": [
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "userId",
              "in": "path",
              "value": "$inputs.userId"
            },
            {
              "name": "id",
              "in": "path",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "trashedMessage": "$response.body"
          }
        }
      ],
      "outputs": {
        "messageIds": "$steps.find-emails-to-trash.outputs.messageIds",
        "trashedMessage": "$steps.trash-email.outputs.trashedMessage"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}