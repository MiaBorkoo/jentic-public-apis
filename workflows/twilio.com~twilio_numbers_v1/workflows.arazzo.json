{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_numbers_v1/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "initiate-and-monitor-port-in-request",
      "summary": "Allows a user to create a new request to port phone numbers to Twilio and then track the overall status of the request and individual phone numbers.",
      "description": "Allows a user to create a new request to port phone numbers to Twilio and then track the overall status of the request and individual phone numbers.",
      "inputs": {
        "type": "object",
        "properties": {
          "create-port-in-request_body": {
            "type": "object"
          },
          "PortInRequestSid": {
            "type": "string"
          },
          "PhoneNumberSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-port-in-request",
          "description": "Submits a new request to port phone numbers to Twilio, including carrier information and documents.",
          "operationId": "CreatePortingPortIn",
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-port-in-request_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "port_in_request_sid": "$response.body#/port_in_request_sid",
            "phone_numbers": "$response.body#/phone_numbers"
          }
        },
        {
          "stepId": "fetch-port-in-request-status",
          "description": "Retrieves the current status of a port-in request.",
          "operationId": "FetchPortingPortIn",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "port_in_request_status": "$response.body#/port_in_request_status",
            "phone_numbers": "$response.body#/phone_numbers"
          }
        },
        {
          "stepId": "fetch-port-in-phone-number-status",
          "description": "Retrieves the detailed status of a specific phone number within a port-in request.",
          "operationId": "FetchPortingPortInPhoneNumber",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            },
            {
              "name": "PhoneNumberSid",
              "in": "path",
              "value": "$inputs.PhoneNumberSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "port_in_phone_number_status": "$response.body#/port_in_phone_number_status",
            "rejection_reason": "$response.body#/rejection_reason",
            "rejection_reason_code": "$response.body#/rejection_reason_code"
          }
        }
      ],
      "outputs": {
        "port_in_request_sid": "$steps.create-port-in-request.outputs.port_in_request_sid",
        "phone_numbers": "$steps.fetch-port-in-request-status.outputs.phone_numbers",
        "port_in_request_status": "$steps.fetch-port-in-request-status.outputs.port_in_request_status",
        "port_in_phone_number_status": "$steps.fetch-port-in-phone-number-status.outputs.port_in_phone_number_status",
        "rejection_reason": "$steps.fetch-port-in-phone-number-status.outputs.rejection_reason",
        "rejection_reason_code": "$steps.fetch-port-in-phone-number-status.outputs.rejection_reason_code"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "check-bulk-number-hosting-eligibility",
      "summary": "Allows a user to initiate a bulk eligibility check for multiple phone numbers and then retrieve the results. This is useful for large-scale number migrations.",
      "description": "Allows a user to initiate a bulk eligibility check for multiple phone numbers and then retrieve the results. This is useful for large-scale number migrations.",
      "inputs": {
        "type": "object",
        "properties": {
          "create-bulk-eligibility-check_body": {
            "type": "object"
          },
          "RequestId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-bulk-eligibility-check",
          "description": "Initiates a bulk eligibility check for a set of phone numbers.",
          "operationId": "CreateBulkEligibility",
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-bulk-eligibility-check_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "request_id": "$response.body#/request_id"
          }
        },
        {
          "stepId": "fetch-bulk-eligibility-results",
          "description": "Fetches the results of a previously initiated bulk eligibility check.",
          "operationId": "FetchBulkEligibility",
          "parameters": [
            {
              "name": "RequestId",
              "in": "path",
              "value": "$inputs.RequestId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "status": "$response.body#/status",
            "results": "$response.body#/results"
          }
        }
      ],
      "outputs": {
        "request_id": "$steps.create-bulk-eligibility-check.outputs.request_id",
        "status": "$steps.fetch-bulk-eligibility-results.outputs.status",
        "results": "$steps.fetch-bulk-eligibility-results.outputs.results"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "cancel-port-in-request",
      "summary": "Allows a user to cancel an entire port-in request that was previously initiated.",
      "description": "Allows a user to cancel an entire port-in request that was previously initiated.",
      "inputs": {
        "type": "object",
        "properties": {
          "PortInRequestSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-port-in-request-for-cancellation",
          "description": "Fetches the details of a port-in request to confirm before cancellation.",
          "operationId": "FetchPortingPortIn",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "port_in_request_sid": "$response.body#/port_in_request_sid",
            "port_in_request_status": "$response.body#/port_in_request_status"
          }
        },
        {
          "stepId": "delete-port-in-request",
          "description": "Cancels the specified port-in request.",
          "operationId": "DeletePortingPortIn",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "deletion_status": "$response.body#/deletion_status"
          }
        }
      ],
      "outputs": {
        "port_in_request_sid": "$steps.fetch-port-in-request-for-cancellation.outputs.port_in_request_sid",
        "port_in_request_status": "$steps.fetch-port-in-request-for-cancellation.outputs.port_in_request_status",
        "deletion_status": "$steps.delete-port-in-request.outputs.deletion_status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "delete-phone-number-from-port-in-request",
      "summary": "Allows a user to remove a specific phone number from an existing port-in request without canceling the entire request.",
      "description": "Allows a user to remove a specific phone number from an existing port-in request without canceling the entire request.",
      "inputs": {
        "type": "object",
        "properties": {
          "PortInRequestSid": {
            "type": "string"
          },
          "PhoneNumberSid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "fetch-port-in-request-phone-numbers",
          "description": "Fetches the details of a port-in request to identify the phone number SID to be deleted.",
          "operationId": "FetchPortingPortIn",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "port_in_request_sid": "$response.body#/port_in_request_sid",
            "phone_numbers": "$response.body#/phone_numbers"
          }
        },
        {
          "stepId": "delete-port-in-phone-number",
          "description": "Deletes a specific phone number from the port-in request.",
          "operationId": "DeletePortingPortInPhoneNumber",
          "parameters": [
            {
              "name": "PortInRequestSid",
              "in": "path",
              "value": "$inputs.PortInRequestSid"
            },
            {
              "name": "PhoneNumberSid",
              "in": "path",
              "value": "$inputs.PhoneNumberSid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "deletion_status": "$response.body#/deletion_status"
          }
        }
      ],
      "outputs": {
        "port_in_request_sid": "$steps.fetch-port-in-request-phone-numbers.outputs.port_in_request_sid",
        "phone_numbers": "$steps.fetch-port-in-request-phone-numbers.outputs.phone_numbers",
        "deletion_status": "$steps.delete-port-in-phone-number.outputs.deletion_status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "manage-signing-request-configurations",
      "summary": "Allows a user to create or update and then retrieve custom configurations for signing requests, such as LOA documents, including branding and email content.",
      "description": "Allows a user to create or update and then retrieve custom configurations for signing requests, such as LOA documents, including branding and email content.",
      "inputs": {
        "type": "object",
        "properties": {
          "create-signing-request-configuration_body": {
            "type": "object"
          },
          "Country": {
            "type": "string"
          },
          "Product": {
            "type": "string"
          },
          "PageSize": {
            "type": "string"
          },
          "Page": {
            "type": "string"
          },
          "PageToken": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-signing-request-configuration",
          "description": "Creates or updates a signing request configuration for a specific country and product.",
          "operationId": "CreateSigningRequestConfiguration",
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-signing-request-configuration_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "logo_sid": "$response.body#/logo_sid",
            "friendly_name": "$response.body#/friendly_name",
            "product": "$response.body#/product",
            "country": "$response.body#/country",
            "email_subject": "$response.body#/email_subject",
            "email_message": "$response.body#/email_message",
            "url_redirection": "$response.body#/url_redirection"
          }
        },
        {
          "stepId": "list-signing-request-configurations",
          "description": "Retrieves a list of existing signing request configurations, optionally filtered by country or product.",
          "operationId": "ListSigningRequestConfiguration",
          "parameters": [
            {
              "name": "Country",
              "in": "query",
              "value": "$inputs.Country"
            },
            {
              "name": "Product",
              "in": "query",
              "value": "$inputs.Product"
            },
            {
              "name": "PageSize",
              "in": "query",
              "value": "$inputs.PageSize"
            },
            {
              "name": "Page",
              "in": "query",
              "value": "$inputs.Page"
            },
            {
              "name": "PageToken",
              "in": "query",
              "value": "$inputs.PageToken"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "configurations": "$response.body#/configurations"
          }
        }
      ],
      "outputs": {
        "logo_sid": "$steps.create-signing-request-configuration.outputs.logo_sid",
        "friendly_name": "$steps.create-signing-request-configuration.outputs.friendly_name",
        "product": "$steps.create-signing-request-configuration.outputs.product",
        "country": "$steps.create-signing-request-configuration.outputs.country",
        "email_subject": "$steps.create-signing-request-configuration.outputs.email_subject",
        "email_message": "$steps.create-signing-request-configuration.outputs.email_message",
        "url_redirection": "$steps.create-signing-request-configuration.outputs.url_redirection",
        "configurations": "$steps.list-signing-request-configurations.outputs.configurations"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}