{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/openbanking.org.uk/confirmation-funds-openapi/4.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "funds-availability-check",
      "summary": "This workflow enables a payment service provider (CBPII) to verify if a specific amount of funds is available in a customer's account for a potential transaction. It involves creating a consent for the funds check, monitoring its authorization status, and then executing the actual funds confirmation. This is critical for real-time payment decisions, ensuring the customer has sufficient balance before a transaction is processed.",
      "description": "This workflow enables a payment service provider (CBPII) to verify if a specific amount of funds is available in a customer's account for a potential transaction. It involves creating a consent for the funds check, monitoring its authorization status, and then executing the actual funds confirmation. This is critical for real-time payment decisions, ensuring the customer has sufficient balance before a transaction is processed.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-fapi-auth-date": {
            "type": "string"
          },
          "x-fapi-customer-ip-address": {
            "type": "string"
          },
          "x-fapi-interaction-id": {
            "type": "string"
          },
          "Authorization": {
            "type": "string"
          },
          "x-customer-user-agent": {
            "type": "string"
          },
          "create-funds-confirmation-consent_body": {
            "type": "object"
          },
          "ConsentId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-funds-confirmation-consent",
          "description": "Initiates a request for a customer's consent to check funds on their specified account. The ASPSP (bank) will typically redirect the Payment Services User (PSU) for authorisation, which happens out-of-band. This step provides the unique ConsentId required for subsequent operations.",
          "operationId": "CreateFundsConfirmationConsents",
          "parameters": [
            {
              "name": "x-fapi-auth-date",
              "in": "header",
              "value": "$inputs.x-fapi-auth-date"
            },
            {
              "name": "x-fapi-customer-ip-address",
              "in": "header",
              "value": "$inputs.x-fapi-customer-ip-address"
            },
            {
              "name": "x-fapi-interaction-id",
              "in": "header",
              "value": "$inputs.x-fapi-interaction-id"
            },
            {
              "name": "Authorization",
              "in": "header",
              "value": "$inputs.Authorization"
            },
            {
              "name": "x-customer-user-agent",
              "in": "header",
              "value": "$inputs.x-customer-user-agent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-funds-confirmation-consent_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "consentId": "$response.body#/consentId",
            "consentStatus": "$response.body#/consentStatus",
            "creationDateTime": "$response.body#/creationDateTime",
            "expirationDateTime": "$response.body#/expirationDateTime",
            "debtorAccount": "$response.body#/debtorAccount"
          }
        },
        {
          "stepId": "get-funds-confirmation-consent-status",
          "description": "Retrieves the current status of the funds confirmation consent. This step is crucial to ensure the consent has been authorised by the PSU before proceeding with the actual funds check, as the funds confirmation can only proceed with an 'AUTH' (Authorised) consent.",
          "operationId": "GetFundsConfirmationConsentsConsentId",
          "parameters": [
            {
              "name": "ConsentId",
              "in": "path",
              "value": "$inputs.ConsentId"
            },
            {
              "name": "x-fapi-auth-date",
              "in": "header",
              "value": "$inputs.x-fapi-auth-date"
            },
            {
              "name": "x-fapi-customer-ip-address",
              "in": "header",
              "value": "$inputs.x-fapi-customer-ip-address"
            },
            {
              "name": "x-fapi-interaction-id",
              "in": "header",
              "value": "$inputs.x-fapi-interaction-id"
            },
            {
              "name": "Authorization",
              "in": "header",
              "value": "$inputs.Authorization"
            },
            {
              "name": "x-customer-user-agent",
              "in": "header",
              "value": "$inputs.x-customer-user-agent"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "consentStatus": "$response.body#/consentStatus",
            "creationDateTime": "$response.body#/creationDateTime",
            "expirationDateTime": "$response.body#/expirationDateTime",
            "debtorAccount": "$response.body#/debtorAccount"
          }
        },
        {
          "stepId": "perform-funds-confirmation",
          "description": "Executes the actual funds confirmation check against the customer's account using the previously authorised consent. The boolean 'FundsAvailable' indicates whether the specified amount is present in the account, allowing the payment service provider to make an informed decision.",
          "operationId": "CreateFundsConfirmations",
          "parameters": [
            {
              "name": "x-fapi-auth-date",
              "in": "header",
              "value": "$inputs.x-fapi-auth-date"
            },
            {
              "name": "x-fapi-customer-ip-address",
              "in": "header",
              "value": "$inputs.x-fapi-customer-ip-address"
            },
            {
              "name": "x-fapi-interaction-id",
              "in": "header",
              "value": "$inputs.x-fapi-interaction-id"
            },
            {
              "name": "Authorization",
              "in": "header",
              "value": "$inputs.Authorization"
            },
            {
              "name": "x-customer-user-agent",
              "in": "header",
              "value": "$inputs.x-customer-user-agent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "consentId": "$steps.create-funds-confirmation-consent.outputs.consentId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "fundsConfirmationId": "$response.body#/fundsConfirmationId",
            "fundsAvailable": "$response.body#/fundsAvailable",
            "creationDateTime": "$response.body#/creationDateTime",
            "reference": "$response.body#/reference",
            "instructedAmount": "$response.body#/instructedAmount"
          }
        }
      ],
      "outputs": {
        "consentId": "$steps.create-funds-confirmation-consent.outputs.consentId",
        "consentStatus": "$steps.get-funds-confirmation-consent-status.outputs.consentStatus",
        "creationDateTime": "$steps.perform-funds-confirmation.outputs.creationDateTime",
        "expirationDateTime": "$steps.get-funds-confirmation-consent-status.outputs.expirationDateTime",
        "debtorAccount": "$steps.get-funds-confirmation-consent-status.outputs.debtorAccount",
        "fundsConfirmationId": "$steps.perform-funds-confirmation.outputs.fundsConfirmationId",
        "fundsAvailable": "$steps.perform-funds-confirmation.outputs.fundsAvailable",
        "reference": "$steps.perform-funds-confirmation.outputs.reference",
        "instructedAmount": "$steps.perform-funds-confirmation.outputs.instructedAmount"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "revoke-funds-confirmation-consent",
      "summary": "This workflow allows a payment service provider to create a funds confirmation consent and then explicitly revoke it. This is valuable for managing consent permissions, for example, if a transaction is cancelled, the consent is no longer needed, or to comply with data privacy regulations by ensuring unnecessary consents are removed.",
      "description": "This workflow allows a payment service provider to create a funds confirmation consent and then explicitly revoke it. This is valuable for managing consent permissions, for example, if a transaction is cancelled, the consent is no longer needed, or to comply with data privacy regulations by ensuring unnecessary consents are removed.",
      "inputs": {
        "type": "object",
        "properties": {
          "x-fapi-auth-date": {
            "type": "string"
          },
          "x-fapi-customer-ip-address": {
            "type": "string"
          },
          "x-fapi-interaction-id": {
            "type": "string"
          },
          "Authorization": {
            "type": "string"
          },
          "x-customer-user-agent": {
            "type": "string"
          },
          "create-funds-confirmation-consent_body": {
            "type": "object"
          },
          "ConsentId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-funds-confirmation-consent",
          "description": "Initiates a request for a customer's consent to check funds on their specified account. This step is the prerequisite for obtaining a ConsentId that can later be revoked.",
          "operationId": "CreateFundsConfirmationConsents",
          "parameters": [
            {
              "name": "x-fapi-auth-date",
              "in": "header",
              "value": "$inputs.x-fapi-auth-date"
            },
            {
              "name": "x-fapi-customer-ip-address",
              "in": "header",
              "value": "$inputs.x-fapi-customer-ip-address"
            },
            {
              "name": "x-fapi-interaction-id",
              "in": "header",
              "value": "$inputs.x-fapi-interaction-id"
            },
            {
              "name": "Authorization",
              "in": "header",
              "value": "$inputs.Authorization"
            },
            {
              "name": "x-customer-user-agent",
              "in": "header",
              "value": "$inputs.x-customer-user-agent"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": "$inputs.create-funds-confirmation-consent_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "consentId": "$response.body#/consentId"
          }
        },
        {
          "stepId": "delete-funds-confirmation-consent",
          "description": "Deletes (revokes) a previously created funds confirmation consent using its unique ConsentId. This action terminates the validity of the consent, preventing any further funds confirmation checks against it.",
          "operationId": "DeleteFundsConfirmationConsentsConsentId",
          "parameters": [
            {
              "name": "ConsentId",
              "in": "path",
              "value": "$inputs.ConsentId"
            },
            {
              "name": "x-fapi-auth-date",
              "in": "header",
              "value": "$inputs.x-fapi-auth-date"
            },
            {
              "name": "x-fapi-customer-ip-address",
              "in": "header",
              "value": "$inputs.x-fapi-customer-ip-address"
            },
            {
              "name": "x-fapi-interaction-id",
              "in": "header",
              "value": "$inputs.x-fapi-interaction-id"
            },
            {
              "name": "Authorization",
              "in": "header",
              "value": "$inputs.Authorization"
            },
            {
              "name": "x-customer-user-agent",
              "in": "header",
              "value": "$inputs.x-customer-user-agent"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "deletionStatus": "$response.body#/deletionStatus"
          }
        }
      ],
      "outputs": {
        "consentId": "$steps.create-funds-confirmation-consent.outputs.consentId",
        "deletionStatus": "$steps.delete-funds-confirmation-consent.outputs.deletionStatus"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}