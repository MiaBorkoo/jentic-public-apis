{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/refugerestrooms.org/main/0.0.1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "iterative-restroom-search-by-criteria",
      "summary": "This workflow guides a user through different methods of searching for restrooms, allowing them to progressively refine their approach based on their evolving needs. It starts with a location-based search, then offers a date-based search, and finally a general keyword search, catering to various user preferences for finding suitable restrooms.",
      "description": "This workflow guides a user through different methods of searching for restrooms, allowing them to progressively refine their approach based on their evolving needs. It starts with a location-based search, then offers a date-based search, and finally a general keyword search, catering to various user preferences for finding suitable restrooms.",
      "inputs": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          },
          "offset": {
            "type": "string"
          },
          "ada": {
            "type": "string"
          },
          "unisex": {
            "type": "string"
          },
          "lat": {
            "type": "string"
          },
          "lng": {
            "type": "string"
          },
          "updated": {
            "type": "string"
          },
          "day": {
            "type": "string"
          },
          "month": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "query": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-by-location",
          "description": "Initiates a search for restrooms near a specified latitude and longitude. This is often the primary method for users seeking nearby facilities and can include optional ADA and unisex accessibility filters.",
          "operationId": "getV1RestroomsByLocation",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "ada",
              "in": "query",
              "value": "$inputs.ada"
            },
            {
              "name": "unisex",
              "in": "query",
              "value": "$inputs.unisex"
            },
            {
              "name": "lat",
              "in": "query",
              "value": "$inputs.lat"
            },
            {
              "name": "lng",
              "in": "query",
              "value": "$inputs.lng"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "restroom_records": "$response.body#/restroom_records"
          }
        },
        {
          "stepId": "search-by-date",
          "description": "If the location-based search is insufficient or the user is interested in recent additions/updates, this step allows searching for restrooms updated or created on or after a specific date. This step requires new date inputs (day, month, year) from the user and can maintain accessibility filters.",
          "operationId": "getV1RestroomsByDate",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "ada",
              "in": "query",
              "value": "$inputs.ada"
            },
            {
              "name": "unisex",
              "in": "query",
              "value": "$inputs.unisex"
            },
            {
              "name": "updated",
              "in": "query",
              "value": "$inputs.updated"
            },
            {
              "name": "day",
              "in": "query",
              "value": "$inputs.day"
            },
            {
              "name": "month",
              "in": "query",
              "value": "$inputs.month"
            },
            {
              "name": "year",
              "in": "query",
              "value": "$inputs.year"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "restroom_records": "$response.body#/restroom_records"
          }
        },
        {
          "stepId": "search-by-keyword",
          "description": "As a final alternative or for more specific criteria, the user can perform a full-text search using keywords. This step also respects accessibility filters and requires a new query input from the user.",
          "operationId": "getV1RestroomsSearch",
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "value": "$inputs.page"
            },
            {
              "name": "per_page",
              "in": "query",
              "value": "$inputs.per_page"
            },
            {
              "name": "offset",
              "in": "query",
              "value": "$inputs.offset"
            },
            {
              "name": "ada",
              "in": "query",
              "value": "$inputs.ada"
            },
            {
              "name": "unisex",
              "in": "query",
              "value": "$inputs.unisex"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "restroom_records": "$response.body#/restroom_records"
          }
        }
      ],
      "outputs": {
        "restroom_records": "$steps.search-by-keyword.outputs.restroom_records"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}