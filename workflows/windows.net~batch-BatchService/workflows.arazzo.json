{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/windows.net/batch-BatchService/2016-07-01.3.1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "dynamic-pool-auto-scaling-management",
      "summary": "This workflow enables users to dynamically manage the size of their compute pools using auto-scaling formulas, allowing for efficient resource allocation based on workload demands and cost optimization.",
      "description": "This workflow enables users to dynamically manage the size of their compute pools using auto-scaling formulas, allowing for efficient resource allocation based on workload demands and cost optimization.",
      "inputs": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "string"
          },
          "client-request-id": {
            "type": "string"
          },
          "return-client-request-id": {
            "type": "string"
          },
          "ocp-date": {
            "type": "string"
          },
          "api-version": {
            "type": "string"
          },
          "create-autoscale-enabled-pool_body": {
            "type": "object"
          },
          "poolId": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          },
          "If-None-Match": {
            "type": "string"
          },
          "If-Modified-Since": {
            "type": "string"
          },
          "If-Unmodified-Since": {
            "type": "string"
          },
          "$select": {
            "type": "string"
          },
          "$expand": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-autoscale-enabled-pool",
          "description": "Creates a new compute pool with automatic scaling enabled, defining an initial auto-scale formula.",
          "operationId": "Pool_Add",
          "parameters": [
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": "$inputs.create-autoscale-enabled-pool_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "poolId": "$response.body#/poolId",
            "eTag": "$response.body#/eTag"
          }
        },
        {
          "stepId": "evaluate-autoscale-formula",
          "description": "Evaluates a potential auto-scale formula against the current pool state to predict its effect without actually applying it, useful for testing and validation.",
          "operationId": "Pool_EvaluateAutoScale",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": {
              "poolId": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "autoScaleRunResults": "$response.body#/autoScaleRunResults"
          }
        },
        {
          "stepId": "enable-or-update-autoscale",
          "description": "Applies a new auto-scale formula or updates the evaluation interval for an existing auto-scaling enabled pool.",
          "operationId": "Pool_EnableAutoScale",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": {
              "poolId": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "get-pool-autoscale-status",
          "description": "Retrieves the current auto-scaling status, formula, and last evaluation results for the pool.",
          "operationId": "Pool_Get",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "$expand",
              "in": "query",
              "value": "$inputs.$expand"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "cloudPool": "$response.body#/cloudPool"
          }
        },
        {
          "stepId": "disable-autoscale",
          "description": "Disables automatic scaling for the pool, allowing for manual control over the number of compute nodes.",
          "operationId": "Pool_DisableAutoScale",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "resize-pool-manually",
          "description": "Manually adjusts the number of compute nodes in the pool after auto-scaling has been disabled.",
          "operationId": "Pool_Resize",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": {
              "poolId": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "delete-compute-pool",
          "description": "Deletes the compute pool, releasing all allocated compute nodes.",
          "operationId": "Pool_Delete",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.create-autoscale-enabled-pool.outputs.poolId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pool_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "poolId": "$steps.create-autoscale-enabled-pool.outputs.poolId",
        "eTag": "$steps.resize-pool-manually.outputs.eTag",
        "autoScaleRunResults": "$steps.evaluate-autoscale-formula.outputs.autoScaleRunResults",
        "lastModified": "$steps.resize-pool-manually.outputs.lastModified",
        "cloudPool": "$steps.get-pool-autoscale-status.outputs.cloudPool",
        "pool_data": "$steps.delete-compute-pool.outputs.pool_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "compute-node-diagnostics-and-maintenance",
      "summary": "This workflow provides a sequence of operations for diagnosing issues, managing user access, and performing maintenance on individual compute nodes within a Batch pool.",
      "description": "This workflow provides a sequence of operations for diagnosing issues, managing user access, and performing maintenance on individual compute nodes within a Batch pool.",
      "inputs": {
        "type": "object",
        "properties": {
          "$filter": {
            "type": "string"
          },
          "$select": {
            "type": "string"
          },
          "$expand": {
            "type": "string"
          },
          "maxresults": {
            "type": "string"
          },
          "timeout": {
            "type": "string"
          },
          "client-request-id": {
            "type": "string"
          },
          "return-client-request-id": {
            "type": "string"
          },
          "ocp-date": {
            "type": "string"
          },
          "api-version": {
            "type": "string"
          },
          "poolId": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "recursive": {
            "type": "string"
          },
          "nodeRebootOption": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "list-all-pools",
          "description": "Retrieves a list of all compute pools in the account to identify the target pool for node management.",
          "operationId": "Pool_List",
          "parameters": [
            {
              "name": "$filter",
              "in": "query",
              "value": "$inputs.$filter"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "$expand",
              "in": "query",
              "value": "$inputs.$expand"
            },
            {
              "name": "maxresults",
              "in": "query",
              "value": "$inputs.maxresults"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "pools": "$response.body#/pools"
          }
        },
        {
          "stepId": "list-compute-nodes-in-pool",
          "description": "Lists all compute nodes within a specified pool to identify the node requiring diagnostics or maintenance.",
          "operationId": "ComputeNode_List",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$steps.list-all-pools.outputs.pools.id"
            },
            {
              "name": "$filter",
              "in": "query",
              "value": "$inputs.$filter"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "maxresults",
              "in": "query",
              "value": "$inputs.maxresults"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "computeNodes": "$response.body#/computeNodes"
          }
        },
        {
          "stepId": "get-compute-node-details",
          "description": "Retrieves detailed information about a specific compute node, including its state, tasks, and any errors.",
          "operationId": "ComputeNode_Get",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "computeNode": "$response.body#/computeNode"
          }
        },
        {
          "stepId": "add-compute-node-user",
          "description": "Adds a temporary user account to a compute node for remote access, debugging, or administrative tasks.",
          "operationId": "ComputeNode_AddUser",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": {
              "nodeId": "$steps.list-compute-nodes-in-pool.outputs.computeNodes[0].id"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "user_data": "$response.body"
          }
        },
        {
          "stepId": "get-remote-login-settings",
          "description": "Retrieves the necessary settings (IP address and port) for establishing a remote login session (RDP/SSH) to the compute node.",
          "operationId": "ComputeNode_GetRemoteLoginSettings",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "remoteLoginIPAddress": "$response.body#/remoteLoginIPAddress",
            "remoteLoginPort": "$response.body#/remoteLoginPort"
          }
        },
        {
          "stepId": "list-node-files",
          "description": "Lists files and directories on the compute node, useful for inspecting logs or task outputs directly on the node.",
          "operationId": "File_ListFromComputeNode",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "$filter",
              "in": "query",
              "value": "$inputs.$filter"
            },
            {
              "name": "recursive",
              "in": "query",
              "value": "$inputs.recursive"
            },
            {
              "name": "maxresults",
              "in": "query",
              "value": "$inputs.maxresults"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "nodeFiles": "$response.body#/nodeFiles"
          }
        },
        {
          "stepId": "reboot-compute-node",
          "description": "Restarts the specified compute node, which can help resolve transient issues or apply system updates.",
          "operationId": "ComputeNode_Reboot",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": {
              "nodeId": "$steps.list-compute-nodes-in-pool.outputs.computeNodes[0].id",
              "nodeRebootOption": "$inputs.nodeRebootOption"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "node_data": "$response.body"
          }
        },
        {
          "stepId": "delete-compute-node-user",
          "description": "Deletes a user account from the compute node, typically used to remove temporary access accounts after maintenance.",
          "operationId": "ComputeNode_DeleteUser",
          "parameters": [
            {
              "name": "poolId",
              "in": "path",
              "value": "$inputs.poolId"
            },
            {
              "name": "nodeId",
              "in": "path",
              "value": "$steps.list-compute-nodes-in-pool.outputs.computeNodes.id"
            },
            {
              "name": "userName",
              "in": "path",
              "value": "$inputs.userName"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "user_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "pools": "$steps.list-all-pools.outputs.pools",
        "computeNodes": "$steps.list-compute-nodes-in-pool.outputs.computeNodes",
        "computeNode": "$steps.get-compute-node-details.outputs.computeNode",
        "user_data": "$steps.delete-compute-node-user.outputs.user_data",
        "remoteLoginIPAddress": "$steps.get-remote-login-settings.outputs.remoteLoginIPAddress",
        "remoteLoginPort": "$steps.get-remote-login-settings.outputs.remoteLoginPort",
        "nodeFiles": "$steps.list-node-files.outputs.nodeFiles",
        "node_data": "$steps.reboot-compute-node.outputs.node_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "scheduled-recurring-job-management",
      "summary": "This workflow enables the creation, monitoring, and control of recurring batch jobs through job schedules, automating repetitive computational tasks.",
      "description": "This workflow enables the creation, monitoring, and control of recurring batch jobs through job schedules, automating repetitive computational tasks.",
      "inputs": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "string"
          },
          "client-request-id": {
            "type": "string"
          },
          "return-client-request-id": {
            "type": "string"
          },
          "ocp-date": {
            "type": "string"
          },
          "api-version": {
            "type": "string"
          },
          "add-job-schedule_body": {
            "type": "object"
          },
          "jobScheduleId": {
            "type": "string"
          },
          "$select": {
            "type": "string"
          },
          "$expand": {
            "type": "string"
          },
          "If-Match": {
            "type": "string"
          },
          "If-None-Match": {
            "type": "string"
          },
          "If-Modified-Since": {
            "type": "string"
          },
          "If-Unmodified-Since": {
            "type": "string"
          },
          "$filter": {
            "type": "string"
          },
          "maxresults": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-job-schedule",
          "description": "Creates a new job schedule that defines when and how new jobs will be automatically created.",
          "operationId": "JobSchedule_Add",
          "parameters": [
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": "$inputs.add-job-schedule_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jobScheduleId": "$response.body#/jobScheduleId",
            "eTag": "$response.body#/eTag"
          }
        },
        {
          "stepId": "get-job-schedule-details",
          "description": "Retrieves detailed information about a specific job schedule, including its current state and execution history.",
          "operationId": "JobSchedule_Get",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "$expand",
              "in": "query",
              "value": "$inputs.$expand"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "cloudJobSchedule": "$response.body#/cloudJobSchedule"
          }
        },
        {
          "stepId": "list-jobs-from-schedule",
          "description": "Lists all jobs that have been created under the specified job schedule, allowing for monitoring of past and current scheduled runs.",
          "operationId": "Job_ListFromJobSchedule",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "$filter",
              "in": "query",
              "value": "$inputs.$filter"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "$expand",
              "in": "query",
              "value": "$inputs.$expand"
            },
            {
              "name": "maxresults",
              "in": "query",
              "value": "$inputs.maxresults"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "jobs": "$response.body#/jobs"
          }
        },
        {
          "stepId": "disable-job-schedule",
          "description": "Temporarily disables a job schedule, preventing new jobs from being created until it is re-enabled.",
          "operationId": "JobSchedule_Disable",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "enable-job-schedule",
          "description": "Re-enables a previously disabled job schedule, allowing it to resume creating new jobs according to its defined schedule.",
          "operationId": "JobSchedule_Enable",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "terminate-job-schedule",
          "description": "Terminates a job schedule, stopping any future job creation and marking the schedule as completed.",
          "operationId": "JobSchedule_Terminate",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "delete-job-schedule",
          "description": "Deletes the job schedule and all associated jobs and tasks created by it.",
          "operationId": "JobSchedule_Delete",
          "parameters": [
            {
              "name": "jobScheduleId",
              "in": "path",
              "value": "$steps.add-job-schedule.outputs.jobScheduleId"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "If-Match",
              "in": "header",
              "value": "$inputs.If-Match"
            },
            {
              "name": "If-None-Match",
              "in": "header",
              "value": "$inputs.If-None-Match"
            },
            {
              "name": "If-Modified-Since",
              "in": "header",
              "value": "$inputs.If-Modified-Since"
            },
            {
              "name": "If-Unmodified-Since",
              "in": "header",
              "value": "$inputs.If-Unmodified-Since"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "schedule_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "jobScheduleId": "$steps.add-job-schedule.outputs.jobScheduleId",
        "eTag": "$steps.terminate-job-schedule.outputs.eTag",
        "cloudJobSchedule": "$steps.get-job-schedule-details.outputs.cloudJobSchedule",
        "jobs": "$steps.list-jobs-from-schedule.outputs.jobs",
        "lastModified": "$steps.terminate-job-schedule.outputs.lastModified",
        "schedule_data": "$steps.delete-job-schedule.outputs.schedule_data"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "certificate-lifecycle-and-deletion-recovery",
      "summary": "This workflow manages the full lifecycle of certificates within the Batch service, including adding, listing, retrieving details, attempting deletion, and recovering from failed deletion attempts.",
      "description": "This workflow manages the full lifecycle of certificates within the Batch service, including adding, listing, retrieving details, attempting deletion, and recovering from failed deletion attempts.",
      "inputs": {
        "type": "object",
        "properties": {
          "timeout": {
            "type": "string"
          },
          "client-request-id": {
            "type": "string"
          },
          "return-client-request-id": {
            "type": "string"
          },
          "ocp-date": {
            "type": "string"
          },
          "api-version": {
            "type": "string"
          },
          "add-certificate_body": {
            "type": "object"
          },
          "$filter": {
            "type": "string"
          },
          "$select": {
            "type": "string"
          },
          "maxresults": {
            "type": "string"
          },
          "thumbprintAlgorithm": {
            "type": "string"
          },
          "thumbprint": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-certificate",
          "description": "Adds a new certificate to the Batch account, which can then be installed on compute nodes.",
          "operationId": "Certificate_Add",
          "parameters": [
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "requestBody": {
            "contentType": "application/json; odata=minimalmetadata",
            "payload": "$inputs.add-certificate_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificateId": "$response.body#/certificateId",
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "list-certificates",
          "description": "Retrieves a list of all certificates currently available in the Batch account.",
          "operationId": "Certificate_List",
          "parameters": [
            {
              "name": "$filter",
              "in": "query",
              "value": "$inputs.$filter"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "maxresults",
              "in": "query",
              "value": "$inputs.maxresults"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificates": "$response.body#/certificates"
          }
        },
        {
          "stepId": "get-certificate-details",
          "description": "Gets detailed information about a specific certificate using its thumbprint and algorithm.",
          "operationId": "Certificate_Get",
          "parameters": [
            {
              "name": "thumbprintAlgorithm",
              "in": "path",
              "value": "$inputs.thumbprintAlgorithm"
            },
            {
              "name": "thumbprint",
              "in": "path",
              "value": "$inputs.thumbprint"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificate": "$response.body#/certificate"
          }
        },
        {
          "stepId": "attempt-delete-certificate",
          "description": "Attempts to delete a certificate. This operation might fail if the certificate is still in use by pools or compute nodes.",
          "operationId": "Certificate_Delete",
          "parameters": [
            {
              "name": "thumbprintAlgorithm",
              "in": "path",
              "value": "$inputs.thumbprintAlgorithm"
            },
            {
              "name": "thumbprint",
              "in": "path",
              "value": "$inputs.thumbprint"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificate_data": "$response.body"
          }
        },
        {
          "stepId": "get-certificate-status-after-delete",
          "description": "Checks the status of the certificate after a deletion attempt, particularly to see if it's in a 'deletefailed' state.",
          "operationId": "Certificate_Get",
          "parameters": [
            {
              "name": "thumbprintAlgorithm",
              "in": "path",
              "value": "$inputs.thumbprintAlgorithm"
            },
            {
              "name": "thumbprint",
              "in": "path",
              "value": "$inputs.thumbprint"
            },
            {
              "name": "$select",
              "in": "query",
              "value": "$inputs.$select"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificateStatus": "$response.body#/certificateStatus",
            "deleteError": "$response.body#/deleteError"
          }
        },
        {
          "stepId": "cancel-failed-deletion",
          "description": "Cancels a previously failed certificate deletion, setting the certificate's status back to 'active' so it can be used again or prepared for a proper deletion.",
          "operationId": "Certificate_CancelDeletion",
          "parameters": [
            {
              "name": "thumbprintAlgorithm",
              "in": "path",
              "value": "$inputs.thumbprintAlgorithm"
            },
            {
              "name": "thumbprint",
              "in": "path",
              "value": "$inputs.thumbprint"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "eTag": "$response.body#/eTag",
            "lastModified": "$response.body#/lastModified"
          }
        },
        {
          "stepId": "final-delete-certificate",
          "description": "Performs the final deletion of the certificate, assuming all dependencies (pools, nodes) have been removed.",
          "operationId": "Certificate_Delete",
          "parameters": [
            {
              "name": "thumbprintAlgorithm",
              "in": "path",
              "value": "$inputs.thumbprintAlgorithm"
            },
            {
              "name": "thumbprint",
              "in": "path",
              "value": "$inputs.thumbprint"
            },
            {
              "name": "timeout",
              "in": "query",
              "value": "$inputs.timeout"
            },
            {
              "name": "client-request-id",
              "in": "header",
              "value": "$inputs.client-request-id"
            },
            {
              "name": "return-client-request-id",
              "in": "header",
              "value": "$inputs.return-client-request-id"
            },
            {
              "name": "ocp-date",
              "in": "header",
              "value": "$inputs.ocp-date"
            },
            {
              "name": "api-version",
              "in": "query",
              "value": "$inputs.api-version"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "certificate_data": "$response.body"
          }
        }
      ],
      "outputs": {
        "certificateId": "$steps.add-certificate.outputs.certificateId",
        "eTag": "$steps.cancel-failed-deletion.outputs.eTag",
        "lastModified": "$steps.cancel-failed-deletion.outputs.lastModified",
        "certificates": "$steps.list-certificates.outputs.certificates",
        "certificate": "$steps.get-certificate-details.outputs.certificate",
        "certificate_data": "$steps.final-delete-certificate.outputs.certificate_data",
        "certificateStatus": "$steps.get-certificate-status-after-delete.outputs.certificateStatus",
        "deleteError": "$steps.get-certificate-status-after-delete.outputs.deleteError"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}