{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/quotes.rest/main/5.1/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "create-and-retrieve-custom-quote-image",
      "summary": "Searches for a quote based on criteria (e.g., author) and then generates a customized image for that quote, finally retrieving the image details.",
      "description": "Searches for a quote based on criteria (e.g., author) and then generates a customized image for that quote, finally retrieving the image details.",
      "inputs": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "minlength": {
            "type": "string"
          },
          "maxlength": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "private": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sfw": {
            "type": "string"
          },
          "quote_id": {
            "type": "string"
          },
          "bgimage_id": {
            "type": "string"
          },
          "bg_color": {
            "type": "string"
          },
          "font_id": {
            "type": "string"
          },
          "text_color": {
            "type": "string"
          },
          "text_size": {
            "type": "string"
          },
          "halign": {
            "type": "string"
          },
          "valign": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "branding": {
            "type": "string"
          },
          "include_transparent_layer": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "binary": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-quote-for-image",
          "description": "Search for a quote by author or keyword.",
          "operationPath": "openapi_source#/paths/~1quote~1search/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "author",
              "in": "query",
              "value": "$inputs.author"
            },
            {
              "name": "minlength",
              "in": "query",
              "value": "$inputs.minlength"
            },
            {
              "name": "maxlength",
              "in": "query",
              "value": "$inputs.maxlength"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "private",
              "in": "query",
              "value": "$inputs.private"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sfw",
              "in": "query",
              "value": "$inputs.sfw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quote_id": "$response.body",
            "quote_text": "$response.body",
            "quote_author": "$response.body"
          }
        },
        {
          "stepId": "create-quote-image",
          "description": "Generate a new image for the selected quote with custom settings.",
          "operationPath": "openapi_source#/paths/~1quote~1image/put",
          "parameters": [
            {
              "name": "quote_id",
              "in": "query",
              "value": "$inputs.quote_id"
            },
            {
              "name": "bgimage_id",
              "in": "query",
              "value": "$inputs.bgimage_id"
            },
            {
              "name": "bg_color",
              "in": "query",
              "value": "$inputs.bg_color"
            },
            {
              "name": "font_id",
              "in": "query",
              "value": "$inputs.font_id"
            },
            {
              "name": "text_color",
              "in": "query",
              "value": "$inputs.text_color"
            },
            {
              "name": "text_size",
              "in": "query",
              "value": "$inputs.text_size"
            },
            {
              "name": "halign",
              "in": "query",
              "value": "$inputs.halign"
            },
            {
              "name": "valign",
              "in": "query",
              "value": "$inputs.valign"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "branding",
              "in": "query",
              "value": "$inputs.branding"
            },
            {
              "name": "include_transparent_layer",
              "in": "query",
              "value": "$inputs.include_transparent_layer"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "image_id": "$response.body"
          }
        },
        {
          "stepId": "get-quote-image-details",
          "description": "Retrieve the details (like download URI) of the generated quote image.",
          "operationPath": "openapi_source#/paths/~1quote~1image/get",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "binary",
              "in": "query",
              "value": "$inputs.binary"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "image_details": "$response.body",
            "download_uri": "$response.body",
            "permalink": "$response.body"
          }
        }
      ],
      "outputs": {
        "quote_id": "$steps.search-quote-for-image.outputs.quote_id",
        "quote_text": "$steps.search-quote-for-image.outputs.quote_text",
        "quote_author": "$steps.search-quote-for-image.outputs.quote_author",
        "image_id": "$steps.create-quote-image.outputs.image_id",
        "image_details": "$steps.get-quote-image-details.outputs.image_details",
        "download_uri": "$steps.get-quote-image-details.outputs.download_uri",
        "permalink": "$steps.get-quote-image-details.outputs.permalink"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "customize-quote-image-with-uploaded-assets",
      "summary": "Uploads a custom background image and font, finds a quote, generates an image using these custom assets, and retrieves the final image details.",
      "description": "Uploads a custom background image and font, finds a quote, generates an image using these custom assets, and retrieves the final image details.",
      "inputs": {
        "type": "object",
        "properties": {
          "upload-background-image_body": {
            "type": "object"
          },
          "upload-custom-font_body": {
            "type": "object"
          },
          "language": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "quote_id": {
            "type": "string"
          },
          "bgimage_id": {
            "type": "string"
          },
          "bg_color": {
            "type": "string"
          },
          "font_id": {
            "type": "string"
          },
          "text_color": {
            "type": "string"
          },
          "text_size": {
            "type": "string"
          },
          "halign": {
            "type": "string"
          },
          "valign": {
            "type": "string"
          },
          "width": {
            "type": "string"
          },
          "height": {
            "type": "string"
          },
          "branding": {
            "type": "string"
          },
          "include_transparent_layer": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "binary": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "upload-background-image",
          "description": "Upload a custom background image.",
          "operationPath": "openapi_source#/paths/~1quote~1image~1background/post",
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": "$inputs.upload-background-image_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "bgimage_id": "$response.body"
          }
        },
        {
          "stepId": "upload-custom-font",
          "description": "Upload a custom font file.",
          "operationPath": "openapi_source#/paths/~1quote~1image~1font/post",
          "requestBody": {
            "contentType": "multipart/form-data",
            "payload": "$inputs.upload-custom-font_body"
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "font_id": "$response.body"
          }
        },
        {
          "stepId": "find-random-quote",
          "description": "Get a random quote to use for the image.",
          "operationPath": "openapi_source#/paths/~1quote~1random/get",
          "parameters": [
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quote_id": "$response.body"
          }
        },
        {
          "stepId": "create-fully-custom-image",
          "description": "Generate a quote image using the uploaded background and font.",
          "operationPath": "openapi_source#/paths/~1quote~1image/put",
          "parameters": [
            {
              "name": "quote_id",
              "in": "query",
              "value": "$inputs.quote_id"
            },
            {
              "name": "bgimage_id",
              "in": "query",
              "value": "$inputs.bgimage_id"
            },
            {
              "name": "bg_color",
              "in": "query",
              "value": "$inputs.bg_color"
            },
            {
              "name": "font_id",
              "in": "query",
              "value": "$inputs.font_id"
            },
            {
              "name": "text_color",
              "in": "query",
              "value": "$inputs.text_color"
            },
            {
              "name": "text_size",
              "in": "query",
              "value": "$inputs.text_size"
            },
            {
              "name": "halign",
              "in": "query",
              "value": "$inputs.halign"
            },
            {
              "name": "valign",
              "in": "query",
              "value": "$inputs.valign"
            },
            {
              "name": "width",
              "in": "query",
              "value": "$inputs.width"
            },
            {
              "name": "height",
              "in": "query",
              "value": "$inputs.height"
            },
            {
              "name": "branding",
              "in": "query",
              "value": "$inputs.branding"
            },
            {
              "name": "include_transparent_layer",
              "in": "query",
              "value": "$inputs.include_transparent_layer"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "image_id": "$response.body"
          }
        },
        {
          "stepId": "get-fully-custom-image-details",
          "description": "Retrieve the details of the generated image.",
          "operationPath": "openapi_source#/paths/~1quote~1image/get",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "binary",
              "in": "query",
              "value": "$inputs.binary"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "image_details": "$response.body",
            "download_uri": "$response.body"
          }
        }
      ],
      "outputs": {
        "bgimage_id": "$steps.upload-background-image.outputs.bgimage_id",
        "font_id": "$steps.upload-custom-font.outputs.font_id",
        "quote_id": "$steps.find-random-quote.outputs.quote_id",
        "image_id": "$steps.create-fully-custom-image.outputs.image_id",
        "image_details": "$steps.get-fully-custom-image-details.outputs.image_details",
        "download_uri": "$steps.get-fully-custom-image-details.outputs.download_uri"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "display-daily-quote-by-category",
      "summary": "Retrieves the available Quote of the Day (QOD) categories and then fetches the QOD for a specific category. Useful for displaying a themed daily quote.",
      "description": "Retrieves the available Quote of the Day (QOD) categories and then fetches the QOD for a specific category. Useful for displaying a themed daily quote.",
      "inputs": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "detailed": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-qod-categories",
          "description": "Retrieve the list of available QOD categories.",
          "operationPath": "openapi_source#/paths/~1qod~1categories/get",
          "parameters": [
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "detailed",
              "in": "query",
              "value": "$inputs.detailed"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "categories": "$response.body"
          }
        },
        {
          "stepId": "get-specific-qod",
          "description": "Get the Quote of the Day for a chosen category.",
          "operationPath": "openapi_source#/paths/~1qod/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "qod_quote": "$response.body",
            "qod_author": "$response.body",
            "qod_date": "$response.body",
            "qod_title": "$response.body"
          }
        }
      ],
      "outputs": {
        "categories": "$steps.get-qod-categories.outputs.categories",
        "qod_quote": "$steps.get-specific-qod.outputs.qod_quote",
        "qod_author": "$steps.get-specific-qod.outputs.qod_author",
        "qod_date": "$steps.get-specific-qod.outputs.qod_date",
        "qod_title": "$steps.get-specific-qod.outputs.qod_title"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "build-and-populate-themed-quote-collection-qshow",
      "summary": "Creates a new Qshow (quote collection), searches for quotes matching a theme, adds them to the Qshow, and retrieves the final collection content.",
      "description": "Creates a new Qshow (quote collection), searches for quotes matching a theme, adds them to the Qshow, and retrieves the final collection content.",
      "inputs": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "minlength": {
            "type": "string"
          },
          "maxlength": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "private": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sfw": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "quoteid": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "create-qshow",
          "description": "Create a new private quote collection (Qshow).",
          "operationPath": "openapi_source#/paths/~1qshow/put",
          "parameters": [
            {
              "name": "title",
              "in": "query",
              "value": "$inputs.title"
            },
            {
              "name": "description",
              "in": "query",
              "value": "$inputs.description"
            },
            {
              "name": "tags",
              "in": "query",
              "value": "$inputs.tags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "qshow_id": "$response.body"
          }
        },
        {
          "stepId": "find-themed-quotes",
          "description": "Search for public or private quotes matching the Qshow theme.",
          "operationPath": "openapi_source#/paths/~1quote~1search/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "author",
              "in": "query",
              "value": "$inputs.author"
            },
            {
              "name": "minlength",
              "in": "query",
              "value": "$inputs.minlength"
            },
            {
              "name": "maxlength",
              "in": "query",
              "value": "$inputs.maxlength"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "private",
              "in": "query",
              "value": "$inputs.private"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sfw",
              "in": "query",
              "value": "$inputs.sfw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quote_ids": "$response.body"
          }
        },
        {
          "stepId": "add-quote-to-qshow",
          "description": "Add a found quote to the created Qshow.",
          "operationPath": "openapi_source#/paths/~1qshow~1quotes~1add/post",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "quoteid",
              "in": "query",
              "value": "$inputs.quoteid"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "add_status": "$response.body"
          }
        },
        {
          "stepId": "view-qshow-content",
          "description": "Retrieve the details and quotes within the populated Qshow.",
          "operationPath": "openapi_source#/paths/~1qshow~1quotes/get",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "qshow_details": "$response.body",
            "qshow_quotes": "$response.body"
          }
        }
      ],
      "outputs": {
        "qshow_id": "$steps.create-qshow.outputs.qshow_id",
        "quote_ids": "$steps.find-themed-quotes.outputs.quote_ids",
        "add_status": "$steps.add-quote-to-qshow.outputs.add_status",
        "qshow_details": "$steps.view-qshow-content.outputs.qshow_details",
        "qshow_quotes": "$steps.view-qshow-content.outputs.qshow_quotes"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "set-up-and-retrieve-private-quote-of-the-day",
      "summary": "Defines a new private Quote of the Day service based on specific criteria (e.g., using only private quotes or specific authors) and then retrieves the quote generated by this service for the current day.",
      "description": "Defines a new private Quote of the Day service based on specific criteria (e.g., using only private quotes or specific authors) and then retrieves the quote generated by this service for the current day.",
      "inputs": {
        "type": "object",
        "properties": {
          "repeat_after": {
            "type": "string"
          },
          "authors": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "private": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "sfw": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "define-private-qod",
          "description": "Create a private QOD definition with specific filters.",
          "operationPath": "openapi_source#/paths/~1qod/put",
          "parameters": [
            {
              "name": "repeat_after",
              "in": "query",
              "value": "$inputs.repeat_after"
            },
            {
              "name": "authors",
              "in": "query",
              "value": "$inputs.authors"
            },
            {
              "name": "title",
              "in": "query",
              "value": "$inputs.title"
            },
            {
              "name": "private",
              "in": "query",
              "value": "$inputs.private"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "sfw",
              "in": "query",
              "value": "$inputs.sfw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "private_qod_definition_id": "$response.body"
          }
        },
        {
          "stepId": "get-private-qod",
          "description": "Retrieve the quote of the day based on the private definition.",
          "operationPath": "openapi_source#/paths/~1qod/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "id",
              "in": "query",
              "value": "$steps.define-private-qod.outputs.private_qod_definition_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "qod_quote": "$response.body",
            "qod_author": "$response.body",
            "qod_date": "$response.body"
          }
        }
      ],
      "outputs": {
        "private_qod_definition_id": "$steps.define-private-qod.outputs.private_qod_definition_id",
        "qod_quote": "$steps.get-private-qod.outputs.qod_quote",
        "qod_author": "$steps.get-private-qod.outputs.qod_author",
        "qod_date": "$steps.get-private-qod.outputs.qod_date"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "add-and-tag-a-private-quote",
      "summary": "Adds a new quote to the user's private collection and then adds organizational tags to it.",
      "description": "Adds a new quote to the user's private collection and then adds organizational tags to it.",
      "inputs": {
        "type": "object",
        "properties": {
          "quote": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "tags": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "add-private-quote",
          "description": "Add a new quote to the private collection.",
          "operationPath": "openapi_source#/paths/~1quote/put",
          "parameters": [
            {
              "name": "quote",
              "in": "query",
              "value": "$inputs.quote"
            },
            {
              "name": "author",
              "in": "query",
              "value": "$inputs.author"
            },
            {
              "name": "tags",
              "in": "query",
              "value": "$inputs.tags"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quote_id": "$response.body"
          }
        },
        {
          "stepId": "add-tags-to-private-quote",
          "description": "Add specific tags to the newly created private quote.",
          "operationPath": "openapi_source#/paths/~1quote~1tags~1add/post",
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "value": "$inputs.id"
            },
            {
              "name": "tags",
              "in": "query",
              "value": "$inputs.tags"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "tag_add_status": "$response.body"
          }
        }
      ],
      "outputs": {
        "quote_id": "$steps.add-private-quote.outputs.quote_id",
        "tag_add_status": "$steps.add-tags-to-private-quote.outputs.tag_add_status"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "discover-quotes-by-author",
      "summary": "Searches for authors based on a query, retrieves detailed information about a popular or specific author, and then searches for quotes by that author.",
      "description": "Searches for authors based on a query, retrieves detailed information about a popular or specific author, and then searches for quotes by that author.",
      "inputs": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "detailed": {
            "type": "string"
          },
          "start": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "minlength": {
            "type": "string"
          },
          "maxlength": {
            "type": "string"
          },
          "private": {
            "type": "string"
          },
          "sfw": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-authors",
          "description": "Search for authors matching a query string.",
          "operationPath": "openapi_source#/paths/~1quote~1authors~1search/get",
          "parameters": [
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "detailed",
              "in": "query",
              "value": "$inputs.detailed"
            },
            {
              "name": "start",
              "in": "query",
              "value": "$inputs.start"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "authors_list": "$response.body",
            "author_slugs": "$response.body"
          }
        },
        {
          "stepId": "get-quotes-by-author",
          "description": "Search for quotes written by the author found in the previous step.",
          "operationPath": "openapi_source#/paths/~1quote~1search/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "author",
              "in": "query",
              "value": "$inputs.author"
            },
            {
              "name": "minlength",
              "in": "query",
              "value": "$inputs.minlength"
            },
            {
              "name": "maxlength",
              "in": "query",
              "value": "$inputs.maxlength"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "private",
              "in": "query",
              "value": "$inputs.private"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sfw",
              "in": "query",
              "value": "$inputs.sfw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quotes_list": "$response.body"
          }
        }
      ],
      "outputs": {
        "authors_list": "$steps.search-authors.outputs.authors_list",
        "author_slugs": "$steps.search-authors.outputs.author_slugs",
        "quotes_list": "$steps.get-quotes-by-author.outputs.quotes_list"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "find-and-like-author-quote",
      "summary": "Searches for quotes by a specific author and then allows the user to 'like' one of the found quotes.",
      "description": "Searches for quotes by a specific author and then allows the user to 'like' one of the found quotes.",
      "inputs": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "minlength": {
            "type": "string"
          },
          "maxlength": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "private": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "sfw": {
            "type": "string"
          },
          "quote_id": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "search-quotes-by-author",
          "description": "Find quotes attributed to a specific author.",
          "operationPath": "openapi_source#/paths/~1quote~1search/get",
          "parameters": [
            {
              "name": "category",
              "in": "query",
              "value": "$inputs.category"
            },
            {
              "name": "author",
              "in": "query",
              "value": "$inputs.author"
            },
            {
              "name": "minlength",
              "in": "query",
              "value": "$inputs.minlength"
            },
            {
              "name": "maxlength",
              "in": "query",
              "value": "$inputs.maxlength"
            },
            {
              "name": "query",
              "in": "query",
              "value": "$inputs.query"
            },
            {
              "name": "private",
              "in": "query",
              "value": "$inputs.private"
            },
            {
              "name": "language",
              "in": "query",
              "value": "$inputs.language"
            },
            {
              "name": "limit",
              "in": "query",
              "value": "$inputs.limit"
            },
            {
              "name": "sfw",
              "in": "query",
              "value": "$inputs.sfw"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "quote_ids": "$response.body",
            "quotes": "$response.body"
          }
        },
        {
          "stepId": "like-author-quote",
          "description": "Toggle the like status for a specific quote found in the previous step.",
          "operationPath": "openapi_source#/paths/~1quote~1like~1toggle/get",
          "parameters": [
            {
              "name": "quote_id",
              "in": "query",
              "value": "$inputs.quote_id"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "like_status": "$response.body",
            "hasLikedBefore": "$response.body"
          }
        }
      ],
      "outputs": {
        "quote_ids": "$steps.search-quotes-by-author.outputs.quote_ids",
        "quotes": "$steps.search-quotes-by-author.outputs.quotes",
        "like_status": "$steps.like-author-quote.outputs.like_status",
        "hasLikedBefore": "$steps.like-author-quote.outputs.hasLikedBefore"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}