{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/googleapis.com/language/v2/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "analyze-feedback-sentiment-and-entities",
      "summary": "Analyzes a piece of text (e.g., customer review, comment) to determine the overall sentiment and identify the key entities mentioned. Useful for understanding customer feedback themes and opinions.",
      "description": "Analyzes a piece of text (e.g., customer review, comment) to determine the overall sentiment and identify the key entities mentioned. Useful for understanding customer feedback themes and opinions.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "encodingType": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-sentiment",
          "description": "Analyzes the sentiment of the input document.",
          "operationId": "language.documents.analyzeSentiment",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "document": "$inputs.document",
              "encodingType": "$inputs.encodingType"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "documentSentiment": "$response.body",
            "sentences": "$response.body",
            "languageCode": "$response.body",
            "languageSupported": "$response.body"
          }
        },
        {
          "stepId": "get-entities",
          "description": "Identifies named entities within the same input document.",
          "operationId": "language.documents.analyzeEntities",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "document": "$inputs.document",
              "encodingType": "$inputs.encodingType"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "entities": "$response.body",
            "languageCode": "$response.body",
            "languageSupported": "$response.body"
          }
        }
      ],
      "outputs": {
        "documentSentiment": "$steps.get-sentiment.outputs.documentSentiment",
        "sentences": "$steps.get-sentiment.outputs.sentences",
        "languageCode": "$steps.get-entities.outputs.languageCode",
        "languageSupported": "$steps.get-entities.outputs.languageSupported",
        "entities": "$steps.get-entities.outputs.entities"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    },
    {
      "workflowId": "moderate-and-classify-content",
      "summary": "First checks input text for harmful or sensitive content, then classifies the text into relevant categories. Useful for content filtering and organization pipelines where safety is checked before categorization.",
      "description": "First checks input text for harmful or sensitive content, then classifies the text into relevant categories. Useful for content filtering and organization pipelines where safety is checked before categorization.",
      "inputs": {
        "type": "object",
        "properties": {
          "alt": {
            "type": "string"
          },
          "callback": {
            "type": "string"
          },
          "oauth_token": {
            "type": "string"
          },
          "$.xgafv": {
            "type": "string"
          },
          "uploadType": {
            "type": "string"
          },
          "upload_protocol": {
            "type": "string"
          },
          "access_token": {
            "type": "string"
          },
          "fields": {
            "type": "string"
          },
          "quotaUser": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "prettyPrint": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "modelVersion": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "check-content-safety",
          "description": "Moderates the input document for harmful/sensitive categories.",
          "operationId": "language.documents.moderateText",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "document": "$inputs.document",
              "modelVersion": "$inputs.modelVersion"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "moderationCategories": "$response.body",
            "languageCode": "$response.body",
            "languageSupported": "$response.body"
          }
        },
        {
          "stepId": "classify-content-topic",
          "description": "Classifies the same input document into categories. This step would typically only be performed if the 'check-content-safety' step indicates the content is acceptable.",
          "operationId": "language.documents.classifyText",
          "parameters": [
            {
              "name": "alt",
              "in": "query",
              "value": "$inputs.alt"
            },
            {
              "name": "callback",
              "in": "query",
              "value": "$inputs.callback"
            },
            {
              "name": "oauth_token",
              "in": "query",
              "value": "$inputs.oauth_token"
            },
            {
              "name": "$.xgafv",
              "in": "query",
              "value": "$inputs.$.xgafv"
            },
            {
              "name": "uploadType",
              "in": "query",
              "value": "$inputs.uploadType"
            },
            {
              "name": "upload_protocol",
              "in": "query",
              "value": "$inputs.upload_protocol"
            },
            {
              "name": "access_token",
              "in": "query",
              "value": "$inputs.access_token"
            },
            {
              "name": "fields",
              "in": "query",
              "value": "$inputs.fields"
            },
            {
              "name": "quotaUser",
              "in": "query",
              "value": "$inputs.quotaUser"
            },
            {
              "name": "key",
              "in": "query",
              "value": "$inputs.key"
            },
            {
              "name": "prettyPrint",
              "in": "query",
              "value": "$inputs.prettyPrint"
            }
          ],
          "requestBody": {
            "contentType": "application/json",
            "payload": {
              "document": "$inputs.document"
            }
          },
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "categories": "$response.body",
            "languageCode": "$response.body",
            "languageSupported": "$response.body"
          }
        }
      ],
      "outputs": {
        "moderationCategories": "$steps.check-content-safety.outputs.moderationCategories",
        "languageCode": "$steps.classify-content-topic.outputs.languageCode",
        "languageSupported": "$steps.classify-content-topic.outputs.languageSupported",
        "categories": "$steps.classify-content-topic.outputs.categories"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}