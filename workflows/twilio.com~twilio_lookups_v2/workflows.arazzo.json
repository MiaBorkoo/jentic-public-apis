{
  "arazzo": "1.0.1",
  "info": {
    "title": "Jentic Generated Arazzo Specification",
    "version": "1.0.0",
    "description": "Automatically generated Arazzo specification from OpenAPI"
  },
  "sourceDescriptions": [
    {
      "name": "openapi_source",
      "url": "./apis/openapi/twilio.com/twilio_lookups_v2/1.0.0/openapi.json",
      "type": "openapi"
    }
  ],
  "workflows": [
    {
      "workflowId": "progressive-phone-number-data-enrichment",
      "summary": "Gathers comprehensive information about a phone number in multiple steps. It starts with basic validation and line type intelligence, then proceeds to more advanced fraud-related signals. This workflow is valuable for applications that need to progressively enrich phone number data, potentially performing initial checks before incurring costs for more detailed or sensitive lookups.",
      "description": "Gathers comprehensive information about a phone number in multiple steps. It starts with basic validation and line type intelligence, then proceeds to more advanced fraud-related signals. This workflow is valuable for applications that need to progressively enrich phone number data, potentially performing initial checks before incurring costs for more detailed or sensitive lookups.",
      "inputs": {
        "type": "object",
        "properties": {
          "PhoneNumber": {
            "type": "string"
          },
          "Fields": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "AddressLine1": {
            "type": "string"
          },
          "AddressLine2": {
            "type": "string"
          },
          "City": {
            "type": "string"
          },
          "State": {
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "AddressCountryCode": {
            "type": "string"
          },
          "NationalId": {
            "type": "string"
          },
          "DateOfBirth": {
            "type": "string"
          },
          "LastVerifiedDate": {
            "type": "string"
          },
          "VerificationSid": {
            "type": "string"
          },
          "PartnerSubId": {
            "type": "string"
          }
        }
      },
      "steps": [
        {
          "stepId": "get-basic-phone-data",
          "description": "Fetches basic validation status, line type intelligence, and the canonical E.164 formatted phone number. This step is useful for initial screening and understanding the fundamental characteristics of a phone number.",
          "operationId": "FetchPhoneNumber",
          "parameters": [
            {
              "name": "PhoneNumber",
              "in": "path",
              "value": "$inputs.PhoneNumber"
            },
            {
              "name": "Fields",
              "in": "query",
              "value": "$inputs.Fields"
            },
            {
              "name": "CountryCode",
              "in": "query",
              "value": "$inputs.CountryCode"
            },
            {
              "name": "FirstName",
              "in": "query",
              "value": "$inputs.FirstName"
            },
            {
              "name": "LastName",
              "in": "query",
              "value": "$inputs.LastName"
            },
            {
              "name": "AddressLine1",
              "in": "query",
              "value": "$inputs.AddressLine1"
            },
            {
              "name": "AddressLine2",
              "in": "query",
              "value": "$inputs.AddressLine2"
            },
            {
              "name": "City",
              "in": "query",
              "value": "$inputs.City"
            },
            {
              "name": "State",
              "in": "query",
              "value": "$inputs.State"
            },
            {
              "name": "PostalCode",
              "in": "query",
              "value": "$inputs.PostalCode"
            },
            {
              "name": "AddressCountryCode",
              "in": "query",
              "value": "$inputs.AddressCountryCode"
            },
            {
              "name": "NationalId",
              "in": "query",
              "value": "$inputs.NationalId"
            },
            {
              "name": "DateOfBirth",
              "in": "query",
              "value": "$inputs.DateOfBirth"
            },
            {
              "name": "LastVerifiedDate",
              "in": "query",
              "value": "$inputs.LastVerifiedDate"
            },
            {
              "name": "VerificationSid",
              "in": "query",
              "value": "$inputs.VerificationSid"
            },
            {
              "name": "PartnerSubId",
              "in": "query",
              "value": "$inputs.PartnerSubId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "valid": "$response.body#/valid",
            "validation_errors": "$response.body#/validation_errors",
            "line_type_intelligence": "$response.body#/line_type_intelligence",
            "phone_number": "$response.body#/phone_number"
          }
        },
        {
          "stepId": "check-fraud-signals",
          "description": "Performs advanced fraud checks including SIM swap detection, reassigned number status, SMS pumping risk assessment, and phone number quality score. This step typically follows basic validation and is crucial for identifying potential fraudulent activities associated with the phone number.",
          "operationId": "FetchPhoneNumber",
          "parameters": [
            {
              "name": "PhoneNumber",
              "in": "path",
              "value": "$steps.get-basic-phone-data.outputs.phone_number"
            },
            {
              "name": "Fields",
              "in": "query",
              "value": "$inputs.Fields"
            },
            {
              "name": "CountryCode",
              "in": "query",
              "value": "$inputs.CountryCode"
            },
            {
              "name": "FirstName",
              "in": "query",
              "value": "$inputs.FirstName"
            },
            {
              "name": "LastName",
              "in": "query",
              "value": "$inputs.LastName"
            },
            {
              "name": "AddressLine1",
              "in": "query",
              "value": "$inputs.AddressLine1"
            },
            {
              "name": "AddressLine2",
              "in": "query",
              "value": "$inputs.AddressLine2"
            },
            {
              "name": "City",
              "in": "query",
              "value": "$inputs.City"
            },
            {
              "name": "State",
              "in": "query",
              "value": "$inputs.State"
            },
            {
              "name": "PostalCode",
              "in": "query",
              "value": "$inputs.PostalCode"
            },
            {
              "name": "AddressCountryCode",
              "in": "query",
              "value": "$inputs.AddressCountryCode"
            },
            {
              "name": "NationalId",
              "in": "query",
              "value": "$inputs.NationalId"
            },
            {
              "name": "DateOfBirth",
              "in": "query",
              "value": "$inputs.DateOfBirth"
            },
            {
              "name": "LastVerifiedDate",
              "in": "query",
              "value": "$inputs.LastVerifiedDate"
            },
            {
              "name": "VerificationSid",
              "in": "query",
              "value": "$inputs.VerificationSid"
            },
            {
              "name": "PartnerSubId",
              "in": "query",
              "value": "$inputs.PartnerSubId"
            }
          ],
          "successCriteria": [
            {
              "condition": "$statusCode == 200"
            }
          ],
          "outputs": {
            "sim_swap": "$response.body#/sim_swap",
            "reassigned_number": "$response.body#/reassigned_number",
            "sms_pumping_risk": "$response.body#/sms_pumping_risk",
            "phone_number_quality_score": "$response.body#/phone_number_quality_score"
          }
        }
      ],
      "outputs": {
        "valid": "$steps.get-basic-phone-data.outputs.valid",
        "validation_errors": "$steps.get-basic-phone-data.outputs.validation_errors",
        "line_type_intelligence": "$steps.get-basic-phone-data.outputs.line_type_intelligence",
        "phone_number": "$steps.get-basic-phone-data.outputs.phone_number",
        "sim_swap": "$steps.check-fraud-signals.outputs.sim_swap",
        "reassigned_number": "$steps.check-fraud-signals.outputs.reassigned_number",
        "sms_pumping_risk": "$steps.check-fraud-signals.outputs.sms_pumping_risk",
        "phone_number_quality_score": "$steps.check-fraud-signals.outputs.phone_number_quality_score"
      },
      "failureActions": [
        {
          "reference": "$components.failureActions.auth_failure"
        },
        {
          "reference": "$components.failureActions.permission_denied"
        },
        {
          "reference": "$components.failureActions.not_found"
        },
        {
          "reference": "$components.failureActions.server_error"
        }
      ]
    }
  ],
  "components": {
    "successActions": {
      "default_success": {
        "name": "default_success",
        "type": "end"
      }
    },
    "failureActions": {
      "auth_failure": {
        "name": "auth_failure",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 401"
          }
        ]
      },
      "permission_denied": {
        "name": "permission_denied",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 403"
          }
        ]
      },
      "not_found": {
        "name": "not_found",
        "type": "end",
        "criteria": [
          {
            "condition": "$statusCode == 404"
          }
        ]
      },
      "server_error": {
        "name": "server_error",
        "type": "retry",
        "retryAfter": 2,
        "retryLimit": 3,
        "criteria": [
          {
            "condition": "$statusCode >= 500"
          }
        ]
      },
      "default_retry": {
        "name": "default_retry",
        "type": "retry",
        "retryAfter": 1,
        "retryLimit": 3
      },
      "default_failure": {
        "name": "default_failure",
        "type": "end"
      }
    }
  }
}